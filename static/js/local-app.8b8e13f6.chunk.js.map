{"version":3,"sources":["ExternalEditor/index.js","ExternalEditor/Bridge.js","ProjectCreation/LocalExamples.js","ProjectCreation/LocalStarters.js","ResourcesList/LocalResourceSources.js","ResourcesList/LocalResourceExternalEditors.js","ResourcesList/LocalPiskelBridge.js","ResourcesList/LocalJfxrBridge.js","ProjectsStorage/LocalProjectWriter.js","ProjectsStorage/LocalProjectOpener.js","Export/LocalExporters/LocalPreviewLauncher/index.js","Export/LocalExporters/LocalPreviewLauncher/LocalNetworkPreviewDialog.js","Export/LocalExporters/LocalPreviewLauncher/LocalIpFinder.js","Export/LocalExporters/index.js","Export/LocalExporters/LocalS3Export.js","../node_modules/wait-promise/src/wait-promise.js","Export/LocalExporters/LocalOnlineCordovaExport/index.js","Export/LocalExporters/LocalCordovaExport.js","Export/LocalExporters/LocalCocos2dExport.js","Export/LocalExporters/LocalOnlineElectronExport/index.js","Export/LocalExporters/LocalFacebookInstantGamesExport/index.js","UI/LocalFilePicker/index.js","Export/LocalExporters/LocalFacebookInstantGamesExport/Progress.js","Export/LocalExporters/LocalElectronExport.js","MainFrame/ElectronMainMenu.js","JsExtensionsLoader/LocalJsExtensionsLoader.js","JsExtensionsLoader/LocalJsExtensionsFinder.js","EventsFunctionsExtensionsLoader/LocalEventsFunctionWriter.js","LocalApp.js","Export/LocalExporters/LocalFileSystem.js","UI/LocalFolderPicker/index.js","Utils/Archiver.js","ProjectCreation/LocalExamplesFinder.js","ProjectCreation/LocalPathFinder.js","Export/LocalExporters/LocalExport.js","Profile/LimitDisplayer.js","Export/Builds/BuildStepsProgress.js","../node_modules/material-ui/Stepper/index.js"],"names":["gd","global","ExternalEditor","props","_this","Object","_Users_florianrival_Projects_F_GD_newIDE_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_florianrival_Projects_F_GD_newIDE_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_florianrival_Projects_F_GD_newIDE_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","editorOpened","lastShowCommandDate","sendingUpdate","editor","_serializedObject","_hideIfNotJustShown","Date","now","console","info","Window","hide","sendUpdate","log","state","loading","warn","elements","getSerializedElements","scope","hasOwnProperty","bridge","send","error","editObject","object","getName","requestUpdate","arguments","length","undefined","command","_onUpdateReceived","payload","setState","setTimeout","delete","t1","performance","Serializer","fromJSObject","t2","loadFromSerializedProject","openLayout","editedElementName","openEventsEditor","openExternalLayout","concat","Bridge","isSupported","onReceive","isIntegrated","setBounds","x","y","width","height","show","forceHide","onConnected","onBlur","onFocus","onClose","connectTo","serverPort","_this2","React","cloneElement","children","ref","onEditObject","integratedEditor","Component","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0___default","n","_Utils_TimeFunction_js__WEBPACK_IMPORTED_MODULE_1__","electron","optionalRequire","Buffer","remote","require","net","client","connected","_onReceiveCb","prototype","port","that","Socket","connect","_onConnected","data","nullCharacterBuffer","from","on","dataBuffer","startPos","nextNullCharacterPos","indexOf","slice","_receive","json","JSON","stringify","write","dataObject","timeFunction","parse","ex","time","cb","path","app","fs","LocalExamples","outputPath","findEmptyPath","join","getPath","exampleNames","_handleChangePath","createFromExample","exampleName","findExamples","examplesPath","mkdirsSync","copySync","onOpen","sendNewGameCreated","readdir","filter","name","onExamplesLoaded","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_UI_Grid__WEBPACK_IMPORTED_MODULE_10__","noMargin","_lingui_react__WEBPACK_IMPORTED_MODULE_5__","id","_ExamplesList__WEBPACK_IMPORTED_MODULE_14__","onCreateFromExample","material_ui_Divider__WEBPACK_IMPORTED_MODULE_7___default","expand","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_8__","fullWidth","value","onChange","title","message","LocalStarters","project","ProjectHelper","createNewGDJSProject","setProjectFile","onCreate","_this3","_UI_Grid__WEBPACK_IMPORTED_MODULE_11__","material_ui_List__WEBPACK_IMPORTED_MODULE_12__","primaryText","secondaryText","secondaryTextLines","onClick","createEmptyGame","alignItems","justifyContent","material_ui_RaisedButton__WEBPACK_IMPORTED_MODULE_8___default","label","onShowExamples","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_9__","dialog","__webpack_exports__","displayName","kind","component","_temp","_Component","LocalAudioFileOpener","_getPrototypeOf2","_len","args","Array","_key","apply","chooseResources","multiSelections","selectLocalResourcePath","extensions","then","resources","map","resourcePath","audioResource","AudioResource","projectPath","dirname","getProjectFile","setFile","relative","setName","_Users_florianrival_Projects_F_GD_newIDE_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_florianrival_Projects_F_GD_newIDE_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","_temp2","_Component2","LocalFileOpener","_getPrototypeOf3","_len2","_key2","imageResource","ImageResource","_temp3","_Component3","LocalFontFileOpener","_getPrototypeOf4","_len3","_key3","fontResource","FontResource","_temp4","_Component4","LocalVideoFileOpener","_getPrototypeOf5","_this4","_len4","_key4","VideoResource","options","Promise","resolve","reject","properties","push","browserWindow","getCurrentWindow","showOpenDialog","filters","defaultPath","paths","_LocalPiskelBridge__WEBPACK_IMPORTED_MODULE_0__","_LocalJfxrBridge__WEBPACK_IMPORTED_MODULE_1__","_Utils_Analytics_EventSender__WEBPACK_IMPORTED_MODULE_2__","editors","edit","sendExternalEditorOpened","openPiskel","openJfxr","ipcRenderer","_ref","resourceNames","resourcesLoader","singleFrame","onChangesSaved","extraOptions","resourceName","originalIndex","getLocalResourceFullPath","externalEditorData","_Users_florianrival_Projects_F_GD_newIDE_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","removeAllListeners","event","outputResources","newAnimationName","metadata","pskl","resourcesManager","getResourcesManager","forEach","resource","createOrUpdateResource","getResource","setMetadata","d","_ResourceUtils_js__WEBPACK_IMPORTED_MODULE_1__","initialResourceMetadata","newFilePath","jfxr","LocalProjectWriter","_writeProjectJSONFile","filepath","content","serializeToJSObject","writeFile","e","saveProject","err","LocalProjectOpener","readFile","encoding","BrowserWindow","LocalPreviewLauncher","canDoNetworkPreview","networkPreviewDialogOpen","networkPreviewHost","networkPreviewPort","networkPreviewError","previewGamePath","previewBrowserWindowConfig","_subscriptionChecker","_openPreviewBrowserWindow","loadURL","_openPreviewWindow","gamePath","getMainWindowDefaultWidth","getMainWindowDefaultHeight","useContentSize","backgroundColor","networkPreview","serverParams","_checkSubscription","ipAddresses","findLocalIp","root","_prepareExporter","findGDJS","gdjsRoot","fileSystem","assignIn","AbstractFileSystemJS","localFileSystem","outputDir","getTempDir","exporter","Exporter","launchLayoutPreview","layout","exportLayoutForPixiPreview","launchExternalLayoutPreview","externalLayout","_ref2","exportExternalLayoutForPixiPreview","checkHasSubscription","_this$state","react__WEBPACK_IMPORTED_MODULE_6__","_Profile_SubscriptionChecker__WEBPACK_IMPORTED_MODULE_14__","subscriptionChecker","onChangeSubscription","mode","_LocalNetworkPreviewDialog__WEBPACK_IMPORTED_MODULE_11__","open","url","onExport","onRunPreviewLocally","LocalNetworkDialog","_this$props","_UI_Dialog__WEBPACK_IMPORTED_MODULE_7__","actions","material_ui_FlatButton__WEBPACK_IMPORTED_MODULE_8___default","primary","secondaryActions","modal","onRequestClose","_UI_PlaceholderLoader__WEBPACK_IMPORTED_MODULE_11__","material_ui_TextField__WEBPACK_IMPORTED_MODULE_9___default","firstLocalIp","find","ipAddress","getLocalExporters","react__WEBPACK_IMPORTED_MODULE_0__","_LocalExport__WEBPACK_IMPORTED_MODULE_1__","_LocalS3Export__WEBPACK_IMPORTED_MODULE_2__","_LocalOnlineCordovaExport__WEBPACK_IMPORTED_MODULE_3__","_LocalCordovaExport__WEBPACK_IMPORTED_MODULE_4__","_LocalCocos2dExport__WEBPACK_IMPORTED_MODULE_5__","_LocalOnlineElectronExport__WEBPACK_IMPORTED_MODULE_6__","_LocalFacebookInstantGamesExport__WEBPACK_IMPORTED_MODULE_7__","_LocalElectronExport__WEBPACK_IMPORTED_MODULE_8__","material_ui_svg_icons_hardware_phone_iphone__WEBPACK_IMPORTED_MODULE_9__","material_ui_svg_icons_hardware_phone_iphone__WEBPACK_IMPORTED_MODULE_9___default","material_ui_svg_icons_hardware_laptop_mac__WEBPACK_IMPORTED_MODULE_10__","material_ui_svg_icons_hardware_laptop_mac__WEBPACK_IMPORTED_MODULE_10___default","material_ui_svg_icons_file_folder__WEBPACK_IMPORTED_MODULE_11__","material_ui_svg_icons_file_folder__WEBPACK_IMPORTED_MODULE_11___default","_UI_CustomSvgIcons_Facebook__WEBPACK_IMPORTED_MODULE_12__","_UI_CustomSvgIcons_Cordova__WEBPACK_IMPORTED_MODULE_13__","_UI_CustomSvgIcons_Chrome__WEBPACK_IMPORTED_MODULE_14__","renderIcon","helpPage","description","ExportComponent","LocalOnlineCordovaExport","LocalFacebookInstantGamesExport","LocalS3Export","LocalExport","advanced","LocalCordovaExport","LocalOnlineElectronExport","LocalElectronExport","LocalCocos2dExport","experimental","os","shell","_uploadToS3","localDir","uploadProgress","uploadMax","prefix","uploadDone","_deploy","sleep","axios","GDevelopHostingApi","deployEndpoint","method","params","response","deployDone","deployedPrefix","launchExport","sendExportLaunched","exportStarted","exportDone","tmpdir","makeTimestampedId","prepareExporter","exportOptions","MapStringBoolean","exportWholePixiProject","uploadPrefix","deployPrefix","gamesHost","catch","openURL","openExternal","renderUrl","_UI_Grid__WEBPACK_IMPORTED_MODULE_13__","material_ui_TextField__WEBPACK_IMPORTED_MODULE_17___default","style","flex","material_ui_RaisedButton__WEBPACK_IMPORTED_MODULE_9___default","material_ui_LinearProgress__WEBPACK_IMPORTED_MODULE_14___default","max","disabled","Wait","interval","beforeTime","afterTime","limit","every","before","after","startTime","expires","and","func","routine","_limit","Infinity","check","cond","until","forward","till","self","timer","called","f","res","clearInterval","Error","setInterval","module","exports","_limit2","exportStep","build","errored","buildsWatcher","BuildsWatcher","set","showErrorBox","launchCompression","archiveOutputDir","archiveFolder","outputFilename","launchUpload","outputFile","launchBuild","userProfile","uploadBucketKey","getAuthorizationHeader","profile","buildCordovaAndroid","uid","startBuildWatch","start","builds","onBuildUpdated","launchWholeExport","t","str","displayProjectErrorsBox","getErrors","handleError","rawError","_download","openExternalURL","getUrl","stop","getBuildLimit","limits","canLaunchBuild","limitReached","react__WEBPACK_IMPORTED_MODULE_5___default","_Profile_UserProfileContext__WEBPACK_IMPORTED_MODULE_10__","Consumer","authenticated","material_ui_RaisedButton__WEBPACK_IMPORTED_MODULE_7___default","_Profile_LimitDisplayer__WEBPACK_IMPORTED_MODULE_19__","subscription","_Profile_CreateProfile__WEBPACK_IMPORTED_MODULE_18__","onLogin","_Builds_BuildStepsProgress__WEBPACK_IMPORTED_MODULE_22__","onDownload","mkDir","clearDir","exportFinishedDialogOpen","setLastCompilationDirectory","openExportFolder","openItem","openPhoneGapBuild","getLastCompilationDirectory","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_15__","_UI_HelpButton__WEBPACK_IMPORTED_MODULE_16__","helpPagePath","debugMode","exportWholeCocos2dProject","_UI_Grid__WEBPACK_IMPORTED_MODULE_12__","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_17__","material_ui_Toggle__WEBPACK_IMPORTED_MODULE_10___default","onToggle","toggled","labelPosition","_UI_HelpButton__WEBPACK_IMPORTED_MODULE_13__","targets","buildElectron","_setTarget","targetName","enable","_Users_florianrival_Projects_F_GD_newIDE_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_7___default","_Profile_UserProfileContext__WEBPACK_IMPORTED_MODULE_13__","_UI_Grid__WEBPACK_IMPORTED_MODULE_14__","material_ui_Checkbox__WEBPACK_IMPORTED_MODULE_10___default","_lingui_react__WEBPACK_IMPORTED_MODULE_6__","checked","onCheck","_Profile_LimitDisplayer__WEBPACK_IMPORTED_MODULE_22__","_Profile_CreateProfile__WEBPACK_IMPORTED_MODULE_21__","_Builds_BuildStepsProgress__WEBPACK_IMPORTED_MODULE_25__","showSeeAllMyBuildsExplanation","archiveOutputFilename","openLearnMore","getHelpLink","_UI_Grid__WEBPACK_IMPORTED_MODULE_9__","_UI_LocalFilePicker__WEBPACK_IMPORTED_MODULE_10__","_Progress__WEBPACK_IMPORTED_MODULE_14__","onOpenExportFolder","onOpenLearnMore","styles","container","position","display","button","marginLeft","textField","LocalFilePicker","onChooseFolder","showSaveDialog","filename","material_ui_TextField__WEBPACK_IMPORTED_MODULE_8___default","floatingLabelText","floatingLabelFixed","type","hintText","material_ui_FlatButton__WEBPACK_IMPORTED_MODULE_9___default","PureComponent","react__WEBPACK_IMPORTED_MODULE_1__","material_ui_Stepper__WEBPACK_IMPORTED_MODULE_2__","activeStep","orientation","_UI_Grid__WEBPACK_IMPORTED_MODULE_6__","material_ui_CircularProgress__WEBPACK_IMPORTED_MODULE_3___default","size","_lingui_react__WEBPACK_IMPORTED_MODULE_0__","material_ui_FlatButton__WEBPACK_IMPORTED_MODULE_5___default","material_ui_RaisedButton__WEBPACK_IMPORTED_MODULE_4___default","ElectronMainMenu","_editor","chooseProject","save","askToCloseProject","openExportDialog","openCreateDialog","openProjectManager","openStartPage","openDebugger","openAboutDialog","openPreferences","openLanguage","openProfile","status","setUpdateStatus","i18n","language","_language","_buildAndSendMenuTemplate","fileTemplate","_","submenu","accelerator","onClickSendEvent","enabled","isMacLike","editTemplate","role","viewTemplate","windowTemplate","helpTemplate","onClickOpenLink","template","unshift","loadExtension","findJsExtensionModules","objectsEditorService","objectsRenderingService","filterExamples","loadAllExtensions","extensionModulePaths","all","extensionModulePath","extensionModule","rethrowException","result","registerEditorConfigurations","registerInstanceRenderers","JsPlatform","get","extensionsRoot","extensionFolders","filteredExtensionFolders","folder","extensionFolder","extensionFolderPath","jsExtensionModulePath","stat","stats","isFile","modulePaths","modulePath","makeLocalEventsFunctionWriter","slugs__WEBPACK_IMPORTED_MODULE_1__","slugs__WEBPACK_IMPORTED_MODULE_1___default","mkdir","code","getPathFor","functionName","slugs","getIncludeFileFor","writeFunctionCode","r","create","react__WEBPACK_IMPORTED_MODULE_0___default","_MainFrame__WEBPACK_IMPORTED_MODULE_1__","_Utils_Window__WEBPACK_IMPORTED_MODULE_2__","_Export_ExportDialog__WEBPACK_IMPORTED_MODULE_3__","_ProjectCreation_CreateProjectDialog__WEBPACK_IMPORTED_MODULE_4__","_ExternalEditor__WEBPACK_IMPORTED_MODULE_7__","_ProjectCreation_LocalExamples__WEBPACK_IMPORTED_MODULE_8__","_ProjectCreation_LocalStarters__WEBPACK_IMPORTED_MODULE_9__","_ResourcesList_LocalResourceSources__WEBPACK_IMPORTED_MODULE_10__","_ResourcesList_LocalResourceExternalEditors__WEBPACK_IMPORTED_MODULE_11__","_ProjectsStorage_LocalProjectWriter__WEBPACK_IMPORTED_MODULE_12__","_ProjectsStorage_LocalProjectOpener__WEBPACK_IMPORTED_MODULE_13__","_Export_LocalExporters_LocalPreviewLauncher__WEBPACK_IMPORTED_MODULE_14__","_Export_LocalExporters__WEBPACK_IMPORTED_MODULE_15__","_MainFrame_ElectronMainMenu__WEBPACK_IMPORTED_MODULE_16__","_JsExtensionsLoader_LocalJsExtensionsLoader__WEBPACK_IMPORTED_MODULE_17__","_JsExtensionsLoader_LocalJsExtensionsLoader__WEBPACK_IMPORTED_MODULE_17___default","_EventsFunctionsExtensionsLoader_LocalEventsFunctionWriter__WEBPACK_IMPORTED_MODULE_18__","_ObjectEditor_ObjectsEditorService__WEBPACK_IMPORTED_MODULE_19__","_ObjectsRendering_ObjectsRenderingService__WEBPACK_IMPORTED_MODULE_20__","_MainFrame_Providers__WEBPACK_IMPORTED_MODULE_21__","authentification","setUpContextMenu","appArguments","getArguments","disableCheckForUpdates","resourceSources","localResourceSources","onReadFromPathOrURL","resourceExternalEditors","localResourceExternalEditors","initialPathsOrURLsToOpen","previewLauncher","exportDialog","exporters","createDialog","examplesComponent","startersComponent","onSaveProject","onChooseProject","chooseProjectFile","readProjectJSONFile","extensionsLoader","makeExtensionsLoader","ObjectsEditorService","ObjectsRenderingService","isDev","eventsFunctionWriter","dirExists","existsSync","readdirSync","file","curPath","lstatSync","isDirectory","unlinkSync","fileNameFrom","fullpath","_isExternalURL","_translateURL","basename","dirNameFrom","makeAbsolute","baseDirectory","isAbsolute","normalize","makeRelative","charAt","copyFile","source","dest","copyDir","writeToFile","contents","outputFileSync","readFileSync","toString","readDir","ext","toUpperCase","output","VectorString","push_back","fileExists","statSync","substr","LocalFolderPicker","_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0__","_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0___default","archiver","createWriteStream","archive","zlib","level","pointer","pipe","directory","finalize","process","tryPath","onExists","onNoAccess","access","constants","R_OK","appPath","getAppPath","cwd","_Utils_NewNameGenerator__WEBPACK_IMPORTED_MODULE_0__","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_1__","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_1___default","basePath","folderName","generateName","accessSync","openItchioHelp","_UI_PlaceholderLoader__WEBPACK_IMPORTED_MODULE_4__","hasSubscription","planId","noSubscription","_UI_Grid__WEBPACK_IMPORTED_MODULE_3__","values","0","Math","current","1","material_ui_RaisedButton__WEBPACK_IMPORTED_MODULE_2___default","stepper","_UI_Grid__WEBPACK_IMPORTED_MODULE_5__","material_ui_LinearProgress__WEBPACK_IMPORTED_MODULE_4___default","_BuildProgress__WEBPACK_IMPORTED_MODULE_6__","_UI_EmptyMessage__WEBPACK_IMPORTED_MODULE_7__","defineProperty","Stepper","StepLabel","StepContent","StepButton","Step","_Step3","_interopRequireDefault","_StepButton3","_StepContent3","_StepLabel3","_Stepper3","obj","__esModule","default"],"mappings":"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","file":"static/js/local-app.8b8e13f6.chunk.js","sourcesContent":["// @flow\n\nimport Bridge from './Bridge.js';\nimport React, { Component } from 'react';\nimport Window from '../Utils/Window.js';\nconst gd = global.gd;\n\ntype State = {\n  loading: boolean,\n};\n\ntype Props = {\n  serverPort: number,\n  isIntegrated: boolean,\n  editor: string,\n  editedElementName: string,\n  children: React$Element<any>,\n};\n\nclass ExternalEditor extends Component<Props, State> {\n  bridge: Bridge;\n  editorOpened: boolean = false;\n  lastShowCommandDate: number = 0;\n  sendingUpdate: boolean = false;\n  editor: any = null;\n  _serializedObject: any = null;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.bridge = new Bridge();\n    this.state = {\n      loading: false,\n    };\n\n    if (this.bridge.isSupported()) {\n      console.log('Connection to an external editor...');\n\n      this.bridge.onReceive((command, payload, scope) => {\n        if (command === 'update') {\n          this._onUpdateReceived(payload, scope);\n        } else if (command === 'setBounds') {\n          if (this.props.isIntegrated) {\n            Window.setBounds(\n              payload.x,\n              payload.y,\n              payload.width,\n              payload.height\n            );\n          }\n        } else if (command === 'show') {\n          this.lastShowCommandDate = Date.now();\n          Window.show();\n        } else if (command === 'hide') {\n          if (this.props.isIntegrated) {\n            Window.hide(payload && payload.forceHide);\n          }\n        }\n      });\n      this.bridge.onConnected(() => {\n        this.requestUpdate('', true);\n      });\n      Window.onBlur(() => {\n        if (this.props.isIntegrated) this._hideIfNotJustShown();\n        this.sendUpdate();\n      });\n      Window.onFocus(() => {\n        this.requestUpdate();\n      });\n      Window.onClose(() => {\n        this.sendUpdate();\n      });\n\n      this.bridge.connectTo(this.props.serverPort);\n    } else {\n      console.warn('Connection to an external editor is not supported');\n    }\n  }\n\n  _hideIfNotJustShown = () => {\n    // Sometime, we'll receive the blur event AFTER\n    // the external editor containing this editor\n    // received the activate event from the system (wxActivateEvent in the case of\n    // wxWidgets).\n    // So we'll receive a show command THEN hide, which is not what we want\n    // (we want to hide and then show again the editor if needed).\n    if (Date.now() - this.lastShowCommandDate < 100) {\n      console.info(\n        'The editor is not hidden because it receive a `show` command less ' +\n          'than 100ms ago.'\n      );\n      return;\n    }\n\n    Window.hide();\n  };\n\n  sendUpdate = () => {\n    console.log('Sending update to server editor');\n    if (this.state.loading) {\n      console.warn('Already loading an update, abort send');\n      return;\n    }\n    if (this.sendingUpdate) {\n      console.warn('Already sending an update, abort send');\n      return;\n    }\n    if (!this.editor) {\n      console.error(\n        'No children editor to use to get the updated edited element'\n      );\n      return;\n    }\n\n    this.sendingUpdate = true;\n    const elements = this.editor.getSerializedElements();\n    for (const scope in elements) {\n      if (elements.hasOwnProperty(scope)) {\n        this.bridge.send('update', elements[scope], scope);\n      }\n    }\n    this.sendingUpdate = false;\n\n    console.log('Update send done');\n  };\n\n  editObject = (object: gdObject) => {\n    this.sendUpdate();\n    this.bridge.send('editObject', object.getName());\n  };\n\n  /**\n   * Request an update to the server. Note that if forcedUpdate is set to false,\n   * the server may not send back an update (for example if nothing changed).\n   */\n  requestUpdate = (scope: string = '', forcedUpdate: boolean = false) => {\n    const command = forcedUpdate ? 'requestForcedUpdate' : 'requestUpdate';\n    this.bridge.send(command, undefined, scope);\n  };\n\n  _onUpdateReceived = (payload: any, scope: string) => {\n    console.log('Received project update from server');\n    if (scope !== '') {\n      console.warn(`Not implemented: received ${scope} update from server`);\n      return;\n    }\n\n    this.setState(\n      {\n        loading: true,\n      },\n      () =>\n        setTimeout(() => {\n          // Transform the payload into a gd.SerializerElement\n          // Note that gd.Serializer.fromJSObject returns a new gd.SerializerElement object at every call\n          if (this._serializedObject) this._serializedObject.delete();\n\n          var t1 = performance.now();\n          this._serializedObject = gd.Serializer.fromJSObject(payload);\n          var t2 = performance.now();\n          console.log(\n            'Call to gd.Serializer.fromJSObject took ' +\n              (t2 - t1) +\n              ' milliseconds.'\n          );\n\n          this.editor.loadFromSerializedProject(this._serializedObject, () => {\n            this._serializedObject.delete();\n            this._serializedObject = null;\n\n            if (!this.editorOpened) {\n              this.editorOpened = true;\n\n              if (this.props.editor === 'scene-editor') {\n                this.editor.openLayout(this.props.editedElementName, {\n                  openEventsEditor: false,\n                });\n              }\n              if (this.props.editor === 'external-layout-editor') {\n                this.editor.openExternalLayout(this.props.editedElementName);\n              }\n            }\n\n            this.setState({\n              loading: false,\n            });\n          });\n        })\n    );\n  };\n\n  render() {\n    return React.cloneElement(this.props.children, {\n      loading: this.state.loading,\n      ref: editor => (this.editor = editor),\n      requestUpdate: () => this.requestUpdate('', true),\n      onEditObject: this.editObject,\n      integratedEditor: true,\n    });\n  }\n}\n\nexport default ExternalEditor;\n","import optionalRequire from '../Utils/OptionalRequire.js';\nimport { timeFunction } from '../Utils/TimeFunction.js';\nconst electron = optionalRequire('electron');\nconst Buffer = electron ? electron.remote.require('buffer').Buffer : null;\n\nfunction Bridge() {\n  this.net = optionalRequire('net');\n\n  this.client = null;\n  this.connected = false;\n  this._onReceiveCb = null;\n}\n\nBridge.prototype.isSupported = function() {\n  return !!this.net;\n};\n\nBridge.prototype.connectTo = function(port) {\n  if (!this.net) return;\n\n  var that = this;\n  this.client = new this.net.Socket();\n  this.client.connect(\n    port,\n    'localhost',\n    function() {\n      console.log('Connection made on port', port);\n      that.connected = true;\n      if (that._onConnected) that._onConnected();\n    }\n  );\n\n  let data = '';\n  const nullCharacterBuffer = Buffer.from([0]);\n  this.client.on('data', function(dataBuffer) {\n    let startPos = 0;\n    let nextNullCharacterPos = dataBuffer.indexOf(nullCharacterBuffer);\n    while (startPos < dataBuffer.length) {\n      if (nextNullCharacterPos === -1) {\n        data += dataBuffer.slice(startPos);\n        startPos = dataBuffer.length;\n      } else {\n        data += dataBuffer.slice(startPos, nextNullCharacterPos);\n        that._receive(data);\n\n        data = '';\n        startPos = nextNullCharacterPos + 1;\n        nextNullCharacterPos = dataBuffer.indexOf(\n          nullCharacterBuffer,\n          startPos\n        );\n      }\n    }\n  });\n\n  this.client.on('close', function() {\n    that.connected = false;\n  });\n};\n\nBridge.prototype.send = function(command, payload, scope = '') {\n  if (!this.connected) return false;\n\n  const json = JSON.stringify({\n    command,\n    scope,\n    payload,\n  });\n  this.client.write(json + '\\0');\n\n  return true;\n};\n\nBridge.prototype._receive = function(data) {\n  console.info('Received data');\n\n  // Parse the received JSON\n  let dataObject;\n  timeFunction(\n    () => {\n      try {\n        dataObject = JSON.parse(data);\n      } catch (ex) {\n        console.warn('Received invalid data (JSON parse failed)', ex);\n      }\n    },\n    time => console.info(`JSON parse took ${time}ms`)\n  );\n  if (!dataObject) return;\n\n  if (this._onReceiveCb) {\n    this._onReceiveCb(dataObject.command, dataObject.payload, dataObject.scope);\n  }\n};\n\nBridge.prototype.onReceive = function(cb) {\n  this._onReceiveCb = cb;\n};\n\nBridge.prototype.onConnected = function(cb) {\n  this._onConnected = cb;\n};\n\nexport default Bridge;\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport Divider from 'material-ui/Divider';\nimport LocalFolderPicker from '../UI/LocalFolderPicker';\nimport { sendNewGameCreated } from '../Utils/Analytics/EventSender';\nimport { Column, Line } from '../UI/Grid';\nimport { findExamples } from './LocalExamplesFinder';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { findEmptyPath } from './LocalPathFinder';\nimport ExamplesList from './ExamplesList';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nvar fs = optionalRequire('fs-extra');\n\nexport default class LocalExamples extends Component {\n  state = {\n    outputPath: findEmptyPath(\n      path ? path.join(app.getPath('home'), 'GDevelop projects') : ''\n    ),\n    exampleNames: null,\n  };\n\n  componentDidMount() {\n    findExamples(examplesPath => {\n      fs.readdir(examplesPath, (error, exampleNames) => {\n        if (error) {\n          console.error('Unable to read examples:', error);\n          return;\n        }\n\n        this.setState(\n          {\n            exampleNames: exampleNames.filter(name => name !== '.DS_Store'),\n          },\n          () => this.props.onExamplesLoaded()\n        );\n      });\n    });\n  }\n\n  _handleChangePath = outputPath =>\n    this.setState({\n      outputPath,\n    });\n\n  createFromExample = exampleName => {\n    const { outputPath } = this.state;\n    if (!fs || !outputPath) return;\n\n    findExamples(examplesPath => {\n      fs.mkdirsSync(outputPath);\n      fs.copySync(path.join(examplesPath, exampleName), outputPath);\n      this.props.onOpen(path.join(outputPath, exampleName + '.json'));\n      sendNewGameCreated(exampleName);\n    });\n  };\n\n  render() {\n    return (\n      <Column noMargin>\n        <Column>\n          <p>\n            <Trans>Choose or search for an example to open:</Trans>\n          </p>\n        </Column>\n        <Line>\n          <ExamplesList\n            exampleNames={this.state.exampleNames}\n            onCreateFromExample={this.createFromExample}\n          />\n        </Line>\n        <Divider />\n        <Line expand>\n          <Column expand>\n            <LocalFolderPicker\n              fullWidth\n              value={this.state.outputPath}\n              onChange={this._handleChangePath}\n              title={<Trans>Folder where to create the game</Trans>}\n              message={<Trans>Choose where to create the game</Trans>}\n            />\n          </Column>\n        </Line>\n      </Column>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport Divider from 'material-ui/Divider';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport LocalFolderPicker from '../UI/LocalFolderPicker';\nimport { sendNewGameCreated } from '../Utils/Analytics/EventSender';\nimport { Column, Line } from '../UI/Grid';\nimport { List, ListItem } from 'material-ui/List';\nimport { findExamples } from './LocalExamplesFinder';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { findEmptyPath } from './LocalPathFinder';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nvar fs = optionalRequire('fs-extra');\nconst gd = global.gd;\n\nexport default class LocalStarters extends Component {\n  state = {\n    outputPath: findEmptyPath(\n      path ? path.join(app.getPath('home'), 'GDevelop projects') : ''\n    ),\n  };\n\n  _handleChangePath = outputPath =>\n    this.setState({\n      outputPath,\n    });\n\n  createFromExample(exampleName) {\n    const { outputPath } = this.state;\n    if (!fs || !outputPath) return;\n\n    findExamples(examplesPath => {\n      fs.mkdirsSync(outputPath);\n      fs.copySync(path.join(examplesPath, exampleName), outputPath);\n      this.props.onOpen(path.join(outputPath, exampleName + '.json'));\n      sendNewGameCreated(exampleName);\n    });\n  }\n\n  createEmptyGame() {\n    const { outputPath } = this.state;\n    if (!fs || !outputPath) return;\n\n    fs.mkdirsSync(outputPath);\n    const project = gd.ProjectHelper.createNewGDJSProject();\n    project.setProjectFile(path.join(outputPath, 'game.json'));\n    this.props.onCreate(project);\n    sendNewGameCreated('');\n  }\n\n  render() {\n    return (\n      <Column noMargin>\n        <Line>\n          <Column>\n            <p>\n              <Trans>Choose a game to use as a starter:</Trans>\n            </p>\n          </Column>\n        </Line>\n        <Line>\n          <Column expand noMargin>\n            <List>\n              <ListItem\n                primaryText={<Trans>Platformer</Trans>}\n                secondaryText={\n                  <p>\n                    <Trans>\n                      A simple platform game, with coins to collect, moving\n                      platforms and enemies.\n                    </Trans>\n                  </p>\n                }\n                secondaryTextLines={2}\n                onClick={() => this.createFromExample('platformer')}\n              />\n              <ListItem\n                primaryText={<Trans>Space Shooter</Trans>}\n                secondaryText={\n                  <p>\n                    <Trans>\n                      A side-scrolling shooter where you must defeat incoming\n                      enemies with your spaceship.\n                    </Trans>\n                  </p>\n                }\n                secondaryTextLines={2}\n                onClick={() => this.createFromExample('space-shooter')}\n              />\n              <ListItem\n                primaryText={<Trans>Isometric game</Trans>}\n                secondaryText={\n                  <p>\n                    <Trans>\n                      An example of an isometric game where you can explore a\n                      map with your character.\n                    </Trans>\n                  </p>\n                }\n                secondaryTextLines={2}\n                onClick={() => this.createFromExample('isometric-game')}\n              />\n              <ListItem\n                primaryText=\"Downhill Bike Racing\"\n                secondaryText={\n                  <p>\n                    <Trans>\n                      An example of a 2D physics based driving game, where\n                      player have to reach the end as fast as possible.\n                    </Trans>\n                  </p>\n                }\n                secondaryTextLines={2}\n                onClick={() =>\n                  this.createFromExample('downhill-bike-physics-demo')\n                }\n              />\n              <ListItem\n                primaryText={<Trans>Empty game</Trans>}\n                secondaryText={\n                  <p>\n                    <Trans>Start a new game from scratch.</Trans>\n                  </p>\n                }\n                secondaryTextLines={2}\n                onClick={() => this.createEmptyGame()}\n              />\n            </List>\n            <Line alignItems=\"center\" justifyContent=\"center\">\n              <RaisedButton\n                label={<Trans>See examples</Trans>}\n                onClick={() => this.props.onShowExamples()}\n              />\n            </Line>\n          </Column>\n        </Line>\n        <Divider />\n        <Line expand>\n          <Column expand>\n            <LocalFolderPicker\n              fullWidth\n              value={this.state.outputPath}\n              onChange={this._handleChangePath}\n              title={<Trans>Folder where to create the game</Trans>}\n              message={<Trans>Choose where to create the game</Trans>}\n            />\n          </Column>\n        </Line>\n      </Column>\n    );\n  }\n}\n","import { Component } from 'react';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\nconst path = optionalRequire('path');\n\nconst gd = global.gd;\n\nexport default [\n  {\n    name: 'localAudioFileOpener',\n    displayName: 'Choose a new audio file',\n    kind: 'audio',\n    component: class LocalAudioFileOpener extends Component {\n      chooseResources = (\n        project,\n        multiSelections = true\n      ): Promise<Array<any>> => {\n        const options = {\n          multiSelections,\n          title: 'Choose an audio file',\n          name: 'Audio files',\n          extensions: ['wav', 'mp3', 'ogg'],\n        };\n        return selectLocalResourcePath(project, options).then(resources => {\n          return resources.map(resourcePath => {\n            const audioResource = new gd.AudioResource();\n            const projectPath = path.dirname(project.getProjectFile());\n            audioResource.setFile(path.relative(projectPath, resourcePath));\n            audioResource.setName(path.relative(projectPath, resourcePath));\n\n            return audioResource;\n          });\n        });\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localFileOpener',\n    displayName: 'Choose a new image',\n    kind: 'image',\n    component: class LocalFileOpener extends Component {\n      chooseResources = (\n        project,\n        multiSelections = true\n      ): Promise<Array<any>> => {\n        const options = {\n          multiSelections,\n          title: 'Choose an image',\n          name: 'Image files',\n          extensions: ['png', 'jpg'],\n        };\n        return selectLocalResourcePath(project, options).then(resources => {\n          return resources.map(resourcePath => {\n            const imageResource = new gd.ImageResource();\n            const projectPath = path.dirname(project.getProjectFile());\n            imageResource.setFile(path.relative(projectPath, resourcePath));\n            imageResource.setName(path.relative(projectPath, resourcePath));\n\n            return imageResource;\n          });\n        });\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localFontFileOpener',\n    displayName: 'Choose a new font file',\n    kind: 'font',\n    component: class LocalFontFileOpener extends Component {\n      chooseResources = (\n        project,\n        multiSelections = true\n      ): Promise<Array<any>> => {\n        const options = {\n          multiSelections,\n          title: 'Choose a font file',\n          name: 'Font files',\n          extensions: ['ttf', 'otf'],\n        };\n        return selectLocalResourcePath(project, options).then(resources => {\n          return resources.map(resourcePath => {\n            const fontResource = new gd.FontResource();\n            const projectPath = path.dirname(project.getProjectFile());\n            fontResource.setFile(path.relative(projectPath, resourcePath));\n            fontResource.setName(path.relative(projectPath, resourcePath));\n\n            return fontResource;\n          });\n        });\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localVideoFileOpener',\n    displayName: 'Choose a new video file',\n    kind: 'video',\n    component: class LocalVideoFileOpener extends Component {\n      chooseResources = (\n        project,\n        multiSelections = true\n      ): Promise<Array<any>> => {\n        const options = {\n          multiSelections,\n          title: 'Choose a video file',\n          name: 'Video files',\n          extensions: ['mp4'],\n        };\n        return selectLocalResourcePath(project, options).then(resources => {\n          return resources.map(resourcePath => {\n            const fontResource = new gd.VideoResource();\n            const projectPath = path.dirname(project.getProjectFile());\n            fontResource.setFile(path.relative(projectPath, resourcePath));\n            fontResource.setName(path.relative(projectPath, resourcePath));\n\n            return fontResource;\n          });\n        });\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n];\n\nconst selectLocalResourcePath = (\n  project: gdProject,\n  options: {\n    multiSelections: boolean,\n    title: string,\n    name: string,\n    extensions: Array<string>,\n  }\n) => {\n  return new Promise((resolve, reject) => {\n    if (!dialog) return reject('Not supported');\n\n    const properties = ['openFile'];\n    if (options.multiSelections) properties.push('multiSelections');\n    const projectPath = path.dirname(project.getProjectFile());\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showOpenDialog(\n      browserWindow,\n      {\n        title: options.title,\n        properties,\n        filters: [{ name: options.name, extensions: options.extensions }],\n        defaultPath: projectPath,\n      },\n      paths => {\n        if (!paths) return resolve([]);\n        return resolve(paths);\n      }\n    );\n  });\n};\n","// @flow\nimport { openPiskel } from './LocalPiskelBridge';\nimport { openJfxr } from './LocalJfxrBridge';\nimport { type ResourceExternalEditor } from './ResourceExternalEditor.flow';\nimport { sendExternalEditorOpened } from '../Utils/Analytics/EventSender';\n\n/**\n * This is the list of editors that can be used to edit resources\n * on Electron runtime.\n */\nconst editors: Array<ResourceExternalEditor> = [\n  {\n    name: 'piskel-app',\n    displayName: 'Edit with Piskel',\n    kind: 'image',\n    edit: options => {\n      sendExternalEditorOpened('piskel');\n      return openPiskel(options);\n    },\n  },\n  {\n    name: 'Jfxr',\n    displayName: 'Create/Edit a Sound effect with Jfxr (*.wav)',\n    kind: 'audio',\n    edit: options => {\n      sendExternalEditorOpened('jfxr');\n      return openJfxr(options);\n    },\n  },\n];\n\nexport default editors;\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { type ExternalEditorOpenOptions } from './ResourceExternalEditor.flow';\nimport {\n  createOrUpdateResource,\n  getLocalResourceFullPath,\n} from './ResourceUtils.js';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\n/**\n * Open Piskel editor for the specified resources.\n * Take a list of resource names to be edited and will call the callback methods\n * (notably onChangesSaved with the name of the edited resources)\n */\nexport const openPiskel = ({\n  project,\n  resourcesLoader,\n  resourceNames,\n  singleFrame,\n  onChangesSaved,\n  extraOptions,\n}: ExternalEditorOpenOptions) => {\n  if (!electron || !ipcRenderer) return;\n\n  const resources = resourceNames.map((resourceName, originalIndex) => {\n    let resourcePath = getLocalResourceFullPath(project, resourceName);\n    return {\n      resourcePath,\n      resourceName,\n      originalIndex,\n    };\n  });\n\n  const projectPath = path.dirname(project.getProjectFile());\n  const externalEditorData = {\n    ...extraOptions,\n    resources,\n    singleFrame,\n    projectPath,\n  };\n\n  // Listen to events meaning that edition in Piskel is finished\n  ipcRenderer.removeAllListeners('piskel-changes-saved');\n  ipcRenderer.on(\n    'piskel-changes-saved',\n    (event, outputResources, newAnimationName, externalEditorData) => {\n      const metadata = externalEditorData.data\n        ? { pskl: externalEditorData }\n        : null;\n\n      const resourcesManager = project.getResourcesManager();\n      outputResources.forEach(resource => {\n        resource.name = path.relative(projectPath, resource.path); // Still needed for onChangesSaved()\n        createOrUpdateResource(project, new gd.ImageResource(), resource.name);\n      });\n\n      // in case this is for a single frame object, save the metadata in the Image object\n      if (externalEditorData.singleFrame) {\n        if (metadata) {\n          resourcesManager\n            .getResource(path.relative(projectPath, outputResources[0].path))\n            .setMetadata(JSON.stringify(metadata));\n        }\n        onChangesSaved(outputResources, newAnimationName);\n      } else {\n        // In case there are multiple frames, pass back the metadata to the editor and let it store it at an appropriate place.\n        // (For example, for sprites, SpritesList.js will save it in the metadata of the gd.Direction).\n        onChangesSaved(outputResources, newAnimationName, metadata);\n      }\n    }\n  );\n\n  // Issue the event to open piskel\n  ipcRenderer.send('piskel-open-then-load-animation', externalEditorData);\n};\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { type ExternalEditorOpenOptions } from './ResourceExternalEditor.flow';\nimport {\n  createOrUpdateResource,\n  getLocalResourceFullPath,\n} from './ResourceUtils.js';\n\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\n/**\n * Open JFXR to create wav resources.\n */\nexport const openJfxr = ({\n  project,\n  resourcesLoader,\n  resourceNames,\n  onChangesSaved,\n  resourcePath,\n  extraOptions,\n}: ExternalEditorOpenOptions) => {\n  if (!electron || !ipcRenderer) return;\n  const projectPath = path.dirname(project.getProjectFile());\n  const initialResourcePath = getLocalResourceFullPath(\n    project,\n    resourceNames[0]\n  );\n\n  const externalEditorData = {\n    resourcePath: initialResourcePath,\n    // $FlowFixMe - TODO: There is an error here to be solved.\n    externalEditorData: extraOptions.initialResourceMetadata,\n    projectPath,\n  };\n\n  ipcRenderer.removeAllListeners('jfxr-changes-saved');\n  ipcRenderer.on(\n    'jfxr-changes-saved',\n    (event, newFilePath, externalEditorData) => {\n      const resourceName = path.relative(projectPath, newFilePath);\n      createOrUpdateResource(project, new gd.AudioResource(), resourceName);\n\n      const metadata = {\n        jfxr: externalEditorData,\n      };\n      project\n        .getResourcesManager()\n        .getResource(resourceName)\n        .setMetadata(JSON.stringify(metadata));\n      // $FlowFixMe - TODO: There is an error here to be solved.\n      onChangesSaved([{ metadata }], resourceName);\n    }\n  );\n\n  ipcRenderer.send('jfxr-create-wav', externalEditorData);\n};\n","import { serializeToJSObject } from '../Utils/Serializer';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst fs = optionalRequire('fs');\n\nexport default class LocalProjectWriter {\n  static _writeProjectJSONFile = (project, filepath, cb) => {\n    if (!fs) return cb('Not supported');\n\n    try {\n      const content = JSON.stringify(serializeToJSObject(project), null, 2);\n      fs.writeFile(filepath, content, cb);\n    } catch (e) {\n      return cb(e);\n    }\n  };\n\n  static saveProject = project => {\n    return new Promise((resolve, reject) => {\n      const filepath = project.getProjectFile();\n      if (!filepath) {\n        console.warn('Unimplemented Saveas'); // TODO\n        return;\n      }\n\n      LocalProjectWriter._writeProjectJSONFile(project, filepath, err => {\n        if (err) {\n          console.error('Unable to write project', err);\n          return reject(err);\n        }\n\n        resolve();\n      });\n    });\n  };\n}\n","import optionalRequire from '../Utils/OptionalRequire.js';\nconst fs = optionalRequire('fs');\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nexport default class LocalProjectOpener {\n  static chooseProjectFile() {\n    return new Promise((resolve, reject) => {\n      if (!dialog) return reject('Not supported');\n\n      const browserWindow = electron.remote.getCurrentWindow();\n      dialog.showOpenDialog(\n        browserWindow,\n        {\n          title: 'Open a project',\n          properties: ['openFile'],\n          message:\n            'If you want to open your GDevelop 4 project, be sure to save it as a .json file',\n          filters: [{ name: 'GDevelop 5 project', extensions: ['json'] }],\n        },\n        paths => {\n          if (!paths || !paths.length) return resolve(null);\n\n          return resolve(paths[0]);\n        }\n      );\n    });\n  }\n\n  static readProjectJSONFile(filepath) {\n    return new Promise((resolve, reject) => {\n      if (!fs) return reject('Not supported');\n\n      fs.readFile(filepath, { encoding: 'utf8' }, (err, data) => {\n        if (err) return reject(err);\n\n        try {\n          const dataObject = JSON.parse(data);\n          return resolve(dataObject);\n        } catch (ex) {\n          return reject('Malformed file');\n        }\n      });\n    });\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport localFileSystem from '../LocalFileSystem';\nimport optionalRequire from '../../../Utils/OptionalRequire';\nimport { timeFunction } from '../../../Utils/TimeFunction';\nimport { findGDJS } from '../LocalGDJSFinder';\nimport LocalNetworkPreviewDialog from './LocalNetworkPreviewDialog';\nimport assignIn from 'lodash/assignIn';\nimport { type PreviewOptions } from '../../PreviewLauncher.flow';\nimport { findLocalIp } from './LocalIpFinder';\nimport SubscriptionChecker from '../../../Profile/SubscriptionChecker';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst BrowserWindow = electron ? electron.remote.BrowserWindow : null;\nconst gd = global.gd;\n\ntype Props = {|\n  onExport?: () => void,\n  onChangeSubscription?: () => void,\n|};\n\ntype State = {\n  networkPreviewDialogOpen: boolean,\n  networkPreviewHost: ?string,\n  networkPreviewPort: ?number,\n  networkPreviewError: ?any,\n  previewGamePath: ?string,\n  previewBrowserWindowConfig: ?{\n    width: number,\n    height: number,\n    useContentSize: boolean,\n    title: string,\n    backgroundColor: string,\n  },\n};\n\nexport default class LocalPreviewLauncher extends React.Component<\n  Props,\n  State\n> {\n  canDoNetworkPreview = () => true;\n\n  state = {\n    networkPreviewDialogOpen: false,\n    networkPreviewHost: null,\n    networkPreviewPort: null,\n    networkPreviewError: null,\n    previewGamePath: null,\n    previewBrowserWindowConfig: null,\n  };\n  _subscriptionChecker: ?SubscriptionChecker = null;\n\n  _openPreviewBrowserWindow = () => {\n    if (\n      !BrowserWindow ||\n      !this.state.previewBrowserWindowConfig ||\n      !this.state.previewGamePath\n    )\n      return;\n\n    const win = new BrowserWindow(this.state.previewBrowserWindowConfig);\n    win.loadURL(`file://${this.state.previewGamePath}/index.html`);\n  };\n\n  _openPreviewWindow = (\n    project: gdProject,\n    gamePath: string,\n    options: PreviewOptions\n  ): void => {\n    this.setState(\n      {\n        previewBrowserWindowConfig: {\n          width: project.getMainWindowDefaultWidth(),\n          height: project.getMainWindowDefaultHeight(),\n          useContentSize: true,\n          title: `Preview of ${project.getName()}`,\n          backgroundColor: '#000000',\n        },\n        previewGamePath: gamePath,\n      },\n      () => {\n        if (!options.networkPreview) {\n          this._openPreviewBrowserWindow();\n        } else {\n          if (!ipcRenderer) return;\n\n          ipcRenderer.removeAllListeners('serve-folder-done');\n          ipcRenderer.removeAllListeners('local-network-ips');\n          ipcRenderer.on('serve-folder-done', (event, err, serverParams) => {\n            if (err) {\n              this.setState({\n                networkPreviewDialogOpen: true,\n                networkPreviewPort: null,\n                networkPreviewHost: null,\n                networkPreviewError: err,\n              });\n            } else {\n              this.setState({\n                networkPreviewDialogOpen: true,\n                networkPreviewPort: serverParams.port,\n              });\n            }\n\n            setTimeout(() => this._checkSubscription());\n          });\n          ipcRenderer.on('local-network-ips', (event, ipAddresses) => {\n            this.setState({\n              networkPreviewHost: findLocalIp(ipAddresses),\n            });\n          });\n          ipcRenderer.send('serve-folder', {\n            root: gamePath,\n          });\n          ipcRenderer.send('get-local-network-ips');\n        }\n      }\n    );\n  };\n\n  _prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          //TODO\n          console.error('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const outputDir = path.join(fileSystem.getTempDir(), 'preview');\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n        resolve({\n          outputDir,\n          exporter,\n        });\n      });\n    });\n  };\n\n  launchLayoutPreview = (\n    project: gdProject,\n    layout: gdLayout,\n    options: PreviewOptions\n  ): Promise<any> => {\n    if (!project || !layout) return Promise.reject();\n\n    return this._prepareExporter().then(({ outputDir, exporter }) => {\n      timeFunction(\n        () => {\n          exporter.exportLayoutForPixiPreview(project, layout, outputDir);\n          exporter.delete();\n          this._openPreviewWindow(project, outputDir, options);\n        },\n        time => console.info(`Preview took ${time}ms`)\n      );\n    });\n  };\n\n  launchExternalLayoutPreview = (\n    project: gdProject,\n    layout: gdLayout,\n    externalLayout: gdExternalLayout,\n    options: PreviewOptions\n  ): Promise<any> => {\n    if (!project || !externalLayout) return Promise.reject();\n\n    return this._prepareExporter().then(({ outputDir, exporter }) => {\n      timeFunction(\n        () => {\n          exporter.exportExternalLayoutForPixiPreview(\n            project,\n            layout,\n            externalLayout,\n            outputDir\n          );\n          exporter.delete();\n          this._openPreviewWindow(project, outputDir, options);\n        },\n        time => console.info(`Preview took ${time}ms`)\n      );\n    });\n  };\n\n  _checkSubscription = (options: PreviewOptions) => {\n    if (!this._subscriptionChecker) return true;\n\n    return this._subscriptionChecker.checkHasSubscription();\n  };\n\n  render() {\n    const {\n      networkPreviewDialogOpen,\n      networkPreviewHost,\n      networkPreviewPort,\n      networkPreviewError,\n    } = this.state;\n    return (\n      <React.Fragment>\n        <SubscriptionChecker\n          ref={subscriptionChecker =>\n            (this._subscriptionChecker = subscriptionChecker)\n          }\n          onChangeSubscription={() => {\n            this.setState({ networkPreviewDialogOpen: false });\n            if (this.props.onChangeSubscription)\n              this.props.onChangeSubscription();\n          }}\n          id=\"Preview over wifi\"\n          title={<Trans>Preview over wifi</Trans>}\n          mode=\"try\"\n        />\n        <LocalNetworkPreviewDialog\n          open={networkPreviewDialogOpen}\n          url={\n            networkPreviewHost && networkPreviewPort\n              ? `${networkPreviewHost}:${networkPreviewPort}`\n              : null\n          }\n          error={networkPreviewError}\n          onClose={() => this.setState({ networkPreviewDialogOpen: false })}\n          onExport={this.props.onExport}\n          onRunPreviewLocally={this._openPreviewBrowserWindow}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../../UI/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport TextField from 'material-ui/TextField';\nimport { Line } from '../../../UI/Grid';\nimport PlaceholderLoader from '../../../UI/PlaceholderLoader';\n\ntype Props = {|\n  open: boolean,\n  url: ?string,\n  onClose: () => void,\n  onExport: ?() => void,\n  onRunPreviewLocally: () => void,\n  error: ?any,\n|};\n\nexport default class LocalNetworkDialog extends React.Component<Props, {}> {\n  render() {\n    const {\n      url,\n      open,\n      error,\n      onExport,\n      onClose,\n      onRunPreviewLocally,\n    } = this.props;\n    if (!open) return null;\n\n    return (\n      <Dialog\n        actions={[\n          <FlatButton\n            key=\"close\"\n            label={<Trans>Close</Trans>}\n            primary\n            onClick={onClose}\n          />,\n        ]}\n        secondaryActions={[\n          onExport && (\n            <FlatButton\n              key=\"export\"\n              label={<Trans>Export game</Trans>}\n              onClick={onExport}\n            />\n          ),\n          <FlatButton\n            key=\"run-preview-locally\"\n            label={<Trans>Run on this computer</Trans>}\n            onClick={onRunPreviewLocally}\n          />,\n        ]}\n        modal\n        open={open}\n        onRequestClose={onClose}\n      >\n        {error && (\n          <Line>\n            <Trans>\n              Unable to start the server for the preview! Make sure that you are\n              authorized to run servers on this computer. Otherwise, use classic\n              preview to test your game.\n            </Trans>\n          </Line>\n        )}\n        {!error && !url && <PlaceholderLoader />}\n        {!error && url && (\n          <div>\n            <Line>\n              <Trans>\n                Your preview is ready! On your mobile or tablet, open your\n                browser and enter in the address bar:\n              </Trans>\n            </Line>\n            <TextField value={url} fullWidth />\n            <Line>\n              <Trans>\n                Please note that your device should be connected on the same\n                network as this computer.\n              </Trans>\n            </Line>\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n","// @flow\n\nexport const findLocalIp = (ipAddresses: Array<string>): ?string => {\n  if (!ipAddresses.length) return null;\n\n  let firstLocalIp = ipAddresses.find(\n    ipAddress => ipAddress.indexOf('192.168') === 0\n  );\n  if (firstLocalIp) return firstLocalIp;\n\n  firstLocalIp = ipAddresses.find(ipAddress => ipAddress.indexOf('192') === 0);\n  if (firstLocalIp) return firstLocalIp;\n\n  return ipAddresses[0];\n};\n","import * as React from 'react';\nimport LocalExport from './LocalExport';\nimport LocalS3Export from './LocalS3Export';\nimport LocalOnlineCordovaExport from './LocalOnlineCordovaExport';\nimport LocalCordovaExport from './LocalCordovaExport';\nimport LocalCocos2dExport from './LocalCocos2dExport';\nimport LocalOnlineElectronExport from './LocalOnlineElectronExport';\nimport LocalFacebookInstantGamesExport from './LocalFacebookInstantGamesExport';\nimport LocalElectronExport from './LocalElectronExport';\nimport PhoneIphone from 'material-ui/svg-icons/hardware/phone-iphone';\nimport LaptopMac from 'material-ui/svg-icons/hardware/laptop-mac';\nimport Folder from 'material-ui/svg-icons/file/folder';\nimport Facebook from '../../UI/CustomSvgIcons/Facebook';\nimport Cordova from '../../UI/CustomSvgIcons/Cordova';\nimport Chrome from '../../UI/CustomSvgIcons/Chrome';\n\nexport const getLocalExporters = () => [\n  {\n    name: 'Android (& iOS coming soon)',\n    renderIcon: props => <PhoneIphone {...props} />,\n    helpPage: '/publishing/android_and_ios',\n    description:\n      'Package your game for Android directly from GDevelop. iOS support is coming soon!',\n    key: 'localonlinecordovaexport',\n    ExportComponent: LocalOnlineCordovaExport,\n  },\n  {\n    name: 'Facebook Instant Games',\n    renderIcon: props => <Facebook {...props} />,\n    helpPage: '/publishing/publishing-to-facebook-instant-games',\n    description:\n      'Package your game as a Facebook Instant Games that can be played on Facebook Messenger.',\n    key: 'localfacebookinstantgames',\n    ExportComponent: LocalFacebookInstantGamesExport,\n  },\n  {\n    name: 'Web (upload online)',\n    renderIcon: props => <Chrome {...props} />,\n    helpPage: '/publishing/web',\n    description:\n      'Upload your game online directly from GDevelop and share the link to players. Play to your game using your browser on computers and mobile phones.',\n    key: 'locals3export',\n    ExportComponent: LocalS3Export,\n  },\n  {\n    name: 'Local folder',\n    renderIcon: props => <Folder {...props} />,\n    helpPage: '/publishing/html5_game_in_a_local_folder',\n    description:\n      'Build the game locally as a HTML5 game. You can then export it on website like Itch.io or Kongregate.',\n    key: 'localexport',\n    ExportComponent: LocalExport,\n    advanced: true,\n  },\n  {\n    name: 'iOS & Android (manual)',\n    renderIcon: props => <Cordova {...props} />,\n    helpPage: '/publishing/android_and_ios_with_cordova',\n    description:\n      'Build the game locally as a Cordova project, and export it manually to iOS or Android with Cordova developers tools.',\n    key: 'localcordovaexport',\n    ExportComponent: LocalCordovaExport,\n    advanced: true,\n  },\n  {\n    name: 'Windows/macOS/Linux (beta)',\n    renderIcon: props => <LaptopMac {...props} />,\n    helpPage: '/publishing/windows-macos-linux',\n    description:\n      'Package your game as an app for Windows, macOS or Linux directly from GDevelop.',\n    key: 'localonlineelectronexport',\n    ExportComponent: LocalOnlineElectronExport,\n  },\n  {\n    name: 'Windows/macOS/Linux (manual)',\n    renderIcon: props => <LaptopMac {...props} />,\n    helpPage: '/publishing/windows-macos-linux-with-electron',\n    description:\n      'Build the game locally and export it manually to Windows, macOS or Linux with third-party developer tools.',\n    key: 'localelectronexport',\n    ExportComponent: LocalElectronExport,\n    advanced: true,\n  },\n  {\n    name: 'Cocos2d-JS',\n    renderIcon: props => <PhoneIphone {...props} />,\n    helpPage: '/publishing/android_and_ios_with_cocos2d-js',\n    description:\n      'Export your game using Cocos2d-JS game engine. The game can be compiled for Android or iOS if you install Cocos2d-JS developer tools.',\n    key: 'localcocos2dexport',\n    ExportComponent: LocalCocos2dExport,\n    experimental: true,\n  },\n];\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { sleep } from 'wait-promise';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport { sendExportLaunched } from '../../Utils/Analytics/EventSender';\nimport LocalExport from './LocalExport';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport LinearProgress from 'material-ui/LinearProgress';\nimport { GDevelopHostingApi } from '../../Utils/GDevelopServices/ApiConfigs';\nimport { makeTimestampedId } from '../../Utils/TimestampedId';\nimport TextField from 'material-ui/TextField';\nconst os = optionalRequire('os');\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst shell = electron ? electron.shell : null;\nconst gd = global.gd;\n\nexport default class LocalS3Export extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      exportStarted: false,\n      exportDone: false,\n      uploadDone: false,\n      deployDone: false,\n    };\n  }\n\n  _uploadToS3 = localDir => {\n    ipcRenderer.removeAllListeners('s3-folder-upload-progress');\n    ipcRenderer.removeAllListeners('s3-folder-upload-done');\n\n    return new Promise((resolve, reject) => {\n      ipcRenderer.on(\n        's3-folder-upload-progress',\n        (event, uploadProgress, uploadMax) =>\n          this.setState({\n            uploadProgress,\n            uploadMax,\n          })\n      );\n      ipcRenderer.on('s3-folder-upload-done', (event, err, prefix) => {\n        if (err) return reject(err);\n\n        this.setState({\n          uploadDone: true,\n        });\n        resolve(prefix);\n      });\n      ipcRenderer.send('s3-folder-upload', localDir);\n    });\n  };\n\n  _deploy = prefix => {\n    return sleep(200)\n      .then(() =>\n        //TODO: Move this to a GDevelopServices/Hosting.js file\n        axios(GDevelopHostingApi.deployEndpoint, {\n          method: 'post',\n          params: {\n            name: prefix,\n          },\n        })\n      )\n      .then(response => {\n        this.setState({\n          deployDone: true,\n        });\n        return response.data.deployedPrefix;\n      });\n  };\n\n  launchExport = () => {\n    const { project } = this.props;\n    if (!project) return;\n\n    sendExportLaunched('s3');\n    this.setState({\n      exportStarted: true,\n      exportDone: false,\n      uploadDone: false,\n      deployDone: false,\n    });\n\n    const outputDir = os.tmpdir() + '/GDS3Export-' + makeTimestampedId();\n    LocalExport.prepareExporter()\n      .then(({ exporter }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        this.setState({\n          exportDone: true,\n        });\n      })\n      .then(() => this._uploadToS3(outputDir))\n      .then(uploadPrefix => this._deploy(uploadPrefix))\n      .then(deployPrefix => {\n        //TODO: Move this to a function getURL in a GDevelopServices/Hosting.js file.\n        this.setState({\n          url: `${GDevelopHostingApi.gamesHost}/${deployPrefix}`,\n        });\n      })\n      .catch(err => {\n        console.error(err);\n        /*TODO: error*/\n      })\n      .then(() =>\n        this.setState({\n          exportStarted: false,\n        })\n      );\n  };\n\n  openURL = () => {\n    shell.openExternal(this.state.url);\n  };\n\n  renderUrl = () => {\n    return (\n      <Line alignItems=\"baseline\">\n        You game is available here:\n        <Spacer />\n        <TextField value={this.state.url} style={{ flex: 1 }} />\n        <Spacer />\n        <RaisedButton\n          label={<Trans>Open</Trans>}\n          primary={true}\n          onClick={this.openURL}\n        />\n      </Line>\n    );\n  };\n\n  render() {\n    const { project } = this.props;\n    if (!project) return null;\n\n    const {\n      url,\n      exportStarted,\n      exportDone,\n      uploadProgress,\n      uploadMax,\n      uploadDone,\n      deployDone,\n    } = this.state;\n\n    return (\n      <Column noMargin>\n        <Line>\n          <Trans>\n            This will export your game and upload it on GDevelop games hosting.\n            The game will be free and available for a few days.\n          </Trans>\n        </Line>\n        <Line alignItems=\"center\">\n          <LinearProgress\n            style={{ flex: 1 }}\n            max={uploadMax}\n            value={uploadProgress}\n            mode={\n              (exportStarted && !exportDone) || (uploadDone && !deployDone)\n                ? 'indeterminate'\n                : 'determinate'\n            }\n          />\n          <Spacer />\n          <RaisedButton\n            label={<Trans>Export and upload my game</Trans>}\n            primary={true}\n            onClick={this.launchExport}\n            disabled={exportStarted}\n          />\n        </Line>\n        {!!url && this.renderUrl()}\n      </Column>\n    );\n  }\n}\n","'use strict';\n\nfunction Wait(interval, beforeTime, afterTime, limit) {\n  this.every(interval, limit);\n  this.before(beforeTime);\n  this.after(afterTime | 0);\n}\n\nWait.prototype = {\n  before: function before(time) {\n    this.startTime = Date.now();\n    this.expires = this.startTime + time;\n    return this;\n  },\n  and: function and(func) {\n    this.routine = func;\n    return this;\n  },\n  after: function after(time) {\n    this.afterTime = time;\n    return this;\n  },\n  every: function every(interval, limit) {\n    this.interval = interval;\n    if (limit != null) this.limit(limit);\n    return this;\n  },\n  limit: function limit(_limit) {\n    _limit = _limit > 0 ? _limit : Infinity;\n    this.limit = _limit;\n    return this;\n  },\n  check: function check(cond) {\n    cond = cond || function () {};\n\n    return this.before(0).until(cond);\n  },\n  forward: function forward() {\n    var self = this;\n    return this.until(function () {\n      return false;\n    });\n  },\n  till: function till(cond) {\n    var self = this;\n    return this.until(function () {\n      var res;\n\n      try {\n        res = cond();\n        return res === true;\n      } catch (ex) {\n        self.limit = 0; //force error\n\n        throw ex;\n      }\n    });\n  },\n  until: function until(cond) {\n    var interval = this.interval,\n        afterTime = this.afterTime,\n        routine = this.routine,\n        self = this;\n    var timer,\n        called = 0;\n    return new Promise(function (resolve, reject) {\n      function f() {\n        var err, res;\n        routine && routine(called);\n        called++;\n\n        try {\n          res = cond();\n        } catch (ex) {\n          err = ex;\n        } finally {\n          if (Date.now() >= self.expires || called >= self.limit) {\n            clearInterval(timer);\n\n            if (err !== undefined || res === false) {\n              reject(err || new Error('check failed'));\n            } else {\n              resolve(res);\n            }\n\n            return true;\n          } else if (err === undefined && res !== false) {\n            clearInterval(timer);\n            resolve(res);\n            return true;\n          }\n\n          return false;\n        }\n      }\n\n      setTimeout(function () {\n        if (!f()) {\n          timer = setInterval(f, interval);\n        }\n      }, afterTime);\n    });\n  }\n};\nmodule.exports = {\n  every: function every(interval, limit) {\n    return new Wait(interval, Infinity, 0, limit);\n  },\n  and: function and(func) {\n    return new Wait(100, Infinity, 0).and(func);\n  },\n  limit: function limit(_limit2) {\n    return new Wait(100, Infinity, 0, _limit2);\n  },\n  before: function before(time, limit) {\n    return new Wait(100, time, 0, limit);\n  },\n  after: function after(time) {\n    return new Wait(100, Infinity, time);\n  },\n  sleep: function sleep(time) {\n    return new Wait(100, Infinity, time).check();\n  },\n  until: function until(cond) {\n    return new Wait(100, Infinity).until(cond);\n  },\n  forward: function forward() {\n    return new Wait(100, Infinity).forward();\n  },\n  till: function till(cond) {\n    return new Wait(100, Infinity).till(cond);\n  },\n  check: function check(cond) {\n    return new Wait(100, 0).until(cond);\n  }\n};","// @flow\n\nimport React, { Component } from 'react';\nimport assignIn from 'lodash/assignIn';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport { sendExportLaunched } from '../../../Utils/Analytics/EventSender';\nimport {\n  type Build,\n  buildCordovaAndroid,\n  getUrl,\n} from '../../../Utils/GDevelopServices/Build';\nimport UserProfileContext, {\n  type UserProfile,\n} from '../../../Profile/UserProfileContext';\nimport { Column, Line } from '../../../UI/Grid';\nimport { showErrorBox } from '../../../UI/Messages/MessageBox';\nimport { findGDJS } from '../LocalGDJSFinder';\nimport localFileSystem from '../LocalFileSystem';\nimport { archiveFolder } from '../../../Utils/Archiver';\nimport optionalRequire from '../../../Utils/OptionalRequire.js';\nimport Window from '../../../Utils/Window';\nimport CreateProfile from '../../../Profile/CreateProfile';\nimport LimitDisplayer from '../../../Profile/LimitDisplayer';\nimport {\n  displayProjectErrorsBox,\n  getErrors,\n} from '../../../ProjectManager/ProjectErrorsChecker';\nimport { type Limit } from '../../../Utils/GDevelopServices/Usage';\nimport BuildsWatcher from '../../Builds/BuildsWatcher';\nimport BuildStepsProgress, {\n  type BuildStep,\n} from '../../Builds/BuildStepsProgress';\nconst path = optionalRequire('path');\nconst os = optionalRequire('os');\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\ntype State = {\n  exportStep: BuildStep,\n  build: ?Build,\n  uploadProgress: number,\n  uploadMax: number,\n  errored: boolean,\n};\n\ntype Props = {\n  project: gdProject,\n  onChangeSubscription: Function,\n};\n\nclass LocalOnlineCordovaExport extends Component<Props, State> {\n  state = {\n    exportStep: '',\n    build: null,\n    uploadProgress: 0,\n    uploadMax: 0,\n    errored: false,\n  };\n  buildsWatcher = new BuildsWatcher();\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n        const outputDir = path.join(\n          fileSystem.getTempDir(),\n          'OnlineCordovaExport'\n        );\n        fileSystem.mkDir(outputDir);\n        fileSystem.clearDir(outputDir);\n\n        resolve({\n          exporter,\n          outputDir,\n        });\n      });\n    });\n  };\n\n  componentWillUnmount() {\n    this.buildsWatcher.stop();\n  }\n\n  launchExport = (): Promise<string> => {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return Promise.reject();\n\n    return LocalOnlineCordovaExport.prepareExporter()\n      .then(({ exporter, outputDir }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exportOptions.set('exportForCordova', true);\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        return outputDir;\n      })\n      .catch(err => {\n        showErrorBox(t('Unable to export the game'), err);\n        throw err;\n      });\n  };\n\n  launchCompression = (outputDir: string): Promise<string> => {\n    const archiveOutputDir = os.tmpdir();\n    return archiveFolder({\n      path: outputDir,\n      outputFilename: path.join(archiveOutputDir, 'game-archive.zip'),\n    });\n  };\n\n  launchUpload = (outputFile: string): Promise<string> => {\n    if (!ipcRenderer) return Promise.reject('No support for upload');\n\n    ipcRenderer.removeAllListeners('s3-file-upload-progress');\n    ipcRenderer.removeAllListeners('s3-file-upload-done');\n\n    return new Promise((resolve, reject) => {\n      ipcRenderer.on(\n        's3-file-upload-progress',\n        (event, uploadProgress, uploadMax) => {\n          this.setState({\n            uploadProgress,\n            uploadMax,\n          });\n        }\n      );\n      ipcRenderer.on('s3-file-upload-done', (event, err, prefix) => {\n        if (err) return reject(err);\n        resolve(prefix);\n      });\n      ipcRenderer.send('s3-file-upload', outputFile);\n    });\n  };\n\n  launchBuild = (\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildCordovaAndroid(\n      getAuthorizationHeader,\n      profile.uid,\n      uploadBucketKey\n    );\n  };\n\n  startBuildWatch = (userProfile: UserProfile) => {\n    if (!this.state.build) return;\n\n    this.buildsWatcher.start({\n      userProfile,\n      builds: [this.state.build],\n      onBuildUpdated: (build: Build) => this.setState({ build }),\n    });\n  };\n\n  launchWholeExport = (userProfile: UserProfile) => {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    sendExportLaunched('local-online-cordova');\n\n    if (!displayProjectErrorsBox(t, getErrors(t, project))) return;\n\n    const handleError = (message: string) => err => {\n      if (!this.state.errored) {\n        this.setState({\n          errored: true,\n        });\n        showErrorBox(message + (err.message ? `\\n${err.message}` : ''), {\n          exportStep: this.state.exportStep,\n          rawError: err,\n        });\n      }\n\n      throw err;\n    };\n\n    this.setState({\n      exportStep: 'export',\n      uploadProgress: 0,\n      uploadMax: 0,\n      errored: false,\n      build: null,\n    });\n    this.launchExport()\n      .then(outputDir => {\n        this.setState({\n          exportStep: 'compress',\n        });\n        return this.launchCompression(outputDir);\n      }, handleError(t('Error while exporting the game.')))\n      .then(outputFile => {\n        this.setState({\n          exportStep: 'upload',\n        });\n        return this.launchUpload(outputFile);\n      }, handleError(t('Error while compressing the game.')))\n      .then((uploadBucketKey: string) => {\n        this.setState({\n          exportStep: 'waiting-for-build',\n        });\n        return this.launchBuild(userProfile, uploadBucketKey);\n      }, handleError(t('Error while uploading the game. Check your internet connection or try again later.')))\n      .then(build => {\n        this.setState(\n          {\n            build,\n            exportStep: 'build',\n          },\n          () => {\n            this.startBuildWatch(userProfile);\n          }\n        );\n      }, handleError(t('Error while lauching the build of the game.')));\n  };\n\n  _download = (key: string) => {\n    if (!this.state.build || !this.state.build[key]) return;\n\n    Window.openExternalURL(getUrl(this.state.build[key]));\n  };\n\n  render() {\n    const {\n      exportStep,\n      build,\n      uploadMax,\n      uploadProgress,\n      errored,\n    } = this.state;\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return null;\n\n    const getBuildLimit = (userProfile: UserProfile): ?Limit =>\n      userProfile.limits ? userProfile.limits['cordova-build'] : null;\n    const canLaunchBuild = (userProfile: UserProfile) => {\n      if (!errored && exportStep !== '' && exportStep !== 'build') return false;\n\n      const limit: ?Limit = getBuildLimit(userProfile);\n      if (limit && limit.limitReached) return false;\n\n      return true;\n    };\n\n    return (\n      <UserProfileContext.Consumer>\n        {(userProfile: UserProfile) => (\n          <Column noMargin>\n            <Line>\n              {t(\n                'Packaging your game for Android will create an APK file that can be installed on Android phones, based on Cordova framework.'\n              )}\n            </Line>\n            {userProfile.authenticated && (\n              <Line justifyContent=\"center\">\n                <RaisedButton\n                  label={t('Package for Android')}\n                  primary\n                  onClick={() => this.launchWholeExport(userProfile)}\n                  disabled={!canLaunchBuild(userProfile)}\n                />\n              </Line>\n            )}\n            {userProfile.authenticated && (\n              <LimitDisplayer\n                subscription={userProfile.subscription}\n                limit={getBuildLimit(userProfile)}\n                onChangeSubscription={this.props.onChangeSubscription}\n              />\n            )}\n            {!userProfile.authenticated && (\n              <CreateProfile\n                message={t(\n                  'Create an account to build your game for Android in one-click:'\n                )}\n                onLogin={userProfile.onLogin}\n              />\n            )}\n            <Line expand>\n              <BuildStepsProgress\n                exportStep={exportStep}\n                build={build}\n                onDownload={this._download}\n                uploadMax={uploadMax}\n                uploadProgress={uploadProgress}\n                errored={errored}\n              />\n            </Line>\n          </Column>\n        )}\n      </UserProfileContext.Consumer>\n    );\n  }\n}\n\nexport default LocalOnlineCordovaExport;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport { sendExportLaunched } from '../../Utils/Analytics/EventSender';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport { findGDJS } from './LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport HelpButton from '../../UI/HelpButton';\nimport {\n  displayProjectErrorsBox,\n  getErrors,\n} from '../../ProjectManager/ProjectErrorsChecker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport Window from '../../Utils/Window';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype Props = {|\n  project: gdProject,\n|};\n\ntype State = {|\n  outputDir: string,\n  exportFinishedDialogOpen: boolean,\n|};\n\nclass LocalCordovaExport extends Component<Props, State> {\n  state = {\n    exportFinishedDialogOpen: false,\n    outputDir: '',\n  };\n\n  componentDidMount() {\n    const { project } = this.props;\n    this.setState({\n      outputDir: project ? project.getLastCompilationDirectory() : '',\n    });\n  }\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n        resolve({\n          exporter,\n        });\n      });\n    });\n  };\n\n  launchExport = () => {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return;\n\n    sendExportLaunched('local-cordova');\n\n    if (!displayProjectErrorsBox(t, getErrors(t, project))) return;\n\n    const outputDir = this.state.outputDir;\n    project.setLastCompilationDirectory(outputDir);\n\n    LocalCordovaExport.prepareExporter()\n      .then(({ exporter }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exportOptions.set('exportForCordova', true);\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        this.setState({\n          exportFinishedDialogOpen: true,\n        });\n      })\n      .catch(err => {\n        showErrorBox('Unable to export the game', err);\n      });\n  };\n\n  openExportFolder = () => {\n    if (shell) shell.openItem(this.state.outputDir);\n  };\n\n  openPhoneGapBuild = () => {\n    Window.openExternalURL('https://build.phonegap.com');\n  };\n\n  render() {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return null;\n\n    return (\n      <Column noMargin>\n        <Line>\n          <Column noMargin>\n            <p>\n              This will export your game as a Cordova project. Cordova is a\n              technology that enables HTML5 games to be packaged for <b>iOS</b>,{' '}\n              <b>Android</b> and more.\n            </p>\n            <p>\n              Third-party tools like <b>Adobe PhoneGap Build</b> allow game\n              developers to bundle their games using Cordova.\n            </p>\n          </Column>\n        </Line>\n        <Line>\n          <LocalFolderPicker\n            value={this.state.outputDir}\n            defaultPath={project.getLastCompilationDirectory()}\n            onChange={value => this.setState({ outputDir: value })}\n            fullWidth\n          />\n        </Line>\n        <Line>\n          <Spacer expand />\n          <RaisedButton\n            label={<Trans>Export</Trans>}\n            primary={true}\n            onClick={this.launchExport}\n            disabled={!this.state.outputDir}\n          />\n        </Line>\n        <Dialog\n          title={t('Export finished')}\n          actions={[\n            <FlatButton\n              key=\"open\"\n              label={<Trans>Open folder</Trans>}\n              primary={true}\n              onClick={this.openExportFolder}\n            />,\n            <FlatButton\n              key=\"close\"\n              label={<Trans>Close</Trans>}\n              primary={false}\n              onClick={() =>\n                this.setState({\n                  exportFinishedDialogOpen: false,\n                })\n              }\n            />,\n          ]}\n          secondaryActions={\n            <HelpButton key=\"help\" helpPagePath=\"/publishing\" />\n          }\n          modal\n          open={this.state.exportFinishedDialogOpen}\n        >\n          <p>\n            You can now compress and upload the game to <b>PhoneGap Build</b>{' '}\n            which will compile it for you to an iOS and Android app.\n          </p>\n          <p>\n            <Trans>\n              You can also compile the game by yourself using Cordova\n              command-line tool to iOS (XCode is required) or Android (Android\n              SDK is required).\n            </Trans>\n          </p>\n          <RaisedButton\n            fullWidth\n            primary\n            onClick={() => this.openPhoneGapBuild()}\n            label={t('Open PhoneGap Build')}\n          />\n        </Dialog>\n      </Column>\n    );\n  }\n}\n\nexport default LocalCordovaExport;\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Toggle from 'material-ui/Toggle';\nimport { sendExportLaunched } from '../../Utils/Analytics/EventSender';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport HelpButton from '../../UI/HelpButton';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport { findGDJS } from './LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\nexport default class LocalCocos2dExport extends Component {\n  state = {\n    exportFinishedDialogOpen: false,\n    outputDir: '',\n    debugMode: false,\n  };\n\n  componentDidMount() {\n    const { project } = this.props;\n    this.setState({\n      outputDir: project ? project.getLastCompilationDirectory() : '',\n    });\n  }\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n        resolve({\n          exporter,\n        });\n      });\n    });\n  };\n\n  launchExport = () => {\n    const { project } = this.props;\n    if (!project) return;\n\n    sendExportLaunched('local-cocos2d');\n\n    const { outputDir, debugMode } = this.state;\n    project.setLastCompilationDirectory(outputDir);\n\n    LocalCocos2dExport.prepareExporter()\n      .then(({ exporter }) => {\n        exporter.exportWholeCocos2dProject(project, debugMode, outputDir);\n        exporter.delete();\n        this.setState({\n          exportFinishedDialogOpen: true,\n        });\n      })\n      .catch(err => {\n        showErrorBox('Unable to export the game with Cocos2d-JS', err);\n      });\n  };\n\n  openExportFolder = () => {\n    shell.openItem(this.state.outputDir);\n  };\n\n  render() {\n    const { project } = this.props;\n    if (!project) return null;\n\n    return (\n      <Column noMargin>\n        <Line>\n          <Trans>\n            This will export your game using Cocos2d-JS game engine. The game\n            can be compiled for Android or iOS if you install Cocos2d-JS\n            developer tools.\n          </Trans>\n        </Line>\n        <Line>\n          <LocalFolderPicker\n            value={this.state.outputDir}\n            defaultPath={project.getLastCompilationDirectory()}\n            onChange={value => this.setState({ outputDir: value })}\n            fullWidth\n          />\n        </Line>\n        <Line>\n          <Toggle\n            onToggle={(e, check) =>\n              this.setState({\n                debugMode: check,\n              })\n            }\n            toggled={this.state.debugMode}\n            labelPosition=\"right\"\n            label={\n              <Trans>\n                Debug mode (show FPS counter and stats in the bottom left)\n              </Trans>\n            }\n          />\n        </Line>\n        <Line>\n          <Spacer expand />\n          <RaisedButton\n            label={<Trans>Export</Trans>}\n            primary={true}\n            onClick={this.launchExport}\n            disabled={!this.state.outputDir}\n          />\n        </Line>\n        <Dialog\n          title={<Trans>Export finished</Trans>}\n          actions={[\n            <FlatButton\n              key=\"open\"\n              label={<Trans>Open folder</Trans>}\n              primary={true}\n              onClick={this.openExportFolder}\n            />,\n            <FlatButton\n              key=\"close\"\n              label={<Trans>Close</Trans>}\n              primary={false}\n              onClick={() =>\n                this.setState({\n                  exportFinishedDialogOpen: false,\n                })\n              }\n            />,\n          ]}\n          secondaryActions={\n            <HelpButton key=\"help\" helpPagePath=\"/publishing\" />\n          }\n          modal\n          open={this.state.exportFinishedDialogOpen}\n        >\n          You can now upload the game to a web hosting or use Cocos2d-JS command\n          line tools to export it to other platforms like iOS (XCode is\n          required) or Android (Android SDK is required).\n        </Dialog>\n      </Column>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport assignIn from 'lodash/assignIn';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Checkbox from 'material-ui/Checkbox';\nimport { sendExportLaunched } from '../../../Utils/Analytics/EventSender';\nimport {\n  type Build,\n  buildElectron,\n  getUrl,\n} from '../../../Utils/GDevelopServices/Build';\nimport UserProfileContext, {\n  type UserProfile,\n} from '../../../Profile/UserProfileContext';\nimport { Column, Line } from '../../../UI/Grid';\nimport { showErrorBox } from '../../../UI/Messages/MessageBox';\nimport { findGDJS } from '../LocalGDJSFinder';\nimport localFileSystem from '../LocalFileSystem';\nimport { archiveFolder } from '../../../Utils/Archiver';\nimport optionalRequire from '../../../Utils/OptionalRequire.js';\nimport Window from '../../../Utils/Window';\nimport CreateProfile from '../../../Profile/CreateProfile';\nimport LimitDisplayer from '../../../Profile/LimitDisplayer';\nimport {\n  displayProjectErrorsBox,\n  getErrors,\n} from '../../../ProjectManager/ProjectErrorsChecker';\nimport { type Limit } from '../../../Utils/GDevelopServices/Usage';\nimport { type TargetName } from '../../../Utils/GDevelopServices/Build';\nimport BuildsWatcher from '../../Builds/BuildsWatcher';\nimport BuildStepsProgress, {\n  type BuildStep,\n} from '../../Builds/BuildStepsProgress';\nconst path = optionalRequire('path');\nconst os = optionalRequire('os');\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\ntype State = {\n  exportStep: BuildStep,\n  build: ?Build,\n  uploadProgress: number,\n  uploadMax: number,\n  errored: boolean,\n  targets: Array<TargetName>,\n};\n\ntype Props = {\n  project: gdProject,\n  onChangeSubscription: Function,\n};\n\nclass LocalOnlineElectronExport extends Component<Props, State> {\n  state = {\n    exportStep: '',\n    build: null,\n    uploadProgress: 0,\n    uploadMax: 0,\n    errored: false,\n    targets: ['winExe'],\n  };\n  buildsWatcher = new BuildsWatcher();\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n        const outputDir = path.join(\n          fileSystem.getTempDir(),\n          'OnlineElectronExport'\n        );\n        fileSystem.mkDir(outputDir);\n        fileSystem.clearDir(outputDir);\n\n        resolve({\n          exporter,\n          outputDir,\n        });\n      });\n    });\n  };\n\n  componentWillUnmount() {\n    this.buildsWatcher.stop();\n  }\n\n  launchExport = (): Promise<string> => {\n    const t = str => str; //TODO\n    const { project } = this.props;\n    if (!project) return Promise.reject();\n\n    return LocalOnlineElectronExport.prepareExporter()\n      .then(({ exporter, outputDir }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exportOptions.set('exportForElectron', true);\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        return outputDir;\n      })\n      .catch(err => {\n        showErrorBox(t('Unable to export the game'), err);\n        throw err;\n      });\n  };\n\n  launchCompression = (outputDir: string): Promise<string> => {\n    const archiveOutputDir = os.tmpdir();\n    return archiveFolder({\n      path: outputDir,\n      outputFilename: path.join(archiveOutputDir, 'game-archive.zip'),\n    });\n  };\n\n  launchUpload = (outputFile: string): Promise<string> => {\n    if (!ipcRenderer) return Promise.reject('No support for upload');\n\n    ipcRenderer.removeAllListeners('s3-file-upload-progress');\n    ipcRenderer.removeAllListeners('s3-file-upload-done');\n\n    return new Promise((resolve, reject) => {\n      ipcRenderer.on(\n        's3-file-upload-progress',\n        (event, uploadProgress, uploadMax) => {\n          this.setState({\n            uploadProgress,\n            uploadMax,\n          });\n        }\n      );\n      ipcRenderer.on('s3-file-upload-done', (event, err, prefix) => {\n        if (err) return reject(err);\n        resolve(prefix);\n      });\n      ipcRenderer.send('s3-file-upload', outputFile);\n    });\n  };\n\n  launchBuild = (\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildElectron(\n      getAuthorizationHeader,\n      profile.uid,\n      uploadBucketKey,\n      this.state.targets\n    );\n  };\n\n  startBuildWatch = (userProfile: UserProfile) => {\n    if (!this.state.build) return;\n\n    this.buildsWatcher.start({\n      userProfile,\n      builds: [this.state.build],\n      onBuildUpdated: (build: Build) => this.setState({ build }),\n    });\n  };\n\n  launchWholeExport = (userProfile: UserProfile) => {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    sendExportLaunched('local-online-electron');\n\n    if (!displayProjectErrorsBox(t, getErrors(t, project))) return;\n\n    const handleError = (message: string) => err => {\n      if (!this.state.errored) {\n        this.setState({\n          errored: true,\n        });\n        showErrorBox(message + (err.message ? `\\n${err.message}` : ''), {\n          exportStep: this.state.exportStep,\n          rawError: err,\n        });\n      }\n\n      throw err;\n    };\n\n    this.setState({\n      exportStep: 'export',\n      uploadProgress: 0,\n      uploadMax: 0,\n      errored: false,\n      build: null,\n    });\n    this.launchExport()\n      .then(outputDir => {\n        this.setState({\n          exportStep: 'compress',\n        });\n        return this.launchCompression(outputDir);\n      }, handleError(t('Error while exporting the game.')))\n      .then(outputFile => {\n        this.setState({\n          exportStep: 'upload',\n        });\n        return this.launchUpload(outputFile);\n      }, handleError(t('Error while compressing the game.')))\n      .then((uploadBucketKey: string) => {\n        this.setState({\n          exportStep: 'waiting-for-build',\n        });\n        return this.launchBuild(userProfile, uploadBucketKey);\n      }, handleError(t('Error while uploading the game. Check your internet connection or try again later.')))\n      .then(build => {\n        this.setState(\n          {\n            build,\n            exportStep: 'build',\n          },\n          () => {\n            this.startBuildWatch(userProfile);\n          }\n        );\n      }, handleError(t('Error while lauching the build of the game.')));\n  };\n\n  _download = (key: string) => {\n    if (!this.state.build || !this.state.build[key]) return;\n\n    Window.openExternalURL(getUrl(this.state.build[key]));\n  };\n\n  _setTarget = (targetName: TargetName, enable: boolean) => {\n    if (enable && this.state.targets.indexOf(targetName) === -1) {\n      this.setState({\n        targets: [...this.state.targets, targetName],\n      });\n    } else if (!enable && this.state.targets.indexOf(targetName) !== -1) {\n      this.setState({\n        targets: this.state.targets.filter(name => name !== targetName),\n      });\n    }\n  };\n\n  render() {\n    const {\n      exportStep,\n      build,\n      uploadMax,\n      uploadProgress,\n      errored,\n    } = this.state;\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return null;\n\n    const getBuildLimit = (userProfile: UserProfile): ?Limit =>\n      userProfile.limits ? userProfile.limits['electron-build'] : null;\n    const canLaunchBuild = (userProfile: UserProfile) => {\n      if (!errored && exportStep !== '' && exportStep !== 'build') return false;\n\n      const limit: ?Limit = getBuildLimit(userProfile);\n      if (limit && limit.limitReached) return false;\n\n      if (!this.state.targets.length) return false;\n\n      return true;\n    };\n\n    return (\n      <UserProfileContext.Consumer>\n        {(userProfile: UserProfile) => (\n          <Column noMargin>\n            <Line>\n              {t(\n                'Your game will be exported and packaged online as an stand-alone game for Windows, Linux and/or macOS.'\n              )}\n            </Line>\n            <Checkbox\n              label={<Trans>Windows (zip file)</Trans>}\n              checked={this.state.targets.indexOf('winZip') !== -1}\n              onCheck={(e, checked) => this._setTarget('winZip', checked)}\n            />\n            <Checkbox\n              label={<Trans>Windows (auto-installer file)</Trans>}\n              checked={this.state.targets.indexOf('winExe') !== -1}\n              onCheck={(e, checked) => this._setTarget('winExe', checked)}\n            />\n            <Checkbox\n              label={<Trans>macOS (zip file)</Trans>}\n              checked={this.state.targets.indexOf('macZip') !== -1}\n              onCheck={(e, checked) => this._setTarget('macZip', checked)}\n            />\n            <Checkbox\n              label={<Trans>Linux (AppImage)</Trans>}\n              checked={this.state.targets.indexOf('linuxAppImage') !== -1}\n              onCheck={(e, checked) =>\n                this._setTarget('linuxAppImage', checked)\n              }\n            />\n            {userProfile.authenticated && (\n              <Line justifyContent=\"center\">\n                <RaisedButton\n                  label={t('Export')}\n                  primary\n                  onClick={() => this.launchWholeExport(userProfile)}\n                  disabled={!canLaunchBuild(userProfile)}\n                />\n              </Line>\n            )}\n            {userProfile.authenticated && (\n              <LimitDisplayer\n                subscription={userProfile.subscription}\n                limit={getBuildLimit(userProfile)}\n                onChangeSubscription={this.props.onChangeSubscription}\n              />\n            )}\n            {!userProfile.authenticated && (\n              <CreateProfile\n                message={t(\n                  'Create an account to build your game for Windows, Linux and macOS in one-click:'\n                )}\n                onLogin={userProfile.onLogin}\n              />\n            )}\n            <Line expand>\n              <BuildStepsProgress\n                exportStep={exportStep}\n                build={build}\n                onDownload={this._download}\n                uploadMax={uploadMax}\n                uploadProgress={uploadProgress}\n                errored={errored}\n                showSeeAllMyBuildsExplanation\n              />\n            </Line>\n          </Column>\n        )}\n      </UserProfileContext.Consumer>\n    );\n  }\n}\n\nexport default LocalOnlineElectronExport;\n","// @flow\n\nimport React, { Component } from 'react';\nimport assignIn from 'lodash/assignIn';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport { sendExportLaunched } from '../../../Utils/Analytics/EventSender';\nimport { Column, Line, Spacer } from '../../../UI/Grid';\nimport LocalFilePicker from '../../../UI/LocalFilePicker';\nimport { showErrorBox } from '../../../UI/Messages/MessageBox';\nimport { findGDJS } from '../LocalGDJSFinder';\nimport localFileSystem from '../LocalFileSystem';\nimport Progress from './Progress';\nimport { archiveFolder } from '../../../Utils/Archiver';\nimport optionalRequire from '../../../Utils/OptionalRequire.js';\nimport Window from '../../../Utils/Window';\nimport { getHelpLink } from '../../../Utils/HelpLink';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\nexport type LocalFacebookInstantGamesExportStep =\n  | ''\n  | 'export'\n  | 'compress'\n  | 'done';\n\ntype State = {|\n  archiveOutputFilename: string,\n  exportStep: LocalFacebookInstantGamesExportStep,\n  errored: boolean,\n|};\n\ntype Props = {\n  project: gdProject,\n  onChangeSubscription: Function,\n};\n\nclass LocalFacebookInstantGamesExport extends Component<Props, State> {\n  state = {\n    archiveOutputFilename: app\n      ? path.join(app.getPath('documents'), 'fb-instant-game.zip')\n      : '',\n    exportStep: '',\n    errored: false,\n  };\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n        const outputDir = path.join(\n          fileSystem.getTempDir(),\n          'FacebookInstantGamesExport'\n        );\n        fileSystem.mkDir(outputDir);\n        fileSystem.clearDir(outputDir);\n\n        resolve({\n          exporter,\n          outputDir,\n        });\n      });\n    });\n  };\n\n  launchExport = (): Promise<string> => {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return Promise.reject();\n\n    return LocalFacebookInstantGamesExport.prepareExporter()\n      .then(({ exporter, outputDir }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exportOptions.set('exportForFacebookInstantGames', true);\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        return outputDir;\n      })\n      .catch(err => {\n        showErrorBox(t('Unable to export the game'), err);\n        throw err;\n      });\n  };\n\n  launchCompression = (outputDir: string): Promise<string> => {\n    return archiveFolder({\n      path: outputDir,\n      outputFilename: this.state.archiveOutputFilename,\n    });\n  };\n\n  launchWholeExport = () => {\n    const t = str => str; //TODO\n    sendExportLaunched('local-facebook-instant-games');\n\n    const handleError = (message: string) => err => {\n      if (!this.state.errored) {\n        this.setState({\n          errored: true,\n        });\n        showErrorBox(message, {\n          exportStep: this.state.exportStep,\n          rawError: err,\n        });\n      }\n\n      throw err;\n    };\n\n    this.setState({\n      exportStep: 'export',\n      errored: false,\n    });\n    this.launchExport()\n      .then(outputDir => {\n        this.setState({\n          exportStep: 'compress',\n        });\n        return this.launchCompression(outputDir);\n      }, handleError(t('Error while exporting the game.')))\n      .then(() => {\n        this.setState({\n          exportStep: 'done',\n        });\n      }, handleError(t('Error while building the game.')));\n  };\n\n  openExportFolder = () => {\n    if (shell) shell.openItem(path.dirname(this.state.archiveOutputFilename));\n  };\n\n  openLearnMore = () => {\n    Window.openExternalURL(\n      getHelpLink('/publishing/publishing-to-facebook-instant-games')\n    );\n  };\n\n  render() {\n    const { exportStep, errored } = this.state;\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return null;\n\n    return (\n      <Column noMargin>\n        <Line>\n          {t(\n            'Prepare your game for Facebook Instant Games so that it can be play on Facebook Messenger. GDevelop will create a compressed file that you can upload on your Facebook Developer account.'\n          )}\n        </Line>\n        <Line>\n          <LocalFilePicker\n            title={t('Facebook Instant Games export zip file')}\n            message={t(\n              'Choose where to save the exported file for Facebook Instant Games'\n            )}\n            filters={[\n              {\n                name: t('Compressed file for Facebook Instant Games'),\n                extensions: ['zip'],\n              },\n            ]}\n            value={this.state.archiveOutputFilename}\n            defaultPath={app ? app.getPath('documents') : ''}\n            onChange={value => this.setState({ archiveOutputFilename: value })}\n            fullWidth\n          />\n        </Line>\n        <Line>\n          <Spacer expand />\n          <RaisedButton\n            label={t('Export')}\n            primary\n            onClick={this.launchWholeExport}\n            disabled={!this.state.archiveOutputFilename}\n          />\n        </Line>\n        <Line>\n          <Progress\n            exportStep={exportStep}\n            errored={errored}\n            onOpenExportFolder={this.openExportFolder}\n            onOpenLearnMore={this.openLearnMore}\n          />\n        </Line>\n      </Column>\n    );\n  }\n}\n\nexport default LocalFacebookInstantGamesExport;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { PureComponent } from 'react';\nimport TextField from 'material-ui/TextField';\nimport FlatButton from 'material-ui/FlatButton';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'baseline',\n  },\n  button: {\n    marginLeft: 10,\n  },\n  textField: {\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  value: string,\n  onChange: string => void,\n  title: string,\n  message: string,\n  defaultPath?: string,\n  fullWidth?: boolean,\n  floatingLabelText?: string,\n  filters: Array<{\n    name: string,\n    extensions: Array<string>,\n  }>,\n|};\n\nexport default class LocalFilePicker extends PureComponent<Props, *> {\n  onChooseFolder = () => {\n    if (!dialog || !electron) return;\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showSaveDialog(\n      browserWindow,\n      {\n        title: this.props.title,\n        filters: this.props.filters,\n        message: this.props.message,\n        defaultPath: this.props.defaultPath,\n      },\n      filename => {\n        this.props.onChange(filename || '');\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          ...styles.container,\n          width: this.props.fullWidth ? '100%' : undefined,\n        }}\n      >\n        <TextField\n          style={styles.textField}\n          floatingLabelText={this.props.floatingLabelText}\n          floatingLabelFixed\n          type=\"text\"\n          hintText={<Trans>Click to choose</Trans>}\n          value={this.props.value}\n          onChange={(event, value) => this.props.onChange(value)}\n        />\n        <FlatButton\n          label={<Trans>Choose</Trans>}\n          style={styles.button}\n          onClick={this.onChooseFolder}\n        />\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { Step, Stepper, StepLabel, StepContent } from 'material-ui/Stepper';\nimport CircularProgress from 'material-ui/CircularProgress';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport FlatButton from 'material-ui/FlatButton';\nimport { Line, Spacer } from '../../../UI/Grid';\nimport { type LocalFacebookInstantGamesExportStep } from '.';\n\ntype Props = {|\n  exportStep: LocalFacebookInstantGamesExportStep,\n  errored: boolean,\n  onOpenExportFolder: () => void,\n  onOpenLearnMore: () => void,\n|};\n\nexport default ({\n  exportStep,\n  errored,\n  onOpenExportFolder,\n  onOpenLearnMore,\n}: Props) => (\n  <Stepper\n    activeStep={\n      exportStep === 'export'\n        ? 0\n        : exportStep === 'compress'\n        ? 1\n        : exportStep === 'done'\n        ? 2\n        : undefined\n    }\n    orientation=\"vertical\"\n  >\n    <Step>\n      <StepLabel>Game export</StepLabel>\n      <StepContent>\n        <Line alignItems=\"center\">\n          <CircularProgress size={20} />\n          <Spacer />\n          <p>\n            <Trans>Export in progress...</Trans>\n          </p>\n        </Line>\n      </StepContent>\n    </Step>\n    <Step>\n      <StepLabel>Upload to build service</StepLabel>\n      <StepContent>\n        {errored ? (\n          <p>\n            <Trans>\n              Can't compress the game. Please check that you have rights to\n              write on this computer.\n            </Trans>\n          </p>\n        ) : (\n          <Line alignItems=\"center\">\n            <CircularProgress size={20} />\n            <Spacer />\n            <p>\n              <Trans>Compressing...</Trans>\n            </p>\n          </Line>\n        )}\n      </StepContent>\n    </Step>\n    <Step>\n      <StepLabel>Export finished</StepLabel>\n      <StepContent>\n        <Line expand>\n          You can now create a game on Facebook Instant Games, if not already\n          done, and upload the archive generated.\n        </Line>\n        <Line expand>\n          <FlatButton\n            label={<Trans>Open folder</Trans>}\n            onClick={onOpenExportFolder}\n          />\n          <RaisedButton\n            label={<Trans>Learn more about Instant Games publication</Trans>}\n            primary\n            onClick={onOpenLearnMore}\n          />\n        </Line>\n      </StepContent>\n    </Step>\n  </Stepper>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport { sendExportLaunched } from '../../Utils/Analytics/EventSender';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport { findGDJS } from './LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport HelpButton from '../../UI/HelpButton';\nimport {\n  displayProjectErrorsBox,\n  getErrors,\n} from '../../ProjectManager/ProjectErrorsChecker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype Props = {|\n  project: gdProject,\n|};\n\ntype State = {|\n  outputDir: string,\n  exportFinishedDialogOpen: boolean,\n|};\n\nclass LocalElectronExport extends Component<Props, State> {\n  state = {\n    exportFinishedDialogOpen: false,\n    outputDir: '',\n  };\n\n  componentDidMount() {\n    const { project } = this.props;\n    this.setState({\n      outputDir: project ? project.getLastCompilationDirectory() : '',\n    });\n  }\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n        resolve({\n          exporter,\n        });\n      });\n    });\n  };\n\n  launchExport = () => {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return;\n\n    sendExportLaunched('local-electron');\n\n    if (!displayProjectErrorsBox(t, getErrors(t, project))) return;\n\n    const outputDir = this.state.outputDir;\n    project.setLastCompilationDirectory(outputDir);\n\n    LocalElectronExport.prepareExporter()\n      .then(({ exporter }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exportOptions.set('exportForElectron', true);\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        this.setState({\n          exportFinishedDialogOpen: true,\n        });\n      })\n      .catch(err => {\n        showErrorBox('Unable to export the game', err);\n      });\n  };\n\n  openExportFolder = () => {\n    if (shell) shell.openItem(this.state.outputDir);\n  };\n\n  render() {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return null;\n\n    return (\n      <Column noMargin>\n        <Line>\n          <Column noMargin>\n            <p>\n              <Trans>\n                This will export your game so that you can package it for\n                Windows, macOS or Linux. You will need to install third-party\n                tools (Node.js, Electron Builder) to package your game by\n                yourself.\n              </Trans>\n            </p>\n          </Column>\n        </Line>\n        <Line>\n          <LocalFolderPicker\n            value={this.state.outputDir}\n            defaultPath={project.getLastCompilationDirectory()}\n            onChange={value => this.setState({ outputDir: value })}\n            fullWidth\n          />\n        </Line>\n        <Line>\n          <Spacer expand />\n          <RaisedButton\n            label={<Trans>Export</Trans>}\n            primary={true}\n            onClick={this.launchExport}\n            disabled={!this.state.outputDir}\n          />\n        </Line>\n        <Dialog\n          title={t('Export finished')}\n          actions={[\n            <FlatButton\n              key=\"open\"\n              label={<Trans>Open folder</Trans>}\n              primary={true}\n              onClick={this.openExportFolder}\n            />,\n            <FlatButton\n              key=\"close\"\n              label={<Trans>Close</Trans>}\n              primary={false}\n              onClick={() =>\n                this.setState({\n                  exportFinishedDialogOpen: false,\n                })\n              }\n            />,\n          ]}\n          secondaryActions={\n            <HelpButton key=\"help\" helpPagePath=\"/publishing\" />\n          }\n          modal\n          open={this.state.exportFinishedDialogOpen}\n        >\n          <p>\n            <Trans>\n              The game was properly exported. You can now use Electron Builder\n              (you need Node.js installed and to use the command-line to run it)\n              to create an executable.\n            </Trans>\n          </p>\n        </Dialog>\n      </Column>\n    );\n  }\n}\n\nexport default LocalElectronExport;\n","// @flow\nimport * as React from 'react';\nimport MainFrame from '.';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\nimport { isMacLike } from '../Utils/Platform';\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\n\ntype Props = {|\n  children: React.Element<typeof MainFrame>,\n  i18n: I18nType,\n|};\n\ntype MainMenuEvent =\n  | 'main-menu-open'\n  | 'main-menu-save'\n  | 'main-menu-save-as'\n  | 'main-menu-close'\n  | 'main-menu-export'\n  | 'main-menu-create'\n  | 'main-menu-open-project-manager'\n  | 'main-menu-open-start-page'\n  | 'main-menu-open-debugger'\n  | 'main-menu-open-about'\n  | 'main-menu-open-preferences'\n  | 'main-menu-open-language'\n  | 'main-menu-open-profile'\n  | 'update-status';\n\ntype MenuItemTemplate =\n  | {|\n      onClickSendEvent?: MainMenuEvent,\n      onClickOpenLink?: string,\n      accelerator?: string,\n      enabled?: boolean,\n      label?: string,\n    |}\n  | {|\n      submenu: Array<MenuItemTemplate>,\n      label: string,\n    |}\n  | {|\n      submenu: Array<MenuItemTemplate>,\n      role: string,\n    |}\n  | {|\n      type: 'separator',\n    |}\n  | {|\n      role: string,\n    |};\n\ntype RootMenuTemplate =\n  | {|\n      label: string,\n      submenu: Array<MenuItemTemplate>,\n    |}\n  | {|\n      role: string,\n      submenu: Array<MenuItemTemplate>,\n    |};\n\n/**\n * Forward events received from Electron main process\n * to the underlying child React component.\n */\nclass ElectronMainMenu extends React.Component<Props, {||}> {\n  _editor: ?MainFrame;\n  _language: ?string;\n\n  componentDidMount() {\n    if (!ipcRenderer) return;\n\n    ipcRenderer.on(\n      ('main-menu-open': MainMenuEvent),\n      event => this._editor && this._editor.chooseProject()\n    );\n    ipcRenderer.on(\n      ('main-menu-save': MainMenuEvent),\n      event => this._editor && this._editor.save()\n    );\n    ipcRenderer.on(\n      ('main-menu-close': MainMenuEvent),\n      event => this._editor && this._editor.askToCloseProject(() => {})\n    );\n    ipcRenderer.on(\n      ('main-menu-export': MainMenuEvent),\n      event => this._editor && this._editor.openExportDialog()\n    );\n    ipcRenderer.on(\n      ('main-menu-create': MainMenuEvent),\n      event => this._editor && this._editor.openCreateDialog()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-project-manager': MainMenuEvent),\n      event => this._editor && this._editor.openProjectManager()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-start-page': MainMenuEvent),\n      event => this._editor && this._editor.openStartPage()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-debugger': MainMenuEvent),\n      event => this._editor && this._editor.openDebugger()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-about': MainMenuEvent),\n      event => this._editor && this._editor.openAboutDialog()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-preferences': MainMenuEvent),\n      event => this._editor && this._editor.openPreferences()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-language': MainMenuEvent),\n      event => this._editor && this._editor.openLanguage()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-profile': MainMenuEvent),\n      event => this._editor && this._editor.openProfile()\n    );\n    ipcRenderer.on(\n      ('update-status': MainMenuEvent),\n      (event, status) => this._editor && this._editor.setUpdateStatus(status)\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.props.i18n.language !== this._language) {\n      this._buildAndSendMenuTemplate();\n      this._language = this.props.i18n.language;\n    }\n  }\n\n  _buildAndSendMenuTemplate() {\n    const { i18n } = this.props;\n    const fileTemplate = {\n      label: i18n._(t`File`),\n      submenu: [\n        {\n          label: i18n._(t`Create a New Project...`),\n          accelerator: 'CommandOrControl+N',\n          onClickSendEvent: 'main-menu-create',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Open...`),\n          accelerator: 'CommandOrControl+O',\n          onClickSendEvent: 'main-menu-open',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Save`),\n          accelerator: 'CommandOrControl+S',\n          onClickSendEvent: 'main-menu-save',\n        },\n        {\n          label: i18n._(t`Save as...`),\n          enabled: false, // TODO: Unimplemented for now\n          onClickSendEvent: 'main-menu-save-as',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Export (web, iOS, Android)...`),\n          onClickSendEvent: 'main-menu-export',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Close Project`),\n          accelerator: 'CommandOrControl+Shift+W',\n          onClickSendEvent: 'main-menu-close',\n        },\n      ],\n    };\n    if (!isMacLike()) {\n      fileTemplate.submenu.push(\n        { type: 'separator' },\n        {\n          label: i18n._(t`My Profile`),\n          onClickSendEvent: 'main-menu-open-profile',\n        },\n        {\n          label: i18n._(t`Preferences`),\n          onClickSendEvent: 'main-menu-open-preferences',\n        },\n        {\n          label: i18n._(t`Language`),\n          onClickSendEvent: 'main-menu-open-language',\n        }\n      );\n    }\n\n    const editTemplate = {\n      label: i18n._(t`Edit`),\n      submenu: [\n        { role: 'undo' },\n        { role: 'redo' },\n        { type: 'separator' },\n        { role: 'cut' },\n        { role: 'copy' },\n        { role: 'paste' },\n        { role: 'pasteandmatchstyle' },\n        { role: 'delete' },\n        { role: 'selectall' },\n      ],\n    };\n\n    const viewTemplate = {\n      label: i18n._(t`View`),\n      submenu: [\n        {\n          label: i18n._(t`Show Project Manager`),\n          accelerator: 'CommandOrControl+Alt+P',\n          onClickSendEvent: 'main-menu-open-project-manager',\n        },\n        {\n          label: i18n._(t`Show Start Page`),\n          onClickSendEvent: 'main-menu-open-start-page',\n        },\n        {\n          label: i18n._(t`Open Debugger`),\n          onClickSendEvent: 'main-menu-open-debugger',\n        },\n        { type: 'separator' },\n        { role: 'toggledevtools' },\n        { type: 'separator' },\n        { role: 'togglefullscreen' },\n      ],\n    };\n\n    const windowTemplate = {\n      role: 'window',\n      submenu: [{ role: 'minimize' }],\n    };\n\n    const helpTemplate = {\n      role: 'help',\n      submenu: [\n        {\n          label: i18n._(t`GDevelop website`),\n          onClickOpenLink: 'http://gdevelop-app.com',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Community Forums`),\n          onClickOpenLink: 'https://forum.gdevelop-app.com',\n        },\n        {\n          label: i18n._(t`Community Discord Chat`),\n          onClickOpenLink: 'https://discord.gg/JWcfHEB',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Contribute to GDevelop`),\n          onClickOpenLink: 'https://gdevelop-app.com/contribute/',\n        },\n        {\n          label: i18n._(t`Create Extensions for GDevelop`),\n          onClickOpenLink:\n            'https://github.com/4ian/GDevelop/blob/master/newIDE/README-extensions.md',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Help to Translate GDevelop`),\n          onClickOpenLink: 'https://crowdin.com/project/gdevelop',\n        },\n        {\n          label: i18n._(t`Report a wrong translation`),\n          onClickOpenLink: 'https://github.com/4ian/GDevelop/issues/969',\n        },\n      ],\n    };\n    if (!isMacLike()) {\n      helpTemplate.submenu.push(\n        { type: 'separator' },\n        {\n          label: i18n._(t`About GDevelop`),\n          onClickSendEvent: 'main-menu-open-about',\n        }\n      );\n    }\n\n    const template: Array<RootMenuTemplate> = [\n      fileTemplate,\n      editTemplate,\n      viewTemplate,\n      windowTemplate,\n      helpTemplate,\n    ];\n\n    if (isMacLike()) {\n      template.unshift({\n        label: i18n._(t`GDevelop 5`),\n        submenu: [\n          {\n            label: i18n._(t`About GDevelop`),\n            onClickSendEvent: 'main-menu-open-about',\n          },\n          { type: 'separator' },\n          {\n            label: i18n._(t`My Profile`),\n            onClickSendEvent: 'main-menu-open-profile',\n          },\n          {\n            label: i18n._(t`Preferences`),\n            onClickSendEvent: 'main-menu-open-preferences',\n          },\n          {\n            label: i18n._(t`Language`),\n            onClickSendEvent: 'main-menu-open-language',\n          },\n          { type: 'separator' },\n          { role: 'services', submenu: [] },\n          { type: 'separator' },\n          { role: 'hide' },\n          { role: 'hideothers' },\n          { role: 'unhide' },\n          { type: 'separator' },\n          { role: 'quit' },\n        ],\n      });\n\n      editTemplate.submenu.push(\n        { type: 'separator' },\n        {\n          label: i18n._(t`Speech`),\n          submenu: [{ role: 'startspeaking' }, { role: 'stopspeaking' }],\n        }\n      );\n\n      windowTemplate.submenu = [\n        { role: 'minimize' },\n        { role: 'zoom' },\n        { type: 'separator' },\n        { role: 'front' },\n      ];\n    }\n\n    if (ipcRenderer) {\n      ipcRenderer.send('set-main-menu', template);\n    }\n  }\n\n  render() {\n    return React.cloneElement(this.props.children, {\n      ref: editor => (this._editor = editor),\n    });\n  }\n}\n\nexport default ElectronMainMenu;\n","// @flow\n// Note: this file does not use export/imports and use Flow comments to allow its usage from Node.js\n\nconst { loadExtension } = require('.');\nconst optionalRequire = require('../Utils/OptionalRequire');\nconst { findJsExtensionModules } = require('./LocalJsExtensionsFinder');\n\n/*flow-include\nimport type {JsExtensionsLoader, TranslationFunction} from '.';\nimport ObjectsEditorService from '../ObjectEditor/ObjectsEditorService';\nimport ObjectsRenderingService from '../ObjectsRendering/ObjectsRenderingService';\n\ntype MakeExtensionsLoaderArguments = {|\n  gd: any,\n  objectsEditorService: typeof ObjectsEditorService,\n  objectsRenderingService: typeof ObjectsRenderingService,\n  filterExamples: boolean,\n|};\n*/\n\n/**\n * Loader that will find all JS extensions declared in GDJS/Runtime/Extensions/xxx/JsExtension.js.\n * If you add a new extension and also want it to be available for the web-app version, add it in\n * BrowserJsExtensionsLoader.js\n */\nmodule.exports = function makeExtensionsLoader(\n  {\n    gd,\n    objectsEditorService,\n    objectsRenderingService,\n    filterExamples,\n  } /*: MakeExtensionsLoaderArguments*/\n) /*: JsExtensionsLoader*/ {\n  return {\n    loadAllExtensions: (_ /*: TranslationFunction */) => {\n      return findJsExtensionModules({ filterExamples }).then(\n        extensionModulePaths => {\n          return Promise.all(\n            extensionModulePaths.map(extensionModulePath => {\n              let extensionModule = null;\n              try {\n                extensionModule = optionalRequire(extensionModulePath, {\n                  rethrowException: true,\n                });\n              } catch (ex) {\n                return {\n                  extensionModulePath,\n                  result: {\n                    message:\n                      'Unable to import extension. Please check for any syntax error or error that would prevent it from being run.',\n                    error: true,\n                    rawError: ex,\n                  },\n                };\n              }\n\n              if (extensionModule) {\n                // Load any editor for objects, if we have somewhere where\n                // to register them.\n                if (\n                  objectsEditorService &&\n                  extensionModule.registerEditorConfigurations\n                ) {\n                  extensionModule.registerEditorConfigurations(\n                    objectsEditorService\n                  );\n                }\n\n                // Load any renderer for objects, if we have somewhere where\n                // to register them.\n                if (\n                  objectsRenderingService &&\n                  extensionModule.registerInstanceRenderers\n                ) {\n                  extensionModule.registerInstanceRenderers(\n                    objectsRenderingService\n                  );\n                }\n\n                return {\n                  extensionModulePath,\n                  result: loadExtension(\n                    _,\n                    gd,\n                    gd.JsPlatform.get(),\n                    extensionModule\n                  ),\n                };\n              }\n\n              return {\n                extensionModulePath,\n                result: {\n                  error: true,\n                  message:\n                    'Unknown error. Please check for any syntax error or error that would prevent it from being run.',\n                },\n              };\n            })\n          );\n        },\n        err => {\n          console.error(`Unable to find JS extensions modules`);\n          throw err;\n        }\n      );\n    },\n  };\n};\n","// Note: this file does not use export/imports nor Flow to allow its usage from Node.js\n\nconst { findGDJS } = require('../Export/LocalExporters/LocalGDJSFinder');\nconst optionalRequire = require('../Utils/OptionalRequire');\nconst path = optionalRequire('path');\nconst fs = optionalRequire('fs');\n\nconst checkIfPathHasJsExtensionModule = extensionFolderPath => {\n  return new Promise(resolve => {\n    const jsExtensionModulePath = path.join(\n      extensionFolderPath,\n      'JsExtension.js'\n    );\n    fs.stat(jsExtensionModulePath, (err, stats) => {\n      if (err) {\n        return resolve(null);\n      }\n\n      return resolve(stats.isFile() ? jsExtensionModulePath : null);\n    });\n  });\n};\n\nconst findJsExtensionModules = ({ filterExamples }) => {\n  return new Promise((resolve, reject) => {\n    findGDJS(gdjsRoot => {\n      if (!gdjsRoot) {\n        return reject();\n      }\n\n      const extensionsRoot = path.join(gdjsRoot, 'Runtime', 'Extensions');\n      console.info(\n        `Searching for JS extensions (file called JsExtension.js) in ${extensionsRoot}...`\n      );\n      fs.readdir(extensionsRoot, (error, extensionFolders) => {\n        if (error) {\n          return reject(error);\n        }\n\n        const filteredExtensionFolders = extensionFolders.filter(folder => {\n          if (!filterExamples) return true;\n\n          return folder.indexOf('Example') === -1;\n        });\n\n        Promise.all(\n          filteredExtensionFolders.map(extensionFolder =>\n            checkIfPathHasJsExtensionModule(\n              path.join(extensionsRoot, extensionFolder)\n            )\n          )\n        ).then(modulePaths => {\n          resolve(modulePaths.filter(modulePath => !!modulePath));\n        }, reject);\n      });\n    });\n  });\n};\n\nmodule.exports = {\n  findJsExtensionModules,\n};\n","// @flow\nimport { type EventsFunctionWriter } from '.';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport slugs from 'slugs';\nconst os = optionalRequire('os');\nconst fs = optionalRequire('fs');\n\n/**\n * Create the EventsFunctionWriter that writes generated code for events functions\n * to local files.\n */\nexport const makeLocalEventsFunctionWriter = (): EventsFunctionWriter => {\n  const outputDir = os.tmpdir() + '/GDGeneratedEventsFunctions';\n  fs.mkdir(outputDir, err => {\n    if (err && err.code !== 'EEXIST') {\n      console.error(\n        'Unable to create the directory where to output events functions generated code: ',\n        err\n      );\n      return;\n    }\n  });\n\n  const getPathFor = (functionName: string) => {\n    return `${outputDir}/${slugs(functionName)}.js`;\n  };\n\n  return {\n    getIncludeFileFor: (functionName: string) => getPathFor(functionName),\n    writeFunctionCode: (functionName: string, code: string): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        const filepath = getPathFor(functionName);\n        fs.writeFile(filepath, code, err => {\n          if (err) return reject(err);\n\n          resolve();\n        });\n      });\n    },\n  };\n};\n","// @flow\nimport React from 'react';\nimport MainFrame from './MainFrame';\nimport Window from './Utils/Window';\nimport ExportDialog from './Export/ExportDialog';\nimport CreateProjectDialog from './ProjectCreation/CreateProjectDialog';\nimport Authentification from './Utils/GDevelopServices/Authentification';\nimport './UI/iconmoon-font.css'; // Styles for Iconmoon font.\n\n// Import for Electron powered IDE.\nimport ExternalEditor from './ExternalEditor';\nimport LocalExamples from './ProjectCreation/LocalExamples';\nimport LocalStarters from './ProjectCreation/LocalStarters';\nimport localResourceSources from './ResourcesList/LocalResourceSources';\nimport localResourceExternalEditors from './ResourcesList/LocalResourceExternalEditors';\nimport LocalProjectWriter from './ProjectsStorage/LocalProjectWriter';\nimport LocalProjectOpener from './ProjectsStorage/LocalProjectOpener';\nimport LocalPreviewLauncher from './Export/LocalExporters/LocalPreviewLauncher';\nimport { getLocalExporters } from './Export/LocalExporters';\nimport ElectronMainMenu from './MainFrame/ElectronMainMenu';\nimport makeExtensionsLoader from './JsExtensionsLoader/LocalJsExtensionsLoader';\nimport { makeLocalEventsFunctionWriter } from './EventsFunctionsExtensionsLoader/LocalEventsFunctionWriter';\nimport ObjectsEditorService from './ObjectEditor/ObjectsEditorService';\nimport ObjectsRenderingService from './ObjectsRendering/ObjectsRenderingService';\nimport Providers from './MainFrame/Providers';\nconst gd = global.gd;\n\nexport const create = (authentification: Authentification) => {\n  Window.setUpContextMenu();\n\n  let app = null;\n  const appArguments = Window.getArguments();\n\n  if (appArguments['server-port']) {\n    app = (\n      <Providers\n        authentification={authentification}\n        disableCheckForUpdates={!!appArguments['disable-update-check']}\n      >\n        {({ i18n }) => (\n          <ExternalEditor\n            serverPort={appArguments['server-port']}\n            isIntegrated={appArguments['mode'] === 'integrated'}\n            editor={appArguments['editor']}\n            editedElementName={appArguments['edited-element-name']}\n          >\n            <MainFrame\n              i18n={i18n}\n              resourceSources={localResourceSources}\n              authentification={authentification}\n              onReadFromPathOrURL={() =>\n                Promise.reject('Should never be called')\n              }\n              resourceExternalEditors={localResourceExternalEditors}\n              initialPathsOrURLsToOpen={[]}\n            />\n          </ExternalEditor>\n        )}\n      </Providers>\n    );\n  } else {\n    app = (\n      <Providers\n        authentification={authentification}\n        disableCheckForUpdates={!!appArguments['disable-update-check']}\n      >\n        {({ i18n }) => (\n          <ElectronMainMenu i18n={i18n}>\n            <MainFrame\n              i18n={i18n}\n              previewLauncher={<LocalPreviewLauncher />}\n              exportDialog={<ExportDialog exporters={getLocalExporters()} />}\n              createDialog={\n                <CreateProjectDialog\n                  examplesComponent={LocalExamples}\n                  startersComponent={LocalStarters}\n                />\n              }\n              onSaveProject={LocalProjectWriter.saveProject}\n              onChooseProject={LocalProjectOpener.chooseProjectFile}\n              onReadFromPathOrURL={LocalProjectOpener.readProjectJSONFile}\n              resourceSources={localResourceSources}\n              resourceExternalEditors={localResourceExternalEditors}\n              authentification={authentification}\n              extensionsLoader={makeExtensionsLoader({\n                gd,\n                objectsEditorService: ObjectsEditorService,\n                objectsRenderingService: ObjectsRenderingService,\n                filterExamples: !Window.isDev(),\n              })}\n              initialPathsOrURLsToOpen={appArguments['_']}\n              eventsFunctionWriter={makeLocalEventsFunctionWriter()}\n            />\n          </ElectronMainMenu>\n        )}\n      </Providers>\n    );\n  }\n\n  return app;\n};\n","import optionalRequire from '../../Utils/OptionalRequire.js';\nvar fs = optionalRequire('fs-extra');\nvar path = optionalRequire('path');\nvar os = optionalRequire('os');\nconst gd = global.gd;\n\nexport default {\n  mkDir: function(path) {\n    try {\n      fs.mkdirsSync(path);\n    } catch (e) {\n      console.log('mkDir(' + path + ') failed: ' + e);\n      return false;\n    }\n    return true;\n  },\n  dirExists: function(path) {\n    return fs.existsSync(path);\n  },\n  clearDir: function(path) {\n    var files = [];\n    var that = this;\n    if (fs.existsSync(path)) {\n      files = fs.readdirSync(path);\n      files.forEach(function(file) {\n        var curPath = path + '/' + file;\n        if (fs.lstatSync(curPath).isDirectory()) {\n          // recurse\n          that.clearDir(curPath);\n        } else {\n          // delete file\n          fs.unlinkSync(curPath);\n        }\n      });\n    }\n  },\n  getTempDir: function() {\n    return os.tmpdir();\n  },\n  fileNameFrom: function(fullpath) {\n    if (this._isExternalURL(fullpath)) return fullpath;\n\n    fullpath = this._translateURL(fullpath);\n    return path.basename(fullpath);\n  },\n  dirNameFrom: function(fullpath) {\n    if (this._isExternalURL(fullpath)) return '';\n\n    fullpath = this._translateURL(fullpath);\n    return path.dirname(fullpath);\n  },\n  makeAbsolute: function(filename, baseDirectory) {\n    if (this._isExternalURL(filename)) return filename;\n\n    filename = this._translateURL(filename);\n    if (!this.isAbsolute(baseDirectory))\n      baseDirectory = path.resolve(baseDirectory);\n\n    return path.resolve(baseDirectory, path.normalize(filename));\n  },\n  makeRelative: function(filename, baseDirectory) {\n    if (this._isExternalURL(filename)) return filename;\n\n    filename = this._translateURL(filename);\n    return path.relative(baseDirectory, path.normalize(filename));\n  },\n  isAbsolute: function(fullpath) {\n    if (this._isExternalURL(fullpath)) return true;\n\n    if (fullpath.length === 0) return true;\n    fullpath = this._translateURL(fullpath);\n    return (\n      (fullpath.length > 0 && fullpath.charAt(0) === '/') ||\n      (fullpath.length > 1 && fullpath.charAt(1) === ':')\n    );\n  },\n  copyFile: function(source, dest) {\n    //URL are not copied.\n    if (this._isExternalURL(source)) return true;\n\n    source = this._translateURL(source);\n    try {\n      if (source !== dest) fs.copySync(source, dest);\n    } catch (e) {\n      console.log('copyFile(' + source + ', ' + dest + ') failed: ' + e);\n      return false;\n    }\n    return true;\n  },\n  copyDir: function(source, dest) {\n    throw new Error(\n      'copyDir was never tested, please check that it does what you want to.'\n    );\n\n    // try {\n    //   if (source !== dest)\n    //     fs.copySync(source, dest, {\n    //       clobber: true,\n    //     });\n    // } catch (e) {\n    //   console.log('copyDir(' + source + ', ' + dest + ') failed: ' + e);\n    //   return false;\n    // }\n    // return true;\n  },\n  writeToFile: function(file, contents) {\n    try {\n      fs.outputFileSync(file, contents);\n    } catch (e) {\n      console.log('writeToFile(' + file + ', ...) failed: ' + e);\n      return false;\n    }\n    return true;\n  },\n  readFile: function(file) {\n    try {\n      var contents = fs.readFileSync(file);\n      return contents.toString();\n    } catch (e) {\n      console.log('readFile(' + file + ') failed: ' + e);\n      return '';\n    }\n  },\n  readDir: function(path, ext) {\n    ext = ext.toUpperCase();\n    var output = new gd.VectorString();\n    try {\n      var files = [];\n      if (fs.existsSync(path)) {\n        files = fs.readdirSync(path);\n        files.forEach(function(file) {\n          if (\n            ext.length === 0 ||\n            file.toUpperCase().indexOf(ext, file.length - ext.length) !== -1\n          ) {\n            output.push_back(path + '/' + file);\n          }\n        });\n      }\n    } catch (e) {\n      console.log('readDir(' + path + ',' + ext + ') failed: ' + e);\n    }\n\n    return output;\n  },\n  fileExists: function(filename) {\n    filename = this._translateURL(filename);\n    try {\n      const stat = fs.statSync(filename);\n      return stat.isFile();\n    } catch (e) {\n      return false;\n    }\n  },\n  _isExternalURL: function(filename) {\n    return filename.substr(0, 4) === 'http' || filename.substr(0, 4) === 'ftp';\n  },\n  /**\n   * Return the filename associated to the URL on the server, relative to the games directory.\n   * (i.e: Transform g/mydirectory/myfile.png to mydirectory/myfile.png).\n   */\n  _translateURL: function(filename) {\n    if (filename.substr(0, 2) === 'g/' || filename.substr(0, 2) === 'g\\\\')\n      filename = filename.substr(2);\n\n    return filename;\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { PureComponent } from 'react';\nimport TextField from 'material-ui/TextField';\nimport FlatButton from 'material-ui/FlatButton';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'baseline',\n  },\n  button: {\n    marginLeft: 10,\n  },\n  textField: {\n    flex: 1,\n  },\n};\n\nexport default class LocalFolderPicker extends PureComponent<*, *> {\n  onChooseFolder = () => {\n    if (!dialog || !electron) return;\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showOpenDialog(\n      browserWindow,\n      {\n        title: this.props.title || 'Export folder',\n        properties: ['openDirectory', 'createDirectory'],\n        message: this.props.message || 'Choose where to export the game',\n        defaultPath: this.props.defaultPath,\n      },\n      paths => {\n        if (!paths || !paths.length) return;\n\n        this.props.onChange(paths[0]);\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          ...styles.container,\n          width: this.props.fullWidth ? '100%' : undefined,\n        }}\n      >\n        <TextField\n          style={styles.textField}\n          floatingLabelText={this.props.floatingLabelText}\n          floatingLabelFixed\n          type=\"text\"\n          hintText={<Trans>Click to choose</Trans>}\n          value={this.props.value}\n          onChange={(event, value) => this.props.onChange(value)}\n        />\n        <FlatButton\n          label={<Trans>Choose folder</Trans>}\n          style={styles.button}\n          onClick={this.onChooseFolder}\n        />\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport optionalRequire from './OptionalRequire.js';\nconst fs = optionalRequire('fs');\nconst archiver = optionalRequire('archiver');\n\n/**\n * Archive the given folder to a file. Only available when running on Electron runtime.\n */\nexport const archiveFolder = ({\n  path,\n  outputFilename,\n}: {\n  path: string,\n  outputFilename: string,\n}): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    if (!fs || !archiver) return reject(new Error('Archiver unavailable'));\n\n    const output = fs.createWriteStream(outputFilename);\n    const archive = archiver('zip', {\n      zlib: { level: 9 }, // Sets the compression level.\n    });\n\n    output.on('close', () => {\n      console.log(\n        `Archive written at ${outputFilename}, ${archive.pointer()} total bytes.`\n      );\n      resolve(outputFilename);\n    });\n\n    archive.on('error', err => {\n      reject(err);\n    });\n\n    archive.pipe(output);\n\n    archive.directory(path, false);\n\n    archive.finalize();\n  });\n};\n","// @flow\n\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst app = electron ? electron.remote.app : null;\nconst fs = optionalRequire('fs');\nconst process = optionalRequire('process');\n\nconst tryPath = (\n  path: string,\n  onExists: string => void,\n  onNoAccess: Function\n) =>\n  fs.access(path, fs.constants.R_OK, err => {\n    if (!err) onExists(path);\n    else onNoAccess();\n  });\n\nexport const findExamples = (cb: (?string) => void) => {\n  if (!process || !fs) return '';\n\n  const appPath = app ? app.getAppPath() : process.cwd();\n\n  // First try to find examples in app resources folder\n  tryPath(path.join(appPath, '..', 'examples'), cb, () => {\n    tryPath(\n      path.join(appPath, '..', '..', 'app', 'resources', 'examples'),\n      cb,\n      () => {\n        cb(null);\n      }\n    );\n  });\n};\n","import generateName from '../Utils/NewNameGenerator';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst path = optionalRequire('path');\nvar fs = optionalRequire('fs-extra');\n\nexport const findEmptyPath = basePath => {\n  if (!path) return basePath;\n\n  const folderName = generateName('My project', name => {\n    try {\n      fs.accessSync(path.join(basePath, name));\n    } catch (ex) {\n      return false;\n    }\n    return true;\n  });\n\n  return path.join(basePath, folderName);\n};\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport { sendExportLaunched } from '../../Utils/Analytics/EventSender';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport { findGDJS } from './LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport Window from '../../Utils/Window';\nimport { getHelpLink } from '../../Utils/HelpLink';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\nexport default class LocalExport extends Component {\n  state = {\n    exportFinishedDialogOpen: false,\n    outputDir: '',\n  };\n\n  componentDidMount() {\n    const { project } = this.props;\n    this.setState({\n      outputDir: project ? project.getLastCompilationDirectory() : '',\n    });\n  }\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n        resolve({\n          exporter,\n        });\n      });\n    });\n  };\n\n  launchExport = () => {\n    const { project } = this.props;\n    if (!project) return;\n\n    sendExportLaunched('local');\n\n    const outputDir = this.state.outputDir;\n    project.setLastCompilationDirectory(outputDir);\n\n    LocalExport.prepareExporter()\n      .then(({ exporter }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        this.setState({\n          exportFinishedDialogOpen: true,\n        });\n      })\n      .catch(err => {\n        showErrorBox('Unable to export the game', err);\n      });\n  };\n\n  openExportFolder = () => {\n    if (shell) shell.openItem(this.state.outputDir);\n  };\n\n  openItchioHelp = () => {\n    Window.openExternalURL(getHelpLink('/publishing/publishing-to-itch-io'));\n  };\n\n  openLearnMore = () => {\n    Window.openExternalURL(getHelpLink('/publishing'));\n  };\n\n  render() {\n    const { project } = this.props;\n    if (!project) return null;\n\n    return (\n      <Column noMargin>\n        <Line>\n          <Trans>\n            This will export your game to a folder that you can then upload on a\n            website or on game hosting like itch.io.\n          </Trans>\n        </Line>\n        <Line>\n          <LocalFolderPicker\n            value={this.state.outputDir}\n            defaultPath={project.getLastCompilationDirectory()}\n            onChange={value => this.setState({ outputDir: value })}\n            fullWidth\n          />\n        </Line>\n        <Line>\n          <Spacer expand />\n          <RaisedButton\n            label={<Trans>Export</Trans>}\n            primary={true}\n            onClick={this.launchExport}\n            disabled={!this.state.outputDir}\n          />\n        </Line>\n        <Dialog\n          title={<Trans>Export finished</Trans>}\n          actions={[\n            <FlatButton\n              key=\"open\"\n              label={<Trans>Open folder</Trans>}\n              primary={true}\n              onClick={this.openExportFolder}\n            />,\n            <FlatButton\n              key=\"close\"\n              label={<Trans>Close</Trans>}\n              primary={false}\n              onClick={() =>\n                this.setState({\n                  exportFinishedDialogOpen: false,\n                })\n              }\n            />,\n          ]}\n          modal\n          open={this.state.exportFinishedDialogOpen}\n        >\n          <p>\n            <Trans>\n              You can now upload the game to a web hosting to play to the game.\n            </Trans>\n          </p>\n          <RaisedButton\n            fullWidth\n            primary\n            onClick={() => this.openItchioHelp()}\n            label={<Trans>Publish your game on Itch.io</Trans>}\n          />\n          <FlatButton\n            fullWidth\n            onClick={() => this.openLearnMore()}\n            label={<Trans>Learn more about publishing</Trans>}\n          />\n        </Dialog>\n      </Column>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport { Column, Line } from '../UI/Grid';\nimport { type Limit, type Subscription } from '../Utils/GDevelopServices/Usage';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\n\ntype Props = {|\n  subscription: ?Subscription,\n  limit: ?Limit,\n  onChangeSubscription: Function,\n|};\n\nexport default ({ subscription, limit, onChangeSubscription }: Props) => {\n  if (!limit) return <PlaceholderLoader />;\n  const hasSubscription = subscription && !!subscription.planId;\n  const noSubscription = subscription && !subscription.planId;\n\n  return (\n    <Column noMargin>\n      <p>\n        <Trans>\n          You have {Math.max(limit.max - limit.current, 0)} remaining builds for\n          today (out of {limit.max}).\n        </Trans>\n      </p>\n      {hasSubscription && limit.limitReached && (\n        <p>\n          <Trans>\n            Need more power? You can upgrade to a new plan to increase the\n            limit!\n          </Trans>\n        </p>\n      )}\n      {hasSubscription && limit.limitReached && (\n        <Line justifyContent=\"center\" alignItems=\"center\">\n          <RaisedButton\n            label={<Trans>Upgrade my account</Trans>}\n            onClick={onChangeSubscription}\n            primary\n          />\n        </Line>\n      )}\n      {noSubscription && (\n        <p>\n          <Trans>\n            You don't have a subscription. Get one to increase the limits!\n          </Trans>\n        </p>\n      )}\n      {noSubscription && (\n        <Line justifyContent=\"center\" alignItems=\"center\">\n          <RaisedButton\n            label={<Trans>Get a subscription</Trans>}\n            onClick={onChangeSubscription}\n            primary\n          />\n        </Line>\n      )}\n    </Column>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { Step, Stepper, StepLabel, StepContent } from 'material-ui/Stepper';\nimport CircularProgress from 'material-ui/CircularProgress';\nimport LinearProgress from 'material-ui/LinearProgress';\nimport { Line, Spacer } from '../../UI/Grid';\nimport BuildProgress from './BuildProgress';\nimport { type Build } from '../../Utils/GDevelopServices/Build';\nimport EmptyMessage from '../../UI/EmptyMessage';\n\nconst styles = {\n  stepper: { flex: 1 },\n};\n\nexport type BuildStep =\n  | ''\n  | 'export'\n  | 'compress'\n  | 'upload'\n  | 'waiting-for-build'\n  | 'build';\n\ntype Props = {|\n  exportStep: BuildStep,\n  onDownload: (key: string) => void,\n  build: ?Build,\n  uploadMax: number,\n  uploadProgress: number,\n  errored: boolean,\n  showSeeAllMyBuildsExplanation?: boolean,\n|};\n\n/**\n * Can be used in an exporter to show the overall progress of a build\n * (including local archiving/upload steps and remote build progress)\n */\nexport default ({\n  exportStep,\n  onDownload,\n  build,\n  uploadMax,\n  uploadProgress,\n  errored,\n  showSeeAllMyBuildsExplanation,\n}: Props) => (\n  <Stepper\n    activeStep={\n      exportStep === 'export'\n        ? 0\n        : exportStep === 'compress' || exportStep === 'upload'\n        ? 1\n        : exportStep === 'waiting-for-build' || exportStep === 'build'\n        ? 2\n        : undefined\n    }\n    orientation=\"vertical\"\n    style={styles.stepper}\n  >\n    <Step>\n      <StepLabel>Game export</StepLabel>\n      <StepContent>\n        <Line alignItems=\"center\">\n          <CircularProgress size={20} />\n          <Spacer />\n          <p>\n            <Trans>Export in progress...</Trans>\n          </p>\n        </Line>\n      </StepContent>\n    </Step>\n    <Step>\n      <StepLabel>Upload to build service</StepLabel>\n      <StepContent>\n        {errored ? (\n          <p>\n            <Trans>\n              Can't upload your game to the build service. Please check your\n              internet connection or try again later.\n            </Trans>\n          </p>\n        ) : exportStep === 'compress' ? (\n          <Line alignItems=\"center\">\n            <CircularProgress size={20} />\n            <Spacer />\n            <p>\n              <Trans>Compressing before upload...</Trans>\n            </p>\n          </Line>\n        ) : (\n          <Line alignItems=\"center\" expand>\n            <LinearProgress\n              style={{ flex: 1 }}\n              max={uploadMax}\n              value={uploadProgress}\n              mode=\"determinate\"\n            />\n          </Line>\n        )}\n      </StepContent>\n    </Step>\n    <Step>\n      <StepLabel>Build and download</StepLabel>\n      <StepContent>\n        {!build && (\n          <p>\n            <Trans>Build is starting...</Trans>\n          </p>\n        )}\n        {build && <BuildProgress build={build} onDownload={onDownload} />}\n        {showSeeAllMyBuildsExplanation && (\n          <EmptyMessage>\n            <Trans>\n              If you close this window while the build is being done, you can\n              see its progress and download the game later by clicking on See\n              All My Builds below.\n            </Trans>\n          </EmptyMessage>\n        )}\n      </StepContent>\n    </Step>\n  </Stepper>\n);\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Stepper = exports.StepLabel = exports.StepContent = exports.StepButton = exports.Step = undefined;\n\nvar _Step2 = require('./Step');\n\nvar _Step3 = _interopRequireDefault(_Step2);\n\nvar _StepButton2 = require('./StepButton');\n\nvar _StepButton3 = _interopRequireDefault(_StepButton2);\n\nvar _StepContent2 = require('./StepContent');\n\nvar _StepContent3 = _interopRequireDefault(_StepContent2);\n\nvar _StepLabel2 = require('./StepLabel');\n\nvar _StepLabel3 = _interopRequireDefault(_StepLabel2);\n\nvar _Stepper2 = require('./Stepper');\n\nvar _Stepper3 = _interopRequireDefault(_Stepper2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.Step = _Step3.default;\nexports.StepButton = _StepButton3.default;\nexports.StepContent = _StepContent3.default;\nexports.StepLabel = _StepLabel3.default;\nexports.Stepper = _Stepper3.default;"],"sourceRoot":""}