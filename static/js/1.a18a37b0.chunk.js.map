{"version":3,"sources":["MainFrame/ProjectTitlebar.js","UI/IconButton.js","UI/AcceleratorString.js","UI/Theme/ThemeConsumer.js","UI/List.js","MainFrame/AboutDialog.js","UI/SemiControlledTextField.js","UI/HelpButton/index.js","VariablesList/VariableRow.js","Utils/SelectionHandler.js","VariablesList/ClipboardKind.js","MainFrame/Preferences/PreferencesContext.js","ResourcesLoader/index.js","UI/Background.js","UI/SelectField.js","UI/SelectOption.js","UI/AlertMessage.js","UI/PlaceholderLoader.js","UI/KeyboardShortcuts/InteractionKeys.js","Utils/NewNameGenerator.js","EventsSheet/EventsTree/ClassNames.js","Utils/Serializer.js","UI/SearchBar.js","Utils/UseOnResize.js","UI/Reponsive/ResponsiveWindowMeasurer.js","PlatformSpecificAssetsEditor/PlatformSpecificAssetsDialog.js","PlatformSpecificAssetsEditor/ImageResizer.js","UI/LoaderModal.js","UI/DrawerTopBar.js","UI/CloseConfirmDialog.js","UI/ClosableTabs.js","MainFrame/EditorTabsHandler.js","EventsSheet/EventsTree/index.js","UI/Menu/ElementWithMenu.js","UI/ListIcon.js","UI/Subheader.js","UI/ScrollView.js","EventsSheet/EventsTree/Renderers/StandardEvent.js","EventsSheet/EventsTree/Instruction.js","EventsSheet/ParameterFields/RelationalOperatorField.js","EventsSheet/ParameterFields/OperatorField.js","EventsSheet/ParameterFields/MouseField.js","EventsSheet/ParameterFields/KeyField.js","ObjectsRendering/Renderers/RenderedUnknownInstance.js","ObjectsRendering/Renderers/RenderedSpriteInstance.js","ObjectsRendering/Renderers/RenderedTiledSpriteInstance.js","ObjectsRendering/Renderers/RenderedPanelSpriteInstance.js","ObjectsRendering/Renderers/RenderedTextInstance.js","ObjectsRendering/Renderers/RenderedShapePainterInstance.js","ObjectsRendering/Renderers/RenderedTextEntryInstance.js","ObjectsRendering/Renderers/RenderedParticleEmitterInstance.js","ObjectsRendering/Renderers/RenderedSkeletonInstance.js","Utils/FontFaceLoader.js","EventsSheet/ParameterFields/YesNoField.js","EventsSheet/ParameterFields/TrueFalseField.js","EventsSheet/ParameterFields/ExpressionField.js","EventsSheet/InstructionEditor/InstructionOrExpressionSelector/ExpressionSelector.js","EventsSheet/ParameterFields/GenericExpressionField/BackgroundHighlighting.js","ExpressionAutocompletion/index.js","EventsSheet/ParameterFields/GenericExpressionField/ExpressionAutocompletionsHandler.js","EventsSheet/ParameterFields/GenericExpressionField/ExpressionAutocompletionsDisplayer.js","EventsSheet/ParameterFields/StringField.js","EventsSheet/ParameterFields/StringWithSelectorField.js","EventsSheet/ParameterFields/BehaviorField.js","EventsSheet/ParameterFields/GlobalVariableField.js","EventsSheet/ParameterFields/ObjectVariableField.js","EventsSheet/ParameterFields/LayerField.js","EventsSheet/ParameterFields/AudioResourceField.js","EventsSheet/ParameterFields/VideoResourceField.js","EventsSheet/ParameterFields/JsonResourceField.js","EventsSheet/ParameterFields/ColorExpressionField.js","EventsSheet/ParameterFields/ForceMultiplierField.js","EventsSheet/ParameterFields/SceneNameField.js","EventsSheet/EventsTree/InvalidParameterValue.js","EventsSheet/EventsTree/MissingParameterValue.js","EventsSheet/EventsTree/Renderers/GroupEvent.js","EventsSheet/EventsTree/Renderers/CommentEvent.js","UI/Tabs.js","EventsSheet/EventsTree/Renderers/ForEachEvent.js","EventsSheet/EventsTree/Renderers/ForEachChildVariableEvent.js","EventsSheet/EventsTree/Renderers/RepeatEvent.js","EventsSheet/EventsTree/Renderers/WhileEvent.js","EventsSheet/EventsTree/Renderers/LinkEvent.js","EventsSheet/ParameterFields/ExternalEventsField.js","EventsSheet/EventsTree/Renderers/JsCodeEvent.js","EventsSheet/EventsTree/EventHeightsCache.js","EventsSheet/EventsTree/BottomButtons.js","EventsSheet/EventsTree/EmptyEventsPlaceholder.js","EventsSheet/InstructionEditor/NewInstructionEditorDialog.js","Utils/CaseSensitiveSlug.js","EventsFunctionsExtensionsLoader/EnumerateProperties.js","EventsSheet/InstructionEditor/NewInstructionEditorMenu.js","EventsSheet/InstructionEditor/EventTextDialog.js","UI/KeyboardShortcuts/index.js","UI/Checkbox.js","EventsSheet/InlineParameterEditor.js","EventsSheet/OnceInstructionSanitizer.js","EventsSheet/EventsContextAnalyzerDialog.js","EventsSheet/SearchPanel.js","EventsSheet/EventsSearcher.js","EventsSheet/ContainsSubInstruction.js","EventsSheet/EventsFunctionExtractor/EventsFunctionExtractorDialog.js","Utils/GetObjectGroupByName.js","BehaviorTypeSelector/index.js","UI/Table.js","GameEngineFinder/LocalGDJSFinder.js","EventsFunctionsExtensionEditor/index.js","EventsFunctionsExtensionEditor/EventsFunctionConfigurationEditor/index.js","ObjectGroupsList/ObjectGroupsListWithObjectGroupEditor.js","ObjectGroupEditor/index.js","EventsBasedBehaviorEditor/EventsBasedBehaviorEditorDialog.js","EventsBasedBehaviorEditor/index.js","Utils/UseForceUpdate.js","EventsBasedBehaviorEditor/EventsBasedBehaviorPropertiesEditor.js","EventsFunctionsExtensionEditor/BehaviorMethodSelectorDialog.js","EventsFunctionsExtensionEditor/ExtensionFunctionSelectorDialog.js","UI/EditorMosaic/EditorNavigator.js","EventsFunctionsExtensionEditor/ChooseEventsFunctionsExtensionEditor.js","UI/DismissableAlertMessage.js","InstancesEditor/InstancesRenderer/LayerRenderer.js","InstancesEditor/InstancesRenderer/PixiDoubleClickEvent.js","InstancesEditor/SelectionRectangle.js","InstancesEditor/InstancesAdder.js","InstancesEditor/InstancePropertiesEditor/index.js","InstancesEditor/InstancesList/index.js","LayersList/LayerRemoveDialog.js","LayersList/LayerEditorDialog.js","ObjectEditor/ObjectEditorDialog.js","ObjectEditor/Editors/TextEditor.js","ObjectEditor/Editors/TiledSpriteEditor.js","ObjectEditor/Editors/PanelSpriteEditor.js","ObjectEditor/Editors/SpriteEditor/index.js","ObjectEditor/Editors/SpriteEditor/SpritesList.js","UI/SemiControlledAutoComplete.js","ObjectEditor/Editors/SpriteEditor/PointsEditor/index.js","ObjectEditor/Editors/SpriteEditor/PointsEditor/PointsList.js","ObjectEditor/Editors/SpriteEditor/PointsEditor/PointRow.js","ObjectEditor/Editors/SpriteEditor/PointsEditor/AddPointRow.js","ObjectEditor/Editors/SpriteEditor/PointsEditor/PointsPreview.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/index.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/PolygonsList.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/VerticeRow.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/PolygonRow.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/AddVerticeRow.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/AddPolygonRow.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/CollisionMasksPreview.js","ObjectEditor/Editors/EmptyEditor.js","ObjectEditor/Editors/ShapePainterEditor.js","ObjectEditor/Editors/ParticleEmitterEditor.js","ObjectEditor/Editors/ObjectPropertiesEditor.js","BehaviorsEditor/index.js","BehaviorsEditor/NewBehaviorDialog.js","BehaviorsEditor/BehaviorsHelpPagePaths.js","SceneEditor/SetupGridDialog.js","InstancesEditor/FullSizeInstancesEditorWithScrollbars.js","Utils/StringHelpers.js","UI/EditorMosaic/TagsButton.js","Hints/ObjectsAdditionalWork.js","ResourcesEditor/index.js","ResourcesList/index.js","ResourcesList/EnumerateResources.js","ResourcesEditor/Toolbar.js","ObjectsList/EnumerateObjects.js","MainFrame/Preferences/LanguageDialog.js","locales/LocalesMetadata.js","ProjectsStorage/OpenFromStorageProviderDialog.js","ProjectsStorage/SaveToStorageProviderDialog.js","ProjectsStorage/OpenConfirmDialog.js","ProjectsStorage/ProjectContentChecker.js","Utils/UseSetStateWithCallback.js","MainFrame/MainFrameCommands.js","CommandPalette/CommandsScopedContext.js","MainFrame/PreviewState.js","ObjectsRendering/ObjectsRenderingService.js","HotReload/HotReloadLogsDialog.js","Utils/UpdateDiscordRichPresence.js","ProjectCreation/ExamplesSearchbar.js","UI/SearchbarWithChips.js","UI/MiniToolbar.js","Utils/i18n/GDI18nProvider.js","locales lazy /^/.//.*//messages$/ groupOptions: {} namespace object","Utils/HelpLink.js","UI/BackgroundText.js","UI/CorsAwareImage.js","CommandPalette/CommandHooks.js","Utils/GDevelopServices/Build.js","UI/MarkdownText.js","Hints/index.js","UI/Reponsive/ScreenTypeMeasurer.js","Profile/UserProfileContext.js","ResourcesList/ResourceUtils.js","ObjectsRendering/Renderers/RenderedInstance.js","UI/GravatarUrl.js","Profile/ProfileDetails.js","Profile/UsagesDetails.js","Profile/SubscriptionDetails.js","GameDashboard/GameCard.js","GameDashboard/GamesList.js","Profile/ProfileDialog.js","ProjectManager/ExtensionsProperties.js","ProjectManager/ProjectPropertiesDialog.js","AssetStore/ExtensionStore/ExtensionsSearchDialog.js","UI/CustomSvgIcons/VariableTree.js","ProjectManager/ProjectManagerCommands.js","ProjectManager/index.js","UI/Badge.js","LayersList/LayerRow.js","LayersList/BackgroundColorRow.js","UI/RaisedButtonWithSplitMenu.js","LayersList/index.js","BehaviorsEditor/Editors/BehaviorPropertiesEditor.js","BehaviorsEditor/Editors/Physics2Editor/ShapePreview.js","BehaviorsEditor/Editors/Physics2Editor/PolygonEditor.js","BehaviorsEditor/Editors/Physics2Editor/index.js","BehaviorsEditor/BehaviorsEditorService.js","KeyboardShortcuts/DetectShortcutDialog.js","KeyboardShortcuts/ShortcutsListRow.js","KeyboardShortcuts/ShortcutsList.js","MainFrame/Preferences/PreferencesDialog.js","ObjectsList/UseObjectsListCommands.js","ObjectGroupsList/UseObjectGroupsListCommands.js","LayersList/UseLayersListCommands.js","SceneEditor/UseSceneEditorCommands.js","MainFrame/EditorContainers/StartPage/GDevelopLogo.js","MainFrame/EditorContainers/StartPage/ScrollBackground.js","MainFrame/EditorContainers/StartPage/index.js","CommandPalette/CommandPalette/FilterOptions.js","CommandPalette/CommandPalette/AutocompletePicker.js","CommandPalette/CommandPalette/index.js","EventsSheet/InstructionEditor/InstructionOrExpressionSelector/InstructionSelector.js","EventsSheet/InstructionEditor/index.js","EventsSheet/InstructionEditor/InstructionEditorDialog.js","ResourcesList/ResourcePreview/GenericIconPreview.js","ResourcesList/ResourcePreview/index.js","ResourcesEditor/ResourcePropertiesEditor/index.js","MainFrame/Toolbar/PreviewButtons.js","MainFrame/Toolbar/index.js","HelpFinder/DocSearchArea.js","HelpFinder/index.js","Profile/SubscriptionPendingDialog.js","Profile/SubscriptionDialog.js","MainFrame/Changelog/ChangelogDialog.js","MainFrame/Changelog/ChangelogDialogContainer.js","EventsSheet/ToolbarCommands.js","EventsSheet/Toolbar.js","EventsFunctionsList/index.js","EventsFunctionsList/EnumerateEventsFunctions.js","EventsBasedBehaviorsList/index.js","EventsBasedBehaviorsList/EnumerateEventsBasedBehaviors.js","EventsFunctionsExtensionEditor/OptionsEditorDialog.js","Utils/UseIsMounted.js","ObjectEditor/Editors/SpriteEditor/AnimationPreview/index.js","ObjectEditor/Editors/SpriteEditor/DirectionTools.js","SceneEditor/ToolbarCommands.js","SceneEditor/Toolbar.js","UI/CustomSvgIcons/Copy.js","VariablesList/EditVariableRow.js","EventsSheet/EventsTree/Renderers/UnknownEvent.js","EventsSheet/EventsTree/EventsRenderingService.js","UI/Theme/ThemeContext.js","EffectsList/index.js","EffectsList/EnumerateEffects.js","CodeEditor/LocalCodeEditorAutocompletions.js","CodeEditor/index.js","EventsSheet/ParameterFields/GenericExpressionField/ExpressionParametersEditor.js","EventsSheet/ParameterFields/GenericExpressionField/ExpressionParametersEditorDialog.js","VariablesList/VariablesEditorDialog.js","Utils/Clipboard.js","PropertiesEditor/index.js","UI/PlaceholderError.js","UI/Search/FiltersChooser.js","EventsFunctionsExtensionsLoader/index.js","UI/OpenedDialogChecker.js","KeyboardShortcuts/ReservedShortcuts.js","KeyboardShortcuts/IsUserTyping.js","KeyboardShortcuts/index.js","UI/RaisedButtonWithMenu.js","ResourcesList/ResourceSelector.js","UI/ToolbarIcon.js","UI/InlineCheckbox.js","UI/ColorField/index.js","Utils/ColorTransformer.js","PropertiesEditor/PropertiesMapToSchema.js","UI/PlaceholderMessage.js","UI/LeftLoader.js","EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext.js","UI/Messages/InfoBar.js","EventsSheet/EventsTree/InstructionsList.js","Utils/TagsHelper.js","InstructionOrExpression/EnumerateInstructions.js","EventsSheet/InstructionEditor/SelectorListItems/Keys.js","EventsSheet/InlinePopover.js","UI/Toolbar.js","UI/ToolbarSeparator.js","UI/Toggle.js","CommandPalette/CommandsList.js","Utils/UseLongTouch.js","Utils/SerializableObjectCancelableEditor.js","UI/ColorField/ColorPicker.js","ProjectManager/EnumerateProjectItems.js","InstructionOrExpression/CreateTree.js","EventsSheet/EventsTree/ConditionsActionsColumns.js","ResourcesList/ResourcePreview/ImagePreview.js","ObjectEditor/Editors/SpriteEditor/Utils/SpriteObjectHelper.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/styles.js","UI/Menu/ElectronMenuImplementation.js","UI/Menu/MaterialUIMenuImplementation.js","UI/Menu/ContextMenu.js","UI/Theme/CreateTheme.js","MainFrame/UnsavedChangesContext.js","UI/DragHandle.js","Utils/GDevelopServices/Game.js","Utils/GDevelopServices/Extension.js","UI/Search/UseSearchItem.js","Utils/GDevelopServices/Asset.js","CommandPalette/CommandsContext.js","EventsSheet/SelectionHandler.js","EventsSheet/ParameterFields/GenericExpressionField/index.js","EventsSheet/InstructionEditor/InstructionOrExpressionSelector/index.js","InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js","Utils/GetObjectByName.js","Hints/DismissableTutorialMessage.js","EventsFunctionsExtensionsLoader/MetadataDeclarationHelpers.js","UI/EditorMosaic/index.js","InstancesEditor/InstancesSelection.js","ObjectEditor/ObjectsEditorService.js","Utils/GDevelopServices/Usage.js","UI/SortableVirtualizedItemList/ItemRow.js","UI/SortableVirtualizedItemList/DropIndicator.js","UI/SortableVirtualizedItemList/index.js","ResourcesList/ResourceThumbnail/index.js","ResourcesList/ResourceSelectorWithThumbnail.js","UI/Theme/DefaultTheme/index.js","KeyboardShortcuts/DefaultShortcuts.js","UI/ListCommonItem.js","UI/TreeTable/index.js","HotReload/HotReloadPreviewButton.js","Profile/SubscriptionChecker.js","GameDashboard/GameRegistration.js","Profile/CreateProfile.js","UI/ErrorBoundary.js","Utils/IsNullPtr.js","Utils/OptionalLazyRequire.js","EventsSheet/index.js","EventsSheet/ParameterRenderingService.js","EventsSheet/ParameterFields/ObjectField.js","ObjectsRendering/Renderers/RenderedIconInstance.js","UI/Button.js","EventsSheet/ParameterFields/GenericExpressionField/FormatExpressionCall.js","EventsSheet/ParameterFields/ParameterMetadataTools.js","EventsSheet/InstructionEditor/NewInstructionEditor.js","UI/TagChips.js","UI/Search/CategoryChooser.js","AssetStore/AssetStoreContext.js","ProjectsStorage/ResourceFetcher/index.js","InstancesEditor/ViewPosition.js","ObjectEditor/Editors/SpriteEditor/PointsEditor/styles.js","Utils/TimestampedId.js","EventsSheet/ParameterFields/EnumerateVariables.js","EventsSheet/ParameterFields/VariableField.js","MainFrame/index.js","MainFrame/UpdaterTools.js","UI/HelpIcon/index.js","VariablesList/index.js","VariablesList/styles.js","UI/CustomSvgIcons/Paste.js","ProjectManager/ProjectErrorsChecker.js","AssetStore/ExtensionStore/ExtensionStoreContext.js","UI/Search/ListSearchResults.js","AssetStore/ExtensionStore/InstallExtension.js","AssetStore/InstallAsset.js","SceneEditor/ScenePropertiesDialog.js","SceneEditor/SceneVariablesDialog.js","ProjectManager/EventFunctionExtensionNameVerifier.js","CommandPalette/CommandManager.js","CommandPalette/UseRefInitHook.js","ResourcesList/ResourceThumbnail/ImageThumbnail.js","MainFrame/EditorContainers/EventsEditorContainer.js","UI/Grid.js","EventsSheet/EventsTree/DropIndicator.js","EventsSheet/ParameterFields/DefaultField.js","ObjectsList/ObjectSelector.js","ObjectsRendering/PixiResourcesLoader.js","EventsSheet/ParameterFields/ParameterFieldCommons.js","InstructionOrExpression/EnumerateExpressions.js","EventsSheet/InstructionEditor/SelectorListItems/SelectorInstructionOrExpressionListItem.js","EventsSheet/InstructionEditor/SelectorListItems/SelectorInstructionsTreeListItem.js","EventsSheet/ParameterFields/SceneVariableField.js","UI/DragAndDrop/DragSourceAndDropTarget.js","EventsSheet/ClipboardKind.js","UI/DragAndDrop/DropTarget.js","EventsSheet/EnumerateEventsMetadata.js","EventsSheet/InstructionEditor/InstructionParametersEditor.js","InstructionOrExpression/SetupInstructionParameters.js","UI/Reponsive/SelectColumns.js","Utils/History.js","EventsSheet/EventsFunctionExtractor/index.js","EventsFunctionsExtensionEditor/EventsFunctionConfigurationEditor/EventsFunctionParametersEditor.js","ObjectTypeSelector/index.js","BehaviorsEditor/EnumerateBehaviorsMetadata.js","EventsFunctionsExtensionEditor/EventsFunctionConfigurationEditor/EventsFunctionPropertiesEditor.js","UI/Text.js","UI/EditorMosaic/CloseButton.js","MainFrame/EditorContainers/EventsFunctionsExtensionEditorContainer.js","ObjectGroupEditor/ObjectGroupEditorDialog.js","AssetStore/ResourceStore/ResourceStoreContext.js","UI/Search/BoxSearchResults.js","UI/FlatButton.js","UI/CustomSvgIcons/Behaviors/Create.js","UI/CustomSvgIcons/Behaviors/Step.js","UI/CustomSvgIcons/Behaviors/Destroy.js","UI/CustomSvgIcons/Behaviors/Function.js","UI/CustomSvgIcons/Behaviors/Activate.js","UI/CustomSvgIcons/Behaviors/Deactivate.js","MainFrame/EditorContainers/ExternalEventsEditorContainer.js","MainFrame/EditorContainers/LayoutChooserDialog.js","MainFrame/EditorContainers/ExternalLayoutEditorContainer.js","SceneEditor/index.js","InstancesEditor/PinchHandler.js","Utils/GridHelpers.js","LayersList/EnumerateLayers.js","UI/FullSizeMeasurer.js","ObjectEditor/Editors/SpriteEditor/Utils/SpriteSelector.js","MainFrame/EditorContainers/ResourcesEditorContainer.js","UI/RaisedButton.js","MainFrame/EditorContainers/SceneEditorContainer.js","Utils/TimeFunction.js","Utils/i18n/getTranslationFunction.js","Utils/FuzzyOrEmptyFilter.js","Utils/Delay.js","GamesShowcase/GamesShowcaseContext.js","UI/Dialog/index.js","ProjectCreation/ExamplesList.js","ProjectCreation/ExamplesInformation.js","Export/GenericExporters/CordovaExport.js","Export/GenericExporters/ElectronExport.js","Export/GenericExporters/HTML5Export.js","Export/GenericExporters/Cocos2dExport.js","Export/GenericExporters/FacebookInstantGamesExport.js","Export/GenericExporters/OnlineCordovaExport.js","Export/GenericExporters/OnlineElectronExport.js","Export/GenericExporters/OnlineWebExport.js","UI/CustomSvgIcons/Facebook.js","UI/CustomSvgIcons/Cordova.js","UI/CustomSvgIcons/Chrome.js","JsExtensionsLoader/index.js","ProjectsStorage/ProjectStorageProviders.js","Utils/MapFor.js","UI/KeyboardShortcuts/DeprecatedKeyboardShortcuts.js","InstancesEditor/InstancesRenderer/index.js","Utils/TransformRect.js","InstancesEditor/SelectedInstances.js","InstancesEditor/HighlightedInstance.js","InstancesEditor/InstancesResizer.js","InstancesEditor/InstancesRotator.js","InstancesEditor/InstancesMover.js","InstancesEditor/Grid.js","InstancesEditor/WindowBorder.js","InstancesEditor/WindowMask.js","InstancesEditor/BackgroundColor.js","InstancesEditor/FpsLimiter.js","Utils/PIXITicker.js","InstancesEditor/StatusBar.js","InstancesEditor/CanvasCursor.js","InstancesEditor/LongTouchHandler.js","InstancesEditor/index.js","Debugger/Toolbar.js","Debugger/InspectorsList.js","Debugger/Inspectors/VariablesContainerInspector.js","Debugger/Inspectors/RuntimeObjectInspector.js","Debugger/Inspectors/RuntimeSceneInspector.js","Debugger/GDJSInspectorDescriptions.js","Debugger/Inspectors/RawContentInspector.js","Debugger/Profiler/MeasuresTable.js","Debugger/Profiler/index.js","Debugger/DebuggerContent.js","Debugger/DebuggerSelector.js","Debugger/index.js","MainFrame/EditorContainers/DebuggerEditorContainer.js","ProjectCreation/Tutorials.js","UI/CustomSvgIcons/Apple.js","UI/CustomSvgIcons/GooglePlay.js","UI/CustomSvgIcons/Steam.js","UI/CustomSvgIcons/Twitter.js","UI/CustomSvgIcons/Instagram.js","UI/CustomSvgIcons/Twitch.js","UI/CustomSvgIcons/ItchIo.js","UI/CustomSvgIcons/Microsoft.js","GamesShowcase/ShowcasedGameListItem.js","GamesShowcase/index.js","ProjectCreation/CreateProjectDialog.js","Export/Builds/BuildProgress.js","Export/Builds/BuildsList.js","Export/Builds/BuildsWatcher.js","Export/Builds/index.js","Export/Builds/BuildsDialog.js","Profile/LimitDisplayer.js","Export/Builds/BuildStepsProgress.js","Export/ExportLauncher.js","Utils/OnlineStatus.js","Export/ExportDialog.js","UI/DragAndDrop/DragAndDropContextProvider.js","UI/RightLoader.js","Profile/CreateAccountDialog.js","Profile/LoginDialog.js","Utils/WatchPromiseInState.js","Profile/UserProfileProvider.js","MainFrame/Preferences/PreferencesProvider.js","EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsProvider.js","MainFrame/Providers.js","CodeEditor/Theme/TomorrowNight.js","CodeEditor/Theme/Monokai.js","CodeEditor/Theme/Tomorrow.js","CodeEditor/Theme/SolarizedDark.js","CodeEditor/Theme/SolarizedLight.js","CodeEditor/Theme/VibrantInk.js","CodeEditor/Theme/GitHub.js","CodeEditor/Theme/NordDark.js","CodeEditor/Theme/index.js","Utils/i18n/RtlLanguages.js","Utils/Memoize.js","UI/Theme/DarkTheme/index.js","UI/Theme/NordTheme/index.js","UI/Theme/SolarizedDarkTheme/index.js","UI/Theme/ThemeRegistry.js","UI/Theme/index.js","AssetStore/AssetCard.js","AssetStore/index.js","AssetStore/AssetDetails.js","AssetStore/NewObjectDialog.js","UI/EditTagsDialog.js","ObjectsList/index.js","ObjectsList/ClipboardKind.js","AssetStore/ExtensionStore/ExtensionIcon.js","AssetStore/ExtensionStore/ExtensionListItem.js","AssetStore/ExtensionStore/ExtensionInstallDialog.js","AssetStore/ExtensionStore/index.js","MainFrame/Changelog/ChangelogRenderer.js","Utils/GDevelopServices/Release.js","MainFrame/Changelog/index.js","UI/Layout.js","EventsSheet/InstructionEditor/InstructionOrObjectSelector.js","EventsSheet/InstructionEditor/SelectorListItems/SelectorObjectListItem.js","EventsSheet/InstructionEditor/SelectorListItems/SelectorGroupObjectsListItem.js","AssetStore/ResourceStore/ResourceCard.js","AssetStore/ResourceStore/index.js","Utils/GDevelopServices/Analytics.js","GameDashboard/GameDetailsDialog.js","ObjectGroupsList/GroupRow.js","ObjectGroupsList/index.js","UI/EmptyMessage.js","UI/TextField.js"],"names":["ProjectTitlebar","fileMetadata","gdevelopTheme","React","ThemeContext","hasUnsavedChanges","UnsavedChangesContext","title","fileIdentifier","filter","Boolean","join","Window","setTitle","setTitleBarColor","toolbar","backgroundColor","IconButton","this","props","tooltip","acceleratorString","otherProps","iconButton","disabled","accelerator","i18n","Tooltip","_","isMobile","isMacLike","replace","placement","enterDelay","ThemeConsumer","Consumer","children","listItemWith32PxIconHeight","listItemWithoutIconHeight","styles","listItemText","margin","ListItem","ref","initiallyOpen","isOpen","setIsOpen","elementWithMenu","openContextMenu","current","open","longTouchForContextMenuProps","useLongTouch","renderListItemSecondaryAction","displayReloadButton","reloadButtonTooltip","size","edge","aria-label","onClick","onReload","buildMenuTemplate","displayMenuButton","element","style","color","rightIconColor","displayLinkButton","onOpenLink","displayRemoveButton","onRemove","renderNestedItems","isItemOpen","undefined","button","dense","disableRipple","leftIcon","primary","primaryText","secondary","secondaryText","autoGenerateNestedIndicator","component","disablePadding","paddingLeft","nestedListStyle","ContainerComponent","onDoubleClick","selected","onContextMenu","alignItems","secondaryTextLines","displayAddIcon","displaySearchIcon","List","logo","width","contributors","name","description","link","AboutDialog","state","currentTab","_openContributePage","openExternalURL","_openLink","_changeTab","setState","onClose","updateStatus","updateStatusString","getUpdateStatusLabel","status","updateButtonLabel","getUpdateButtonLabel","actions","key","label","onRequestClose","cannotBeDismissed","maxWidth","noMargin","values","checkUpdates","src","alt","value","onChange","Fragment","getIDEVersion","getGDCoreVersion","justifyContent","canDownloadUpdate","map","contributor","length","expand","PureComponent","SemiControlledTextField","focused","text","_field","selectionStart","selectionEnd","input","getInputNode","focus","commitOnBlur","onFocus","onBlur","type","field","event","newValue","currentTarget","HelpButton","helpPagePath","helpLink","getHelpLink","target","icon","Indent","indent","htmlColor","indentIconColor","VariableRow","variable","depth","errorText","commitVariableValueOnBlur","onAddChild","onChangeValue","onResetToDefaultValue","showHandle","showSelectionCheckbox","isSelected","onSelect","origin","isStructure","limitEditing","columns","tableChildIndentation","checked","onCheck","e","fontStyle","fullWidth","defaultValue","push","fadedButton","getString","multiline","toolColumn","getInitialSelection","getSelection","selection","addToSelection","object","select","console","log","ptr","hasSelection","CLIPBOARD_KIND","electron","optionalRequire","allAlertMessages","initialPreferences","language","autoDownloadUpdates","themeName","remote","nativeTheme","shouldUseDarkColors","codeEditorThemeName","hiddenAlertMessages","hiddenTutorialHints","autoDisplayChangelog","lastLaunchedVersion","eventsSheetShowObjectThumbnails","autosaveOnPreview","useNewInstructionEditorDialog","useGDJSDevelopmentWatcher","eventsSheetUseAssignmentOperators","showEffectParameterNames","projectLastUsedPaths","defaultEditorMosaicNodes","recentProjectFiles","autoOpenMostRecentProject","hasProjectOpened","userShortcutMap","newObjectDialogDefaultTab","isMenuBarHiddenInPreview","setLanguage","setThemeName","setCodeEditorThemeName","setAutoDownloadUpdates","setAutoDisplayChangelog","showAlertMessage","identifier","show","showTutorialHint","verifyIfIsNewVersion","setEventsSheetShowObjectThumbnails","setAutosaveOnPreview","setUseNewInstructionEditorDialog","enabled","setUseGDJSDevelopmentWatcher","setEventsSheetUseAssignmentOperators","setShowEffectParameterNames","getLastUsedPath","project","kind","setLastUsedPath","path","getDefaultEditorMosaicNode","setDefaultEditorMosaicNode","node","getRecentProjectFiles","insertRecentProjectFile","removeRecentProjectFile","getAutoOpenMostRecentProject","setAutoOpenMostRecentProject","hadProjectOpenedDuringLastSession","setHasProjectOpened","resetShortcutsToDefault","setShortcutForCommand","commandName","shortcut","getNewObjectDialogDefaultTab","setNewObjectDialogDefaultTab","getIsMenuBarHiddenInPreview","setIsMenuBarHiddenInPreview","PreferencesContext","UrlsCache","projectCache","cache","url","_getProjectCache","filename","systemFilename","disableCacheBurst","Date","now","ResourcesLoader","resourcesNames","resourcesManager","getResourcesManager","forEach","resourceName","hasResource","_cache","burstUrl","getResource","getFile","urlOrFilename","isResourceForPixi","indexOf","isLocalFile","cachedUrl","getCachedUrl","file","getProjectFile","projectPath","dirname","resourceAbsolutePath","resolve","info","cacheLocalFileUrl","urlWithParameters","urlEncodedParameterName","urlEncodedValue","separator","addSearchParameterToUrl","cacheUrl","options","resourceRelativePath","getFullUrl","container","display","flexDirection","Background","square","height","noFullHeight","flex","noExpand","SelectField","_input","hasValidValue","childrenValues","child","childValue","error","displayedValue","helperText","helperMarkdownText","source","computeTextFieldStyleProps","floatingLabelText","InputLabelProps","shrink","SelectProps","native","inputRef","hintText","SelectOption","marginRight","marginLeft","content","AlertMessage","onHide","renderRightButton","renderLeftIcon","GDevelopThemeContext","elevation","message","warning","padding","shouldCloseOrCancel","shouldValidate","shouldActivate","shouldFocusNextField","shiftKey","shouldFocusPreviousField","exists","prefix","potentialName","i","selectableArea","selectedArea","largeSelectableArea","largeSelectedArea","executableEventContainer","actionsContainer","conditionsContainer","subInstructionsContainer","smallWidthContainer","instructionParameter","instructionInvalidParameter","instructionMissingParameter","disabledText","eventsTree","eventsTreeWithSearchResults","dropIndicator","cantDropIndicator","linkContainer","nameAndIconContainer","gd","global","serializeToJSObject","serializable","methodName","serializedElement","SerializerElement","JSON","parse","Serializer","toJSON","delete","serializeToJSON","json","unserializeFromJSObject","optionalProject","fromJSObject","SearchBar","active","_textField","blur","handleFocus","handleBlur","trim","handleInput","handleCancel","handleKeyPressed","onRequestSearch","nextProps","nonEmpty","root","iconButtonClose","opacity","transform","transition","iconStyle","iconButtonSearch","iconButtonFilter","iconButtonHelp","searchContainer","top","position","getStyles","buildTagsMenuTemplate","muiTheme","searchBar","placeholder","onKeyUp","underlineShow","useShouldAutofocusSearchbar","useScreenType","timeout","listeners","Set","callListeners","callback","window","addEventListener","clearTimeout","setTimeout","useOnResize","useEffect","add","ResponsiveWindowMeasurer","useForceUpdate","useResponsiveWindowWidth","innerWidth","innerHeight","desktopSizes","androidSizes","iosSizes","PlatformSpecificAssetsDialog","_generateFromFile","resourceSources","onChooseResource","sources","then","resources","fullPath","resource","Promise","all","resizeImage","results","allResourcesNames","setFile","imageResource","ImageResource","setName","addResource","burstUrlsCacheForResources","desktopIconResourceNames","androidIconResourceNames","iosIconResourceNames","showErrorBox","rawError","errorId","doNotReport","_onApply","index","getPlatformSpecificAssets","set","onApply","_loadFrom","get","newProps","keyboardFocused","resourceExternalEditors","isResizeSupported","resourceKind","newIcons","lazyRequireJimp","optionalLazyRequire","inputFile","outputFile","Jimp","read","jimpImage","contain","write","catch","err","dialogContent","overflow","transitionDuration","enter","exit","circularProgress","disableShrink","appBar","minHeight","paddingRight","fontSize","flexGrow","className","displayLeftCloseButton","variant","displayRightCloseButton","shouldPrompt","delayElectronClose","isDev","onbeforeunload","showConfirmDialog","getCurrentWindow","close","returnValue","textAlign","textOverflow","whiteSpace","marginTop","marginBottom","TabContentContainer","Component","ClosableTabs","hideLabels","tabItemContainerStyle","flexShrink","flexWrap","overflowX","closableTabs","containerBackgroundColor","ClosableTab","onCloseOthers","onCloseAll","closable","onActivated","contextMenu","useRef","stopPropagation","clientX","clientY","useCallback","textColor","selectedTextColor","selectedBackgroundColor","focusRipple","fontFamily","click","getEditorTabsInitialState","editors","openEditorTab","projectItemName","renderEditorContainer","extraEditorProps","dontFocusTab","existingEditorId","findIndex","editor","editorTab","editorRef","changeCurrentTab","newTabId","Math","max","min","closeTabsExceptIf","keepPredicate","currentEditorTab","getCurrentTab","remainingEditors","closeAllEditorTabs","closeEditorTab","chosenEditorTab","closeOtherEditorTabs","getEditors","getCurrentTabIndex","closeProjectTabs","editorProject","getProject","saveUiSettings","SceneEditorContainer","ExternalLayoutEditorContainer","notifyPreviewWillStart","EventsFunctionsExtensionEditorContainer","previewWillStart","closeLayoutTabs","layout","EventsEditorContainer","ExternalEventsEditorContainer","editorLayout","getLayout","closeExternalLayoutTabs","externalLayout","getExternalLayout","closeExternalEventsTabs","externalEvents","getExternalEvents","closeEventsFunctionsExtensionTabs","eventsFunctionsExtension","getEventsFunctionsExtension","getEventsFunctionsExtensionEditor","tabIndex","getThumbnail","ObjectsRenderingService","bind","defaultEventContainer","smallEventContainer","getIndentWidth","windowWidth","EventContainer","_onEventUpdated","forceUpdate","_onEventContextMenu","domEvent","preventDefault","onEventContextMenu","_container","offsetHeight","eventsHeightsCache","setEventHeight","scope","EventComponent","EventsRenderingService","getEventComponent","onEventClick","globalObjectsContainer","objectsContainer","isEventSelected","leftIndentWidth","onUpdate","onAddNewInstruction","onPasteInstructions","onMoveToInstruction","onMoveToInstructionsList","onInstructionClick","onInstructionDoubleClick","onInstructionContextMenu","onAddInstructionContextMenu","onParameterClick","onOpenExternalEvents","onOpenLayout","renderObjectThumbnail","screenType","eventsSheetHeight","getNodeKey","treeIndex","SortableTree","eventsSheetRootClassName","noop","ThemableEventsTree","_eventsToTreeData","eventsList","flatData","parentDisabled","treeData","mapFor","getEventsCount","getEventAt","isDisabled","_renderEvent","indexInList","expanded","isFolded","getSubEvents","extraNodes","onAddEvent","eventType","onAddNewEvent","events","fixedHeight","concat","_onMoveNode","targetPath","slice","targetNode","getNodeAtPath","targetEventsList","targetPosition","moveEventToAnotherEventsList","forceEventsUpdate","onEventMoved","_canDrag","_canDrop","nextParent","canHaveSubEvents","_canNodeHaveChildren","_onVisibilityToggle","setFolded","_renderObjectThumbnail","objectName","showObjectThumbnails","getObjectByName","classNames","x","y","_isNodeHighlighted","searchResults","searchQuery","find","highlightedEvent","compare","EventHeightsCache","onHeightsChanged","cb","_list","wrappedInstance","recomputeRowHeights","row","_getEventRow","scrollToRow","EventsListUnfolder","unfoldWhenContaining","searchedEvent","scaffoldBlockPxWidth","onVisibilityToggle","onMoveNode","canDrag","canDrop","canNodeHaveChildren","rowHeight","getEventHeight","searchMethod","searchFocusOffset","reactVirtualizedListProps","list","onScroll","defaultProps","ElementWithMenu","_contextMenu","ReactDOM","findDOMNode","_wrappedElement","HTMLElement","dimensions","getBoundingClientRect","round","left","openMenuWithSecondaryClick","passExtraProps","wrappedElement","ListIconMemo","memo","useContext","isGDevelopIcon","cssAnimation","useExactIconSize","iconWidth","iconSize","iconHeight","maxHeight","verticalAlign","animation","gdevelopIconsCSSFilter","lineHeight","autoHideScrollbar","scrollView","scrollTo","scrollViewElement","targetElement","yPosition","scrollViewYPosition","scrollTop","scrollToBottom","scrollHeight","overflowY","StandardEvent","standardEvent","asStandardEvent","renderConditionsList","instrsList","getConditions","areConditions","renderActionsList","getActions","wordWrap","cursor","reactDndInstructionType","DragSourceAndDropTarget","makeDragSourceAndDropTarget","Instruction","instruction","isCondition","instrFormatter","InstructionSentenceFormatter","useAssignmentOperators","metadata","MetadataProvider","getConditionMetadata","JsPlatform","getType","getActionMetadata","dragAllowed","beginDrag","draggedItem","drop","connectDragSource","connectDropTarget","isOver","instructionDragSourceElement","onKeyPress","isInverted","getSmallIconFilename","formattedTexts","getAsFormattedText","parametersCount","getParametersCount","str","parameterIndex","getTextFormatting","getUserData","toUpperCase","substr","parameterMetadata","getParameter","parameterType","ParameterRenderingService","renderInlineParameter","InvalidParameterValue","MissingParameterValue","renderInstructionText","instructionDragSourceDropTargetElement","canHaveSubInstructions","getSubInstructions","onAddNewSubInstruction","onPasteSubInstructions","onMoveToSubInstruction","onMoveToSubInstructionsList","onSubInstructionClick","onSubInstructionDoubleClick","onSubInstructionContextMenu","onAddSubInstructionContextMenu","onSubParameterClick","addButtonLabel","RelationalOperatorField","getDescription","isInline","getLongDescription","renderInlineRelationalOperator","isEmpty","OperatorField","renderInlineOperator","MouseField","renderInlineMouse","keyNames","isKeyValid","KeyField","dataSource","keyName","openOnFocus","renderInlineKey","RenderedUnknownInstance","instance","associatedObject","pixiContainer","pixiResourcesLoader","RenderedInstance","call","_pixiObject","PIXI","_pixiContainer","addChild","hasCustomSize","getCustomWidth","getCustomHeight","beginFill","lineStyle","moveTo","lineTo","endFill","prototype","Object","create","resourcesLoader","update","_instance","getX","getY","rotation","getAngle","PI","RenderedSpriteInstance","_renderedAnimation","_renderedDirection","_centerX","_centerY","_originX","_originY","_pixiResourcesLoader","getInvalidPIXITexture","updatePIXITexture","updatePIXISprite","spriteObject","asSpriteObject","getAnimationsCount","getAnimation","getDirectionsCount","getDirection","getSpritesCount","imageName","getSprite","getImageName","getResourceFullUrl","anchor","texture","frame","_shouldNotRotate","toRad","scale","abs","updateSprite","_sprite","_associatedObject","hasNoAnimations","getRawFloatProperty","hasNoDirections","useMultipleDirections","normalizedAngle","floor","direction","getPIXITexture","_project","getOrigin","isDefaultCenterPoint","baseTexture","valid","that","on","off","center","getCenter","getOriginX","getOriginY","getDefaultWidth","getDefaultHeight","RenderedTiledSpriteInstance","tiledSprite","asTiledSpriteObject","_texture","getTexture","getWidth","getHeight","RenderedPanelSpriteInstance","makeObjects","updateTexture","panelSprite","asPanelSpriteObject","isTiled","_tiled","_textureName","updateAngle","updatePosition","oldWidth","_width","oldHeight","_height","updateWidthHeight","StretchedSprite","_centerSprite","_borderSprites","removeChildren","_updateLocalPositions","getLeftMargin","getTopMargin","getRightMargin","getBottomMargin","_updateSpritesAndTexturesSize","_wasRendered","cacheAsBitmap","makeInsideTexture","renderer","rect","pivot","RenderedTextInstance","textObject","asTextObject","align","_styleFontDirty","_fontFamily","getFontFamily","getFontName","isItalic","_isItalic","isBold","_isBold","getCharacterSize","_characterSize","_wrapping","_wrappingWidth","_fontName","loadFontFamily","warn","fontWeight","wordWrapWidth","breakWords","dirty","getColorR","_colorR","getColorG","_colorG","getColorB","_colorB","fill","makeRenderer","RenderedParticleEmitterInstance","updateGraphics","particleEmitterObject","asParticleEmitterObject","clear","emitterAngle","sprayConeAngle","getConeSprayAngle","line1Angle","line2Angle","rgbToHexNumber","getParticleRed2","getParticleGreen2","getParticleBlue2","cos","sin","getParticleRed1","getParticleGreen1","getParticleBlue1","drawCircle","loadFontFace","descriptors","FontFace","fontFace","document","fonts","load","newStyle","createElement","appendChild","createTextNode","head","FontFaceObserver","YesNoField","_yesButton","createRef","focusButton","effectiveValue","getParameterValueOrDefault","displayInlineAsSpan","renderInlineYesNo","TrueFalseField","_trueButton","renderInlineTrueFalse","ExpressionField","expressionType","ExpressionSelector","instructionsInfo","filterEnumeratedInstructionOrExpressionMetadataByScope","enumerateAllExpressions","instructionsInfoTree","createTree","defaultStyle","highlightedText","borderSizing","borderBottom","sortedHighlights","highlights","sort","highlight1","highlight2","begin","elements","lastPos","highlight","startPos","substring","end","getAutocompletionsForExpressions","expressionMetadatas","isExact","enumeratedExpressionMetadata","parameters","completion","addParenthesis","addClosingParenthesis","getVisibleParameterTypes","getAutocompletionsFromDescriptions","expressionAutocompletionContext","expressionCompletionDescriptions","flatten","mapVector","completionDescription","completionKind","getCompletionKind","ExpressionCompletionDescription","Expression","getObjectName","getBehaviorName","getPrefix","behaviorName","behaviorType","getTypeOfBehavior","behaviorExpressions","enumerateBehaviorExpressions","filteredBehaviorExpressions","filterExpressions","getAutocompletionsForBehaviorExpressions","objectType","getTypeOfObject","objectExpressions","enumerateObjectExpressions","filteredObjectExpressions","getAutocompletionsForObjectExpressions","freeExpressions","enumerateFreeExpressions","filteredFreeExpressions","getAutocompletionsForFreeExpressions","enumerateObjectsAndGroups","allObjectsList","allGroupsList","filteredObjectsList","filterObjectsList","searchText","selectedTags","filteredGroupsList","filterGroupsList","addDot","ParameterMetadata","isObject","getName","group","getAutocompletionsForObject","Behavior","getBehaviorsOfObject","toJSArray","addNamespaceSeparator","getAutocompletionsForBehavior","insertAutocompletionInExpression","insertedAutocompletion","expression","caretLocation","formatCompletion","nextCharacter","suffix","addSuffix","newExpression","startPosition","isSeparatorChar","char","wordStartPosition","wordEndPosition","maybeNextCharacter","newExpressionStart","insertedWord","newExpressionEnd","getAutocompletionsInitialState","autocompletions","selectedCompletionIndex","getRemainingCount","getVisibleAutocompletions","setNewAutocompletions","handleAutocompletionsKeyDown","onUpdateAutocompletions","onInsertAutocompletion","visibleAutocompletionsLength","autocompletion","defaultTextStyle","overflowWrap","AutocompletionIcon","formatParameterTypesString","parameterRenderingService","userFriendlyName","getUserFriendlyTypeName","DisplayedExpressionAutocompletion","expressionAutocompletion","onPointerDown","iconFilename","DisplayedExactExpressionAutocompletion","DisplayedObjectAutocompletion","thumbnail","DisplayedBehaviorAutocompletion","tooManyTextContainer","popperStyle","zIndex","muiZIndex","ExpressionAutocompletionsDisplayer","expressionAutocompletions","remainingCount","anchorEl","onChoose","selectedAutocompletionElement","disablePortal","StringField","getChoices","getExtraInfo","exception","StringWithSelectorField","choice","BehaviorField","_behaviorNames","_getError","_doValidation","_forceChooseBehavior","_description","_longDescription","_behaviorTypeAllowed","instructionMetadata","expressionMetadata","getLastObjectParameterValue","_updateBehaviorsList","noBehaviorErrorText","GlobalVariableField","editorOpen","variablesContainer","getVariables","onOpenDialog","onCancel","emptyExplanationMessage","renderInlineGlobalVariable","renderVariableWithIcon","ObjectVariableField","hasObjectNamed","getObject","renderInlineObjectVariable","LayerField","layerNames","getLayersCount","getLayerAt","layerName","AudioResourceField","initialResourceName","VideoResourceField","JsonResourceField","parseColor","rgbColor","colors","split","r","parseInt","g","b","a","ParameterColorField","renderExtraButton","disableAlpha","onChangeComplete","rgb","ForceMultiplierField","_instantButton","showDeprecatedNumericValue","renderInlineForceMultiplier","SceneNameField","layoutNames","enumerateLayouts","layoutName","GroupEvent","editing","edit","endEditing","groupEvent","asGroupEvent","getBackgroundColorR","getBackgroundColorG","getBackgroundColorB","textField","inputStyle","WebkitTextFillColor","underlineFocusStyle","borderColor","id","commentTextStyle","commentTextField","commentSpan","boxSizing","border","CommentEvent","onEvent","asCommentEvent","setComment","_getCommentHTML","getComment","commentEvent","rgbToHex","getBackgroundColorRed","getBackgroundColorGreen","getBackgroundColorBlue","getTextColorRed","getTextColorGreen","getTextColorBlue","selectable","_selectable","dangerouslySetInnerHTML","__html","Tabs","Tab","instructionsContainer","actionsList","ForEachEvent","_objectField","forEachEvent","asForEachEvent","getObjectToPick","setObjectToPick","objectField","variableContainer","eventLabel","ForEachChildVariableEvent","_valueIteratorField","_keyIteratorField","_iterableField","editingValueIteratorVariableName","editingKeyIteratorVariableName","editingIterableVariableName","forEachChildVariableEvent","asForEachChildVariableEvent","valueIteratorName","getValueIteratorVariableName","keyIteratorName","getKeyIteratorVariableName","iterableName","getIterableVariableName","scenevar","setValueIteratorVariableName","iteratorField","setKeyIteratorVariableName","setIterableVariableName","iterableField","RepeatEvent","repeatEvent","asRepeatEvent","getRepeatExpression","setRepeatExpression","whileEvent","asWhileEvent","getWhileConditions","LinkEvent","_externalEventsField","openTarget","asLinkEvent","getTarget","hasExternalEventsNamed","hasLayoutNamed","showWarningBox","linkEvent","setTarget","externalEventsField","getList","enumerateExternalEvents","layouts","ExternalEventsField","wrappingText","paddingTop","paddingBottom","comment","commentLink","textDecoration","expandIcon","JsCodeEvent","editingObject","asJsCodeEvent","getInlineCode","jsCodeEvent","setInlineCode","editObject","endObjectEditing","toggleExpanded","setEventsSheetExpanded","isEventsSheetExpanded","_getCodeEditorHeight","heightToFillSheet","parameterObjects","getParameterObjects","textStyle","objects","eventsFunctionContext","eventsFunction","functionStart","functionEnd","href","rel","bounds","measureRef","contentRect","onEditorMounted","setParameterObjects","eventHeights","updateTimeoutId","cachedHeight","_notifyComponent","addButton","makeMenuTemplateBuilderForEvents","enumerateEventsMetadata","fullName","BottomButtons","EmptyEventsPlaceholder","fullHeightSelector","NewInstructionEditorDialog","isNewInstruction","onSubmit","openInstructionOrExpression","useNewInstructionEditor","newInstructionEditorState","newInstructionEditorSetters","chosenObjectName","chosenObjectInstructionsInfo","chosenObjectInstructionsInfoTree","chooseInstruction","chooseObject","chooseObjectInstruction","hasObjectChosen","getInitialStepName","step","setStep","getInitialTab","currentInstructionOrObjectSelectorTab","setCurrentInstructionOrObjectSelectorTab","instructionType","instructionParametersEditor","getInstructionMetadata","instructionHelpPage","getHelpPath","renderInstructionOrObjectSelector","onChangeTab","chosenInstructionType","onChooseInstruction","onChooseObject","focusOnMount","onSearchStartOrReset","renderParameters","noHelpButton","renderObjectInstructionSelector","selectedType","useSubheaders","searchPlaceholderObjectName","searchPlaceholderIsCondition","secondaryActions","stepBackFrom","flexRowBody","columnsRenderer","getColumns","caseSensitiveSlug","incString","preserved","p","s","RegExp","enumerateNamedPropertyDescriptorsList","namedProperties","namedProperty","getLabel","getValue","extraInfo","isHidden","toGdPropertyDescriptor","enumeratedProperty","propertyDescriptor","setType","setDescription","setLabel","setValue","setHidden","addExtraInfo","NewInstructionEditorMenu","canPasteInstructions","submitInstruction","setupInstructionParameters","anchorOrigin","vertical","horizontal","transformOrigin","sizeTextField","white","black","filterEditableWithEventTextDialog","includes","EventTextDialog","_applyChangesOnEvent","textValue","setTextColor","setBackgroundColor","_getInitialStateFromEvent","rows","rowsMax","KeyboardShortcuts","isActive","shortcutCallbacks","_shiftPressed","_ctrlPressed","_altPressed","_metaPressed","_updateModifiersFromEvent","evt","metaKey","altKey","ctrlKey","_isControlOrCmdPressed","onDragOver","onKeyDown","_isActive","closest","_shortcutCallbacks","onDelete","onMove","onCopy","onCut","onPaste","onUndo","onRedo","onSearch","onZoomOut","onZoomIn","onEscape","which","checkbox","uncheckedIcon","checkedIcon","control","InlineParameterEditor","ParameterComponent","_loadComponentFromInstruction","_unload","getCurrentPlatform","getParameterComponent","ensureSingleOnceInstructions","instructionsList","hasEndingOnceInstruction","hasInvalidOnce","removeAt","onceInstruction","insert","toEventsContextResult","eventsContext","objectsNames","getObjectNames","toNewVectorString","objectOrGroupNames","getReferencedObjectOrGroupNames","objectOrGroupBehaviorNames","objectOrGroupName","behaviorNames","getBehaviorNamesOfObjectOrGroup","EventsContextAnalyzerDialog","eventsContextResult","keys","SearchPanel","replaceText","matchCase","searchInActions","searchInConditions","searchInEventStrings","searchInSelection","searchResultsDirty","searchTextField","markSearchResultsDirty","launchSearch","onSearchInEvents","launchReplace","onReplaceInEvents","launchSearchIfResultsDirty","resultsCount","hasEventSelected","onGoToPreviousSearchResult","onGoToNextSearchResult","onCloseSearchPanel","_searchTextField","EventsSearcher","eventsSearchResults","_resultEvents","_doReplaceInEvents","EventsRefactorer","replaceStringInEvents","_doSearchInEvents","newEventsSearchResults","searchInEvents","clone","_updateListOfResultEvents","resultEventsWithDuplicates","eventsSearchResult","at","isEventValid","getEvent","uniqBy","_goToSearchResults","newSearchFocusOffset","_goToPreviousSearchResult","_goToNextSearchResult","eventsSearchResultEvents","replaceInEvents","goToNextSearchResult","goToPreviousSearchResult","containsSubInstructions","subInstructionsList","EventsFunctionExtractorDialog","extensionName","createNewExtension","serializedEvents","EventsFunction","setupFunctionFromEvents","enumerateEventsFunctionsExtensions","onCreate","eventsFunctionsExtensions","hasLotsOfParameters","functionHasLotsOfParameters","canCreateEventsFunction","getFullName","validateExtensionNameUniqueness","validateExtensionName","functionName","validateEventsFunctionNameUniqueness","validateEventsFunctionName","eventsBasedBehavior","onConfigurationUpdated","freezeEventsFunctionType","onParametersUpdated","freezeParameters","getObjectGroupByName","objectGroupName","getObjectGroups","has","BehaviorTypeSelector","behaviorMetadata","enumerateBehaviorsMetadata","valueIsListed","Table","TableBody","TableHeader","TableHeaderColumn","TableRow","TableRowColumn","require","app","fs","process","isDarwin","test","platform","tryPath","onExists","onNoAccess","access","constants","R_OK","module","exports","findGDJS","reject","Error","appPath","getAppPath","cwd","pathToRoot","rootPath","onFound","gdjsRoot","onNotFound","devPath","initialMosaicEditorNodes","first","second","splitPercentage","EventsFunctionsExtensionEditor","selectedEventsFunction","selectedEventsBasedBehavior","editedEventsBasedBehavior","editOptionsDialogOpen","behaviorMethodSelectorDialogOpen","extensionFunctionSelectorDialogOpen","onAddEventsFunctionCb","_loadEventsFunctionFrom","_globalObjectsContainer","ObjectsContainer","_objectsContainer","EventsFunctionTools","eventsFunctionToObjectsContainer","updateToolbar","setToolbar","selectEventsFunctionByName","eventsBasedBehaviors","getEventsBasedBehaviors","behaviorEventsFunctions","getEventsFunctions","hasEventsFunctionNamed","_selectEventsFunction","getEventsFunction","_editorNavigator","getEvents","openEditor","_makeRenameFreeEventsFunction","newName","done","Project","validateName","isExtensionLifecycleEventsFunction","delayToNextTick","WholeProjectRefactorer","renameEventsFunction","_makeRenameBehaviorEventsFunction","isBehaviorLifecycleEventsFunction","renameBehaviorEventsFunction","_makeMoveFreeEventsParameter","oldIndex","newIndex","moveEventsFunctionParameter","getParametersIndexOffset","_makeMoveBehaviorEventsParameter","moveBehaviorEventsFunctionParameter","_onDeleteEventsFunction","_selectEventsBasedBehavior","_editorMosaic","_makeRenameEventsBasedBehavior","renameEventsBasedBehavior","_onEventsBasedBehaviorRenamed","onBehaviorEdited","_onDeleteEventsBasedBehavior","_onAddFreeEventsFunction","_onCloseExtensionFunctionSelectorDialog","_onAddBehaviorEventsFunction","_onCloseBehaviorMethodSelectorDialog","_onBehaviorEventsFunctionAdded","ensureBehaviorEventsFunctionsProperParameters","_onBehaviorPropertyRenamed","oldName","renameBehaviorProperty","_editOptions","_editBehavior","_openFreeFunctionsListEditor","_openBehaviorsListEditor","_onEditorNavigatorEditorChanged","editorName","initiallyFocusedFunctionName","initiallyFocusedBehaviorName","noTitleBar","renderEditor","onEditFreeFunctions","onEditBehaviors","onEditExtensionOptions","toolbarControls","onParametersOrGroupsUpdated","onMoveFreeEventsParameter","onMoveBehaviorEventsParameter","unsavedChanges","onCreateEventsFunction","onOpenSettings","eventsFunctionsContainer","onSelectEventsFunction","onDeleteEventsFunction","canRename","onRenameEventsFunction","onAddEventsFunction","onEventsFunctionAdded","renderHeader","eventsBasedBehaviorsList","onSelectEventsBasedBehavior","onDeleteEventsBasedBehavior","onRenameEventsBasedBehavior","onEventsBasedBehaviorRenamed","onEditProperties","editorNavigator","initialEditorName","transitions","previousEditor","nextIcon","nextLabel","nextEditor","onEditorChanged","editorMosaic","onPersistNodes","initialNodes","triggerUnsavedChanges","onRenameProperty","EventsFunctionConfigurationEditor","_canObjectOrGroupUseNewName","_onDeleteGroup","groupWithContext","answer","objectOrGroupRemovedInEventsFunction","_onRenameGroup","objectOrGroupRenamedInEventsFunction","_chooseTab","renderConfigurationHeader","useFullHeight","globalObjectGroups","objectGroups","canRenameGroup","onRenameGroup","onDeleteGroup","onGroupsUpdated","canSetAsGlobalGroup","ObjectGroupsListWithObjectGroupEditor","editedGroup","editGroup","onEditGroup","onGroupAdded","onGroupRemoved","onGroupRenamed","ObjectGroupEditor","newObjectName","removeObject","onSizeUpdated","addObject","getAllObjectsNames","_renderExplanation","noGroups","EventsBasedBehaviorEditorDialog","onTabChanged","onPropertiesUpdated","EventsBasedBehaviorEditor","_allObjectTypes","getAllObjectTypesUsingEventsBasedBehavior","newTab","setFullName","floatingLabelFixed","getObjectType","setObjectType","allowedObjectTypes","getEventsFunctionsCount","updateState","propertiesContainer","EventsBasedBehaviorPropertiesEditor","_addProperty","properties","getPropertyDescriptors","newNameGenerator","insertNew","getCount","_removeProperty","remove","_moveProperty","move","property","validatePropertyName","disabledItem","MethodListItem","functionType","Action","BehaviorMethodSelectorDialog","eventsFunctions","FunctionListItem","showAdvanced","setShowAdvanced","Condition","currentEditorName","setCurrentEditorName","buttonLineJustifyContent","eventsFunctionsCount","eventsBasedBehaviorsCount","DismissableAlertMessage","LayerRenderer","layer","viewPosition","instances","onInstanceClicked","onInstanceDoubleClicked","onOverInstance","onOutInstance","onMoveInstance","onMoveInstanceEnd","onDownInstance","getInstanceLeft","renderedInstances","getInstanceTop","getInstanceWidth","getInstanceHeight","getRendererOfInstance","renderedInstance","associatedObjectName","createNewInstanceRenderer","interactive","gesture","panable","makeDoubleClickable","shouldBeHandledByPinch","data","originalEvent","deltaX","deltaY","viewTopLeft","viewBottomRight","instancesRenderer","InitialInstanceJSFunctor","invoke","instancePtr","wrapPointer","InitialInstance","pixiObject","getPixiObject","zOrder","getZOrder","isLocked","isVisible","_isInstanceVisible","visible","wasUsed","toSceneCoordinates","_computeViewBounds","iterateOverInstancesWithZOrdering","_updatePixiObjectsZOrder","_updateVisibility","_cleanRenderers","getVisibility","hasOwnProperty","getInstance","instanceRemovedFromScene","pixiDisplayObject","lastClickTime","lastClickGlobalX","lastClickGlobalY","handleTap","currentTime","emit","SelectionRectangle","instanceMeasurer","toCanvasCoordinates","startSelectionRectangle","selectionRectangleStart","selectionRectangleEnd","updateSelectionRectangle","lastX","lastY","endSelectionRectangle","_instancesInSelectionRectangle","tmp","iterateOverInstances","selector","pixiRectangle","hitArea","instanceHeight","instanceWidth","selectionSceneStart","selectionSceneEnd","x1","y1","x2","y2","alpha","drawRect","roundPositionsToGrid","pos","newPos","grid","snap","roundPosition","gridWidth","gridOffsetX","gridHeight","gridOffsetY","InstancesAdder","_zOrderFinder","HighestZOrderFinder","addInstances","objectNames","_instances","getHighestZOrder","_options","insertNewInitialInstance","setObjectName","setX","setY","setZOrder","createOrUpdateTemporaryInstancesFromObjectNames","_temporaryInstances","updateTemporaryInstancePositions","_createTemporaryInstancesFromObjectNames","deleteTemporaryInstances","removeInstance","InstancePropertiesEditor","_instanceVariablesList","schema","valueType","onEditButtonClick","onEditObjectByName","setAngle","setLocked","enumerateLayers","getLayer","setLayer","setHasCustomSize","setCustomWidth","setCustomHeight","getCustomProperties","instanceSchema","propertiesMapToSchema","updateCustomProperty","editInstanceVariables","inheritedVariablesContainer","_renderInstancesProperties","_renderEmpty","InstancesList","renderedRows","_searchBar","_onRowClick","onSelectInstances","_rowGetter","_rowClassName","selectedInstances","_selectFirstInstance","instanceRowRenderer","toLowerCase","locked","toFixed","angle","tableKey","table","headerHeight","tableRootClassName","headerClassName","rowCount","rowGetter","onRowClick","rowClassName","dataKey","VariablesEditorDialog","selectedLayer","layersContainer","choices","layerRemoved","LayerEditorDialog","initialTab","initialInstances","hotReloadPreviewButtonProps","onCancelChanges","useSerializableObjectCancelableEditor","serializableObject","useState","setCurrentTab","useMemo","zOrderFinder","restrictSearchToLayer","instancesCount","getInstancesCount","highestZOrder","isLightingLayer","getUseDeprecatedZeroAsDefaultZOrder","setVisibility","isFollowingBaseLayerCamera","setFollowBaseLayerCamera","getAmbientLightColorRed","getAmbientLightColorGreen","getAmbientLightColorBlue","setAmbientLightColor","effectsContainer","onEffectsUpdated","InnerDialog","setNewObjectName","useProjectToUnserialize","EditorComponent","editorComponent","onRename","noTitleMargin","canRenameObject","onUpdateBehaviorsSharedData","ObjectEditorDialog","castToObjectType","editorConfiguration","ObjectsEditorService","getEditorConfiguration","toolbarItemStyle","resourcesSelector","alignSelf","toolbarItem","TextEditor","setCharacterSize","setColor","setBold","setItalic","canBeReset","setFontName","setString","TiledSpriteEditor","tiledSpriteObject","setTexture","setWidth","setHeight","PanelSpriteEditor","panelSpriteObject","setTiled","setTopMargin","setBottomMargin","setLeftMargin","setRightMargin","gridList","animationTitle","animationTools","AddAnimationLine","onAdd","extraTools","Animation","onSpriteContextMenu","selectedSprites","onSelectSprite","onReplaceDirection","onChangeName","animationName","onReplaceByDirection","newDirection","SortableAnimation","SortableElement","SortableAnimationsList","SortableContainer","onAddAnimation","onRemoveAnimation","onChangeAnimationName","extraBottomTools","directionId","AnimationsListContainer","onSortEnd","moveAnimation","addAnimation","emptyAnimation","setDirectionsCount","removeAnimation","changeAnimationName","otherNames","deleteSelection","deleteSpritesFromAnimation","duplicateSelection","duplicateSpritesInAnimation","openSpriteContextMenu","sprite","selectSprite","spriteContextMenu","replaceDirection","animationId","setDirection","helperClass","useDragHandle","lockAxis","axis","SpriteEditor","pointsEditorOpen","collisionMasksEditorOpen","openPointsEditor","openCollisionMasksEditor","onPointsUpdated","onCollisionMasksUpdated","spritesList","thumbnailExtraStyle","spriteThumbnailImage","AddSpriteButton","displayHint","thumbnailContainerStyle","itemsBackgroundColor","SortableSpriteThumbnail","SortableList","onAddSprite","spritesCount","checkDirectionPointsAndCollisionsMasks","allDirectionSpritesHaveSamePoints","allDirectionSpritesHaveSameCollisionMasks","allDirectionSpritesHaveSamePointsAs","allDirectionSpritesHaveSameCollisionMasksAs","SpritesList","moveSprite","applyResourceDefaults","Sprite","setImageName","copySpritePoints","copySpritePolygons","addSprite","editWith","externalEditor","resourceNames","externalEditorData","metadataRaw","getMetadata","singleFrame","extraOptions","fps","getTimeBetweenFrames","basename","extname","isLooping","onChangesSaved","Direction","setTimeBetweenFrames","setLoop","originalIndex","originalSprite","setMetadata","stringify","newAnimationName","smallest","onEditWith","listItem","useStyles","makeStyles","option","listbox","inputRoot","popper","renderItem","divider","disableGutters","renderIcon","isOptionDisabled","inputValue","setInputValue","isMenuOpen","setIsMenuOpen","classes","forceInputValueTo","currentInputValue","handleInputChange","reason","freeSolo","handleChange","onInputChange","renderOption","getOptionDisabled","getOptionLabel","filterOptions","lowercaseInputValue","optionList","pop","shift","filterFunction","renderInput","params","InputProps","inputProps","other","endAdornment","getDefaultStylingProps","otherStylingProps","onMouseDown","textFieldStyle","PointsEditor","animationIndex","directionIndex","spriteIndex","samePointsForAnimations","samePointsForSprites","_updatePoints","getCurrentElements","otherAnimation","copyAnimationsSpritePoints","chooseAnimation","_updateSamePointsToggles","chooseDirection","chooseSprite","every","allSpritesHaveSamePointsAs","_setSamePointsForAllAnimations","enable","_setSamePointsForAllSprites","hasValidSprite","renderOverlay","imageWidth","imageHeight","imageZoomFactor","pointsContainer","sameForAllAnimations","sameForAllSprites","setSameForAllAnimations","setSameForAllSprites","setSameForAllAnimationsLabel","setSameForAllSpritesLabel","SortableAddPointRow","AddPointRow","SortablePointRow","PointRow","PointsListBody","nameErrors","updateOriginPointX","_onPointsUpdated","updateOriginPointY","updateCenterPointX","updateCenterPointY","updatePointX","point","updatePointY","nonDefaultPoints","getAllNonDefaultPoints","pointsRows","pointName","pointX","pointY","onChangePointX","onChangePointY","nameError","success","hasPoint","delPoint","originPoint","centerPoint","originRow","centerRow","isAutomatic","onEdit","setDefaultCenterPoint","addRow","Point","addPoint","SortablePointsListBody","muiName","PointsList","handleColumn","coordinateColumn","lockToContainerEdges","parseFloat","pointKindIdentifiers","PointsPreview","draggedPoint","draggedPointKind","_onStartDragPoint","_onEndDragPoint","draggingWasDone","_onMouseMove","containerBoundingRect","xOnContainer","yOnContainer","_renderPoint","imageSrc","points","automaticCenterPosition","onPointerMove","onPointerUp","CollisionMasksEditor","sameCollisionMasksForAnimations","sameCollisionMasksForSprites","spriteWidth","spriteHeight","_updateCollisionMasks","copyAnimationsSpriteCollisionMasks","_updateSameCollisionMasksToggles","allSpritesHaveSameCollisionMasksAs","_onSetCollisionMaskAutomatic","automatic","setCollisionMaskAutomatic","_setSameCollisionMasksForAllAnimations","_setSameCollisionMasksForAllSprites","_setCurrentSpriteSize","onSize","isDefaultBoundingBox","isCollisionMaskAutomatic","polygons","getCustomCollisionMask","onPolygonsUpdated","SortableAddPolygonRow","AddPolygonRow","SortableAddVerticeRow","AddVerticeRow","SortableVerticeRow","VerticeRow","SortablePolygonRow","PolygonRow","PolygonsListBody","updateVerticeX","vertice","set_x","_onPolygonUpdated","updateVerticeY","set_y","polygonRows","polygon","vertices","getVertices","isConvex","removeFromVectorPolygon2d","verticesCount","j","verticeX","get_x","verticeY","get_y","onChangeVerticeX","onChangeVerticeY","removeFromVectorVector2f","canRemove","hasWarning","newVertice","Vector2f","push_back","newPolygon","Polygon2d","createRectangle","SortablePolygonsListBody","PolygonsList","svg","vertexCircle","CollisionMasksPreview","draggedVertex","_onStartDragVertex","_onEndDragVertex","_onPointerMove","pointOnScreen","_svg","createSVGPoint","screenToSvgMatrix","getScreenCTM","inverse","pointOnSvg","matrixTransform","stroke","strokeWidth","fileRule","vertex","cx","cy","_renderBoundingBox","_renderPolygons","EmptyEditor","shapePainterObject","asShapePainterObject","areCoordinatesAbsolute","setCoordinatesRelative","setCoordinatesAbsolute","isClearedBetweenFrames","setClearBetweenFrames","getOutlineColorR","getOutlineColorG","getOutlineColorB","setOutlineColor","getOutlineOpacity","setOutlineOpacity","getOutlineSize","setOutlineSize","getFillColorR","getFillColorG","getFillColorB","setFillColor","getFillOpacity","setFillOpacity","ParticleEmitterEditor","tutorialHints","getObjectTutorialHints","tutorialHint","getRendererType","rendererType","setRendererType","ParticleEmitterObject","Quad","setParticleTexture","Line","getRendererParam1","setRendererParam1","getRendererParam2","setRendererParam2","getParticleTexture","setParticleRed1","setParticleGreen1","setParticleBlue1","getParticleAlpha1","setParticleAlpha1","setParticleRed2","setParticleGreen2","setParticleBlue2","getParticleAlpha2","setParticleAlpha2","isRenderingAdditive","setRenderingAdditive","setRenderingAlpha","getDestroyWhenNoParticles","setDestroyWhenNoParticles","getMaxParticleNb","setMaxParticleNb","getTank","setTank","getFlow","setFlow","getEmitterForceMin","setEmitterForceMin","getEmitterForceMax","setEmitterForceMax","setConeSprayAngle","getZoneRadius","setZoneRadius","getParticleGravityX","setParticleGravityX","getParticleGravityY","setParticleGravityY","getFriction","setFriction","getParticleLifeTimeMin","setParticleLifeTimeMin","getParticleLifeTimeMax","setParticleLifeTimeMax","getParticleSize1","setParticleSize1","getParticleSize2","setParticleSize2","getParticleAngle1","setParticleAngle1","getParticleAngle2","setParticleAngle2","ObjectPropertiesEditor","objectAsGdObject","castObject","gdObject","getProperties","propertiesSchema","updateProperty","extraInformation","getExtraObjectsInformation","AddBehaviorLine","BehaviorsEditor","newBehaviorDialogOpen","chooseNewBehavior","_hasBehaviorWithType","getAllBehaviorNames","getBehavior","behavior","getTypeName","addBehavior","defaultName","hasBehaviorNamed","addNewBehavior","_onChangeBehaviorName","behaviorContent","renameBehavior","_onRemoveBehavior","removeBehavior","allBehaviorNames","behaviorTypeName","isNullPtr","BehaviorComponent","BehaviorsEditorService","getEditor","getBehaviorTutorialHints","getBehaviorHelpPagePath","BehaviorListItem","NewBehaviorDialog","showDeprecated","setShowDeprecated","setSearchText","isInstalling","setIsInstalling","extensionInstallTime","setExtensionInstallTime","eventsFunctionsExtensionsState","EventsFunctionsExtensionsContext","shouldAutofocusSearchbar","deprecatedBehaviorsInformation","getDeprecatedBehaviorsInformation","filteredBehaviorMetadata","filterEnumeratedBehaviorMetadata","behaviors","deprecatedBehaviors","chooseBehavior","showMessageBox","canBehaviorBeUsed","hasSearchNoResult","flexBody","onInstall","extensionShortHeader","installExtension","showOnlyWithBehaviors","SetupGridDialog","gridColor","gridOptions","xScrollbar","right","yScrollbar","bottom","FullSizeInstancesEditorWithScrollbars","_editor","xValue","yValue","xMin","xMax","yMin","yMax","_handleXChange","_handleYChange","_setAndAdjust","_handleViewPositionChange","throttle","getViewX","getViewY","leading","trailing","getViewPosition","wrappedEditorRef","onViewPositionChanged","orientation","shortenString","maxLength","TagsButton","onObjectAdded","additionalWork","getInfoBarDetails","onInstanceAdded","getLightingLayer","hasLayerNamed","insertNewLayer","setLightingLayer","lightingLayer","infoBarEvent","touchScreenMessage","shell","ResourcesEditor","_propertiesEditor","_resourcesList","showPropertiesInfoBar","selectedResource","deleteResource","onDeleteResource","doRemove","removeResource","forceUpdateList","_removeUnusedResources","selectedResourceName","removedResourceNames","ProjectResourcesAdder","getAllUseless","removeAllUseless","_onResourceSelected","_removeAllResourcesWithInvalidPath","getAllResourceNames","getResourceFilePathStatus","openProjectFolder","openItem","openProperties","onOpenProjectFolder","onOpenProperties","canDelete","onDeleteSelection","onRenameResource","propertiesEditor","onResourcePathUpdated","checkMissingPaths","onSelectResource","resourcesList","onRemoveUnusedResources","onRemoveAllResourcesWithInvalidPath","lazyRequireGlob","hasElectron","listContainer","getResourceName","ResourcesList","renamedResource","resourcesWithErrors","_deleteResource","_locateResourceFile","resourceFolderPath","getLocalResourceFullPath","_openResourceFile","resourceFilePath","_copyResourceFilePath","clipboard","writeText","_scanForNewResources","extensions","createResource","glob","res","pathFound","fileName","relative","createOrUpdateResource","_editName","sortableList","forceUpdateGrid","_rename","doRename","_moveSelectionTo","destinationResource","moveResource","getResourcePosition","_renderResourceMenuTemplate","_index","RESOURCE_EXTENSIONS","image","audio","AudioResource","font","FontResource","video","VideoResource","nextState","allResourcesList","filteredList","filterResourcesList","listKey","fullList","getItemName","selectedItems","onItemSelected","renamedItem","onMoveSelectionToItem","erroredItems","reactDndType","lowercaseSearchText","Toolbar","lastChild","isSameObjectWithContext","objectWithContext","enumerateObjects","filterObject","containerObjectsList","getObjectsCount","getObjectAt","projectObjectsList","enumerateObjectTypes","extensionsList","getAllPlatformExtensions","extension","getExtensionObjectsTypes","getObjectMetadata","objectMetadata","getIconFilename","objectTags","getTags","hasStringAllTags","enumerateGroups","count","getAt","filterGroup","containerGroups","containerGroupsList","projectGroups","projectGroupsList","displayLocaleMetadata","localeMetadata","languageCode","renderLanguageSelectOption","translationRatio","percent","isStarted","languageNativeName","languageName","LanguageDialog","languageDidChange","localesToDisplay","LocalesMetadata","goodProgressLocales","startedLocales","isLoadingLanguage","OpenFromStorageProviderDialog","storageProviders","onChooseProvider","onCreateNewProject","storageProvider","hiddenInOpenDialog","internalName","hiddenInSaveDialog","OpenConfirmDialog","onConfirm","useOpenConfirmDialog","interactionMade","pendingConfirmationPromiseResolve","openConfirmDialogOpen","openOpenConfirmDialog","ensureInteractionHappened","storageProviderOperations","doesInitialOpenRequireUserInteraction","renderOpenConfirmDialog","closeAndResolveWith","proceed","verifyProjectContent","gdVersion","useStateWithCallback","initialValue","useStateWithCB","generateProjectItemOptions","enumerate","onOpen","item","handler","useMainFrameCommands","handlers","useCommand","onCloseApp","onOpenProfile","onOpenGamesDashboard","onOpenProjectManager","previewEnabled","onLaunchPreview","hasPreviewsRunning","onHotReloadPreview","allowNetworkPreview","onLaunchDebugPreview","onLaunchNetworkPreview","onOpenStartPage","onCreateProject","onOpenProject","onSaveProject","onSaveProjectAs","onCloseProject","onExportGame","onOpenCommandPalette","useCommandWithOptions","generateOptions","enumerateExternalLayouts","onOpenExternalLayout","onOpenEventsFunctionsExtension","ScopedCommandManager","centralCommandManager","setActive","registerCommand","command","_commands","_centralManager","deregisterCommand","registerAllCommandsToCentralManager","deregisterAllCommandsFromCentralManager","getAllNamedCommands","cmd","getNamedCommand","CommandsContextScopedProvider","centralManager","CommandsContext","scopedManager","useRefInit","Provider","usePreviewDebuggerServerWatcher","previewDebuggerServer","debuggerIds","setDebuggerIds","hotReloadLogs","setHotReloadLogs","unregisterCallbacks","registerCallbacks","onErrorReceived","onConnectionClosed","onConnectionOpened","onServerStateChanged","onHandleParsedMessage","parsedMessage","payload","previewDebuggerIds","clearHotReloadLogs","requirableModules","renderers","unknownObjectType","RenderedShapePainterInstance","RenderedTextEntryInstance","RenderedSkeletonInstance","PixiResourcesLoader","registerInstanceRenderer","registerModule","requirePath","requireModule","requireBasePath","originalRequiredModulePath","_load","originalNodeModuleLoad","allowedModules","request","parent","isMain","loadedModule","requiredModule","ex","HotReloadLogsDialog","onLaunchNewPreview","logs","shouldDisplayDialogForLogs","ipc","ipcRenderer","richPresenceStartTimestamp","updateDiscordRichPresence","config","details","startTimestamp","largeImageKey","largeImageText","send","useDiscordRichPresence","lastCallTime","setLastCallTime","performance","ExamplesSearchbar","_chips","isBuiltin","chosenExtensionName","onExtensionNameChosen","chips","chosenChip","onChooseChip","chip","chipsList","SearchbarWithChips","tag","randomColor","seed","luminosity","MiniToolbar","toolbarTextStyle","MiniToolbarText","noShrink","GDI18nProvider","catalogs","_loadCatalog","catalog","_loadLanguage","prevProps","setupI18n","getTranslation","getTranslationFunction","webpackAsyncContext","req","__webpack_require__","o","code","ids","t","isRelativePathToDocumentationRoot","startsWith","isDocumentationAbsoluteUrl","BackgroundText","textShadow","emptyMessage","shadowColor","tooltipText","CorsAwareImage","commandManager","getBuildArtifactUrl","build","getBuildFileUploadOptions","makeTimestampedId","getSignedUrl","uploadType","contentType","signedUrl","buildElectron","getAuthorizationHeader","userId","targets","authorizationHeader","axios","post","GDevelopBuildApi","baseUrl","encodeURIComponent","headers","Authorization","response","buildWeb","buildCordovaAndroid","getBuild","buildId","getBuilds","MarkdownText","markdownCustomRenderers","isStandaloneText","allowParagraphs","linkReference","paragraph","escapeHtml","markdownRootClassName","getExperimentalObjects","getExtraInstructionInformation","iconSrc","featuredForGettingStarted","platformer","allTutorialHints","getInstructionTutorialHints","getAllTutorialHints","userHasTouchedScreen","onFirstTouch","removeEventListener","ScreenTypeMeasurer","initialUserProfile","authenticated","profile","subscription","usages","limits","onLogout","onLogin","onCreateAccount","onRefreshUserProfile","UserProfileContext","newlyCreatedResource","resourcePath","lastIndexOf","isPathInProjectFolder","copyAllToProjectFolder","resourcePaths","resourceBasename","fileExtension","fileNameWithoutExtension","newFileNameWithoutExtension","tentativeFileName","tentativePath","existsSync","resourceNewPath","copyFile","normalize","newResource","setSmooth","getScaleMode","_layout","angleInDegrees","removeChild","getGravatarUrl","email","hash","md5","Avatar","Text","PlaceholderLoader","EmptyMessage","usage","format","createdAt","onChangeSubscription","planId","RaisedButton","GameCard","game","isCurrentGame","onOpenDetails","onOpenAnalytics","onOpenMonetization","Card","CardHeader","gameName","subheader","Chip","CardActions","FlatButton","GamesList","setError","games","setGames","openedGame","setOpenedGame","openedGameInitialTab","setOpenedGameInitialTab","loadGames","getGames","uid","PlaceholderError","onRetry","projectUuid","getProjectUuid","thisGame","displayedGames","GameRegistration","hideIfRegistered","hideLoader","onGameRegistered","GameDetailsDialog","onGameUpdated","updatedGame","onGameDeleted","ProfileDialog","_onChangeTab","userProfile","Dialog","ProfileDetails","SubscriptionDetails","CreateProfile","currentProject","UsagesDetails","ExtensionsProperties","allExtensions","propertyList","getExtensionProperties","getAllExtensionProperties","propertyName","PropertiesEditor","getAllProperties","ProjectPropertiesDialog","subscriptionChecker","initialProperties","gameResolutionWidth","getGameResolutionWidth","gameResolutionHeight","getGameResolutionHeight","adaptGameResolutionAtRuntime","getAdaptGameResolutionAtRuntime","author","getAuthor","version","getVersion","packageName","getPackageName","getOrientation","scaleMode","sizeOnStartupMode","getSizeOnStartupMode","showGDevelopSplash","getLoadingScreen","isGDevelopSplashShown","minFPS","getMinimumFPS","maxFPS","getMaximumFPS","isFolderProject","useDeprecatedZeroAsDefaultZOrder","loadPropertiesFromProject","setGameResolutionWidth","setGameResolutionHeight","setAdaptGameResolutionAtRuntime","setAuthor","setVersion","setPackageName","setOrientation","setScaleMode","setSizeOnStartupMode","setShowGDevelopSplash","setMinFPS","setMaxFPS","setIsFolderProject","setUseDeprecatedZeroAsDefaultZOrder","newProperties","setGameResolutionSize","setMinimumFPS","setMaximumFPS","setFolderProject","displayProjectErrorsBox","getErrors","applyPropertiesToProject","autoFocus","Checkbox","checkHasSubscription","validatePackageName","SubscriptionChecker","mode","ExtensionsSearchDialog","onInstallExtension","extensionWasInstalled","setExtensionWasInstalled","eventsFunctionsExtensionOpener","getEventsFunctionsExtensionOpener","importExtension","wasExtensionImported","ExtensionStore","wasExtensionInstalled","InfoBar","SvgIcon","d","ProjectManagerCommands","onOpenProjectProperties","onOpenProjectVariables","onOpenPlatformSpecificAssetsDialog","onOpenResourcesDialog","noIndentNestedList","itemName","itemTextField","noMarginTextFieldInListItemTopOffset","ProjectStructureItem","onRefresh","indentNestedItems","groupBackgroundColor","separatorColor","Item","editingName","TextField","buildExtraMenuTemplate","onEditName","addLabel","canPaste","onDuplicate","canMoveUp","onMoveUp","canMoveDown","onMoveDown","ProjectManager","editedPropertiesLayout","editedVariablesLayout","renamedItemKind","renamedItemName","projectPropertiesDialogOpen","projectVariablesEditorOpen","extensionsSearchDialogOpen","layoutPropertiesDialogOpen","layoutVariablesDialogOpen","_openProjectProperties","_openProjectVariables","_onEditName","_copyLayout","Clipboard","_cutLayout","onDeleteLayout","_pasteLayout","clipboardContent","copiedLayout","SafeExtractor","extractObjectProperty","extractStringProperty","newLayout","insertNewLayout","updateBehaviorsSharedData","_onProjectItemModified","_duplicateLayout","_addLayout","_onOpenLayoutProperties","_onOpenLayoutVariables","_addExternalEvents","insertNewExternalEvents","_addExternalLayout","hasExternalLayoutNamed","insertNewExternalLayout","_addEventsFunctionsExtension","isExtensionNameTaken","insertNewEventsFunctionsExtension","_moveUpLayout","swapLayouts","_moveDownLayout","getLayoutsCount","_copyExternalEvents","_cutExternalEvents","onDeleteExternalEvents","_pasteExternalEvents","copiedExternalEvents","newExternalEvents","_duplicateExternalEvents","_moveUpExternalEvents","swapExternalEvents","_moveDownExternalEvents","getExternalEventsCount","_copyExternalLayout","_cutExternalLayout","onDeleteExternalLayout","_pasteExternalLayout","copiedExternalLayout","newExternalLayout","_duplicateExternalLayout","_moveUpExternalLayout","swapExternalLayouts","_moveDownExternalLayout","getExternalLayoutsCount","_copyEventsFunctionsExtension","_cutEventsFunctionsExtension","onDeleteEventsFunctionsExtension","_duplicateEventsFunctionsExtension","_pasteEventsFunctionsExtension","copiedEventsFunctionsExtension","newEventsFunctionsExtension","onReloadEventsFunctionsExtensions","_moveUpEventsFunctionsExtension","swapEventsFunctionsExtensions","_moveDownEventsFunctionsExtension","getEventsFunctionsExtensionsCount","_onSearchChange","_onRequestSearch","freezeUpdate","hasMainMenu","onExportProject","onOpenPreferences","eventsFunctionsExtensionsError","forceOpen","onOpenResources","onOpenPlatformSpecificAssets","_renderMenu","ListIcon","VariableTree","filterProjectItemsList","onRenameLayout","onAddLayout","onRenameExternalEvents","onAddExternalEvents","onRenameExternalLayout","onAddExternalLayout","onRenameEventsFunctionsExtension","onAddEventsFunctionsExtension","emptyExplanationSecondMessage","ScenePropertiesDialog","onEditVariables","SceneVariablesDialog","Badge","onBackgroundColorChanged","TreeTable","DragHandle","ColorPicker","shouldNeverBeCalled","RaisedButtonWithSplitMenu","ButtonGroup","Button","SortableLayerRow","effectsCount","onEditEffects","onChangeVisibility","InlineCheckbox","badgeContent","LayersListBody","_onLayerModified","layersCount","containerLayersList","mapReverseFor","getEffectsCount","onRenameLayer","onRemoveLayer","removeLayer","BackgroundColorRow","SortableLayersListBody","LayersList","_addLayer","_addLightingLayer","isLightingLayerPresent","hasLightingLayer","ScrollView","FullSizeMeasurer","onEditLayerEffects","onEditLayer","moveLayer","BehaviorPropertiesEditor","getContent","ShapePreview","draggedIndex","_onVertexDown","_onMouseUp","onMoveVertex","offsetX","offsetY","polygonOrigin","zoomFactor","dimensionA","dimensionB","fixedWidth","halfLength","filerule","shape","_renderBox","_renderCircle","_renderEdge","_renderPolygon","PolygonEditor","edges","v1","v2","zProductIsPositive","alignedX","alignedY","onChangeVertexX","onChangeVertexY","_isPolygonConvex","toString","NumericProperty","BitProperty","spacing","Physics2Editor","bitsValue","bits","Array","layersValues","masksValues","ResourceSelector","ImagePreview","newX","newY","splice","_isBitEnabled","_enableBit","components","shortcutBox","DetectShortcutDialog","shortcutString","setShortcutString","isValid","setIsValid","getShortcutMetadataFromEvent","onSet","Typography","commandText","Paper","getShortcutDisplayName","shortcutChip","borderRadius","ShortcutsListRow","ListItemText","commandsList","displayText","ListItemSecondaryAction","isClashing","onEditShortcut","isDefault","onResetShortcut","ShortcutsList","editedShortcut","setEditedShortcut","areaWiseCommands","shortcutStringToCommands","noShortcut","areaName","area","userShortcut","defaultShortcut","defaultShortcuts","sortCommandsIntoAreasAndGetReverseMap","commandPaletteShortcut","onReset","commandAreas","shortcutDisplayName","clashingCommands","hasClash","resetShortcut","PreferencesDialog","themes","getAllThemes","codeEditorTheme","Toggle","onToggle","check","toggled","labelPosition","generateLayoutObjectsOptions","useObjectsListCommands","onEditObject","onEditObjectVariables","useObjectGroupsListCommands","onEditObjectGroup","useLayersListCommands","UseSceneEditorCommands","onOpenSceneProperties","onOpenSceneVariables","GDevelopLogo","ScrollBackground","palette","canvasColor","innerContainer","centerContainer","logoPaper","StartPage","canOpen","onOpenGamesShowcase","onOpenHelpFinder","onOpenLanguageDialog","renderStartPageContainer","directMatches","fuzzyMatches","optionText","fuzzyOrEmptyFilter","listItemContainer","AutocompletePicker","setOpen","shortcutMap","useShortcutMap","getItemText","areaText","Autocomplete","items","autoHighlight","ListItemIcon","getItemIcon","getItemHint","scrollPaper","CommandPalette","forwardRef","setMode","selectedCommand","selectCommand","handleCommandChoose","handleOptionChoose","openPalette","launchCommand","useImperativeHandle","hideBackdrop","ghost","InstructionSelector","enumerateAllInstructions","InstructionOrExpressionSelector","parametersEditor","InstructionEditor","chooseType","_instructionParametersEditor","InstructionParametersEditor","InstructionEditorDialog","previewContainer","background","ResourcePreview","getKind","GenericIconPreview","ResourcePropertiesEditor","_chooseResourcePath","resourceSchema","_renderPreview","_renderResourcesProperties","PreviewButtons","onPreviewWithoutHotReload","onNetworkPreview","onOpenDebugger","showNetworkPreviewButton","isPreviewEnabled","previewState","setPreviewOverride","previewIcon","ToolbarIcon","isPreviewOverriden","previewExternalLayoutName","overridenPreviewLayoutName","overridenPreviewExternalLayoutName","previewLayoutName","MainFrameToolbar","editorToolbar","firstChild","showProjectIcons","toggleProjectManager","hasProject","exportProject","requestUpdate","simulateUpdateDownloaded","simulateUpdateAvailable","ToolbarSeparator","fixSomeHtmlCharacters","apiKey","algoliaOptions","hitsPerPage","DocSearchArea","client","algoliasearch","_handleSearchTextChange","_launchSearchRequest","debounce","search","indexName","query","hits","_renderResult","result","hierarchy","lvl0","lvl1","lvl2","lvl3","lvl4","lvl5","lvl6","objectID","visibility","HelpFinder","_sendHelpSearch","sendHelpSearch","sendHelpFinderOpened","SubscriptionPendingDialog","hasPlan","delay","savedCallback","setInterval","clearInterval","useInterval","CircularProgress","descriptionText","card","bulletIcon","bulletText","SubscriptionDialog","isLoading","subscriptionPendingDialogOpen","choosePlan","plan","sendChoosePlanClicked","stripeSubscriptionId","changeUserSubscription","handleUpdatedSubscriptionSuccess","handleUpdatedSubscriptionFailure","getRedirectToCheckoutUrl","_isLoading","sendSubscriptionDialogShown","monthlyPriceInEuros","getSubscriptionPlans","_renderPrice","smallDescription","CardContent","descriptionBullets","descriptionBullet","isLocalAppOnly","extraDescription","LeftLoader","PlaceholderMessage","ChangelogDialog","Changelog","onUpdated","ChangelogDialogContainer","defaultOpen","ToolbarCommands","onAddStandardEvent","canAddSubEvent","onAddSubEvent","onAddCommentEvent","allEventsMetadata","canUndo","undo","canRedo","redo","onToggleSearchPanel","getEventsFunctionName","EventsFunctionsList","renamedEventsFunction","_deleteEventsFunction","askForConfirmation","removeEventsFunction","_onEventsFunctionModified","destinationEventsFunction","moveEventsFunction","getEventsFunctionPosition","_copyEventsFunction","_cutEventsFunction","_pasteEventsFunction","copiedEventsFunction","newEventsFunction","insertNewEventsFunction","_renderEventsFunctionMenuTemplate","_addNewEventsFunction","eventsFunctionName","setFunctionType","filterEventFunctionsList","getEventsFunctionAt","enumerateEventsFunctions","SortableVirtualizedItemList","onAddNewItem","addNewItemLabel","getEventsBasedBehaviorName","EventsBasedBehaviorsList","renamedEventsBasedBehavior","_deleteEventsBasedBehavior","_onEventsBasedBehaviorModified","destinationEventsBasedBehavior","getPosition","_copyEventsBasedBehavior","_cutEventsBasedBehavior","_pasteEventsBasedBehavior","copiedEventsBasedBehavior","newEventsBasedBehavior","_renderEventsBasedBehaviorMenuTemplate","_addNewEventsBasedBehavior","filterEventsBasedBehaviorsList","downloadSvgAsBase64","responseType","btoa","Uint8Array","reduce","byte","String","fromCharCode","openGitHubIssue","HelpPathTextField","helpPath","onChangeHelpPath","isAbsoluteUrl","isRelativePath","OptionsEditorDialog","exportDialogOpen","setExportDialogOpen","resourceStoreOpen","setResourceStoreOpen","setIsLoading","isMounted","useIsMounted","eventsFunctionsExtensionWriter","getEventsFunctionsExtensionWriter","renderButton","renderTextField","getPreviewIconUrl","setPreviewIconUrl","getShortDescription","setShortDescription","tags","setHelpPath","chooseEventsFunctionExtensionFile","pathOrUrl","writeEventsFunctionsExtension","exportExtension","ResourceStore","base64Svg","setIconUrl","timeField","timeIcon","AnimationPreview","currentFrameIndex","currentFrameElapsedTime","paused","timeBetweenFrames","nextUpdate","replay","play","pause","_updateAnimation","spritesContainer","newFrameIndex","newFrameElapsedTime","requestAnimationFrame","cancelAnimationFrame","onChangeTimeBetweenFrames","time","precision","spacer","formatTime","Number","DirectionTools","timeError","previewOpen","saveTimeBetweenFrames","newTime","newTimeIsValid","isNaN","setLooping","openPreview","imageResourceExternalEditors","displayName","openObjectsList","openObjectGroupsList","openPropertiesPanel","toggleInstancesList","toggleLayersList","canDeleteSelection","toggleWindowMask","toggleGrid","setupGrid","openSetupGrid","instancesSelection","getSelectedInstances","isWindowMaskShown","isGridShown","zoomIn","zoomOut","centerView","setZoomFactor","EditVariableRow","hasClipboard","Copy","Paste","UnknownEvent","unknownEvent","WhileEvent","registerEvent","renderFunction","DefaultTheme","getEnumeratedEffectMetadata","allEffectDescriptions","effectType","effectMetadata","EffectsList","preferences","allEffectMetadata","getExtensionEffectTypes","getEffectMetadata","parametersSchema","parameterName","propertyLabel","propertyDescription","getExtraDescription","effect","getDoubleParameter","setDoubleParameter","getBooleanParameter","setBooleanParameter","getStringParameter","setStringParameter","enumerateEffectsMetadata","addEffect","hasEffectNamed","insertNewEffect","chooseEffectType","newEffectType","setEffectType","clearParameters","setEffectDefaultParameters","getEffectAt","getEffectType","removeEffect","renderExtraDescriptionText","setupAutocompletions","monaco","importAllJsFilesFromFolder","folderPath","readdir","filenames","endsWith","readFile","fileError","languages","typescript","javascriptDefaults","addExtraLib","runtimePath","runtimeTypesPath","runtimeLibsPath","runtimePixiRenderersPath","runtimeCocosRenderersPath","runtimeHowlerSoundManagerPath","runtimeCocosSoundManagerPath","runtimeFontfaceobserverFontManagerPath","extensionsPath","eventToolsPath","folderNames","folderName","monacoEditorOptions","scrollBeyondLastLine","minimap","monacoCompletionsInitialized","monacoThemesInitialized","CodeEditor","MonacoEditor","setupEditorThemes","themeData","defineTheme","setupEditorCompletions","setCompilerOptions","ScriptTarget","ES6","allowNonTsExtensions","allowJs","checkJs","_handleContextMenu","loadMonacoEditor","MonacoEnvironment","getWorkerUrl","workerId","default","handleLoadError","theme","editorWillMount","editorDidMount","ExpressionParametersEditor","parameterValues","isCodeOnly","onChangeParameter","getNonCodeOnlyParametersCount","minHeightContainer","ExpressionParametersEditorDialog","onDone","editedIndex","oldValue","electronClipboard","internalClipboard","mangleClipboardKind","anything","extractObject","extractArray","isArray","readText","columnContainer","fieldContainer","subPropertiesEditorContainer","subHeader","getFieldValue","getFieldLabel","_onInstancesModified","onInstancesModified","_getFieldDescription","descriptions","_renderInputField","hexToRGBColor","hex","_renderSelectField","_renderButton","_renderResourceField","fields","useFilters","chosenCategory","setChosenCategory","chosenFilters","setChosenFilters","newChosenCategory","newChosenFilters","allChildrenTags","addFilter","removeFilter","FiltersChooser","filtersState","allFilters","selectedCategoryTags","defaultTags","mangleName","getFreeFunctionCodeNamespace","codeNamespacePrefix","loadProjectEventsFunctionsExtensions","eventsFunctionCodeWriter","loadProjectEventsFunctionsExtension","getEventsFunctionsExtensionAt","skipCodeGeneration","generateEventsFunctionExtension","addNewExtension","PlatformExtension","declareExtension","codeGenerationContext","extensionIncludeFiles","getIncludeFileFor","getExtensionIncludeFiles","declareBehaviorMetadata","codeNamespace","getBehaviorFunctionCodeNamespace","includeFile","setIncludeFile","addIncludeFile","behaviorMethodMangledNames","MapStringString","declareBehaviorPropertiesInstructionAndExpressions","eventsFunctionMangledName","instructionOrExpression","declareBehaviorInstructionOrExpressionMetadata","declareEventsFunctionParameters","getCodeExtraInformation","setFunctionName","includeFiles","SetString","behaviorCodeGenerator","BehaviorCodeGenerator","generateRuntimeBehaviorCompleteCode","writeBehaviorCode","generateBehavior","generateFreeFunction","declareInstructionOrExpressionMetadata","addCodeOnlyParameter","codeExtraInformation","EventsFunctionsExtensionCodeGenerator","generateFreeEventsFunctionCompleteCode","writeFunctionCode","unloadProjectEventsFunctionsExtensions","removeExtension","unloadProjectEventsFunctionsExtension","isAnEventFunctionMetadata","getFunctionNameFromType","parts","getFreeEventsFunctionType","isEventsBasedBehaviorMethod","isDialogOpen","body","activeEl","activeElement","mainFrame","querySelector","isInMainframe","contains","reservedShortcuts","isUserTyping","getKeyTypeFromCode","getShortcutStringFromEvent","isValidKey","keyType","ctrlOrCmdPressed","altPressed","isValidShortcutEvent","isReserved","useKeyboardShortcuts","onRunCommand","shortcutData","handledByElectron","keyCode","getKeyDisplayName","getElectronAccelerator","getElectronKeyString","RaisedButtonWithMenu","_addFrom","_onChangeResourceName","_autoComplete","_onResetResourceName","notExistingError","_editWith","resourceExternalEditor","initialResourceMetadata","initialResourceMetadataRaw","externalEditorOptions","newResourceData","resourceSourceItems","_getResourceSourceItems","resourceItems","autoCompleteData","externalEditors","noFloatingLabelText","SemiControlledAutoComplete","autoComplete","picker","ColorField","rgbColorToHexNumber","hexNumber","onUpdateProperty","propertyNames","charAt","progress","defaultState","reloadProjectEventsFunctionsExtensions","ensureLoadFinished","getIncludeFileHashs","action","DropTarget","makeDropTarget","InstructionsList","setCanPaste","addNewInstruction","pasteInstructions","instructions","instructionContext","isInstructionSelected","instructionsListContext","addButtonDefaultLabel","onPointerEnter","hasClipboardConditions","hasClipboardActions","onPointerLeave","removeTag","selectedTag","noTagLabel","getAllTags","onEditTags","editTagsLabel","allTags","footerMenuItems","newTags","from","getTagsFromString","tagsString","getStringFromTags","freeActionsToAddToObject","BuiltinObject","freeConditionsToAddToObject","freeActionsToAddToBehavior","freeConditionsToAddToBehavior","Physics2","freeInstructionsToRemove","deduplicateInstructionsList","createFound","enumerateInstruction","filterInstructionsToRemove","typesToRemove","types","enumerateExtraBehaviorInstructions","extensionsExtraInstructions","objectExtraInstructions","instructionMetadataMap","getAllConditions","getAllActions","enumerateExtraObjectInstructions","instrMetadata","displayedName","groupName","getGroup","fullGroupName","isPrivate","enumerateExtensionInstructions","instructionsTypes","allInstructions","asPlatform","allObjectsTypes","allBehaviorsTypes","getBehaviorsTypes","extensionFreeInstructions","getAllConditionsForObject","getAllActionsForObject","getBehaviorMetadata","getAllConditionsForBehavior","getAllActionsForBehavior","enumerateObjectAndBehaviorsInstructions","objectBehaviorNames","objectBehaviorTypes","hasObjectType","hasBaseObjectType","behaviorTypes","noGroupInstructions","instructionsWithGroups","orderFirstInstructionsWithoutGroup","enumerateFreeInstructions","allFreeInstructions","filterInstructionsList","lowercaseSearch","exactMatch","unshift","favorExactMatch","enumeratedInstructionOrExpressionMetadata","getObjectParameterIndex","firstParameterType","secondParameterType","getObjectGroupListItemKey","getObjectListItemKey","getObjectOrObjectGroupListItemValue","objectOrObjectGroupName","getInstructionListItemKey","getInstructionListItemValue","getSubheaderListItemKey","popover","minWidth","InlinePopover","startSentinel","endSentinel","onClickAway","MouseEvent","toolbarGroupStyle","ToolbarGroup","borderLeftStyle","borderLeftWidth","GENERAL","IDE","PROJECT","SCENE","EVENTS","QUIT_APP","OPEN_PROJECT_MANAGER","OPEN_PROFILE","OPEN_GAMES_DASHBOARD","LAUNCH_NEW_PREVIEW","LAUNCH_DEBUG_PREVIEW","LAUNCH_NETWORK_PREVIEW","HOT_RELOAD_PREVIEW","OPEN_START_PAGE","CREATE_NEW_PROJECT","OPEN_PROJECT","SAVE_PROJECT","SAVE_PROJECT_AS","CLOSE_PROJECT","EXPORT_GAME","OPEN_RECENT_PROJECT","OPEN_COMMAND_PALETTE","OPEN_PROJECT_PROPERTIES","OPEN_PROJECT_VARIABLES","OPEN_PLATFORM_SPECIFIC_ASSETS_DIALOG","OPEN_PROJECT_RESOURCES","OPEN_LAYOUT","OPEN_EXTERNAL_EVENTS","OPEN_EXTERNAL_LAYOUT","OPEN_EXTENSION","OPEN_SCENE_PROPERTIES","OPEN_SCENE_VARIABLES","OPEN_OBJECTS_PANEL","OPEN_OBJECT_GROUPS_PANEL","OPEN_PROPERTIES_PANEL","TOGGLE_INSTANCES_PANEL","TOGGLE_LAYERS_PANEL","SCENE_EDITOR_UNDO","SCENE_EDITOR_REDO","DELETE_INSTANCES","TOGGLE_WINDOW_MASK","TOGGLE_GRID","OPEN_SETUP_GRID","EDIT_LAYER_EFFECTS","EDIT_LAYER","EDIT_OBJECT","EDIT_OBJECT_VARIABLES","EDIT_OBJECT_GROUP","ADD_STANDARD_EVENT","ADD_SUBEVENT","ADD_COMMENT_EVENT","CHOOSE_AND_ADD_EVENT","EVENTS_EDITOR_UNDO","EVENTS_EDITOR_REDO","DELETE_SELECTION","SEARCH_EVENTS","OPEN_EXTENSION_SETTINGS","currentTouchCallbackEvent","capture","onTouchStart","touches","getClientXY","onTouchMove","touch","onTouchEnd","serializedElementRef","serializeTo","unserializeFrom","swatch","boxShadow","_swatch","displayColorPicker","handleClick","handleClose","displayedColor","getLayoutAt","getExternalEventsAt","getExternalLayoutAt","allExpressions","tree","expressionInfo","pathInTree","compact","groupInfo","existingGroupInfo","findInTree","instructionTreeNode","instructionOrGroup","searchResult","oneColumnContainer","twoColumnsContainer","ConditionsActionsColumns","imagePreviewContainer","touchAction","pointerEvents","box","errored","_handleImageError","_handleImageLoaded","imgElement","naturalWidth","clientWidth","naturalHeight","clientHeight","_zoomBy","imageZoomFactorDelta","_zoomTo","imageSource","containerWidth","imageLoaded","imagePositionLeft","imageStyle","overlayStyle","imagePositionTop","dir","onWheel","onError","onLoad","hasValidAnimation","hasValidDirection","copyPoint","originalPoint","destinationPoint","destinationSprite","isSamePoint","point1","point2","sprite1","sprite2","sprite1Point","getPoint","originalPolygon","haveSameCollisionMasks","sprite1CollisionMask","sprite2CollisionMask","sprite1Polygon","polygon1","polygon2","polygon1Vertices","polygon2Vertices","isSamePolygon","spritePtrs","spritesToDelete","removeSprite","spritesToDuplicate","spriteToDuplicate","newSprite","ElectronMenuImplementation","template","menuTemplate","Menu","browserWindow","menu","buildFromTemplate","popup","async","SubMenuItem","menuOpen","setMenuOpen","anchorElement","setAnchorElement","MenuItem","TransitionComponent","Fade","submenu","MaterialUIMenuImplementation","_onClose","Divider","MaterialUIContextMenu","anchorX","anchorY","menuImplementation","anchorPosition","anchorReference","getMenuProps","ElectronContextMenu","showMenu","ElectronContextMenuWrapper","electronContextMenu","closeableTabSizeOverrides","closeButtonWidth","getRootClassNames","mosaicRootClassName","getMuiOverrides","tabTextColor","tabBackgroundColor","inputBorderBottomColor","appBarBackgroundColor","iconColor","MuiTypography","h6","MuiInput","underline","MuiAppBar","colorPrimary","MuiIconButton","MuiListItemIcon","MuiListItem","secondaryAction","gutters","MuiListItemSecondaryAction","MuiTabs","MuiTab","textColorPrimary","MuiButtonBase","MuiTableCell","sizeSmall","MuiDialogTitle","MuiDialogContent","MuiFormControl","marginDense","MuiCheckbox","MuiButton","getThemeMode","contrastText","light","lighten","main","dark","darken","createGdevelopTheme","rootClassNameIdentifier","paletteType","imageThumbnail","selectedBorderColor","groupTextColor","deprecatedGroupTextColor","selectedRightIconColor","errorTextColor","warningTextColor","selectedErrorBackgroundColor","selectedWarningBackgroundColor","muiThemeOptions","typography","common","paper","hint","overrides","sealUnsavedChanges","UnsavedChangesContextProvider","handle","disabledHandle","handleColor","SortableHandle","listAllShowcasedGames","GDevelopGameApi","gamesShowcaseUrl","filtersUrl","showcasedGames","filters","registerGame","gameId","authorName","updateGame","patch","getGame","deleteGame","transformTagsAsStringToTagsAsArray","dataWithTags","isCompatibleWithExtension","ideVersion","gdevelopVersion","semverSatisfies","includePrerelease","resolveExtensionUrl","trimmedUrl","GDevelopExtensionApi","getExtensionsRegistry","extensionShortHeaders","getExtensionHeader","headerUrl","getExtension","extensionHeader","filterSearchItems","searchItems","startTime","filteredSearchItems","isTagContainerOnly","some","parentNodes","parentNode","totalTime","useSearchItem","searchItemsById","getItemDescription","searchApiRef","setSearchResults","suffledSearchItems","shuffle","terminate","newSearchApi","SearchApi","allIds","assetShortHeader","indexDocument","searchApi","discardSearch","partialSearchResultIds","partialSearchResults","listAllAssets","GDevelopAssetApi","assetShortHeadersUrl","assetShortHeaders","getAsset","assetUrl","listAllResources","resourcesUrl","listAllAuthors","authorsUrl","listAllLicenses","licensesUrl","CommandManager","CommandsContextProvider","selectedInstructions","selectedEvents","selectedInstructionsLists","getSelectedEvents","eventContext","getSelectedEventContexts","getSelectedInstructions","getSelectedInstructionsContexts","getSelectedInstructionsListsContexts","hasInstructionSelected","hasSelectedAtLeastOneCondition","hasInstructionsListSelected","hasSomethingSelected","clearSelection","selectEvent","multiSelection","existingSelection","selectInstruction","textFieldContainer","textFieldAndHightlightContainer","expressionSelectorPopoverContentSmall","expressionSelectorPopoverContent","backgroundHighlightingWithFloatingLabel","backgroundHighlightingInline","backgroundHighlightingInlineWithFloatingLabel","extractErrors","expressionNode","expressionValidator","ExpressionValidator","visit","errors","errorHighlights","getStartPosition","getEndPosition","getMessage","otherErrorsCount","hasMultipleErrors","_fieldElement","_inputElement","popoverOpen","parametersDialogOpen","selectedExpressionInfo","validatedValue","_enqueueValidation","_openExpressionPopover","_handleFocus","_handleRequestClose","_handleChange","_handleBlur","cancel","_handleExpressionChosen","insertExpression","cursorPosition","functionCall","formatExpressionCall","setSelectionRange","_insertAutocompletion","newCaretLocation","forceSetValue","forceSetSelection","parser","ExpressionParser2","parseExpression","completionDescriptions","ExpressionCompletionFinder","getCompletionDescriptionsFor","newAutocompletions","Element","longDescription","popoverStyle","backgroundHighlightingStyle","screenSize","_scrollView","_selectedItem","initialInstructionTypePath","displayedInstructionsList","hasResults","onSubmitSearch","renderInstructionOrExpressionListItem","instructionOrExpressionMetadata","selectedValue","renderInstructionOrExpressionTree","initiallyOpenedPath","selectedItemRef","getNamespaceSeparator","DismissableTutorialMessage","setExtensionInformation","setExtensionHelpPath","getIconUrl","getExtensionIconUrl","generatedBehavior","BehaviorJsImplementation","enumeratedProperties","propertyType","setStringValue","setDoubleValue","setBoolValue","behaviorProperties","MapStringPropertyDescriptor","newProperty","getOrCreate","hasChild","getChild","getStringValue","getDoubleValue","getBoolValue","initializeContent","BehaviorsSharedData","EventsFunctionsExtension","getFunctionType","addExpression","StringExpression","addStrExpression","addCondition","getSentence","addAction","addScopedCondition","addScopedAction","addObjectAndBehaviorParameters","addParameter","setExtraInfo","setPrivate","getterName","getBehaviorPropertyGetterName","setterName","getBehaviorPropertySetterName","EventsBasedBehavior","getPropertyExpressionName","getPropertyConditionName","useStandardRelationalOperatorParameters","getPropertyActionName","useStandardOperatorParameters","setManipulatedType","setGetter","getParameters","parameter","isOptional","setParameterLongDescription","addNode","currentNode","newNode","replaceNode","oldNode","defaultToolbarControls","renderMosaicWindowPreview","MosaicWindow","renderPreview","EditorMosaic","mosaicNode","limitToOneSecondaryEditor","openedEditorNames","getLeaves","secondaryEditorName","_persistNodes","_onChange","renderTile","InstancesSelection","multiselect","layersVisibility","isInstanceSelected","unselectInstance","selectInstance","editorConfigurations","registerEditorConfiguration","createNewObject","getDefaultObjectJsImplementationPropertiesEditor","asObjectJsImplementation","release","SpriteObject","TiledSpriteObject","PanelSpriteObject","TextObject","ShapePainterEditor","ShapePainterObject","TextEntryObject","asTextEntryObject","SkeletonObject","getUserUsages","GDevelopUsageApi","getUserLimits","getUserSubscription","newSubscriptionDetails","ItemRow","errorStatus","hideMenuButton","scaleUpItemIconWhenSelected","connectIconDragSource","itemStyle","borderTop","DropIndicator","getItemThumbnail","isItemBold","onEditItem","nameBeingEdited","canMoveSelectionToItem","rowRenderer","canDragOnlyIcon","dropTarget","_renderItemRow","ResourceThumbnail","ImageThumbnail","selectorContainer","resourceThumbnail","ResourceSelectorWithThumbnail","defaultStyles","AddListItem","SearchListItem","TreeTableRow","TreeTableCell","HotReloadPreviewButton","launchProjectDataOnlyPreview","iconText","SubscriptionCheckDialog","_closeDialog","sendSubscriptionCheckDismiss","sendSubscriptionCheckDialogShown","_dialog","dialog","unavailableReason","setUnavailableReason","setGame","registrationInProgress","setRegistrationInProgress","detailsOpened","setDetailsOpened","detailsInitialTab","setDetailsInitialTab","loadGame","onRegisterGame","errorHandler","componentStack","sendErrorMessage","ErrorFallbackComponent","stack","getIDEVersionWithHash","getArch","getPlatformName","getSystemVersion","getUserAgent","ErrorBoundary","FallbackComponent","getPointer","moduleName","moduleLoaded","EventsSheet","_containerDiv","_keyboardShortcuts","inlineEditing","editedInstruction","analyzedEventsContextResult","serializedEventsToExtract","copySelection","cutSelection","pasteEventsOrInstructions","_toggleSearchPanel","_closeSearchPanel","history","getHistoryInitialState","historyMaxSize","editedParameter","inlineEditingAnchorEl","inlineInstructionEditorAnchorEl","inlineEditingChangesMade","showSearchPanel","textEditedEvent","_addStandardEvent","addNewEvent","_addCommentEvent","_eventSearcher","reset","_searchPanel","addSubEvents","insertNewEvent","_saveChangesToHistory","_eventsTree","_selectionCanHaveSubEvents","_selectionCanToggleDisabled","isExecutable","context","hasEventsSelected","insertTopOfSelection","insertions","selectedEvent","newEvents","scrollToEvent","openEventTextDialog","editableEvents","closeEventTextDialog","openAddInstructionContextMenu","openInstructionEditor","moveSelectionToInstruction","destinationContext","moveSelectionToInstructionsList","destinationIndex","isTryingToDragAnInstructionIntoItsOwnNestedInstructions","shouldCloneInstances","deleteEvents","multiSelect","shouldMultiSelect","openEventContextMenu","eventContextMenu","openInstructionContextMenu","instructionContextMenu","openParameterEditor","parameterContext","closeParameterEditor","toggleDisabled","setDisabled","deleteInstructions","eventsRemover","EventsRemover","addEventToRemove","addInstructionToRemove","launch","_ensureFocused","copySelectionToClipboard","pasteEvents","pasteEventsFromClipboardInSelection","pasteInstructionsFromClipboardInSelection","pasteInstructionsInInstructionsList","pasteInstructionsFromClipboardInInstructionsList","_invertSelectedConditions","setInverted","saveToHistory","newHistory","_openEventsContextAnalyzer","eventsContextAnalyzer","EventsContextAnalyzer","EventsList","insertEvent","getEventsContext","_closeEventsContextAnalyzer","extractEventsToFunction","moveEventsIntoNewGroup","_replaceSelectionByGroupOfEvents","_replaceSelectionByEventsFunction","contexts","createNewInstructionForEventsFunction","insertEvents","_ensureEventUnfolded","unfoldForEvent","_replaceInEvents","doReplaceInEvents","inputs","_searchInEvents","doSearchInEvents","_onEventMoved","_renderInstructionEditorDialog","newInstructionEditorDialog","closeInstructionEditor","containerDivElement","prevState","saveChanges","eventSearcher","searchPanel","setParameter","hasClipboardEvents","DefaultField","mouse","ObjectField","relationalOperator","operator","yesorno","trueorfalse","string","stringWithSelector","SceneVariableField","globalvar","objectvar","musicfile","soundfile","videoResource","jsonResource","ColorExpressionField","police","joyaxis","forceMultiplier","sceneName","inlineRenderers","renderInlineDefaultField","renderInlineSceneVariable","renderInlineObjectWithThumbnail","userFriendlyTypeName","rawType","fieldType","_allowedObjectType","allowedObjectType","errorTextIfInvalid","iconPath","buttonRef","HTMLButtonElement","getElementsByTagName","filterOutCodeOnlyParameters","array","firstParameterIndex","filterVisibleParameters","lastRequiredIndex","lastProvidedIndex","arrayWithDefaults","getDefaultValue","lastParameterIndex","parameterTypes","functionArgs","objectParameterIndex","ParameterMetadataTools","getObjectParameterIndexFor","getLastObjectParameterObjectType","findInstruction","getChosenObjectState","discardInstructionTypeIfNotInObjectInstructions","enumeratedInstructionMetadata","newState","chipContainer","toNodeId","nodes","TagsTreeItems","tagsTreeNodes","newParentNodes","nodeId","onLabelClick","collapseIcon","MemoizedTagsTree","allItemsLabel","defaultExpanded","tagsTree","onNodeSelect","CategoryChooser","AssetStoreContext","authors","licenses","fetchAssetsAndFilters","getAssetShortHeaderSearchTerms","shortDescription","AssetStoreStateProvider","assetShortHeadersById","setAssetShortHeadersById","setFilters","setAuthors","setLicenses","timeoutId","assetStoreState","ResourceFetcherContext","ResourceFetcherDialog","fetchedResources","onAbandon","hasErrors","erroredResources","useResourceFetcher","resourceFetcher","setProgress","isFetching","setIsFetching","setFetchedResources","setOnRetry","setOnAbandon","ensureResourcesAreFetched","getResourcesToFetch","someResourcesWereFetched","fetchResources","onProgress","total","renderResourceFetcherDialog","ViewPosition","initialViewX","initialViewY","viewX","viewY","viewRotation","resize","random","enumerateVariables","enumerateVariableAndChildrenNames","names","getAllChildrenNames","childName","getNameAt","VariableField","variableName","GD_STARTUP_TIMES","drawerContent","findStorageProviderFor","fileMetadataAndStorageProviderName","storageProviderName","initialPreviewState","MainFrame","createDialogOpen","currentFileMetadata","editorTabs","snackMessage","snackMessageOpen","openFromStorageProviderDialogOpen","saveToStorageProviderDialogOpen","gdjsDevelopmentWatcherEnabled","_resourceSourceDialogs","_previewLauncher","isLoadingProject","setIsLoadingProject","isSavingProject","setIsSavingProject","projectManagerOpen","openProjectManager","introDialogOpen","openIntroDialog","languageDialogOpen","openLanguageDialog","helpFinderDialogOpen","openHelpFinderDialog","platformSpecificAssetsDialogOpen","openPlatformSpecificAssetsDialog","aboutDialogOpen","openAboutDialog","profileDialogInitialTab","setProfileDialogInitialTab","profileDialogOpen","openProfileDialog","preferencesDialogOpen","openPreferencesDialog","subscriptionDialogOpen","openSubscriptionDialog","openExportDialog","previewLoading","setPreviewLoading","setPreviewState","commandPaletteRef","eventsFunctionsExtensionsContext","getPreviewDebuggerServer","createDialogInitialTab","setCreateDialogInitialTab","renderExportDialog","renderCreateDialog","renderPreviewLauncher","getStorageProviderOperations","getStorageProvider","integratedEditor","initialFileMetadataToOpen","introDialog","renderGDJSDevelopmentWatcher","renderMainMenu","openStartPage","_loadExtensions","getStartupTimesSummary","openInitialFileMetadata","openFromFileMetadataWithStorageProvider","openProfileDialogWithTab","_showSnackMessage","_closeSnackMessage","openFromFileMetadata","openSceneOrProjectManager","newEditorTabs","setEditorToolbar","extensionsLoader","loadAllExtensions","getNotNullTranslationFunction","loadingResults","successLoadingResults","loadingResult","failLoadingResults","dangerous","dangerousLoadingResults","closeProject","loadFromProject","burstAllUrlsCache","setProjectFile","loadFromSerializedProject","serializedProject","timePromise","newProject","ProjectHelper","createNewGDJSProject","hasAutoSave","onGetAutoSave","getOpenErrorMessage","canOpenAutosave","errorMessage","closeApp","quit","setPreviewedLayout","autosaveProjectIfNeeded","onAutoSaveProject","launchPreview","networkPreview","hotReload","projectDataOnlyExport","previewLauncher","externalLayoutName","launchNewPreview","launchHotReloadPreview","launchNetworkPreview","openLayout","openEventsEditor","openSceneEditor","sceneEditorOptions","renderSceneEditorContainer","eventsEditorOptions","renderEventsEditorContainer","tabsWithSceneEditor","tabsWithSceneAndEventsEditors","openExternalEvents","renderExternalEventsEditorContainer","openExternalLayout","renderExternalLayoutEditorContainer","openEventsFunctionsExtension","renderEventsFunctionsExtensionEditorContainer","openDebugger","renderDebuggerEditorContainer","launchDebuggerAndPreview","hasEventsFunctionsExtensionNamed","foundTab","insertEventsFunction","openCreateDialog","openOpenFromStorageProviderDialog","chooseProjectWithStorageProviderPicker","onOpenWithPicker","chooseProject","openSaveToStorageProviderDialog","saveProjectAsWithStorageProvider","wasSaved","saveProjectAs","saveProject","askToCloseProject","_onEditorTabActive","forceUpdateEditor","_onCloseAllEditorTabs","sourceName","resourceSourceDialog","chooseResources","setUpdateStatus","notificationTitle","getUpdateNotificationTitle","notificationBody","getUpdateNotificationBody","Notification","onclick","canDoNetworkPreview","showLoader","onChooseProject","onOpenRecentFile","onOpenAbout","onOpenLanguage","PaperProps","ModalProps","keepMounted","eventsFunctionsExtensionName","removeLayout","removeExternalLayout","removeEventsFunctionsExtension","removeExternalEvents","renameEventsFunctionsExtension","renderResourcesEditorContainer","openResources","releaseName","isCurrentTab","_onCloseEditorTab","_onCloseOtherEditorTabs","onLoadEventsFunctionsExtensions","autoHideDuration","ContentProps","resetProjectUuid","onExport","resourceSource","languageChanged","reloadBuiltinExtensions","SortableVariableRow","SortableAddVariableRow","VariablesListBody","SortableVariablesListBody","VariablesList","selectedVariables","_selectVariable","variableAndName","serializedVariable","paste","variablesContent","variableContent","newVariable","Variable","otherVariableAndName","removeRecursively","_updateOrDefineVariable","_getVariableOrigin","parentVariable","_renderVariableAndChildrenRows","parentOrigin","renameChild","rename","_renderVariableChildren","emptyExplanation","messageStyle","containerInheritedVariablesTree","containerVariablesTree","editRow","allVariables","toolColumnHeader","addError","extraExplanation","ExtensionStoreContext","fetchExtensionsAndFilters","getExtensionSearchTerms","ExtensionStoreStateProvider","extensionShortHeadersByName","setExtensionShortHeadersByName","extensionRegistry","sortedTags","tag1","tag2","localeCompare","extensionStoreState","ListSearchResults","getSearchItemUniqueId","renderSearchItem","cachedHeightsForWidth","cachedHeights","onItemHeightComputed","searchItem","getRowHeight","renderRow","rowIndex","recomputeGridSize","columnCount","columnWidth","cellRenderer","serializedExtension","addSerializedExtensionsToProject","readEventsFunctionExtensionFile","toNewGdMapStringString","sanitizeObjectName","trimmedObjectName","prefixedObjectName","m","installResource","serializedResource","resourceNewNames","originalResourceName","resourceFileUrl","resourceOriginName","resourceOriginIdentifier","existingResourceNameFromSameOrigin","getResourceNameWithOrigin","existingResourceNameWithSameFile","getResourceNameWithFile","setOrigin","addAssetToProject","asset","objectNewNames","createdObjects","objectAssets","objectAsset","originalName","insertNewObject","renamedResourcesMap","resourcesRenamer","ResourcesRenamer","exposeResources","customization","renameObjectInEvents","getRequiredBehaviorsFromAsset","extensionVersion","filterMissingExtensions","requiredExtensions","loadedExtensionNames","getRequiredExtensionsForEventsFromAsset","filterMissingBehaviors","requiredBehaviors","downloadExtensions","extensionNames","extensionsRegistry","uniq","serializedExtensions","installAsset","missingBehaviors","missingExtensions","output","setWindowDefaultTitle","windowTitle","setStopSoundsOnStartup","shouldStopSoundsOnStartup","getWindowDefaultTitle","stopSoundsOnStartup","propertiesEditors","getAllBehaviorSharedDataNames","sharedDataContent","getBehaviorSharedData","behaviorSharedData","getBehaviorSharedDatas","onOpenMoreSettings","init","instanceRef","newInstance","SPRITE_SIZE","spriteThumbnail","checkboxContainer","Column","marginsSize","Spacer","ObjectSelector","rest","objectAndGroups","groups","getObjectsAndGroupsDataSource","hasValidChoice","loadedFontFamilies","loadedTextures","invalidTexture","asImageResource","isSmooth","NEAREST","onComplete","loader","shared","allResources","totalCount","loadingCount","progressCallbackId","loadedResources","detach","_initializeTexture","LINEAR","resourceOptions","autoPlay","slugs","fullFilename","loadedFace","fullUrl","getExtensionPrefix","enumerateExpressionMetadataMap","expressions","exprMetadata","isShown","getAllStrExpressions","getAllExpressions","extensionAndObjectMetadata","getExtensionAndObjectMetadata","objectsExpressions","getAllStrExpressionsForObject","getAllExpressionsForObject","extensionAndBehaviorMetadata","getExtensionAndBehaviorMetadata","getAllStrExpressionsForBehavior","getAllExpressionsForBehavior","behaviorsExpressions","apply","enumeratedExpression","initiallyOpenedKey","restOfInitiallyOpenedPath","instructionInformation","groupOfInstructionInformation","sourceSpec","monitor","getItem","targetSpec","didDrop","InnerDragSourceAndDropTarget","DragSource","connect","dragSource","shallow","eventsCount","extractNumberProperty","conditionsCount","actionsCount","conditionsList","eventsListContent","extractArrayProperty","actionsListContent","conditionsListContent","insertInstructions","hover","InnerDropTarget","extensionEvents","getAllEvents","emptyContainer","parametersContainer","invertToggle","isParameterVisible","_firstVisibleField","isDirty","_openExtension","getExtensionAndConditionMetadata","getExtensionAndActionMetadata","_getVisibleParametersCount","helpPage","instructionExtraInformation","parameterFieldIndex","parameterMetadataType","isFirstVisibleParameterField","setParametersCount","maybeBehaviorParameterIndex","maybeBehaviorParameterMetadata","isBehavior","allowedBehaviorType","currentParameterValue","SelectColumns","columnName","undoHistory","redoHistory","maxSize","newUndoHistory","newCurrent","parameterGroups","referencedObjectOrGroupName","parameterGroupNames","parameterObjectNames","newParameter","StringSelectorEditor","updateExtraInfo","marginSize","EventsFunctionParametersEditor","longDescriptionShownIndexes","_addParameter","_removeParameter","removeFromVectorParameterMetadata","_addLongDescription","_removeLongDescription","setLongDescription","_moveParameters","isDone","swapInVectorParameterMetadata","isParameterDisabled","isParameterDescriptionAndTypeShown","isParameterLongDescriptionShown","parametersIndexOffset","validateParameterName","newExtraInfo","ObjectTypeSelector","getDefaultName","flexSrink","getSentenceErrorText","sentence","missingParameters","expectedString","getFullNameHintText","getDescriptionHintText","EventsFunctionPropertiesEditor","setSentence","CloseButton","mosaicActions","mosaicWindowActions","getPath","_onBehaviorEdited","ObjectGroupEditorDialog","ResourceStoreContext","fetchResourcesAndFilters","getResourceSearchTerms","ResourceStoreStateProvider","resourcesByUrl","setResourcesByUrl","resourceStoreState","BoxSearchResults","baseSize","ceil","columnIndex","viewBox","fillRule","layoutChooserOpen","setAssociatedLayout","openLayoutChooser","getAssociatedLayout","helpText","LayoutChooserDialog","selectedLayoutName","chooseLayout","getAssociatedSettings","getUiSettings","getInitialInstances","initialUiSettings","initialMosaicEditorNodesSmallWindow","SceneEditor","showObjectsListInfoBar","showInstancesInfoBar","showLayersInfoBar","uiSettings","windowMask","setupGridOpen","openSceneProperties","scenePropertiesDialogOpen","openObjectEditor","hasSelectedInstances","selectedInstanceObjectName","editObjectByName","editLayerEffects","editedLayer","editedLayerInitialTab","editLayer","variablesEditedInstance","editObjectVariables","variablesEditedObject","editLayoutVariables","editedObject","editedObjectWithContext","setUiSettings","forceRemount","_onObjectSelected","selectedObjectName","selectedObjectNames","_createNewObjectAndInstanceUnderCursor","newObjectInstanceSceneCoordinates","getLastCursorSceneCoordinates","_objectsList","newObjectDialogOpen","_onAddInstanceUnderCursor","objectSelected","_addInstance","_onInstancesAdded","infoBarDetails","additionalWorkInfoBar","showAdditionalWorkInfoBar","_onInstancesSelected","forceUpdatePropertiesEditor","_onInstanceDoubleClicked","_onInstancesMoved","_onInstancesResized","_onInstancesRotated","_onSelectInstances","selectInstances","centerViewOn","_addInstanceForNewObject","_onObjectCreated","_onRemoveLayer","layerRemoveDialogOpen","onCloseLayerRemoveDialog","newLayer","removeAllInstancesOnLayer","moveInstancesToLayer","forceUpdateLayersList","_onRenameLayer","_onDeleteObject","globalObjectOrGroupRemoved","objectOrGroupRemovedInLayout","_onRenameEditedObject","_onRenameObject","globalObjectOrGroupRenamed","objectOrGroupRenamedInLayout","clearHighlightedInstance","zoomBy","_onContextMenu","useLastCursorPosition","serializedSelection","getLastContextMenuSceneCoordinates","instancesContent","serializedInstance","insertInitialInstance","resetPersistentUuid","forceUpdateObjectsList","_layersList","reloadResourcesFor","resourcesInUse","ResourcesInUseHelper","objectResourceNames","getAllImages","loadTextures","resetRenderersFor","_getAllObjectTags","tagsSet","_buildObjectTagsMenuTemplate","selectedObjectTags","layersListOpen","layersList","onChangeOptions","onInstancesAdded","onInstancesSelected","onInstancesMoved","onInstancesResized","onInstancesRotated","pauseRendering","onDeleteObject","onObjectCreated","onObjectSelected","onRenameObject","onObjectPasted","onChangeSelectedObjectTags","getAllObjectTags","objectsList","targetTouches","PinchHandler","canvas","getZoomFactor","_lastPinchCenterX","_lastPinchCenterY","_startPinch","_onPinchMove","centerX","centerY","sceneDeltaX","_getZoomFactor","sceneDeltaY","_viewPosition","scrollBy","_setZoomFactor","_endPinch","unmount","_unregisterCanvasPinchDetector","onPinchStart","onPinchMove","onPinchEnd","lastPinch","start","dx","dy","distance","sqrt","date","newCenter","scaleChange","registerCanvasPinchDetector","gridSize","gridOffset","flexContainer","SpriteSelector","ResourcesEditorContainer","timeFunction","fn","onResult","t0","promiseFn","t1","i18nModule","compareString","searchTextIndex","fuzzyFilter","ms","GamesShowcaseContext","fetchShowcasedGamesAndFilters","getShowcasedGameSearchTerms","showcasedGame","GamesShowcaseStateProvider","showcasedGamesByName","setShowcasedGamesByName","allShowcasedGames","gamesShowcaseState","defaultBody","noMarginBody","actionsContainerWithSecondaryActions","fullHeight","dialogActions","dialogContentStyle","fullScreen","disableBackdropClick","disableEscapeKeyDown","searchableExamplesInformation","ExamplesInformation","exampleName","exampleInformation","searchableDescription","LocalExamples","changeSearchText","chooseExtensionName","exampleNames","extensionUsage","exampleFullName","usedExtensions","getExampleInformation","onCreateFromExample","_submitExample","ExplanationHeader","DoneFooter","renderGameButton","SetupExportHeader","exportState","updateExportState","targetName","prevExportState","runExtensionSanityTests","jsExtensionModule","testResults","loadExtension","createExtension","testsResult","emptyStorageProvider","createOperations","computeInitialFileMetadataToOpen","defaultStorageProvider","appArguments","candidates","currentStorageProvider","getFileMetadataFromAppArguments","ProjectStorageProviders","renderDialog","_setDialog","_getStorageProviderOperations","newStorageProvider","setDialog","closeDialog","_getStorageProvider","func","cppVector","DeprecatedKeyboardShortcuts","_isControlPressed","metaPressed","rawCtrlPressed","_onKeyDown","isFocused","shiftPressed","spacePressed","_onKeyUp","_onMouseDown","mouseMidButtonPressed","_onKeyPress","_noop","mount","InstancesRenderer","layersRenderers","layerRenderer","getInstanceRect","getPixiContainer","render","transformRect","transformPoint","endPos","SelectedInstances","onResize","onResizeEnd","onRotate","onRotateEnd","rectanglesContainer","selectedRectangles","resizeButton","resizeIcon","rightResizeButton","bottomResizeButton","rotateButton","_screenType","_makeButton","objectButton","onEnd","buttonMode","buttonObject","canvasPosition","hitAreaPadding","buttonSize","smallButtonSize","buttonPadding","newRectangle","instanceRect","selectionRectangle","resizeButtonPos","rightResizeButtonPos","bottomResizeButtonPos","rotateButtonPos","highlightedInstance","highlightRectangle","tooltipBackground","tooltipInfo","drawRoundedRect","InstancesResizer","instanceSizes","totalDeltaX","totalDeltaY","proportional","initialSize","selectedInstance","_roundWidth","_getSizeDeltaX","_roundHeight","_getSizeDeltaY","InstancesRotator","instanceAngles","initialAngle","atan2","_getNewAngle","InstancesMover","instancePositions","noGridSnap","followAxis","initialPosition","_roundXPosition","_getMoveDeltaX","_roundYPosition","_getMoveDeltaY","DEFAULT_COLOR","pixiGrid","gridHex","gridAlpha","sceneStartPoint","sceneEndPoint","startXPos","startYPos","endXPos","endYPos","Xpos","Ypos","WindowBorder","windowRectangle","displayedRectangle","BackgroundColor","pixiRenderer","FpsLimiter","maxFps","_lastFrameTime","_interval","_forceUpdate","delta","stopPIXITicker","ticker","stop","startPIXITicker","StatusBar","_getLastCursorSceneCoordinates","_statusBarContainer","_statusBarBackground","_statusBarText","CanvasCursor","shouldMoveView","LongTouchHandler","onLongTouch","_lastTouchX","_lastTouchY","_onTouchStart","_clear","_longTouchTimeoutID","_onLongTouch","_onTouchMove","_canvas","canvasArea","dropCursor","objectWithContextReactDndType","InstancesEditor","lastContextMenuX","lastContextMenuY","lastCursorX","lastCursorY","fpsLimiter","_unmounted","_renderingPaused","_instancesAdder","_onBackgroundClicked","view","keyboardShortcuts","_onPanMove","_getLayersVisibility","_onPanEnd","hasStartedSelectionRectangle","instancesSelected","_onInstanceClicked","_onOverInstance","setInstance","_onDownInstance","_onOutInstance","_onMoveInstance","instancesMover","moveBy","shouldFollowAxis","shouldNotSnapToGrid","_onMoveInstanceEnd","endMove","_onResize","shouldResizeProportionally","instancesResizer","resizeBy","_onResizeEnd","endResize","_onRotate","instancesRotator","rotateBy","_onRotateEnd","endRotate","moveSelection","_renderScene","shouldUpdate","canvasCursor","windowBorder","statusBar","nextFrame","pauseSceneRendering","restartSceneRendering","_initializeCanvasAndRenderer","preserveDrawingBuffer","antialias","longTouchHandler","onmousewheel","shouldZoom","wheelDelta","shouldScrollHorizontally","setAttribute","backgroundArea","Grid","pinchHandler","_mountEditorComponents","getInstanceMeasurer","HighlightedInstance","WindowMask","forceNextUpdate","setOptions","setScreenType","scrollToInstance","getClientOffset","canvasRect","commitTemporaryInstances","onPlay","onPause","canPlay","canPause","onOpenProfiler","canOpenProfiler","InspectorsList","gameData","getInspectorDescriptions","inspectorDescription","fullInspectorPath","getSubInspectors","onChooseInspector","_renderInspectorList","transformVariable","_isStructure","_children","mapValues","_stringDirty","_value","_str","collapsed","_variables","enableClipboard","displayDataTypes","displayObjectSize","onCall","namespace","new_value","handleEdit","groupArraysAfterLength","runtimeObject","Angle","Layer","hidden","VariablesContainerInspector","args","transformLayer","_cameraRotation","_zoomFactor","_hidden","_cameraX","_cameraY","_timeScale","runtimeScene","_timeManager","Layers","_layers","RuntimeSceneInspector","_objects","gdjsRuntimeGame","renderInspector","gdjsStack","_name","instancesList","RuntimeObjectInspector","MeasuresTable","collapsedPaths","_convertToDataRows","parentSection","section","profilerMeasures","parentPercent","totalPercent","isCollapsed","_isSectionCollapsed","hasSubsections","subsections","flatMap","subsection","subsectionName","_toggleSection","_renderSectionNameCell","rowData","dataRows","tableContainer","Profiler","onStart","onStop","profilerOutput","profilingInProgress","stats","framesCount","LinearProgress","framesAverageMeasures","DebuggerContent","selectedInspector","selectedInspectorFullPath","rawMode","_editors","openProfiler","onStartProfiler","onStopProfiler","inspectors","RawContentInspector","profiler","DebuggerSelector","hasDebuggers","selectedId","onChooseDebugger","Debugger","debuggerServerState","getServerState","debuggerServerError","getExistingDebuggerIds","unregisterDebuggerServerCallbacks","debuggerGameData","profilerOutputs","_debuggerContents","_startServer","_handleMessage","startServer","_play","sendMessage","_pause","_refresh","_edit","_call","_startProfiler","_stopProfiler","_hasSelectedDebugger","debuggerContent","DebuggerEditorContainer","subscriptionChecked","_checkHasSubscription","_subscriptionChecker","TutorialListItem","sendTutorialOpened","Tutorials","allTutorials","featuredForGettingStartedTutorials","videoTutorials","nonVideoTutorials","thumbnailImageWithDescription","objectFit","thumbnailImageWithoutDescription","smallScreenThumbnailImage","LinkButton","Apple","GooglePlay","Steam","ItchIo","Twitter","Microsoft","Instagram","Twitch","getLinkIconAndLabel","sendShowcaseGameLinkOpened","ShowcasedGameListItem","onHeightComputed","isLoaded","setIsLoaded","containerRef","isImageLoadingRef","notifyHeightChanged","hasDescription","firstLinks","links","otherLinks","thumbnailUrl","genres","TagChips","noColumnMargin","getShowcasedGameTitle","GamesShowcase","Subheader","CreateProjectDialog","outputPath","_showExamples","_onExamplesLoaded","ExamplesComponent","examplesComponent","StartersComponent","startersComponent","onChangeOutputPath","onShowExamples","onExamplesLoaded","buildTypesConfig","estimatedTimeInSeconds","completeDescription","buttons","onDownload","secondsSinceLastUpdate","differenceInSeconds","updatedAt","estimatedRemainingTime","buildContainer","builds","isOld","differenceInCalendarDays","buildType","formatBuildText","BuildProgress","BuildsWatcher","runningWatchers","nextWatcherId","_pollBuild","waitTime","watcherId","onBuildUpdated","Builds","buildsWatcher","_startBuildsWatcher","newBuild","oldBuild","_refreshBuilds","onBuildsUpdated","_download","BuildsList","BuildsDialog","_onBuildsUpdated","limit","hasSubscription","noSubscription","limitReached","stepper","linearProgress","exportStep","stepMaxProgress","stepCurrentProgress","hasBuildStep","showSeeAllMyBuildsExplanation","Stepper","activeStep","Step","StepLabel","StepContent","ExportLauncher","compressionOutput","doneFooterOpen","exportPipeline","getInitialExportState","_updateStepProgress","_startBuildWatch","launchWholeExport","sendExportLaunched","handleError","exportPipelineContext","updateStepProgress","prepareExporter","preparedExporter","launchExport","exportOutput","launchResourcesDownload","resourcesDownloadOutput","launchCompression","launchUpload","launchOnlineBuild","uploadBucketKey","_downloadBuild","_closeDoneFooter","_updateExportState","updater","getBuildLimit","onlineBuildType","renderLaunchButtonLabel","canLaunchBuild","LimitDisplayer","BuildStepsProgress","renderDoneFooter","useOnlineStatus","navigator","onLine","onlineStatus","setOnlineStatus","goOnline","goOffline","OnlineStatus","ExportDialog","chosenExporterKey","showExperimental","buildsDialogOpen","chooseExporter","_showExperimental","_openBuildsDialog","_renderExporterListItem","exporter","forceDisable","allExportersRequireOnline","exporters","cantExportBecauseOffline","advanced","experimental","DragAndDropContextProvider","DragDropContext","MultiBackend","HTML5toTouch","getEmailErrorText","getPasswordErrorText","CreateAccountDialog","form","password","_onCreateAccount","createAccountInProgress","onGoToLogin","LoginDialog","_onLogin","_onForgotPassword","onForgotPassword","onGoToCreateAccount","loginInProgress","resetPasswordDialogOpen","onCloseResetPasswordDialog","forgotPasswordInProgress","RightLoader","watchPromiseInState","stateField","UserProfileProvider","loginDialogOpen","createAccountDialogOpen","loginError","_fetchUserProfile","authentification","getUserProfile","unauthenticated","_doLogout","logout","_resetUserProfile","_doLogin","login","openLoginDialog","_doCreateAccount","createAccount","sendSignupDone","_doForgotPassword","forgotPassword","openResetPassword","openCreateAccountDialog","onUserChange","PreferencesProvider","_loadValuesFromLocalStorage","_setLanguage","_setThemeName","_setCodeEditorThemeName","_setAutoDownloadUpdates","_checkUpdates","_setAutoDisplayChangelog","_showAlertMessage","_showTutorialHint","_verifyIfIsNewVersion","_setEventsSheetShowObjectThumbnails","_setAutosaveOnPreview","_setUseNewInstructionEditorDialog","_setUseGDJSDevelopmentWatcher","_setEventsSheetUseAssignmentOperators","_setShowEffectParameterNames","_getLastUsedPath","_setLastUsedPath","_getDefaultEditorMosaicNode","_setDefaultEditorMosaicNode","_getRecentProjectFiles","_insertRecentProjectFile","_removeRecentProjectFile","_getAutoOpenMostRecentProject","_setAutoOpenMostRecentProject","_hadProjectOpenedDuringLastSession","_setHasProjectOpened","_setShortcutForCommand","_resetShortcutsToDefault","_getNewObjectDialogDefaultTab","_setNewObjectDialogDefaultTab","_getIsMenuBarHiddenInPreview","_setIsMenuBarHiddenInPreview","_persistValuesToLocalStorage","forceDownload","disableCheckForUpdates","currentVersion","persistedState","localStorage","setItem","projectPaths","latestPath","newProjectLastUsedPaths","recents","newRecentFile","_setRecentProjectFiles","recentFile","recentFileItem","setToDefault","updatedShortcutMap","EventsFunctionsExtensionsProvider","_eventsFunctionCodeWriter","makeEventsFunctionCodeWriter","onWriteFile","_onWriteFile","_includeFileHashs","_lastLoadPromise","_loadProjectEventsFunctionsExtensions","_unloadProjectEventsFunctionsExtensions","_unloadProjectEventsFunctionsExtension","_reloadProjectEventsFunctionsExtensions","_ensureLoadFinished","xxhashjs","h32","toNumber","lastLoadPromise","jss","plugins","jssPreset","rtl","Providers","getTheme","StylesProvider","ThemeProvider","ResourceFetcher","base","inherit","rules","foreground","token","fontground","GitHub","Monokai","SolarizedDark","SolarizedLight","Tomorrow","TomorrowNight","VibrantInk","NordDark","rtlLanguages","primitives","Map","WeakMap","cacheFor","cachedValue","darkStyles","DarkTheme","NordTheme","SolarizedDarkTheme","themeList","ltr","createLtrTheme","createRtlTheme","memoize","createMuiTheme","rtlOverrides","rtlDirection","MuiSvgIcon","order","MuiFormControlLabel","MuiTextField","previewBackground","previewImage","cardContainer","titleContainer","AssetCard","ButtonBase","previewImageUrls","AssetStore","verticalPreviewBackground","horizontalPreviewBackground","AssetDetails","canInstall","isBeingInstalled","setAsset","loadAsset","loadedAsset","assetAuthors","assetLicense","license","Link","website","ObjectListItem","NewObjectDialog","onCreateNewObject","onObjectAddedFromAsset","assetWasInstalled","setAssetWasInstalled","openedAsset","setOpenedAsset","setShowExperimental","experimentalObjectsInformation","resourcesFetcher","experimentalObjects","assetBeingInstalled","setAssetBeingInstalled","onInstallAsset","installOutput","sendAssetAddedToProject","sendAssetOpened","sendNewObjectCreated","EditTagsDialog","_tagsField","getObjectWithContextName","isObjectWithContextGlobal","getPasteLabel","isGlobalObject","clipboardObjectName","ObjectsList","_displayedObjectWithContextsList","renamedObjectWithContext","tagEditedObject","setTags","_onObjectAddedFromAsset","onAddNewObject","_deleteObject","_onObjectModified","_copyObject","_cutObject","_duplicateObject","_pasteAndRename","_paste","pasteObject","copiedObject","newObject","getObjectPosition","_editVariables","_canMoveSelectionTo","destinationObjectWithContext","movedObjectWithContext","moveObject","_setAsGlobalObject","moveObjectToAnotherContainer","_openEditTagDialog","_changeObjectTags","_selectObject","_getObjectThumbnail","_renderObjectMenuTemplate","shouldForceUpdateList","lists","selectedObjects","iconBackground","ExtensionIcon","previewIconUrl","ExtensionListItem","alreadyInstalled","getTransformedDescription","ExtensionInstallDialog","_loadExtensionheader","isCompatible","getExtensionName","selectedExtensionShortHeader","setSelectedExtensionShortHeader","filteredSearchResults","ChangelogRenderer","releases","currentReleaseName","openReleaseNote","currentRelease","findRelease","currentVersionHasBreakingChange","_onUpdated","GDevelopReleaseApi","last","buttonCommonStyles","textFieldWithButtonLayoutStyles","filledTextFieldWithLabelRightButtonMargins","filledTextFieldWithoutLabelRightButtonMargins","standardTextFieldWithLabelRightButtonMargins","standardTextFieldWithoutLabelRightButtonMargins","TextFieldWithButtonLayout","ResponsiveLineStackLayout","isFirstChild","ColumnStackLayout","addSpacers","InstructionOrObjectSelector","freeInstructionsInfo","freeInstructionsInfoTree","allInstructionsInfo","isOutsideLayout","displayedObjectsList","displayedObjectGroupsList","isSearching","filteredInstructionsList","remainingResultsCount","oldSearchText","renderObjectListItem","renderGroupObjectsListItem","audioElement","ImageCard","GenericCard","ResourceCard","controls","searchResultsForResourceKind","getGameMetrics","dayIsoDate","GDevelopAnalyticsApi","validateStatus","bigIcon","gameRollingMetrics","setGameMetrics","gameRollingMetricsError","setGameMetricsError","isGameMetricsLoading","setIsGameMetricsLoading","yesterdayIsoDate","formatISO","subDays","representation","analyticsDate","setAnalyticsDate","loadGameMetrics","updateGameFromProject","unregisterGame","areProjectAndGameDiffering","newIsoDate","isoDate","reverse","players","d0Players","sessions","d0Sessions","d0NewPlayers","retention","dayIndex","GroupRow","isGlobalGroup","onSetAsGlobalGroup","SortableGroupRow","SortableAddGroupRow","GroupsList","onAddGroup","renamedGroupWithScope","SortableGroupsList","withRef","GroupsListContainer","objectGroupsList","globalObjectGroupsList","addGroup","_onObjectGroupModified","_onDelete","getWrappedInstance","_onRename","_onMove","globalObjectGroupsOldIndex","globalObjectGroupsNewIndex","_setAsGlobalGroup","hiddenLabel","disableUnderline","spellCheck"],"mappings":"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D,oBAGjC,OAAO,kBAACqsB,EAAD,KAAwBrsB,K,mLChEZ6tB,E,wMAGT,IAAD,SAC8B30B,KAAKC,MAAlC6yB,EADD,EACCA,kBAAmBhsB,EADpB,EACoBA,MACrB5B,EAAc4tB,EAChBA,EAAkBsB,sBAClB7wB,EAEJ,OACE,kBAAC,IAAD,CACEhC,OAAQvB,KAAKC,MAAMo0B,SAAW,OAAS,QACvC3pB,WAAS,EACTyJ,kBAAmBjP,EACnB8O,mBACE8e,EAAoBA,EAAkBwB,0BAAuB/wB,EAE/DuD,MAAOA,EACPrF,IAAK,SAAA8G,GAAK,OAAK,EAAKV,OAASU,GAC7BxB,SAAU,SAACyD,EAAGwL,EAAGlP,GAAP,OAAiB,EAAK7G,MAAM8G,SAASD,IAC/C0C,UAAW1C,OAAQvD,EAAY,kBAAC,QAAD,kCAE/B,kBAAC,IAAD,CAAcuD,MAAM,OAAOjD,YAAa,wBACxC,kBAAC,IAAD,CAAciD,MAAM,QAAQjD,YAAa,2BACzC,kBAAC,IAAD,CACEiD,MAAM,SACNjD,YAAa,kE,GA1BiB+c,aA0C3BgU,EAAoB,SAAC,GAGG,IAFnC9tB,EAEkC,EAFlCA,MACAqsB,EACkC,EADlCA,sBAEA,OAAOrsB,GAGL,kBAACqsB,EAAD,CAAuBqB,SAAO,GAC5B,kBAAC,QAAD,iC,0KClDAK,EAAW,CACf,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,WACA,WACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,QACA,SACA,OACA,MACA,SACA,WACA,MACA,OACA,SACA,SACA,MACA,WACA,WACA,SACA,YACA,iBACA,iBACA,eACA,OACA,QACA,KACA,OACA,aACA,cACA,WACA,aACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,QACA,WACA,WACA,OACA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MAAO,YAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,UAET,CACED,WAAY,SACZC,MAAO,yBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,uBAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,WAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,kBAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,uBAGX30J,OAAQ,CACN,oBAAqB,UACrB,oBAAqB,UACrB,6BAA8B,UAC9B,iCAAkC,UAClC,0BAA2B,UAC3B,8BAA+B,aCrCpB,GACb9nC,KAAM,UACNiH,UAAW,UACX6/G,UAhJgB,CAChBu1E,KAAM,UACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,UAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZh3L,UAAW,SACXi3L,MAAO,gBAET,CACED,WAAY,SACZh3L,UAAW,YACXi3L,MAAO,qBAET,CACED,WAAY,SACZh3L,UAAW,mBACXi3L,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZh3L,UAAW,SACXi3L,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZh3L,UAAW,SACXi3L,MAAO,gBAET,CACED,WAAY,SACZh3L,UAAW,SACXi3L,MAAO,iBAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,WAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,4DAET,CACED,WAAY,SACZC,MAAO,aAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,sDAET,CACED,WAAY,SACZC,MAAO,uCAGX30J,OAAQ,CACN,oBAAqB,UACrB,oBAAqB,UACrB,6BAA8B,UAC9B,iCAAkC,UAClC,0BAA2B,UAC3B,8BAA+B,UAC/B,qCAAsC,UACtC,kCAAmC,aCyCxB,GACb9nC,KAAM,WACNiH,UAAW,WACX6/G,UArLgB,CAChBu1E,KAAM,KACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,4BAET,CACED,WAAY,SACZC,MAAO,YAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,YAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,UAET,CACED,WAAY,SACZC,MAAO,yBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,WAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,kBAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,uBAGX30J,OAAQ,CACN,oBAAqB,UACrB,oBAAqB,UACrB,6BAA8B,UAC9B,iCAAkC,UAClC,0BAA2B,UAC3B,8BAA+B,aCxCpB,GACb9nC,KAAM,iBACNiH,UAAW,iBACX6/G,UAzIgB,CAChBu1E,KAAM,UACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZh3L,UAAW,SACXi3L,MAAO,WAET,CACED,WAAY,SACZC,MAAO,UAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZh3L,UAAW,OACXi3L,MAAO,WAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,mCAET,CACED,WAAY,SACZC,MAAO,sCAET,CACED,WAAY,SACZC,MAAO,oCAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,8BAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZh3L,UAAW,OACXi3L,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,8BAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,sCAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,2BAGX30J,OAAQ,CACN,oBAAqB,UACrB,oBAAqB,UACrB,6BAA8B,UAC9B,iCAAkC,UAClC,0BAA2B,UAC3B,8BAA+B,aCGpB,GACb9nC,KAAM,kBACNiH,UAAW,kBACX6/G,UAxIgB,CAChBu1E,KAAM,KACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,UAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZh3L,UAAW,OACXi3L,MAAO,WAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,mCAET,CACED,WAAY,SACZC,MAAO,sCAET,CACED,WAAY,SACZC,MAAO,oCAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,8BAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZh3L,UAAW,OACXi3L,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,oCAET,CACED,WAAY,SACZC,MAAO,kCAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,sCAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,2BAGX30J,OAAQ,CACN,oBAAqB,UACrB,oBAAqB,UACrB,6BAA8B,UAC9B,iCAAkC,UAClC,0BAA2B,UAC3B,8BAA+B,aC0EpB,GACb9nC,KAAM,cACNiH,UAAW,cACX6/G,UA9MgB,CAChBu1E,KAAM,UACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,QAET,CACEjqF,WAAY,SACZiqF,MAAO,mCAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,kBAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,WAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,UAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,YAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,kCAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,4BAET,CACEj3L,UAAW,SACXi3L,MAAO,sBAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,UAET,CACED,WAAY,SACZC,MAAO,oCAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,uBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,iDAET,CACEj3L,UAAW,YACXi3L,MAAO,qBAET,CACEj3L,UAAW,YACXi3L,MAAO,oBAET,CACEj3L,UAAW,mBACXi3L,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,4BAET,CACED,WAAY,SACZC,MAAO,2BAET,CACED,WAAY,SACZh3L,UAAW,SACXi3L,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,gDAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,sCAET,CACED,WAAY,SACZC,MAAO,yCAET,CACED,WAAY,SACZC,MAAO,kCAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,qCAET,CACED,WAAY,SACZC,MAAO,uBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,8BAET,CACED,WAAY,SACZC,MAAO,0CAGX30J,OAAQ,CACN,oBAAqB,UACrB,oBAAqB,UACrB,6BAA8B,UAC9B,iCAAkC,UAClC,0BAA2B,UAC3B,8BAA+B,aC6CpB,GACb9nC,KAAM,SACNiH,UAAW,SACX6/G,UAvPgB,CAChBu1E,KAAM,KACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZh3L,UAAW,SACXi3L,MAAO,WAET,CACED,WAAY,SACZh3L,UAAW,OACXi3L,MAAO,8BAET,CACED,WAAY,SACZh3L,UAAW,cACXi3L,MAAO,yBAET,CACED,WAAY,SACZh3L,UAAW,cACXi3L,MAAO,+BAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,mBAET,CACEj3L,UAAW,OACXi3L,MAAO,WAET,CACEj3L,UAAW,OACXi3L,MAAO,WAET,CACEj3L,UAAW,OACXi3L,MAAO,oBAET,CACEj3L,UAAW,OACXi3L,MAAO,qBAET,CACEj3L,UAAW,OACXi3L,MAAO,oBAET,CACED,WAAY,SACZh3L,UAAW,OACXi3L,MAAO,gBAET,CACED,WAAY,SACZh3L,UAAW,OACXi3L,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZh3L,UAAW,OACXi3L,MAAO,oBAET,CACED,WAAY,SACZh3L,UAAW,OACXi3L,MAAO,gCAET,CACED,WAAY,SACZh3L,UAAW,OACXi3L,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,2BAET,CACED,WAAY,SACZC,MAAO,6BAET,CACED,WAAY,SACZC,MAAO,yBAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,mCAET,CACED,WAAY,SACZC,MAAO,uBAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,yBAET,CACEj3L,UAAW,OACXi3L,MAAO,eAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,kBAET,CACEj3L,UAAW,SACXi3L,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,cAET,CACED,WAAY,SACZC,MAAO,iBAET,CACEj3L,UAAW,OACXi3L,MAAO,eAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACEj3L,UAAW,YACXi3L,MAAO,oBAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,mBAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,mBAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,kBAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,8BAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,4BAET,CACED,WAAY,SACZC,MAAO,cAGX30J,OAAQ,CACN,oBAAqB,UACrB,oBAAqB,UACrB,6BAA8B,UAC9B,iCAAkC,UAClC,0BAA2B,UAC3B,8BAA+B,aCPpB,GACb9nC,KAAM,YACNiH,UAAW,YACX6/G,UA5OgB,CAChBu1E,KAAM,UACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZh3L,UAAW,OACXi3L,MAAO,8BAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZhqF,WAAY,SACZiqF,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZh3L,UAAW,OACXi3L,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,2BAET,CACED,WAAY,SAC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","file":"static/js/1.a18a37b0.chunk.js","sourcesContent":["// @flow\nimport * as React from 'react';\nimport ThemeContext from '../UI/Theme/ThemeContext';\nimport Window from '../Utils/Window';\nimport { type FileMetadata } from '../ProjectsStorage';\nimport UnsavedChangesContext from './UnsavedChangesContext';\n\ntype Props = {|\n  fileMetadata: ?FileMetadata,\n|};\n\n/**\n * Update the title bar according to the project and the current theme.\n */\nexport default function ProjectTitlebar({ fileMetadata }: Props) {\n  const gdevelopTheme = React.useContext(ThemeContext);\n  const unsavedChanges = React.useContext(UnsavedChangesContext);\n  const hasUnsavedChanges = unsavedChanges.hasUnsavedChanges;\n\n  React.useEffect(\n    () => {\n      const title = [\n        'GDevelop 5',\n        fileMetadata\n          ? fileMetadata.fileIdentifier + (hasUnsavedChanges ? ' *' : '')\n          : '',\n      ]\n        .filter(Boolean)\n        .join(' - ');\n\n      Window.setTitle(title);\n      Window.setTitleBarColor(gdevelopTheme.toolbar.backgroundColor);\n    },\n    [fileMetadata, hasUnsavedChanges, gdevelopTheme.toolbar.backgroundColor]\n  );\n\n  return null;\n}\n","// @flow\nimport * as React from 'react';\nimport MUIIconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { I18n } from '@lingui/react';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport { adaptAcceleratorString } from '../UI/AcceleratorString';\n\ntype IconProps =\n  | {|\n      children: React.Node,\n    |}\n  // Support a few specific icons from iconmoon-font.css\n  | {|\n      className:\n        | 'icon-youtube'\n        | 'icon-twitter'\n        | 'icon-facebook'\n        | 'icon-discord'\n        | 'icon-reddit',\n    |};\n\n// We support a subset of the props supported by Material-UI v0.x IconButton\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  ...IconProps,\n  onClick?: () => void,\n  onContextMenu?: () => void,\n  disabled?: boolean,\n\n  style?: {|\n    padding?: number,\n    width?: number,\n    height?: number,\n    transform?: string,\n    transition?: string,\n    opacity?: number,\n    margin?: number,\n    marginRight?: number,\n    marginLeft?: number,\n    marginTop?: number,\n    marginBottom?: number,\n  |},\n  size?: 'small',\n\n  tooltip?: MessageDescriptor,\n  acceleratorString?: string,\n|};\n\n/**\n * A button showing just an icon, based on Material-UI icon button.\n * Supports displaying a tooltip.\n */\nexport default class IconButton extends React.Component<Props, {||}> {\n  render() {\n    const { tooltip, acceleratorString, ...otherProps } = this.props;\n    const iconButton = <MUIIconButton {...otherProps} />;\n\n    return tooltip && !this.props.disabled ? (\n      <I18n>\n        {({ i18n }) => (\n          <Tooltip\n            title={\n              i18n._(tooltip) +\n              (acceleratorString\n                ? ' ' + adaptAcceleratorString(acceleratorString)\n                : '')\n            }\n            placement=\"bottom\"\n            enterDelay={300}\n          >\n            {iconButton}\n          </Tooltip>\n        )}\n      </I18n>\n    ) : (\n      iconButton\n    );\n  }\n}\n","// @flow\nimport { isMacLike, isMobile } from '../Utils/Platform';\n\nexport const adaptAcceleratorString = (accelerator: string): string => {\n  if (isMobile()) {\n    return ''; // Do not display accelerators on mobile devices\n  } else if (isMacLike()) {\n    return accelerator\n      .replace(/CmdOrCtrl\\+/, '⌘')\n      .replace(/CommandOrControl\\+/, '⌘')\n      .replace(/Super\\+/, '⌘')\n      .replace(/Shift\\+/, '⇧')\n      .replace(/Alt\\+/, '⌥')\n      .replace(/Option\\+/, '⌥')\n      .replace(/Delete/, '⌦')\n      .replace(/Backspace/, '⌫');\n  } else {\n    return accelerator\n      .replace(/CmdOrCtrl\\+/, 'Ctrl+')\n      .replace(/CommandOrControl\\+/, 'Ctrl+')\n      .replace(/Super\\+/, 'Win+')\n      .replace(/Option\\+/, 'Alt+')\n      .replace(/Delete/, 'DEL');\n  }\n};\n","// @flow\nimport * as React from 'react';\nimport { type GDevelopTheme } from '.';\nimport GDevelopThemeContext from './ThemeContext';\n\ntype Props = {|\n  children: (gdevelopTheme: GDevelopTheme) => React.Node,\n|};\n\n/**\n * Expose the Material UI theme.\n */\nconst ThemeConsumer = (props: Props) => (\n  <GDevelopThemeContext.Consumer>\n    {gdevelopTheme => props.children(gdevelopTheme)}\n  </GDevelopThemeContext.Consumer>\n);\n\nexport default ThemeConsumer;\n","// @flow\nimport * as React from 'react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport MUIList from '@material-ui/core/List';\nimport MUIListItem from '@material-ui/core/ListItem';\nimport MUIListItemIcon from '@material-ui/core/ListItemIcon';\nimport MUIListItemText from '@material-ui/core/ListItemText';\nimport MUIListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport IconButton from '@material-ui/core/IconButton';\nimport Refresh from '@material-ui/icons/Refresh';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport Remove from '@material-ui/icons/Remove';\nimport ElementWithMenu from './Menu/ElementWithMenu';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Add from '@material-ui/icons/Add';\nimport Search from '@material-ui/icons/Search';\nimport { type MenuItemTemplate } from './Menu/Menu.flow';\nimport { useLongTouch } from '../Utils/UseLongTouch';\n\nconst useDenseLists = true;\nexport const listItemWith32PxIconHeight = 32;\nexport const listItemWithoutIconHeight = 29;\n\nconst styles = {\n  listItemText: {\n    margin: '1px 0',\n  },\n};\n\ntype DoubleClickMouseEvent = {| button: 0 | 1 | 2 |};\n\n// Support for a bunch of different secondary actions\ntype ListItemRightButtonProps =\n  | {|\n      displayReloadButton: boolean,\n      reloadButtonTooltip: string,\n      onReload?: () => void,\n    |}\n  | {|\n      displayMenuButton: boolean,\n      buildMenuTemplate: (i18n: I18nType) => Array<MenuItemTemplate>,\n    |}\n  | {|\n      displayLinkButton: boolean,\n      onOpenLink: () => void,\n    |}\n  | {|\n      displayRemoveButton: true,\n      onRemove: () => void,\n    |}\n  | {|\n      displayAddIcon: true,\n    |}\n  | {|\n      displaySearchIcon: true,\n    |}\n  | {||};\n\n// We support a subset of the props supported by Material-UI v0.x ListItem\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype ListItemProps = {|\n  onClick?: () => void,\n  onDoubleClick?: (event: DoubleClickMouseEvent) => void,\n  primaryText: ?React.Node,\n  secondaryText?: React.Node,\n  selected?: boolean,\n  autoGenerateNestedIndicator?: boolean, // TODO: Rename?\n  renderNestedItems?: () => Array<React$Element<any> | null>,\n  open?: boolean,\n  initiallyOpen?: boolean,\n  disabled?: boolean,\n  rightIconColor?: string,\n  nestedListStyle?: {|\n    padding: 0,\n  |},\n\n  style?: {|\n    color?: string,\n    backgroundColor?: string,\n    borderBottom?: string,\n    opacity?: number,\n  |},\n\n  leftIcon?: React.Node,\n  ...ListItemRightButtonProps,\n\n  secondaryTextLines?: 1 | 2,\n|};\n\nexport type ListItemRefType = any; // Should be a material-ui ListIten\n\n/**\n * A ListItem to be used in a List.\n *\n * Also used outside of a List by virtualized lists.\n */\nexport const ListItem = React.forwardRef<ListItemProps, ListItemRefType>(\n  (props: ListItemProps, ref) => {\n    const [isOpen, setIsOpen] = React.useState(!!props.initiallyOpen);\n    const elementWithMenu = React.useRef<?ElementWithMenu>(null);\n\n    const openContextMenu = React.useCallback(\n      () => {\n        if (elementWithMenu.current) {\n          elementWithMenu.current.open();\n        }\n      },\n      [elementWithMenu]\n    );\n    const longTouchForContextMenuProps = useLongTouch(openContextMenu);\n\n    const renderListItemSecondaryAction = () => {\n      if (props.displayReloadButton) {\n        return (\n          <MUIListItemSecondaryAction>\n            <Tooltip title={props.reloadButtonTooltip}>\n              <IconButton\n                size=\"small\"\n                edge=\"end\"\n                aria-label=\"reload\"\n                onClick={props.onReload}\n              >\n                <Refresh />\n              </IconButton>\n            </Tooltip>\n          </MUIListItemSecondaryAction>\n        );\n      }\n      if (props.buildMenuTemplate) {\n        return props.displayMenuButton ? (\n          <MUIListItemSecondaryAction>\n            <ElementWithMenu\n              ref={elementWithMenu}\n              element={\n                <IconButton size=\"small\" edge=\"end\" aria-label=\"menu\">\n                  <MoreVert style={{ color: props.rightIconColor }} />\n                </IconButton>\n              }\n              buildMenuTemplate={props.buildMenuTemplate}\n            />\n          </MUIListItemSecondaryAction>\n        ) : (\n          <ElementWithMenu\n            ref={elementWithMenu}\n            element={\n              <div /> /* We still need a dummy div for context menu placement */\n            }\n            buildMenuTemplate={props.buildMenuTemplate}\n          />\n        );\n      }\n      if (props.displayLinkButton) {\n        return (\n          <MUIListItemSecondaryAction>\n            <IconButton\n              size=\"small\"\n              edge=\"end\"\n              aria-label=\"open link\"\n              onClick={props.onOpenLink}\n            >\n              <OpenInNew style={{ color: props.rightIconColor }} />\n            </IconButton>\n          </MUIListItemSecondaryAction>\n        );\n      }\n      if (props.displayRemoveButton) {\n        return (\n          <MUIListItemSecondaryAction>\n            <IconButton\n              size=\"small\"\n              edge=\"end\"\n              aria-label=\"remove\"\n              onClick={props.onRemove}\n            >\n              <Remove style={{ color: props.rightIconColor }} />\n            </IconButton>\n          </MUIListItemSecondaryAction>\n        );\n      }\n\n      return null;\n    };\n\n    const { renderNestedItems } = props;\n\n    if (!renderNestedItems) {\n      return (\n        <MUIListItem\n          button\n          dense={useDenseLists}\n          disableRipple\n          ContainerComponent={\n            'div' /* Otherwise, when ListItemSecondaryAction is defined, we would get a li, that is not playing well in virtualized list, that are using ListItem without List */\n          }\n          onClick={props.onClick}\n          onDoubleClick={props.onDoubleClick}\n          disabled={props.disabled}\n          selected={props.selected}\n          style={props.style}\n          onContextMenu={props.buildMenuTemplate ? openContextMenu : undefined}\n          {...longTouchForContextMenuProps}\n          alignItems={props.secondaryTextLines === 2 ? 'flex-start' : undefined}\n          ref={ref}\n        >\n          {props.leftIcon && (\n            <MUIListItemIcon>{props.leftIcon}</MUIListItemIcon>\n          )}\n          <MUIListItemText\n            style={styles.listItemText}\n            primary={props.primaryText}\n            secondary={props.secondaryText}\n          />\n          {renderListItemSecondaryAction()}\n          {props.displayAddIcon && (\n            <Add style={{ color: props.rightIconColor }} />\n          )}\n          {props.displaySearchIcon && (\n            <Search style={{ color: props.rightIconColor }} />\n          )}\n        </MUIListItem>\n      );\n    } else {\n      const isItemOpen = props.open === undefined ? isOpen : props.open;\n      return (\n        <React.Fragment>\n          <MUIListItem\n            button\n            dense={useDenseLists}\n            disableRipple\n            onClick={() => {\n              setIsOpen(!isItemOpen);\n              if (props.onClick) {\n                props.onClick();\n              }\n            }}\n            disabled={props.disabled}\n            style={props.style}\n            ref={ref}\n          >\n            {props.leftIcon && (\n              <MUIListItemIcon>{props.leftIcon}</MUIListItemIcon>\n            )}\n            <MUIListItemText\n              style={styles.listItemText}\n              primary={props.primaryText}\n              secondary={props.secondaryText}\n            />\n            {props.autoGenerateNestedIndicator ? (\n              isItemOpen ? (\n                <ExpandLess />\n              ) : (\n                <ExpandMore />\n              )\n            ) : null}\n            {renderListItemSecondaryAction()}\n          </MUIListItem>\n          {isItemOpen && (\n            <MUIList\n              component=\"div\"\n              disablePadding\n              style={{\n                paddingLeft: 16,\n                ...props.nestedListStyle,\n              }}\n              dense={useDenseLists}\n            >\n              {renderNestedItems()}\n            </MUIList>\n          )}\n        </React.Fragment>\n      );\n    }\n  }\n);\n\n// We support a subset of the props supported by Material-UI v0.x List\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype ListProps = {|\n  children: React.Node,\n  style?: {|\n    overflowY?: 'scroll',\n    flex?: 1,\n    padding?: number,\n  |},\n|};\n\n/**\n * List based on Material-UI List.\n */\nexport class List extends React.Component<ListProps, {||}> {\n  render() {\n    return (\n      <MUIList style={this.props.style} dense={useDenseLists}>\n        {this.props.children}\n      </MUIList>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { PureComponent } from 'react';\nimport { List, ListItem } from '../UI/List';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport { Column, Line } from '../UI/Grid';\nimport Window from '../Utils/Window';\nimport Text from '../UI/Text';\nimport PreferencesContext from './Preferences/PreferencesContext';\nimport {\n  getUpdateStatusLabel,\n  getUpdateButtonLabel,\n  canDownloadUpdate,\n  type UpdateStatus,\n} from './UpdaterTools';\nimport Changelog from './Changelog';\nimport { getIDEVersion, getGDCoreVersion } from '../Version';\n\ntype Props = {\n  open: boolean,\n  onClose: Function,\n  updateStatus: UpdateStatus,\n};\n\ntype State = {|\n  currentTab: string,\n|};\n\nconst styles = {\n  logo: {\n    width: '100%',\n  },\n};\n\n// There must be missing tons of people.\n// If you contributed to GDevelop but you're not in the list, please\n// send a Pull Request on GitHub or open an issue ;)\nconst contributors = [\n  // GitHub contributors\n  {\n    name: 'Victor Levasseur',\n    description:\n      'Numerous contributions to GDevelop core and various extensions',\n  },\n  {\n    name: 'Lizard-13',\n    description:\n      'Numerous contributions to GDevelop (particle engine, bugfixes, new conditions, examples, tutorials...)',\n  },\n  {\n    name: \"Christina 'Castpixel' Antoinette Neofotistou\",\n    description: 'Art and assets for the 8-bit Space Shooter example.',\n    link: 'https://www.patreon.com/castpixel',\n  },\n  { name: 'ale26reg', description: 'Contributions to GDevelop' },\n  { name: 'dos1', description: 'Contributions to GDevelop' },\n  {\n    name: 'Aurélien Vivet',\n    description:\n      'Numerous contributions to GDevelop (Video extension, advanced shapes, bugfixes, new conditions, examples...)',\n    link: 'https://www.witly.fr',\n  },\n  {\n    name: 'Todor Imreorov',\n    description:\n      'Numerous contributions to GDevelop, added Piskel sprite editor and jfxr',\n  },\n  { name: 'brylie', description: 'Contributions to GDevelop' },\n  { name: 'Nnarol', description: 'Contributions to GDevelop' },\n  { name: 'wild-master', description: 'Contributions to GDevelop' },\n  { name: 'RandomShaper', description: 'Contributions to GDevelop' },\n  { name: 'RyanNerd', description: 'Contributions to GDevelop' },\n  { name: 'greater', description: 'Contributions to GDevelop' },\n  { name: 'triptych', description: 'Contributions to GDevelop' },\n  {\n    name: 'Wend1go',\n    description: 'Contributions to GDevelop, Tutorials, Examples',\n  },\n  { name: 'mattiascibien', description: 'Contributions to GDevelop' },\n  { name: 'araujo921', description: 'Contributions to GDevelop' },\n  { name: 'ronnystandtke', description: 'Contributions to GDevelop' },\n  {\n    name: 'Thomas Flecy',\n    description: 'Contributions to GDevelop (original sound object extension)',\n  },\n  {\n    name: 'Arthur Pacaud (arthuro555)',\n    description: 'Contributions to GDevelop and Moderation on the Forum',\n    link: 'https://forum.gdevelop-app.com/u/arthuro555/summary',\n  },\n  {\n    name: 'The Gem Dev',\n    description: 'Contributions to GDevelop and tutorials on Youtube',\n    link: 'https://www.youtube.com/channel/UCsZ4Ue8c94YLJDbGRafCI5Q',\n  },\n\n  // Community members:\n  {\n    name: 'ddabrahim',\n    description: 'Lots of examples bundled with GDevelop',\n    link: 'https://gametemplates.itch.io/',\n  },\n  {\n    name: 'Gametemplates',\n    description: 'Examples bundled with GDevelop',\n    link: 'https://gametemplates.itch.io/',\n  },\n  { name: 'Mats', description: 'Tutorials, Examples' },\n  { name: 'erdo', description: 'Tutorials, Examples' },\n  { name: 'Jubileuksen3', description: 'Tutorials, Examples' },\n  { name: 'LucaTexas', description: 'Tutorials, Examples' },\n  { name: 'Kink', description: 'Forum moderator, tutorials, Examples' },\n  { name: 'RicoTrooper', description: 'Tutorials' },\n  { name: 'kalel', description: 'Tutorials' },\n  { name: 'mtarzaim', description: 'Tutorials' },\n  { name: 'Darkhog', description: 'Examples' },\n  { name: 'Ricardo Graca', description: 'Tutorials, Examples' },\n  { name: 'Diego Schiavon', description: 'Indiegogo Ubuntu contributor' },\n  { name: 'conceptgame', description: 'Indiegogo super contributor' },\n  {\n    name: 'Jose David Cuartas Correa',\n    description:\n      'Author of Digitopolis (a book on how to make games with GDevelop4)',\n  },\n\n  {\n    name: 'François Dumortier',\n    description: 'GDevelop logo design',\n    link: 'http://www.fdumortier.com',\n  },\n  {\n    name: 'Constantine Shvetsov',\n    description: 'Design of all the awesome icons',\n  },\n  {\n    name: 'MillionthVector',\n    description: 'Assets of various examples',\n  },\n];\n\nexport default class AboutDialog extends PureComponent<Props, State> {\n  state = {\n    currentTab: 'about',\n  };\n\n  _openContributePage = () => {\n    Window.openExternalURL('https://gdevelop-app.com/contribute/');\n  };\n\n  _openLink = (link: string) => {\n    if (!link) return;\n\n    Window.openExternalURL(link);\n  };\n\n  _changeTab = (currentTab: string) => {\n    this.setState({ currentTab });\n  };\n\n  render() {\n    const { open, onClose, updateStatus } = this.props;\n    const { currentTab } = this.state;\n    if (!open) return null;\n\n    const updateStatusString = getUpdateStatusLabel(updateStatus.status);\n    const updateButtonLabel = getUpdateButtonLabel(updateStatus.status);\n\n    return (\n      <Dialog\n        actions={[\n          <FlatButton\n            key=\"website\"\n            label={<Trans>GDevelop Website</Trans>}\n            primary={false}\n            onClick={() => Window.openExternalURL('http://gdevelop-app.com')}\n          />,\n          <FlatButton\n            key=\"close\"\n            label={<Trans>Close</Trans>}\n            primary={false}\n            onClick={onClose}\n          />,\n        ]}\n        onRequestClose={onClose}\n        cannotBeDismissed={false}\n        open={open}\n        maxWidth=\"sm\"\n        noMargin\n      >\n        <PreferencesContext.Consumer>\n          {({ values, checkUpdates }) => (\n            <Column noMargin>\n              <img\n                src=\"res/GD-logo.png\"\n                alt=\"GDevelop logo\"\n                style={styles.logo}\n              />\n              <Tabs value={currentTab} onChange={this._changeTab}>\n                <Tab label={<Trans>About GDevelop</Trans>} value=\"about\" />\n                <Tab label={<Trans>What's new?</Trans>} value=\"changelog\" />\n                <Tab label={<Trans>Contributors</Trans>} value=\"contributors\" />\n              </Tabs>\n              {currentTab === 'about' && (\n                <React.Fragment>\n                  <Column>\n                    <Line>\n                      <Text>\n                        <Trans>\n                          GDevelop {getIDEVersion()} based on GDevelop.js{' '}\n                          {getGDCoreVersion()}\n                        </Trans>\n                      </Text>\n                    </Line>\n                    <Line>\n                      <Text>{updateStatusString}</Text>\n                    </Line>\n                    <Line justifyContent=\"center\">\n                      {!!updateStatusString && (\n                        <FlatButton\n                          label={updateButtonLabel}\n                          onClick={() =>\n                            checkUpdates(canDownloadUpdate(updateStatus.status))\n                          }\n                        />\n                      )}\n                    </Line>\n                  </Column>\n                </React.Fragment>\n              )}\n              {currentTab === 'changelog' && (\n                <Column>\n                  <Changelog />\n                </Column>\n              )}\n              {currentTab === 'contributors' && (\n                <React.Fragment>\n                  <Column>\n                    <Text>\n                      <Trans>\n                        GDevelop was created by Florian \"4ian\" Rival.\n                      </Trans>\n                    </Text>\n                    <Text>\n                      <Trans>Contributors, in no particular order:</Trans>\n                    </Text>\n                  </Column>\n                  <List>\n                    {contributors.map(contributor => (\n                      <ListItem\n                        key={contributor.name}\n                        primaryText={contributor.name}\n                        secondaryText={contributor.description}\n                        secondaryTextLines={\n                          contributor.description.length < 30 ? 1 : 2\n                        }\n                        displayLinkButton={contributor.link ? true : false}\n                        onOpenLink={() =>\n                          this._openLink(contributor.link || '')\n                        }\n                      />\n                    ))}\n                  </List>\n                  <Column expand>\n                    <Text>\n                      <Trans>\n                        Thanks to all users of GDevelop! There must be missing\n                        tons of people, please send your name if you've\n                        contributed and you're not listed.\n                      </Trans>\n                    </Text>\n                    <Line alignItems=\"center\" justifyContent=\"center\">\n                      <FlatButton\n                        label={<Trans>Contribute to GDevelop</Trans>}\n                        onClick={this._openContributePage}\n                      />\n                    </Line>\n                  </Column>\n                </React.Fragment>\n              )}\n            </Column>\n          )}\n        </PreferencesContext.Consumer>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport TextField from './TextField';\n\ntype State = {|\n  focused: boolean,\n  text: ?any,\n|};\n\ntype Props = {|\n  onChange: string => void,\n  value: string,\n  commitOnBlur?: boolean,\n  onFocus?: ({\n    currentTarget: {\n      value: string,\n    },\n    preventDefault: () => void,\n  }) => void,\n  onBlur?: ({\n    currentTarget: {\n      value: string,\n    },\n  }) => void,\n  type?: 'text' | 'number',\n\n  // Some TextField props that can be reused:\n  onClick?: () => void,\n  onKeyPress?: (event: SyntheticKeyboardEvent<HTMLInputElement>) => void,\n  onKeyUp?: (event: SyntheticKeyboardEvent<HTMLInputElement>) => void,\n  onKeyDown?: (event: SyntheticKeyboardEvent<HTMLInputElement>) => void,\n  margin?: 'none' | 'dense',\n  disabled?: boolean,\n  errorText?: React.Node,\n  floatingLabelFixed?: boolean,\n  floatingLabelText?: React.Node,\n  fullWidth?: boolean,\n  hintText?: React.Node,\n  helperMarkdownText?: ?string,\n  id?: string,\n  inputStyle?: Object,\n  max?: number,\n  min?: number,\n  multiline?: boolean,\n  name?: string,\n  step?: number,\n  style?: Object,\n  rows?: number,\n  rowsMax?: number,\n  autoFocus?: boolean,\n|};\n\n/**\n * This component works like a material-ui TextField, except that\n * the value passed as props is not forced into the text field when the user\n * is typing. This is useful if the parent component can do modifications on the value:\n * the user won't be interrupted or have the value changed until he blurs the field.\n */\nexport default class SemiControlledTextField extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    focused: false,\n    text: null,\n  };\n\n  _field: ?TextField = null;\n\n  forceSetValue(text: string) {\n    this.setState({ text });\n  }\n\n  forceSetSelection(selectionStart: number, selectionEnd: number) {\n    const input = this.getInputNode();\n    if (input) {\n      input.selectionStart = selectionStart;\n      input.selectionEnd = selectionEnd;\n    }\n  }\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  getInputNode(): ?HTMLInputElement {\n    if (this._field) return this._field.getInputNode();\n  }\n\n  render() {\n    const {\n      value,\n      onChange,\n      commitOnBlur,\n      onFocus,\n      onBlur,\n      type,\n      ...otherProps\n    } = this.props;\n\n    return (\n      // $FlowFixMe\n      <TextField\n        {...otherProps}\n        type={type || 'text'}\n        ref={field => (this._field = field)}\n        value={this.state.focused ? this.state.text : value}\n        onFocus={event => {\n          this.setState({\n            focused: true,\n            text: this.props.value,\n          });\n\n          if (onFocus) onFocus(event);\n        }}\n        onChange={(event, newValue) => {\n          this.setState({\n            text: newValue,\n          });\n\n          if (!commitOnBlur) onChange(newValue);\n        }}\n        onBlur={event => {\n          onChange(event.currentTarget.value);\n          this.setState({\n            focused: false,\n            text: null,\n          });\n\n          if (onBlur) onBlur(event);\n        }}\n      />\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport FlatButton from '../FlatButton';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport Window from '../../Utils/Window';\nimport { getHelpLink } from '../../Utils/HelpLink';\nimport { Trans } from '@lingui/macro';\n\ntype PropsType = {\n  helpPagePath: ?string,\n  label?: React.Node,\n};\n\n/**\n * The button that can be used in any dialog to open a help page\n */\nconst HelpButton = (props: PropsType) => {\n  if (!props.helpPagePath) return null;\n  const helpLink = getHelpLink(props.helpPagePath);\n  if (!helpLink) return null;\n\n  return (\n    <FlatButton\n      onClick={() => {\n        if (props.helpPagePath) {\n          Window.openExternalURL(helpLink);\n        }\n      }}\n      target=\"_blank\"\n      label={props.label || <Trans>Help</Trans>}\n      icon={<HelpOutline />}\n    />\n  );\n};\n\nexport default HelpButton;\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { TreeTableRow, TreeTableCell } from '../UI/TreeTable';\nimport DragHandle from '../UI/DragHandle';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport Checkbox from '../UI/Checkbox';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport SubdirectoryArrowRight from '@material-ui/icons/SubdirectoryArrowRight';\nimport TextField from '../UI/TextField';\nimport IconButton from '../UI/IconButton';\nimport Replay from '@material-ui/icons/Replay';\nimport styles from './styles';\nimport { type VariableOrigin } from './VariablesList.flow';\nimport Text from '../UI/Text';\n\n//TODO: Refactor into TreeTable?\nconst Indent = ({ width }) => (\n  <div style={{ ...styles.indent, width }}>\n    <SubdirectoryArrowRight htmlColor={styles.indentIconColor} />\n  </div>\n);\n\ntype Props = {|\n  name: string,\n  variable: gdVariable,\n  depth: number,\n  errorText?: ?string,\n  commitVariableValueOnBlur: boolean,\n  onBlur: () => void,\n  onRemove: () => void,\n  onAddChild: () => void,\n  onChangeValue: string => void,\n  onResetToDefaultValue: () => void,\n  children?: React.Node,\n  showHandle: boolean,\n  showSelectionCheckbox: boolean,\n  isSelected: boolean,\n  onSelect: boolean => void,\n  origin: VariableOrigin,\n|};\n\nconst VariableRow = ({\n  name,\n  variable,\n  depth,\n  errorText,\n  onBlur,\n  commitVariableValueOnBlur,\n  onRemove,\n  onAddChild,\n  onChangeValue,\n  onResetToDefaultValue,\n  children,\n  showHandle,\n  showSelectionCheckbox,\n  isSelected,\n  onSelect,\n  origin,\n}: Props) => {\n  const isStructure = variable.isStructure();\n  const key = '' + depth + name;\n\n  const limitEditing = origin === 'parent' || origin === 'inherited';\n\n  const columns = [\n    <TreeTableCell key=\"name\" expand>\n      {depth > 0 && (\n        <Indent width={(depth + 1) * styles.tableChildIndentation} />\n      )}\n      {depth === 0 && showHandle && <DragHandle />}\n      {showSelectionCheckbox && !limitEditing && (\n        <Checkbox\n          checked={isSelected}\n          onCheck={(e, checked) => onSelect(checked)}\n        />\n      )}\n      <TextField\n        margin=\"none\"\n        style={{\n          fontStyle: origin !== 'inherited' ? 'normal' : 'italic',\n        }}\n        fullWidth\n        name={key + 'name'}\n        defaultValue={name}\n        errorText={errorText}\n        onBlur={onBlur}\n        disabled={origin === 'parent'}\n      />\n    </TreeTableCell>,\n  ];\n  if (!isStructure) {\n    columns.push(\n      <TreeTableCell key=\"value\" expand>\n        <SemiControlledTextField\n          margin=\"none\"\n          commitOnBlur={commitVariableValueOnBlur}\n          fullWidth\n          name={key + 'value'}\n          value={variable.getString()}\n          onChange={text => {\n            if (variable.getString() !== text) {\n              onChangeValue(text);\n            }\n          }}\n          multiline\n          disabled={origin === 'parent' && depth !== 0}\n        />\n      </TreeTableCell>\n    );\n  } else {\n    columns.push(\n      <TreeTableCell\n        expand\n        key=\"value\"\n        style={limitEditing ? styles.fadedButton : undefined}\n      >\n        <Text noMargin>(Structure)</Text>\n      </TreeTableCell>\n    );\n  }\n  columns.push(\n    <TreeTableCell key=\"tools\" style={styles.toolColumn}>\n      {origin === 'inherited' && depth === 0 && (\n        <IconButton\n          size=\"small\"\n          onClick={onResetToDefaultValue}\n          style={isStructure ? undefined : styles.fadedButton}\n          tooltip={t`Reset`}\n        >\n          <Replay />\n        </IconButton>\n      )}\n      {!(origin === 'inherited' && depth === 0) && origin !== 'parent' && (\n        <IconButton\n          size=\"small\"\n          onClick={onAddChild}\n          style={isStructure ? undefined : styles.fadedButton}\n          tooltip={t`Add child variable`}\n        >\n          <AddCircle />\n        </IconButton>\n      )}\n    </TreeTableCell>\n  );\n\n  return (\n    <div>\n      <TreeTableRow>{columns}</TreeTableRow>\n      {children}\n    </div>\n  );\n};\n\nexport default VariableRow;\n","// @flow\n/**\n * Export functions to manipulate a selection of objects.\n */\n\nimport values from 'lodash/values';\n\ntype ObjectType = { ptr: number };\n\ntype SelectionState<T> = {\n  [number]: ?T,\n};\n\nexport const getInitialSelection = () => ({});\n\nexport const clearSelection = () => getInitialSelection();\n\nexport const getSelection = <T: ObjectType>(\n  selection: SelectionState<T>\n): Array<T> => values(selection).filter(value => !!value);\n\nexport const addToSelection = <T: ObjectType>(\n  selection: SelectionState<T>,\n  object: T,\n  select: boolean = true\n): SelectionState<T> => {\n  console.log(object, select);\n  return {\n    ...selection,\n    [object.ptr]: select ? object : null,\n  };\n};\n\nexport const isSelected = <T: ObjectType>(\n  selection: SelectionState<T>,\n  object: T\n): boolean => !!selection[object.ptr];\n\nexport const hasSelection = <T: ObjectType>(\n  selection: SelectionState<T>\n): boolean => {\n  return !!values(selection).filter(value => !!value).length;\n};\n","export const CLIPBOARD_KIND = 'Variables';\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport type { ResourceKind } from '../../ResourcesList/ResourceSource.flow';\nimport { type EditorMosaicNode } from '../../UI/EditorMosaic';\nimport { type FileMetadataAndStorageProviderName } from '../../ProjectsStorage';\nimport { type ShortcutMap } from '../../KeyboardShortcuts/DefaultShortcuts';\nimport { type CommandName } from '../../CommandPalette/CommandsList';\nimport optionalRequire from '../../Utils/OptionalRequire';\nconst electron = optionalRequire('electron');\n\nexport type AlertMessageIdentifier =\n  | 'default-additional-work'\n  | 'automatic-lighting-layer'\n  | 'object-moved-in-lighting-layer'\n  | 'use-non-smoothed-textures'\n  | 'use-nearest-scale-mode'\n  | 'maximum-fps-too-low'\n  | 'minimum-fps-too-low'\n  | 'function-extractor-explanation'\n  | 'events-based-behavior-explanation'\n  | 'empty-events-based-behavior-explanation'\n  | 'too-much-effects'\n  | 'effects-usage'\n  | 'lighting-layer-usage'\n  | 'resource-properties-panel-explanation'\n  | 'instance-drag-n-drop-explanation'\n  | 'objects-panel-explanation'\n  | 'instance-properties-panel-explanation'\n  | 'layers-panel-explanation'\n  | 'instances-panel-explanation'\n  | 'physics2-shape-collisions'\n  | 'edit-instruction-explanation'\n  | 'lifecycle-events-function-included-only-if-extension-used'\n  | 'p2p-broker-recommendation'\n  | 'command-palette-shortcut'\n  | 'asset-installed-explanation'\n  | 'extension-installed-explanation';\n\nexport type EditorMosaicName =\n  | 'scene-editor'\n  | 'scene-editor-small'\n  | 'debugger'\n  | 'resources-editor'\n  | 'events-functions-extension-editor';\n\nexport const allAlertMessages: Array<{\n  key: AlertMessageIdentifier,\n  label: React.Node,\n}> = [\n  {\n    key: 'use-non-smoothed-textures',\n    label: <Trans>Using non smoothed textures</Trans>,\n  },\n  {\n    key: 'use-nearest-scale-mode',\n    label: <Trans>Using Nearest Scale Mode</Trans>,\n  },\n  {\n    key: 'maximum-fps-too-low',\n    label: <Trans>Maximum Fps is too low</Trans>,\n  },\n  {\n    key: 'minimum-fps-too-low',\n    label: <Trans>Minimum Fps is too low</Trans>,\n  },\n  {\n    key: 'function-extractor-explanation',\n    label: <Trans>Using function extractor</Trans>,\n  },\n  {\n    key: 'events-based-behavior-explanation',\n    label: <Trans>Using events based behavior</Trans>,\n  },\n  {\n    key: 'empty-events-based-behavior-explanation',\n    label: <Trans>Using empty events based behavior</Trans>,\n  },\n  {\n    key: 'too-much-effects',\n    label: <Trans>Using too much effects</Trans>,\n  },\n  {\n    key: 'effects-usage',\n    label: <Trans>Using effects</Trans>,\n  },\n  {\n    key: 'lighting-layer-usage',\n    label: <Trans>Using lighting layer</Trans>,\n  },\n  {\n    key: 'automatic-lighting-layer',\n    label: <Trans>Automatic creation of lighting layer</Trans>,\n  },\n  {\n    key: 'object-moved-in-lighting-layer',\n    label: <Trans>Light object automatically put in lighting layer</Trans>,\n  },\n  {\n    key: 'resource-properties-panel-explanation',\n    label: <Trans>Using the resource properties panel</Trans>,\n  },\n  {\n    key: 'instance-drag-n-drop-explanation',\n    label: <Trans>Using instance drag'n'drop</Trans>,\n  },\n  {\n    key: 'objects-panel-explanation',\n    label: <Trans>Using the objects panel</Trans>,\n  },\n  {\n    key: 'instance-properties-panel-explanation',\n    label: <Trans>Using the instance properties panel</Trans>,\n  },\n  {\n    key: 'layers-panel-explanation',\n    label: <Trans>Using the layers panel</Trans>,\n  },\n  {\n    key: 'instances-panel-explanation',\n    label: <Trans>Using the instances panel</Trans>,\n  },\n  {\n    key: 'physics2-shape-collisions',\n    label: <Trans>Collisions handling with the Physics engine</Trans>,\n  },\n  {\n    key: 'edit-instruction-explanation',\n    label: <Trans>How to edit instructions</Trans>,\n  },\n  {\n    key: 'lifecycle-events-function-included-only-if-extension-used',\n    label: <Trans>Lifecycle functions only included when extension used</Trans>,\n  },\n  {\n    key: 'p2p-broker-recommendation',\n    label: <Trans>Peer to peer broker server recommendation</Trans>,\n  },\n  {\n    key: 'command-palette-shortcut',\n    label: <Trans>Command palette keyboard shortcut</Trans>,\n  },\n  {\n    key: 'asset-installed-explanation',\n    label: (\n      <Trans>Explanation after an object is installed from the store</Trans>\n    ),\n  },\n];\n\n/**\n * All the preferences of GDevelop. To add a new preference, add it into this\n * type and add a setter into `Preferences` type. Then, update the\n * preference dialog.\n */\nexport type PreferencesValues = {|\n  language: string,\n  autoDownloadUpdates: boolean,\n  themeName: string,\n  codeEditorThemeName: string,\n  hiddenAlertMessages: { [AlertMessageIdentifier]: boolean },\n  hiddenTutorialHints: { [string]: boolean },\n  autoDisplayChangelog: boolean,\n  lastLaunchedVersion: ?string,\n  eventsSheetShowObjectThumbnails: boolean,\n  autosaveOnPreview: boolean,\n  useNewInstructionEditorDialog: boolean,\n  useGDJSDevelopmentWatcher: boolean,\n  eventsSheetUseAssignmentOperators: boolean,\n  showEffectParameterNames: boolean,\n  projectLastUsedPaths: { [string]: { [ResourceKind]: string } },\n  defaultEditorMosaicNodes: { [EditorMosaicName]: ?EditorMosaicNode },\n  recentProjectFiles: Array<FileMetadataAndStorageProviderName>,\n  autoOpenMostRecentProject: boolean,\n  hasProjectOpened: boolean,\n  userShortcutMap: ShortcutMap,\n  newObjectDialogDefaultTab: 'asset-store' | 'new-object',\n  isMenuBarHiddenInPreview: boolean,\n|};\n\n/**\n * Type containing all the preferences of GDevelop and their setters.\n */\nexport type Preferences = {|\n  values: PreferencesValues,\n  setLanguage: (language: string) => void,\n  setThemeName: (themeName: string) => void,\n  setCodeEditorThemeName: (codeEditorThemeName: string) => void,\n  setAutoDownloadUpdates: (enabled: boolean) => void,\n  checkUpdates: (forceDownload?: boolean) => void,\n  setAutoDisplayChangelog: (enabled: boolean) => void,\n  showAlertMessage: (identifier: AlertMessageIdentifier, show: boolean) => void,\n  showTutorialHint: (identifier: string, show: boolean) => void,\n  verifyIfIsNewVersion: () => boolean,\n  setEventsSheetShowObjectThumbnails: (enabled: boolean) => void,\n  setAutosaveOnPreview: (enabled: boolean) => void,\n  setUseNewInstructionEditorDialog: (enabled: boolean) => void,\n  setUseGDJSDevelopmentWatcher: (enabled: boolean) => void,\n  setEventsSheetUseAssignmentOperators: (enabled: boolean) => void,\n  setShowEffectParameterNames: (enabled: boolean) => void,\n  getLastUsedPath: (project: gdProject, kind: ResourceKind) => string,\n  setLastUsedPath: (\n    project: gdProject,\n    kind: ResourceKind,\n    path: string\n  ) => void,\n  getDefaultEditorMosaicNode: (name: EditorMosaicName) => ?EditorMosaicNode,\n  setDefaultEditorMosaicNode: (\n    name: EditorMosaicName,\n    node: ?EditorMosaicNode\n  ) => void,\n  getRecentProjectFiles: () => Array<FileMetadataAndStorageProviderName>,\n  insertRecentProjectFile: (\n    fileMetadata: FileMetadataAndStorageProviderName\n  ) => void,\n  removeRecentProjectFile: (\n    fileMetadata: FileMetadataAndStorageProviderName\n  ) => void,\n  getAutoOpenMostRecentProject: () => boolean,\n  setAutoOpenMostRecentProject: (enabled: boolean) => void,\n  hadProjectOpenedDuringLastSession: () => boolean,\n  setHasProjectOpened: (enabled: boolean) => void,\n  resetShortcutsToDefault: () => void,\n  setShortcutForCommand: (commandName: CommandName, shortcut: string) => void,\n  getNewObjectDialogDefaultTab: () => 'asset-store' | 'new-object',\n  setNewObjectDialogDefaultTab: ('asset-store' | 'new-object') => void,\n  getIsMenuBarHiddenInPreview: () => boolean,\n  setIsMenuBarHiddenInPreview: (enabled: boolean) => void,\n|};\n\nexport const initialPreferences = {\n  values: {\n    language: 'en',\n    autoDownloadUpdates: true,\n    themeName: electron\n      ? electron.remote.nativeTheme.shouldUseDarkColors\n        ? 'Nord'\n        : 'GDevelop default'\n      : 'GDevelop default',\n    codeEditorThemeName: 'vs-dark',\n    hiddenAlertMessages: {},\n    hiddenTutorialHints: {},\n    autoDisplayChangelog: true,\n    lastLaunchedVersion: undefined,\n    eventsSheetShowObjectThumbnails: true,\n    autosaveOnPreview: true,\n    useNewInstructionEditorDialog: true,\n    useGDJSDevelopmentWatcher: true,\n    eventsSheetUseAssignmentOperators: false,\n    showEffectParameterNames: false,\n    projectLastUsedPaths: {},\n    defaultEditorMosaicNodes: {},\n    recentProjectFiles: [],\n    autoOpenMostRecentProject: true,\n    hasProjectOpened: false,\n    userShortcutMap: {},\n    newObjectDialogDefaultTab: electron ? 'new-object' : 'asset-store',\n    isMenuBarHiddenInPreview: true,\n  },\n  setLanguage: () => {},\n  setThemeName: () => {},\n  setCodeEditorThemeName: () => {},\n  setAutoDownloadUpdates: () => {},\n  checkUpdates: () => {},\n  setAutoDisplayChangelog: () => {},\n  showAlertMessage: (identifier: AlertMessageIdentifier, show: boolean) => {},\n  showTutorialHint: (identifier: string, show: boolean) => {},\n  verifyIfIsNewVersion: () => false,\n  setEventsSheetShowObjectThumbnails: () => {},\n  setAutosaveOnPreview: () => {},\n  setUseNewInstructionEditorDialog: (enabled: boolean) => {},\n  setUseGDJSDevelopmentWatcher: (enabled: boolean) => {},\n  setEventsSheetUseAssignmentOperators: (enabled: boolean) => {},\n  setShowEffectParameterNames: (enabled: boolean) => {},\n  getLastUsedPath: (project: gdProject, kind: ResourceKind) => '',\n  setLastUsedPath: (project: gdProject, kind: ResourceKind, path: string) => {},\n  getDefaultEditorMosaicNode: (name: EditorMosaicName) => null,\n  setDefaultEditorMosaicNode: (\n    name: EditorMosaicName,\n    node: ?EditorMosaicNode\n  ) => {},\n  getRecentProjectFiles: () => [],\n  insertRecentProjectFile: (\n    fileMetadata: FileMetadataAndStorageProviderName\n  ) => {},\n  removeRecentProjectFile: (\n    fileMetadata: FileMetadataAndStorageProviderName\n  ) => {},\n  getAutoOpenMostRecentProject: () => true,\n  setAutoOpenMostRecentProject: () => {},\n  hadProjectOpenedDuringLastSession: () => false,\n  setHasProjectOpened: () => {},\n  resetShortcutsToDefault: () => {},\n  setShortcutForCommand: (commandName: CommandName, shortcut: string) => {},\n  getNewObjectDialogDefaultTab: () => 'asset-store',\n  setNewObjectDialogDefaultTab: () => {},\n  getIsMenuBarHiddenInPreview: () => true,\n  setIsMenuBarHiddenInPreview: () => {},\n};\n\nconst PreferencesContext = React.createContext<Preferences>(initialPreferences);\n\nexport default PreferencesContext;\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\n\nclass UrlsCache {\n  projectCache: { [number]: { [string]: string } } = {};\n\n  _getProjectCache(project: gdProject) {\n    const cache = this.projectCache[project.ptr];\n    if (!cache) {\n      return (this.projectCache[project.ptr] = {});\n    }\n\n    return cache;\n  }\n\n  getCachedUrl(project: gdProject, url: string): ?string {\n    const cache = this._getProjectCache(project);\n    return cache[url];\n  }\n\n  cacheUrl(project: gdProject, url: string): string {\n    const cache = this._getProjectCache(project);\n    return (cache[url] = url);\n  }\n\n  burstUrl(project: gdProject, url: string) {\n    const cache = this._getProjectCache(project);\n    delete cache[url];\n  }\n\n  cacheLocalFileUrl(\n    project: gdProject,\n    filename: string,\n    systemFilename: string,\n    disableCacheBurst: boolean\n  ): string {\n    const cache = this._getProjectCache(project);\n\n    if (!disableCacheBurst) {\n      // The URL is cached with an extra \"cache-bursting\" parameter.\n      // If the cache is emptied or changed, local files will have another\n      // value for this parameter, forcing the browser to reload the images.\n      return (cache[filename] = `${systemFilename}?cache=${Date.now()}`);\n    } else {\n      return (cache[filename] = systemFilename);\n    }\n  }\n}\n\ntype LoadingOptions = {|\n  disableCacheBurst?: boolean,\n  isResourceForPixi?: boolean,\n|};\n\nconst addSearchParameterToUrl = (\n  url: string,\n  urlEncodedParameterName: string,\n  urlEncodedValue: string\n) => {\n  const separator = url.indexOf('?') === -1 ? '?' : '&';\n  return url + separator + urlEncodedParameterName + '=' + urlEncodedValue;\n};\n\nconst isLocalFile = (urlOrFilename: string) => {\n  return (\n    urlOrFilename.indexOf('data:') !== 0 &&\n    urlOrFilename.indexOf('http://') !== 0 &&\n    urlOrFilename.indexOf('https://') !== 0 &&\n    urlOrFilename.indexOf('ftp://') !== 0\n  );\n};\n\n/**\n * A class globally used in the whole IDE to get URLs to resources of games\n * (notably images).\n */\nexport default class ResourcesLoader {\n  static _cache = new UrlsCache();\n\n  /**\n   * Remove the specified resources resolved URLs from the cache. Useful if the\n   * file represented by these resources has changed. This force these local files to be loaded again.\n   */\n  static burstUrlsCacheForResources(\n    project: gdProject,\n    resourcesNames: Array<string>\n  ) {\n    const resourcesManager = project.getResourcesManager();\n    resourcesNames.forEach(resourceName => {\n      if (resourcesManager.hasResource(resourceName)) {\n        ResourcesLoader._cache.burstUrl(\n          project,\n          resourcesManager.getResource(resourceName).getFile()\n        );\n      }\n    });\n  }\n\n  /**\n   * Re-create a new cache for URLs. Call this to force local\n   * file to be loaded again.\n   */\n  static burstAllUrlsCache() {\n    ResourcesLoader._cache = new UrlsCache();\n  }\n\n  /**\n   * Get the fully qualified URL/filename for a URL/filename relative to the project.\n   */\n  static getFullUrl(\n    project: gdProject,\n    urlOrFilename: string,\n    { isResourceForPixi, disableCacheBurst }: LoadingOptions\n  ): string {\n    if (!!electron && isLocalFile(urlOrFilename)) {\n      const cachedUrl = ResourcesLoader._cache.getCachedUrl(\n        project,\n        urlOrFilename\n      );\n      if (cachedUrl) return cachedUrl;\n\n      // Support local filesystem with Electron\n      const file = project.getProjectFile();\n      const projectPath = path.dirname(file);\n      const resourceAbsolutePath = path\n        .resolve(projectPath, urlOrFilename)\n        .replace(/\\\\/g, '/');\n\n      console.info('Caching resolved local filename:', resourceAbsolutePath);\n      return this._cache.cacheLocalFileUrl(\n        project,\n        urlOrFilename,\n        'file://' + resourceAbsolutePath,\n        !!disableCacheBurst\n      );\n    }\n\n    let urlWithParameters = urlOrFilename;\n    if (isResourceForPixi) {\n      // To avoid strange/hard to understand CORS issues, we add a dummy parameter.\n      // By doing so, we force browser to consider this URL as different than the one traditionally\n      // used to render the resource in the editor (usually as an `<img>` or as a background image).\n      // If we don't add this distinct parameter, it can happen that browsers fail to load the image\n      // as it's already in the **browser cache** but with slightly different request parameters -\n      // making the CORS checks fail (even if it's coming from the browser cache).\n      //\n      // It's happening sometimes (according to loading order probably) in Chrome and (more often)\n      // in Safari. It might be linked to Amazon S3 + CloudFront that \"doesn't support the Vary: Origin header\".\n      // To be safe, we entirely avoid the issue with this parameter, making the browsers consider\n      // the resources for use in Pixi.js and for the rest of the editor as entirely separate.\n      //\n      // See:\n      // - https://stackoverflow.com/questions/26140487/cross-origin-amazon-s3-not-working-using-chrome\n      // - https://stackoverflow.com/questions/20253472/cors-problems-with-amazon-s3-on-the-latest-chomium-and-google-canary\n      // - https://stackoverflow.com/a/20299333\n      //\n      // Search for \"cors-cache-workaround\" in the codebase for the same workarounds.\n      urlWithParameters = addSearchParameterToUrl(\n        urlWithParameters,\n        'gdUsage', // Arbitrary parameter name to designate that this is being used for Pixi.js\n        'pixi'\n      );\n    }\n\n    const cachedUrl = ResourcesLoader._cache.getCachedUrl(\n      project,\n      urlWithParameters\n    );\n    if (cachedUrl) return cachedUrl;\n\n    console.info('Caching resolved url:', urlWithParameters);\n    return this._cache.cacheUrl(project, urlWithParameters);\n  }\n\n  /**\n   * Get the fully qualified URL/filename associated with the given resource, with potential\n   * changes to accomodate browsers CORS/cache.\n   */\n  static getResourceFullUrl(\n    project: gdProject,\n    resourceName: string,\n    options: LoadingOptions\n  ) {\n    if (project.getResourcesManager().hasResource(resourceName)) {\n      const resourceRelativePath = project\n        .getResourcesManager()\n        .getResource(resourceName)\n        .getFile();\n      return ResourcesLoader.getFullUrl(project, resourceRelativePath, options);\n    }\n\n    return resourceName;\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  maxWidth: {\n    maxWidth: '100%',\n  },\n};\n\ntype Props = {|\n  children: ?React.Node,\n  maxWidth?: boolean,\n  width?: number | string,\n  /** Sometimes required on Safari */\n  noFullHeight?: boolean,\n  noExpand?: boolean,\n|};\n\n/**\n * This is the component to be used to display the standard\n * background of editor/windows/dialogs.\n */\nconst Background = (props: Props) => (\n  <Paper\n    square\n    style={{\n      ...styles.container,\n      height: props.noFullHeight ? undefined : '100%',\n      width: props.width ? props.width : undefined,\n      flex: props.noExpand ? undefined : 1,\n      ...(props.maxWidth ? styles.maxWidth : undefined),\n    }}\n  >\n    {props.children}\n  </Paper>\n);\n\nexport default Background;\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { I18n } from '@lingui/react';\nimport TextField from '@material-ui/core/TextField';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport { computeTextFieldStyleProps } from './TextField';\nimport { MarkdownText } from './MarkdownText';\n\ntype ValueProps = {|\n  value: number | string,\n  // event and index should not be used, and be removed eventually\n  onChange?: (\n    event: {| target: {| value: string |} |},\n    index: number,\n    text: string // Note that even for number values, a string is returned\n  ) => void,\n|};\n\n// We support a subset of the props supported by Material-UI v0.x SelectField\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  ...ValueProps,\n  fullWidth?: boolean,\n  children: React.Node,\n  disabled?: boolean,\n\n  style?: {\n    flex?: 1,\n    width?: 'auto',\n  },\n  margin?: 'none' | 'dense',\n\n  floatingLabelText?: React.Node,\n  helperMarkdownText?: ?string,\n\n  // If a hint text is specified, will be shown as an option for the empty\n  // value (\"\"), disabled.\n  hintText?: MessageDescriptor,\n|};\n\nconst INVALID_VALUE = '';\n\n/**\n * A select field based on Material-UI select field.\n * To be used with `SelectOption`.\n */\nexport default class SelectField extends React.Component<Props, {||}> {\n  _input = React.createRef<HTMLInputElement>();\n\n  focus() {\n    if (this._input.current) this._input.current.focus();\n  }\n\n  render() {\n    const { props } = this;\n    const onChange = props.onChange || undefined;\n\n    // Dig into children props to see if the current value is valid or not.\n    let hasValidValue = true;\n    const childrenValues = React.Children.map(props.children, child => {\n      if (child === null || !child.props) return null;\n\n      return child.props.value;\n    });\n    if (!childrenValues) {\n      console.error(\n        'SelectField has been passed no or invalid children. Only SelectOption and null are supported.'\n      );\n    } else {\n      hasValidValue =\n        childrenValues.filter(childValue => childValue === props.value)\n          .length !== 0;\n    }\n    const displayedValue = hasValidValue ? props.value : INVALID_VALUE;\n\n    const helperText = props.helperMarkdownText ? (\n      <MarkdownText source={props.helperMarkdownText} />\n    ) : null;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <TextField\n            select\n            {...computeTextFieldStyleProps(props)}\n            disabled={props.disabled}\n            fullWidth={props.fullWidth}\n            label={props.floatingLabelText}\n            helperText={helperText}\n            value={displayedValue}\n            onChange={\n              onChange\n                ? event => {\n                    onChange(event, -1, event.target.value);\n                  }\n                : undefined\n            }\n            InputLabelProps={{\n              shrink: true,\n            }}\n            SelectProps={{\n              native: true,\n            }}\n            style={props.style}\n            inputRef={this._input}\n          >\n            {!hasValidValue ? (\n              <option value={INVALID_VALUE} disabled>\n                {props.hintText\n                  ? i18n._(props.hintText)\n                  : i18n._(t`Choose an option`)}\n              </option>\n            ) : null}\n            {props.children}\n          </TextField>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { I18n } from '@lingui/react';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\n\n// We support a subset of the props supported by Material-UI v0.x MenuItem\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  value: string | number | boolean,\n  primaryText: MessageDescriptor,\n  disabled?: boolean,\n|};\n\n/**\n * A native select option to be used with `SelectField`.\n */\nexport default class SelectOption extends React.Component<Props, {||}> {\n  render() {\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <option value={this.props.value} disabled={this.props.disabled}>\n            {i18n._(this.props.primaryText)}\n          </option>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Info from '@material-ui/icons/Info';\nimport Warning from '@material-ui/icons/Warning';\nimport Error from '@material-ui/icons/Error';\nimport { Spacer, Line, Column } from './Grid';\nimport FlatButton from './FlatButton';\nimport Text from './Text';\nimport GDevelopThemeContext from './Theme/ThemeContext';\nimport { ResponsiveLineStackLayout } from './Layout';\n\nconst styles = {\n  icon: { width: 28, height: 28, marginRight: 10, marginLeft: 10 },\n  content: { flex: 1 },\n};\n\ntype Props = {|\n  kind: 'info' | 'warning' | 'error',\n  children: React.Node,\n  onHide?: () => void,\n  renderLeftIcon?: () => React.Node,\n  renderRightButton?: () => React.Node,\n|};\n\n/**\n * Show an hint, warning or other message. If you want to allow the user\n * to permanently hide the hint/alert/message, see DismissableAlertMessage.\n */\nconst AlertMessage = ({\n  kind,\n  children,\n  onHide,\n  renderRightButton,\n  renderLeftIcon,\n}: Props) => {\n  const gdevelopTheme = React.useContext(GDevelopThemeContext);\n\n  return (\n    <Paper elevation={10} square>\n      <Column expand>\n        <ResponsiveLineStackLayout\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          noMargin\n        >\n          <Line noMargin alignItems=\"center\">\n            {renderLeftIcon ? (\n              <React.Fragment>\n                {renderLeftIcon()}\n                <Spacer />\n                <Spacer />\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {kind === 'info' && <Info style={styles.icon} />}\n                {kind === 'warning' && (\n                  <Warning\n                    style={{\n                      ...styles.icon,\n                      color: gdevelopTheme.message.warning,\n                    }}\n                  />\n                )}\n                {kind === 'error' && (\n                  <Error\n                    style={{\n                      ...styles.icon,\n                      color: gdevelopTheme.message.error,\n                    }}\n                  />\n                )}\n              </React.Fragment>\n            )}\n            <Text style={styles.content}>{children}</Text>\n          </Line>\n          <ResponsiveLineStackLayout noMargin alignItems=\"center\">\n            {renderRightButton && renderRightButton()}\n            {onHide && (\n              <FlatButton\n                label={<Trans>Hide</Trans>}\n                onClick={() => onHide()}\n              />\n            )}\n          </ResponsiveLineStackLayout>\n        </ResponsiveLineStackLayout>\n      </Column>\n    </Paper>\n  );\n};\n\nexport default AlertMessage;\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = {\n  containerStyle: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    padding: 10,\n  },\n};\n\nexport default props => (\n  <div style={{ ...styles.containerStyle, ...props.style }}>\n    <CircularProgress size={40} />\n  </div>\n);\n","// @flow\n\n// These functions are very simple, but are there to ensure consistency\n// in the codebase when dealing with keys.\n\ntype SupportedEvent = KeyboardEvent | SyntheticKeyboardEvent<any>;\n\n/**\n * Check if the user asked to close/cancel what is being edited.\n */\nexport const shouldCloseOrCancel = (event: SupportedEvent) => {\n  return event.key === 'Escape';\n};\n\n/**\n * Check if the user asked to validate what is being edited.\n */\nexport const shouldValidate = (event: SupportedEvent) => {\n  return event.key === 'Enter';\n};\n\n/**\n * Check if the user asked to activate something.\n */\nexport const shouldActivate = (event: SupportedEvent) => {\n  return event.key === 'Enter' || event.key === ' ';\n};\n\n/**\n * Check if the user asked to go to the next field.\n * Note that in most case, this should be automatically handled by the browser\n * (or material-ui), and using this should not be needed.\n */\nexport const shouldFocusNextField = (event: SupportedEvent) => {\n  return event.key === 'Tab' && !event.shiftKey;\n};\n\n/**\n * Check if the user asked to go to the previous field.\n * Note that in most case, this should be automatically handled by the browser\n * (or material-ui), and using this should not be needed.\n */\nexport const shouldFocusPreviousField = (event: SupportedEvent) => {\n  return event.key === 'Tab' && event.shiftKey;\n};\n","// @flow\n\nexport default (\n  name /*:string */,\n  exists /*:(string) => boolean */,\n  prefix /*: string */ = ''\n) => {\n  if (!exists(name)) return name;\n\n  let potentialName = prefix + name;\n  for (let i = 2; exists(potentialName); ++i) {\n    potentialName = prefix + name + i;\n  }\n\n  return potentialName;\n};\n","// @flow\nexport const selectableArea = 'selectable';\nexport const selectedArea = 'selected';\nexport const icon = 'icon';\n\nexport const largeSelectableArea = 'large-selectable';\nexport const largeSelectedArea = 'large-selected';\n\nexport const executableEventContainer = 'executable-event-container';\nexport const actionsContainer = 'actions-container';\nexport const conditionsContainer = 'conditions-container';\nexport const subInstructionsContainer = 'sub-instructions-container';\nexport const smallWidthContainer = 'small-width-container';\nexport const instructionParameter = 'instruction-parameter';\nexport const instructionInvalidParameter = 'instruction-invalid-parameter';\nexport const instructionMissingParameter = 'instruction-missing-parameter';\nexport const disabledText = 'disabled-text';\n\nexport const background = 'background';\n\nexport const eventsTree = 'events-tree';\nexport const eventsTreeWithSearchResults = 'with-search-results';\n\nexport const dropIndicator = 'drop-indicator';\nexport const cantDropIndicator = 'cant-drop-indicator';\n\nexport const linkContainer = 'link-container';\n\nexport const nameAndIconContainer = 'name-and-icon-container';\n","// @flow\n\nconst gd: libGDevelop = global.gd;\n\n/**\n * Tool function to save a serializable object to a JS object.\n * Most gd.* objects are \"serializable\", meaning they have a serializeTo\n * and unserializeFrom method.\n *\n * @param {*} serializable\n * @param {*} methodName The name of the serialization method. \"unserializeFrom\" by default\n */\nexport function serializeToJSObject(\n  serializable: gdSerializable,\n  methodName: string = 'serializeTo'\n) {\n  const serializedElement = new gd.SerializerElement();\n  serializable[methodName](serializedElement);\n  const object = JSON.parse(gd.Serializer.toJSON(serializedElement));\n  serializedElement.delete();\n\n  return object;\n}\n\n/**\n * Tool function to save a serializable object to a JSON.\n * Most gd.* objects are \"serializable\", meaning they have a serializeTo\n * and unserializeFrom method.\n *\n * @param {*} serializable\n * @param {*} methodName The name of the serialization method. \"unserializeFrom\" by default\n */\nexport function serializeToJSON(\n  serializable: gdSerializable,\n  methodName: string = 'serializeTo'\n): string {\n  const serializedElement = new gd.SerializerElement();\n  serializable[methodName](serializedElement);\n  const json = gd.Serializer.toJSON(serializedElement);\n  serializedElement.delete();\n\n  return json;\n}\n\n/**\n * Tool function to restore a serializable object from a JS object.\n * Most gd.* objects are \"serializable\", meaning they have a serializeTo\n * and unserializeFrom method.\n * @param {*} serializable A gd.* object to restore\n * @param {*} object The JS object to be used to restore the serializable.\n * @param {*} methodName The name of the unserialization method. \"unserializeFrom\" by default\n * @param {*} optionalProject The project to pass as argument for unserialization\n */\nexport function unserializeFromJSObject(\n  serializable: gdSerializable,\n  object: Object,\n  methodName: string = 'unserializeFrom',\n  optionalProject: ?gdProject = undefined\n) {\n  const serializedElement = gd.Serializer.fromJSObject(object);\n  if (!optionalProject) {\n    serializable[methodName](serializedElement);\n  } else {\n    // It's not uncommon for unserializeFrom methods of gd.* classes\n    // to require the project to be passed as first argument.\n    serializable[methodName](optionalProject, serializedElement);\n  }\n  serializedElement.delete();\n}\n","// @flow\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport IconButton from './IconButton';\nimport TextField from './TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Close from '@material-ui/icons/Close';\nimport Search from '@material-ui/icons/Search';\nimport FilterList from '@material-ui/icons/FilterList';\nimport ElementWithMenu from './Menu/ElementWithMenu';\nimport ThemeConsumer from './Theme/ThemeConsumer';\nimport HelpIcon from './HelpIcon';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport { useScreenType } from './Reponsive/ScreenTypeMeasurer';\nimport { shouldValidate } from './KeyboardShortcuts/InteractionKeys';\n\ntype Props = {|\n  /** Disables text field. */\n  disabled?: boolean,\n  /** Sets placeholder for the embedded text field. */\n  placeholder?: MessageDescriptor,\n  /** Fired when the text value changes. */\n  onChange?: string => void,\n  /** Fired when the search icon is clicked. */\n  onRequestSearch: string => void,\n  /** Override the inline-styles of the root element. */\n  style?: Object,\n  /** The value of the text field. */\n  value: string,\n  /** If tags are supported, the function to list the tags menu */\n  buildTagsMenuTemplate?: () => any,\n  /** If defined, a help icon button redirecting to this page will be shown */\n  helpPagePath?: ?string,\n|};\n\ntype State = {|\n  focus: boolean,\n  value: string,\n  active: boolean,\n|};\n\nconst getStyles = (props: Props, state: State) => {\n  const { disabled } = props;\n  const { value } = state;\n  const nonEmpty = value.length > 0;\n\n  return {\n    root: {\n      height: 30,\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n    iconButtonClose: {\n      style: {\n        opacity: !disabled ? 0.54 : 0.38,\n        transform: nonEmpty ? 'scale(1, 1)' : 'scale(0, 0)',\n        transition: 'transform 200ms cubic-bezier(0.4, 0.0, 0.2, 1)',\n      },\n      iconStyle: {\n        opacity: nonEmpty ? 1 : 0,\n        transition: 'opacity 200ms cubic-bezier(0.4, 0.0, 0.2, 1)',\n      },\n    },\n    iconButtonSearch: {\n      style: {\n        opacity: !disabled ? 0.54 : 0.38,\n        transform: nonEmpty ? 'scale(0, 0)' : 'scale(1, 1)',\n        transition: 'transform 200ms cubic-bezier(0.4, 0.0, 0.2, 1)',\n        marginRight: -30,\n      },\n      iconStyle: {\n        opacity: nonEmpty ? 0 : 1,\n        transition: 'opacity 200ms cubic-bezier(0.4, 0.0, 0.2, 1)',\n      },\n    },\n    iconButtonFilter: {\n      style: {\n        opacity: !disabled ? 0.54 : 0.38,\n      },\n    },\n    iconButtonHelp: {\n      style: {\n        opacity: !disabled ? 0.54 : 0.38,\n      },\n    },\n    input: {\n      width: '100%',\n    },\n    searchContainer: {\n      top: -1,\n      position: 'relative',\n      margin: 'auto 8px',\n      width: '100%',\n    },\n  };\n};\n\n/**\n * Material design search bar,\n * inspired from https://github.com/TeamWertarbyte/material-ui-search-bar\n *\n * Customized to add optional tags button.\n */\nexport default class SearchBar extends React.PureComponent<Props, State> {\n  state = {\n    focus: false,\n    value: this.props.value,\n    active: false,\n  };\n  _textField = React.createRef<TextField>();\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (this.props.value !== nextProps.value) {\n      this.setState({ ...this.state, value: nextProps.value });\n    }\n  }\n\n  focus = () => {\n    if (this._textField.current) {\n      this._textField.current.focus();\n    }\n  };\n\n  blur = () => {\n    if (this._textField.current) {\n      this._textField.current.blur();\n    }\n  };\n\n  handleFocus = () => {\n    this.setState({ focus: true });\n  };\n\n  handleBlur = () => {\n    this.setState({ focus: false });\n    if (this.state.value.trim().length === 0) {\n      this.setState({ value: '' });\n    }\n  };\n\n  handleInput = (e: {| target: {| value: string |} |}) => {\n    this.setState({ value: e.target.value });\n    this.props.onChange && this.props.onChange(e.target.value);\n  };\n\n  handleCancel = () => {\n    this.setState({ active: false, value: '' });\n    this.props.onChange && this.props.onChange('');\n  };\n\n  handleKeyPressed = (event: SyntheticKeyboardEvent<>) => {\n    if (shouldValidate(event)) {\n      this.props.onRequestSearch(this.state.value);\n    }\n  };\n\n  render() {\n    const styles = getStyles(this.props, this.state);\n    const { value } = this.state;\n    const { disabled, style, buildTagsMenuTemplate, helpPagePath } = this.props;\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <Paper\n            style={{\n              backgroundColor: muiTheme.searchBar.backgroundColor,\n              ...styles.root,\n              ...style,\n            }}\n            square\n            elevation={1}\n          >\n            <div style={styles.searchContainer}>\n              <TextField\n                margin=\"none\"\n                hintText={this.props.placeholder || t`Search`}\n                onBlur={this.handleBlur}\n                value={value}\n                onChange={this.handleInput}\n                onKeyUp={this.handleKeyPressed}\n                onFocus={this.handleFocus}\n                fullWidth\n                style={styles.input}\n                underlineShow={false}\n                disabled={disabled}\n                ref={this._textField}\n              />\n            </div>\n            {buildTagsMenuTemplate && (\n              <ElementWithMenu\n                element={\n                  <IconButton\n                    style={styles.iconButtonFilter.style}\n                    disabled={disabled}\n                    size=\"small\"\n                  >\n                    <FilterList />\n                  </IconButton>\n                }\n                buildMenuTemplate={buildTagsMenuTemplate}\n              />\n            )}\n            {helpPagePath && (\n              <HelpIcon\n                disabled={disabled}\n                helpPagePath={helpPagePath}\n                style={styles.iconButtonHelp.style}\n                size=\"small\"\n              />\n            )}\n            <IconButton\n              style={styles.iconButtonSearch.style}\n              disabled={disabled}\n              size=\"small\"\n            >\n              <Search style={styles.iconButtonSearch.iconStyle} />\n            </IconButton>\n            <IconButton\n              onClick={this.handleCancel}\n              style={styles.iconButtonClose.style}\n              disabled={disabled}\n              size=\"small\"\n            >\n              <Close style={styles.iconButtonClose.iconStyle} />\n            </IconButton>\n          </Paper>\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n\nexport const useShouldAutofocusSearchbar = () => {\n  // Note: this is not a React hook but is named as one to encourage\n  // components to use it as such, so that it could be reworked\n  // at some point to use a context (verify in this case all usages).\n  const isTouchscreen = useScreenType() === 'touch';\n  return !isTouchscreen;\n};\n","//@flow\nimport React from 'react';\n\n/**\n * The list of event listeners.\n */\nconst listeners: Set<() => void> = new Set();\n\n// Event listener set-up\nconst callListeners = () => listeners.forEach(callback => callback());\nlet timeout;\nwindow.addEventListener('resize', () => {\n  clearTimeout(timeout);\n  timeout = setTimeout(callListeners, 200);\n});\n\n/**\n * A hook to call a callback when the window is resized,\n * while having only one resize DOM event handler.\n */\nexport const useOnResize = (callback: () => void) => {\n  React.useEffect(\n    () => {\n      listeners.add(callback);\n      return () => {\n        listeners.delete(callback);\n      };\n    },\n    [callback]\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport useForceUpdate from '../../Utils/UseForceUpdate';\nimport { useOnResize } from '../../Utils/UseOnResize';\n\nexport type WidthType = 'small' | 'medium' | 'large';\n\ntype Props = {|\n  children: (width: WidthType) => React.Node,\n|};\n\n/**\n * Pass the proper size to the children according to the window size.\n * This considers a window to be \"small\" if *both* the width and height\n * are small.\n */\nexport const ResponsiveWindowMeasurer = ({ children }: Props) => {\n  useOnResize(useForceUpdate());\n  const width = useResponsiveWindowWidth();\n\n  return children(width);\n};\n\n/**\n * Return the size of the window.\n * This considers a window to be \"small\" if *both* the width and height\n * are small.\n */\nexport const useResponsiveWindowWidth = (): WidthType => {\n  useOnResize(useForceUpdate());\n\n  if (typeof window === 'undefined') {\n    return 'medium';\n  }\n\n  return window.innerWidth < 750 || window.innerHeight < 350\n    ? 'small'\n    : window.innerWidth < 1150\n    ? 'medium'\n    : 'large';\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport Dialog from '../UI/Dialog';\nimport { Line } from '../UI/Grid';\nimport ResourcesLoader from '../ResourcesLoader';\nimport ResourceSelectorWithThumbnail from '../ResourcesList/ResourceSelectorWithThumbnail';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport { resizeImage, isResizeSupported } from './ImageResizer';\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport Text from '../UI/Text';\nimport { ColumnStackLayout } from '../UI/Layout';\nconst path = optionalRequire('path');\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  open: boolean,\n  onClose: Function,\n  onApply: Function,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n|};\n\ntype State = {|\n  desktopIconResourceNames: Array<string>,\n  androidIconResourceNames: Array<string>,\n  iosIconResourceNames: Array<string>,\n|};\n\nconst desktopSizes = [512];\nconst androidSizes = [192, 144, 96, 72, 48, 36];\nconst iosSizes = [\n  1024,\n  180,\n  167,\n  152,\n  144,\n  120,\n  114,\n  100,\n  87,\n  80,\n  76,\n  72,\n  60,\n  58,\n  57,\n  50,\n  40,\n  29,\n  20,\n];\n\nexport default class PlatformSpecificAssetsDialog extends React.Component<\n  Props,\n  State\n> {\n  constructor(props: Props) {\n    super(props);\n    this.state = this._loadFrom(props.project);\n  }\n\n  _loadFrom(project: gdProject): State {\n    return {\n      desktopIconResourceNames: desktopSizes.map(size =>\n        project.getPlatformSpecificAssets().get('desktop', `icon-${size}`)\n      ),\n      androidIconResourceNames: androidSizes.map(size =>\n        project.getPlatformSpecificAssets().get('android', `icon-${size}`)\n      ),\n      iosIconResourceNames: iosSizes.map(size =>\n        project.getPlatformSpecificAssets().get('ios', `icon-${size}`)\n      ),\n    };\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      (!this.props.open && newProps.open) ||\n      (newProps.open && this.props.project !== newProps.project)\n    ) {\n      this.setState(this._loadFrom(newProps.project));\n    }\n  }\n\n  _generateFromFile = () => {\n    const { project, resourceSources, onChooseResource } = this.props;\n\n    const sources = resourceSources.filter(source => source.kind === 'image');\n    if (!sources.length) return;\n\n    onChooseResource(sources[0].name, false).then(resources => {\n      if (!resources.length || !path) {\n        return;\n      }\n\n      const resourcesManager = project.getResourcesManager();\n      const projectPath = path.dirname(project.getProjectFile());\n      const fullPath = path.resolve(projectPath, resources[0].getFile());\n\n      // Important, we are responsible for deleting the resources that were given to us.\n      // Otherwise we have a memory leak.\n      resources.forEach(resource => resource.delete());\n\n      Promise.all([\n        ...desktopSizes.map(size =>\n          resizeImage(\n            fullPath,\n            path.join(projectPath, `desktop-icon-${size}.png`),\n            {\n              width: size,\n              height: size,\n            }\n          )\n        ),\n        ...androidSizes.map(size =>\n          resizeImage(\n            fullPath,\n            path.join(projectPath, `android-icon-${size}.png`),\n            {\n              width: size,\n              height: size,\n            }\n          )\n        ),\n        ...iosSizes.map(size =>\n          resizeImage(\n            fullPath,\n            path.join(projectPath, `ios-icon-${size}.png`),\n            {\n              width: size,\n              height: size,\n            }\n          )\n        ),\n      ]).then(results => {\n        if (results.indexOf(false) !== -1) {\n          showErrorBox({\n            message: 'Some icons could not be generated!',\n            rawError: undefined,\n            errorId: 'icon-generation-error',\n            doNotReport: true,\n          });\n          return;\n        }\n\n        // Add resources to the game\n        const allResourcesNames = [\n          ...desktopSizes.map(size => `desktop-icon-${size}.png`),\n          ...androidSizes.map(size => `android-icon-${size}.png`),\n          ...iosSizes.map(size => `ios-icon-${size}.png`),\n        ];\n        allResourcesNames.forEach(resourceName => {\n          if (!resourcesManager.hasResource(resourceName)) {\n            const imageResource = new gd.ImageResource();\n            imageResource.setFile(resourceName);\n            imageResource.setName(resourceName);\n\n            resourcesManager.addResource(imageResource);\n\n            // Important, we are responsible for deleting the resources that we created\n            // Otherwise we have a memory leak, as calling addResource is making a copy of the resource.\n            imageResource.delete();\n          } else {\n            resourcesManager.getResource(resourceName).setFile(resourceName);\n          }\n        });\n\n        // Make sure the resources are (re)loaded.\n        ResourcesLoader.burstUrlsCacheForResources(project, allResourcesNames);\n        setTimeout(() => {\n          this.setState({\n            desktopIconResourceNames: desktopSizes.map(\n              size => `desktop-icon-${size}.png`\n            ),\n            androidIconResourceNames: androidSizes.map(\n              size => `android-icon-${size}.png`\n            ),\n            iosIconResourceNames: iosSizes.map(size => `ios-icon-${size}.png`),\n          });\n        }, 200 /* Let a bit of time so that image files can be found */);\n      });\n    });\n  };\n\n  _onApply = () => {\n    const { project } = this.props;\n    const {\n      desktopIconResourceNames,\n      androidIconResourceNames,\n      iosIconResourceNames,\n    } = this.state;\n\n    desktopSizes.forEach((size, index) => {\n      project\n        .getPlatformSpecificAssets()\n        .set('desktop', `icon-${size}`, desktopIconResourceNames[index]);\n    });\n    androidSizes.forEach((size, index) => {\n      project\n        .getPlatformSpecificAssets()\n        .set('android', `icon-${size}`, androidIconResourceNames[index]);\n    });\n    iosSizes.forEach((size, index) => {\n      project\n        .getPlatformSpecificAssets()\n        .set('ios', `icon-${size}`, iosIconResourceNames[index]);\n    });\n\n    this.props.onApply();\n  };\n\n  render() {\n    const actions = [\n      <FlatButton\n        key=\"cancel\"\n        label={<Trans>Cancel</Trans>}\n        primary={false}\n        onClick={this.props.onClose}\n      />,\n      <FlatButton\n        key=\"apply\"\n        label={<Trans>Apply</Trans>}\n        primary={true}\n        keyboardFocused={true}\n        onClick={this._onApply}\n      />,\n    ];\n    const {\n      project,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n    } = this.props;\n    const {\n      desktopIconResourceNames,\n      androidIconResourceNames,\n      iosIconResourceNames,\n    } = this.state;\n\n    return (\n      <Dialog\n        title={<Trans>Project icons</Trans>}\n        actions={actions}\n        open={this.props.open}\n        cannotBeDismissed={true}\n        onRequestClose={this.props.onClose}\n      >\n        <ColumnStackLayout noMargin>\n          <Line justifyContent=\"center\">\n            {isResizeSupported() ? (\n              <RaisedButton\n                primary\n                label={<Trans>Generate icons from a file</Trans>}\n                onClick={this._generateFromFile}\n              />\n            ) : (\n              <Text>\n                <Trans>\n                  Download GDevelop desktop version to generate the Android and\n                  iOS icons of your game.\n                </Trans>\n              </Text>\n            )}\n          </Line>\n          <Text>\n            <Trans>Desktop (Windows, macOS and Linux) icon:</Trans>\n          </Text>\n          {desktopSizes.map((size, index) => (\n            <ResourceSelectorWithThumbnail\n              key={size}\n              floatingLabelText={`Desktop icon (${size}x${size} px)`}\n              project={project}\n              resourceSources={resourceSources}\n              onChooseResource={onChooseResource}\n              resourceExternalEditors={resourceExternalEditors}\n              resourceKind=\"image\"\n              resourceName={desktopIconResourceNames[index]}\n              onChange={resourceName => {\n                const newIcons = [...desktopIconResourceNames];\n                newIcons[index] = resourceName;\n                this.setState({\n                  desktopIconResourceNames: newIcons,\n                });\n              }}\n            />\n          ))}\n          <Text>\n            <Trans>Android icons:</Trans>\n          </Text>\n          {androidSizes.map((size, index) => (\n            <ResourceSelectorWithThumbnail\n              key={size}\n              floatingLabelText={`Android icon (${size}x${size} px)`}\n              project={project}\n              resourceSources={resourceSources}\n              onChooseResource={onChooseResource}\n              resourceExternalEditors={resourceExternalEditors}\n              resourceKind=\"image\"\n              resourceName={androidIconResourceNames[index]}\n              onChange={resourceName => {\n                const newIcons = [...androidIconResourceNames];\n                newIcons[index] = resourceName;\n                this.setState({\n                  androidIconResourceNames: newIcons,\n                });\n              }}\n            />\n          ))}\n          <Text>\n            <Trans>iOS (iPhone and iPad) icons:</Trans>\n          </Text>\n          {iosSizes.map((size, index) => (\n            <ResourceSelectorWithThumbnail\n              key={size}\n              floatingLabelText={`iOS icon (${size}x${size} px)`}\n              project={project}\n              resourceSources={resourceSources}\n              onChooseResource={onChooseResource}\n              resourceKind=\"image\"\n              resourceName={iosIconResourceNames[index]}\n              resourceExternalEditors={resourceExternalEditors}\n              onChange={resourceName => {\n                const newIcons = [...iosIconResourceNames];\n                newIcons[index] = resourceName;\n                this.setState({\n                  iosIconResourceNames: newIcons,\n                });\n              }}\n            />\n          ))}\n        </ColumnStackLayout>\n      </Dialog>\n    );\n  }\n}\n","//@flow\nimport optionalLazyRequire from '../Utils/OptionalLazyRequire';\nconst lazyRequireJimp = optionalLazyRequire('jimp');\n\nexport const isResizeSupported = () => {\n  const Jimp = lazyRequireJimp();\n  return !!Jimp;\n};\n\nexport const resizeImage = (\n  inputFile: string,\n  outputFile: string,\n  { width, height }: { width: number, height: number }\n): Promise<any> => {\n  const Jimp = lazyRequireJimp();\n  if (!Jimp) return Promise.resolve(false);\n\n  return Jimp.read(inputFile)\n    .then(function(jimpImage) {\n      return jimpImage.contain(width, height).write(outputFile);\n    })\n    .then(() => {\n      return true;\n    })\n    .catch(function(err) {\n      console.error(err);\n      return false;\n    });\n};\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Dialog, DialogContent } from '@material-ui/core';\n\nconst loaderSize = 50;\n\nconst styles = {\n  dialogContent: {\n    padding: 10,\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'row',\n  },\n};\n\nconst transitionDuration = { enter: 0, exit: 150 };\n\nexport default props => {\n  return (\n    <Dialog open={props.show} transitionDuration={transitionDuration}>\n      <DialogContent style={styles.dialogContent}>\n        <CircularProgress\n          style={styles.circularProgress}\n          size={loaderSize}\n          disableShrink\n        />\n      </DialogContent>\n    </Dialog>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Close from '@material-ui/icons/Close';\n\nconst appBarHeight = 32;\n\ntype Props = {|\n  title: React.Node,\n  displayLeftCloseButton?: boolean,\n  displayRightCloseButton?: boolean,\n  onClose: () => void,\n|};\n\nconst styles = {\n  appBar: {\n    height: appBarHeight,\n    minHeight: appBarHeight,\n  },\n  toolbar: {\n    height: appBarHeight,\n    minHeight: appBarHeight,\n    paddingLeft: 15,\n    paddingRight: 15,\n  },\n  title: { fontSize: '15px', flexGrow: 1 },\n};\n\nexport default (props: Props) => {\n  return (\n    <AppBar\n      position=\"static\"\n      style={styles.appBar}\n      className=\"safe-area-aware-top-margin\"\n      color=\"primary\"\n    >\n      <Toolbar style={styles.toolbar}>\n        {props.displayLeftCloseButton && (\n          <IconButton onClick={props.onClose} edge=\"start\" color=\"inherit\">\n            <Close />\n          </IconButton>\n        )}\n        <Typography variant=\"h6\" style={styles.title}>\n          {props.title}\n        </Typography>\n\n        {props.displayRightCloseButton && (\n          <IconButton onClick={props.onClose} edge=\"end\" color=\"inherit\">\n            <Close />\n          </IconButton>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport Window from '../Utils/Window';\nconst electron = optionalRequire('electron');\n\ntype Props = {|\n  shouldPrompt: boolean,\n  i18n: I18nType,\n  language: string, // Should be i18n.language.\n  hasUnsavedChanges: boolean,\n|};\n\nexport default React.memo<Props>(function CloseConfirmDialog({\n  shouldPrompt,\n  i18n,\n  language,\n  hasUnsavedChanges,\n}: Props) {\n  const delayElectronClose = React.useRef(true);\n\n  React.useEffect(\n    () => {\n      if (Window.isDev()) return; // Don't prevent live-reload in development\n\n      const quitMessage = i18n._(t`Are you sure you want to quit GDevelop?`);\n      const unsavedChangesMessage = hasUnsavedChanges\n        ? i18n._(t`Any unsaved changes in the project will be lost.`)\n        : '';\n      const message = [quitMessage, unsavedChangesMessage]\n        .filter(Boolean)\n        .join('\\n');\n\n      if (electron) {\n        window.onbeforeunload = e => {\n          if (delayElectronClose.current && shouldPrompt) {\n            // Use setTimeout to avoiding blocking the thread with the \"confirm\" dialog,\n            // which would make Electron to close the window for some weird reason.\n            // See https://github.com/electron/electron/issues/7977\n            setTimeout(() => {\n              const answer = Window.showConfirmDialog(message);\n              if (answer) {\n                // If answer is positive, re-trigger the close\n                delayElectronClose.current = false;\n                electron.remote.getCurrentWindow().close();\n              }\n            }, 10);\n\n            // Prevents closing the window immediately. See https://github.com/electron/electron/blob/master/docs/api/browser-window.md#event-close\n            e.returnValue = true; //\"It is recommended to always set the event.returnValue explicitly, instead of only returning a value, as the former works more consistently within Electron.\"\"\n            return false; //\"In Electron, returning any value other than undefined would cancel the close\"\n          } else {\n            // Returning undefined will let the window close\n          }\n        };\n      } else if (window) {\n        if (shouldPrompt) {\n          window.onbeforeunload = () => message;\n        } else {\n          window.onbeforeunload = null;\n        }\n      }\n    },\n    [shouldPrompt, i18n, language, hasUnsavedChanges]\n  );\n\n  return null;\n});\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\nimport React, { Component, useEffect, type Node, useRef } from 'react';\nimport Close from '@material-ui/icons/Close';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport ThemeConsumer from './Theme/ThemeConsumer';\nimport ContextMenu from './Menu/ContextMenu';\nimport { useLongTouch } from '../Utils/UseLongTouch';\n\nconst styles = {\n  tabsContainerStyle: {\n    maxWidth: '100%',\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  tabContentContainer: {\n    width: '100%',\n    position: 'relative',\n    textAlign: 'initial',\n    height: '100%',\n    display: 'flex',\n    flex: 1,\n  },\n  tabLabel: {\n    maxWidth: 400,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    marginTop: 6,\n    marginBottom: 6,\n    marginLeft: 10,\n    marginRight: 10,\n    fontSize: '15px', // Same as in Mosaic.css (for mosaic-window-title)\n  },\n  closeButton: {\n    marginTop: 7,\n    marginBottom: 7,\n    marginRight: 5,\n    marginLeft: 5,\n  },\n};\n\ntype TabContentContainerProps = {|\n  active: boolean,\n  children: Node,\n|};\n\n/**\n * Contains the content of a tab. Two important things:\n *\n * 1) Instead of setting the \"height\" of hidden tabs to \"0\", we set \"display\" to \"none\" to avoid\n * messing with components (in particular components where you can scroll: when collapsed because of height=0,\n * they will lose they scrolling position).\n *\n * 2) shouldComponentUpdate is used to avoid updating the content of a tab that is not selected.\n */\nexport class TabContentContainer extends Component<TabContentContainerProps> {\n  shouldComponentUpdate(nextProps: TabContentContainerProps) {\n    return this.props.active || nextProps.active;\n  }\n\n  render() {\n    const { children, active } = this.props;\n    return (\n      <div\n        style={{\n          ...styles.tabContentContainer,\n          ...(active ? undefined : { display: 'none' }),\n        }}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\ntype ClosableTabsProps = {|\n  hideLabels?: boolean,\n  children: Node,\n|};\n\nexport class ClosableTabs extends Component<ClosableTabsProps> {\n  render() {\n    const { hideLabels, children } = this.props;\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => {\n          const tabItemContainerStyle = {\n            maxWidth: '100%', // Tabs should take all width\n            flexShrink: 0, // Tabs height should never be reduced\n            display: hideLabels ? 'none' : 'flex',\n            flexWrap: 'nowrap', // Single line of tab...\n            overflowX: 'auto', // ...scroll horizontally if needed\n            backgroundColor: muiTheme.closableTabs.containerBackgroundColor,\n          };\n\n          return <div style={tabItemContainerStyle}>{children}</div>;\n        }}\n      </ThemeConsumer>\n    );\n  }\n}\n\ntype ClosableTabProps = {|\n  active: boolean,\n  label: Node,\n  closable: boolean,\n  onClose: () => void,\n  onCloseOthers: () => void,\n  onCloseAll: () => void,\n  onClick: () => void,\n  onActivated: () => void,\n|};\n\nexport function ClosableTab({\n  active,\n  onClose,\n  onCloseOthers,\n  onCloseAll,\n  label,\n  closable,\n  onClick,\n  onActivated,\n}: ClosableTabProps) {\n  useEffect(\n    () => {\n      if (active) {\n        onActivated();\n      }\n    },\n    [active, onActivated]\n  );\n  const contextMenu = useRef<ContextMenu>(null);\n\n  const openContextMenu = event => {\n    event.stopPropagation();\n    if (contextMenu.current) {\n      contextMenu.current.open(event.clientX, event.clientY);\n    }\n  };\n\n  // Allow a long press to show the context menu\n  const longTouchForContextMenuProps = useLongTouch(\n    React.useCallback(\n      event => {\n        if (contextMenu.current) {\n          contextMenu.current.open(event.clientX, event.clientY);\n        }\n      },\n      [contextMenu]\n    )\n  );\n\n  return (\n    <ThemeConsumer>\n      {muiTheme => {\n        const textColor = !active\n          ? muiTheme.closableTabs.textColor\n          : muiTheme.closableTabs.selectedTextColor;\n\n        return (\n          <React.Fragment>\n            <span\n              style={{\n                flexShrink: 0, // Tabs are never resized to fit in flex container\n                position: 'relative',\n                display: 'inline-block',\n                marginRight: 1,\n                backgroundColor: !active\n                  ? muiTheme.closableTabs.backgroundColor\n                  : muiTheme.closableTabs.selectedBackgroundColor,\n              }}\n            >\n              <ButtonBase\n                onClick={onClick}\n                onContextMenu={openContextMenu}\n                {...longTouchForContextMenuProps}\n                focusRipple\n              >\n                <span\n                  style={{\n                    ...styles.tabLabel,\n                    color: textColor,\n                    fontFamily: muiTheme.closableTabs.fontFamily,\n                  }}\n                >\n                  {label}\n                </span>\n              </ButtonBase>\n              {closable && (\n                <ButtonBase\n                  onClick={onClose}\n                  onContextMenu={openContextMenu}\n                  {...longTouchForContextMenuProps}\n                  focusRipple\n                >\n                  <Close\n                    style={{\n                      ...styles.closeButton,\n                      width: muiTheme.closableTabs.height / 2,\n                      height: muiTheme.closableTabs.height / 2,\n                    }}\n                    htmlColor={textColor}\n                  />\n                </ButtonBase>\n              )}\n            </span>\n            <ContextMenu\n              ref={contextMenu}\n              buildMenuTemplate={(i18n: I18nType) => [\n                {\n                  label: i18n._(t`Close`),\n                  click: onClose,\n                  enabled: closable,\n                },\n                {\n                  label: i18n._(t`Close others`),\n                  click: onCloseOthers,\n                },\n                {\n                  label: i18n._(t`Close all`),\n                  click: onCloseAll,\n                },\n              ]}\n            />\n          </React.Fragment>\n        );\n      }}\n    </ThemeConsumer>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport findIndex from 'lodash/findIndex';\nimport { EventsEditorContainer } from './EditorContainers/EventsEditorContainer';\nimport { DebuggerEditorContainer } from './EditorContainers/DebuggerEditorContainer';\nimport { EventsFunctionsExtensionEditorContainer } from './EditorContainers/EventsFunctionsExtensionEditorContainer';\nimport { ExternalEventsEditorContainer } from './EditorContainers/ExternalEventsEditorContainer';\nimport { ExternalLayoutEditorContainer } from './EditorContainers/ExternalLayoutEditorContainer';\nimport { ResourcesEditorContainer } from './EditorContainers/ResourcesEditorContainer';\nimport { SceneEditorContainer } from './EditorContainers/SceneEditorContainer';\nimport {\n  type RenderEditorContainerPropsWithRef,\n  type EditorContainerExtraProps,\n} from './EditorContainers/BaseEditor';\n\n// Supported editors\ntype EditorRef =\n  | DebuggerEditorContainer\n  | EventsEditorContainer\n  | EventsFunctionsExtensionEditorContainer\n  | ExternalEventsEditorContainer\n  | ExternalLayoutEditorContainer\n  | ResourcesEditorContainer\n  | SceneEditorContainer;\n\nexport type EditorTab = {|\n  // The function to render the tab editor.\n  renderEditorContainer: RenderEditorContainerPropsWithRef => React.Node,\n  // A reference to the editor.\n  editorRef: ?EditorRef,\n  // The label shown on the tab.\n  label: string,\n  // The name of the layout/external layout/external events/extension.\n  projectItemName: ?string,\n  // A unique key for the tab.\n  key: string,\n  // Extra props to pass to editors\n  extraEditorProps: ?EditorContainerExtraProps,\n  // If set to false, the tab can't be closed.\n  closable: boolean,\n|};\n\nexport type EditorTabsState = {\n  editors: Array<EditorTab>,\n  currentTab: number,\n};\n\nexport const getEditorTabsInitialState = (): EditorTabsState => {\n  return {\n    editors: [],\n    currentTab: 0,\n  };\n};\n\nexport const openEditorTab = (\n  state: EditorTabsState,\n  {\n    label,\n    projectItemName,\n    renderEditorContainer,\n    key,\n    extraEditorProps,\n    dontFocusTab,\n    closable,\n  }: {|\n    label: string,\n    projectItemName: ?string,\n    renderEditorContainer: (\n      props: RenderEditorContainerPropsWithRef\n    ) => React.Node,\n    key: string,\n    extraEditorProps?: EditorContainerExtraProps,\n    dontFocusTab?: boolean,\n    closable?: boolean,\n  |}\n): EditorTabsState => {\n  const existingEditorId = findIndex(\n    state.editors,\n    editor => editor.key === key\n  );\n  if (existingEditorId !== -1) {\n    return {\n      ...state,\n      currentTab: dontFocusTab ? state.currentTab : existingEditorId,\n    };\n  }\n\n  const editorTab: EditorTab = {\n    label,\n    projectItemName,\n    renderEditorContainer,\n    key,\n    extraEditorProps,\n    editorRef: null,\n    closable: typeof closable === 'undefined' ? true : !!closable,\n  };\n\n  return {\n    ...state,\n    editors: [...state.editors, editorTab],\n    currentTab: dontFocusTab ? state.currentTab : state.editors.length,\n  };\n};\n\nexport const changeCurrentTab = (\n  state: EditorTabsState,\n  newTabId: number\n): EditorTabsState => {\n  return {\n    ...state,\n    currentTab: Math.max(0, Math.min(newTabId, state.editors.length - 1)),\n  };\n};\n\nexport const closeTabsExceptIf = (\n  state: EditorTabsState,\n  keepPredicate: (editorTab: EditorTab) => boolean\n) => {\n  const currentEditorTab = getCurrentTab(state);\n  const remainingEditors = state.editors.filter(keepPredicate);\n  return changeCurrentTab(\n    {\n      ...state,\n      editors: remainingEditors,\n    },\n    // Keep the focus on the current editor tab, or if it was closed\n    // go back to the first tab.\n    remainingEditors.indexOf(currentEditorTab) || 0\n  );\n};\n\nexport const closeAllEditorTabs = (state: EditorTabsState): EditorTabsState => {\n  return closeTabsExceptIf(state, editorTab => !editorTab.closable);\n};\n\nexport const closeEditorTab = (\n  state: EditorTabsState,\n  chosenEditorTab: EditorTab\n): EditorTabsState => {\n  return closeTabsExceptIf(state, editorTab => editorTab !== chosenEditorTab);\n};\n\nexport const closeOtherEditorTabs = (\n  state: EditorTabsState,\n  chosenEditorTab: EditorTab\n): EditorTabsState => {\n  return closeTabsExceptIf(\n    state,\n    editorTab => !editorTab.closable || editorTab === chosenEditorTab\n  );\n};\n\nexport const getEditors = (state: EditorTabsState): Array<EditorTab> => {\n  return state.editors;\n};\n\nexport const getCurrentTabIndex = (state: EditorTabsState): number => {\n  return state.currentTab;\n};\n\nexport const getCurrentTab = (state: EditorTabsState): EditorTab => {\n  return state.editors[state.currentTab];\n};\n\nexport const closeProjectTabs = (\n  state: EditorTabsState,\n  project: ?gdProject\n) => {\n  return closeTabsExceptIf(state, editorTab => {\n    const editorProject =\n      editorTab.editorRef && editorTab.editorRef.getProject();\n    return !editorProject || editorProject !== project;\n  });\n};\n\n/**\n * Ask the editors to persist their UI settings\n * to the project.\n */\nexport const saveUiSettings = (state: EditorTabsState) => {\n  state.editors.forEach(editorTab => {\n    if (\n      editorTab.editorRef &&\n      (editorTab.editorRef instanceof SceneEditorContainer ||\n        editorTab.editorRef instanceof ExternalLayoutEditorContainer)\n    ) {\n      editorTab.editorRef.saveUiSettings();\n    }\n  });\n};\n\n/**\n * Notify the editors that the preview will start. This gives a chance\n * to editors with changes to commit them (like modified extensions).\n */\nexport const notifyPreviewWillStart = (state: EditorTabsState) => {\n  state.editors.forEach(editorTab => {\n    const editor = editorTab.editorRef;\n\n    if (editor instanceof EventsFunctionsExtensionEditorContainer) {\n      editor.previewWillStart();\n    }\n  });\n};\n\nexport const closeLayoutTabs = (state: EditorTabsState, layout: gdLayout) => {\n  return closeTabsExceptIf(state, editorTab => {\n    const editor = editorTab.editorRef;\n\n    if (\n      editor instanceof EventsEditorContainer ||\n      editor instanceof ExternalEventsEditorContainer ||\n      editor instanceof ExternalLayoutEditorContainer ||\n      editor instanceof SceneEditorContainer\n    ) {\n      const editorLayout = editor.getLayout();\n      return !editorLayout || editorLayout !== layout;\n    }\n\n    return true;\n  });\n};\n\nexport const closeExternalLayoutTabs = (\n  state: EditorTabsState,\n  externalLayout: gdExternalLayout\n) => {\n  return closeTabsExceptIf(state, editorTab => {\n    const editor = editorTab.editorRef;\n\n    if (editor instanceof ExternalLayoutEditorContainer) {\n      return (\n        !editor.getExternalLayout() ||\n        editor.getExternalLayout() !== externalLayout\n      );\n    }\n\n    return true;\n  });\n};\n\nexport const closeExternalEventsTabs = (\n  state: EditorTabsState,\n  externalEvents: gdExternalEvents\n) => {\n  return closeTabsExceptIf(state, editorTab => {\n    const editor = editorTab.editorRef;\n    if (editor instanceof ExternalEventsEditorContainer) {\n      return (\n        !editor.getExternalEvents() ||\n        editor.getExternalEvents() !== externalEvents\n      );\n    }\n\n    return true;\n  });\n};\n\nexport const closeEventsFunctionsExtensionTabs = (\n  state: EditorTabsState,\n  eventsFunctionsExtension: gdEventsFunctionsExtension\n) => {\n  return closeTabsExceptIf(state, editorTab => {\n    const editor = editorTab.editorRef;\n    if (editor instanceof EventsFunctionsExtensionEditorContainer) {\n      return (\n        !editor.getEventsFunctionsExtension() ||\n        editor.getEventsFunctionsExtension() !== eventsFunctionsExtension\n      );\n    }\n\n    return true;\n  });\n};\n\nexport const getEventsFunctionsExtensionEditor = (\n  state: EditorTabsState,\n  eventsFunctionsExtension: gdEventsFunctionsExtension\n): ?{| editor: EventsFunctionsExtensionEditorContainer, tabIndex: number |} => {\n  for (let tabIndex = 0; tabIndex < state.editors.length; ++tabIndex) {\n    const editor = state.editors[tabIndex].editorRef;\n    if (\n      editor instanceof EventsFunctionsExtensionEditorContainer &&\n      editor.getEventsFunctionsExtension() === eventsFunctionsExtension\n    ) {\n      return { editor, tabIndex };\n    }\n  }\n\n  return null;\n};\n","// @flow\nimport React, { Component, type Node } from 'react';\nimport findIndex from 'lodash/findIndex';\nimport {\n  SortableTreeWithoutDndContext,\n  getNodeAtPath,\n} from 'react-sortable-tree';\nimport { mapFor } from '../../Utils/MapFor';\nimport { getInitialSelection, isEventSelected } from '../SelectionHandler';\nimport EventsRenderingService from './EventsRenderingService';\nimport EventHeightsCache from './EventHeightsCache';\nimport classNames from 'classnames';\nimport { eventsTree, eventsTreeWithSearchResults, icon } from './ClassNames';\nimport {\n  type SelectionState,\n  type EventContext,\n  type InstructionsListContext,\n  type InstructionContext,\n  type ParameterContext,\n} from '../SelectionHandler';\nimport { type EventsScope } from '../../InstructionOrExpression/EventsScope.flow';\nimport getObjectByName from '../../Utils/GetObjectByName';\nimport ObjectsRenderingService from '../../ObjectsRendering/ObjectsRenderingService';\nimport { type ScreenType } from '../../UI/Reponsive/ScreenTypeMeasurer';\nimport { type WidthType } from '../../UI/Reponsive/ResponsiveWindowMeasurer';\n\n// Import default style of react-sortable-tree and the override made for EventsSheet.\nimport 'react-sortable-tree/style.css';\nimport './style.css';\nimport ThemeConsumer from '../../UI/Theme/ThemeConsumer';\nimport BottomButtons from './BottomButtons';\nimport EmptyEventsPlaceholder from './EmptyEventsPlaceholder';\nimport { CorsAwareImage } from '../../UI/CorsAwareImage';\nconst gd: libGDevelop = global.gd;\n\nconst getThumbnail = ObjectsRenderingService.getThumbnail.bind(\n  ObjectsRenderingService\n);\n\nconst defaultIndentWidth = 22;\nconst smallIndentWidth = 11;\n\nconst styles = {\n  container: { flex: 1 },\n  defaultEventContainer: {\n    marginRight: 10,\n  },\n  smallEventContainer: {\n    marginRight: 0,\n  },\n};\n\nconst getIndentWidth = (windowWidth: WidthType) =>\n  windowWidth === 'small' ? smallIndentWidth : defaultIndentWidth;\nconst getEventContainerStyle = (windowWidth: WidthType) =>\n  windowWidth === 'small'\n    ? styles.smallEventContainer\n    : styles.defaultEventContainer;\n\ntype EventsContainerProps = {|\n  eventsHeightsCache: EventHeightsCache,\n  event: gdBaseEvent,\n  leftIndentWidth: number,\n  disabled: boolean,\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  selection: SelectionState,\n  onAddNewInstruction: InstructionsListContext => void,\n  onPasteInstructions: InstructionsListContext => void,\n  onMoveToInstruction: (destinationContext: InstructionContext) => void,\n  onMoveToInstructionsList: (\n    destinationContext: InstructionsListContext\n  ) => void,\n  onInstructionClick: InstructionContext => void,\n  onInstructionDoubleClick: InstructionContext => void,\n  onInstructionContextMenu: (x: number, y: number, InstructionContext) => void,\n  onAddInstructionContextMenu: (\n    HTMLButtonElement,\n    InstructionsListContext\n  ) => void,\n  onParameterClick: ParameterContext => void,\n\n  onEventClick: (eventContext: EventContext) => void,\n  onEventContextMenu: (x: number, y: number) => void,\n  onOpenExternalEvents: string => void,\n  onOpenLayout: string => void,\n  renderObjectThumbnail: string => Node,\n\n  screenType: ScreenType,\n  windowWidth: WidthType,\n  eventsSheetHeight: number,\n|};\n\n/**\n * The component containing an event.\n * It will report the rendered event height so that the EventsTree can\n * update accordingly.\n */\nclass EventContainer extends Component<EventsContainerProps, {||}> {\n  _container: ?any;\n  componentDidMount() {\n    const height = this._container ? this._container.offsetHeight : 0;\n    this.props.eventsHeightsCache.setEventHeight(this.props.event, height);\n  }\n\n  componentDidUpdate() {\n    const height = this._container ? this._container.offsetHeight : 0;\n    this.props.eventsHeightsCache.setEventHeight(this.props.event, height);\n  }\n\n  _onEventUpdated = () => {\n    this.forceUpdate();\n  };\n\n  _onEventContextMenu = (domEvent: any) => {\n    domEvent.preventDefault();\n    this.props.onEventContextMenu(domEvent.clientX, domEvent.clientY);\n  };\n\n  render() {\n    const { event, project, scope, disabled } = this.props;\n    const EventComponent = EventsRenderingService.getEventComponent(event);\n\n    return (\n      <div\n        ref={container => (this._container = container)}\n        onClick={this.props.onEventClick}\n        onContextMenu={this._onEventContextMenu}\n        style={getEventContainerStyle(this.props.windowWidth)}\n      >\n        {EventComponent && (\n          <EventComponent\n            project={project}\n            scope={scope}\n            event={event}\n            globalObjectsContainer={this.props.globalObjectsContainer}\n            objectsContainer={this.props.objectsContainer}\n            selected={isEventSelected(this.props.selection, event)}\n            selection={this.props.selection}\n            leftIndentWidth={this.props.leftIndentWidth}\n            onUpdate={this._onEventUpdated}\n            onAddNewInstruction={this.props.onAddNewInstruction}\n            onPasteInstructions={this.props.onPasteInstructions}\n            onMoveToInstruction={this.props.onMoveToInstruction}\n            onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n            onInstructionClick={this.props.onInstructionClick}\n            onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n            onInstructionContextMenu={this.props.onInstructionContextMenu}\n            onAddInstructionContextMenu={this.props.onAddInstructionContextMenu}\n            onParameterClick={this.props.onParameterClick}\n            onOpenExternalEvents={this.props.onOpenExternalEvents}\n            onOpenLayout={this.props.onOpenLayout}\n            disabled={\n              disabled /* Use disabled (not event.disabled) as it is true if a parent event is disabled*/\n            }\n            renderObjectThumbnail={this.props.renderObjectThumbnail}\n            screenType={this.props.screenType}\n            windowWidth={this.props.windowWidth}\n            eventsSheetHeight={this.props.eventsSheetHeight}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst getNodeKey = ({ treeIndex }) => treeIndex;\n\nconst SortableTree = ({ className, ...otherProps }) => (\n  <ThemeConsumer>\n    {muiTheme => (\n      <SortableTreeWithoutDndContext\n        className={`${eventsTree} ${\n          muiTheme.eventsSheetRootClassName\n        } ${className}`}\n        {...otherProps}\n      />\n    )}\n  </ThemeConsumer>\n);\n\nconst noop = () => {};\n\ntype EventsTreeProps = {|\n  events: gdEventsList,\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  selection: SelectionState,\n  onAddNewInstruction: InstructionsListContext => void,\n  onPasteInstructions: InstructionsListContext => void,\n  onMoveToInstruction: (destinationContext: InstructionContext) => void,\n  onMoveToInstructionsList: (\n    destinationContext: InstructionsListContext\n  ) => void,\n  onInstructionClick: InstructionContext => void,\n  onInstructionDoubleClick: InstructionContext => void,\n  onInstructionContextMenu: (x: number, y: number, InstructionContext) => void,\n  onAddInstructionContextMenu: (\n    HTMLButtonElement,\n    InstructionsListContext\n  ) => void,\n  onParameterClick: ParameterContext => void,\n\n  onEventClick: (eventContext: EventContext) => void,\n  onEventContextMenu: (\n    x: number,\n    y: number,\n    eventContext: EventContext\n  ) => void,\n  onAddNewEvent: (eventType: string, eventsList: gdEventsList) => void,\n  onOpenExternalEvents: string => void,\n  onOpenLayout: string => void,\n  showObjectThumbnails: boolean,\n\n  searchResults: ?Array<gdBaseEvent>,\n  searchFocusOffset: ?number,\n\n  onEventMoved: () => void,\n  onScroll?: () => void,\n\n  screenType: ScreenType,\n  windowWidth: WidthType,\n  eventsSheetHeight: number,\n|};\n\n// A node displayed by the SortableTree. Almost always represents an\n// event, except for the buttons at the bottom of the sheet.\ntype SortableTreeNode = {\n  eventsList: gdEventsList,\n  event: ?gdBaseEvent,\n  depth: number,\n  disabled: boolean,\n  indexInList: number,\n\n  // In case of nodes without event (buttons at the bottom of the sheet),\n  // use a fixed height.\n  fixedHeight?: ?number,\n};\n\n/**\n * Display a tree of event. Builtin on react-sortable-tree so that event\n * can be drag'n'dropped and events rows are virtualized.\n */\nexport default class ThemableEventsTree extends Component<EventsTreeProps, *> {\n  static defaultProps = {\n    selection: getInitialSelection(),\n  };\n  _list: ?any;\n  eventsHeightsCache: EventHeightsCache;\n\n  constructor(props: EventsTreeProps) {\n    super(props);\n\n    this.eventsHeightsCache = new EventHeightsCache(this);\n    this.state = {\n      ...this._eventsToTreeData(props.events),\n    };\n  }\n\n  componentDidMount() {\n    this.onHeightsChanged();\n  }\n\n  /**\n   * Should be called whenever an event height has changed\n   */\n  onHeightsChanged(cb: ?() => void) {\n    this.forceUpdate(() => {\n      if (this._list && this._list.wrappedInstance.current) {\n        this._list.wrappedInstance.current.recomputeRowHeights();\n      }\n      if (cb) cb();\n    });\n  }\n\n  /**\n   * Should be called whenever events changed (new event...)\n   * from outside this component.\n   */\n  forceEventsUpdate(cb: ?() => void) {\n    this.setState(this._eventsToTreeData(this.props.events), () => {\n      if (this._list && this._list.wrappedInstance.current) {\n        this._list.wrappedInstance.current.recomputeRowHeights();\n      }\n      if (cb) cb();\n    });\n  }\n\n  scrollToEvent(event: gdBaseEvent) {\n    const row = this._getEventRow(event);\n    if (row !== -1) {\n      if (this._list && this._list.wrappedInstance.current) {\n        this._list.wrappedInstance.current.scrollToRow(row);\n      }\n    }\n  }\n\n  /**\n   * Unfold events so that the given one is visible\n   */\n  unfoldForEvent(event: gdBaseEvent) {\n    gd.EventsListUnfolder.unfoldWhenContaining(this.props.events, event);\n    this.forceEventsUpdate();\n  }\n\n  _getEventRow(searchedEvent: gdBaseEvent) {\n    // TODO: flatData could be replaced by a hashmap of events to row index\n    return findIndex(\n      this.state.flatData,\n      event => event.ptr === searchedEvent.ptr\n    );\n  }\n\n  _eventsToTreeData = (\n    eventsList: gdEventsList,\n    flatData: Array<gdBaseEvent> = [],\n    depth: number = 0,\n    parentDisabled: boolean = false\n  ) => {\n    const treeData = mapFor<SortableTreeNode>(\n      0,\n      eventsList.getEventsCount(),\n      i => {\n        const event = eventsList.getEventAt(i);\n        flatData.push(event);\n\n        const disabled = parentDisabled || event.isDisabled();\n\n        return {\n          title: this._renderEvent,\n          event,\n          eventsList,\n          indexInList: i,\n          expanded: !event.isFolded(),\n          disabled,\n          depth,\n          key: event.ptr, //TODO: useless?\n          children: this._eventsToTreeData(\n            event.getSubEvents(),\n            // flatData is a flat representation of events, one for each line.\n            // Hence it should not contain the folded events.\n            !event.isFolded() ? flatData : [],\n            depth + 1,\n            disabled\n          ).treeData,\n        };\n      }\n    );\n\n    // Add the bottom buttons if we're at the root\n    const extraNodes = [\n      depth === 0\n        ? {\n            title: () => (\n              <BottomButtons\n                onAddEvent={(eventType: string) =>\n                  this.props.onAddNewEvent(eventType, this.props.events)\n                }\n              />\n            ),\n            event: null,\n            indexInList: eventsList.getEventsCount(),\n            disabled: false,\n            depth: 0,\n            fixedHeight: 40,\n            children: [],\n          }\n        : null,\n      depth === 0 && eventsList.getEventsCount() === 0\n        ? {\n            title: () => <EmptyEventsPlaceholder />,\n            event: null,\n            indexInList: eventsList.getEventsCount() + 1,\n            disabled: false,\n            depth: 0,\n            fixedHeight: 300,\n            children: [],\n          }\n        : null,\n    ].filter(Boolean);\n\n    return {\n      treeData: extraNodes.length ? treeData.concat(extraNodes) : treeData,\n      flatData,\n    };\n  };\n\n  _onMoveNode = ({\n    treeData,\n    path,\n    node,\n  }: {\n    treeData: any,\n    path: Array<any>,\n    node: SortableTreeNode,\n  }) => {\n    // Get the moved event and its list from the moved node.\n    const { event, eventsList } = node;\n    if (!event) return;\n\n    // Get the event list where the event should be moved to.\n    const targetPath = path.slice(0, -1);\n    const target = getNodeAtPath({\n      getNodeKey,\n      treeData: treeData,\n      path: targetPath,\n    });\n    const targetNode = target.node;\n    const targetEventsList =\n      targetNode && targetNode.event\n        ? targetNode.event.getSubEvents()\n        : this.props.events;\n    const targetPosition =\n      targetNode && targetNode.children ? targetNode.children.indexOf(node) : 0;\n\n    // Do the move\n    // Note that moveEventToAnotherEventsList does not invalidate the\n    // references to the event in memory - so things refering to this event like the\n    // selection in EventsSheet remain valid. This might not be needed anymore\n    // if events drag'n'drop is reworked to be similar to instructions drag'n'drop.\n    eventsList.moveEventToAnotherEventsList(\n      event,\n      targetEventsList,\n      targetPosition\n    );\n\n    this.forceEventsUpdate();\n    this.props.onEventMoved();\n  };\n\n  _canDrag = ({ node }: { node: ?SortableTreeNode }) => {\n    return !!node && !!node.event;\n  };\n\n  _canDrop = ({ nextParent }: { nextParent: ?SortableTreeNode }) => {\n    if (nextParent) {\n      if (nextParent.event) {\n        return nextParent.event.canHaveSubEvents();\n      }\n    }\n\n    // No \"nextParent\" means that we're trying to drop at the root\n    // of the events tree.\n    return true;\n  };\n\n  _canNodeHaveChildren = (node: ?SortableTreeNode) => {\n    if (node && node.event) {\n      return node.event.canHaveSubEvents();\n    }\n\n    return false;\n  };\n\n  _onVisibilityToggle = ({ node }: { node: SortableTreeNode }) => {\n    const { event } = node;\n    if (!event) return;\n\n    event.setFolded(!event.isFolded());\n    this.forceEventsUpdate();\n  };\n\n  _renderObjectThumbnail = (objectName: string) => {\n    const { project, scope, showObjectThumbnails } = this.props;\n    if (!showObjectThumbnails) return null;\n\n    const object = getObjectByName(project, scope.layout, objectName);\n    if (!object) return null;\n\n    return (\n      <CorsAwareImage\n        className={classNames({\n          [icon]: true,\n        })}\n        alt=\"\"\n        src={getThumbnail(project, object)}\n      />\n    );\n  };\n\n  _renderEvent = ({ node }: { node: SortableTreeNode }) => {\n    const { event, depth, disabled } = node;\n    if (!event) return null;\n\n    return (\n      <EventContainer\n        project={this.props.project}\n        scope={this.props.scope}\n        globalObjectsContainer={this.props.globalObjectsContainer}\n        objectsContainer={this.props.objectsContainer}\n        event={event}\n        key={event.ptr}\n        eventsHeightsCache={this.eventsHeightsCache}\n        selection={this.props.selection}\n        leftIndentWidth={depth * getIndentWidth(this.props.windowWidth)}\n        onAddNewInstruction={this.props.onAddNewInstruction}\n        onPasteInstructions={this.props.onPasteInstructions}\n        onMoveToInstruction={this.props.onMoveToInstruction}\n        onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n        onInstructionClick={this.props.onInstructionClick}\n        onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n        onParameterClick={this.props.onParameterClick}\n        onEventClick={() =>\n          this.props.onEventClick({\n            eventsList: node.eventsList,\n            event: event,\n            indexInList: node.indexInList,\n          })\n        }\n        onEventContextMenu={(x, y) =>\n          this.props.onEventContextMenu(x, y, {\n            eventsList: node.eventsList,\n            event: event,\n            indexInList: node.indexInList,\n          })\n        }\n        onInstructionContextMenu={this.props.onInstructionContextMenu}\n        onAddInstructionContextMenu={this.props.onAddInstructionContextMenu}\n        onOpenExternalEvents={this.props.onOpenExternalEvents}\n        onOpenLayout={this.props.onOpenLayout}\n        disabled={\n          disabled /* Use node.disabled (not event.disabled) as it is true if a parent event is disabled*/\n        }\n        renderObjectThumbnail={this._renderObjectThumbnail}\n        screenType={this.props.screenType}\n        windowWidth={this.props.windowWidth}\n        eventsSheetHeight={this.props.eventsSheetHeight}\n      />\n    );\n  };\n\n  _isNodeHighlighted = ({\n    node,\n    searchQuery,\n  }: {\n    node: SortableTreeNode,\n    searchQuery: ?Array<gdBaseEvent>,\n  }) => {\n    const searchResults = searchQuery;\n    if (!searchResults) return false;\n    const { event } = node;\n    if (!event) return false;\n\n    return searchResults.find(highlightedEvent =>\n      gd.compare(highlightedEvent, event)\n    );\n  };\n\n  render() {\n    // react-sortable-tree does the rendering by transforming treeData\n    // into a flat array, the result being memoized. This hack forces\n    // a re-rendering of events, by discarding the memoized flat array\n    // (otherwise, no re-rendering would be done).\n    const treeData = this.state.treeData ? [...this.state.treeData] : null;\n\n    return (\n      <div style={styles.container}>\n        <SortableTree\n          treeData={treeData}\n          scaffoldBlockPxWidth={getIndentWidth(this.props.windowWidth)}\n          onChange={noop}\n          onVisibilityToggle={this._onVisibilityToggle}\n          onMoveNode={this._onMoveNode}\n          canDrag={this._canDrag}\n          canDrop={this._canDrop}\n          canNodeHaveChildren={this._canNodeHaveChildren}\n          rowHeight={({ node }: { node: SortableTreeNode }) => {\n            if (!node.event) return node.fixedHeight || 0;\n\n            return this.eventsHeightsCache.getEventHeight(node.event);\n          }}\n          searchMethod={this._isNodeHighlighted}\n          searchQuery={this.props.searchResults}\n          searchFocusOffset={this.props.searchFocusOffset}\n          className={\n            this.props.searchResults ? eventsTreeWithSearchResults : ''\n          }\n          reactVirtualizedListProps={{\n            ref: list => (this._list = list),\n            onScroll: this.props.onScroll,\n          }}\n        />\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport ReactDOM from 'react-dom';\nimport ContextMenu from './ContextMenu';\nimport { type MenuItemTemplate } from './Menu.flow';\n\ntype Props = {|\n  element: React$Element<any>,\n  buildMenuTemplate: (i18n: I18nType) => Array<MenuItemTemplate>,\n  openMenuWithSecondaryClick?: boolean,\n  passExtraProps?: boolean,\n|};\n\ntype State = {||};\n\n/**\n * Wrap an element and display a menu when `onClick` prop is called on the element.\n */\n\nexport default class ElementWithMenu extends React.Component<Props, State> {\n  _contextMenu: ?ContextMenu;\n  _wrappedElement: ?any;\n\n  open = () => {\n    const { _contextMenu } = this;\n    if (!_contextMenu) return;\n\n    const node = ReactDOM.findDOMNode(this._wrappedElement);\n    if (node instanceof HTMLElement) {\n      const dimensions = node.getBoundingClientRect();\n\n      _contextMenu.open(\n        Math.round(dimensions.left + dimensions.width / 2),\n        Math.round(dimensions.top + dimensions.height)\n      );\n    }\n  };\n\n  render() {\n    const {\n      element,\n      buildMenuTemplate,\n      openMenuWithSecondaryClick,\n      passExtraProps,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        {React.cloneElement(element, {\n          onContextMenu: this.open,\n          // $FlowFixMe - Flow complaining about using too much spread operators\n          ...(openMenuWithSecondaryClick ? {} : { onClick: this.open }),\n          ref: wrappedElement => (this._wrappedElement = wrappedElement),\n          ...(passExtraProps ? otherProps : {}),\n        })}\n        <ContextMenu\n          ref={contextMenu => (this._contextMenu = contextMenu)}\n          buildMenuTemplate={buildMenuTemplate}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport React from 'react';\nimport { CorsAwareImage } from './CorsAwareImage';\nimport GDevelopThemeContext from './Theme/ThemeContext';\n// No i18n in this file\n\ntype SizeProps =\n  | {|\n      iconSize: number,\n    |}\n  | {|\n      iconWidth: number,\n      iconHeight: number,\n    |};\n\ntype Props = {|\n  src: string,\n  tooltip?: string,\n  disabled?: boolean,\n  isGDevelopIcon?: boolean,\n  cssAnimation?: string,\n  useExactIconSize?: boolean,\n  ...SizeProps,\n|};\n\n/**\n * An icon that can be used as the leftIcon of a ListItem.\n * See also ToolbarIcon.\n */\nfunction ListIcon(props: Props) {\n  const gdevelopTheme = React.useContext(GDevelopThemeContext);\n  const {\n    src,\n    tooltip,\n    disabled,\n    isGDevelopIcon,\n    cssAnimation,\n    useExactIconSize,\n  } = props;\n\n  const iconWidth =\n    props.iconWidth !== undefined ? props.iconWidth : props.iconSize;\n  const iconHeight =\n    props.iconHeight !== undefined ? props.iconHeight : props.iconSize;\n\n  // The material-ui List component reserves 56 pixels for the icon, so the maximum\n  // size is 40px before we start consuming the padding space between the icon and\n  // the text. Add it back if necessary\n  const paddingRight = iconWidth > 40 ? 16 : 0;\n\n  const style = {\n    maxWidth: useExactIconSize ? undefined : iconWidth,\n    maxHeight: useExactIconSize ? undefined : iconHeight,\n    width: useExactIconSize ? iconWidth : undefined,\n    height: useExactIconSize ? iconHeight : undefined,\n    verticalAlign: 'middle', // Vertical centering\n    animation: cssAnimation,\n    filter: !isGDevelopIcon\n      ? undefined\n      : disabled\n      ? 'grayscale(100%)'\n      : gdevelopTheme.gdevelopIconsCSSFilter,\n  };\n\n  return (\n    <div\n      style={{\n        width: iconWidth,\n        height: iconHeight,\n        lineHeight: `${iconHeight}px`, // Vertical centering\n        textAlign: 'center', // Horizontal centering\n        paddingRight,\n      }}\n    >\n      {isGDevelopIcon ? (\n        <img title={tooltip} alt={tooltip} src={src} style={style} />\n      ) : (\n        <CorsAwareImage title={tooltip} alt={tooltip} src={src} style={style} />\n      )}\n    </div>\n  );\n}\n\nconst ListIconMemo = React.memo<Props>(ListIcon);\nexport default ListIconMemo;\n","// @flow\nimport * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\ntype Props = {|\n  children: ?React.Node,\n|};\n\nconst style = {\n  paddingLeft: 8,\n};\n\n// A Subheader to be displayed in a List.\nexport default ({ children }: Props) =>\n  children ? (\n    <Typography variant={'overline'} style={style}>\n      {children}\n    </Typography>\n  ) : null;\n","// @flow\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst styles = {\n  container: {\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  children: React.Node,\n  /**\n   * If true, scrollbar won't be shown if the content is not clipped.\n   */\n  autoHideScrollbar?: ?boolean,\n  style?: ?Object,\n|};\n\nexport type ScrollViewInterface = {|\n  scrollTo: (target: ?React$Component<any, any>) => void,\n  scrollToBottom: () => void,\n|};\n\nexport default React.forwardRef<Props, ScrollViewInterface>(\n  ({ children, autoHideScrollbar, style }: Props, ref) => {\n    const scrollView = React.useRef((null: ?HTMLDivElement));\n    React.useImperativeHandle(ref, () => ({\n      /**\n       * Scroll the view to the target component.\n       */\n      scrollTo: (target: ?React$Component<any, any>) => {\n        const scrollViewElement = scrollView.current;\n        if (!scrollViewElement) return;\n\n        const targetElement = ReactDOM.findDOMNode(target);\n        if (targetElement instanceof HTMLElement) {\n          const yPosition = targetElement.getBoundingClientRect().top;\n\n          const scrollViewYPosition = scrollViewElement.getBoundingClientRect()\n            .top;\n          scrollViewElement.scrollTop += yPosition - scrollViewYPosition;\n        } else {\n          console.error(\n            'Tried to scroll to something that is not a HTMLElement'\n          );\n        }\n      },\n      /**\n       * Scroll the view to the bottom.\n       */\n      scrollToBottom: () => {\n        const scrollViewElement = scrollView.current;\n        if (!scrollViewElement) return;\n\n        scrollViewElement.scrollTop = scrollViewElement.scrollHeight;\n      },\n    }));\n\n    return (\n      <div\n        style={{\n          ...styles.container,\n          overflowY: autoHideScrollbar ? 'auto' : 'scroll',\n          ...style,\n        }}\n        ref={scrollView}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n","// @flow\nimport * as React from 'react';\nimport InstructionsList from '../InstructionsList';\nimport classNames from 'classnames';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  executableEventContainer,\n} from '../ClassNames';\nimport { type EventRendererProps } from './EventRenderer';\nimport ConditionsActionsColumns from '../ConditionsActionsColumns';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  actionsList: {\n    flex: 1,\n  },\n};\n\nexport default class StandardEvent extends React.Component<\n  EventRendererProps,\n  *\n> {\n  render() {\n    var standardEvent = gd.asStandardEvent(this.props.event);\n\n    return (\n      <ConditionsActionsColumns\n        leftIndentWidth={this.props.leftIndentWidth}\n        windowWidth={this.props.windowWidth}\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n          [executableEventContainer]: true,\n        })}\n        renderConditionsList={({ style, className }) => (\n          <InstructionsList\n            instrsList={standardEvent.getConditions()}\n            style={style}\n            className={className}\n            selection={this.props.selection}\n            areConditions\n            onAddNewInstruction={this.props.onAddNewInstruction}\n            onPasteInstructions={this.props.onPasteInstructions}\n            onMoveToInstruction={this.props.onMoveToInstruction}\n            onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n            onInstructionClick={this.props.onInstructionClick}\n            onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n            onInstructionContextMenu={this.props.onInstructionContextMenu}\n            onAddInstructionContextMenu={this.props.onAddInstructionContextMenu}\n            onParameterClick={this.props.onParameterClick}\n            disabled={this.props.disabled}\n            renderObjectThumbnail={this.props.renderObjectThumbnail}\n            screenType={this.props.screenType}\n            windowWidth={this.props.windowWidth}\n          />\n        )}\n        renderActionsList={({ className }) => (\n          <InstructionsList\n            instrsList={standardEvent.getActions()}\n            style={\n              {\n                ...styles.actionsList,\n              } /* TODO: Use a new object to force update - somehow updates are not always propagated otherwise */\n            }\n            className={className}\n            selection={this.props.selection}\n            areConditions={false}\n            onAddNewInstruction={this.props.onAddNewInstruction}\n            onPasteInstructions={this.props.onPasteInstructions}\n            onMoveToInstruction={this.props.onMoveToInstruction}\n            onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n            onInstructionClick={this.props.onInstructionClick}\n            onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n            onInstructionContextMenu={this.props.onInstructionContextMenu}\n            onAddInstructionContextMenu={this.props.onAddInstructionContextMenu}\n            onParameterClick={this.props.onParameterClick}\n            disabled={this.props.disabled}\n            renderObjectThumbnail={this.props.renderObjectThumbnail}\n            screenType={this.props.screenType}\n            windowWidth={this.props.windowWidth}\n          />\n        )}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { mapFor } from '../../Utils/MapFor';\nimport classNames from 'classnames';\nimport {\n  selectedArea,\n  selectableArea,\n  subInstructionsContainer,\n  instructionParameter,\n  disabledText,\n  icon,\n} from './ClassNames';\nimport {\n  type InstructionsListContext,\n  type InstructionContext,\n} from '../SelectionHandler';\nimport InstructionsList from './InstructionsList';\nimport DropIndicator from './DropIndicator';\nimport ParameterRenderingService from '../ParameterRenderingService';\nimport InvalidParameterValue from './InvalidParameterValue';\nimport MissingParameterValue from './MissingParameterValue';\nimport { makeDragSourceAndDropTarget } from '../../UI/DragAndDrop/DragSourceAndDropTarget';\nimport {\n  type ScreenType,\n  useScreenType,\n} from '../../UI/Reponsive/ScreenTypeMeasurer';\nimport { type WidthType } from '../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport PreferencesContext from '../../MainFrame/Preferences/PreferencesContext';\nimport { useLongTouch } from '../../Utils/UseLongTouch';\nimport {\n  shouldActivate,\n  shouldValidate,\n} from '../../UI/KeyboardShortcuts/InteractionKeys';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  container: {\n    whiteSpace: 'normal',\n    wordWrap: 'break-word',\n    cursor: 'pointer',\n    marginBottom: 1,\n  },\n};\n\nexport const reactDndInstructionType = 'GD_DRAGGED_INSTRUCTION';\n\nconst capitalize = (str: string) => {\n  if (!str) return '';\n\n  return str[0].toUpperCase() + str.substr(1);\n};\n\nconst DragSourceAndDropTarget = makeDragSourceAndDropTarget<{\n  isCondition: boolean,\n}>(reactDndInstructionType);\n\ntype Props = {|\n  instruction: gdInstruction,\n  isCondition: boolean,\n  onClick: Function,\n  selected: boolean,\n  disabled: boolean,\n  onDoubleClick: () => void,\n  onContextMenu: (x: number, y: number) => void,\n  onMoveToInstruction: () => void,\n\n  // For potential sub-instructions list:\n  selection: Object,\n  onAddNewSubInstruction: InstructionsListContext => void,\n  onPasteSubInstructions: InstructionsListContext => void,\n  onMoveToSubInstruction: (destinationContext: InstructionContext) => void,\n  onMoveToSubInstructionsList: (\n    destinationContext: InstructionsListContext\n  ) => void,\n  onSubInstructionClick: InstructionContext => void,\n  onSubInstructionDoubleClick: InstructionContext => void,\n  onAddSubInstructionContextMenu: (\n    button: HTMLButtonElement,\n    instructionsListContext: InstructionsListContext\n  ) => void,\n  onSubParameterClick: Function,\n  onSubInstructionContextMenu: (\n    x: number,\n    y: number,\n    instructionContext: InstructionContext\n  ) => void,\n  onParameterClick: (event: any, parameterIndex: number) => void,\n  renderObjectThumbnail: string => React.Node,\n\n  screenType: ScreenType,\n  windowWidth: WidthType,\n|};\n\nconst Instruction = (props: Props) => {\n  const {\n    instruction,\n    isCondition,\n    onClick,\n    onMoveToInstruction,\n    onContextMenu,\n  } = props;\n\n  const instrFormatter = React.useMemo(\n    () => gd.InstructionSentenceFormatter.get(),\n    []\n  );\n  const preferences = React.useContext(PreferencesContext);\n  const useAssignmentOperators =\n    preferences.values.eventsSheetUseAssignmentOperators;\n\n  /**\n   * Render the different parts of the text of the instruction.\n   * Parameter can have formatting, be hovered and clicked. The rest\n   * has not particular styling.\n   */\n  const renderInstructionText = (metadata: gdInstructionMetadata) => {\n    const { instruction, disabled, renderObjectThumbnail } = props;\n    const formattedTexts = instrFormatter.getAsFormattedText(\n      instruction,\n      metadata\n    );\n    const parametersCount = metadata.getParametersCount();\n\n    return (\n      <span\n        className={classNames({\n          [disabledText]: disabled,\n        })}\n      >\n        {mapFor(0, formattedTexts.size(), i => {\n          const formatting = formattedTexts.getTextFormatting(i);\n          const parameterIndex = formatting.getUserData();\n          const isParameter =\n            parameterIndex >= 0 && parameterIndex < parametersCount;\n\n          if (!isParameter) {\n            return (\n              <span key={i}>\n                {i === 0\n                  ? capitalize(formattedTexts.getString(i))\n                  : formattedTexts.getString(i)}\n              </span>\n            );\n          }\n\n          const parameterMetadata = metadata.getParameter(parameterIndex);\n          const parameterType = parameterMetadata.getType();\n          return (\n            <span\n              key={i}\n              className={classNames({\n                [selectableArea]: true,\n                [instructionParameter]: true,\n                [parameterType]: true,\n              })}\n              onClick={domEvent => {\n                props.onParameterClick(domEvent, parameterIndex);\n\n                // On touchscreen, don't propagate the click to the instruction div,\n                // as it's listening for taps to simulate double \"clicks\".\n                if (props.screenType === 'touch') {\n                  domEvent.stopPropagation();\n                }\n              }}\n              onKeyPress={event => {\n                if (shouldActivate(event)) {\n                  props.onParameterClick(event, parameterIndex);\n                  event.stopPropagation();\n                  event.preventDefault();\n                }\n              }}\n              tabIndex={0}\n            >\n              {ParameterRenderingService.renderInlineParameter({\n                value: formattedTexts.getString(i),\n                parameterMetadata,\n                renderObjectThumbnail,\n                InvalidParameterValue,\n                MissingParameterValue,\n                useAssignmentOperators,\n              })}\n            </span>\n          );\n        })}\n      </span>\n    );\n  };\n\n  //TODO: Metadata could be cached for performance boost.\n  const metadata = isCondition\n    ? gd.MetadataProvider.getConditionMetadata(\n        gd.JsPlatform.get(),\n        instruction.getType()\n      )\n    : gd.MetadataProvider.getActionMetadata(\n        gd.JsPlatform.get(),\n        instruction.getType()\n      );\n\n  // Disable drag on touchscreens, because it would interfere with the\n  // scroll, and would create too much mistake/frustration.\n  const screenType = useScreenType();\n  const dragAllowed = screenType !== 'touch';\n\n  // Allow a long press to show the context menu\n  const longTouchForContextMenuProps = useLongTouch(\n    React.useCallback(\n      event => {\n        onContextMenu(event.clientX, event.clientY);\n      },\n      [onContextMenu]\n    )\n  );\n\n  return (\n    <DragSourceAndDropTarget\n      beginDrag={() => {\n        onClick(); // Select the dragged instruction\n\n        // No need to save here what is being dragged,\n        // as its the entire selection that is considered to be dragged.\n        return {\n          isCondition,\n        };\n      }}\n      canDrag={() => dragAllowed}\n      canDrop={draggedItem => draggedItem.isCondition === isCondition}\n      drop={() => {\n        onMoveToInstruction();\n      }}\n    >\n      {({ connectDragSource, connectDropTarget, isOver, canDrop }) => {\n        // The instruction itself can be dragged and is a target for\n        // another instruction to be dropped. It's IMPORTANT NOT to have\n        // the subinstructions list inside the connectDropTarget/connectDragSource\n        // as otherwise this can confuse react-dnd (\"Expected to find a valid target\")\n        // (surely due to components re-mounting/rerendering ?).\n        const instructionDragSourceElement = connectDragSource(\n          <div\n            style={styles.container}\n            className={classNames({\n              [selectableArea]: true,\n              [selectedArea]: props.selected,\n            })}\n            onClick={e => {\n              e.stopPropagation();\n\n              if (props.screenType === 'touch' && props.selected) {\n                // On touch screens, tapping again a selected instruction should edit it.\n                props.onDoubleClick();\n              } else {\n                props.onClick();\n              }\n            }}\n            onDoubleClick={e => {\n              e.stopPropagation();\n              props.onDoubleClick();\n            }}\n            onContextMenu={e => {\n              e.stopPropagation();\n              onContextMenu(e.clientX, e.clientY);\n            }}\n            {...longTouchForContextMenuProps}\n            onKeyPress={event => {\n              if (shouldValidate(event)) {\n                props.onDoubleClick();\n                event.stopPropagation();\n                event.preventDefault();\n              } else if (shouldActivate(event)) {\n                props.onClick();\n                event.stopPropagation();\n                event.preventDefault();\n              }\n            }}\n            tabIndex={0}\n          >\n            {instruction.isInverted() && (\n              <img\n                className={classNames({\n                  [icon]: true,\n                })}\n                src=\"res/contraire.png\"\n                alt=\"Condition is negated\"\n              />\n            )}\n            <img\n              className={classNames({\n                [icon]: true,\n              })}\n              src={metadata.getSmallIconFilename()}\n              alt=\"\"\n            />\n            {renderInstructionText(metadata)}\n          </div>\n        );\n\n        const instructionDragSourceDropTargetElement = instructionDragSourceElement\n          ? connectDropTarget(instructionDragSourceElement)\n          : null;\n\n        return (\n          <React.Fragment>\n            {isOver && <DropIndicator canDrop={canDrop} />}\n            {instructionDragSourceDropTargetElement}\n            {metadata.canHaveSubInstructions() && (\n              <InstructionsList\n                style={\n                  {} /* TODO: Use a new object to force update - somehow updates are not always propagated otherwise */\n                }\n                className={subInstructionsContainer}\n                instrsList={instruction.getSubInstructions()}\n                areConditions={props.isCondition}\n                selection={props.selection}\n                onAddNewInstruction={props.onAddNewSubInstruction}\n                onPasteInstructions={props.onPasteSubInstructions}\n                onMoveToInstruction={props.onMoveToSubInstruction}\n                onMoveToInstructionsList={props.onMoveToSubInstructionsList}\n                onInstructionClick={props.onSubInstructionClick}\n                onInstructionDoubleClick={props.onSubInstructionDoubleClick}\n                onInstructionContextMenu={props.onSubInstructionContextMenu}\n                onAddInstructionContextMenu={\n                  props.onAddSubInstructionContextMenu\n                }\n                onParameterClick={props.onSubParameterClick}\n                addButtonLabel={<Trans>Add a sub-condition</Trans>}\n                disabled={props.disabled}\n                renderObjectThumbnail={props.renderObjectThumbnail}\n                screenType={props.screenType}\n                windowWidth={props.windowWidth}\n              />\n            )}\n          </React.Fragment>\n        );\n      }}\n    </DragSourceAndDropTarget>\n  );\n};\n\nexport default Instruction;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\n\nexport default class RelationalOperatorField extends Component<ParameterFieldProps> {\n  _field: ?SelectField;\n  focus() {\n    if (this._field && this._field.focus) this._field.focus();\n  }\n\n  render() {\n    const { parameterMetadata } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    return (\n      <SelectField\n        margin={this.props.isInline ? 'none' : 'dense'}\n        fullWidth\n        floatingLabelText={description}\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        value={this.props.value}\n        onChange={(e, i, value: string) => this.props.onChange(value)}\n        ref={field => (this._field = field)}\n        hintText={t`Choose an operator`}\n      >\n        <SelectOption value=\"=\" primaryText={t`= (equal to)`} />\n        <SelectOption value=\"<\" primaryText={t`< (less than)`} />\n        <SelectOption value=\">\" primaryText={t`> (greater than)`} />\n        <SelectOption value=\"<=\" primaryText={t`≤ (less or equal to)`} />\n        <SelectOption value=\">=\" primaryText={t`≥ (greater or equal to)`} />\n        <SelectOption value=\"!=\" primaryText={t`≠ (not equal to)`} />\n      </SelectField>\n    );\n  }\n}\n\nexport const renderInlineRelationalOperator = ({\n  value,\n  InvalidParameterValue,\n}: ParameterInlineRendererProps) => {\n  if (!value) {\n    return (\n      <InvalidParameterValue isEmpty>\n        <Trans>Choose an operator</Trans>\n      </InvalidParameterValue>\n    );\n  }\n\n  if (\n    value !== '=' &&\n    value !== '<' &&\n    value !== '>' &&\n    value !== '<=' &&\n    value !== '>=' &&\n    value !== '!='\n  ) {\n    return <InvalidParameterValue>{value}</InvalidParameterValue>;\n  }\n\n  if (value === '<=') return '\\u2264';\n  if (value === '>=') return '\\u2265';\n  else if (value === '!=') return '\\u2260';\n\n  return value;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\n\nexport default class OperatorField extends Component<ParameterFieldProps> {\n  _field: ?SelectField;\n  focus() {\n    if (this._field && this._field.focus) this._field.focus();\n  }\n\n  render() {\n    const { parameterMetadata } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    return (\n      <SelectField\n        margin={this.props.isInline ? 'none' : 'dense'}\n        fullWidth\n        floatingLabelText={description}\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        value={this.props.value}\n        onChange={(e, i, value: string) => this.props.onChange(value)}\n        ref={field => (this._field = field)}\n        hintText={t`Choose an operator`}\n      >\n        <SelectOption value=\"=\" primaryText={t`= (set to)`} />\n        <SelectOption value=\"+\" primaryText={t`+ (add)`} />\n        <SelectOption value=\"-\" primaryText={t`- (subtract)`} />\n        <SelectOption value=\"*\" primaryText={t`* (multiply by)`} />\n        <SelectOption value=\"/\" primaryText={t`/ (divide by)`} />\n      </SelectField>\n    );\n  }\n}\n\nexport const renderInlineOperator = ({\n  value,\n  InvalidParameterValue,\n  useAssignmentOperators,\n}: ParameterInlineRendererProps) => {\n  if (!value) {\n    return (\n      <InvalidParameterValue isEmpty>\n        <Trans>Choose an operator</Trans>\n      </InvalidParameterValue>\n    );\n  }\n\n  if (useAssignmentOperators) {\n    if (value === '=') return '=';\n    else if (value === '+') return '+=';\n    else if (value === '-') return '-=';\n    else if (value === '/') return '/=';\n    else if (value === '*') return '*=';\n  } else {\n    if (value === '=') return <Trans>set to</Trans>;\n    else if (value === '+') return <Trans>add</Trans>;\n    else if (value === '-') return <Trans>subtract</Trans>;\n    else if (value === '/') return <Trans>divide by</Trans>;\n    else if (value === '*') return <Trans>multiply by</Trans>;\n  }\n\n  return <InvalidParameterValue>{value}</InvalidParameterValue>;\n};\n","import { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport React, { Component } from 'react';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\n\nexport default class MouseField extends Component {\n  focus() {}\n\n  render() {\n    const { parameterMetadata, value } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    return (\n      <SelectField\n        margin={this.props.isInline ? 'none' : 'dense'}\n        fullWidth\n        floatingLabelText={description}\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        value={value}\n        ref={field => (this._field = field)}\n        onChange={(e, i, value) => this.props.onChange(value)}\n        errorText={value ? undefined : <Trans>You must select a button</Trans>}\n      >\n        <SelectOption value=\"Left\" primaryText={t`Left (primary)`} />\n        <SelectOption value=\"Right\" primaryText={t`Right (secondary)`} />\n        <SelectOption\n          value=\"Middle\"\n          primaryText={t`Middle (Auxiliary button, usually the wheel button)`}\n        />\n        {/* TODO: Add support for these buttons in the game engine\n         <SelectOption\n          value=\"XButton1\"\n          primaryText={t`Special button #1`}\n        />\n        <SelectOption\n          value=\"XButton2\"\n          primaryText={t`Special button #2`}\n        /> */}\n      </SelectField>\n    );\n  }\n}\n\nexport const renderInlineMouse = ({\n  value,\n  InvalidParameterValue,\n}: ParameterInlineRendererProps) => {\n  return value ? (\n    value\n  ) : (\n    <InvalidParameterValue isEmpty>\n      <Trans>Choose a mouse button</Trans>\n    </InvalidParameterValue>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport React, { Component } from 'react';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport SemiControlledAutoComplete from '../../UI/SemiControlledAutoComplete';\n\nconst keyNames = [\n  'Num0',\n  'Num1',\n  'Num2',\n  'Num3',\n  'Num4',\n  'Num5',\n  'Num6',\n  'Num7',\n  'Num8',\n  'Num9',\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z',\n  'LBracket',\n  'RBracket',\n  'SemiColon',\n  'Numpad0',\n  'Numpad1',\n  'Numpad2',\n  'Numpad3',\n  'Numpad4',\n  'Numpad5',\n  'Numpad6',\n  'Numpad7',\n  'Numpad8',\n  'Numpad9',\n  'Escape',\n  'Space',\n  'Return',\n  'Back',\n  'Tab',\n  'PageUp',\n  'PageDown',\n  'End',\n  'Home',\n  'Insert',\n  'Delete',\n  'Add',\n  'Subtract',\n  'Multiply',\n  'Divide',\n  'NumpadAdd',\n  'NumpadSubtract',\n  'NumpadMultiply',\n  'NumpadDivide',\n  'Left',\n  'Right',\n  'Up',\n  'Down',\n  'NumpadLeft',\n  'NumpadRight',\n  'NumpadUp',\n  'NumpadDown',\n  'F1',\n  'F2',\n  'F3',\n  'F4',\n  'F5',\n  'F6',\n  'F7',\n  'F8',\n  'F9',\n  'F10',\n  'F11',\n  'F12',\n  'Pause',\n  'RControl',\n  'LControl',\n  'RAlt',\n  'LAlt',\n  'RShift',\n  'LShift',\n];\n\nconst isKeyValid = (key: string) => keyNames.indexOf(key) !== -1;\n\nexport default class KeyField extends Component<ParameterFieldProps, {||}> {\n  _field: ?any;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const {\n      value,\n      onChange,\n      isInline,\n      parameterMetadata,\n      onRequestClose,\n    } = this.props;\n\n    return (\n      <SemiControlledAutoComplete\n        margin={this.props.isInline ? 'none' : 'dense'}\n        floatingLabelText={\n          parameterMetadata ? parameterMetadata.getDescription() : undefined\n        }\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        fullWidth\n        value={value}\n        onChange={onChange}\n        dataSource={keyNames.map(keyName => ({\n          text: keyName,\n          value: keyName,\n        }))}\n        openOnFocus={!isInline}\n        onRequestClose={onRequestClose}\n        ref={field => (this._field = field)}\n        errorText={\n          !value ? (\n            <Trans>You must select a key.</Trans>\n          ) : !isKeyValid(value) ? (\n            <Trans>You must select a valid key. \"{value}\" is not valid.</Trans>\n          ) : (\n            undefined\n          )\n        }\n      />\n    );\n  }\n}\n\nexport const renderInlineKey = ({\n  value,\n  InvalidParameterValue,\n}: ParameterInlineRendererProps) => {\n  if (!value) {\n    return (\n      <InvalidParameterValue isEmpty>\n        <Trans>Choose a key</Trans>\n      </InvalidParameterValue>\n    );\n  }\n\n  return isKeyValid(value) ? (\n    value\n  ) : (\n    <InvalidParameterValue>{value}</InvalidParameterValue>\n  );\n};\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js-legacy';\n\n/**\n * Objects with an unknown type are rendered with a placeholder rectangle.\n *\n * @extends RenderedInstance\n * @class RenderedUnknownInstance\n * @constructor\n */\nfunction RenderedUnknownInstance(\n  project,\n  layout,\n  instance,\n  associatedObject,\n  pixiContainer,\n  pixiResourcesLoader\n) {\n  RenderedInstance.call(\n    this,\n    project,\n    layout,\n    instance,\n    associatedObject,\n    pixiContainer,\n    pixiResourcesLoader\n  );\n\n  //This renderer show a placeholder for the object:\n  this._pixiObject = new PIXI.Graphics();\n  this._pixiContainer.addChild(this._pixiObject);\n\n  var width = instance.hasCustomSize() ? instance.getCustomWidth() : 32;\n  var height = instance.hasCustomSize() ? instance.getCustomHeight() : 32;\n\n  this._pixiObject.beginFill(0x0033ff);\n  this._pixiObject.lineStyle(1, 0xffd900, 1);\n  this._pixiObject.moveTo(0, 0);\n  this._pixiObject.lineTo(width, 0);\n  this._pixiObject.lineTo(width, height);\n  this._pixiObject.lineTo(0, height);\n  this._pixiObject.endFill();\n}\nRenderedUnknownInstance.prototype = Object.create(RenderedInstance.prototype);\nRenderedUnknownInstance.getThumbnail = function(\n  project,\n  resourcesLoader,\n  object\n) {\n  return 'res/unknown32.png';\n};\n\nRenderedUnknownInstance.prototype.update = function() {\n  this._pixiObject.position.x = this._instance.getX();\n  this._pixiObject.position.y = this._instance.getY();\n  this._pixiObject.rotation = (this._instance.getAngle() * Math.PI) / 180.0;\n};\n\nexport default RenderedUnknownInstance;\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js-legacy';\nconst gd /* TODO: add flow in this file */ = global.gd;\n\n/**\n * Renderer for gd.SpriteObject\n *\n * @extends RenderedInstance\n * @class RenderedSpriteInstance\n * @constructor\n */\nfunction RenderedSpriteInstance(\n  project,\n  layout,\n  instance,\n  associatedObject,\n  pixiContainer,\n  pixiResourcesLoader\n) {\n  RenderedInstance.call(\n    this,\n    project,\n    layout,\n    instance,\n    associatedObject,\n    pixiContainer,\n    pixiResourcesLoader\n  );\n\n  this._renderedAnimation = 0;\n  this._renderedDirection = 0;\n  this._centerX = 0;\n  this._centerY = 0;\n  this._originX = 0;\n  this._originY = 0;\n\n  //Setup the PIXI object:\n  this._pixiObject = new PIXI.Sprite(\n    this._pixiResourcesLoader.getInvalidPIXITexture()\n  );\n  this._pixiContainer.addChild(this._pixiObject);\n  this.updatePIXITexture();\n  this.updatePIXISprite();\n}\nRenderedSpriteInstance.prototype = Object.create(RenderedInstance.prototype);\n\n/**\n * Return a URL for thumbnail of the specified object.\n */\nRenderedSpriteInstance.getThumbnail = function(\n  project,\n  resourcesLoader,\n  object\n) {\n  const spriteObject = gd.asSpriteObject(object);\n\n  if (\n    spriteObject.getAnimationsCount() > 0 &&\n    spriteObject.getAnimation(0).getDirectionsCount() > 0 &&\n    spriteObject\n      .getAnimation(0)\n      .getDirection(0)\n      .getSpritesCount() > 0\n  ) {\n    const imageName = spriteObject\n      .getAnimation(0)\n      .getDirection(0)\n      .getSprite(0)\n      .getImageName();\n    return resourcesLoader.getResourceFullUrl(project, imageName, {});\n  }\n\n  return 'res/unknown32.png';\n};\n\nRenderedSpriteInstance.prototype.updatePIXISprite = function() {\n  this._pixiObject.anchor.x =\n    this._centerX / this._pixiObject.texture.frame.width;\n  this._pixiObject.anchor.y =\n    this._centerY / this._pixiObject.texture.frame.height;\n  this._pixiObject.rotation = this._shouldNotRotate\n    ? 0\n    : RenderedInstance.toRad(this._instance.getAngle());\n  if (this._instance.hasCustomSize()) {\n    this._pixiObject.scale.x =\n      this._instance.getCustomWidth() / this._pixiObject.texture.frame.width;\n    this._pixiObject.scale.y =\n      this._instance.getCustomHeight() / this._pixiObject.texture.frame.height;\n  } else {\n    this._pixiObject.scale.x = 1;\n    this._pixiObject.scale.y = 1;\n  }\n  this._pixiObject.position.x =\n    this._instance.getX() +\n    (this._centerX - this._originX) * Math.abs(this._pixiObject.scale.x);\n  this._pixiObject.position.y =\n    this._instance.getY() +\n    (this._centerY - this._originY) * Math.abs(this._pixiObject.scale.y);\n};\n\nRenderedSpriteInstance.prototype.updateSprite = function() {\n  this._sprite = null;\n  this._shouldNotRotate = false;\n\n  const spriteObject = gd.asSpriteObject(this._associatedObject);\n  if (spriteObject.hasNoAnimations()) return false;\n\n  this._renderedAnimation = this._instance.getRawFloatProperty('animation');\n  if (this._renderedAnimation >= spriteObject.getAnimationsCount())\n    this._renderedAnimation = 0;\n\n  const animation = spriteObject.getAnimation(this._renderedAnimation);\n  if (animation.hasNoDirections()) return false;\n\n  this._renderedDirection = 0;\n  if (animation.useMultipleDirections()) {\n    let normalizedAngle = Math.floor(this._instance.getAngle()) % 360;\n    if (normalizedAngle < 0) normalizedAngle += 360;\n\n    this._renderedDirection = Math.round(normalizedAngle / 45) % 8;\n  }\n\n  if (this._renderedDirection >= animation.getDirectionsCount())\n    this._renderedDirection = 0;\n\n  const direction = animation.getDirection(this._renderedDirection);\n\n  if (direction.getSpritesCount() === 0) return false;\n\n  this._shouldNotRotate = animation.useMultipleDirections();\n  this._sprite = direction.getSprite(0);\n  return true;\n};\n\nRenderedSpriteInstance.prototype.updatePIXITexture = function() {\n  this.updateSprite();\n  if (!this._sprite) return;\n\n  this._pixiObject.texture = this._pixiResourcesLoader.getPIXITexture(\n    this._project,\n    this._sprite.getImageName()\n  );\n\n  const origin = this._sprite.getOrigin();\n  this._originX = origin.getX();\n  this._originY = origin.getY();\n\n  if (this._sprite.isDefaultCenterPoint()) {\n    if (!this._pixiObject.texture.baseTexture.valid) {\n      var that = this;\n      // We might have to wait for the texture to load\n      this._pixiObject.texture.on('update', function() {\n        that._centerX = that._pixiObject.texture.width / 2;\n        that._centerY = that._pixiObject.texture.height / 2;\n        that._pixiObject.texture.off('update', this);\n      });\n    } else {\n      this._centerX = this._pixiObject.texture.width / 2;\n      this._centerY = this._pixiObject.texture.height / 2;\n    }\n  } else {\n    const center = this._sprite.getCenter();\n    this._centerX = center.getX();\n    this._centerY = center.getY();\n  }\n};\n\nRenderedSpriteInstance.prototype.update = function() {\n  const animation = this._instance.getRawFloatProperty('animation');\n  if (this._renderedAnimation !== animation) this.updatePIXITexture();\n\n  this.updatePIXISprite();\n};\n\nRenderedSpriteInstance.prototype.getOriginX = function() {\n  if (!this._sprite || !this._pixiObject) return 0;\n\n  return this._sprite.getOrigin().getX() * this._pixiObject.scale.x;\n};\n\nRenderedSpriteInstance.prototype.getOriginY = function() {\n  if (!this._sprite || !this._pixiObject) return 0;\n\n  return this._sprite.getOrigin().getY() * this._pixiObject.scale.y;\n};\n\nRenderedSpriteInstance.prototype.getDefaultWidth = function() {\n  return Math.abs(this._pixiObject.width);\n};\n\nRenderedSpriteInstance.prototype.getDefaultHeight = function() {\n  return Math.abs(this._pixiObject.height);\n};\n\nexport default RenderedSpriteInstance;\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js-legacy';\nconst gd /* TODO: add flow in this file */ = global.gd;\n\n/**\n * Renderer for gd.TiledSpriteObject\n *\n * @extends RenderedInstance\n * @class RenderedTiledSpriteInstance\n * @constructor\n */\nfunction RenderedTiledSpriteInstance(\n  project,\n  layout,\n  instance,\n  associatedObject,\n  pixiContainer,\n  pixiResourcesLoader\n) {\n  RenderedInstance.call(\n    this,\n    project,\n    layout,\n    instance,\n    associatedObject,\n    pixiContainer,\n    pixiResourcesLoader\n  );\n\n  //Setup the PIXI object:\n  var tiledSprite = gd.asTiledSpriteObject(associatedObject);\n  this._texture = tiledSprite.getTexture();\n  this._pixiObject = new PIXI.TilingSprite(\n    this._pixiResourcesLoader.getPIXITexture(project, tiledSprite.getTexture()),\n    tiledSprite.getWidth(),\n    tiledSprite.getHeight()\n  );\n  this._pixiObject.anchor.x = 0.5;\n  this._pixiObject.anchor.y = 0.5;\n  this._pixiContainer.addChild(this._pixiObject);\n}\nRenderedTiledSpriteInstance.prototype = Object.create(\n  RenderedInstance.prototype\n);\n\n/**\n * Return a URL for thumbnail of the specified object.\n */\nRenderedTiledSpriteInstance.getThumbnail = function(\n  project,\n  resourcesLoader,\n  object\n) {\n  var tiledSprite = gd.asTiledSpriteObject(object);\n\n  return resourcesLoader.getResourceFullUrl(\n    project,\n    tiledSprite.getTexture(),\n    {}\n  );\n};\n\nRenderedTiledSpriteInstance.prototype.update = function() {\n  var tiledSprite = gd.asTiledSpriteObject(this._associatedObject);\n  if (this._instance.hasCustomSize()) {\n    this._pixiObject.width = this._instance.getCustomWidth();\n    this._pixiObject.height = this._instance.getCustomHeight();\n  } else {\n    this._pixiObject.width = tiledSprite.getWidth();\n    this._pixiObject.height = tiledSprite.getHeight();\n  }\n\n  if (this._texture !== tiledSprite.getTexture()) {\n    this._texture = tiledSprite.getTexture();\n    this._pixiObject.texture = this._pixiResourcesLoader.getPIXITexture(\n      this._project,\n      tiledSprite.getTexture()\n    );\n  }\n\n  this._pixiObject.x = this._instance.getX() + this._pixiObject.width / 2;\n  this._pixiObject.y = this._instance.getY() + this._pixiObject.height / 2;\n  this._pixiObject.rotation = RenderedInstance.toRad(this._instance.getAngle());\n};\n\nRenderedTiledSpriteInstance.prototype.getDefaultWidth = function() {\n  var tiledSprite = gd.asTiledSpriteObject(this._associatedObject);\n  return tiledSprite.getWidth();\n};\n\nRenderedTiledSpriteInstance.prototype.getDefaultHeight = function() {\n  var tiledSprite = gd.asTiledSpriteObject(this._associatedObject);\n  return tiledSprite.getHeight();\n};\n\nexport default RenderedTiledSpriteInstance;\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js-legacy';\nconst gd /* TODO: add flow in this file */ = global.gd;\n\n/**\n * Renderer for gd.PanelSpriteObject\n *\n * Heavily inspired from the GDJS PIXI renderer for PanelSprite objects.\n * TODO: Find a way to factor GDJS objects and IDE instances renderers.\n *\n * @extends RenderedInstance\n * @class RenderedPanelSpriteInstance\n * @constructor\n */\nfunction RenderedPanelSpriteInstance(\n  project,\n  layout,\n  instance,\n  associatedObject,\n  pixiContainer,\n  pixiResourcesLoader\n) {\n  RenderedInstance.call(\n    this,\n    project,\n    layout,\n    instance,\n    associatedObject,\n    pixiContainer,\n    pixiResourcesLoader\n  );\n\n  this.makeObjects();\n  this.updateTexture();\n}\nRenderedPanelSpriteInstance.prototype = Object.create(\n  RenderedInstance.prototype\n);\n\nRenderedPanelSpriteInstance.prototype.update = function() {\n  //TODO\n  // if (this._pixiObject.visible && this._wasRendered) {\n  //   this._pixiObject.cacheAsBitmap = true;\n  // }\n  // this._wasRendered = true;\n\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n  if (panelSprite.isTiled() !== this._tiled) {\n    this.makeObjects();\n  }\n  if (panelSprite.getTexture() !== this._textureName) {\n    this.updateTexture();\n  }\n\n  this.updateAngle();\n  this.updatePosition();\n\n  const oldWidth = this._width;\n  const oldHeight = this._height;\n  if (this._instance.hasCustomSize()) {\n    this._width = this._instance.getCustomWidth();\n    this._height = this._instance.getCustomHeight();\n  } else {\n    var tiledSprite = gd.asPanelSpriteObject(this._associatedObject);\n    this._width = tiledSprite.getWidth();\n    this._height = tiledSprite.getHeight();\n  }\n\n  if (this._width !== oldWidth || this._height !== oldHeight) {\n    this.updateWidthHeight();\n  }\n};\n\nRenderedPanelSpriteInstance.prototype.makeObjects = function() {\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n  this._textureName = panelSprite.getTexture();\n  const texture = this._pixiResourcesLoader.getPIXITexture(\n    this._project,\n    this._textureName\n  );\n\n  this._tiled = panelSprite.isTiled();\n  var StretchedSprite = !this._tiled ? PIXI.Sprite : PIXI.TilingSprite;\n\n  if (!this._pixiObject) {\n    this._pixiObject = new PIXI.Container();\n    this._pixiContainer.addChild(this._pixiObject);\n  }\n  this._centerSprite = new StretchedSprite(new PIXI.Texture(texture));\n  this._borderSprites = [\n    new StretchedSprite(new PIXI.Texture(texture)), //Right\n    new PIXI.Sprite(texture), //Top-Right\n    new StretchedSprite(new PIXI.Texture(texture)), //Top\n    new PIXI.Sprite(texture), //Top-Left\n    new StretchedSprite(new PIXI.Texture(texture)), //Left\n    new PIXI.Sprite(texture), //Bottom-Left\n    new StretchedSprite(new PIXI.Texture(texture)), //Bottom\n    new PIXI.Sprite(texture), //Bottom-Right\n  ];\n\n  this._pixiObject.removeChildren();\n  this._pixiObject.addChild(this._centerSprite);\n  for (var i = 0; i < this._borderSprites.length; ++i) {\n    this._pixiObject.addChild(this._borderSprites[i]);\n  }\n};\n\nRenderedPanelSpriteInstance.prototype.updateAngle = function() {\n  this._pixiObject.rotation = RenderedInstance.toRad(this._instance.getAngle());\n};\n\nRenderedPanelSpriteInstance.prototype.updatePosition = function() {\n  this._pixiObject.x = this._instance.getX() + this._width / 2;\n  this._pixiObject.y = this._instance.getY() + this._height / 2;\n};\n\nRenderedPanelSpriteInstance.prototype._updateLocalPositions = function() {\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n\n  this._centerSprite.position.x = panelSprite.getLeftMargin();\n  this._centerSprite.position.y = panelSprite.getTopMargin();\n\n  //Right\n  this._borderSprites[0].position.x =\n    this._width - panelSprite.getRightMargin();\n  this._borderSprites[0].position.y = panelSprite.getTopMargin();\n\n  //Top-right\n  this._borderSprites[1].position.x =\n    this._width - this._borderSprites[1].width;\n  this._borderSprites[1].position.y = 0;\n\n  //Top\n  this._borderSprites[2].position.x = panelSprite.getLeftMargin();\n  this._borderSprites[2].position.y = 0;\n\n  //Top-Left\n  this._borderSprites[3].position.x = 0;\n  this._borderSprites[3].position.y = 0;\n\n  //Left\n  this._borderSprites[4].position.x = 0;\n  this._borderSprites[4].position.y = panelSprite.getTopMargin();\n\n  //Bottom-Left\n  this._borderSprites[5].position.x = 0;\n  this._borderSprites[5].position.y =\n    this._height - this._borderSprites[5].height;\n\n  //Bottom\n  this._borderSprites[6].position.x = panelSprite.getLeftMargin();\n  this._borderSprites[6].position.y =\n    this._height - panelSprite.getBottomMargin();\n\n  //Bottom-Right\n  this._borderSprites[7].position.x =\n    this._width - this._borderSprites[7].width;\n  this._borderSprites[7].position.y =\n    this._height - this._borderSprites[7].height;\n};\n\nRenderedPanelSpriteInstance.prototype._updateSpritesAndTexturesSize = function() {\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n  this._centerSprite.width = Math.max(\n    this._width - panelSprite.getRightMargin() - panelSprite.getLeftMargin(),\n    0\n  );\n  this._centerSprite.height = Math.max(\n    this._height - panelSprite.getTopMargin() - panelSprite.getBottomMargin(),\n    0\n  );\n\n  //Right\n  this._borderSprites[0].width = panelSprite.getRightMargin();\n  this._borderSprites[0].height = Math.max(\n    this._height - panelSprite.getTopMargin() - panelSprite.getBottomMargin(),\n    0\n  );\n\n  //Top\n  this._borderSprites[2].height = panelSprite.getTopMargin();\n  this._borderSprites[2].width = Math.max(\n    this._width - panelSprite.getRightMargin() - panelSprite.getLeftMargin(),\n    0\n  );\n\n  //Left\n  this._borderSprites[4].width = panelSprite.getLeftMargin();\n  this._borderSprites[4].height = Math.max(\n    this._height - panelSprite.getTopMargin() - panelSprite.getBottomMargin(),\n    0\n  );\n\n  //Bottom\n  this._borderSprites[6].height = panelSprite.getBottomMargin();\n  this._borderSprites[6].width = Math.max(\n    this._width - panelSprite.getRightMargin() - panelSprite.getLeftMargin(),\n    0\n  );\n\n  this._wasRendered = true;\n  this._pixiObject.cacheAsBitmap = false;\n};\n\nRenderedPanelSpriteInstance.prototype.updateTexture = function() {\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n  this._textureName = panelSprite.getTexture();\n  const texture = this._pixiResourcesLoader.getPIXITexture(\n    this._project,\n    this._textureName\n  );\n\n  if (!texture.baseTexture.valid) {\n    //Post pone texture update if texture is not loaded\n    const renderer = this;\n    texture.on('update', function() {\n      renderer.updateTexture();\n      texture.off('update', this);\n    });\n\n    return;\n  }\n\n  console.log('Updating PanelSprite instance texture');\n  function makeInsideTexture(rect) {\n    if (rect.width < 0) rect.width = 0;\n    if (rect.height < 0) rect.height = 0;\n    if (rect.x < 0) rect.x = 0;\n    if (rect.y < 0) rect.y = 0;\n    if (rect.x > texture.width) rect.x = texture.width;\n    if (rect.y > texture.height) rect.y = texture.height;\n    if (rect.x + rect.width > texture.width)\n      rect.width = texture.width - rect.x;\n    if (rect.y + rect.height > texture.height)\n      rect.height = texture.height - rect.y;\n\n    return rect;\n  }\n\n  this._centerSprite.texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        panelSprite.getLeftMargin(),\n        panelSprite.getTopMargin(),\n        texture.width -\n          panelSprite.getLeftMargin() -\n          panelSprite.getRightMargin(),\n        texture.height -\n          panelSprite.getTopMargin() -\n          panelSprite.getBottomMargin()\n      )\n    )\n  );\n\n  //Right\n  this._borderSprites[0].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        texture.width - panelSprite.getRightMargin(),\n        panelSprite.getTopMargin(),\n        panelSprite.getRightMargin(),\n        texture.height -\n          panelSprite.getTopMargin() -\n          panelSprite.getBottomMargin()\n      )\n    )\n  );\n\n  //Top-right\n  this._borderSprites[1].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        texture.width - panelSprite.getRightMargin(),\n        0,\n        panelSprite.getRightMargin(),\n        panelSprite.getTopMargin()\n      )\n    )\n  );\n\n  //Top\n  this._borderSprites[2].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        panelSprite.getLeftMargin(),\n        0,\n        texture.width -\n          panelSprite.getLeftMargin() -\n          panelSprite.getRightMargin(),\n        panelSprite.getTopMargin()\n      )\n    )\n  );\n\n  //Top-Left\n  this._borderSprites[3].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        0,\n        0,\n        panelSprite.getLeftMargin(),\n        panelSprite.getTopMargin()\n      )\n    )\n  );\n\n  //Left\n  this._borderSprites[4].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        0,\n        panelSprite.getTopMargin(),\n        panelSprite.getLeftMargin(),\n        texture.height -\n          panelSprite.getTopMargin() -\n          panelSprite.getBottomMargin()\n      )\n    )\n  );\n\n  //Bottom-Left\n  this._borderSprites[5].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        0,\n        texture.height - panelSprite.getBottomMargin(),\n        panelSprite.getLeftMargin(),\n        panelSprite.getBottomMargin()\n      )\n    )\n  );\n\n  //Bottom\n  this._borderSprites[6].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        panelSprite.getLeftMargin(),\n        texture.height - panelSprite.getBottomMargin(),\n        texture.width -\n          panelSprite.getLeftMargin() -\n          panelSprite.getRightMargin(),\n        panelSprite.getBottomMargin()\n      )\n    )\n  );\n\n  //Bottom-Right\n  this._borderSprites[7].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        texture.width - panelSprite.getRightMargin(),\n        texture.height - panelSprite.getBottomMargin(),\n        panelSprite.getRightMargin(),\n        panelSprite.getBottomMargin()\n      )\n    )\n  );\n\n  this._updateSpritesAndTexturesSize();\n  this._updateLocalPositions();\n  this.updatePosition();\n};\n\nRenderedPanelSpriteInstance.prototype.updateWidthHeight = function() {\n  this._pixiObject.pivot.x = this._width / 2;\n  this._pixiObject.pivot.y = this._height / 2;\n  this._updateSpritesAndTexturesSize();\n  this._updateLocalPositions();\n  this.updatePosition();\n};\n\nRenderedPanelSpriteInstance.prototype.getDefaultWidth = function() {\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n  return panelSprite.getWidth();\n};\n\nRenderedPanelSpriteInstance.prototype.getDefaultHeight = function() {\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n  return panelSprite.getHeight();\n};\n\n/**\n * Return a URL for thumbnail of the specified object.\n */\nRenderedPanelSpriteInstance.getThumbnail = function(\n  project,\n  resourcesLoader,\n  object\n) {\n  const panelSprite = gd.asPanelSpriteObject(object);\n\n  return resourcesLoader.getResourceFullUrl(\n    project,\n    panelSprite.getTexture(),\n    {}\n  );\n};\n\nexport default RenderedPanelSpriteInstance;\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js-legacy';\nconst gd /* TODO: add flow in this file */ = global.gd;\n\n/**\n * Renderer for a Text object.\n *\n * @extends RenderedInstance\n * @class RenderedTextInstance\n * @constructor\n */\nfunction RenderedTextInstance(\n  project,\n  layout,\n  instance,\n  associatedObject,\n  pixiContainer,\n  pixiResourcesLoader\n) {\n  RenderedInstance.call(\n    this,\n    project,\n    layout,\n    instance,\n    associatedObject,\n    pixiContainer,\n    pixiResourcesLoader\n  );\n\n  //Setup the PIXI object:\n  const textObject = gd.asTextObject(this._associatedObject);\n  this._pixiObject = new PIXI.Text(' ', { align: 'left' });\n  this._pixiObject.anchor.x = 0.5;\n  this._pixiObject.anchor.y = 0.5;\n  this._pixiContainer.addChild(this._pixiObject);\n  this._styleFontDirty = true;\n  this._fontFamily = this._pixiResourcesLoader.getFontFamily(\n    this._project,\n    textObject.getFontName()\n  );\n  this.update();\n}\nRenderedTextInstance.prototype = Object.create(RenderedInstance.prototype);\n\n/**\n * Return a URL for thumbnail of the specified object.\n */\nRenderedTextInstance.getThumbnail = function(project, resourcesLoader, object) {\n  return 'CppPlatform/Extensions/texticon24.png';\n};\n\nRenderedTextInstance.prototype.update = function() {\n  const textObject = gd.asTextObject(this._associatedObject);\n  this._pixiObject.text = textObject.getString();\n\n  //Update style, only if needed to avoid destroying text rendering performances\n  if (\n    textObject.isItalic() !== this._isItalic ||\n    textObject.isBold() !== this._isBold ||\n    textObject.getCharacterSize() !== this._characterSize ||\n    this._instance.hasCustomSize() !== this._wrapping ||\n    (this._instance.getCustomWidth() !== this._wrappingWidth && this._wrapping)\n  ) {\n    this._isItalic = textObject.isItalic();\n    this._isBold = textObject.isBold();\n    this._characterSize = textObject.getCharacterSize();\n    this._wrapping = this._instance.hasCustomSize();\n    this._wrappingWidth = this._instance.getCustomWidth();\n    this._styleFontDirty = true;\n  }\n\n  if (this._fontName !== textObject.getFontName()) {\n    //Avoid calling loadFontFamily if the font didn't changed.\n    this._fontName = textObject.getFontName();\n    this._pixiResourcesLoader\n      .loadFontFamily(this._project, textObject.getFontName())\n      .then(fontFamily => {\n        // Once the font is loaded, we can use the given fontFamily.\n        this._fontFamily = fontFamily;\n        this._styleFontDirty = true;\n      })\n      .catch(err => {\n        // Ignore errors\n        console.warn(\n          'Unable to load font family for RenderedTextInstance',\n          err\n        );\n      });\n  }\n\n  if (this._styleFontDirty) {\n    this._pixiObject.style.fontFamily = this._fontFamily || 'Arial';\n    this._pixiObject.style.fontSize = Math.max(1, this._characterSize) + 'px';\n    this._pixiObject.style.fontStyle = this._isItalic ? 'italic' : 'normal';\n    this._pixiObject.style.fontWeight = this._isBold ? 'bold' : 'normal';\n    this._pixiObject.style.wordWrap = this._wrapping;\n    this._pixiObject.style.wordWrapWidth =\n      this._wrappingWidth <= 1 ? 1 : this._wrappingWidth;\n    this._pixiObject.style.breakWords = true;\n\n    // Manually ask the PIXI object to re-render as we changed a style property\n    // see http://www.html5gamedevs.com/topic/16924-change-text-style-post-render/\n    this._pixiObject.dirty = true;\n    this._styleFontDirty = false;\n  }\n\n  if (\n    textObject.getColorR() !== this._colorR ||\n    textObject.getColorG() !== this._colorG ||\n    textObject.getColorB() !== this._colorB\n  ) {\n    this._colorR = textObject.getColorR();\n    this._colorG = textObject.getColorG();\n    this._colorB = textObject.getColorB();\n    this._pixiObject.style.fill =\n      'rgb(' + this._colorR + ',' + this._colorG + ',' + this._colorB + ')';\n\n    // Manually ask the PIXI object to re-render as we changed a style property\n    // see http://www.html5gamedevs.com/topic/16924-change-text-style-post-render/\n    this._pixiObject.dirty = true;\n  }\n\n  this._pixiObject.position.x =\n    this._instance.getX() + this._pixiObject.width / 2;\n  this._pixiObject.position.y =\n    this._instance.getY() + this._pixiObject.height / 2;\n  this._pixiObject.rotation = RenderedInstance.toRad(this._instance.getAngle());\n};\n\nRenderedTextInstance.prototype.getDefaultWidth = function() {\n  return this._pixiObject.width;\n};\n\nRenderedTextInstance.prototype.getDefaultHeight = function() {\n  return this._pixiObject.height;\n};\n\nexport default RenderedTextInstance;\n","import makeRenderer from './RenderedIconInstance';\nexport default makeRenderer('CppPlatform/Extensions/primitivedrawingicon.png');\n","import makeRenderer from './RenderedIconInstance';\nexport default makeRenderer('CppPlatform/Extensions/textentry.png');\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js-legacy';\nimport { rgbToHexNumber } from '../../Utils/ColorTransformer';\nconst gd /* TODO: add flow in this file */ = global.gd;\n\n/**\n * Renderer for an ParticleEmitter object.\n *\n * @extends RenderedInstance\n * @class RenderedParticleEmitterInstance\n * @constructor\n */\nfunction RenderedParticleEmitterInstance(\n  project,\n  layout,\n  instance,\n  associatedObject,\n  pixiContainer,\n  pixiResourcesLoader\n) {\n  RenderedInstance.call(\n    this,\n    project,\n    layout,\n    instance,\n    associatedObject,\n    pixiContainer,\n    pixiResourcesLoader\n  );\n\n  this._pixiObject = new PIXI.Graphics();\n  this._pixiContainer.addChild(this._pixiObject);\n  this.updateGraphics();\n}\nRenderedParticleEmitterInstance.prototype = Object.create(\n  RenderedInstance.prototype\n);\n\n/**\n * Return a URL for thumbnail of the specified object.\n */\nRenderedParticleEmitterInstance.getThumbnail = function(\n  project,\n  resourcesLoader,\n  object\n) {\n  return 'CppPlatform/Extensions/particleSystemicon.png';\n};\n\nRenderedParticleEmitterInstance.prototype.update = function() {\n  this._pixiObject.position.x = this._instance.getX();\n  this._pixiObject.position.y = this._instance.getY();\n  this.updateGraphics();\n};\n\n/**\n * Render the preview of the particle emitter according to the setup of the object\n */\nRenderedParticleEmitterInstance.prototype.updateGraphics = function() {\n  const particleEmitterObject = gd.asParticleEmitterObject(\n    this._associatedObject\n  );\n\n  this._pixiObject.clear();\n\n  const emitterAngle = (this._instance.getAngle() / 180) * 3.14159;\n  const sprayConeAngle = particleEmitterObject.getConeSprayAngle();\n  const line1Angle = emitterAngle - (sprayConeAngle / 2.0 / 180.0) * 3.14159;\n  const line2Angle = emitterAngle + (sprayConeAngle / 2.0 / 180.0) * 3.14159;\n  const length = 64;\n\n  this._pixiObject.beginFill(0, 0);\n  this._pixiObject.lineStyle(\n    3,\n    rgbToHexNumber(\n      particleEmitterObject.getParticleRed2(),\n      particleEmitterObject.getParticleGreen2(),\n      particleEmitterObject.getParticleBlue2()\n    ),\n    1\n  );\n  this._pixiObject.moveTo(0, 0);\n  this._pixiObject.lineTo(\n    Math.cos(line1Angle) * length,\n    Math.sin(line1Angle) * length\n  );\n  this._pixiObject.moveTo(0, 0);\n  this._pixiObject.lineTo(\n    Math.cos(line2Angle) * length,\n    Math.sin(line2Angle) * length\n  );\n  this._pixiObject.endFill();\n\n  this._pixiObject.lineStyle(0, 0x000000, 1);\n  this._pixiObject.beginFill(\n    rgbToHexNumber(\n      particleEmitterObject.getParticleRed1(),\n      particleEmitterObject.getParticleGreen1(),\n      particleEmitterObject.getParticleBlue1()\n    )\n  );\n  this._pixiObject.drawCircle(0, 0, 8);\n  this._pixiObject.endFill();\n};\n\nRenderedParticleEmitterInstance.prototype.getDefaultWidth = function() {\n  return 128;\n};\n\nRenderedParticleEmitterInstance.prototype.getDefaultHeight = function() {\n  return 128;\n};\n\nRenderedParticleEmitterInstance.prototype.getOriginX = function() {\n  return 64;\n};\n\nRenderedParticleEmitterInstance.prototype.getOriginY = function() {\n  return 64;\n};\n\nexport default RenderedParticleEmitterInstance;\n","import makeRenderer from './RenderedIconInstance';\nexport default makeRenderer('JsPlatform/Extensions/skeletonicon24.png');\n","import FontFaceObserver from 'fontfaceobserver';\n\n/**\n * A simple wrapper around FontFace (if supported) or @font-face + FontFaceObserver\n * to load a font from an url and be notified when loading is done (or failed).\n * @param {*} fontFamily\n * @param {*} src\n * @param {*} descriptors\n */\nexport const loadFontFace = (fontFamily, src, descriptors = {}) => {\n  if (typeof FontFace !== 'undefined') {\n    // Load the given font using CSS Font Loading API.\n    const fontFace = new FontFace(fontFamily, src, descriptors);\n    document.fonts.add(fontFace);\n    return fontFace.load();\n  } else {\n    // Add @font-face and use FontFaceObserver to be notified when the\n    // font is ready.\n    const newStyle = document.createElement('style');\n    newStyle.appendChild(\n      document.createTextNode(\n        `@font-face {\n          font-family: ${fontFamily};\n          src: ${src};\n        }`\n      )\n    );\n\n    document.head.appendChild(newStyle);\n    return new FontFaceObserver(fontFamily, descriptors).load().catch(err => {\n      console.warn(`Error while loading font ${fontFamily}`, err);\n\n      throw err;\n    });\n  }\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport React, { Component } from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Line, Column } from '../../UI/Grid';\nimport {\n  type ParameterFieldProps,\n  getParameterValueOrDefault,\n} from './ParameterFieldCommons';\nimport { focusButton } from '../../UI/Button';\nimport Text from '../../UI/Text';\n\nconst styles = {\n  button: {\n    margin: 5,\n  },\n  description: {\n    marginRight: 5,\n  },\n};\n\nexport default class YesNoField extends Component<ParameterFieldProps, void> {\n  _yesButton = React.createRef<RaisedButton>();\n\n  focus() {\n    focusButton(this._yesButton);\n  }\n\n  render() {\n    const { parameterMetadata, value } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n    const effectiveValue = getParameterValueOrDefault(value, parameterMetadata);\n\n    return (\n      <Line>\n        <Text style={styles.description} displayInlineAsSpan>\n          {description}\n        </Text>\n        <Column noMargin>\n          <RaisedButton\n            style={styles.button}\n            label={<Trans>Yes</Trans>}\n            primary={effectiveValue === 'yes'}\n            onClick={() => this.props.onChange('yes')}\n            ref={this._yesButton}\n          />\n        </Column>\n        <Column noMargin>\n          <RaisedButton\n            style={styles.button}\n            label={<Trans>No</Trans>}\n            primary={effectiveValue !== 'yes'}\n            onClick={() => this.props.onChange('no')}\n          />\n        </Column>\n      </Line>\n    );\n  }\n}\n\nexport const renderInlineYesNo = ({\n  value,\n  parameterMetadata,\n}: ParameterInlineRendererProps) => {\n  if (getParameterValueOrDefault(value, parameterMetadata) === 'yes') {\n    return <Trans>yes</Trans>;\n  } else {\n    return <Trans>no</Trans>;\n  }\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport React, { Component } from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Line, Column } from '../../UI/Grid';\nimport {\n  type ParameterFieldProps,\n  getParameterValueOrDefault,\n} from './ParameterFieldCommons';\nimport { focusButton } from '../../UI/Button';\nimport Text from '../../UI/Text';\n\nconst styles = {\n  button: {\n    margin: 5,\n  },\n  description: {\n    marginRight: 5,\n  },\n};\n\nexport default class TrueFalseField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _trueButton = React.createRef<RaisedButton>();\n\n  focus() {\n    focusButton(this._trueButton);\n  }\n\n  render() {\n    const { parameterMetadata, value } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n    const effectiveValue = getParameterValueOrDefault(value, parameterMetadata);\n\n    return (\n      <Line>\n        <Text style={styles.description} displayInlineAsSpan>\n          {description}\n        </Text>\n        <Column noMargin>\n          <RaisedButton\n            style={styles.button}\n            label={<Trans>True</Trans>}\n            primary={effectiveValue === 'True'}\n            onClick={() => this.props.onChange('True')}\n            ref={this._trueButton}\n          />\n        </Column>\n        <Column noMargin>\n          <RaisedButton\n            style={styles.button}\n            label={<Trans>False</Trans>}\n            primary={effectiveValue !== 'True'}\n            onClick={() => this.props.onChange('False')}\n          />\n        </Column>\n      </Line>\n    );\n  }\n}\n\nexport const renderInlineTrueFalse = ({\n  value,\n  parameterMetadata,\n}: ParameterInlineRendererProps) => {\n  if (getParameterValueOrDefault(value, parameterMetadata) === 'True') {\n    return <Trans>true</Trans>;\n  } else {\n    return <Trans>false</Trans>;\n  }\n};\n","// @flow\nimport React, { Component } from 'react';\nimport GenericExpressionField from './GenericExpressionField';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\nexport default class ExpressionField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?GenericExpressionField;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    return (\n      <GenericExpressionField\n        expressionType=\"number\"\n        ref={field => (this._field = field)}\n        {...this.props}\n      />\n    );\n  }\n}\n","// @flow\nimport React, { Component } from 'react';\nimport { enumerateAllExpressions } from '../../../InstructionOrExpression/EnumerateExpressions';\nimport InstructionOrExpressionSelector from './index';\nimport {\n  createTree,\n  type ExpressionTreeNode,\n} from '../../../InstructionOrExpression/CreateTree';\nimport {\n  type EnumeratedExpressionMetadata,\n  filterEnumeratedInstructionOrExpressionMetadataByScope,\n} from '../../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js';\nimport { type EventsScope } from '../../../InstructionOrExpression/EventsScope.flow';\n\ntype Props = {|\n  expressionType: string,\n  focusOnMount?: boolean,\n  selectedType: string,\n  onChoose: (type: string, EnumeratedExpressionMetadata) => void,\n  scope: EventsScope,\n|};\n\nconst style = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n};\n\nexport default class ExpressionSelector extends Component<Props, {||}> {\n  instructionsInfo: Array<EnumeratedExpressionMetadata> = filterEnumeratedInstructionOrExpressionMetadataByScope(\n    enumerateAllExpressions(this.props.expressionType),\n    this.props.scope\n  );\n  instructionsInfoTree: ExpressionTreeNode = createTree(this.instructionsInfo);\n\n  render() {\n    const { expressionType, scope, ...otherProps } = this.props;\n    return (\n      <InstructionOrExpressionSelector\n        style={style}\n        instructionsInfo={this.instructionsInfo}\n        instructionsInfoTree={this.instructionsInfoTree}\n        iconSize={16}\n        helpPagePath=\"/all-features/expressions-reference\"\n        {...otherProps}\n      />\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\n\nexport type Highlight = {|\n  begin: number,\n  end: number,\n  type?: 'error',\n  message: string,\n|};\n\ntype Props = {|\n  value: string,\n  style: Object,\n  highlights: Array<Highlight>,\n|};\n\nconst defaultStyle = {\n  width: '100%',\n  position: 'absolute',\n  whiteSpace: 'pre-wrap',\n  wordWrap: 'break-word',\n  color: 'transparent',\n};\n\nconst highlightedText = {\n  backgroundColor: 'rgba(244, 67, 54, 0.15)',\n  borderSizing: 'border-box',\n  borderBottom: '3px solid rgba(244, 67, 54, 0.7)',\n};\n\nexport default ({ value, style, highlights }: Props) => {\n  const sortedHighlights = highlights\n    .slice()\n    .sort((highlight1, highlight2) => highlight1.begin - highlight2.begin);\n\n  const elements = [];\n  let lastPos = 0;\n\n  sortedHighlights.forEach((highlight, i) => {\n    const startPos = Math.max(highlight.begin, lastPos);\n    if (startPos !== lastPos) {\n      elements.push(\n        <span key={`defaultText-${i}`}>\n          {value.substring(lastPos, startPos)}\n        </span>\n      );\n    }\n\n    if (lastPos < highlight.end) {\n      elements.push(\n        <span key={`highlightedText-${i}`} style={highlightedText}>\n          {value.substring(startPos, highlight.end)}\n        </span>\n      );\n      lastPos = highlight.end;\n    }\n  });\n  if (lastPos < value.length) {\n    elements.push(\n      <span key={`defaultText-end`}>{value.substring(lastPos)}</span>\n    );\n  }\n\n  return <div style={{ ...defaultStyle, ...style }}>{elements}</div>;\n};\n","// @flow\nimport { mapVector } from '../Utils/MapFor';\nimport {\n  enumerateObjectsAndGroups,\n  filterObjectsList,\n  filterGroupsList,\n} from '../ObjectsList/EnumerateObjects';\nimport flatten from 'lodash/flatten';\nimport { type EventsScope } from '../InstructionOrExpression/EventsScope.flow';\nimport {\n  enumerateFreeExpressions,\n  filterExpressions,\n  enumerateObjectExpressions,\n  enumerateBehaviorExpressions,\n} from '../InstructionOrExpression/EnumerateExpressions';\nimport {\n  type EnumeratedExpressionMetadata,\n  filterEnumeratedInstructionOrExpressionMetadataByScope,\n} from '../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata';\nimport { getVisibleParameterTypes } from '../EventsSheet/ParameterFields/GenericExpressionField/FormatExpressionCall';\n\ntype BaseExpressionAutocompletion = {|\n  completion: string,\n  addParenthesis?: boolean,\n  addDot?: boolean,\n  addNamespaceSeparator?: boolean,\n  addClosingParenthesis?: boolean,\n  isExact?: boolean,\n|};\n\nexport type ExpressionAutocompletion =\n  | {|\n      ...BaseExpressionAutocompletion,\n      kind: 'Expression',\n      enumeratedExpressionMetadata: EnumeratedExpressionMetadata,\n    |}\n  | {|\n      ...BaseExpressionAutocompletion,\n      object?: gdObject,\n      kind: 'Object',\n    |}\n  | {|\n      ...BaseExpressionAutocompletion,\n      kind: 'Behavior',\n    |};\n\ntype ExpressionAutocompletionContext = {|\n  gd: libGDevelop,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  scope: EventsScope,\n|};\n\nconst getAutocompletionsForExpressions = (\n  expressionMetadatas: Array<EnumeratedExpressionMetadata>,\n  prefix: string,\n  isExact: boolean\n): Array<ExpressionAutocompletion> => {\n  return expressionMetadatas\n    .filter(\n      enumeratedExpressionMetadata =>\n        !isExact || enumeratedExpressionMetadata.type === prefix\n    )\n    .map(enumeratedExpressionMetadata => {\n      // All enumeratedExpressionMetadata should have a name.\n      if (\n        !enumeratedExpressionMetadata.name ||\n        !enumeratedExpressionMetadata.parameters\n      )\n        return null;\n\n      return {\n        kind: 'Expression',\n        completion: enumeratedExpressionMetadata.name,\n        enumeratedExpressionMetadata: enumeratedExpressionMetadata,\n        addParenthesis: true,\n        addClosingParenthesis:\n          getVisibleParameterTypes(enumeratedExpressionMetadata).length === 0,\n        isExact,\n      };\n    })\n    .filter(Boolean);\n};\n\nconst getAutocompletionsForFreeExpressions = function(\n  expressionAutocompletionContext: ExpressionAutocompletionContext,\n  completionDescription: gdExpressionCompletionDescription\n): Array<ExpressionAutocompletion> {\n  const prefix: string = completionDescription.getPrefix();\n  const type: string = completionDescription.getType();\n  const isExact: boolean = completionDescription.isExact();\n\n  const freeExpressions = enumerateFreeExpressions(type);\n\n  const filteredFreeExpressions = filterEnumeratedInstructionOrExpressionMetadataByScope(\n    filterExpressions(freeExpressions, prefix),\n    expressionAutocompletionContext.scope\n  );\n  return getAutocompletionsForExpressions(\n    filteredFreeExpressions,\n    prefix,\n    isExact\n  );\n};\n\nconst getAutocompletionsForObjectExpressions = function(\n  expressionAutocompletionContext: ExpressionAutocompletionContext,\n  completionDescription: gdExpressionCompletionDescription\n): Array<ExpressionAutocompletion> {\n  const prefix: string = completionDescription.getPrefix();\n  const type: string = completionDescription.getType();\n  const objectName: string = completionDescription.getObjectName();\n  const isExact: boolean = completionDescription.isExact();\n  const {\n    gd,\n    globalObjectsContainer,\n    objectsContainer,\n  } = expressionAutocompletionContext;\n\n  const objectType: string = gd.getTypeOfObject(\n    globalObjectsContainer,\n    objectsContainer,\n    objectName,\n    /* searchInGroups= */ true\n  );\n  const objectExpressions = enumerateObjectExpressions(type, objectType);\n  const filteredObjectExpressions = filterEnumeratedInstructionOrExpressionMetadataByScope(\n    filterExpressions(objectExpressions, prefix),\n    expressionAutocompletionContext.scope\n  );\n\n  return getAutocompletionsForExpressions(\n    filteredObjectExpressions,\n    prefix,\n    isExact\n  );\n};\n\nconst getAutocompletionsForBehaviorExpressions = function(\n  expressionAutocompletionContext: ExpressionAutocompletionContext,\n  completionDescription: gdExpressionCompletionDescription\n): Array<ExpressionAutocompletion> {\n  const prefix: string = completionDescription.getPrefix();\n  const type: string = completionDescription.getType();\n  const behaviorName: string = completionDescription.getBehaviorName();\n  const isExact: boolean = completionDescription.isExact();\n  const {\n    gd,\n    globalObjectsContainer,\n    objectsContainer,\n  } = expressionAutocompletionContext;\n\n  // TODO: could be made more precise with the object name\n  const behaviorType = gd.getTypeOfBehavior(\n    globalObjectsContainer,\n    objectsContainer,\n    behaviorName,\n    /* searchInGroups= */ true\n  );\n\n  const behaviorExpressions = enumerateBehaviorExpressions(type, behaviorType);\n\n  const filteredBehaviorExpressions = filterEnumeratedInstructionOrExpressionMetadataByScope(\n    filterExpressions(behaviorExpressions, prefix),\n    expressionAutocompletionContext.scope\n  );\n\n  return getAutocompletionsForExpressions(\n    filteredBehaviorExpressions,\n    prefix,\n    isExact\n  );\n};\n\nconst getAutocompletionsForObject = function(\n  expressionAutocompletionContext: ExpressionAutocompletionContext,\n  completionDescription: gdExpressionCompletionDescription\n): Array<ExpressionAutocompletion> {\n  const prefix: string = completionDescription.getPrefix();\n  const type: string = completionDescription.getType();\n  const {\n    gd,\n    globalObjectsContainer,\n    objectsContainer,\n  } = expressionAutocompletionContext;\n\n  const { allObjectsList, allGroupsList } = enumerateObjectsAndGroups(\n    globalObjectsContainer,\n    objectsContainer\n  );\n\n  const filteredObjectsList = filterObjectsList(allObjectsList, {\n    searchText: prefix,\n    selectedTags: [],\n  });\n  const filteredGroupsList = filterGroupsList(allGroupsList, prefix);\n\n  // If we expect an object, don't add a dot. Otherwise (number, string...),\n  // add a dot to prepare for an object function.\n  const addDot = !gd.ParameterMetadata.isObject(type);\n\n  return [\n    ...filteredObjectsList.map(({ object }) => ({\n      kind: 'Object',\n      completion: object.getName(),\n      object,\n      addDot,\n    })),\n    ...filteredGroupsList.map(({ group }) => ({\n      kind: 'Object',\n      completion: group.getName(),\n      addDot,\n    })),\n  ];\n};\n\nconst getAutocompletionsForBehavior = function(\n  expressionAutocompletionContext: ExpressionAutocompletionContext,\n  completionDescription: gdExpressionCompletionDescription\n): Array<ExpressionAutocompletion> {\n  const prefix: string = completionDescription.getPrefix();\n  const isExact: boolean = completionDescription.isExact();\n  const objectName: string = completionDescription.getObjectName();\n\n  const {\n    gd,\n    globalObjectsContainer,\n    objectsContainer,\n  } = expressionAutocompletionContext;\n  return gd\n    .getBehaviorsOfObject(\n      globalObjectsContainer,\n      objectsContainer,\n      objectName,\n      true\n    )\n    .toJSArray()\n    .filter(behaviorName => behaviorName.indexOf(prefix) !== -1)\n    .map(behaviorName => ({\n      kind: 'Behavior',\n      completion: behaviorName,\n      addNamespaceSeparator: true,\n      isExact,\n    }));\n};\n\nexport const getAutocompletionsFromDescriptions = (\n  expressionAutocompletionContext: ExpressionAutocompletionContext,\n  expressionCompletionDescriptions: gdVectorExpressionCompletionDescription\n): Array<ExpressionAutocompletion> => {\n  const { gd } = expressionAutocompletionContext;\n\n  return flatten(\n    mapVector(expressionCompletionDescriptions, completionDescription => {\n      const completionKind = completionDescription.getCompletionKind();\n\n      if (completionKind === gd.ExpressionCompletionDescription.Expression) {\n        const objectName: string = completionDescription.getObjectName();\n        const behaviorName: string = completionDescription.getBehaviorName();\n\n        if (behaviorName) {\n          return getAutocompletionsForBehaviorExpressions(\n            expressionAutocompletionContext,\n            completionDescription\n          );\n        } else if (objectName) {\n          return getAutocompletionsForObjectExpressions(\n            expressionAutocompletionContext,\n            completionDescription\n          );\n        } else {\n          return getAutocompletionsForFreeExpressions(\n            expressionAutocompletionContext,\n            completionDescription\n          );\n        }\n      } else if (completionKind === gd.ExpressionCompletionDescription.Object) {\n        return getAutocompletionsForObject(\n          expressionAutocompletionContext,\n          completionDescription\n        );\n      } else if (\n        completionKind === gd.ExpressionCompletionDescription.Behavior\n      ) {\n        return getAutocompletionsForBehavior(\n          expressionAutocompletionContext,\n          completionDescription\n        );\n      }\n\n      return [];\n    })\n  );\n};\n\nconst separatorChars = ' .:+-/*=()<>[]@!?|\\\\^%#';\n\ntype InsertedAutocompletion = {|\n  completion: string,\n  addParenthesis?: ?boolean,\n  addClosingParenthesis?: ?boolean,\n  addDot?: ?boolean,\n  addNamespaceSeparator?: ?boolean,\n|};\n\ntype ExpressionAndCaretLocation = {|\n  expression: string,\n  caretLocation: number,\n|};\n\nexport const insertAutocompletionInExpression = (\n  { expression, caretLocation }: ExpressionAndCaretLocation,\n  insertedAutocompletion: InsertedAutocompletion\n): ExpressionAndCaretLocation => {\n  const formatCompletion = (nextCharacter: ?string) => {\n    const suffix = insertedAutocompletion.addDot\n      ? '.'\n      : insertedAutocompletion.addNamespaceSeparator\n      ? '::'\n      : insertedAutocompletion.addParenthesis\n      ? insertedAutocompletion.addClosingParenthesis\n        ? '()'\n        : '('\n      : '';\n\n    const addSuffix =\n      !nextCharacter || !suffix || nextCharacter[0] !== suffix[0];\n\n    return insertedAutocompletion.completion + (addSuffix ? suffix : '');\n  };\n\n  if (caretLocation > expression.length) {\n    caretLocation = expression.length;\n  }\n\n  if (caretLocation === 0 || !expression) {\n    const newExpression = formatCompletion(undefined) + expression;\n    return {\n      caretLocation: newExpression.length,\n      expression: newExpression,\n    };\n  }\n\n  // Start from the character just before the caret.\n  const startPosition = caretLocation - 1;\n\n  const isSeparatorChar = (char: string) => {\n    return separatorChars.indexOf(char) !== -1;\n  };\n\n  // Find the start position of the current word, unless we're already on a separator.\n  let wordStartPosition = startPosition;\n  const startPositionIsSeparator = isSeparatorChar(\n    expression[wordStartPosition]\n  );\n  if (!startPositionIsSeparator) {\n    while (\n      wordStartPosition > 0 &&\n      !isSeparatorChar(expression[wordStartPosition - 1])\n    ) {\n      wordStartPosition--;\n    }\n  } else {\n    // If the start position is a separator, the new word start position\n    // must be after the separator.\n    wordStartPosition++;\n  }\n\n  // Find the end position of the current word\n  let wordEndPosition = startPosition;\n  while (\n    wordEndPosition < expression.length &&\n    !isSeparatorChar(expression[wordEndPosition + 1])\n  ) {\n    wordEndPosition++;\n  }\n\n  // The next character, if any, will be useful to format the completion\n  // (to avoid repeating an existing character).\n  const maybeNextCharacter: ?string = expression[wordEndPosition + 1];\n\n  const newExpressionStart = expression.substring(0, wordStartPosition);\n  const insertedWord = formatCompletion(maybeNextCharacter);\n  const newExpressionEnd = expression.substring(wordEndPosition + 1);\n\n  return {\n    caretLocation: newExpressionStart.length + insertedWord.length,\n    expression: newExpressionStart + insertedWord + newExpressionEnd,\n  };\n};\n","// @flow\nimport { type ExpressionAutocompletion } from '../../../ExpressionAutocompletion';\nimport {\n  shouldCloseOrCancel,\n  shouldValidate,\n  shouldFocusNextField,\n} from '../../../UI/KeyboardShortcuts/InteractionKeys';\n\nexport type AutocompletionsState = {|\n  autocompletions: Array<ExpressionAutocompletion>,\n  selectedCompletionIndex: number,\n|};\n\nexport const getAutocompletionsInitialState = (): AutocompletionsState => {\n  return {\n    autocompletions: [],\n    selectedCompletionIndex: 0,\n  };\n};\n\nconst MAX_VISIBLE_COUNT = 25;\n\nexport const getRemainingCount = (state: AutocompletionsState): number => {\n  return Math.max(0, state.autocompletions.length - MAX_VISIBLE_COUNT);\n};\n\nexport const getVisibleAutocompletions = (\n  state: AutocompletionsState\n): Array<ExpressionAutocompletion> => {\n  const remainingCount = getRemainingCount(state);\n  return remainingCount === 0\n    ? state.autocompletions\n    : state.autocompletions.slice(0, MAX_VISIBLE_COUNT);\n};\n\nexport const setNewAutocompletions = (\n  state: AutocompletionsState,\n  autocompletions: Array<ExpressionAutocompletion>\n): AutocompletionsState => {\n  const completionsChanged =\n    state.autocompletions.length !== autocompletions.length;\n\n  // Reset the selected completion only if completions changed.\n  const selectedCompletionIndex = completionsChanged\n    ? 0\n    : state.selectedCompletionIndex;\n\n  return {\n    autocompletions,\n    selectedCompletionIndex,\n  };\n};\n\nexport const handleAutocompletionsKeyDown = (\n  state: AutocompletionsState,\n  {\n    event,\n    onUpdateAutocompletions,\n    onInsertAutocompletion,\n  }: {|\n    event: SyntheticKeyboardEvent<>,\n    onUpdateAutocompletions: () => void,\n    onInsertAutocompletion: ExpressionAutocompletion => void,\n  |}\n): AutocompletionsState => {\n  if (\n    event.key === 'ArrowDown' ||\n    event.key === 'ArrowUp' ||\n    event.key === 'ArrowLeft' ||\n    event.key === 'ArrowRight'\n  ) {\n    onUpdateAutocompletions();\n  }\n\n  if (!state.autocompletions.length) return state;\n\n  const visibleAutocompletionsLength = Math.min(\n    MAX_VISIBLE_COUNT,\n    state.autocompletions.length\n  );\n\n  if (event.key === 'ArrowDown') {\n    event.preventDefault();\n\n    return {\n      ...state,\n      selectedCompletionIndex:\n        (state.selectedCompletionIndex + 1) % visibleAutocompletionsLength,\n    };\n  } else if (event.key === 'ArrowUp') {\n    event.preventDefault();\n\n    return {\n      ...state,\n      selectedCompletionIndex:\n        (visibleAutocompletionsLength + state.selectedCompletionIndex - 1) %\n        visibleAutocompletionsLength,\n    };\n  } else if (shouldCloseOrCancel(event)) {\n    // Stop propagation to avoid closing the modal the\n    // field is contained in.\n    event.preventDefault();\n    event.stopPropagation();\n\n    return getAutocompletionsInitialState();\n  } else if (shouldValidate(event) || shouldFocusNextField(event)) {\n    const autocompletion = state.autocompletions[state.selectedCompletionIndex];\n    if (autocompletion) onInsertAutocompletion(autocompletion);\n\n    // Avoid entering a new line or tabbing to the next field.\n    event.preventDefault();\n  }\n\n  return state;\n};\n","// @flow\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport muiZIndex from '@material-ui/core/styles/zIndex';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { type ExpressionAutocompletion } from '../../../ExpressionAutocompletion';\nimport Text from '../../../UI/Text';\nimport ScrollView, { type ScrollViewInterface } from '../../../UI/ScrollView';\nimport { getVisibleParameterTypes } from './FormatExpressionCall';\nimport { type ParameterRenderingServiceType } from '../ParameterFieldCommons';\nimport { type EnumeratedInstructionOrExpressionMetadata } from '../../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata';\nimport { Column, Line, Spacer } from '../../../UI/Grid';\nimport ObjectsRenderingService from '../../../ObjectsRendering/ObjectsRenderingService';\n\nconst defaultTextStyle = {\n  // Break words if they are too long to fit on a single line.\n  overflow: 'hidden',\n  overflowWrap: 'break-word',\n};\n\nconst AutocompletionIcon = React.memo(({ src }) => (\n  <img\n    alt=\"\"\n    src={src}\n    style={{\n      maxWidth: 16,\n      maxHeight: 16,\n    }}\n  />\n));\n\nconst formatParameterTypesString = (\n  parameterRenderingService: ParameterRenderingServiceType,\n  i18n: I18nType,\n  enumeratedExpressionMetadata: EnumeratedInstructionOrExpressionMetadata\n) => {\n  return getVisibleParameterTypes(enumeratedExpressionMetadata)\n    .map(type => {\n      const userFriendlyName = parameterRenderingService.getUserFriendlyTypeName(\n        type\n      );\n\n      return userFriendlyName ? i18n._(userFriendlyName) : type;\n    })\n    .join(', ');\n};\n\nconst DisplayedExpressionAutocompletion = React.forwardRef(\n  (\n    {\n      expressionAutocompletion,\n      isSelected,\n      onClick,\n      i18n,\n      parameterRenderingService,\n    }: {|\n      expressionAutocompletion: ExpressionAutocompletion,\n      isSelected: boolean,\n      onClick: () => void,\n      i18n: I18nType,\n      parameterRenderingService: ParameterRenderingServiceType,\n    |},\n    ref\n  ) => {\n    if (!expressionAutocompletion.enumeratedExpressionMetadata) return null;\n\n    const title = isSelected ? (\n      <b>{expressionAutocompletion.completion}</b>\n    ) : (\n      expressionAutocompletion.completion\n    );\n\n    return (\n      <ButtonBase\n        style={styles.button}\n        onPointerDown={() => {\n          // Trigger the onClick on the mouse/touch down\n          // to avoid the blur event of the text field to discard the autocompletions.\n          onClick();\n        }}\n        ref={ref}\n      >\n        <AutocompletionIcon\n          src={\n            expressionAutocompletion.enumeratedExpressionMetadata.iconFilename\n          }\n        />\n        <Spacer />\n        <Text style={defaultTextStyle} noMargin align=\"left\">\n          {title}(\n          <i>\n            {formatParameterTypesString(\n              parameterRenderingService,\n              i18n,\n              expressionAutocompletion.enumeratedExpressionMetadata\n            )}\n          </i>\n          )\n        </Text>\n      </ButtonBase>\n    );\n  }\n);\n\nconst DisplayedExactExpressionAutocompletion = ({\n  expressionAutocompletion,\n  i18n,\n  parameterRenderingService,\n}: {|\n  expressionAutocompletion: ExpressionAutocompletion,\n  i18n: I18nType,\n  parameterRenderingService: ParameterRenderingServiceType,\n|}) => {\n  if (!expressionAutocompletion.enumeratedExpressionMetadata) return null;\n\n  return (\n    <Column>\n      <Line noMargin expand alignItems=\"center\">\n        <AutocompletionIcon\n          src={\n            expressionAutocompletion.enumeratedExpressionMetadata.iconFilename\n          }\n        />\n        <Spacer />\n        <Text style={defaultTextStyle} noMargin align=\"left\">\n          <b>{expressionAutocompletion.completion}</b>(\n          <i>\n            {formatParameterTypesString(\n              parameterRenderingService,\n              i18n,\n              expressionAutocompletion.enumeratedExpressionMetadata\n            )}\n          </i>\n          )\n        </Text>\n      </Line>\n      <Text style={defaultTextStyle} noMargin size=\"body2\">\n        {expressionAutocompletion.enumeratedExpressionMetadata.metadata.getDescription()}\n      </Text>\n    </Column>\n  );\n};\n\nconst DisplayedObjectAutocompletion = React.forwardRef(\n  (\n    {\n      project,\n      expressionAutocompletion,\n      isSelected,\n      onClick,\n    }: {|\n      project: ?gdProject,\n      expressionAutocompletion: ExpressionAutocompletion,\n      isSelected: boolean,\n      onClick: () => void,\n    |},\n    ref\n  ) => {\n    const thumbnail =\n      project && expressionAutocompletion.object\n        ? ObjectsRenderingService.getThumbnail(\n            project,\n            expressionAutocompletion.object\n          )\n        : 'res/types/object.png';\n\n    const title = isSelected ? (\n      <b>{expressionAutocompletion.completion}</b>\n    ) : (\n      expressionAutocompletion.completion\n    );\n\n    return (\n      <ButtonBase\n        style={styles.button}\n        onPointerDown={() => {\n          // Trigger the onClick on the mouse/touch down\n          // to avoid the blur event of the text field to discard the autocompletions.\n          onClick();\n        }}\n        ref={ref}\n      >\n        <AutocompletionIcon src={thumbnail} />\n        <Spacer />\n        <Text style={defaultTextStyle} noMargin align=\"left\">\n          {title}\n        </Text>\n      </ButtonBase>\n    );\n  }\n);\n\nconst DisplayedBehaviorAutocompletion = React.forwardRef(\n  (\n    {\n      expressionAutocompletion,\n      isSelected,\n      onClick,\n    }: {|\n      expressionAutocompletion: ExpressionAutocompletion,\n      isSelected: boolean,\n      onClick: () => void,\n    |},\n    ref\n  ) => {\n    const title = isSelected ? (\n      <b>{expressionAutocompletion.completion}</b>\n    ) : (\n      expressionAutocompletion.completion\n    );\n    return (\n      <ButtonBase\n        style={styles.button}\n        onPointerDown={() => {\n          // Trigger the onClick on the mouse/touch down\n          // to avoid the blur event of the text field to discard the autocompletions.\n          onClick();\n        }}\n        ref={ref}\n      >\n        <AutocompletionIcon src={'res/types/behavior.png'} />\n        <Spacer />\n        <Text style={defaultTextStyle} noMargin align=\"left\">\n          {title}\n        </Text>\n      </ButtonBase>\n    );\n  }\n);\n\ntype Props = {|\n  project: ?gdProject,\n  expressionAutocompletions: Array<ExpressionAutocompletion>,\n  remainingCount: number,\n  selectedCompletionIndex: number,\n  anchorEl: Element,\n  onChoose: (chosenExpressionAutocompletion: ExpressionAutocompletion) => void,\n  parameterRenderingService: ParameterRenderingServiceType,\n|};\n\nconst styles = {\n  container: {\n    width: 370,\n    maxHeight: 150,\n    display: 'flex',\n    overflowX: 'hidden',\n  },\n  button: {\n    width: '100%',\n    paddingLeft: 8,\n    paddingRight: 8,\n    justifyContent: 'flex-start',\n  },\n  tooManyTextContainer: {\n    width: '100%',\n  },\n  popperStyle: {\n    // Ensure the popper is above everything (modal, dialog, snackbar, tooltips, etc).\n    // There will be only one ExpressionAutocompletionsDisplay opened at a time, so it's fair to put the\n    // highest z index. If this is breaking, check the z-index of material-ui.\n    zIndex: muiZIndex.tooltip + 100,\n  },\n};\n\nexport default function ExpressionAutocompletionsDisplayer({\n  project,\n  expressionAutocompletions,\n  remainingCount,\n  selectedCompletionIndex,\n  anchorEl,\n  onChoose,\n  parameterRenderingService,\n}: Props) {\n  const scrollView = React.useRef((null: ?ScrollViewInterface));\n  const selectedAutocompletionElement = React.useRef(\n    (null: ?React$Component<any, any>)\n  );\n  React.useEffect(\n    () => {\n      if (scrollView.current && selectedAutocompletionElement.current) {\n        scrollView.current.scrollTo(selectedAutocompletionElement.current);\n      }\n    },\n    [scrollView, selectedAutocompletionElement, selectedCompletionIndex]\n  );\n\n  if (expressionAutocompletions.length === 0) return null;\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Popper\n          style={styles.popperStyle}\n          open\n          anchorEl={anchorEl}\n          placement=\"bottom-start\"\n          disablePortal={\n            // We can use a portal to display this component, because even if it\n            // used inside a modal, which has a focus trap, it's entirely\n            // controlled by the parent component.\n            false\n          }\n        >\n          <Paper variant=\"outlined\" square style={styles.container}>\n            <ScrollView autoHideScrollbar ref={scrollView}>\n              {expressionAutocompletions.map(\n                (expressionAutocompletion, index) => {\n                  const isSelected = selectedCompletionIndex === index;\n                  const ref = isSelected\n                    ? selectedAutocompletionElement\n                    : undefined;\n\n                  return expressionAutocompletion.kind === 'Expression' ? (\n                    !expressionAutocompletion.isExact ? (\n                      <DisplayedExpressionAutocompletion\n                        key={index}\n                        expressionAutocompletion={expressionAutocompletion}\n                        onClick={() => onChoose(expressionAutocompletion)}\n                        isSelected={isSelected}\n                        i18n={i18n}\n                        parameterRenderingService={parameterRenderingService}\n                        ref={ref}\n                      />\n                    ) : (\n                      <DisplayedExactExpressionAutocompletion\n                        key={index}\n                        expressionAutocompletion={expressionAutocompletion}\n                        i18n={i18n}\n                        parameterRenderingService={parameterRenderingService}\n                      />\n                    )\n                  ) : expressionAutocompletion.kind === 'Object' ? (\n                    <DisplayedObjectAutocompletion\n                      key={index}\n                      project={project}\n                      expressionAutocompletion={expressionAutocompletion}\n                      onClick={() => onChoose(expressionAutocompletion)}\n                      isSelected={isSelected}\n                      ref={ref}\n                    />\n                  ) : expressionAutocompletion.kind === 'Behavior' ? (\n                    <DisplayedBehaviorAutocompletion\n                      key={index}\n                      expressionAutocompletion={expressionAutocompletion}\n                      onClick={() => onChoose(expressionAutocompletion)}\n                      isSelected={isSelected}\n                      ref={ref}\n                    />\n                  ) : null;\n                }\n              )}\n              {remainingCount > 0 && (\n                <Column justifyContent=\"flex-start\">\n                  <Text>And {remainingCount} others...</Text>\n                </Column>\n              )}\n            </ScrollView>\n          </Paper>\n        </Popper>\n      )}\n    </I18n>\n  );\n}\n","// @flow\nimport React, { Component } from 'react';\nimport GenericExpressionField from './GenericExpressionField';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\nexport default class StringField extends Component<ParameterFieldProps, void> {\n  _field: ?GenericExpressionField;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    return (\n      <GenericExpressionField\n        expressionType=\"string\"\n        ref={field => (this._field = field)}\n        {...this.props}\n      />\n    );\n  }\n}\n","// @flow\nimport React, { Component } from 'react';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport SemiControlledAutoComplete from '../../UI/SemiControlledAutoComplete';\n\nconst getChoices = (parameterMetadata: ?gdParameterMetadata) => {\n  if (!parameterMetadata) {\n    return [];\n  }\n\n  try {\n    return JSON.parse(parameterMetadata.getExtraInfo());\n  } catch (exception) {\n    console.error(\n      'The parameter seems misconfigured, as an array of choices could not be extracted - verify that your properly wrote a list of choices in JSON format. Full exception is:',\n      exception\n    );\n  }\n\n  return [];\n};\n\nexport default class StringWithSelectorField extends Component<\n  ParameterFieldProps,\n  {||}\n> {\n  _field: ?any;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const { value, onChange, isInline, parameterMetadata } = this.props;\n\n    return (\n      <SemiControlledAutoComplete\n        margin={this.props.isInline ? 'none' : 'dense'}\n        floatingLabelText={\n          parameterMetadata ? parameterMetadata.getDescription() : undefined\n        }\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        fullWidth\n        value={value}\n        onChange={onChange}\n        dataSource={getChoices(parameterMetadata).map(choice => ({\n          text: '\"' + choice + '\"',\n          value: '\"' + choice + '\"',\n        }))}\n        openOnFocus={!isInline}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport { getLastObjectParameterValue } from './ParameterMetadataTools';\nimport SemiControlledAutoComplete, {\n  type SemiControlledAutoCompleteInterface,\n} from '../../UI/SemiControlledAutoComplete';\nconst gd: libGDevelop = global.gd;\n\ntype State = {|\n  errorText: ?string,\n|};\n\nexport default class BehaviorField extends React.Component<\n  ParameterFieldProps,\n  State\n> {\n  state = { errorText: null };\n  _description: ?string;\n  _longDescription: ?string;\n  _behaviorTypeAllowed: ?string;\n  _behaviorNames: Array<string> = [];\n  _field: ?SemiControlledAutoCompleteInterface;\n\n  constructor(props: ParameterFieldProps) {\n    super(props);\n\n    const { parameterMetadata } = this.props;\n    this._description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    this._longDescription = parameterMetadata\n      ? parameterMetadata.getLongDescription()\n      : undefined;\n\n    this._behaviorTypeAllowed = parameterMetadata\n      ? parameterMetadata.getExtraInfo()\n      : undefined;\n  }\n\n  _updateBehaviorsList() {\n    const {\n      instructionMetadata,\n      instruction,\n      expressionMetadata,\n      expression,\n      parameterIndex,\n    } = this.props;\n\n    const objectName = getLastObjectParameterValue({\n      instructionMetadata,\n      instruction,\n      expressionMetadata,\n      expression,\n      parameterIndex,\n    });\n    if (!objectName) return;\n\n    this._behaviorNames = gd\n      .getBehaviorsOfObject(\n        this.props.globalObjectsContainer,\n        this.props.objectsContainer,\n        objectName,\n        true\n      )\n      .toJSArray()\n      .filter(behaviorName => {\n        return (\n          !this._behaviorTypeAllowed ||\n          gd.getTypeOfBehavior(\n            this.props.globalObjectsContainer,\n            this.props.objectsContainer,\n            behaviorName,\n            false\n          ) === this._behaviorTypeAllowed\n        );\n      });\n  }\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  _getError = (value?: string) => {\n    if (!value && !this.props.value) return null;\n\n    const isValidChoice =\n      this._behaviorNames.filter(choice => this.props.value === choice)\n        .length !== 0;\n\n    if (!isValidChoice) return 'This behavior is not attached to the object';\n\n    return null;\n  };\n\n  _doValidation = (value?: string) => {\n    this.setState({ errorText: this._getError(value) });\n  };\n\n  _forceChooseBehavior = () => {\n    // This is a bit hacky:\n    // force the behavior selection if there is only one selectable behavior\n    if (this._behaviorNames.length === 1) {\n      if (this.props.value !== this._behaviorNames[0]) {\n        this.props.onChange(this._behaviorNames[0]);\n      }\n    }\n  };\n\n  componentDidUpdate() {\n    this._forceChooseBehavior();\n  }\n\n  componentDidMount() {\n    this._forceChooseBehavior();\n  }\n\n  render() {\n    this._updateBehaviorsList();\n\n    const noBehaviorErrorText =\n      this._behaviorTypeAllowed !== '' ? (\n        <Trans>\n          The behavior is not attached to this object. Please select another\n          object or add this behavior.\n        </Trans>\n      ) : (\n        <Trans>\n          This object has no behaviors: please add this behavior to the object\n          first.\n        </Trans>\n      );\n\n    return (\n      <SemiControlledAutoComplete\n        margin={this.props.isInline ? 'none' : 'dense'}\n        floatingLabelText={this._description}\n        helperMarkdownText={this._longDescription}\n        fullWidth\n        errorText={\n          !this._behaviorNames.length\n            ? noBehaviorErrorText\n            : this.state.errorText\n        }\n        value={this.props.value}\n        onChange={this.props.onChange}\n        onRequestClose={this.props.onRequestClose}\n        onBlur={event => {\n          this._doValidation(event.currentTarget.value);\n        }}\n        dataSource={this._behaviorNames.map(behaviorName => ({\n          text: behaviorName,\n          value: behaviorName,\n        }))}\n        openOnFocus={!this.props.isInline}\n        disabled={this._behaviorNames.length <= 1}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport VariableField, { renderVariableWithIcon } from './VariableField';\nimport VariablesEditorDialog from '../../VariablesList/VariablesEditorDialog';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\ntype State = {|\n  editorOpen: boolean,\n|};\n\nexport default class GlobalVariableField extends React.Component<\n  ParameterFieldProps,\n  State\n> {\n  _field: ?VariableField;\n  state = {\n    editorOpen: false,\n  };\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const { project, scope } = this.props;\n\n    return (\n      <React.Fragment>\n        <VariableField\n          variablesContainer={project ? project.getVariables() : null}\n          parameterMetadata={this.props.parameterMetadata}\n          value={this.props.value}\n          onChange={this.props.onChange}\n          isInline={this.props.isInline}\n          onRequestClose={this.props.onRequestClose}\n          ref={field => (this._field = field)}\n          onOpenDialog={() => this.setState({ editorOpen: true })}\n          globalObjectsContainer={this.props.globalObjectsContainer}\n          objectsContainer={this.props.objectsContainer}\n          scope={scope}\n        />\n        {this.state.editorOpen && project && (\n          <VariablesEditorDialog\n            title={<Trans>Global Variables</Trans>}\n            open={this.state.editorOpen}\n            variablesContainer={project.getVariables()}\n            onCancel={() => this.setState({ editorOpen: false })}\n            onApply={() => {\n              this.setState({ editorOpen: false });\n            }}\n            emptyExplanationMessage={\n              <Trans>\n                Global variables are variables that are persisted across the\n                scenes during the game.\n              </Trans>\n            }\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport const renderInlineGlobalVariable = (\n  props: ParameterInlineRendererProps\n) => {\n  return renderVariableWithIcon(\n    props,\n    'res/types/globalvar.png',\n    'global variable'\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport VariableField, { renderVariableWithIcon } from './VariableField';\nimport VariablesEditorDialog from '../../VariablesList/VariablesEditorDialog';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport { getLastObjectParameterValue } from './ParameterMetadataTools';\n\ntype State = {|\n  editorOpen: boolean,\n|};\n\nexport default class ObjectVariableField extends React.Component<\n  ParameterFieldProps,\n  State\n> {\n  _field: ?VariableField;\n  state = {\n    editorOpen: false,\n  };\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const {\n      project,\n      scope,\n      instructionMetadata,\n      instruction,\n      expressionMetadata,\n      expression,\n      parameterIndex,\n    } = this.props;\n\n    const objectName = getLastObjectParameterValue({\n      instructionMetadata,\n      instruction,\n      expressionMetadata,\n      expression,\n      parameterIndex,\n    });\n\n    let variablesContainer = null;\n    if (objectName) {\n      const { layout } = scope;\n      if (layout && layout.hasObjectNamed(objectName)) {\n        variablesContainer = layout.getObject(objectName).getVariables();\n      } else if (project && project.hasObjectNamed(objectName)) {\n        variablesContainer = project.getObject(objectName).getVariables();\n      }\n    }\n\n    return (\n      <React.Fragment>\n        <VariableField\n          variablesContainer={variablesContainer}\n          parameterMetadata={this.props.parameterMetadata}\n          value={this.props.value}\n          onChange={this.props.onChange}\n          isInline={this.props.isInline}\n          onRequestClose={this.props.onRequestClose}\n          ref={field => (this._field = field)}\n          onOpenDialog={() => this.setState({ editorOpen: true })}\n          globalObjectsContainer={this.props.globalObjectsContainer}\n          objectsContainer={this.props.objectsContainer}\n          scope={scope}\n        />\n        {this.state.editorOpen && variablesContainer && (\n          <VariablesEditorDialog\n            title={<Trans>Object Variables</Trans>}\n            open={this.state.editorOpen}\n            variablesContainer={variablesContainer}\n            onCancel={() => this.setState({ editorOpen: false })}\n            onApply={() => {\n              this.setState({ editorOpen: false });\n            }}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport const renderInlineObjectVariable = (\n  props: ParameterInlineRendererProps\n) => {\n  return renderVariableWithIcon(\n    props,\n    'res/types/objectvar.png',\n    'object variable'\n  );\n};\n","// @flow\nimport React, { Component } from 'react';\nimport { mapFor } from '../../Utils/MapFor';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport SemiControlledAutoComplete, {\n  type SemiControlledAutoCompleteInterface,\n} from '../../UI/SemiControlledAutoComplete';\n\nexport default class LayerField extends Component<ParameterFieldProps, {||}> {\n  _field: ?SemiControlledAutoCompleteInterface;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const { value, onChange, isInline, scope, parameterMetadata } = this.props;\n    const { layout } = scope;\n    const layerNames = layout\n      ? mapFor(0, layout.getLayersCount(), i => {\n          const layer = layout.getLayerAt(i);\n          return layer.getName();\n        })\n      : [];\n\n    return (\n      <SemiControlledAutoComplete\n        margin={this.props.isInline ? 'none' : 'dense'}\n        floatingLabelText={\n          parameterMetadata ? parameterMetadata.getDescription() : undefined\n        }\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        fullWidth\n        value={value}\n        onChange={onChange}\n        onRequestClose={this.props.onRequestClose}\n        openOnFocus={isInline}\n        dataSource={layerNames.map(layerName => ({\n          text: layerName ? `\"${layerName}\"` : '\"\" (Base layer)',\n          value: `\"${layerName}\"`,\n        }))}\n        hintText={'\"\"'}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport ResourceSelector from '../../ResourcesList/ResourceSelector';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\nexport default class AudioResourceField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?ResourceSelector;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    if (\n      !this.props.resourceSources ||\n      !this.props.onChooseResource ||\n      !this.props.resourceExternalEditors ||\n      !this.props.project\n    ) {\n      console.error(\n        'Missing project, resourceSources, onChooseResource or resourceExternalEditors for AudioResourceField'\n      );\n      return null;\n    }\n\n    return (\n      <ResourceSelector\n        margin={this.props.isInline ? 'none' : 'dense'}\n        project={this.props.project}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        resourcesLoader={ResourcesLoader}\n        resourceKind=\"audio\"\n        fullWidth\n        initialResourceName={this.props.value}\n        onChange={this.props.onChange}\n        floatingLabelText={<Trans>Choose the audio file to use</Trans>}\n        onRequestClose={this.props.onRequestClose}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport ResourceSelector from '../../ResourcesList/ResourceSelector';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\nexport default class VideoResourceField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?ResourceSelector;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    if (\n      !this.props.resourceSources ||\n      !this.props.onChooseResource ||\n      !this.props.resourceExternalEditors ||\n      !this.props.project\n    ) {\n      console.error(\n        'Missing project, resourceSources, onChooseResource or resourceExternalEditors for VideoResourceField'\n      );\n      return null;\n    }\n\n    return (\n      <ResourceSelector\n        margin={this.props.isInline ? 'none' : 'dense'}\n        project={this.props.project}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        resourcesLoader={ResourcesLoader}\n        resourceKind=\"video\"\n        fullWidth\n        initialResourceName={this.props.value}\n        onChange={this.props.onChange}\n        floatingLabelText={<Trans>Choose the video file to use</Trans>}\n        onRequestClose={this.props.onRequestClose}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport ResourceSelector from '../../ResourcesList/ResourceSelector';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\nexport default class JsonResourceField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?ResourceSelector;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    if (\n      !this.props.resourceSources ||\n      !this.props.onChooseResource ||\n      !this.props.resourceExternalEditors ||\n      !this.props.project\n    ) {\n      console.error(\n        'Missing project, resourceSources, onChooseResource or resourceExternalEditors for JsonResourceField'\n      );\n      return null;\n    }\n\n    return (\n      <ResourceSelector\n        margin={this.props.isInline ? 'none' : 'dense'}\n        project={this.props.project}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        resourcesLoader={ResourcesLoader}\n        resourceKind=\"json\"\n        fullWidth\n        initialResourceName={this.props.value}\n        onChange={this.props.onChange}\n        floatingLabelText={<Trans>Choose the json file to use</Trans>}\n        onRequestClose={this.props.onRequestClose}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport React, { Component } from 'react';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport GenericExpressionField from './GenericExpressionField';\nimport ColorPicker from '../../UI/ColorField/ColorPicker';\n\nconst parseColor = (rgbColor: string) => {\n  const colors = rgbColor.replace(/\"/g, '').split(';');\n  if (colors.length !== 3) {\n    return null;\n  }\n\n  const r = parseInt(colors[0], 10);\n  const g = parseInt(colors[1], 10);\n  const b = parseInt(colors[2], 10);\n\n  // Check if parsing of number was done properly (if not,\n  // we receive NaN which is not equal to itself).\n  // eslint-disable-next-line\n  if (r !== r || g !== g || b !== b) return null;\n\n  return {\n    r,\n    g,\n    b,\n    a: 255,\n  };\n};\n\nexport default class ParameterColorField extends Component<ParameterFieldProps> {\n  _field: ?GenericExpressionField;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    return (\n      <GenericExpressionField\n        expressionType=\"string\"\n        ref={field => (this._field = field)}\n        renderExtraButton={({ style }) => (\n          <ColorPicker\n            style={style}\n            disableAlpha\n            color={parseColor(this.props.value)}\n            onChangeComplete={color => {\n              this.props.onChange(\n                '\"' + color.rgb.r + ';' + color.rgb.g + ';' + color.rgb.b + '\"'\n              );\n            }}\n          />\n        )}\n        {...this.props}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport React, { Component } from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Line, Column } from '../../UI/Grid';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport GenericExpressionField from './GenericExpressionField';\nimport BackgroundText from '../../UI/BackgroundText';\nimport { focusButton } from '../../UI/Button';\nimport Text from '../../UI/Text';\n\ntype State = {|\n  showDeprecatedNumericValue: boolean,\n|};\n\nexport default class ForceMultiplierField extends Component<\n  ParameterFieldProps,\n  State\n> {\n  _instantButton = React.createRef<RaisedButton>();\n  state = {\n    showDeprecatedNumericValue:\n      this.props.value !== '' &&\n      this.props.value !== '1' &&\n      this.props.value !== '0',\n  };\n\n  focus() {\n    focusButton(this._instantButton);\n  }\n\n  render() {\n    const { showDeprecatedNumericValue } = this.state;\n    return (\n      <Column expand noMargin>\n        <Line expand alignItems=\"center\">\n          <Column>\n            <RaisedButton\n              label={<Trans>Instant</Trans>}\n              primary={this.props.value === '' || this.props.value === '0'}\n              onClick={() => this.props.onChange('0')}\n              ref={this._instantButton}\n            />\n          </Column>\n          <Column>\n            <Text>\n              <Trans>\n                The force will only push the object during the time of one\n                frame. Typically used in an event with no conditions or with\n                conditions that stay valid for a certain amount of time.\n              </Trans>\n            </Text>\n          </Column>\n        </Line>\n        <Line expand alignItems=\"center\">\n          <Column>\n            <RaisedButton\n              label={<Trans>Permanent</Trans>}\n              primary={this.props.value === '1'}\n              onClick={() => this.props.onChange('1')}\n            />\n          </Column>\n          <Column>\n            <Text>\n              <Trans>\n                The force will push the object forever, unless you use the\n                action \"Stop the object\". Typically used in an event with\n                conditions that are only true once, or with a \"Trigger Once\"\n                condition.\n              </Trans>\n            </Text>\n          </Column>\n        </Line>\n        {showDeprecatedNumericValue && (\n          <React.Fragment>\n            <BackgroundText>\n              <Trans>or</Trans>\n            </BackgroundText>\n            <Line expand>\n              <Column expand>\n                <GenericExpressionField\n                  expressionType=\"number\"\n                  {...this.props}\n                />\n              </Column>\n            </Line>\n            <BackgroundText>\n              <Trans>\n                The usage of a number or expression is deprecated. Please now\n                use only \"Permanent\" or \"Instant\" for configuring forces.\n              </Trans>\n            </BackgroundText>\n          </React.Fragment>\n        )}\n      </Column>\n    );\n  }\n}\n\nexport const renderInlineForceMultiplier = ({\n  value,\n}: ParameterInlineRendererProps) => {\n  if (value === '1') return <Trans>{`a permanent`}</Trans>;\n  else if (value === '0' || value === '') return <Trans>{`an instant`}</Trans>;\n\n  return 'a (multiplier: ' + value + ')';\n};\n","// @flow\nimport React, { Component } from 'react';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport SemiControlledAutoComplete, {\n  type SemiControlledAutoCompleteInterface,\n} from '../../UI/SemiControlledAutoComplete';\nimport { enumerateLayouts } from '../../ProjectManager/EnumerateProjectItems';\n\nexport default class SceneNameField extends Component<\n  ParameterFieldProps,\n  {||}\n> {\n  _field: ?SemiControlledAutoCompleteInterface;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const {\n      value,\n      onChange,\n      isInline,\n      project,\n      parameterMetadata,\n    } = this.props;\n    const layoutNames = project\n      ? enumerateLayouts(project).map(layout => layout.getName())\n      : [];\n\n    return (\n      <SemiControlledAutoComplete\n        margin={this.props.isInline ? 'none' : 'dense'}\n        floatingLabelText={\n          parameterMetadata ? parameterMetadata.getDescription() : undefined\n        }\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        fullWidth\n        value={value}\n        onChange={onChange}\n        openOnFocus={isInline}\n        dataSource={layoutNames.map(layoutName => ({\n          text: `\"${layoutName}\"`,\n          value: `\"${layoutName}\"`,\n        }))}\n        hintText={'\"\"'}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { instructionInvalidParameter } from './ClassNames';\n\ntype Props = {| children: React.Node, isEmpty?: boolean |};\n\n/**\n * Displayed when a parameter is invalid\n */\nexport default ({ children, isEmpty }: Props) =>\n  isEmpty ? (\n    <span className={instructionInvalidParameter}>&lt; {children} &gt;</span>\n  ) : (\n    <span className={instructionInvalidParameter}>{children}</span>\n  );\n","// @flow\nimport * as React from 'react';\nimport { instructionMissingParameter } from './ClassNames';\n\n/**\n * Displayed when a parameter is missing (i.e: empty and not optional)\n */\nexport default () => <span className={instructionMissingParameter} />;\n","// @flow\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport TextField from '../../../UI/TextField';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  selectableArea,\n  disabledText,\n} from '../ClassNames';\nimport { type EventRendererProps } from './EventRenderer';\nimport {\n  shouldActivate,\n  shouldCloseOrCancel,\n  shouldValidate,\n} from '../../../UI/KeyboardShortcuts/InteractionKeys';\nimport { Trans } from '@lingui/macro';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  container: {\n    height: 40,\n    display: 'flex',\n    alignItems: 'center',\n    padding: 5,\n    overflow: 'hidden',\n  },\n  title: {\n    fontSize: 18,\n    width: '100%',\n  },\n};\n\nexport default class GroupEvent extends React.Component<EventRendererProps, *> {\n  state = {\n    editing: false,\n  };\n  _textField: ?TextField = null;\n\n  edit = () => {\n    this.setState(\n      {\n        editing: true,\n      },\n      () => {\n        if (this._textField) this._textField.focus();\n      }\n    );\n  };\n\n  endEditing = () => {\n    this.setState({\n      editing: false,\n    });\n  };\n\n  render() {\n    var groupEvent = gd.asGroupEvent(this.props.event);\n\n    const r = groupEvent.getBackgroundColorR(),\n      g = groupEvent.getBackgroundColorG(),\n      b = groupEvent.getBackgroundColorB();\n\n    const textColor = (r + g + b) / 3 > 200 ? 'black' : 'white';\n\n    return (\n      <div\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n        })}\n        style={{\n          ...styles.container,\n          backgroundColor: `rgb(${r}, ${g}, ${b})`,\n        }}\n        onClick={this.edit}\n        onKeyPress={event => {\n          if (shouldActivate(event)) {\n            this.edit();\n          }\n        }}\n        tabIndex={0}\n      >\n        {this.state.editing ? (\n          <TextField\n            ref={textField => (this._textField = textField)}\n            value={groupEvent.getName()}\n            hintText={t`<Enter group name>`}\n            onBlur={this.endEditing}\n            onChange={(e, text) => {\n              groupEvent.setName(text);\n              this.forceUpdate();\n            }}\n            style={styles.title}\n            inputStyle={{\n              color: textColor,\n              WebkitTextFillColor: textColor,\n            }}\n            underlineFocusStyle={{\n              borderColor: textColor,\n            }}\n            fullWidth\n            id=\"group-title\"\n            onKeyUp={event => {\n              if (shouldCloseOrCancel(event)) {\n                this.endEditing();\n              }\n            }}\n            onKeyPress={event => {\n              if (shouldValidate(event)) {\n                this.endEditing();\n              }\n            }}\n          />\n        ) : (\n          <span\n            className={classNames({\n              [selectableArea]: true,\n              [disabledText]: this.props.disabled,\n            })}\n            style={{ ...styles.title, color: textColor }}\n          >\n            {groupEvent.getName() ? (\n              groupEvent.getName()\n            ) : (\n              <Trans>{`<Enter group name>`}</Trans>\n            )}\n          </span>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport TextField from '../../../UI/TextField';\nimport { rgbToHex } from '../../../Utils/ColorTransformer';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  selectableArea,\n  disabledText,\n} from '../ClassNames';\nimport { type EventRendererProps } from './EventRenderer';\nimport {\n  shouldActivate,\n  shouldCloseOrCancel,\n} from '../../../UI/KeyboardShortcuts/InteractionKeys';\nconst gd: libGDevelop = global.gd;\n\nconst commentTextStyle = {\n  width: '100%',\n  fontSize: 14,\n};\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    padding: 5,\n    overflow: 'hidden',\n    minHeight: 35,\n  },\n  commentTextField: commentTextStyle,\n  commentSpan: {\n    ...commentTextStyle,\n    boxSizing: 'border-box',\n    alignItems: 'center',\n    height: '100%',\n    whiteSpace: 'pre-wrap',\n    lineHeight: 1.5,\n    border: 1,\n  },\n};\n\ntype State = {|\n  editing: boolean,\n|};\n\nexport default class CommentEvent extends React.Component<\n  EventRendererProps,\n  State\n> {\n  state = {\n    editing: false,\n  };\n\n  _selectable: ?HTMLSpanElement;\n  _textField: ?TextField;\n\n  edit = () => {\n    this.setState(\n      {\n        editing: true,\n      },\n      () => {\n        if (this._textField) this._textField.focus();\n      }\n    );\n  };\n\n  onEvent = (e: any, text: string) => {\n    const commentEvent = gd.asCommentEvent(this.props.event);\n    commentEvent.setComment(text);\n\n    this.props.onUpdate();\n    this.forceUpdate();\n  };\n\n  endEditing = () => {\n    if (!this._textField) return;\n\n    this.setState(\n      {\n        editing: false,\n      },\n      () => this.props.onUpdate()\n    );\n  };\n\n  _getCommentHTML = () => {\n    const commentEvent = gd.asCommentEvent(this.props.event);\n    return commentEvent\n      .getComment()\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\\n/g, '<br>');\n  };\n\n  render() {\n    const commentEvent = gd.asCommentEvent(this.props.event);\n\n    const backgroundColor = rgbToHex(\n      commentEvent.getBackgroundColorRed(),\n      commentEvent.getBackgroundColorGreen(),\n      commentEvent.getBackgroundColorBlue()\n    );\n\n    const textColor = rgbToHex(\n      commentEvent.getTextColorRed(),\n      commentEvent.getTextColorGreen(),\n      commentEvent.getTextColorBlue()\n    );\n\n    return (\n      <div\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n        })}\n        style={{\n          ...styles.container,\n          backgroundColor: `#${backgroundColor}`,\n        }}\n        onClick={this.edit}\n        onKeyPress={event => {\n          if (shouldActivate(event)) {\n            this.edit();\n          }\n        }}\n        tabIndex={0}\n      >\n        {this.state.editing ? (\n          <TextField\n            multiline\n            margin=\"none\"\n            ref={textField => (this._textField = textField)}\n            value={commentEvent.getComment()}\n            hintText={t`<Enter comment>`}\n            onBlur={this.endEditing}\n            onChange={this.onEvent}\n            style={styles.commentTextField}\n            inputStyle={{\n              color: `#${textColor}`,\n              padding: 0,\n              lineHeight: 1.5,\n            }}\n            underlineFocusStyle={{\n              borderColor: `#${textColor}`,\n            }}\n            fullWidth\n            id=\"comment-title\"\n            onKeyUp={event => {\n              if (shouldCloseOrCancel(event)) {\n                this.endEditing();\n              }\n            }}\n          />\n        ) : (\n          <span\n            ref={selectable => (this._selectable = selectable)}\n            className={classNames({\n              [selectableArea]: true,\n              [disabledText]: this.props.disabled,\n            })}\n            style={{\n              ...styles.commentSpan,\n              color: `#${textColor}`,\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this._getCommentHTML(),\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport MUITabs from '@material-ui/core/Tabs';\nimport MUITab from '@material-ui/core/Tab';\n\n// We support a subset of the props supported by Material-UI v0.x Tabs\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype TabsProps<TabName> = {|\n  value?: TabName,\n  onChange: TabName => void,\n  children: React.Node, // Should be Tab\n|};\n\n/**\n * Tabs based on Material-UI Tabs.\n */\nexport class Tabs<TabName> extends React.Component<TabsProps<TabName>, {||}> {\n  render() {\n    return (\n      <MUITabs\n        variant=\"fullWidth\"\n        textColor=\"primary\"\n        value={this.props.value}\n        onChange={(e, newValue) => this.props.onChange(newValue)}\n      >\n        {this.props.children}\n      </MUITabs>\n    );\n  }\n}\n\n// We support a subset of the props supported by Material-UI v0.x Tabs\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype TabProps = {|\n  label: React.Node,\n  value: string,\n  tabIndex?: string,\n|};\n\n/**\n * A Tab based on Material-UI Tab.\n */\nexport class Tab extends React.Component<TabProps, {||}> {\n  render() {\n    return <MUITab {...this.props} />;\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport InstructionsList from '../InstructionsList.js';\nimport classNames from 'classnames';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  selectableArea,\n  executableEventContainer,\n  disabledText,\n} from '../ClassNames';\nimport InlinePopover from '../../InlinePopover';\nimport ObjectField from '../../ParameterFields/ObjectField';\nimport { type EventRendererProps } from './EventRenderer';\nimport ConditionsActionsColumns from '../ConditionsActionsColumns';\nimport { shouldActivate } from '../../../UI/KeyboardShortcuts/InteractionKeys.js';\nimport { Trans } from '@lingui/macro';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  instructionsContainer: {\n    display: 'flex',\n  },\n  actionsList: {\n    flex: 1,\n  },\n};\n\nexport default class ForEachEvent extends React.Component<\n  EventRendererProps,\n  *\n> {\n  _objectField: ?ObjectField = null;\n  state = {\n    editing: false,\n    anchorEl: null,\n  };\n\n  edit = (domEvent: any) => {\n    // We should not need to use a timeout, but\n    // if we don't do this, the InlinePopover's clickaway listener\n    // is immediately picking up the event and closing.\n    // Search the rest of the codebase for inlinepopover-event-hack\n    const anchorEl = domEvent.currentTarget;\n    setTimeout(\n      () =>\n        this.setState(\n          {\n            editing: true,\n            anchorEl,\n          },\n          () => {\n            // Give a bit of time for the popover to mount itself\n            setTimeout(() => {\n              if (this._objectField) this._objectField.focus();\n            }, 10);\n          }\n        ),\n      10\n    );\n  };\n\n  endEditing = () => {\n    const { anchorEl } = this.state;\n    // Put back the focus after closing the inline popover.\n    // $FlowFixMe\n    if (anchorEl) anchorEl.focus();\n\n    this.setState({\n      editing: false,\n      anchorEl: null,\n    });\n  };\n\n  render() {\n    var forEachEvent = gd.asForEachEvent(this.props.event);\n\n    const objectName = forEachEvent.getObjectToPick();\n    return (\n      <div\n        style={styles.container}\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n          [executableEventContainer]: true,\n        })}\n      >\n        <div>\n          <span\n            className={classNames({\n              [selectableArea]: true,\n              [disabledText]: this.props.disabled,\n            })}\n            onClick={this.edit}\n            onKeyPress={event => {\n              if (shouldActivate(event)) {\n                this.edit(event);\n              }\n            }}\n            tabIndex={0}\n          >\n            {objectName ? (\n              <Trans>Repeat for each instance of {objectName}:</Trans>\n            ) : (\n              <i>\n                <Trans>\n                  Click to choose for which objects this event will be repeated\n                </Trans>\n              </i>\n            )}\n          </span>\n        </div>\n        <ConditionsActionsColumns\n          leftIndentWidth={this.props.leftIndentWidth}\n          windowWidth={this.props.windowWidth}\n          renderConditionsList={({ style, className }) => (\n            <InstructionsList\n              instrsList={forEachEvent.getConditions()}\n              style={style}\n              className={className}\n              selection={this.props.selection}\n              areConditions\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onAddInstructionContextMenu={\n                this.props.onAddInstructionContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n          renderActionsList={({ className }) => (\n            <InstructionsList\n              instrsList={forEachEvent.getActions()}\n              style={\n                {\n                  ...styles.actionsList,\n                } /* TODO: Use a new object to force update - somehow updates are not always propagated otherwise */\n              }\n              className={className}\n              selection={this.props.selection}\n              areConditions={false}\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onAddInstructionContextMenu={\n                this.props.onAddInstructionContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n        />\n        <InlinePopover\n          open={this.state.editing}\n          anchorEl={this.state.anchorEl}\n          onRequestClose={this.endEditing}\n        >\n          <ObjectField\n            project={this.props.project}\n            scope={this.props.scope}\n            globalObjectsContainer={this.props.globalObjectsContainer}\n            objectsContainer={this.props.objectsContainer}\n            value={objectName}\n            onChange={text => {\n              forEachEvent.setObjectToPick(text);\n              this.props.onUpdate();\n            }}\n            isInline\n            onRequestClose={this.endEditing}\n            ref={objectField => (this._objectField = objectField)}\n          />\n        </InlinePopover>\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport InstructionsList from '../InstructionsList.js';\nimport classNames from 'classnames';\nimport {\n  selectableArea,\n  largeSelectableArea,\n  largeSelectedArea,\n  executableEventContainer,\n  disabledText,\n  instructionParameter,\n  nameAndIconContainer,\n  icon,\n} from '../ClassNames';\nimport InlinePopover from '../../InlinePopover';\nimport SceneVariableField from '../../ParameterFields/SceneVariableField';\nimport { type EventRendererProps } from './EventRenderer';\nimport ConditionsActionsColumns from '../ConditionsActionsColumns';\nimport { Trans } from '@lingui/macro';\nimport { shouldActivate } from '../../../UI/KeyboardShortcuts/InteractionKeys.js';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  instructionsContainer: {\n    display: 'flex',\n  },\n  actionsList: {\n    flex: 1,\n  },\n  variableContainer: {\n    marginLeft: '3px',\n    marginRight: '2px',\n  },\n  eventLabel: {\n    marginLeft: '5px',\n    whiteSpace: 'normal',\n    wordWrap: 'break-word',\n  },\n};\n\ntype State = {|\n  editingValueIteratorVariableName: boolean,\n  editingKeyIteratorVariableName: boolean,\n  editingIterableVariableName: boolean,\n  anchorEl: ?HTMLSpanElement,\n|};\n\nexport default class ForEachChildVariableEvent extends React.Component<\n  EventRendererProps,\n  State\n> {\n  _valueIteratorField: ?SceneVariableField = null;\n  _keyIteratorField: ?SceneVariableField = null;\n  _iterableField: ?SceneVariableField = null;\n\n  state = {\n    editingValueIteratorVariableName: false,\n    editingKeyIteratorVariableName: false,\n    editingIterableVariableName: false,\n    anchorEl: null,\n  };\n\n  edit = (\n    variable: 'iterable' | 'iteratorValue' | 'iteratorKey',\n    anchorEl: HTMLSpanElement\n  ) => {\n    // We should not need to use a timeout, but\n    // if we don't do this, the InlinePopover's clickaway listener\n    // is immediately picking up the event and closing.\n    // Search the rest of the codebase for inlinepopover-event-hack\n    setTimeout(\n      () =>\n        this.setState(\n          {\n            editingValueIteratorVariableName: variable === 'iteratorValue',\n            editingKeyIteratorVariableName: variable === 'iteratorKey',\n            editingIterableVariableName: variable === 'iterable',\n            anchorEl,\n          },\n          () => {\n            // Give a bit of time for the popover to mount itself\n            setTimeout(() => {\n              const field =\n                variable === 'iterable'\n                  ? this._iterableField\n                  : variable === 'iteratorValue'\n                  ? this._valueIteratorField\n                  : this._keyIteratorField;\n              if (field) field.focus();\n            }, 10);\n          }\n        ),\n      10\n    );\n  };\n\n  endEditing = () => {\n    const { anchorEl } = this.state;\n    // Put back the focus after closing the inline popover.\n    // $FlowFixMe\n    if (anchorEl) anchorEl.focus();\n\n    this.setState({\n      editingKeyIteratorVariableName: false,\n      editingValueIteratorVariableName: false,\n      editingIterableVariableName: false,\n      anchorEl: null,\n    });\n  };\n\n  render() {\n    const forEachChildVariableEvent = gd.asForEachChildVariableEvent(\n      this.props.event\n    );\n    const valueIteratorName = forEachChildVariableEvent.getValueIteratorVariableName();\n    const keyIteratorName = forEachChildVariableEvent.getKeyIteratorVariableName();\n    const iterableName = forEachChildVariableEvent.getIterableVariableName();\n\n    return (\n      <div\n        style={styles.container}\n        className={classNames({\n          [executableEventContainer]: true,\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n        })}\n      >\n        <div style={styles.eventLabel}>\n          <Trans>\n            <span\n              className={classNames({\n                [disabledText]: this.props.disabled,\n              })}\n              tabIndex={0}\n            >\n              For every child in\n              <span\n                className={classNames({\n                  [selectableArea]: true,\n                  [instructionParameter]: true,\n                  [nameAndIconContainer]: true,\n                  scenevar: true,\n                })}\n                style={styles.variableContainer}\n                onClick={e => this.edit('iterable', e.currentTarget)}\n                onKeyPress={event => {\n                  if (shouldActivate(event)) {\n                    this.edit('iterable', event.currentTarget);\n                  }\n                }}\n              >\n                <img\n                  className={icon}\n                  src=\"res/types/scenevar.png\"\n                  alt=\"Scene variable\"\n                />\n                {iterableName.length !== 0 ? (\n                  <span>{iterableName}</span>\n                ) : (\n                  <span className=\"instruction-missing-parameter\">\n                    <Trans>{`<Select a variable>`}</Trans>\n                  </span>\n                )}\n              </span>\n              , store the child in variable\n              <span\n                className={classNames({\n                  [selectableArea]: true,\n                  [instructionParameter]: true,\n                  [nameAndIconContainer]: true,\n                  scenevar: true,\n                })}\n                style={styles.variableContainer}\n                onClick={e => this.edit('iteratorValue', e.currentTarget)}\n                onKeyPress={event => {\n                  if (shouldActivate(event)) {\n                    this.edit('iteratorValue', event.currentTarget);\n                  }\n                }}\n              >\n                <img\n                  className={icon}\n                  src=\"res/types/scenevar.png\"\n                  alt=\"Scene variable\"\n                />\n                {valueIteratorName.length !== 0 ? (\n                  <span>{valueIteratorName}</span>\n                ) : (\n                  <span>\n                    <Trans>{`<Select a variable> (optional)`}</Trans>\n                  </span>\n                )}\n              </span>\n              , the child name in\n              <span\n                className={classNames({\n                  [selectableArea]: true,\n                  [instructionParameter]: true,\n                  [nameAndIconContainer]: true,\n                  scenevar: true,\n                })}\n                style={styles.variableContainer}\n                onClick={e => this.edit('iteratorKey', e.currentTarget)}\n                onKeyPress={event => {\n                  if (shouldActivate(event)) {\n                    this.edit('iteratorKey', event.currentTarget);\n                  }\n                }}\n              >\n                <img\n                  className={icon}\n                  src=\"res/types/scenevar.png\"\n                  alt=\"Scene variable\"\n                />\n                {keyIteratorName.length !== 0 ? (\n                  <span>{keyIteratorName}</span>\n                ) : (\n                  <span>\n                    <Trans>{`<Select a variable> (optional)`}</Trans>\n                  </span>\n                )}\n              </span>\n              and do:\n            </span>\n          </Trans>\n        </div>\n        <ConditionsActionsColumns\n          leftIndentWidth={this.props.leftIndentWidth}\n          windowWidth={this.props.windowWidth}\n          renderConditionsList={({ style, className }) => (\n            <InstructionsList\n              instrsList={forEachChildVariableEvent.getConditions()}\n              style={style}\n              className={className}\n              selection={this.props.selection}\n              areConditions\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onAddInstructionContextMenu={\n                this.props.onAddInstructionContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n          renderActionsList={({ className }) => (\n            <InstructionsList\n              instrsList={forEachChildVariableEvent.getActions()}\n              style={\n                {\n                  ...styles.actionsList,\n                } /* TODO: Use a new object to force update - somehow updates are not always propagated otherwise */\n              }\n              className={className}\n              selection={this.props.selection}\n              areConditions={false}\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onAddInstructionContextMenu={\n                this.props.onAddInstructionContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n        />\n        <InlinePopover\n          open={this.state.editingValueIteratorVariableName}\n          anchorEl={this.state.anchorEl}\n          onRequestClose={this.endEditing}\n        >\n          <SceneVariableField\n            project={this.props.project}\n            scope={this.props.scope}\n            globalObjectsContainer={this.props.globalObjectsContainer}\n            objectsContainer={this.props.objectsContainer}\n            value={valueIteratorName}\n            onChange={text => {\n              forEachChildVariableEvent.setValueIteratorVariableName(text);\n              this.props.onUpdate();\n            }}\n            isInline\n            onRequestClose={this.endEditing}\n            ref={iteratorField => (this._valueIteratorField = iteratorField)}\n          />\n        </InlinePopover>\n        <InlinePopover\n          open={this.state.editingKeyIteratorVariableName}\n          anchorEl={this.state.anchorEl}\n          onRequestClose={this.endEditing}\n        >\n          <SceneVariableField\n            project={this.props.project}\n            scope={this.props.scope}\n            globalObjectsContainer={this.props.globalObjectsContainer}\n            objectsContainer={this.props.objectsContainer}\n            value={keyIteratorName}\n            onChange={text => {\n              forEachChildVariableEvent.setKeyIteratorVariableName(text);\n              this.props.onUpdate();\n            }}\n            isInline\n            onRequestClose={this.endEditing}\n            ref={iteratorField => (this._keyIteratorField = iteratorField)}\n          />\n        </InlinePopover>\n        <InlinePopover\n          open={this.state.editingIterableVariableName}\n          anchorEl={this.state.anchorEl}\n          onRequestClose={this.endEditing}\n        >\n          <SceneVariableField\n            project={this.props.project}\n            scope={this.props.scope}\n            globalObjectsContainer={this.props.globalObjectsContainer}\n            objectsContainer={this.props.objectsContainer}\n            value={iterableName}\n            onChange={text => {\n              forEachChildVariableEvent.setIterableVariableName(text);\n              this.props.onUpdate();\n            }}\n            isInline\n            onRequestClose={this.endEditing}\n            ref={iterableField => (this._iterableField = iterableField)}\n          />\n        </InlinePopover>\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport InstructionsList from '../InstructionsList.js';\nimport classNames from 'classnames';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  selectableArea,\n  executableEventContainer,\n  disabledText,\n} from '../ClassNames';\nimport InlinePopover from '../../InlinePopover';\nimport DefaultField from '../../ParameterFields/DefaultField';\nimport { type EventRendererProps } from './EventRenderer';\nimport ConditionsActionsColumns from '../ConditionsActionsColumns';\nimport { shouldActivate } from '../../../UI/KeyboardShortcuts/InteractionKeys.js';\nimport { Trans } from '@lingui/macro';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  instructionsContainer: {\n    display: 'flex',\n  },\n  actionsList: {\n    flex: 1,\n  },\n};\n\nexport default class RepeatEvent extends React.Component<\n  EventRendererProps,\n  *\n> {\n  _field: ?DefaultField = null;\n  state = {\n    editing: false,\n    anchorEl: null,\n  };\n\n  edit = (domEvent: any) => {\n    // We should not need to use a timeout, but\n    // if we don't do this, the InlinePopover's clickaway listener\n    // is immediately picking up the event and closing.\n    // Search the rest of the codebase for inlinepopover-event-hack\n    const anchorEl = domEvent.currentTarget;\n    setTimeout(\n      () =>\n        this.setState(\n          {\n            editing: true,\n            anchorEl,\n          },\n          () => {\n            // Give a bit of time for the popover to mount itself\n            setTimeout(() => {\n              if (this._field) this._field.focus();\n            }, 10);\n          }\n        ),\n      10\n    );\n  };\n\n  endEditing = () => {\n    const { anchorEl } = this.state;\n\n    // Put back the focus after closing the inline popover.\n    // $FlowFixMe\n    if (anchorEl) anchorEl.focus();\n\n    this.setState({\n      editing: false,\n      anchorEl: null,\n    });\n  };\n\n  render() {\n    var repeatEvent = gd.asRepeatEvent(this.props.event);\n\n    const expression = repeatEvent.getRepeatExpression();\n    return (\n      <div\n        style={styles.container}\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n          [executableEventContainer]: true,\n        })}\n      >\n        <div>\n          <span\n            className={classNames({\n              [selectableArea]: true,\n              [disabledText]: this.props.disabled,\n            })}\n            onClick={this.edit}\n            onKeyPress={event => {\n              if (shouldActivate(event)) {\n                this.edit(event);\n              }\n            }}\n            tabIndex={0}\n          >\n            {expression ? (\n              <Trans>Repeat {expression} times:</Trans>\n            ) : (\n              <i>\n                <Trans>Click to choose how many times will be repeated</Trans>\n              </i>\n            )}\n          </span>\n        </div>\n        <ConditionsActionsColumns\n          leftIndentWidth={this.props.leftIndentWidth}\n          windowWidth={this.props.windowWidth}\n          renderConditionsList={({ style, className }) => (\n            <InstructionsList\n              instrsList={repeatEvent.getConditions()}\n              style={style}\n              className={className}\n              selection={this.props.selection}\n              areConditions\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onAddInstructionContextMenu={\n                this.props.onAddInstructionContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n          renderActionsList={({ className }) => (\n            <InstructionsList\n              instrsList={repeatEvent.getActions()}\n              style={\n                {\n                  ...styles.actionsList,\n                } /* TODO: Use a new object to force update - somehow updates are not always propagated otherwise */\n              }\n              className={className}\n              selection={this.props.selection}\n              areConditions={false}\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onAddInstructionContextMenu={\n                this.props.onAddInstructionContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n        />\n        <InlinePopover\n          open={this.state.editing}\n          anchorEl={this.state.anchorEl}\n          onRequestClose={this.endEditing}\n        >\n          <DefaultField\n            project={this.props.project}\n            scope={this.props.scope}\n            globalObjectsContainer={this.props.globalObjectsContainer}\n            objectsContainer={this.props.objectsContainer}\n            value={expression}\n            onChange={text => {\n              repeatEvent.setRepeatExpression(text);\n              this.props.onUpdate();\n            }}\n            isInline\n            ref={field => (this._field = field)}\n          />\n        </InlinePopover>\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport InstructionsList from '../InstructionsList';\nimport classNames from 'classnames';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  executableEventContainer,\n  disabledText,\n  conditionsContainer,\n} from '../ClassNames';\nimport { type EventRendererProps } from './EventRenderer';\nimport ConditionsActionsColumns from '../ConditionsActionsColumns';\nimport { Trans } from '@lingui/macro';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  instructionsContainer: {\n    display: 'flex',\n  },\n  actionsList: {\n    flex: 1,\n  },\n};\n\nexport default class ForEachEvent extends React.Component<\n  EventRendererProps,\n  *\n> {\n  render() {\n    var whileEvent = gd.asWhileEvent(this.props.event);\n\n    return (\n      <div\n        style={styles.container}\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n          [executableEventContainer]: true,\n        })}\n      >\n        <div\n          className={classNames({\n            [disabledText]: this.props.disabled,\n          })}\n        >\n          <Trans>While these conditions are true:</Trans>\n        </div>\n        <InstructionsList\n          instrsList={whileEvent.getWhileConditions()}\n          style={\n            {} /* TODO: Use a new object to force update - somehow updates are not always propagated otherwise */\n          }\n          className={conditionsContainer}\n          selection={this.props.selection}\n          areConditions\n          onAddNewInstruction={this.props.onAddNewInstruction}\n          onPasteInstructions={this.props.onPasteInstructions}\n          onMoveToInstruction={this.props.onMoveToInstruction}\n          onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n          onInstructionClick={this.props.onInstructionClick}\n          onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n          onInstructionContextMenu={this.props.onInstructionContextMenu}\n          onAddInstructionContextMenu={this.props.onAddInstructionContextMenu}\n          onParameterClick={this.props.onParameterClick}\n          disabled={this.props.disabled}\n          renderObjectThumbnail={this.props.renderObjectThumbnail}\n          screenType={this.props.screenType}\n          windowWidth={this.props.windowWidth}\n        />\n        <div\n          className={classNames({\n            [disabledText]: this.props.disabled,\n          })}\n        >\n          <Trans>Repeat these:</Trans>\n        </div>\n        <ConditionsActionsColumns\n          leftIndentWidth={this.props.leftIndentWidth}\n          windowWidth={this.props.windowWidth}\n          renderConditionsList={({ style, className }) => (\n            <InstructionsList\n              instrsList={whileEvent.getConditions()}\n              style={style}\n              className={className}\n              selection={this.props.selection}\n              areConditions\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onAddInstructionContextMenu={\n                this.props.onAddInstructionContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n          renderActionsList={({ className }) => (\n            <InstructionsList\n              instrsList={whileEvent.getActions()}\n              style={\n                {\n                  ...styles.actionsList,\n                } /* TODO: Use a new object to force update - somehow updates are not always propagated otherwise */\n              }\n              className={className}\n              selection={this.props.selection}\n              areConditions={false}\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onAddInstructionContextMenu={\n                this.props.onAddInstructionContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport * as React from 'react';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport IconButton from '../../../UI/IconButton';\nimport classNames from 'classnames';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  selectableArea,\n  linkContainer,\n  disabledText,\n} from '../ClassNames';\nimport InlinePopover from '../../InlinePopover';\nimport ExternalEventsField from '../../ParameterFields/ExternalEventsField';\nimport { showWarningBox } from '../../../UI/Messages/MessageBox';\nimport { type EventRendererProps } from './EventRenderer';\nimport { shouldActivate } from '../../../UI/KeyboardShortcuts/InteractionKeys';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  container: {\n    height: 60,\n    display: 'flex',\n    alignItems: 'center',\n    padding: 5,\n  },\n  title: {\n    fontSize: 16,\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n};\n\nexport default class LinkEvent extends React.Component<EventRendererProps, *> {\n  _externalEventsField: ?ExternalEventsField = null;\n\n  state = {\n    editing: false,\n    anchorEl: null,\n  };\n\n  edit = (domEvent: any) => {\n    // We should not need to use a timeout, but\n    // if we don't do this, the InlinePopover's clickaway listener\n    // is immediately picking up the event and closing.\n    // Search the rest of the codebase for inlinepopover-event-hack\n    const anchorEl = domEvent.currentTarget;\n    setTimeout(\n      () =>\n        this.setState(\n          {\n            editing: true,\n            anchorEl,\n          },\n          () => {\n            // Give a bit of time for the popover to mount itself\n            setTimeout(() => {\n              if (this._externalEventsField) this._externalEventsField.focus();\n            }, 10);\n          }\n        ),\n      10\n    );\n  };\n\n  openTarget = (i18n: I18nType) => {\n    const { project, event, onOpenLayout, onOpenExternalEvents } = this.props;\n    const linkEvent = gd.asLinkEvent(event);\n    const target = linkEvent.getTarget();\n\n    if (project.hasExternalEventsNamed(target)) {\n      onOpenExternalEvents(target);\n    } else if (project.hasLayoutNamed(target)) {\n      onOpenLayout(target);\n    } else {\n      showWarningBox(\n        i18n._(\n          t`The specified external events do not exist in the game. Be sure that the name is correctly spelled or create them using the project manager.`\n        )\n      );\n    }\n  };\n\n  endEditing = () => {\n    const { anchorEl } = this.state;\n\n    // Put back the focus after closing the inline popover.\n    // $FlowFixMe\n    if (anchorEl) anchorEl.focus();\n\n    this.setState({\n      editing: false,\n      anchorEl: null,\n    });\n  };\n\n  render() {\n    const linkEvent = gd.asLinkEvent(this.props.event);\n    const target = linkEvent.getTarget();\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <div\n            className={classNames({\n              [largeSelectableArea]: true,\n              [largeSelectedArea]: this.props.selected,\n              [linkContainer]: true,\n            })}\n            style={styles.container}\n          >\n            <span\n              style={styles.title}\n              className={classNames({\n                [disabledText]: this.props.disabled,\n              })}\n            >\n              <Trans>Include events from</Trans>{' '}\n              <i\n                className={classNames({\n                  [selectableArea]: true,\n                })}\n                onClick={this.edit}\n                onKeyPress={event => {\n                  if (shouldActivate(event)) {\n                    this.edit(event);\n                  }\n                }}\n                tabIndex={0}\n              >\n                {target || (\n                  <Trans>{`<Enter the name of external events>`}</Trans>\n                )}\n              </i>\n            </span>\n            <IconButton\n              onClick={() => this.openTarget(i18n)}\n              disabled={!target}\n            >\n              <OpenInNew />\n            </IconButton>\n            <InlinePopover\n              open={this.state.editing}\n              anchorEl={this.state.anchorEl}\n              onRequestClose={this.endEditing}\n            >\n              <ExternalEventsField\n                project={this.props.project}\n                scope={this.props.scope}\n                globalObjectsContainer={this.props.globalObjectsContainer}\n                objectsContainer={this.props.objectsContainer}\n                value={target}\n                onChange={text => {\n                  linkEvent.setTarget(text);\n                  this.props.onUpdate();\n                }}\n                isInline\n                onRequestClose={this.endEditing}\n                ref={externalEventsField =>\n                  (this._externalEventsField = externalEventsField)\n                }\n              />\n            </InlinePopover>\n          </div>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport {\n  enumerateLayouts,\n  enumerateExternalEvents,\n} from '../../ProjectManager/EnumerateProjectItems';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport SemiControlledAutoComplete, {\n  type DataSource,\n} from '../../UI/SemiControlledAutoComplete';\n\nconst getList = (project: ?gdProject): DataSource => {\n  if (!project) {\n    return [];\n  }\n\n  const externalEvents = enumerateExternalEvents(project).map(\n    externalEvents => ({\n      text: externalEvents.getName(),\n      value: externalEvents.getName(),\n    })\n  );\n  const layouts = enumerateLayouts(project).map(layout => ({\n    text: layout.getName(),\n    value: layout.getName(),\n  }));\n  return [...externalEvents, { type: 'separator' }, ...layouts];\n};\n\nexport default class ExternalEventsField extends React.Component<\n  ParameterFieldProps,\n  {||}\n> {\n  _field: ?any;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const {\n      value,\n      onChange,\n      onRequestClose,\n      isInline,\n      project,\n      parameterMetadata,\n    } = this.props;\n\n    return (\n      <SemiControlledAutoComplete\n        margin={this.props.isInline ? 'none' : 'dense'}\n        floatingLabelText={\n          parameterMetadata ? parameterMetadata.getDescription() : undefined\n        }\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        fullWidth\n        id=\"external-events-field\"\n        value={value}\n        onChange={onChange}\n        onRequestClose={onRequestClose}\n        dataSource={getList(project)}\n        openOnFocus={!isInline}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport Button from '@material-ui/core/Button';\nimport InlinePopover from '../../InlinePopover';\nimport ObjectField from '../../ParameterFields/ObjectField';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  selectableArea,\n} from '../ClassNames';\nimport { getHelpLink } from '../../../Utils/HelpLink';\nimport { type EventRendererProps } from './EventRenderer';\nimport Measure from 'react-measure';\nimport { CodeEditor } from '../../../CodeEditor';\nimport { shouldActivate } from '../../../UI/KeyboardShortcuts/InteractionKeys';\nimport { Trans } from '@lingui/macro';\nconst gd: libGDevelop = global.gd;\n\nconst fontFamily = '\"Lucida Console\", Monaco, monospace';\nconst MINIMUM_EDITOR_HEIGHT = 200;\nconst EDITOR_PADDING = 100;\n\nconst styles = {\n  container: {\n    minHeight: 30,\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#1e1e1e',\n  },\n  wrappingText: {\n    fontFamily,\n    fontSize: '13px',\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingTop: 2,\n    paddingBottom: 2,\n    margin: 0,\n    backgroundColor: '#1e1e1e',\n    color: '#d4d4d4',\n    overflowX: 'hidden',\n    maxWidth: '100%',\n  },\n  comment: {\n    color: '#777',\n  },\n  commentLink: {\n    cursor: 'pointer',\n    color: '#777',\n    textDecoration: 'underline',\n  },\n  expandIcon: {\n    color: '#d4d4d4',\n  },\n};\n\ntype State = {|\n  editing: boolean,\n  editingObject: boolean,\n  anchorEl: ?any,\n|};\n\nexport default class JsCodeEvent extends React.Component<\n  EventRendererProps,\n  State\n> {\n  _objectField: ?ObjectField = null;\n  state = {\n    editing: false,\n    editingObject: false,\n    anchorEl: null,\n  };\n\n  _input: ?any;\n\n  edit = () => {\n    this.setState(\n      {\n        editing: true,\n      },\n      () => {\n        // $FlowFixMe\n        const input: ?HTMLInputElement = ReactDOM.findDOMNode(this._input);\n        if (input) {\n          input.focus();\n          input.value = gd.asJsCodeEvent(this.props.event).getInlineCode();\n        }\n      }\n    );\n  };\n\n  endEditing = () => {\n    const jsCodeEvent = gd.asJsCodeEvent(this.props.event);\n\n    // $FlowFixMe\n    const input: ?HTMLInputElement = ReactDOM.findDOMNode(this._input);\n    if (input) jsCodeEvent.setInlineCode(input.value);\n\n    this.setState(\n      {\n        editing: false,\n      },\n      () => this.props.onUpdate()\n    );\n  };\n\n  onChange = (newValue: string) => {\n    const jsCodeEvent = gd.asJsCodeEvent(this.props.event);\n    jsCodeEvent.setInlineCode(newValue);\n  };\n\n  editObject = (domEvent: any) => {\n    // We should not need to use a timeout, but\n    // if we don't do this, the InlinePopover's clickaway listener\n    // is immediately picking up the event and closing.\n    // Search the rest of the codebase for inlinepopover-event-hack\n    const anchorEl = domEvent.currentTarget;\n    setTimeout(\n      () =>\n        this.setState(\n          {\n            editingObject: true,\n            anchorEl,\n          },\n          () => {\n            // Give a bit of time for the popover to mount itself\n            setTimeout(() => {\n              if (this._objectField) this._objectField.focus();\n            }, 10);\n          }\n        ),\n      10\n    );\n  };\n\n  endObjectEditing = () => {\n    const { anchorEl } = this.state;\n\n    // Put back the focus after closing the inline popover.\n    // $FlowFixMe\n    if (anchorEl) anchorEl.focus();\n\n    this.setState({\n      editingObject: false,\n      anchorEl: null,\n    });\n  };\n\n  toggleExpanded = () => {\n    const jsCodeEvent = gd.asJsCodeEvent(this.props.event);\n    jsCodeEvent.setEventsSheetExpanded(!jsCodeEvent.isEventsSheetExpanded());\n  };\n\n  _getCodeEditorHeight = () => {\n    const jsCodeEvent = gd.asJsCodeEvent(this.props.event);\n\n    // Always use the minimum height when collapsed.\n    if (!jsCodeEvent.isEventsSheetExpanded()) {\n      return MINIMUM_EDITOR_HEIGHT;\n    }\n\n    // Shrink the editor enough for the additional event elements to fit in the sheet space.\n    const heightToFillSheet = this.props.eventsSheetHeight - EDITOR_PADDING;\n    return Math.max(MINIMUM_EDITOR_HEIGHT, heightToFillSheet);\n  };\n\n  render() {\n    const jsCodeEvent = gd.asJsCodeEvent(this.props.event);\n    const parameterObjects = jsCodeEvent.getParameterObjects();\n\n    const textStyle = this.props.disabled ? styles.comment : undefined;\n\n    const objects = (\n      <span\n        className={classNames({\n          [selectableArea]: true,\n        })}\n        onClick={this.editObject}\n        onKeyPress={event => {\n          if (shouldActivate(event)) {\n            this.editObject(event);\n          }\n        }}\n        tabIndex={0}\n        style={textStyle}\n      >\n        {parameterObjects ? (\n          <Trans>, objects /*{parameterObjects}*/</Trans>\n        ) : (\n          <>\n            {' '}\n            <Trans>\n              {'/* Click here to choose objects to pass to JavaScript */'}\n            </Trans>\n          </>\n        )}\n      </span>\n    );\n\n    const eventsFunctionContext = this.props.scope.eventsFunction ? (\n      <span style={textStyle}>, eventsFunctionContext</span>\n    ) : null;\n\n    const functionStart = (\n      <p style={styles.wrappingText}>\n        <span style={textStyle}>\n          {this.props.disabled ? '/*' : ''}\n          {'(function(runtimeScene'}\n        </span>\n        {objects}\n        {eventsFunctionContext}\n        <span style={textStyle}>{') {'}</span>\n      </p>\n    );\n    const functionEnd = (\n      <p style={styles.wrappingText}>\n        <span style={textStyle}>{'})(runtimeScene'}</span>\n        {objects}\n        {eventsFunctionContext}\n        <span style={textStyle}>\n          {');'}\n          {this.props.disabled ? '*/' : ''}\n        </span>\n        <span style={styles.comment}>\n          {' // '}\n          <a\n            href={getHelpLink('/events/js-code')}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={styles.commentLink}\n          >\n            Read the documentation and help\n          </a>\n        </span>\n      </p>\n    );\n\n    const expandIcon = (\n      <div style={styles.expandIcon}>\n        {jsCodeEvent.isEventsSheetExpanded() ? (\n          <ExpandLess fontSize=\"small\" color=\"inherit\" />\n        ) : (\n          <ExpandMore fontSize=\"small\" color=\"inherit\" />\n        )}\n      </div>\n    );\n\n    return (\n      <Measure bounds>\n        {({ measureRef, contentRect }) => (\n          <div\n            style={styles.container}\n            className={classNames({\n              [largeSelectableArea]: true,\n              [largeSelectedArea]: this.props.selected,\n            })}\n            ref={measureRef}\n          >\n            {functionStart}\n            <CodeEditor\n              value={jsCodeEvent.getInlineCode()}\n              onChange={this.onChange}\n              width={contentRect.bounds.width - 5}\n              height={this._getCodeEditorHeight()}\n              onEditorMounted={() => this.props.onUpdate()}\n            />\n            {functionEnd}\n            <Button onClick={this.toggleExpanded} fullWidth size=\"small\">\n              {expandIcon}\n            </Button>\n            <InlinePopover\n              open={this.state.editingObject}\n              anchorEl={this.state.anchorEl}\n              onRequestClose={this.endObjectEditing}\n            >\n              <ObjectField\n                project={this.props.project}\n                scope={this.props.scope}\n                globalObjectsContainer={this.props.globalObjectsContainer}\n                objectsContainer={this.props.objectsContainer}\n                value={parameterObjects}\n                onChange={text => {\n                  jsCodeEvent.setParameterObjects(text);\n                  this.props.onUpdate();\n                }}\n                isInline\n                onRequestClose={this.endObjectEditing}\n                ref={objectField => (this._objectField = objectField)}\n              />\n            </InlinePopover>\n          </div>\n        )}\n      </Measure>\n    );\n  }\n}\n","// @flow\n\ntype WatchedComponent = {\n  +onHeightsChanged: Function => void,\n};\n\n/**\n * Store the height of events and notify a component whenever\n * heights have changed.\n * Needed for EventsTree as we need to tell it when heights have changed\n * so it can recompute the internal row heights of the react-virtualized List.\n */\nexport default class EventHeightsCache {\n  eventHeights = {};\n  updateTimeoutId: ?TimeoutID = null;\n  component: ?WatchedComponent = null;\n\n  constructor(component: WatchedComponent) {\n    this.component = component;\n  }\n\n  _notifyComponent() {\n    if (this.updateTimeoutId) {\n      return; // An update is already scheduled.\n    }\n\n    // Notify the component, on the next tick, that heights have changed\n    this.updateTimeoutId = setTimeout(() => {\n      if (this.component) {\n        this.component.onHeightsChanged(() => (this.updateTimeoutId = null));\n      } else {\n        this.updateTimeoutId = null;\n      }\n    }, 0);\n  }\n\n  setEventHeight(event: gdBaseEvent, height: number) {\n    const cachedHeight = this.eventHeights[event.ptr];\n    if (cachedHeight === undefined || cachedHeight !== height) {\n      // console.log(event.ptr, 'has a new height', height, 'old:', cachedHeight);\n      this._notifyComponent();\n    }\n\n    this.eventHeights[event.ptr] = height;\n  }\n\n  getEventHeight(event: gdBaseEvent): number {\n    return this.eventHeights[event.ptr] || 60;\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Line, Column } from '../../UI/Grid';\nimport ElementWithMenu from '../../UI/Menu/ElementWithMenu';\nimport { enumerateEventsMetadata } from '../EnumerateEventsMetadata';\n\nconst styles = {\n  addButton: {\n    cursor: 'pointer',\n  },\n};\n\ntype Props = {|\n  onAddEvent: (eventType: string) => void,\n|};\n\nconst makeMenuTemplateBuilderForEvents = (\n  onAddEvent: (eventType: string) => void\n) => () =>\n  enumerateEventsMetadata().map(metadata => {\n    return {\n      label: metadata.fullName,\n      click: () => onAddEvent(metadata.type),\n    };\n  });\n\nexport default function BottomButtons({ onAddEvent }: Props) {\n  return (\n    <Column>\n      <Line justifyContent=\"space-between\">\n        <ElementWithMenu\n          openMenuWithSecondaryClick\n          element={\n            <button\n              style={styles.addButton}\n              className=\"add-link\"\n              onClick={() => onAddEvent('BuiltinCommonInstructions::Standard')}\n            >\n              <Trans>Add a new event</Trans>\n            </button>\n          }\n          buildMenuTemplate={makeMenuTemplateBuilderForEvents(onAddEvent)}\n        />\n        <ElementWithMenu\n          element={\n            <button style={styles.addButton} className=\"add-link\">\n              <Trans>Add...</Trans>\n            </button>\n          }\n          buildMenuTemplate={makeMenuTemplateBuilderForEvents(onAddEvent)}\n        />\n      </Line>\n    </Column>\n  );\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport HelpButton from '../../UI/HelpButton';\nimport Text from '../../UI/Text';\nimport Paper from '@material-ui/core/Paper';\nimport { Line, Column } from '../../UI/Grid';\n\nconst EmptyEventsPlaceholder = () => (\n  <Column alignItems=\"center\">\n    <Paper\n      variant=\"outlined\"\n      style={{\n        maxWidth: '450px',\n        whiteSpace: 'normal',\n      }}\n    >\n      <Column>\n        <Text>\n          <Trans>There are no events here.</Trans>\n        </Text>\n        <Text>\n          <Trans>\n            Events are composed of conditions (on the left of an event) and\n            actions (on the right). When conditions are fulfilled, the actions\n            are executed.\n          </Trans>\n        </Text>\n        <Text>\n          <Trans>\n            Add your first event using the button \"Add a new event\".\n          </Trans>\n        </Text>\n        <Line expand justifyContent=\"flex-end\">\n          <HelpButton helpPagePath=\"/events\" />\n        </Line>\n      </Column>\n    </Paper>\n  </Column>\n);\n\nexport default EmptyEventsPlaceholder;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../../ResourcesList/ResourceExternalEditor.flow';\nimport InstructionParametersEditor from './InstructionParametersEditor';\nimport InstructionOrObjectSelector, {\n  type TabName,\n} from './InstructionOrObjectSelector';\nimport { Column } from '../../UI/Grid';\nimport InstructionOrExpressionSelector from './InstructionOrExpressionSelector';\nimport HelpButton from '../../UI/HelpButton';\nimport Background from '../../UI/Background';\nimport { type EventsScope } from '../../InstructionOrExpression/EventsScope.flow';\nimport { SelectColumns } from '../../UI/Reponsive/SelectColumns';\nimport {\n  ResponsiveWindowMeasurer,\n  type WidthType,\n} from '../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport {\n  useNewInstructionEditor,\n  getInstructionMetadata,\n} from './NewInstructionEditor';\nimport useForceUpdate from '../../Utils/UseForceUpdate';\n\nconst styles = {\n  fullHeightSelector: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n};\n\ntype StepName =\n  | 'object-or-free-instructions'\n  | 'object-instructions'\n  | 'parameters';\n\ntype Props = {|\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  instruction: gdInstruction,\n  isCondition: boolean,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  style?: Object,\n  isNewInstruction: boolean,\n  onCancel: () => void,\n  onSubmit: () => void,\n  open: boolean,\n  openInstructionOrExpression: (\n    extension: gdPlatformExtension,\n    type: string\n  ) => void,\n  anchorEl?: any, // Unused\n  canPasteInstructions: boolean, // Unused\n  onPasteInstructions: () => void, // Unused\n|};\n\nconst getInitialStepName = (isNewInstruction: boolean): StepName => {\n  if (isNewInstruction) return 'object-or-free-instructions';\n  return 'parameters';\n};\n\nconst getInitialTab = (\n  isNewInstruction: boolean,\n  hasObjectChosen: boolean\n): TabName => {\n  if (isNewInstruction) return 'objects';\n  return hasObjectChosen ? 'objects' : 'free-instructions';\n};\n\n/**\n * A responsive instruction editor in a dialog, showing InstructionParametersEditor\n * at the end.\n */\nexport default function NewInstructionEditorDialog({\n  project,\n  globalObjectsContainer,\n  objectsContainer,\n  onCancel,\n  open,\n  instruction,\n  isCondition,\n  isNewInstruction,\n  scope,\n  onSubmit,\n  resourceSources,\n  onChooseResource,\n  resourceExternalEditors,\n  openInstructionOrExpression,\n}: Props) {\n  const forceUpdate = useForceUpdate();\n  const [\n    newInstructionEditorState,\n    newInstructionEditorSetters,\n  ] = useNewInstructionEditor({\n    instruction,\n    isCondition,\n    project,\n    isNewInstruction,\n    scope,\n    globalObjectsContainer,\n    objectsContainer,\n  });\n  const {\n    chosenObjectName,\n    chosenObjectInstructionsInfo,\n    chosenObjectInstructionsInfoTree,\n  } = newInstructionEditorState;\n  const {\n    chooseInstruction,\n    chooseObject,\n    chooseObjectInstruction,\n  } = newInstructionEditorSetters;\n  const hasObjectChosen =\n    !!chosenObjectInstructionsInfo && !!chosenObjectInstructionsInfoTree;\n  const [step, setStep] = React.useState(() =>\n    getInitialStepName(isNewInstruction)\n  );\n  const [\n    currentInstructionOrObjectSelectorTab,\n    setCurrentInstructionOrObjectSelectorTab,\n  ] = React.useState(() => getInitialTab(isNewInstruction, hasObjectChosen));\n  const instructionType: string = instruction.getType();\n\n  // Handle the back button\n  const stepBackFrom = (origin: StepName, windowWidth: WidthType) => {\n    if (origin === 'parameters' && chosenObjectName) {\n      setStep(\n        // \"medium\" displays 2 columns, so \"Back\" button should go back to the first screen.\n        windowWidth === 'medium'\n          ? 'object-or-free-instructions'\n          : 'object-instructions'\n      );\n    } else {\n      setStep('object-or-free-instructions');\n    }\n  };\n\n  // Focus the parameters when showing them\n  const instructionParametersEditor = React.useRef(\n    (null: ?InstructionParametersEditor)\n  );\n  React.useEffect(\n    () => {\n      if (step === 'parameters') {\n        if (instructionParametersEditor.current) {\n          instructionParametersEditor.current.focus();\n        }\n      }\n    },\n    [step]\n  );\n\n  const instructionMetadata = getInstructionMetadata({\n    instructionType,\n    isCondition,\n    project,\n  });\n  const instructionHelpPage = instructionMetadata\n    ? instructionMetadata.getHelpPath()\n    : undefined;\n\n  const renderInstructionOrObjectSelector = () => (\n    <Background noFullHeight key=\"instruction-or-object-selector\">\n      <InstructionOrObjectSelector\n        style={styles.fullHeightSelector}\n        project={project}\n        currentTab={currentInstructionOrObjectSelectorTab}\n        onChangeTab={setCurrentInstructionOrObjectSelectorTab}\n        globalObjectsContainer={globalObjectsContainer}\n        objectsContainer={objectsContainer}\n        isCondition={isCondition}\n        chosenInstructionType={!chosenObjectName ? instructionType : undefined}\n        onChooseInstruction={(instructionType: string) => {\n          chooseInstruction(instructionType);\n          setStep('parameters');\n        }}\n        chosenObjectName={chosenObjectName}\n        onChooseObject={(chosenObjectName: string) => {\n          chooseObject(chosenObjectName);\n          setStep('object-instructions');\n        }}\n        focusOnMount={!instructionType}\n        onSearchStartOrReset={forceUpdate}\n      />\n    </Background>\n  );\n\n  const renderParameters = () => (\n    <Column expand justifyContent=\"center\" key=\"parameters\">\n      <InstructionParametersEditor\n        project={project}\n        scope={scope}\n        globalObjectsContainer={globalObjectsContainer}\n        objectsContainer={objectsContainer}\n        objectName={chosenObjectName}\n        isCondition={isCondition}\n        instruction={instruction}\n        resourceSources={resourceSources}\n        onChooseResource={onChooseResource}\n        resourceExternalEditors={resourceExternalEditors}\n        openInstructionOrExpression={openInstructionOrExpression}\n        ref={instructionParametersEditor}\n        focusOnMount={!!instructionType}\n        noHelpButton\n      />\n    </Column>\n  );\n\n  const renderObjectInstructionSelector = () =>\n    chosenObjectInstructionsInfoTree && chosenObjectInstructionsInfo ? (\n      <InstructionOrExpressionSelector\n        key=\"object-instruction-selector\"\n        style={styles.fullHeightSelector}\n        instructionsInfo={chosenObjectInstructionsInfo}\n        instructionsInfoTree={chosenObjectInstructionsInfoTree}\n        iconSize={24}\n        onChoose={(instructionType: string) => {\n          chooseObjectInstruction(instructionType);\n          setStep('parameters');\n        }}\n        selectedType={instructionType}\n        useSubheaders\n        focusOnMount={!instructionType}\n        searchPlaceholderObjectName={chosenObjectName}\n        searchPlaceholderIsCondition={isCondition}\n      />\n    ) : null;\n\n  return (\n    <ResponsiveWindowMeasurer>\n      {windowWidth => (\n        <Dialog\n          actions={[\n            <FlatButton\n              label={<Trans>Cancel</Trans>}\n              primary={false}\n              onClick={onCancel}\n              key=\"cancel\"\n            />,\n            <FlatButton\n              label={<Trans>Ok</Trans>}\n              primary={true}\n              keyboardFocused={false}\n              disabled={!instructionType}\n              onClick={onSubmit}\n              key=\"ok\"\n            />,\n          ]}\n          secondaryActions={[\n            windowWidth !== 'large' &&\n            step !== 'object-or-free-instructions' ? (\n              <FlatButton\n                label={<Trans>Back</Trans>}\n                primary={false}\n                onClick={() => stepBackFrom(step, windowWidth)}\n                key=\"back\"\n              />\n            ) : null,\n            <HelpButton\n              key=\"help\"\n              helpPagePath={instructionHelpPage || '/events'}\n              label={\n                !instructionHelpPage ||\n                (windowWidth === 'small' ||\n                  step === 'object-or-free-instructions') ? (\n                  <Trans>Help</Trans>\n                ) : isCondition ? (\n                  <Trans>Help for this condition</Trans>\n                ) : (\n                  <Trans>Help for this action</Trans>\n                )\n              }\n            />,\n          ]}\n          open={open}\n          onRequestClose={onCancel}\n          cannotBeDismissed={true}\n          maxWidth={false}\n          noMargin\n          flexRowBody\n        >\n          <SelectColumns\n            columnsRenderer={{\n              'instruction-or-object-selector': renderInstructionOrObjectSelector,\n              'object-instruction-selector': renderObjectInstructionSelector,\n              parameters: renderParameters,\n            }}\n            getColumns={() => {\n              if (windowWidth === 'large') {\n                if (chosenObjectName) {\n                  return [\n                    'instruction-or-object-selector',\n                    'object-instruction-selector',\n                    'parameters',\n                  ];\n                } else {\n                  return ['instruction-or-object-selector', 'parameters'];\n                }\n              } else if (windowWidth === 'medium') {\n                if (step === 'object-or-free-instructions') {\n                  return ['instruction-or-object-selector'];\n                } else {\n                  if (chosenObjectName) {\n                    return ['object-instruction-selector', 'parameters'];\n                  } else {\n                    return ['parameters'];\n                  }\n                }\n              } else {\n                if (step === 'object-or-free-instructions') {\n                  return ['instruction-or-object-selector'];\n                } else if (step === 'object-instructions') {\n                  return ['object-instruction-selector'];\n                } else {\n                  return ['parameters'];\n                }\n              }\n            }}\n          />\n        </Dialog>\n      )}\n    </ResponsiveWindowMeasurer>\n  );\n}\n","// @flow\n\n/*\n * Case Sensitive Slug method\n * Inspired by Aaron Stannard module (https://github.com/Aaronontheweb/node-slugs)\n */\nexport const caseSensitiveSlug = (\n  incString: string,\n  separator?: string,\n  preserved?: Array<string>\n): string => {\n  var p = ['.', '=', '-'];\n  var s = '-';\n\n  if (typeof preserved != 'undefined') {\n    p = preserved;\n  }\n\n  if (typeof separator != 'undefined') {\n    s = separator;\n  }\n\n  return incString\n    .replace(/ü/g, 'ue')\n    .replace(/ä/g, 'ae')\n    .replace(/ö/g, 'oe')\n    .replace(/ß/g, 'ss')\n    .replace(new RegExp('[' + p.join('') + ']', 'g'), ' ') //  replace preserved characters with spaces\n    .replace(/-{2,}/g, ' ') //  remove duplicate spaces\n    .replace(/^\\s\\s*/, '')\n    .replace(/\\s\\s*$/, '') //  trim both sides of string\n    .replace(/[^\\w ]/gi, '') //  replaces all non-alphanumeric with empty string\n    .replace(/[ ]/gi, s); //  Convert spaces to dashes\n};\n","// @flow\nimport { mapVector } from '../Utils/MapFor';\n\n/** The JS equivalent of gdPropertyDescriptor */\ntype EnumeratedProperty = {|\n  name: string,\n  type: string,\n  description: string,\n  label: string,\n  value: string,\n  extraInfo: Array<string>,\n  isHidden: boolean,\n|};\n\n/**\n * Transform a gdNamedPropertyDescriptorsList into a JS object.\n * **Don't use this** unless you explictely need to deal with JS objects.\n * Otherwise, prefer just iterating and using gdNamedPropertyDescriptorsList functions.\n */\nexport const enumerateNamedPropertyDescriptorsList = (\n  namedProperties: gdNamedPropertyDescriptorsList\n): Array<EnumeratedProperty> => {\n  return mapVector(namedProperties, namedProperty => {\n    return {\n      name: namedProperty.getName(),\n      type: namedProperty.getType(),\n      description: namedProperty.getDescription(),\n      label: namedProperty.getLabel(),\n      value: namedProperty.getValue(),\n      extraInfo: namedProperty.getExtraInfo().toJSArray(),\n      isHidden: namedProperty.isHidden(),\n    };\n  });\n};\n\nexport const toGdPropertyDescriptor = (\n  enumeratedProperty: EnumeratedProperty,\n  propertyDescriptor: gdPropertyDescriptor\n): gdPropertyDescriptor => {\n  propertyDescriptor\n    .setType(enumeratedProperty.type)\n    .setDescription(enumeratedProperty.description)\n    .setLabel(enumeratedProperty.label)\n    .setValue(enumeratedProperty.value)\n    .setHidden(enumeratedProperty.isHidden);\n\n  enumeratedProperty.extraInfo.forEach(extraInfo => {\n    propertyDescriptor.addExtraInfo(extraInfo);\n  });\n\n  return propertyDescriptor;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport Popover from '@material-ui/core/Popover';\nimport * as React from 'react';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../../ResourcesList/ResourceExternalEditor.flow';\nimport {\n  useNewInstructionEditor,\n  getInstructionMetadata,\n} from './NewInstructionEditor';\nimport InstructionOrObjectSelector, {\n  type TabName,\n} from './InstructionOrObjectSelector';\nimport InstructionOrExpressionSelector from './InstructionOrExpressionSelector';\nimport { type EventsScope } from '../../InstructionOrExpression/EventsScope.flow';\nimport { SelectColumns } from '../../UI/Reponsive/SelectColumns';\nimport useForceUpdate from '../../Utils/UseForceUpdate';\nimport { setupInstructionParameters } from '../../InstructionOrExpression/SetupInstructionParameters';\nimport FlatButton from '../../UI/FlatButton';\nimport Paste from '../../UI/CustomSvgIcons/Paste';\nimport { Line } from '../../UI/Grid';\n\nconst styles = {\n  fullHeightSelector: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '400px',\n    width: '400px',\n  },\n};\n\ntype StepName = 'object-or-free-instructions' | 'object-instructions';\n\ntype Props = {|\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  instruction: gdInstruction,\n  isCondition: boolean,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  style?: Object,\n  anchorEl: ?HTMLElement,\n  isNewInstruction: boolean,\n  onCancel: () => void,\n  onSubmit: () => void,\n  open: boolean,\n  openInstructionOrExpression: (\n    extension: gdPlatformExtension,\n    type: string\n  ) => void,\n  canPasteInstructions: boolean, // Unused\n  onPasteInstructions: () => void, // Unused\n|};\n\n/**\n * An instruction editor in a popover.\n * Does not show the parameters for the instruction.\n */\nexport default function NewInstructionEditorMenu({\n  project,\n  globalObjectsContainer,\n  objectsContainer,\n  onCancel,\n  open,\n  instruction,\n  isCondition,\n  isNewInstruction,\n  anchorEl,\n  scope,\n  onSubmit,\n  canPasteInstructions,\n  onPasteInstructions,\n}: Props) {\n  const forceUpdate = useForceUpdate();\n  const [\n    newInstructionEditorState,\n    newInstructionEditorSetters,\n  ] = useNewInstructionEditor({\n    instruction,\n    isCondition,\n    project,\n    isNewInstruction,\n    scope,\n    globalObjectsContainer,\n    objectsContainer,\n  });\n  const {\n    chosenObjectName,\n    chosenObjectInstructionsInfo,\n    chosenObjectInstructionsInfoTree,\n  } = newInstructionEditorState;\n  const {\n    chooseInstruction,\n    chooseObject,\n    chooseObjectInstruction,\n  } = newInstructionEditorSetters;\n  // As we're in a context menu, always start from 'object-or-free-instructions' step and with 'objects' tab.\n  const [step, setStep] = React.useState<StepName>(\n    'object-or-free-instructions'\n  );\n  const [\n    currentInstructionOrObjectSelectorTab,\n    setCurrentInstructionOrObjectSelectorTab,\n  ] = React.useState<TabName>('objects');\n  const instructionType: string = instruction.getType();\n\n  const submitInstruction = ({\n    instruction,\n    chosenObjectName,\n  }: {\n    instruction: gdInstruction,\n    chosenObjectName: ?string,\n  }) => {\n    // Before submitting the instruction, ensure that we set the default\n    // parameters, notably the object and behavior name.\n    const instructionMetadata = getInstructionMetadata({\n      instructionType: instruction.getType(),\n      isCondition,\n      project,\n    });\n    if (instructionMetadata) {\n      setupInstructionParameters(\n        globalObjectsContainer,\n        objectsContainer,\n        instruction,\n        instructionMetadata,\n        chosenObjectName\n      );\n    }\n    onSubmit();\n  };\n\n  const renderInstructionOrObjectSelector = () => (\n    <InstructionOrObjectSelector\n      key=\"instruction-or-object-selector\"\n      style={styles.fullHeightSelector}\n      project={project}\n      currentTab={currentInstructionOrObjectSelectorTab}\n      onChangeTab={setCurrentInstructionOrObjectSelectorTab}\n      globalObjectsContainer={globalObjectsContainer}\n      objectsContainer={objectsContainer}\n      isCondition={isCondition}\n      chosenInstructionType={!chosenObjectName ? instructionType : undefined}\n      onChooseInstruction={(instructionType: string) => {\n        const { instruction, chosenObjectName } = chooseInstruction(\n          instructionType\n        );\n        submitInstruction({ instruction, chosenObjectName });\n      }}\n      chosenObjectName={chosenObjectName}\n      onChooseObject={chosenObjectName => {\n        chooseObject(chosenObjectName);\n        setStep('object-instructions');\n      }}\n      focusOnMount={!instructionType}\n      onSearchStartOrReset={forceUpdate}\n    />\n  );\n\n  const renderObjectInstructionSelector = () =>\n    chosenObjectInstructionsInfoTree && chosenObjectInstructionsInfo ? (\n      <InstructionOrExpressionSelector\n        key=\"object-instruction-selector\"\n        style={styles.fullHeightSelector}\n        instructionsInfo={chosenObjectInstructionsInfo}\n        instructionsInfoTree={chosenObjectInstructionsInfoTree}\n        iconSize={24}\n        onChoose={(instructionType: string) => {\n          const { instruction, chosenObjectName } = chooseObjectInstruction(\n            instructionType\n          );\n          submitInstruction({ instruction, chosenObjectName });\n        }}\n        selectedType={instructionType}\n        useSubheaders\n        focusOnMount={!instructionType}\n        searchPlaceholderObjectName={chosenObjectName}\n        searchPlaceholderIsCondition={isCondition}\n      />\n    ) : null;\n\n  return (\n    <Popover\n      open={open}\n      onClose={onCancel}\n      anchorEl={anchorEl}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'left',\n      }}\n    >\n      <SelectColumns\n        columnsRenderer={{\n          'instruction-or-object-selector': renderInstructionOrObjectSelector,\n          'object-instruction-selector': renderObjectInstructionSelector,\n        }}\n        getColumns={() => {\n          if (step === 'object-or-free-instructions') {\n            return ['instruction-or-object-selector'];\n          } else {\n            return ['object-instruction-selector'];\n          }\n        }}\n      />\n      <Line noMargin justifyContent=\"flex-end\">\n        <FlatButton\n          label={\n            isCondition ? (\n              <Trans>Paste condition(s)</Trans>\n            ) : (\n              <Trans>Paste action(s)</Trans>\n            )\n          }\n          icon={<Paste />}\n          disabled={!canPasteInstructions}\n          onClick={() => onPasteInstructions()}\n        />\n      </Line>\n    </Popover>\n  );\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport { Line, Column } from '../../UI/Grid';\nimport ColorPicker from '../../UI/ColorField/ColorPicker';\nimport { type RGBColor } from '../../Utils/ColorTransformer';\nimport MiniToolbar, { MiniToolbarText } from '../../UI/MiniToolbar';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\n\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  sizeTextField: {\n    width: 90,\n  },\n};\n\ntype Props = {|\n  event: gdBaseEvent,\n  onClose: () => void,\n  onApply: () => void,\n|};\n\ntype State = {|\n  textValue: string,\n  textColor: RGBColor,\n  backgroundColor: RGBColor,\n|};\n\nconst white: RGBColor = {\n  r: 255,\n  g: 255,\n  b: 255,\n};\n\nconst black: RGBColor = {\n  r: 0,\n  g: 0,\n  b: 0,\n};\n\nexport const filterEditableWithEventTextDialog = (\n  events: Array<gdBaseEvent>\n): Array<gdBaseEvent> => {\n  return events.filter(event =>\n    [\n      'BuiltinCommonInstructions::Group',\n      'BuiltinCommonInstructions::Comment',\n    ].includes(event.getType())\n  );\n};\n\nexport default class EventTextDialog extends React.Component<Props, State> {\n  _applyChangesOnEvent = () => {\n    const { event } = this.props;\n    const { textValue, textColor, backgroundColor } = this.state;\n    const eventType = event.getType();\n\n    if (eventType === 'BuiltinCommonInstructions::Comment') {\n      //Text value\n      gd.asCommentEvent(event).setComment(textValue);\n\n      //Text color\n      gd.asCommentEvent(event).setTextColor(\n        textColor.r,\n        textColor.g,\n        textColor.b\n      );\n      //Background color\n      gd.asCommentEvent(event).setBackgroundColor(\n        backgroundColor.r,\n        backgroundColor.g,\n        backgroundColor.b\n      );\n    } else if (eventType === 'BuiltinCommonInstructions::Group') {\n      //Text value\n      gd.asGroupEvent(event).setName(textValue);\n\n      //Text color for group not supported in Core, instead GroupEvent.js handle this\n      //Background color\n      gd.asGroupEvent(event).setBackgroundColor(\n        backgroundColor.r,\n        backgroundColor.g,\n        backgroundColor.b\n      );\n      return;\n    }\n  };\n\n  _getInitialStateFromEvent = (): State => {\n    const { event } = this.props;\n    const eventType = event.getType();\n\n    let textValue: string = '';\n    let textColor = black;\n    let backgroundColor = black;\n\n    if (eventType === 'BuiltinCommonInstructions::Comment') {\n      const commentEvent = gd.asCommentEvent(event);\n      textColor = {\n        r: commentEvent.getTextColorRed(),\n        g: commentEvent.getTextColorGreen(),\n        b: commentEvent.getTextColorBlue(),\n      };\n\n      backgroundColor = {\n        r: commentEvent.getBackgroundColorRed(),\n        g: commentEvent.getBackgroundColorGreen(),\n        b: commentEvent.getBackgroundColorBlue(),\n      };\n\n      textValue = gd.asCommentEvent(event).getComment();\n    } else if (eventType === 'BuiltinCommonInstructions::Group') {\n      var groupEvent = gd.asGroupEvent(event);\n      const r = groupEvent.getBackgroundColorR(),\n        g = groupEvent.getBackgroundColorG(),\n        b = groupEvent.getBackgroundColorB();\n\n      // Text color is automatically chosen for groups.\n      textColor = (r + g + b) / 3 > 200 ? black : white;\n\n      backgroundColor = {\n        r: groupEvent.getBackgroundColorR(),\n        g: groupEvent.getBackgroundColorG(),\n        b: groupEvent.getBackgroundColorB(),\n      };\n\n      textValue = gd.asGroupEvent(event).getName();\n    } else {\n      console.error(\n        'Dialog was opened for an unsupported event type: ' + eventType\n      );\n    }\n\n    return {\n      textValue,\n      textColor,\n      backgroundColor,\n    };\n  };\n\n  state = this._getInitialStateFromEvent();\n\n  render() {\n    const { event, onApply, onClose } = this.props;\n    const { textValue, textColor, backgroundColor } = this.state;\n    const eventType = event.getType();\n\n    return (\n      <Dialog\n        title={<Trans>Edit the event text</Trans>}\n        onRequestClose={onClose}\n        cannotBeDismissed={true}\n        open\n        noMargin\n        actions={[\n          <FlatButton\n            key=\"close\"\n            label={<Trans>Cancel</Trans>}\n            primary={false}\n            onClick={onClose}\n          />,\n          <FlatButton\n            key={'Apply'}\n            label={<Trans>Apply</Trans>}\n            primary\n            keyboardFocused\n            onClick={() => {\n              this._applyChangesOnEvent();\n              onApply();\n            }}\n          />,\n        ]}\n      >\n        <Column noMargin>\n          <MiniToolbar>\n            <MiniToolbarText>\n              <Trans>Background color:</Trans>\n            </MiniToolbarText>\n            <ColorPicker\n              style={styles.sizeTextField}\n              disableAlpha\n              color={backgroundColor}\n              onChangeComplete={color => {\n                this.setState({ backgroundColor: color.rgb });\n              }}\n            />\n\n            {eventType === 'BuiltinCommonInstructions::Comment' && (\n              <React.Fragment>\n                <MiniToolbarText>\n                  <Trans>Text color:</Trans>\n                </MiniToolbarText>\n                <ColorPicker\n                  style={styles.sizeTextField}\n                  disableAlpha\n                  color={textColor}\n                  onChangeComplete={color => {\n                    this.setState({ textColor: color.rgb });\n                  }}\n                />\n              </React.Fragment>\n            )}\n          </MiniToolbar>\n          <Line noMargin>\n            <Column expand>\n              <Line>\n                <SemiControlledTextField\n                  commitOnBlur\n                  hintText={t`Enter the text to be displayed`}\n                  fullWidth\n                  multiline\n                  rows={8}\n                  rowsMax={30}\n                  value={textValue}\n                  onChange={value => {\n                    this.setState({\n                      textValue: value,\n                    });\n                  }}\n                />\n              </Line>\n            </Column>\n          </Line>\n        </Column>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nconst LEFT_KEY = 37;\nconst UP_KEY = 38;\nconst RIGHT_KEY = 39;\nconst DOWN_KEY = 40;\nconst BACKSPACE_KEY = 8;\nconst DELETE_KEY = 46;\nconst EQUAL_KEY = 187;\nconst MINUS_KEY = 189;\nconst NUMPAD_ADD = 107;\nconst NUMPAD_SUBTRACT = 109;\nconst C_KEY = 67;\nconst F_KEY = 70;\nconst V_KEY = 86;\nconst X_KEY = 88;\nconst Y_KEY = 89;\nconst Z_KEY = 90;\nconst ESC_KEY = 27;\n\ntype ShortcutCallbacks = {|\n  onDelete?: () => void,\n  onMove?: (number, number) => void,\n  onCopy?: () => void,\n  onCut?: () => void,\n  onPaste?: () => void,\n  onUndo?: () => void,\n  onRedo?: () => void,\n  onSearch?: () => void,\n  onZoomOut?: () => void,\n  onZoomIn?: () => void,\n  onEscape?: () => void,\n|};\n\ntype ConstructorArgs = {|\n  isActive?: () => boolean,\n  shortcutCallbacks: ShortcutCallbacks,\n|};\n\n/**\n * Listen to keyboard shorcuts and call callbacks according to them.\n * Also store the state of the modifier keys (shift, ctrl, alt, meta) to know\n * if some special operations (multi selection, selection duplication) must\n * be done.\n *\n * `onKeyDown`, `onKeyUp` and other methods handling events (`onDragOver`...)\n * must be binded to the `div` element containing your component. We're not\n * using `document` to avoid issues with shortcuts being detected while a\n * component is not focused.\n */\nexport default class KeyboardShortcuts {\n  _shortcutCallbacks: ShortcutCallbacks;\n  _isActive: ?() => boolean;\n  _shiftPressed = false;\n  _ctrlPressed = false;\n  _altPressed = false;\n  _metaPressed = false;\n\n  constructor({ isActive, shortcutCallbacks }: ConstructorArgs) {\n    this._shortcutCallbacks = shortcutCallbacks;\n    this._isActive = isActive;\n  }\n\n  shouldCloneInstances() {\n    return this._isControlOrCmdPressed();\n  }\n\n  shouldMultiSelect() {\n    return this._shiftPressed;\n  }\n\n  _updateModifiersFromEvent = (evt: KeyboardEvent | DragEvent) => {\n    this._metaPressed = evt.metaKey;\n    this._altPressed = evt.altKey;\n    this._ctrlPressed = evt.ctrlKey;\n    this._shiftPressed = evt.shiftKey;\n  };\n\n  _isControlOrCmdPressed = () => {\n    // On macOS, meta key (Apple/Command key) acts as Control key on Windows/Linux.\n    return this._metaPressed || this._ctrlPressed;\n  };\n\n  onDragOver = (evt: DragEvent) => {\n    this._updateModifiersFromEvent(evt);\n  };\n\n  onKeyUp = (evt: KeyboardEvent) => {\n    this._updateModifiersFromEvent(evt);\n  };\n\n  onKeyDown = (evt: KeyboardEvent) => {\n    this._updateModifiersFromEvent(evt);\n\n    if (this._isActive && !this._isActive()) return;\n\n    const textEditorSelectors = 'textarea, input, [contenteditable=\"true\"]';\n    // $FlowFixMe\n    if (evt.target && evt.target.closest(textEditorSelectors)) {\n      return; // Something else is currently being edited.\n    }\n\n    const {\n      onDelete,\n      onMove,\n      onCopy,\n      onCut,\n      onPaste,\n      onUndo,\n      onRedo,\n      onSearch,\n      onZoomOut,\n      onZoomIn,\n      onEscape,\n    } = this._shortcutCallbacks;\n\n    if (onMove) {\n      if (evt.which === UP_KEY) {\n        onMove(0, -1);\n      } else if (evt.which === DOWN_KEY) {\n        onMove(0, 1);\n      } else if (evt.which === LEFT_KEY) {\n        onMove(-1, 0);\n      } else if (evt.which === RIGHT_KEY) {\n        onMove(1, 0);\n      }\n    }\n    if (onDelete && (evt.which === BACKSPACE_KEY || evt.which === DELETE_KEY)) {\n      onDelete();\n    }\n    if (onCopy && this._isControlOrCmdPressed() && evt.which === C_KEY) {\n      onCopy();\n    }\n    if (onCut && this._isControlOrCmdPressed() && evt.which === X_KEY) {\n      onCut();\n    }\n    if (onPaste && this._isControlOrCmdPressed() && evt.which === V_KEY) {\n      onPaste();\n    }\n    if (onUndo && this._isControlOrCmdPressed() && evt.which === Z_KEY) {\n      onUndo();\n    }\n    if (\n      onRedo &&\n      this._isControlOrCmdPressed() &&\n      evt.shiftKey &&\n      evt.which === Z_KEY\n    ) {\n      onRedo();\n    }\n    if (onRedo && this._isControlOrCmdPressed() && evt.which === Y_KEY) {\n      onRedo();\n    }\n    if (onSearch && this._isControlOrCmdPressed() && evt.which === F_KEY) {\n      onSearch();\n    }\n    if (onEscape && evt.which === ESC_KEY) {\n      onEscape();\n    }\n\n    if (onZoomOut && this._isControlOrCmdPressed() && evt.which === MINUS_KEY) {\n      onZoomOut();\n    }\n    if (onZoomOut && evt.which === NUMPAD_SUBTRACT) {\n      onZoomOut();\n    }\n\n    if (onZoomIn && this._isControlOrCmdPressed() && evt.which === EQUAL_KEY) {\n      onZoomIn();\n    }\n    if (onZoomIn && evt.which === NUMPAD_ADD) {\n      onZoomIn();\n    }\n  };\n}\n","// @flow\nimport * as React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n// We support a subset of the props supported by Material-UI v0.x Checkbox\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  label?: ?React.Node,\n  checked: boolean,\n  onCheck?: (e: {||}, checked: boolean) => void,\n  checkedIcon?: React.Node,\n  uncheckedIcon?: React.Node,\n  disabled?: boolean,\n\n  style?: {|\n    display?: 'inline-block',\n    marginRight?: number,\n  |},\n|};\n\n/**\n * A text field based on Material-UI text field.\n */\nexport default (props: Props) => {\n  const { onCheck } = props;\n  const checkbox = (\n    <Checkbox\n      disabled={props.disabled}\n      checked={props.checked}\n      onChange={\n        onCheck ? event => onCheck(event, event.target.checked) : undefined\n      }\n      icon={props.uncheckedIcon}\n      checkedIcon={props.checkedIcon}\n      color=\"primary\"\n      style={props.label ? undefined : props.style}\n    />\n  );\n  return props.label ? (\n    <FormControlLabel\n      control={checkbox}\n      label={props.label}\n      style={props.style}\n    />\n  ) : (\n    checkbox\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport InlinePopover from './InlinePopover';\nimport ParameterRenderingService from './ParameterRenderingService';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport { type EventsScope } from '../InstructionOrExpression/EventsScope.flow';\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n\n  open: boolean,\n  onRequestClose: () => void,\n  onChange: string => void,\n\n  instruction: ?gdInstruction,\n  isCondition: boolean,\n  parameterIndex: number,\n\n  anchorEl: ?any,\n\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n|};\n\ntype State = {|\n  parameterMetadata: ?gdParameterMetadata,\n  instructionMetadata: ?gdInstructionMetadata,\n  ParameterComponent: ?any,\n|};\n\nexport default class InlineParameterEditor extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    parameterMetadata: null,\n    instructionMetadata: null,\n    ParameterComponent: null,\n  };\n\n  _field: ?any;\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      (newProps.open && !this.props.open) ||\n      newProps.instruction !== this.props.instruction\n    ) {\n      this._loadComponentFromInstruction(newProps);\n    }\n  }\n\n  _unload() {\n    this.setState({\n      ParameterComponent: null,\n      parameterMetadata: null,\n      instructionMetadata: null,\n    });\n  }\n\n  _loadComponentFromInstruction(props: Props) {\n    const { project, isCondition, instruction, parameterIndex } = props;\n    if (!instruction) return this._unload();\n\n    const type = instruction.getType();\n    const instructionMetadata = isCondition\n      ? gd.MetadataProvider.getConditionMetadata(\n          project.getCurrentPlatform(),\n          type\n        )\n      : gd.MetadataProvider.getActionMetadata(\n          project.getCurrentPlatform(),\n          type\n        );\n\n    if (parameterIndex >= instructionMetadata.getParametersCount())\n      return this._unload();\n\n    const parameterMetadata = instructionMetadata.getParameter(parameterIndex);\n    const ParameterComponent = ParameterRenderingService.getParameterComponent(\n      parameterMetadata.getType()\n    );\n    this.setState(\n      {\n        ParameterComponent,\n        parameterMetadata,\n        instructionMetadata,\n      },\n      () => {\n        // Give a bit of time for the popover to mount itself\n        setTimeout(() => {\n          if (this._field && this._field.focus) this._field.focus();\n        }, 10);\n      }\n    );\n  }\n\n  render() {\n    if (!this.state.ParameterComponent || !this.props.open) return null;\n    const instruction = this.props.instruction;\n    if (!instruction) return null;\n\n    const { ParameterComponent } = this.state;\n\n    return (\n      <InlinePopover\n        open={this.props.open}\n        anchorEl={this.props.anchorEl}\n        onRequestClose={this.props.onRequestClose}\n      >\n        <ParameterComponent\n          instruction={instruction}\n          instructionMetadata={this.state.instructionMetadata}\n          parameterMetadata={this.state.parameterMetadata}\n          parameterIndex={this.props.parameterIndex}\n          value={instruction.getParameter(this.props.parameterIndex)}\n          onChange={this.props.onChange}\n          onRequestClose={this.props.onRequestClose}\n          project={this.props.project}\n          scope={this.props.scope}\n          globalObjectsContainer={this.props.globalObjectsContainer}\n          objectsContainer={this.props.objectsContainer}\n          key={instruction.ptr}\n          ref={field => (this._field = field)}\n          parameterRenderingService={ParameterRenderingService}\n          isInline\n          resourceSources={this.props.resourceSources}\n          onChooseResource={this.props.onChooseResource}\n          resourceExternalEditors={this.props.resourceExternalEditors}\n        />\n      </InlinePopover>\n    );\n  }\n}\n","//@flow\nconst gd: libGDevelop = global.gd;\n\nexport const ensureSingleOnceInstructions = (\n  instructionsList: gdInstructionsList\n) => {\n  let hasEndingOnceInstruction = false;\n  let hasInvalidOnce = false;\n  for (let i = instructionsList.size() - 1; i >= 0; --i) {\n    const instruction = instructionsList.get(i);\n    if (i === instructionsList.size() - 1) {\n      if (instruction.getType() === 'BuiltinCommonInstructions::Once') {\n        hasEndingOnceInstruction = true;\n      }\n    } else {\n      if (instruction.getType() === 'BuiltinCommonInstructions::Once') {\n        instructionsList.removeAt(i);\n        hasInvalidOnce = true;\n      }\n    }\n  }\n\n  if (hasInvalidOnce && !hasEndingOnceInstruction) {\n    const onceInstruction = new gd.Instruction();\n    onceInstruction.setType('BuiltinCommonInstructions::Once');\n    instructionsList.insert(onceInstruction, instructionsList.size());\n    onceInstruction.delete();\n  }\n\n  return hasInvalidOnce;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport Text from '../UI/Text';\n\nexport type EventsContextResult = {|\n  objectsNames: Array<string>,\n  objectOrGroupNames: Array<string>,\n  objectOrGroupBehaviorNames: {\n    [string]: Array<string>,\n  },\n|};\n\n// Store in a EventsContextResult the content of a gd.EventsContext.\n// In theory not necessary, but easier than storing,\n// passing around, and properly delete a gd.EventsContext.\nexport const toEventsContextResult = (\n  eventsContext: gdEventsContext\n): EventsContextResult => {\n  const objectsNames = eventsContext\n    .getObjectNames()\n    .toNewVectorString()\n    .toJSArray();\n  const objectOrGroupNames = eventsContext\n    .getReferencedObjectOrGroupNames()\n    .toNewVectorString()\n    .toJSArray();\n\n  const objectOrGroupBehaviorNames = {};\n  objectOrGroupNames.forEach(objectOrGroupName => {\n    const behaviorNames = eventsContext\n      .getBehaviorNamesOfObjectOrGroup(objectOrGroupName)\n      .toNewVectorString()\n      .toJSArray();\n\n    if (behaviorNames.length) {\n      objectOrGroupBehaviorNames[objectOrGroupName] = behaviorNames;\n    }\n  });\n\n  return {\n    objectsNames,\n    objectOrGroupNames,\n    objectOrGroupBehaviorNames,\n  };\n};\n\ntype Props = {|\n  onClose: () => void,\n  eventsContextResult: EventsContextResult,\n|};\n\nexport default class EventsContextAnalyzerDialog extends React.Component<\n  Props,\n  {}\n> {\n  render() {\n    const { onClose, eventsContextResult } = this.props;\n    const actions = [\n      <FlatButton\n        key=\"close\"\n        label={<Trans>Close</Trans>}\n        primary={true}\n        onClick={this.props.onClose}\n      />,\n    ];\n\n    return (\n      <Dialog\n        actions={actions}\n        cannotBeDismissed={false}\n        open\n        onRequestClose={onClose}\n      >\n        <Text>\n          <Trans>\n            Objects or groups being directly referenced in the events:{' '}\n            {eventsContextResult.objectOrGroupNames.join(', ')}\n          </Trans>\n        </Text>\n        <Text>\n          <Trans>\n            All objects potentially used in events:{' '}\n            {eventsContextResult.objectsNames.join(', ')}\n          </Trans>\n        </Text>\n        <Text>\n          <Trans>All behaviors being directly referenced in the events:</Trans>{' '}\n          {Object.keys(eventsContextResult.objectOrGroupBehaviorNames).map(\n            objectOrGroupName => {\n              return (\n                <Trans key={objectOrGroupName}>\n                  Behaviors of {objectOrGroupName}:{' '}\n                  {eventsContextResult.objectOrGroupBehaviorNames[\n                    objectOrGroupName\n                  ].join(', ')}\n                  ;{' '}\n                </Trans>\n              );\n            }\n          )}\n        </Text>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport React, { PureComponent } from 'react';\nimport Background from '../UI/Background';\nimport TextField from '../UI/TextField';\nimport { Line, Spacer } from '../UI/Grid';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport IconButton from '../UI/IconButton';\nimport FlatButton from '../UI/FlatButton';\nimport InlineCheckbox from '../UI/InlineCheckbox';\nimport Text from '../UI/Text';\nimport {\n  type SearchInEventsInputs,\n  type ReplaceInEventsInputs,\n} from './EventsSearcher';\nimport RaisedButton from '../UI/RaisedButton';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport {\n  shouldCloseOrCancel,\n  shouldValidate,\n} from '../UI/KeyboardShortcuts/InteractionKeys';\n\ntype Props = {|\n  onSearchInEvents: SearchInEventsInputs => void,\n  onReplaceInEvents: ReplaceInEventsInputs => void,\n  onCloseSearchPanel: () => void,\n  resultsCount: ?number,\n  hasEventSelected: boolean,\n  onGoToPreviousSearchResult: () => ?gdBaseEvent,\n  onGoToNextSearchResult: () => ?gdBaseEvent,\n|};\ntype State = {|\n  searchText: string,\n  replaceText: string,\n  matchCase: boolean,\n  searchInActions: boolean,\n  searchInConditions: boolean,\n  searchInEventStrings: boolean,\n  searchInSelection: boolean,\n  searchResultsDirty: boolean,\n|};\n\nexport default class SearchPanel extends PureComponent<Props, State> {\n  searchTextField: ?TextField;\n  state = {\n    searchText: '',\n    replaceText: '',\n    matchCase: false,\n    searchInActions: true,\n    searchInConditions: true,\n    searchInEventStrings: true,\n    searchInSelection: false,\n    searchResultsDirty: false,\n  };\n\n  focus = () => {\n    if (this.searchTextField) {\n      this.searchTextField.focus();\n    }\n  };\n\n  markSearchResultsDirty = () => {\n    this.setState({ searchResultsDirty: true });\n  };\n\n  launchSearch = () => {\n    const {\n      searchText,\n      searchInSelection,\n      matchCase,\n      searchInActions,\n      searchInConditions,\n      searchInEventStrings,\n    } = this.state;\n    this.props.onSearchInEvents({\n      searchInSelection,\n      searchText,\n      matchCase,\n      searchInActions,\n      searchInConditions,\n      searchInEventStrings,\n    });\n  };\n\n  launchReplace = () => {\n    const {\n      searchText,\n      replaceText,\n      searchInSelection,\n      matchCase,\n      searchInActions,\n      searchInConditions,\n      searchInEventStrings,\n    } = this.state;\n\n    this.launchSearch();\n\n    this.props.onReplaceInEvents({\n      searchInSelection,\n      searchText,\n      replaceText,\n      matchCase,\n      searchInActions,\n      searchInConditions,\n      searchInEventStrings,\n    });\n  };\n\n  launchSearchIfResultsDirty = () => {\n    if (this.state.searchResultsDirty) {\n      this.launchSearch();\n      this.setState({ searchResultsDirty: false });\n    }\n  };\n\n  render() {\n    const {\n      resultsCount,\n      hasEventSelected,\n      onGoToPreviousSearchResult,\n      onGoToNextSearchResult,\n      onCloseSearchPanel,\n    } = this.props;\n    const { searchText, replaceText, searchInSelection } = this.state;\n\n    return (\n      <Background noFullHeight noExpand>\n        <ColumnStackLayout>\n          <Line alignItems=\"baseline\" noMargin>\n            <TextField\n              margin=\"dense\"\n              ref={_searchTextField =>\n                (this.searchTextField = _searchTextField)\n              }\n              hintText={t`Text to search in parameters`}\n              onChange={(e, searchText) => {\n                this.setState({\n                  searchText,\n                  searchResultsDirty: true,\n                });\n              }}\n              onKeyPress={event => {\n                if (shouldValidate(event)) {\n                  this.launchSearchIfResultsDirty();\n                }\n              }}\n              onKeyUp={event => {\n                if (shouldCloseOrCancel(event)) {\n                  onCloseSearchPanel();\n                }\n              }}\n              value={searchText}\n              fullWidth\n            />\n            <Spacer />\n            <RaisedButton\n              disabled={!searchText}\n              primary\n              label={<Trans>Search</Trans>}\n              onClick={() => {\n                if (!this.state.searchResultsDirty) {\n                  onGoToNextSearchResult();\n                } else {\n                  this.launchSearchIfResultsDirty();\n                }\n              }}\n            />\n          </Line>\n          <Line alignItems=\"baseline\" noMargin>\n            <TextField\n              margin=\"dense\"\n              hintText={t`Text to replace in parameters`}\n              onChange={(e, replaceText) => this.setState({ replaceText })}\n              onKeyPress={event => {\n                if (shouldValidate(event)) {\n                  this.launchReplace();\n                }\n              }}\n              onKeyUp={event => {\n                if (shouldCloseOrCancel(event)) {\n                  onCloseSearchPanel();\n                }\n              }}\n              value={replaceText}\n              fullWidth\n            />\n            <Spacer />\n            <RaisedButton\n              disabled={\n                !replaceText ||\n                !searchText ||\n                (!hasEventSelected && searchInSelection)\n              }\n              label={<Trans>Replace</Trans>}\n              onClick={this.launchReplace}\n            />\n          </Line>\n          <Line noMargin alignItems=\"center\" justifyContent=\"space-between\">\n            <Line noMargin alignItems=\"center\">\n              <InlineCheckbox\n                label={<Trans>Case insensitive</Trans>}\n                checked={!this.state.matchCase}\n                onCheck={(e, checked) =>\n                  this.setState({\n                    matchCase: !checked,\n                    searchResultsDirty: true,\n                  })\n                }\n              />\n              <Text>\n                <Trans>Search in:</Trans>\n              </Text>\n              <Spacer />\n              <InlineCheckbox\n                label={<Trans>Conditions</Trans>}\n                checked={this.state.searchInConditions}\n                onCheck={(e, checked) =>\n                  this.setState({\n                    searchInConditions: checked,\n                    searchResultsDirty: true,\n                  })\n                }\n              />\n              <InlineCheckbox\n                label={<Trans>Actions</Trans>}\n                checked={this.state.searchInActions}\n                onCheck={(e, checked) =>\n                  this.setState({\n                    searchInActions: checked,\n                    searchResultsDirty: true,\n                  })\n                }\n              />\n              <InlineCheckbox\n                label={<Trans>Texts</Trans>}\n                checked={this.state.searchInEventStrings}\n                onCheck={(e, checked) =>\n                  this.setState({\n                    searchInEventStrings: checked,\n                    searchResultsDirty: true,\n                  })\n                }\n              />\n              {/* <InlineCheckbox //TODO: Implement search/replace in selection\n                label={<Trans>Replace in selection</Trans>}\n                checked={this.state.searchInSelection}\n                onCheck={(e, checked) =>\n                  this.setState({ searchInSelection: checked })}\n              /> */}\n            </Line>\n            <Line noMargin alignItems=\"center\">\n              <Text>\n                {resultsCount === null || resultsCount === undefined\n                  ? ''\n                  : resultsCount !== 0\n                  ? `${resultsCount} results`\n                  : `No results`}\n              </Text>\n              <IconButton\n                disabled={!resultsCount}\n                onClick={() => {\n                  onGoToPreviousSearchResult();\n                }}\n              >\n                <ChevronLeft />\n              </IconButton>\n              <IconButton\n                disabled={!resultsCount}\n                onClick={() => {\n                  onGoToNextSearchResult();\n                }}\n              >\n                <ChevronRight />\n              </IconButton>\n              <FlatButton\n                key=\"close\"\n                label={<Trans>Close</Trans>}\n                primary={false}\n                onClick={() => {\n                  onCloseSearchPanel();\n                }}\n              />\n            </Line>\n          </Line>\n        </ColumnStackLayout>\n      </Background>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { type SelectionState } from './SelectionHandler';\nimport { mapFor } from '../Utils/MapFor';\nimport uniqBy from 'lodash/uniqBy';\nconst gd: libGDevelop = global.gd;\n\nexport type SearchInEventsInputs = {|\n  searchInSelection: boolean,\n  searchText: string,\n  matchCase: boolean,\n  searchInConditions: boolean,\n  searchInActions: boolean,\n  searchInEventStrings: boolean,\n|};\n\nexport type ReplaceInEventsInputs = {|\n  searchInSelection: boolean,\n  searchText: string,\n  replaceText: ?string,\n  matchCase: boolean,\n  searchInConditions: boolean,\n  searchInActions: boolean,\n  searchInEventStrings: boolean,\n|};\n\ntype State = {|\n  eventsSearchResults: ?gdVectorEventsSearchResult,\n  searchFocusOffset: ?number,\n|};\n\ntype Props = {|\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  events: gdEventsList,\n  selection: SelectionState,\n  children: (props: {|\n    eventsSearchResultEvents: ?Array<gdBaseEvent>,\n    searchFocusOffset: ?number,\n    searchInEvents: (SearchInEventsInputs, cb: () => void) => void,\n    replaceInEvents: ReplaceInEventsInputs => void,\n    goToNextSearchResult: () => ?gdBaseEvent,\n    goToPreviousSearchResult: () => ?gdBaseEvent,\n  |}) => React.Node,\n|};\n\n/**\n * Component allowing to do search in events and pass the results\n * to its children components, as well as methods to browse the results.\n */\nexport default class EventsSearcher extends React.Component<Props, State> {\n  state = {\n    eventsSearchResults: null, // The list of results\n    searchFocusOffset: null,\n  };\n\n  // The list containing the raw events results. Should be derived from this.state.eventsSearchResults using\n  // this._updateListOfResultEvents before being used.\n  _resultEvents: ?Array<gdBaseEvent> = null;\n\n  componentWillUnmount() {\n    if (this.state.eventsSearchResults) this.state.eventsSearchResults.delete();\n  }\n\n  reset() {\n    if (this.state.eventsSearchResults) this.state.eventsSearchResults.delete();\n\n    this._resultEvents = null;\n    this.setState({\n      eventsSearchResults: null,\n      searchFocusOffset: null,\n    });\n  }\n\n  _doReplaceInEvents = ({\n    searchInSelection,\n    searchText,\n    replaceText,\n    matchCase,\n    searchInConditions,\n    searchInActions,\n    searchInEventStrings,\n  }: ReplaceInEventsInputs) => {\n    const { globalObjectsContainer, objectsContainer, events } = this.props;\n\n    if (searchInSelection) {\n      // Replace in selection is a bit tricky to implement as it requires to have a list\n      // of events (gd.EventsList) pointing to the same events. Need some workaround/helper\n      // function to be done in C++.\n      console.error('Replace in selection is not implemented yet');\n    }\n    if (!replaceText) return;\n\n    gd.EventsRefactorer.replaceStringInEvents(\n      globalObjectsContainer,\n      objectsContainer,\n      events,\n      searchText,\n      replaceText,\n      matchCase,\n      searchInConditions,\n      searchInActions\n      // TODO: add capability to replace in event strings\n      // searchInEventStrings\n    );\n  };\n\n  _doSearchInEvents = (\n    {\n      searchInSelection,\n      searchText,\n      matchCase,\n      searchInConditions,\n      searchInActions,\n      searchInEventStrings,\n    }: SearchInEventsInputs,\n    cb: () => void\n  ) => {\n    const { globalObjectsContainer, objectsContainer, events } = this.props;\n\n    if (searchInSelection) {\n      // Search in selection is a bit tricky to implement as it requires to have a list\n      // of events (gd.EventsList) pointing to the same events. Need some workaround/helper\n      // function to be done in C++.\n      console.error('Search in selection is not implemented yet');\n    }\n\n    const newEventsSearchResults = gd.EventsRefactorer.searchInEvents(\n      globalObjectsContainer,\n      objectsContainer,\n      events,\n      searchText,\n      matchCase,\n      searchInConditions,\n      searchInActions,\n      searchInEventStrings\n    );\n\n    if (this.state.eventsSearchResults) {\n      this.state.eventsSearchResults.delete();\n    }\n    this.setState(\n      {\n        eventsSearchResults: newEventsSearchResults.clone(),\n        searchFocusOffset: null,\n      },\n      () => {\n        this._updateListOfResultEvents();\n        cb();\n      }\n    );\n  };\n\n  _updateListOfResultEvents = () => {\n    const { eventsSearchResults } = this.state;\n    if (!eventsSearchResults) {\n      this._resultEvents = null;\n      return;\n    }\n\n    const resultEventsWithDuplicates = mapFor(\n      0,\n      eventsSearchResults.size(),\n      i => {\n        const eventsSearchResult = eventsSearchResults.at(i);\n        return eventsSearchResult.isEventValid()\n          ? eventsSearchResult.getEvent()\n          : null;\n      }\n    ).filter(Boolean);\n\n    // Store a list of unique events, because browsing for results in the events\n    // tree is made event by event.\n    this._resultEvents = uniqBy(resultEventsWithDuplicates, event => event.ptr);\n  };\n\n  _goToSearchResults = (step: number): ?gdBaseEvent => {\n    this._updateListOfResultEvents();\n    if (!this._resultEvents || this._resultEvents.length === 0) {\n      this.setState({ searchFocusOffset: null });\n      return null;\n    }\n\n    let newSearchFocusOffset =\n      this.state.searchFocusOffset === null\n        ? 0\n        : ((this.state.searchFocusOffset || 0) + step) %\n          this._resultEvents.length;\n    if (newSearchFocusOffset < 0)\n      newSearchFocusOffset += this._resultEvents.length;\n\n    const event = this._resultEvents[newSearchFocusOffset];\n    setTimeout(\n      // Change the offset on next tick to give a chance to children to unfold events before focusing it.\n      () => this.setState({ searchFocusOffset: newSearchFocusOffset }),\n      0\n    );\n    return event;\n  };\n\n  _goToPreviousSearchResult = (): ?gdBaseEvent => {\n    return this._goToSearchResults(-1);\n  };\n\n  _goToNextSearchResult = (): ?gdBaseEvent => {\n    return this._goToSearchResults(+1);\n  };\n\n  render() {\n    return this.props.children({\n      eventsSearchResultEvents: this._resultEvents,\n      searchFocusOffset: this.state.searchFocusOffset,\n      searchInEvents: this._doSearchInEvents,\n      replaceInEvents: this._doReplaceInEvents,\n      goToNextSearchResult: this._goToNextSearchResult,\n      goToPreviousSearchResult: this._goToPreviousSearchResult,\n    });\n  }\n}\n","// @flow\nconst gd: libGDevelop = global.gd;\n\nexport const containsSubInstructions = (\n  instruction: gdInstruction,\n  instructionsList: gdInstructionsList\n) => {\n  const subInstructionsList = instruction.getSubInstructions();\n  if (gd.compare(subInstructionsList, instructionsList)) return true;\n\n  for (let i = 0; i < subInstructionsList.size(); ++i) {\n    const subInstruction = subInstructionsList.get(i);\n    if (containsSubInstructions(subInstruction, instructionsList)) return true;\n  }\n\n  return false;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport { enumerateEventsFunctionsExtensions } from '../../ProjectManager/EnumerateProjectItems';\nimport { Line, Column, Spacer } from '../../UI/Grid';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\nimport {\n  setupFunctionFromEvents,\n  canCreateEventsFunction,\n  functionHasLotsOfParameters,\n  validateExtensionNameUniqueness,\n  validateExtensionName,\n  validateEventsFunctionNameUniqueness,\n  validateEventsFunctionName,\n} from '.';\nimport AlertMessage from '../../UI/AlertMessage';\nimport DismissableAlertMessage from '../../UI/DismissableAlertMessage';\nimport EventsFunctionParametersEditor from '../../EventsFunctionsExtensionEditor/EventsFunctionConfigurationEditor/EventsFunctionParametersEditor';\nimport EventsFunctionPropertiesEditor from '../../EventsFunctionsExtensionEditor/EventsFunctionConfigurationEditor/EventsFunctionPropertiesEditor';\nimport HelpButton from '../../UI/HelpButton';\nimport { ResponsiveLineStackLayout } from '../../UI/Layout';\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  serializedEvents: Object,\n  onClose: () => void,\n  onCreate: (extensionName: string, eventsFunction: gdEventsFunction) => void,\n|};\n\ntype State = {|\n  eventsFunction: ?gdEventsFunction,\n  extensionName: string,\n  createNewExtension: boolean,\n|};\n\nconst CREATE_NEW_EXTENSION_PLACEHOLDER = '<create a new extension>';\n\nexport default class EventsFunctionExtractorDialog extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    eventsFunction: null,\n    extensionName: '',\n    createNewExtension: false,\n  };\n\n  componentDidMount() {\n    const {\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      serializedEvents,\n    } = this.props;\n\n    // Set up the function\n    const eventsFunction = new gd.EventsFunction();\n    setupFunctionFromEvents({\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      serializedEvents,\n      eventsFunction,\n    });\n    this.setState({\n      eventsFunction,\n    });\n\n    // Prepopulate the form\n    const eventsFunctionsExtensions = enumerateEventsFunctionsExtensions(\n      project\n    );\n    if (eventsFunctionsExtensions.length === 0) {\n      this.setState({\n        createNewExtension: true,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const { eventsFunction } = this.state;\n    if (eventsFunction) eventsFunction.delete();\n  }\n\n  render() {\n    const { project, onClose, onCreate } = this.props;\n    const { eventsFunction, extensionName, createNewExtension } = this.state;\n    if (!eventsFunction) return null;\n\n    const eventsFunctionsExtensions = enumerateEventsFunctionsExtensions(\n      project\n    );\n    const hasLotsOfParameters = functionHasLotsOfParameters(eventsFunction);\n\n    return (\n      <Dialog\n        title={<Trans>Extract the events in a function</Trans>}\n        secondaryActions={\n          <HelpButton helpPagePath=\"/events/functions/extract-events\" />\n        }\n        actions={[\n          <FlatButton\n            key=\"cancel\"\n            label={<Trans>Cancel</Trans>}\n            onClick={onClose}\n          />,\n          <FlatButton\n            key=\"create\"\n            label={<Trans>Create</Trans>}\n            primary\n            disabled={\n              !canCreateEventsFunction(project, extensionName, eventsFunction)\n            }\n            onClick={() => onCreate(extensionName, eventsFunction)}\n          />,\n        ]}\n        cannotBeDismissed={true}\n        open\n        onRequestClose={onClose}\n        noMargin\n      >\n        <Column noMargin>\n          <Column>\n            <DismissableAlertMessage\n              identifier=\"function-extractor-explanation\"\n              kind=\"info\"\n            >\n              After creating a function, it will be usable in the events sheet.\n              Functions are grouped by extensions. Choose, or enter the name of\n              a new extension, and a function name, then configure the function\n              and its parameters.\n            </DismissableAlertMessage>\n            <ResponsiveLineStackLayout noMargin expand>\n              <SelectField\n                floatingLabelText={\n                  <Trans>Extension (storing the function)</Trans>\n                }\n                value={\n                  createNewExtension\n                    ? CREATE_NEW_EXTENSION_PLACEHOLDER\n                    : extensionName\n                }\n                onChange={(e, i, extensionName) => {\n                  if (extensionName === CREATE_NEW_EXTENSION_PLACEHOLDER) {\n                    this.setState({\n                      createNewExtension: true,\n                      extensionName: '',\n                    });\n                  } else {\n                    this.setState({\n                      createNewExtension: false,\n                      extensionName,\n                    });\n                  }\n                }}\n                fullWidth\n              >\n                {eventsFunctionsExtensions.map(eventsFunctionsExtension => (\n                  <SelectOption\n                    key={eventsFunctionsExtension.getName()}\n                    value={eventsFunctionsExtension.getName()}\n                    primaryText={\n                      eventsFunctionsExtension.getFullName() ||\n                      eventsFunctionsExtension.getName()\n                    }\n                  />\n                ))}\n                <SelectOption\n                  value={CREATE_NEW_EXTENSION_PLACEHOLDER}\n                  primaryText={t`<Create a New Extension>`}\n                />\n              </SelectField>\n              {createNewExtension ? (\n                <SemiControlledTextField\n                  commitOnBlur\n                  value={extensionName}\n                  floatingLabelText={<Trans>New extension name</Trans>}\n                  onChange={(extensionName: string) =>\n                    this.setState({ extensionName })\n                  }\n                  fullWidth\n                  errorText={\n                    !validateExtensionNameUniqueness(project, extensionName) ? (\n                      <Trans>\n                        This name is already taken by another extension.\n                      </Trans>\n                    ) : !validateExtensionName(extensionName) ? (\n                      <Trans>\n                        This name is not valid. Only use alphanumeric characters\n                        (0-9, a-z) and underscores.\n                      </Trans>\n                    ) : (\n                      undefined\n                    )\n                  }\n                />\n              ) : null}\n            </ResponsiveLineStackLayout>\n            <Line>\n              <SemiControlledTextField\n                commitOnBlur\n                value={eventsFunction.getName()}\n                floatingLabelText={<Trans>Function name</Trans>}\n                onChange={(functionName: string) => {\n                  eventsFunction.setName(functionName);\n                  this.forceUpdate();\n                }}\n                fullWidth\n                errorText={\n                  !validateEventsFunctionNameUniqueness(\n                    project,\n                    extensionName,\n                    eventsFunction\n                  ) ? (\n                    <Trans>\n                      This name is already taken by another function. Choose\n                      another name.\n                    </Trans>\n                  ) : !validateEventsFunctionName(eventsFunction.getName()) ? (\n                    <Trans>\n                      This name is not valid. Only use alphanumeric characters\n                      (0-9, a-z) and underscores.\n                    </Trans>\n                  ) : (\n                    undefined\n                  )\n                }\n              />\n            </Line>\n            {hasLotsOfParameters ? (\n              <Line>\n                <AlertMessage kind=\"warning\">\n                  <Trans>\n                    This function will have a lot of parameters. Consider\n                    creating groups or functions for a smaller set of objects so\n                    that the function is easier to reuse.\n                  </Trans>\n                </AlertMessage>\n              </Line>\n            ) : null}\n          </Column>\n          <EventsFunctionPropertiesEditor\n            eventsFunction={eventsFunction}\n            eventsBasedBehavior={null}\n            onConfigurationUpdated={() => {\n              // Force re-running logic to see if Create button is disabled.\n              this.forceUpdate();\n            }}\n            freezeEventsFunctionType\n          />\n          <Spacer />\n          <EventsFunctionParametersEditor\n            project={project}\n            eventsFunction={eventsFunction}\n            eventsBasedBehavior={null}\n            onParametersUpdated={() => {\n              // Force the dialog to adapt its size\n              this.forceUpdate();\n            }}\n            freezeParameters\n          />\n        </Column>\n      </Dialog>\n    );\n  }\n}\n","// @flow\n\nexport default function getObjectGroupByName(\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  objectGroupName: string\n): ?gdObjectGroup {\n  if (objectsContainer.getObjectGroups().has(objectGroupName)) {\n    return objectsContainer.getObjectGroups().get(objectGroupName);\n  } else if (globalObjectsContainer.getObjectGroups().has(objectGroupName)) {\n    return globalObjectsContainer.getObjectGroups().get(objectGroupName);\n  }\n\n  return null;\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport {\n  type EnumeratedBehaviorMetadata,\n  enumerateBehaviorsMetadata,\n} from '../BehaviorsEditor/EnumerateBehaviorsMetadata';\n\ntype Props = {|\n  project: gdProject,\n  objectType: string,\n  value: string,\n  onChange: string => void,\n  disabled?: boolean,\n|};\ntype State = {|\n  behaviorMetadata: Array<EnumeratedBehaviorMetadata>,\n|};\n\nexport default class BehaviorTypeSelector extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    behaviorMetadata: enumerateBehaviorsMetadata(\n      this.props.project.getCurrentPlatform(),\n      this.props.project\n    ),\n  };\n\n  render() {\n    const { disabled, objectType, value, onChange } = this.props;\n    const { behaviorMetadata } = this.state;\n\n    // If the behavior type is not in the list, we'll still\n    // add a menu item for it so that the value is displayed\n    // on screen.\n    const valueIsListed = !!behaviorMetadata.find(({ type }) => type === value);\n\n    return (\n      <SelectField\n        floatingLabelText={<Trans>Behavior type</Trans>}\n        value={value}\n        onChange={(e, i, value: string) => {\n          onChange(value);\n        }}\n        disabled={disabled}\n        fullWidth\n      >\n        {behaviorMetadata.map((metadata: EnumeratedBehaviorMetadata) => (\n          <SelectOption\n            key={metadata.type}\n            value={metadata.type}\n            primaryText={metadata.fullName}\n            disabled={\n              metadata.objectType !== '' && metadata.objectType !== objectType\n            }\n          />\n        ))}\n        {!valueIsListed && value && (\n          <SelectOption value={value} primaryText={value} />\n        )}\n      </SelectField>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport MUITable from '@material-ui/core/Table';\nimport MUITableBody from '@material-ui/core/TableBody';\nimport MUITableCell from '@material-ui/core/TableCell';\nimport MUITableHead from '@material-ui/core/TableHead';\nimport MUITableRow from '@material-ui/core/TableRow';\n\ntype TableProps = {|\n  children: React.Node, // Should be TableHeader, TableBody or TableFooter\n|};\n\n/**\n * A Table based on Material-UI Table.\n * See https://material-ui.com/components/tables/\n */\nexport class Table extends React.Component<TableProps, {||}> {\n  render() {\n    return <MUITable size=\"small\" {...this.props} />;\n  }\n}\n\ntype TableBodyProps = {|\n  children?: React.Node, // Should be TableRow\n|};\n\n/**\n * A TableBody based on Material-UI TableBody.\n */\nexport class TableBody extends React.Component<TableBodyProps, {||}> {\n  render() {\n    return <MUITableBody {...this.props} />;\n  }\n}\n\ntype TableHeaderProps = {|\n  children: React.Node, // Should be a TableRow\n|};\n\n/**\n * A TableHeader based on Material-UI TableHead.\n */\nexport class TableHeader extends React.Component<TableHeaderProps, {||}> {\n  render() {\n    return <MUITableHead {...this.props} />;\n  }\n}\n\ntype TableHeaderColumnProps = {|\n  children?: React.Node, // Text of the column\n  style?: {|\n    textAlign: 'left' | 'right',\n    paddingRight: number,\n  |},\n|};\n\n/**\n * A TableHeaderColumn based on Material-UI TableCell.\n */\nexport class TableHeaderColumn extends React.Component<\n  TableHeaderColumnProps,\n  {||}\n> {\n  render() {\n    return <MUITableCell {...this.props} />;\n  }\n}\n\ntype TableRowProps = {|\n  children: React.Node,\n  style?: {|\n    backgroundColor: string,\n  |},\n|};\n\n/**\n * A TableRow based on Material-UI TableRow.\n */\nexport class TableRow extends React.Component<TableRowProps, {||}> {\n  render() {\n    return <MUITableRow {...this.props} />;\n  }\n}\n\ntype TableRowColumnProps = {|\n  children?: React.Node, // Content for the cell\n  style?: {|\n    width?: number,\n    paddingLeft?: number,\n    paddingRight?: number,\n    textAlign?: string,\n  |},\n|};\n\n/**\n * A TableRowColumn based on Material-UI TableRowColumn.\n */\nexport class TableRowColumn extends React.Component<TableRowColumnProps, {||}> {\n  render() {\n    return <MUITableCell {...this.props} />;\n  }\n}\n","// @flow\n// Note: this file don't use export/imports nor Flow to allow its usage from Node.js\n\nconst optionalRequire = require('../Utils/OptionalRequire.js');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nconst fs = optionalRequire('fs');\nconst path = optionalRequire('path');\nconst process = optionalRequire('process');\nvar isDarwin = process && /^darwin/.test(process.platform);\n\nconst tryPath = (\n  path /*: string*/,\n  onExists /*: string => void*/,\n  onNoAccess /*: Function*/\n) =>\n  fs.access(path, fs.constants.R_OK, err => {\n    if (!err) onExists(path);\n    else onNoAccess();\n  });\n\nconst findGDJS = () /*: Promise<{|gdjsRoot: string|}> */ => {\n  if (!path || !process || !fs) return Promise.reject(new Error('Unsupported'));\n\n  const appPath = app ? app.getAppPath() : process.cwd();\n\n  // The app path is [...]/*.app/Contents/Resources/app.asar on macOS\n  // and [...]/resources/app.asar on other OSes.\n  const pathToRoot = isDarwin ? '../../../../' : path.join('..', '..');\n  const rootPath = path.join(appPath, pathToRoot);\n\n  return new Promise((resolve, reject) => {\n    const onFound = gdjsRoot => resolve({ gdjsRoot });\n    const onNotFound = () => reject(new Error('Could not find GDJS'));\n\n    // First try to find GDJS in the parent folder (when newIDE is inside IDE)\n    tryPath(path.join(rootPath, '..', 'JsPlatform'), onFound, () => {\n      // Or in the resources (for a standalone newIDE)\n      tryPath(path.join(appPath, '..', 'GDJS'), onFound, () => {\n        // Or in the resources when developing with Electron\n        const devPath = path.join(\n          appPath,\n          '..',\n          '..',\n          'app',\n          'resources',\n          'GDJS'\n        );\n        tryPath(devPath, onFound, onNotFound);\n      });\n    });\n  });\n};\n\nmodule.exports = {\n  findGDJS,\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport * as React from 'react';\nimport EventsSheet from '../EventsSheet';\nimport EditorMosaic from '../UI/EditorMosaic';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport EventsFunctionConfigurationEditor from './EventsFunctionConfigurationEditor';\nimport EventsFunctionsList, {\n  type EventsFunctionCreationParameters,\n} from '../EventsFunctionsList';\nimport EventsBasedBehaviorsList from '../EventsBasedBehaviorsList';\nimport Background from '../UI/Background';\nimport OptionsEditorDialog from './OptionsEditorDialog';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport EventsBasedBehaviorEditorDialog from '../EventsBasedBehaviorEditor/EventsBasedBehaviorEditorDialog';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport BehaviorMethodSelectorDialog from './BehaviorMethodSelectorDialog';\nimport ExtensionFunctionSelectorDialog from './ExtensionFunctionSelectorDialog';\nimport {\n  isBehaviorLifecycleEventsFunction,\n  isExtensionLifecycleEventsFunction,\n} from '../EventsFunctionsExtensionsLoader/MetadataDeclarationHelpers';\nimport FlatButton from '../UI/FlatButton';\nimport { Line } from '../UI/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport { ResponsiveWindowMeasurer } from '../UI/Reponsive/ResponsiveWindowMeasurer';\nimport EditorNavigator, {\n  type EditorNavigatorInterface,\n} from '../UI/EditorMosaic/EditorNavigator';\nimport ChooseEventsFunctionsExtensionEditor from './ChooseEventsFunctionsExtensionEditor';\nimport Check from '@material-ui/icons/Check';\nimport Tune from '@material-ui/icons/Tune';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport { getParametersIndexOffset } from '../EventsFunctionsExtensionsLoader';\n\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  setToolbar: (?React.Node) => void,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  openInstructionOrExpression: (\n    extension: gdPlatformExtension,\n    type: string\n  ) => void,\n  onCreateEventsFunction: (\n    extensionName: string,\n    eventsFunction: gdEventsFunction\n  ) => void,\n  onBehaviorEdited?: () => void,\n  initiallyFocusedFunctionName: ?string,\n  initiallyFocusedBehaviorName: ?string,\n  unsavedChanges?: ?UnsavedChanges,\n|};\n\ntype State = {|\n  selectedEventsFunction: ?gdEventsFunction,\n  selectedEventsBasedBehavior: ?gdEventsBasedBehavior,\n  editedEventsBasedBehavior: ?gdEventsBasedBehavior,\n  editOptionsDialogOpen: boolean,\n  behaviorMethodSelectorDialogOpen: boolean,\n  extensionFunctionSelectorDialogOpen: boolean,\n  onAddEventsFunctionCb: ?(\n    parameters: ?EventsFunctionCreationParameters\n  ) => void,\n|};\n\nconst initialMosaicEditorNodes = {\n  direction: 'row',\n  first: {\n    direction: 'column',\n    first: 'free-functions-list',\n    second: 'behaviors-list',\n    splitPercentage: 50,\n  },\n  second: {\n    direction: 'column',\n    first: 'parameters',\n    second: 'events-sheet',\n    splitPercentage: 25,\n  },\n  splitPercentage: 25,\n};\n\nexport default class EventsFunctionsExtensionEditor extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    selectedEventsFunction: null,\n    selectedEventsBasedBehavior: null,\n    editedEventsBasedBehavior: null,\n    editOptionsDialogOpen: false,\n    behaviorMethodSelectorDialogOpen: false,\n    extensionFunctionSelectorDialogOpen: false,\n    onAddEventsFunctionCb: null,\n  };\n  editor: ?EventsSheet;\n  _editorMosaic: ?EditorMosaic;\n  _editorNavigator: ?EditorNavigatorInterface;\n  _globalObjectsContainer: ?gdObjectsContainer;\n  _objectsContainer: ?gdObjectsContainer;\n\n  componentDidMount() {\n    if (this.props.initiallyFocusedFunctionName) {\n      this.selectEventsFunctionByName(\n        this.props.initiallyFocusedFunctionName,\n        this.props.initiallyFocusedBehaviorName\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._globalObjectsContainer) this._globalObjectsContainer.delete();\n    if (this._objectsContainer) this._objectsContainer.delete();\n  }\n\n  _loadEventsFunctionFrom = (\n    project: gdProject,\n    eventsFunction: gdEventsFunction\n  ) => {\n    // Create an empty \"context\" of objects.\n    // Avoid recreating containers if they were already created, so that\n    // we keep the same objects in memory and avoid remounting components\n    // (like ObjectGroupsList) because objects \"ptr\" changed.\n    if (!this._globalObjectsContainer) {\n      this._globalObjectsContainer = new gd.ObjectsContainer();\n    }\n\n    if (!this._objectsContainer) {\n      this._objectsContainer = new gd.ObjectsContainer();\n    }\n\n    // Initialize this \"context\" of objects with the function\n    // (as done during code generation).\n    gd.EventsFunctionTools.eventsFunctionToObjectsContainer(\n      project,\n      eventsFunction,\n      this._globalObjectsContainer,\n      this._objectsContainer\n    );\n  };\n\n  updateToolbar = () => {\n    if (this.editor) {\n      this.editor.updateToolbar();\n    } else {\n      this.props.setToolbar(<div />);\n    }\n  };\n\n  selectEventsFunctionByName = (\n    functionName: string,\n    behaviorName: ?string\n  ) => {\n    const { eventsFunctionsExtension } = this.props;\n\n    if (behaviorName) {\n      // Behavior function\n      const eventsBasedBehaviors = eventsFunctionsExtension.getEventsBasedBehaviors();\n      if (eventsBasedBehaviors.has(behaviorName)) {\n        const eventsBasedBehavior = eventsBasedBehaviors.get(behaviorName);\n        const behaviorEventsFunctions = eventsBasedBehavior.getEventsFunctions();\n        if (behaviorEventsFunctions.hasEventsFunctionNamed(functionName)) {\n          this._selectEventsFunction(\n            behaviorEventsFunctions.getEventsFunction(functionName),\n            eventsBasedBehavior\n          );\n        }\n      }\n    } else {\n      // Free function\n      if (eventsFunctionsExtension.hasEventsFunctionNamed(functionName)) {\n        this._selectEventsFunction(\n          eventsFunctionsExtension.getEventsFunction(functionName),\n          null\n        );\n      }\n    }\n  };\n\n  _selectEventsFunction = (\n    selectedEventsFunction: ?gdEventsFunction,\n    selectedEventsBasedBehavior: ?gdEventsBasedBehavior\n  ) => {\n    if (!selectedEventsFunction) {\n      this.setState(\n        {\n          selectedEventsFunction: null,\n          selectedEventsBasedBehavior,\n        },\n        () => this.updateToolbar()\n      );\n      return;\n    }\n\n    this._loadEventsFunctionFrom(this.props.project, selectedEventsFunction);\n    this.setState(\n      {\n        selectedEventsFunction,\n        selectedEventsBasedBehavior,\n      },\n      () => {\n        this.updateToolbar();\n\n        if (this._editorNavigator) {\n          // Open the parameters of the function if it's a new, empty function.\n          if (\n            selectedEventsFunction &&\n            !selectedEventsFunction.getEvents().getEventsCount()\n          ) {\n            this._editorNavigator.openEditor('parameters');\n          } else {\n            this._editorNavigator.openEditor('events-sheet');\n          }\n        }\n      }\n    );\n  };\n\n  _makeRenameFreeEventsFunction = (i18n: I18nType) => (\n    eventsFunction: gdEventsFunction,\n    newName: string,\n    done: boolean => void\n  ) => {\n    if (!gd.Project.validateName(newName)) {\n      showWarningBox(\n        i18n._(\n          t`This name is invalid. Only use alphanumeric characters (0-9, a-z) and underscores. Digits are not allowed as the first character.`\n        ),\n        { delayToNextTick: true }\n      );\n      return;\n    }\n    if (isExtensionLifecycleEventsFunction(newName)) {\n      showWarningBox(\n        i18n._(\n          t`This name is reserved for a lifecycle function of the extension. Choose another name for your function.`\n        ),\n        { delayToNextTick: true }\n      );\n      return done(false);\n    }\n\n    const { project, eventsFunctionsExtension } = this.props;\n    gd.WholeProjectRefactorer.renameEventsFunction(\n      project,\n      eventsFunctionsExtension,\n      eventsFunction.getName(),\n      newName\n    );\n\n    done(true);\n  };\n\n  _makeRenameBehaviorEventsFunction = (i18n: I18nType) => (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    eventsFunction: gdEventsFunction,\n    newName: string,\n    done: boolean => void\n  ) => {\n    if (!gd.Project.validateName(newName)) {\n      showWarningBox(\n        i18n._(\n          t`This name is invalid. Only use alphanumeric characters (0-9, a-z) and underscores. Digits are not allowed as the first character.`\n        ),\n        { delayToNextTick: true }\n      );\n      return done(false);\n    }\n    if (isBehaviorLifecycleEventsFunction(newName)) {\n      showWarningBox(\n        i18n._(\n          t`This name is reserved for a lifecycle method of the behavior. Choose another name for your custom function.`\n        ),\n        { delayToNextTick: true }\n      );\n      return done(false);\n    }\n\n    const { project, eventsFunctionsExtension } = this.props;\n    gd.WholeProjectRefactorer.renameBehaviorEventsFunction(\n      project,\n      eventsFunctionsExtension,\n      eventsBasedBehavior,\n      eventsFunction.getName(),\n      newName\n    );\n\n    done(true);\n  };\n\n  _makeMoveFreeEventsParameter = (i18n: I18nType) => (\n    eventsFunction: gdEventsFunction,\n    oldIndex: number,\n    newIndex: number,\n    done: boolean => void\n  ) => {\n    // Don't ask for user confirmation as this change is easy to revert.\n\n    const { project, eventsFunctionsExtension } = this.props;\n    gd.WholeProjectRefactorer.moveEventsFunctionParameter(\n      project,\n      eventsFunctionsExtension,\n      eventsFunction.getName(),\n      oldIndex + getParametersIndexOffset(false),\n      newIndex + getParametersIndexOffset(false)\n    );\n\n    done(true);\n  };\n\n  _makeMoveBehaviorEventsParameter = (i18n: I18nType) => (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    eventsFunction: gdEventsFunction,\n    oldIndex: number,\n    newIndex: number,\n    done: boolean => void\n  ) => {\n    // Don't ask for user confirmation as this change is easy to revert.\n\n    const { project, eventsFunctionsExtension } = this.props;\n    gd.WholeProjectRefactorer.moveBehaviorEventsFunctionParameter(\n      project,\n      eventsFunctionsExtension,\n      eventsBasedBehavior,\n      eventsFunction.getName(),\n      oldIndex,\n      newIndex\n    );\n\n    done(true);\n  };\n\n  _onDeleteEventsFunction = (\n    eventsFunction: gdEventsFunction,\n    cb: boolean => void\n  ) => {\n    if (\n      this.state.selectedEventsFunction &&\n      gd.compare(eventsFunction, this.state.selectedEventsFunction)\n    ) {\n      this._selectEventsFunction(null, this.state.selectedEventsBasedBehavior);\n    }\n\n    cb(true);\n  };\n\n  _selectEventsBasedBehavior = (\n    selectedEventsBasedBehavior: ?gdEventsBasedBehavior\n  ) => {\n    this.setState(\n      {\n        selectedEventsBasedBehavior,\n        selectedEventsFunction: null,\n      },\n      () => {\n        this.updateToolbar();\n        if (selectedEventsBasedBehavior) {\n          if (this._editorMosaic)\n            this._editorMosaic.openEditor(\n              'behavior-functions-list',\n              'end',\n              75,\n              'column'\n            );\n          if (this._editorNavigator)\n            this._editorNavigator.openEditor('behavior-functions-list');\n        }\n      }\n    );\n  };\n\n  _makeRenameEventsBasedBehavior = (i18n: I18nType) => (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    newName: string,\n    done: boolean => void\n  ) => {\n    if (!gd.Project.validateName(newName)) {\n      showWarningBox(\n        i18n._(\n          t`This name is invalid. Only use alphanumeric characters (0-9, a-z) and underscores. Digits are not allowed as the first character.`\n        ),\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    const { project, eventsFunctionsExtension } = this.props;\n    gd.WholeProjectRefactorer.renameEventsBasedBehavior(\n      project,\n      eventsFunctionsExtension,\n      eventsBasedBehavior.getName(),\n      newName\n    );\n\n    done(true);\n  };\n\n  _onEventsBasedBehaviorRenamed = () => {\n    // Name of a behavior changed, so notify parent\n    // that a behavior was edited (to trigger reload of extensions)\n    if (this.props.onBehaviorEdited) this.props.onBehaviorEdited();\n\n    // Reload the selected events function, if any, as the behavior was\n    // changed so objects containers need to be re-created (otherwise,\n    // objects from objects containers will still refer to the old behavior name,\n    // done before the call to gd.WholeProjectRefactorer.renameEventsBasedBehavior).\n    if (this.state.selectedEventsFunction) {\n      this._loadEventsFunctionFrom(\n        this.props.project,\n        this.state.selectedEventsFunction\n      );\n    }\n  };\n\n  _onDeleteEventsBasedBehavior = (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    cb: boolean => void\n  ) => {\n    if (\n      this.state.selectedEventsBasedBehavior &&\n      gd.compare(eventsBasedBehavior, this.state.selectedEventsBasedBehavior)\n    ) {\n      this._selectEventsBasedBehavior(null);\n    }\n\n    cb(true);\n  };\n\n  _onAddFreeEventsFunction = (\n    onAddEventsFunctionCb: (\n      parameters: ?EventsFunctionCreationParameters\n    ) => void\n  ) => {\n    this.setState({\n      extensionFunctionSelectorDialogOpen: true,\n      onAddEventsFunctionCb,\n    });\n  };\n\n  _onCloseExtensionFunctionSelectorDialog = (\n    parameters: ?EventsFunctionCreationParameters\n  ) => {\n    const { onAddEventsFunctionCb } = this.state;\n    this.setState(\n      {\n        extensionFunctionSelectorDialogOpen: false,\n        onAddEventsFunctionCb: null,\n      },\n      () => {\n        if (onAddEventsFunctionCb) onAddEventsFunctionCb(parameters);\n      }\n    );\n  };\n\n  _onAddBehaviorEventsFunction = (\n    onAddEventsFunctionCb: (\n      parameters: ?EventsFunctionCreationParameters\n    ) => void\n  ) => {\n    this.setState({\n      behaviorMethodSelectorDialogOpen: true,\n      onAddEventsFunctionCb,\n    });\n  };\n\n  _onCloseBehaviorMethodSelectorDialog = (\n    parameters: ?EventsFunctionCreationParameters\n  ) => {\n    const { onAddEventsFunctionCb } = this.state;\n    this.setState(\n      {\n        behaviorMethodSelectorDialogOpen: false,\n        onAddEventsFunctionCb: null,\n      },\n      () => {\n        if (onAddEventsFunctionCb) onAddEventsFunctionCb(parameters);\n      }\n    );\n  };\n\n  _onBehaviorEventsFunctionAdded = (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    eventsFunction: gdEventsFunction\n  ) => {\n    // This will create the mandatory parameters for the newly added function.\n    gd.WholeProjectRefactorer.ensureBehaviorEventsFunctionsProperParameters(\n      this.props.eventsFunctionsExtension,\n      eventsBasedBehavior\n    );\n  };\n\n  _onBehaviorPropertyRenamed = (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    oldName: string,\n    newName: string\n  ) => {\n    const { project, eventsFunctionsExtension } = this.props;\n    gd.WholeProjectRefactorer.renameBehaviorProperty(\n      project,\n      eventsFunctionsExtension,\n      eventsBasedBehavior,\n      oldName,\n      newName\n    );\n  };\n\n  _editOptions = (open: boolean = true) => {\n    this.setState({\n      editOptionsDialogOpen: open,\n    });\n  };\n\n  _editBehavior = (editedEventsBasedBehavior: ?gdEventsBasedBehavior) => {\n    this.setState(\n      state => {\n        // If we're closing the properties of a behavior, ensure parameters\n        // are up-to-date in all event functions of the behavior (the object\n        // type might have changed).\n        if (state.editedEventsBasedBehavior && !editedEventsBasedBehavior) {\n          gd.WholeProjectRefactorer.ensureBehaviorEventsFunctionsProperParameters(\n            this.props.eventsFunctionsExtension,\n            state.editedEventsBasedBehavior\n          );\n        }\n\n        return {\n          editedEventsBasedBehavior,\n        };\n      },\n      () => {\n        if (!editedEventsBasedBehavior) {\n          // If we're closing the properties of a behavior, notify parent\n          // that a behavior was edited (to trigger reload of extensions)\n          if (this.props.onBehaviorEdited) {\n            this.props.onBehaviorEdited();\n          }\n\n          // Reload the selected events function, if any, as the behavior was\n          // changed so objects containers need to be re-created. Notably, the\n          // type of the object that is handled by the behavior may have changed.\n          if (this.state.selectedEventsFunction) {\n            this._loadEventsFunctionFrom(\n              this.props.project,\n              this.state.selectedEventsFunction\n            );\n          }\n        }\n      }\n    );\n  };\n\n  _openFreeFunctionsListEditor = () => {\n    if (this._editorNavigator)\n      this._editorNavigator.openEditor('free-functions-list');\n  };\n\n  _openBehaviorsListEditor = () => {\n    if (this._editorNavigator)\n      this._editorNavigator.openEditor('behaviors-list');\n  };\n\n  _onEditorNavigatorEditorChanged = (editorName: string) => {\n    // It's important that this method is the same across renders,\n    // to avoid confusing EditorNavigator into thinking it's changed\n    // and immediately calling it, which would trigger an infinite loop.\n    // Search for \"callback-prevent-infinite-rerendering\" in the codebase.\n\n    this.updateToolbar();\n\n    if (editorName === 'behaviors-list') {\n      this._selectEventsBasedBehavior(null);\n    } else if (\n      editorName === 'free-functions-list' ||\n      editorName === 'behavior-functions-list'\n    ) {\n      this._selectEventsFunction(null, this.state.selectedEventsBasedBehavior);\n    }\n  };\n\n  render() {\n    const { project, eventsFunctionsExtension } = this.props;\n    const {\n      selectedEventsFunction,\n      selectedEventsBasedBehavior,\n      editOptionsDialogOpen,\n      behaviorMethodSelectorDialogOpen,\n      extensionFunctionSelectorDialogOpen,\n      editedEventsBasedBehavior,\n    } = this.state;\n\n    const editors = {\n      'choose-editor': {\n        type: 'primary',\n        noTitleBar: true,\n        renderEditor: () => (\n          <ChooseEventsFunctionsExtensionEditor\n            eventsFunctionsExtension={eventsFunctionsExtension}\n            onEditFreeFunctions={this._openFreeFunctionsListEditor}\n            onEditBehaviors={this._openBehaviorsListEditor}\n            onEditExtensionOptions={this._editOptions}\n          />\n        ),\n      },\n      parameters: {\n        type: 'primary',\n        title: t`Function Configuration`,\n        toolbarControls: [],\n        renderEditor: () => (\n          <I18n>\n            {({ i18n }) => (\n              <Background>\n                {selectedEventsFunction &&\n                this._globalObjectsContainer &&\n                this._objectsContainer ? (\n                  <EventsFunctionConfigurationEditor\n                    project={project}\n                    eventsFunction={selectedEventsFunction}\n                    eventsBasedBehavior={selectedEventsBasedBehavior}\n                    globalObjectsContainer={this._globalObjectsContainer}\n                    objectsContainer={this._objectsContainer}\n                    helpPagePath={\n                      !!selectedEventsBasedBehavior\n                        ? '/behaviors/events-based-behaviors'\n                        : '/events/functions'\n                    }\n                    onParametersOrGroupsUpdated={() => {\n                      this._loadEventsFunctionFrom(\n                        project,\n                        selectedEventsFunction\n                      );\n                      this.forceUpdate();\n                    }}\n                    onMoveFreeEventsParameter={this._makeMoveFreeEventsParameter(\n                      i18n\n                    )}\n                    onMoveBehaviorEventsParameter={this._makeMoveBehaviorEventsParameter(\n                      i18n\n                    )}\n                    unsavedChanges={this.props.unsavedChanges}\n                  />\n                ) : (\n                  <EmptyMessage>\n                    <Trans>\n                      Choose a function, or a function of a behavior, to set the\n                      parameters that it accepts.\n                    </Trans>\n                  </EmptyMessage>\n                )}\n              </Background>\n            )}\n          </I18n>\n        ),\n      },\n      'events-sheet': {\n        type: 'primary',\n        noTitleBar: true,\n        renderEditor: () =>\n          selectedEventsFunction &&\n          this._globalObjectsContainer &&\n          this._objectsContainer ? (\n            <Background>\n              <EventsSheet\n                key={selectedEventsFunction.ptr}\n                ref={editor => (this.editor = editor)}\n                project={project}\n                scope={{\n                  layout: null,\n                  eventsFunctionsExtension,\n                  eventsBasedBehavior: selectedEventsBasedBehavior,\n                  eventsFunction: selectedEventsFunction,\n                }}\n                globalObjectsContainer={this._globalObjectsContainer}\n                objectsContainer={this._objectsContainer}\n                events={selectedEventsFunction.getEvents()}\n                onOpenExternalEvents={() => {}}\n                onOpenLayout={() => {}}\n                resourceSources={this.props.resourceSources}\n                onChooseResource={this.props.onChooseResource}\n                resourceExternalEditors={this.props.resourceExternalEditors}\n                openInstructionOrExpression={\n                  this.props.openInstructionOrExpression\n                }\n                setToolbar={this.props.setToolbar}\n                onCreateEventsFunction={this.props.onCreateEventsFunction}\n                onOpenSettings={this._editOptions}\n                unsavedChanges={this.props.unsavedChanges}\n              />\n            </Background>\n          ) : (\n            <Background>\n              <EmptyMessage>\n                <Trans>\n                  Choose a function, or a function of a behavior, to edit its\n                  events.\n                </Trans>\n              </EmptyMessage>\n            </Background>\n          ),\n      },\n      'free-functions-list': {\n        type: 'primary',\n        title: t`Functions`,\n        toolbarControls: [],\n        renderEditor: () => (\n          <I18n>\n            {({ i18n }) => (\n              <EventsFunctionsList\n                project={project}\n                eventsFunctionsContainer={eventsFunctionsExtension}\n                selectedEventsFunction={selectedEventsFunction}\n                onSelectEventsFunction={selectedEventsFunction =>\n                  this._selectEventsFunction(selectedEventsFunction, null)\n                }\n                onDeleteEventsFunction={this._onDeleteEventsFunction}\n                canRename={(eventsFunction: gdEventsFunction) => {\n                  return !isExtensionLifecycleEventsFunction(\n                    eventsFunction.getName()\n                  );\n                }}\n                onRenameEventsFunction={this._makeRenameFreeEventsFunction(\n                  i18n\n                )}\n                onAddEventsFunction={this._onAddFreeEventsFunction}\n                onEventsFunctionAdded={() => {}}\n                renderHeader={() => (\n                  <React.Fragment>\n                    <Line justifyContent=\"center\">\n                      <FlatButton\n                        label={<Trans>Edit extension options</Trans>}\n                        primary\n                        onClick={() => this._editOptions()}\n                      />\n                    </Line>\n                    <Divider />\n                  </React.Fragment>\n                )}\n                unsavedChanges={this.props.unsavedChanges}\n              />\n            )}\n          </I18n>\n        ),\n      },\n      'behavior-functions-list': {\n        type: 'primary',\n        title: t`Behavior functions`,\n        renderEditor: () =>\n          selectedEventsBasedBehavior ? (\n            <I18n>\n              {({ i18n }) => (\n                <EventsFunctionsList\n                  project={project}\n                  eventsFunctionsContainer={selectedEventsBasedBehavior.getEventsFunctions()}\n                  selectedEventsFunction={selectedEventsFunction}\n                  onSelectEventsFunction={selectedEventsFunction =>\n                    this._selectEventsFunction(\n                      selectedEventsFunction,\n                      selectedEventsBasedBehavior\n                    )\n                  }\n                  onDeleteEventsFunction={this._onDeleteEventsFunction}\n                  canRename={(eventsFunction: gdEventsFunction) => {\n                    return !isBehaviorLifecycleEventsFunction(\n                      eventsFunction.getName()\n                    );\n                  }}\n                  onRenameEventsFunction={(\n                    eventsFunction: gdEventsFunction,\n                    newName: string,\n                    done: boolean => void\n                  ) =>\n                    this._makeRenameBehaviorEventsFunction(i18n)(\n                      selectedEventsBasedBehavior,\n                      eventsFunction,\n                      newName,\n                      done\n                    )\n                  }\n                  onAddEventsFunction={this._onAddBehaviorEventsFunction}\n                  onEventsFunctionAdded={eventsFunction =>\n                    this._onBehaviorEventsFunctionAdded(\n                      selectedEventsBasedBehavior,\n                      eventsFunction\n                    )\n                  }\n                  renderHeader={() => (\n                    <React.Fragment>\n                      <Line justifyContent=\"center\">\n                        <FlatButton\n                          label={<Trans>Edit behavior properties</Trans>}\n                          primary\n                          onClick={() =>\n                            this._editBehavior(selectedEventsBasedBehavior)\n                          }\n                        />\n                      </Line>\n                      <Divider />\n                    </React.Fragment>\n                  )}\n                  unsavedChanges={this.props.unsavedChanges}\n                />\n              )}\n            </I18n>\n          ) : (\n            <Background>\n              <EmptyMessage>\n                <Trans>\n                  Select a behavior to display the functions inside this\n                  behavior.\n                </Trans>\n              </EmptyMessage>\n            </Background>\n          ),\n      },\n\n      'behaviors-list': {\n        type: 'secondary',\n        title: t`Behaviors`,\n        toolbarControls: [],\n        renderEditor: () => (\n          <I18n>\n            {({ i18n }) => (\n              <EventsBasedBehaviorsList\n                project={project}\n                eventsBasedBehaviorsList={eventsFunctionsExtension.getEventsBasedBehaviors()}\n                selectedEventsBasedBehavior={selectedEventsBasedBehavior}\n                onSelectEventsBasedBehavior={this._selectEventsBasedBehavior}\n                onDeleteEventsBasedBehavior={this._onDeleteEventsBasedBehavior}\n                onRenameEventsBasedBehavior={this._makeRenameEventsBasedBehavior(\n                  i18n\n                )}\n                onEventsBasedBehaviorRenamed={\n                  this._onEventsBasedBehaviorRenamed\n                }\n                onEditProperties={this._editBehavior}\n                unsavedChanges={this.props.unsavedChanges}\n              />\n            )}\n          </I18n>\n        ),\n      },\n    };\n\n    return (\n      <React.Fragment>\n        <ResponsiveWindowMeasurer>\n          {windowWidth =>\n            windowWidth === 'small' ? (\n              <EditorNavigator\n                ref={editorNavigator =>\n                  (this._editorNavigator = editorNavigator)\n                }\n                editors={editors}\n                initialEditorName={'choose-editor'}\n                transitions={{\n                  'behaviors-list': {\n                    previousEditor: 'choose-editor',\n                  },\n                  'behavior-functions-list': {\n                    previousEditor: 'behaviors-list',\n                  },\n                  'free-functions-list': {\n                    previousEditor: 'choose-editor',\n                  },\n                  'events-sheet': {\n                    nextIcon: <Tune />,\n                    nextLabel: <Trans>Parameters</Trans>,\n                    nextEditor: 'parameters',\n                    previousEditor: () => {\n                      if (selectedEventsBasedBehavior)\n                        return 'behavior-functions-list';\n                      return 'free-functions-list';\n                    },\n                  },\n                  parameters: {\n                    nextIcon: <Check />,\n                    nextLabel: <Trans>Validate these parameters</Trans>,\n                    nextEditor: 'events-sheet',\n                  },\n                }}\n                onEditorChanged={\n                  // It's important that this callback is the same across renders,\n                  // to avoid confusing EditorNavigator into thinking it's changed\n                  // and immediately calling it, which would trigger an infinite loop.\n                  // Search for \"callback-prevent-infinite-rerendering\" in the codebase.\n                  this._onEditorNavigatorEditorChanged\n                }\n              />\n            ) : (\n              <PreferencesContext.Consumer>\n                {({\n                  getDefaultEditorMosaicNode,\n                  setDefaultEditorMosaicNode,\n                }) => (\n                  <EditorMosaic\n                    ref={editorMosaic => (this._editorMosaic = editorMosaic)}\n                    editors={editors}\n                    onPersistNodes={node =>\n                      setDefaultEditorMosaicNode(\n                        'events-functions-extension-editor',\n                        node\n                      )\n                    }\n                    initialNodes={\n                      getDefaultEditorMosaicNode(\n                        'events-functions-extension-editor'\n                      ) || initialMosaicEditorNodes\n                    }\n                  />\n                )}\n              </PreferencesContext.Consumer>\n            )\n          }\n        </ResponsiveWindowMeasurer>\n        {editOptionsDialogOpen && (\n          <OptionsEditorDialog\n            eventsFunctionsExtension={eventsFunctionsExtension}\n            open\n            onClose={() => this._editOptions(false)}\n          />\n        )}\n        {behaviorMethodSelectorDialogOpen && selectedEventsBasedBehavior && (\n          <BehaviorMethodSelectorDialog\n            eventsBasedBehavior={selectedEventsBasedBehavior}\n            onCancel={() => this._onCloseBehaviorMethodSelectorDialog(null)}\n            onChoose={parameters =>\n              this._onCloseBehaviorMethodSelectorDialog(parameters)\n            }\n          />\n        )}\n        {extensionFunctionSelectorDialogOpen && eventsFunctionsExtension && (\n          <ExtensionFunctionSelectorDialog\n            eventsFunctionsExtension={eventsFunctionsExtension}\n            onCancel={() => this._onCloseExtensionFunctionSelectorDialog(null)}\n            onChoose={parameters =>\n              this._onCloseExtensionFunctionSelectorDialog(parameters)\n            }\n          />\n        )}\n        {editedEventsBasedBehavior && (\n          <EventsBasedBehaviorEditorDialog\n            project={project}\n            eventsFunctionsExtension={eventsFunctionsExtension}\n            eventsBasedBehavior={editedEventsBasedBehavior}\n            onApply={() => {\n              if (this.props.unsavedChanges)\n                this.props.unsavedChanges.triggerUnsavedChanges();\n              this._editBehavior(null);\n            }}\n            onRenameProperty={(oldName, newName) =>\n              this._onBehaviorPropertyRenamed(\n                editedEventsBasedBehavior,\n                oldName,\n                newName\n              )\n            }\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport ObjectGroupsListWithObjectGroupEditor from '../../ObjectGroupsList/ObjectGroupsListWithObjectGroupEditor';\nimport { Tabs, Tab } from '../../UI/Tabs';\nimport EventsFunctionParametersEditor from './EventsFunctionParametersEditor';\nimport EventsFunctionPropertiesEditor from './EventsFunctionPropertiesEditor';\nimport ScrollView from '../../UI/ScrollView';\nimport { Column, Line } from '../../UI/Grid';\nimport { showWarningBox } from '../../UI/Messages/MessageBox';\nimport Window from '../../Utils/Window';\nimport { type GroupWithContext } from '../../ObjectsList/EnumerateObjects';\nimport { type UnsavedChanges } from '../../MainFrame/UnsavedChangesContext';\n\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  eventsFunction: gdEventsFunction,\n  eventsBasedBehavior: ?gdEventsBasedBehavior,\n  onParametersOrGroupsUpdated: () => void,\n  helpPagePath?: string,\n  onConfigurationUpdated?: () => void,\n  renderConfigurationHeader?: () => React.Node,\n  freezeParameters?: boolean,\n  freezeEventsFunctionType?: boolean,\n  onMoveFreeEventsParameter?: (\n    eventsFunction: gdEventsFunction,\n    oldIndex: number,\n    newIndex: number,\n    done: (boolean) => void\n  ) => void,\n  onMoveBehaviorEventsParameter?: (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    eventsFunction: gdEventsFunction,\n    oldIndex: number,\n    newIndex: number,\n    done: (boolean) => void\n  ) => void,\n  unsavedChanges?: ?UnsavedChanges,\n|};\n\ntype TabNames = 'config' | 'parameters' | 'groups';\n\ntype State = {|\n  currentTab: TabNames,\n|};\n\nexport default class EventsFunctionConfigurationEditor extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    currentTab: 'config',\n  };\n\n  _canObjectOrGroupUseNewName = (newName: string) => {\n    const { objectsContainer, globalObjectsContainer } = this.props;\n\n    if (\n      objectsContainer.hasObjectNamed(newName) ||\n      globalObjectsContainer.hasObjectNamed(newName) ||\n      objectsContainer.getObjectGroups().has(newName) ||\n      globalObjectsContainer.getObjectGroups().has(newName)\n    ) {\n      showWarningBox(\n        'Another object or group with this name already exists in this function.',\n        { delayToNextTick: true }\n      );\n      return false;\n    } else if (!gd.Project.validateName(newName)) {\n      showWarningBox(\n        'This name is invalid. Only use alphanumeric characters (0-9, a-z) and underscores. Digits are not allowed as the first character.',\n        { delayToNextTick: true }\n      );\n      return false;\n    }\n\n    return true;\n  };\n\n  _onDeleteGroup = (\n    groupWithContext: GroupWithContext,\n    done: boolean => void\n  ) => {\n    const { group } = groupWithContext;\n    const {\n      project,\n      eventsFunction,\n      globalObjectsContainer,\n      objectsContainer,\n    } = this.props;\n\n    const answer = Window.showConfirmDialog(\n      'Do you want to remove all references to this group in events (actions and conditions using the group)?'\n    );\n\n    gd.WholeProjectRefactorer.objectOrGroupRemovedInEventsFunction(\n      project,\n      eventsFunction,\n      globalObjectsContainer,\n      objectsContainer,\n      group.getName(),\n      /* isObjectGroup=*/ true,\n      !!answer\n    );\n    done(true);\n  };\n\n  _onRenameGroup = (\n    groupWithContext: GroupWithContext,\n    newName: string,\n    done: boolean => void\n  ) => {\n    const { group } = groupWithContext;\n    const {\n      project,\n      eventsFunction,\n      globalObjectsContainer,\n      objectsContainer,\n    } = this.props;\n\n    // newName is supposed to have been already validated\n\n    // Avoid triggering renaming refactoring if name has not really changed\n    if (group.getName() !== newName) {\n      gd.WholeProjectRefactorer.objectOrGroupRenamedInEventsFunction(\n        project,\n        eventsFunction,\n        globalObjectsContainer,\n        objectsContainer,\n        group.getName(),\n        newName,\n        /* isObjectGroup=*/ true\n      );\n    }\n\n    done(true);\n  };\n\n  _chooseTab = (currentTab: TabNames) =>\n    this.setState({\n      currentTab,\n    });\n\n  render() {\n    const {\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      eventsFunction,\n      eventsBasedBehavior,\n      freezeEventsFunctionType,\n      onConfigurationUpdated,\n      onParametersOrGroupsUpdated,\n      freezeParameters,\n      helpPagePath,\n      renderConfigurationHeader,\n      onMoveFreeEventsParameter,\n      onMoveBehaviorEventsParameter,\n    } = this.props;\n\n    return (\n      <Column expand noMargin useFullHeight>\n        <Tabs value={this.state.currentTab} onChange={this._chooseTab}>\n          <Tab\n            label={<Trans>Configuration</Trans>}\n            value={('config': TabNames)}\n          />\n          <Tab\n            label={<Trans>Parameters</Trans>}\n            value={('parameters': TabNames)}\n          />\n          <Tab\n            label={<Trans>Object groups</Trans>}\n            value={('groups': TabNames)}\n          />\n        </Tabs>\n        {this.state.currentTab === 'config' ? (\n          <ScrollView>\n            <Line>\n              <EventsFunctionPropertiesEditor\n                eventsFunction={eventsFunction}\n                eventsBasedBehavior={eventsBasedBehavior}\n                helpPagePath={helpPagePath}\n                onConfigurationUpdated={onConfigurationUpdated}\n                renderConfigurationHeader={renderConfigurationHeader}\n                freezeEventsFunctionType={freezeEventsFunctionType}\n              />\n            </Line>\n          </ScrollView>\n        ) : null}\n        {this.state.currentTab === 'parameters' ? (\n          <ScrollView>\n            <Line>\n              <EventsFunctionParametersEditor\n                project={project}\n                eventsFunction={eventsFunction}\n                eventsBasedBehavior={eventsBasedBehavior}\n                onParametersUpdated={onParametersOrGroupsUpdated}\n                helpPagePath={helpPagePath}\n                freezeParameters={freezeParameters}\n                onMoveFreeEventsParameter={onMoveFreeEventsParameter}\n                onMoveBehaviorEventsParameter={onMoveBehaviorEventsParameter}\n              />\n            </Line>\n          </ScrollView>\n        ) : null}\n        {this.state.currentTab === 'groups' ? (\n          <ObjectGroupsListWithObjectGroupEditor\n            project={project}\n            globalObjectsContainer={globalObjectsContainer}\n            objectsContainer={objectsContainer}\n            globalObjectGroups={globalObjectsContainer.getObjectGroups()}\n            objectGroups={eventsFunction.getObjectGroups()}\n            canRenameGroup={this._canObjectOrGroupUseNewName}\n            onRenameGroup={this._onRenameGroup}\n            onDeleteGroup={this._onDeleteGroup}\n            onGroupsUpdated={onParametersOrGroupsUpdated}\n            canSetAsGlobalGroup={false}\n            unsavedChanges={this.props.unsavedChanges}\n          />\n        ) : null}\n      </Column>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ObjectGroupsList from '.';\nimport ObjectGroupEditorDialog from '../ObjectGroupEditor/ObjectGroupEditorDialog';\nimport { type GroupWithContext } from '../ObjectsList/EnumerateObjects';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\n\ntype Props = {|\n  project: gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  globalObjectGroups: gdObjectGroupsContainer,\n  objectGroups: gdObjectGroupsContainer,\n  canRenameGroup: (newName: string) => boolean,\n  onDeleteGroup: (\n    groupWithScope: GroupWithContext,\n    done: (boolean) => void\n  ) => void,\n  onRenameGroup: (\n    groupWithScope: GroupWithContext,\n    newName: string,\n    done: (boolean) => void\n  ) => void,\n  onGroupsUpdated?: () => void,\n  canSetAsGlobalGroup?: boolean,\n  unsavedChanges?: ?UnsavedChanges,\n|};\n\ntype State = {|\n  editedGroup: ?gdObjectGroup,\n|};\n\n/**\n * Helper showing the list of groups and embedding the editor to edit a group.\n */\nexport default class ObjectGroupsListWithObjectGroupEditor extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    editedGroup: null,\n  };\n\n  editGroup = (editedGroup: ?gdObjectGroup) => this.setState({ editedGroup });\n\n  render() {\n    const {\n      project,\n      objectsContainer,\n      globalObjectsContainer,\n      objectGroups,\n      globalObjectGroups,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <ObjectGroupsList\n          globalObjectGroups={globalObjectGroups}\n          objectGroups={objectGroups}\n          onEditGroup={this.editGroup}\n          onDeleteGroup={this.props.onDeleteGroup}\n          onRenameGroup={this.props.onRenameGroup}\n          canRenameGroup={this.props.canRenameGroup}\n          onGroupAdded={this.props.onGroupsUpdated}\n          onGroupRemoved={this.props.onGroupsUpdated}\n          onGroupRenamed={this.props.onGroupsUpdated}\n          canSetAsGlobalGroup={this.props.canSetAsGlobalGroup}\n          unsavedChanges={this.props.unsavedChanges}\n        />\n        {this.state.editedGroup && (\n          <ObjectGroupEditorDialog\n            project={project}\n            key={globalObjectsContainer.ptr + ';' + objectsContainer.ptr}\n            group={this.state.editedGroup}\n            globalObjectsContainer={globalObjectsContainer}\n            objectsContainer={objectsContainer}\n            onCancel={() => this.editGroup(null)}\n            onApply={() => {\n              if (this.props.onGroupsUpdated) this.props.onGroupsUpdated();\n              this.editGroup(null);\n            }}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { List, ListItem } from '../UI/List';\nimport ObjectSelector from '../ObjectsList/ObjectSelector';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport { Column } from '../UI/Grid';\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  project: ?gdProject,\n  group: gdObjectGroup,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  onSizeUpdated?: () => void,\n|};\n\ntype State = {|\n  newObjectName: string,\n|};\n\nexport default class ObjectGroupEditor extends React.Component<Props, State> {\n  state = {\n    newObjectName: '',\n  };\n\n  removeObject = (objectName: string) => {\n    const { group, onSizeUpdated } = this.props;\n\n    group.removeObject(objectName);\n\n    this.forceUpdate();\n    if (onSizeUpdated) onSizeUpdated();\n  };\n\n  addObject = (objectName: string) => {\n    const { group, onSizeUpdated } = this.props;\n\n    group.addObject(objectName);\n    this.setState({\n      newObjectName: '',\n    });\n    if (onSizeUpdated) onSizeUpdated();\n  };\n\n  _renderExplanation() {\n    const { group, globalObjectsContainer, objectsContainer } = this.props;\n\n    let type = undefined;\n    group\n      .getAllObjectsNames()\n      .toJSArray()\n      .forEach(objectName => {\n        const objectType = gd.getTypeOfObject(\n          globalObjectsContainer,\n          objectsContainer,\n          objectName,\n          false\n        );\n        if (type === undefined || objectType === type) type = objectType;\n        else type = '';\n      });\n\n    let message = '';\n    if (type === undefined) {\n      message = 'This group is empty';\n    } else if (type === '') {\n      message =\n        \"This group contains objects of different kinds. You'll only be able to use actions and conditions common to all objects with this group.\";\n    } else {\n      message = `This group contains objects of the same kind (${type}). You can use actions and conditions related to this kind of objects in events with this group.`;\n    }\n\n    return <EmptyMessage>{message}</EmptyMessage>;\n  }\n\n  render() {\n    const {\n      project,\n      group,\n      globalObjectsContainer,\n      objectsContainer,\n    } = this.props;\n\n    return (\n      <div>\n        {this._renderExplanation()}\n        <List>\n          {group\n            .getAllObjectsNames()\n            .toJSArray()\n            .map(objectName => {\n              return (\n                <ListItem\n                  key={objectName}\n                  primaryText={objectName}\n                  displayRemoveButton\n                  onRemove={() => this.removeObject(objectName)}\n                />\n              );\n            })}\n        </List>\n        <Column>\n          <ObjectSelector\n            project={project}\n            globalObjectsContainer={globalObjectsContainer}\n            objectsContainer={objectsContainer}\n            value={this.state.newObjectName}\n            onChange={name => this.setState({ newObjectName: name })}\n            onChoose={this.addObject}\n            openOnFocus\n            noGroups\n            hintText={t`Choose an object to add to the group`}\n            fullWidth\n          />\n        </Column>\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport EventsBasedBehaviorEditor from './index';\nimport HelpButton from '../UI/HelpButton';\n\ntype Props = {|\n  onApply: () => void,\n  project: gdProject,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  eventsBasedBehavior: gdEventsBasedBehavior,\n  onRenameProperty: (oldName: string, newName: string) => void,\n|};\n\nexport default class EventsBasedBehaviorEditorDialog extends React.Component<\n  Props,\n  {||}\n> {\n  render() {\n    const {\n      onApply,\n      eventsBasedBehavior,\n      eventsFunctionsExtension,\n      project,\n    } = this.props;\n\n    return (\n      <Dialog\n        noMargin\n        secondaryActions={[\n          <HelpButton\n            key=\"help\"\n            helpPagePath=\"/behaviors/events-based-behaviors\"\n          />,\n        ]}\n        actions={[\n          <FlatButton\n            label={<Trans>Apply</Trans>}\n            primary\n            keyboardFocused\n            onClick={onApply}\n            key={'Apply'}\n          />,\n        ]}\n        cannotBeDismissed={true}\n        open\n        onRequestClose={onApply}\n        title={<Trans>Edit the behavior</Trans>}\n      >\n        <EventsBasedBehaviorEditor\n          project={project}\n          eventsFunctionsExtension={eventsFunctionsExtension}\n          eventsBasedBehavior={eventsBasedBehavior}\n          onTabChanged={\n            () =>\n              this.forceUpdate() /*Force update to ensure dialog is properly positioned*/\n          }\n          onPropertiesUpdated={\n            () =>\n              this.forceUpdate() /*Force update to ensure dialog is properly positioned*/\n          }\n          onRenameProperty={this.props.onRenameProperty}\n        />\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport TextField from '../UI/TextField';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport ObjectTypeSelector from '../ObjectTypeSelector';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport DismissableAlertMessage from '../UI/DismissableAlertMessage';\nimport AlertMessage from '../UI/AlertMessage';\nimport EventsBasedBehaviorPropertiesEditor from './EventsBasedBehaviorPropertiesEditor';\nimport { ColumnStackLayout } from '../UI/Layout';\nconst gd: libGDevelop = global.gd;\n\ntype TabName = 'configuration' | 'properties';\n\ntype Props = {|\n  project: gdProject,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  eventsBasedBehavior: gdEventsBasedBehavior,\n  onPropertiesUpdated: () => void,\n  onRenameProperty: (oldName: string, newName: string) => void,\n  onTabChanged: () => void,\n|};\n\ntype State = {|\n  currentTab: TabName,\n|};\n\nexport default class EventsBasedBehaviorEditor extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    currentTab: 'configuration',\n  };\n\n  // An array containing all the object types that are using the behavior\n  _allObjectTypes: Array<string> = gd.WholeProjectRefactorer.getAllObjectTypesUsingEventsBasedBehavior(\n    this.props.project,\n    this.props.eventsFunctionsExtension,\n    this.props.eventsBasedBehavior\n  )\n    .toNewVectorString()\n    .toJSArray();\n\n  _changeTab = (newTab: TabName) =>\n    this.setState(\n      {\n        currentTab: newTab,\n      },\n      () => this.props.onTabChanged()\n    );\n\n  render() {\n    const { currentTab } = this.state;\n    const { eventsBasedBehavior, project } = this.props;\n\n    return (\n      <React.Fragment>\n        <Tabs value={currentTab} onChange={this._changeTab}>\n          <Tab label={<Trans>Configuration</Trans>} value=\"configuration\" />\n          <Tab label={<Trans>Properties</Trans>} value=\"properties\" />\n        </Tabs>\n        {currentTab === 'configuration' && (\n          <ColumnStackLayout expand>\n            <DismissableAlertMessage\n              identifier=\"events-based-behavior-explanation\"\n              kind=\"info\"\n            >\n              <Trans>\n                This is the configuration of your behavior. Make sure to choose\n                a proper internal name as it's hard to change it later. Enter a\n                description explaining what the behavior is doing to the object.\n              </Trans>\n            </DismissableAlertMessage>\n            <TextField\n              floatingLabelText={<Trans>Internal Name</Trans>}\n              value={eventsBasedBehavior.getName()}\n              disabled\n              fullWidth\n            />\n            <SemiControlledTextField\n              commitOnBlur\n              floatingLabelText={<Trans>Name displayed in editor</Trans>}\n              value={eventsBasedBehavior.getFullName()}\n              onChange={text => {\n                eventsBasedBehavior.setFullName(text);\n                this.forceUpdate();\n              }}\n              fullWidth\n            />\n            <SemiControlledTextField\n              commitOnBlur\n              floatingLabelText={<Trans>Description</Trans>}\n              floatingLabelFixed\n              hintText={t`The description of the behavior should explain what the behavior is doing to the object, and, briefly, how to use it.`}\n              value={eventsBasedBehavior.getDescription()}\n              onChange={text => {\n                eventsBasedBehavior.setDescription(text);\n                this.forceUpdate();\n              }}\n              multiline\n              fullWidth\n              rows={3}\n            />\n            <ObjectTypeSelector\n              floatingLabelText={\n                <Trans>Object on which this behavior can be used</Trans>\n              }\n              project={project}\n              value={eventsBasedBehavior.getObjectType()}\n              onChange={(objectType: string) => {\n                eventsBasedBehavior.setObjectType(objectType);\n                this.forceUpdate();\n              }}\n              allowedObjectTypes={\n                this._allObjectTypes.length === 0\n                  ? undefined /* Allow anything as the behavior is not used */\n                  : this._allObjectTypes.length === 1\n                  ? [\n                      '',\n                      this._allObjectTypes[0],\n                    ] /* Allow only the type of the objects using the behavior */\n                  : [\n                      '',\n                    ] /* More than one type of object are using the behavior. Only \"any object\" can be used on this behavior */\n              }\n            />\n            {this._allObjectTypes.length > 1 && (\n              <AlertMessage kind=\"info\">\n                <Trans>\n                  This behavior is being used by multiple types of objects.\n                  Thus, you can't restrict its usage to any particular object\n                  type. All the object types using this behavior are listed\n                  here:\n                  {this._allObjectTypes.join(', ')}\n                </Trans>\n              </AlertMessage>\n            )}\n            {eventsBasedBehavior\n              .getEventsFunctions()\n              .getEventsFunctionsCount() === 0 && (\n              <DismissableAlertMessage\n                identifier=\"empty-events-based-behavior-explanation\"\n                kind=\"info\"\n              >\n                <Trans>\n                  Once you're done, close this dialog and start adding some\n                  functions to the behavior. Then, test the behavior by adding\n                  it to an object in a scene.\n                </Trans>\n              </DismissableAlertMessage>\n            )}\n          </ColumnStackLayout>\n        )}\n        {currentTab === 'properties' && (\n          <EventsBasedBehaviorPropertiesEditor\n            project={project}\n            eventsBasedBehavior={eventsBasedBehavior}\n            onPropertiesUpdated={this.props.onPropertiesUpdated}\n            onRenameProperty={this.props.onRenameProperty}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\n\nexport default function useForceUpdate() {\n  const [, updateState] = React.useState();\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n\n  return forceUpdate;\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport { Column, Line } from '../UI/Grid';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport { mapVector } from '../Utils/MapFor';\nimport RaisedButton from '../UI/RaisedButton';\nimport IconButton from '../UI/IconButton';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport ElementWithMenu from '../UI/Menu/ElementWithMenu';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport MiniToolbar from '../UI/MiniToolbar';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport InlineCheckbox from '../UI/InlineCheckbox';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Add from '@material-ui/icons/Add';\nimport { ResponsiveLineStackLayout, ColumnStackLayout } from '../UI/Layout';\n\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  eventsBasedBehavior: gdEventsBasedBehavior,\n  onPropertiesUpdated: () => void,\n  onRenameProperty: (oldName: string, newName: string) => void,\n|};\n\nconst styles = {\n  propertiesContainer: {\n    flex: 1,\n  },\n};\n\nconst validatePropertyName = (\n  i18n: I18nType,\n  properties: gdNamedPropertyDescriptorsList,\n  newName: string\n) => {\n  if (!newName) {\n    showWarningBox(i18n._(t`The name of a property cannot be empty.`), {\n      delayToNextTick: true,\n    });\n    return false;\n  }\n  if (newName === 'name' || newName === 'type') {\n    showWarningBox(\n      i18n._(\n        t`The name of a property cannot be \"name\" or \"type\", as they are used by GDevelop internally.`\n      ),\n      { delayToNextTick: true }\n    );\n    return false;\n  }\n  if (properties.has(newName)) {\n    showWarningBox(\n      i18n._(\n        t`This name is already used by another property. Choose a unique name for each property.`\n      ),\n      { delayToNextTick: true }\n    );\n    return false;\n  }\n  if (!gd.Project.validateName(newName)) {\n    showWarningBox(\n      i18n._(\n        t`This name is invalid. Only use alphanumeric characters (0-9, a-z) and underscores. Digits are not allowed as the first character.`\n      ),\n      { delayToNextTick: true }\n    );\n    return false;\n  }\n\n  return true;\n};\n\nexport default class EventsBasedBehaviorPropertiesEditor extends React.Component<\n  Props,\n  {||}\n> {\n  _addProperty = () => {\n    const { eventsBasedBehavior } = this.props;\n    const properties = eventsBasedBehavior.getPropertyDescriptors();\n\n    const newName = newNameGenerator('Property', name => properties.has(name));\n    const property = properties.insertNew(newName, properties.getCount());\n    property.setType('Number');\n    this.forceUpdate();\n    this.props.onPropertiesUpdated();\n  };\n\n  _removeProperty = (name: string) => {\n    const { eventsBasedBehavior } = this.props;\n    const properties = eventsBasedBehavior.getPropertyDescriptors();\n\n    properties.remove(name);\n    this.forceUpdate();\n    this.props.onPropertiesUpdated();\n  };\n\n  _moveProperty = (oldIndex: number, newIndex: number) => {\n    const { eventsBasedBehavior } = this.props;\n    const properties = eventsBasedBehavior.getPropertyDescriptors();\n\n    properties.move(oldIndex, newIndex);\n    this.forceUpdate();\n    this.props.onPropertiesUpdated();\n  };\n\n  render() {\n    const { eventsBasedBehavior } = this.props;\n\n    const properties = eventsBasedBehavior.getPropertyDescriptors();\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Column noMargin>\n            <Line noMargin>\n              <div style={styles.propertiesContainer}>\n                {mapVector(\n                  properties,\n                  (property: gdNamedPropertyDescriptor, i: number) => (\n                    <React.Fragment key={i}>\n                      <MiniToolbar>\n                        <Column expand noMargin>\n                          <SemiControlledTextField\n                            margin=\"none\"\n                            commitOnBlur\n                            hintText={t`Enter the property name`}\n                            value={property.getName()}\n                            onChange={newName => {\n                              if (newName === property.getName()) return;\n                              if (\n                                !validatePropertyName(i18n, properties, newName)\n                              )\n                                return;\n\n                              this.props.onRenameProperty(\n                                property.getName(),\n                                newName\n                              );\n\n                              property.setName(newName);\n                              this.forceUpdate();\n                              this.props.onPropertiesUpdated();\n                            }}\n                            fullWidth\n                          />\n                        </Column>\n                        <InlineCheckbox\n                          label={\n                            property.isHidden() ? (\n                              <Trans>Hidden</Trans>\n                            ) : (\n                              <Trans>Visible in editor</Trans>\n                            )\n                          }\n                          checked={!property.isHidden()}\n                          onCheck={(e, checked) => {\n                            property.setHidden(!checked);\n                            this.forceUpdate();\n                            this.props.onPropertiesUpdated();\n                          }}\n                          checkedIcon={<Visibility />}\n                          uncheckedIcon={<VisibilityOff />}\n                        />\n                        <ElementWithMenu\n                          element={\n                            <IconButton>\n                              <MoreVert />\n                            </IconButton>\n                          }\n                          buildMenuTemplate={(i18n: I18nType) => [\n                            {\n                              label: i18n._(t`Delete`),\n                              click: () =>\n                                this._removeProperty(property.getName()),\n                            },\n                            { type: 'separator' },\n                            {\n                              label: i18n._(t`Move up`),\n                              click: () => this._moveProperty(i, i - 1),\n                              enabled: i - 1 >= 0,\n                            },\n                            {\n                              label: i18n._(t`Move down`),\n                              click: () => this._moveProperty(i, i + 1),\n                              enabled: i + 1 < properties.getCount(),\n                            },\n                          ]}\n                        />\n                      </MiniToolbar>\n                      <Line>\n                        <ColumnStackLayout expand>\n                          <ResponsiveLineStackLayout noMargin>\n                            <SelectField\n                              floatingLabelText={<Trans>Type</Trans>}\n                              value={property.getType()}\n                              onChange={(e, i, value: string) => {\n                                property.setType(value);\n                                this.forceUpdate();\n                                this.props.onPropertiesUpdated();\n                              }}\n                              fullWidth\n                            >\n                              <SelectOption\n                                value=\"Number\"\n                                primaryText={t`Number`}\n                              />\n                              <SelectOption\n                                value=\"String\"\n                                primaryText={t`String`}\n                              />\n                              <SelectOption\n                                value=\"Boolean\"\n                                primaryText={t`Boolean (checkbox)`}\n                              />\n                            </SelectField>\n                            {(property.getType() === 'String' ||\n                              property.getType() === 'Number') && (\n                              <SemiControlledTextField\n                                commitOnBlur\n                                floatingLabelText={<Trans>Default value</Trans>}\n                                hintText={\n                                  property.getType() === 'Number'\n                                    ? '123'\n                                    : 'ABC'\n                                }\n                                value={property.getValue()}\n                                onChange={newValue => {\n                                  property.setValue(newValue);\n                                  this.forceUpdate();\n                                  this.props.onPropertiesUpdated();\n                                }}\n                                fullWidth\n                              />\n                            )}\n                            {property.getType() === 'Boolean' && (\n                              <SelectField\n                                floatingLabelText={<Trans>Default value</Trans>}\n                                value={\n                                  property.getValue() === 'true'\n                                    ? 'true'\n                                    : 'false'\n                                }\n                                onChange={(e, i, value) => {\n                                  property.setValue(value);\n                                  this.forceUpdate();\n                                  this.props.onPropertiesUpdated();\n                                }}\n                                fullWidth\n                              >\n                                <SelectOption\n                                  value=\"true\"\n                                  primaryText={t`True (checked)`}\n                                />\n                                <SelectOption\n                                  value=\"false\"\n                                  primaryText={t`False (not checked)`}\n                                />\n                              </SelectField>\n                            )}\n                          </ResponsiveLineStackLayout>\n                          <SemiControlledTextField\n                            commitOnBlur\n                            floatingLabelText={\n                              <Trans>Label, shown in the editor</Trans>\n                            }\n                            hintText={t`This should make the purpose of the property easy to understand`}\n                            floatingLabelFixed\n                            value={property.getLabel()}\n                            onChange={text => {\n                              property.setLabel(text);\n                              this.forceUpdate();\n                            }}\n                            fullWidth\n                          />\n                        </ColumnStackLayout>\n                      </Line>\n                    </React.Fragment>\n                  )\n                )}\n                {properties.getCount() === 0 ? (\n                  <EmptyMessage>\n                    <Trans>\n                      No properties for this behavior. Add one to store data\n                      inside this behavior (for example: health, ammo, speed,\n                      etc...)\n                    </Trans>\n                  </EmptyMessage>\n                ) : null}\n                <Column>\n                  <Line justifyContent=\"flex-end\" expand>\n                    <RaisedButton\n                      primary\n                      label={<Trans>Add a property</Trans>}\n                      onClick={this._addProperty}\n                      icon={<Add />}\n                    />\n                  </Line>\n                </Column>\n              </div>\n            </Line>\n          </Column>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { type EventsFunctionCreationParameters } from '../EventsFunctionsList';\nimport FlatButton from '../UI/FlatButton';\nimport Subheader from '../UI/Subheader';\nimport { List, ListItem } from '../UI/List';\nimport Dialog from '../UI/Dialog';\nimport HelpButton from '../UI/HelpButton';\nimport Create from '../UI/CustomSvgIcons/Behaviors/Create';\nimport Step from '../UI/CustomSvgIcons/Behaviors/Step';\nimport Destroy from '../UI/CustomSvgIcons/Behaviors/Destroy';\nimport Function from '../UI/CustomSvgIcons/Behaviors/Function';\nimport Activate from '../UI/CustomSvgIcons/Behaviors/Activate';\nimport Deactivate from '../UI/CustomSvgIcons/Behaviors/Deactivate';\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  eventsBasedBehavior: gdEventsBasedBehavior,\n  onCancel: () => void,\n  onChoose: (parameters: EventsFunctionCreationParameters) => void,\n|};\ntype State = {||};\n\nconst styles = {\n  icon: { width: 40, height: 40 },\n  disabledItem: { opacity: 0.6 },\n};\n\nconst MethodListItem = ({\n  icon,\n  disabled,\n  onChoose,\n  name,\n  description,\n}: {|\n  icon: React.Node,\n  disabled: boolean,\n  onChoose: EventsFunctionCreationParameters => void,\n  name: string,\n  description: React.Node,\n|}) => {\n  return (\n    <ListItem\n      leftIcon={icon}\n      primaryText={name}\n      secondaryText={description}\n      secondaryTextLines={2}\n      onClick={() =>\n        onChoose({\n          functionType: gd.EventsFunction.Action,\n          name,\n        })\n      }\n      style={disabled ? styles.disabledItem : undefined}\n      disabled={disabled}\n    />\n  );\n};\n\nexport default class BehaviorMethodSelectorDialog extends React.Component<\n  Props,\n  State\n> {\n  render() {\n    const actions = [\n      <FlatButton\n        label={<Trans>Cancel</Trans>}\n        keyboardFocused={true}\n        onClick={() => this.props.onCancel()}\n        key={'close'}\n      />,\n    ];\n\n    const { eventsBasedBehavior, onChoose } = this.props;\n    const eventsFunctions = eventsBasedBehavior.getEventsFunctions();\n\n    return (\n      <Dialog\n        secondaryActions={[\n          <HelpButton\n            key=\"help\"\n            helpPagePath=\"/behaviors/events-based-behaviors\"\n          />,\n        ]}\n        actions={actions}\n        cannotBeDismissed={false}\n        open\n        noMargin\n        title={<Trans>Choose a new behavior function (\"method\")</Trans>}\n        onRequestClose={this.props.onCancel}\n      >\n        <List>\n          <Subheader>\n            <Trans>Main lifecycle methods</Trans>\n          </Subheader>\n          <MethodListItem\n            icon={<Create style={styles.icon} />}\n            name={'onCreated'}\n            disabled={eventsFunctions.hasEventsFunctionNamed('onCreated')}\n            onChoose={onChoose}\n            description={\n              <Trans>\n                Events that will be run once, when an object is created with\n                this behavior being attached to it.\n              </Trans>\n            }\n          />\n          <MethodListItem\n            icon={<Step style={styles.icon} />}\n            name={'doStepPreEvents'}\n            disabled={eventsFunctions.hasEventsFunctionNamed('doStepPreEvents')}\n            onChoose={onChoose}\n            description={\n              <Trans>\n                Events that will be run at every frame (roughly 60 times per\n                second), for every object that has the behavior attached, before\n                the events from the events sheet are launched.\n              </Trans>\n            }\n          />\n          <MethodListItem\n            icon={<Destroy style={styles.icon} />}\n            name={'onDestroy'}\n            disabled={\n              eventsFunctions.hasEventsFunctionNamed(\n                'onOwnerRemovedFromScene'\n              ) || eventsFunctions.hasEventsFunctionNamed('onDestroy')\n            }\n            onChoose={onChoose}\n            description={\n              <Trans>\n                Events that will be run once, after the object is removed from\n                the scene and before it is entirely removed from memory.\n              </Trans>\n            }\n          />\n          <Subheader>\n            <Trans>Other lifecycle methods</Trans>\n          </Subheader>\n          <MethodListItem\n            icon={<Deactivate style={styles.icon} />}\n            name={'onDeActivate'}\n            disabled={eventsFunctions.hasEventsFunctionNamed('onDeActivate')}\n            onChoose={onChoose}\n            description={\n              <Trans>\n                Events that will be run once when the behavior is deactivated on\n                an object (step events won't be run until the behavior is\n                activated again).\n              </Trans>\n            }\n          />\n          <MethodListItem\n            icon={<Activate style={styles.icon} />}\n            name={'onActivate'}\n            disabled={eventsFunctions.hasEventsFunctionNamed('onActivate')}\n            onChoose={onChoose}\n            description={\n              <Trans>\n                Events that will be run once when the behavior is re-activated\n                on an object (after it was previously deactivated).\n              </Trans>\n            }\n          />\n          <MethodListItem\n            icon={<Step style={styles.icon} />}\n            name={'doStepPostEvents'}\n            disabled={eventsFunctions.hasEventsFunctionNamed(\n              'doStepPostEvents'\n            )}\n            onChoose={onChoose}\n            description={\n              <Trans>\n                Events that will be run at every frame (roughly 60 times per\n                second), for every object that has the behavior attached, after\n                the events from the events sheet.\n              </Trans>\n            }\n          />\n          <Subheader>\n            <Trans>Custom</Trans>\n          </Subheader>\n          <ListItem\n            leftIcon={<Function style={styles.icon} />}\n            primaryText={\n              <Trans>Custom (action, condition or expression)</Trans>\n            }\n            secondaryText={\n              <Trans>\n                An action, condition or expression that can be used on objects\n                that have the behavior attached to them. Use it from the events\n                sheet as any other action/condition/expression.\n              </Trans>\n            }\n            secondaryTextLines={2}\n            onClick={() =>\n              onChoose({\n                functionType: gd.EventsFunction.Action,\n                name: null,\n              })\n            }\n          />\n        </List>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { type EventsFunctionCreationParameters } from '../EventsFunctionsList';\nimport FlatButton from '../UI/FlatButton';\nimport Subheader from '../UI/Subheader';\nimport { List, ListItem } from '../UI/List';\nimport Dialog from '../UI/Dialog';\nimport HelpButton from '../UI/HelpButton';\nimport Create from '../UI/CustomSvgIcons/Behaviors/Create';\nimport Step from '../UI/CustomSvgIcons/Behaviors/Step';\nimport Destroy from '../UI/CustomSvgIcons/Behaviors/Destroy';\nimport Function from '../UI/CustomSvgIcons/Behaviors/Function';\nimport Activate from '../UI/CustomSvgIcons/Behaviors/Activate';\nimport Deactivate from '../UI/CustomSvgIcons/Behaviors/Deactivate';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { Line } from '../UI/Grid';\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  onCancel: () => void,\n  onChoose: (parameters: EventsFunctionCreationParameters) => void,\n|};\n\nconst styles = {\n  icon: { width: 40, height: 40 },\n  disabledItem: { opacity: 0.6 },\n};\n\nconst FunctionListItem = ({\n  icon,\n  disabled,\n  onChoose,\n  name,\n  description,\n}: {|\n  icon: React.Node,\n  disabled?: boolean,\n  onChoose: () => void,\n  name: React.Node,\n  description: React.Node,\n|}) => {\n  return (\n    <ListItem\n      leftIcon={icon}\n      primaryText={name}\n      secondaryText={description}\n      secondaryTextLines={2}\n      onClick={onChoose}\n      style={disabled ? styles.disabledItem : undefined}\n      disabled={disabled}\n    />\n  );\n};\n\nexport default function BehaviorMethodSelectorDialog({\n  eventsFunctionsExtension,\n  onChoose,\n  onCancel,\n}: Props) {\n  const [showAdvanced, setShowAdvanced] = React.useState(false);\n\n  return (\n    <Dialog\n      secondaryActions={[\n        <HelpButton key=\"help\" helpPagePath=\"/events/functions\" />,\n      ]}\n      actions={[\n        <FlatButton\n          label={<Trans>Cancel</Trans>}\n          keyboardFocused={true}\n          onClick={onCancel}\n          key={'close'}\n        />,\n      ]}\n      cannotBeDismissed={false}\n      open\n      noMargin\n      title={<Trans>Choose a new extension function</Trans>}\n      onRequestClose={onCancel}\n    >\n      <List>\n        <FunctionListItem\n          icon={<Function style={styles.icon} />}\n          name={<Trans>Action</Trans>}\n          onChoose={() =>\n            onChoose({\n              functionType: gd.EventsFunction.Action,\n              name: null,\n            })\n          }\n          description={\n            <Trans>\n              An action that can be used in other events sheet. You can define\n              the action parameters: objects, texts, numbers, layers, etc...\n            </Trans>\n          }\n        />\n        <FunctionListItem\n          icon={<Function style={styles.icon} />}\n          name={<Trans>Condition</Trans>}\n          onChoose={() =>\n            onChoose({\n              functionType: gd.EventsFunction.Condition,\n              name: null,\n            })\n          }\n          description={\n            <Trans>\n              A condition that can be used in other events sheet. You can define\n              the conditions parameters: objects, texts, numbers, layers, etc...\n            </Trans>\n          }\n        />\n        <FunctionListItem\n          icon={<Function style={styles.icon} />}\n          name={<Trans>Expression</Trans>}\n          onChoose={() =>\n            onChoose({\n              functionType: gd.EventsFunction.Expression,\n              name: null,\n            })\n          }\n          description={\n            <Trans>\n              An expression that can be used in formulas. Can either return a\n              number or a string, and take some parameters.\n            </Trans>\n          }\n        />\n        {showAdvanced && (\n          <React.Fragment>\n            <Subheader>\n              <Trans>Lifecycle functions (advanced)</Trans>\n            </Subheader>\n            <FunctionListItem\n              icon={<Create style={styles.icon} />}\n              name={'onFirstSceneLoaded'}\n              disabled={eventsFunctionsExtension.hasEventsFunctionNamed(\n                'onFirstSceneLoaded'\n              )}\n              onChoose={() =>\n                onChoose({\n                  functionType: gd.EventsFunction.Action,\n                  name: 'onFirstSceneLoaded',\n                })\n              }\n              description={\n                <Trans>\n                  Events that will be run once when the first scene of the game\n                  is loaded, before any other events.\n                </Trans>\n              }\n            />\n            <FunctionListItem\n              icon={<Create style={styles.icon} />}\n              name={'onSceneLoaded'}\n              disabled={eventsFunctionsExtension.hasEventsFunctionNamed(\n                'onSceneLoaded'\n              )}\n              onChoose={() =>\n                onChoose({\n                  functionType: gd.EventsFunction.Action,\n                  name: 'onSceneLoaded',\n                })\n              }\n              description={\n                <Trans>\n                  Events that will be run once when a scene of the game is\n                  loaded, before the scene events.\n                </Trans>\n              }\n            />\n            <FunctionListItem\n              icon={<Step style={styles.icon} />}\n              name={'onScenePreEvents'}\n              disabled={eventsFunctionsExtension.hasEventsFunctionNamed(\n                'onScenePreEvents'\n              )}\n              onChoose={() =>\n                onChoose({\n                  functionType: gd.EventsFunction.Action,\n                  name: 'onScenePreEvents',\n                })\n              }\n              description={\n                <Trans>\n                  Events that will be run at every frame (roughly 60 times per\n                  second), before the events from the events sheet of the scene.\n                </Trans>\n              }\n            />\n            <FunctionListItem\n              icon={<Step style={styles.icon} />}\n              name={'onScenePostEvents'}\n              disabled={eventsFunctionsExtension.hasEventsFunctionNamed(\n                'onScenePostEvents'\n              )}\n              onChoose={() =>\n                onChoose({\n                  functionType: gd.EventsFunction.Action,\n                  name: 'onScenePostEvents',\n                })\n              }\n              description={\n                <Trans>\n                  Events that will be run at every frame (roughly 60 times per\n                  second), after the events from the events sheet of the scene.\n                </Trans>\n              }\n            />\n            <FunctionListItem\n              icon={<Deactivate style={styles.icon} />}\n              name={'onScenePaused'}\n              disabled={eventsFunctionsExtension.hasEventsFunctionNamed(\n                'onScenePaused'\n              )}\n              onChoose={() =>\n                onChoose({\n                  functionType: gd.EventsFunction.Action,\n                  name: 'onScenePaused',\n                })\n              }\n              description={\n                <Trans>\n                  Events that will be run once when a scene is paused (another\n                  scene is run on top of it).\n                </Trans>\n              }\n            />\n            <FunctionListItem\n              icon={<Activate style={styles.icon} />}\n              name={'onSceneResumed'}\n              disabled={eventsFunctionsExtension.hasEventsFunctionNamed(\n                'onSceneResumed'\n              )}\n              onChoose={() =>\n                onChoose({\n                  functionType: gd.EventsFunction.Action,\n                  name: 'onSceneResumed',\n                })\n              }\n              description={\n                <Trans>\n                  Events that will be run once when a scene is resumed (after it\n                  was previously paused).\n                </Trans>\n              }\n            />\n            <FunctionListItem\n              icon={<Destroy style={styles.icon} />}\n              name={'onSceneUnloading'}\n              disabled={eventsFunctionsExtension.hasEventsFunctionNamed(\n                'onSceneUnloading'\n              )}\n              onChoose={() =>\n                onChoose({\n                  functionType: gd.EventsFunction.Action,\n                  name: 'onSceneUnloading',\n                })\n              }\n              description={\n                <Trans>\n                  Events that will be run once when a scene is about to be\n                  unloaded from memory. The previous scene that was paused will\n                  be resumed after this.\n                </Trans>\n              }\n            />\n          </React.Fragment>\n        )}\n      </List>\n      <Line justifyContent=\"center\" alignItems=\"center\">\n        {!showAdvanced ? (\n          <FlatButton\n            icon={<Visibility />}\n            primary={false}\n            onClick={() => setShowAdvanced(true)}\n            label={<Trans>Show lifecycle functions (advanced)</Trans>}\n          />\n        ) : (\n          <FlatButton\n            icon={<VisibilityOff />}\n            primary={false}\n            onClick={() => setShowAdvanced(false)}\n            label={<Trans>Hide lifecycle functions (advanced)</Trans>}\n          />\n        )}\n      </Line>\n    </Dialog>\n  );\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { type Editor } from '.';\nimport { Column, Line } from '../Grid';\nimport FlatButton from '../FlatButton';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport Background from '../Background';\n\ntype Props = {|\n  initialEditorName: string,\n  editors: {\n    [string]: Editor,\n  },\n  transitions: {\n    [string]: {|\n      nextEditor?: string | (() => string),\n      nextLabel?: React.Node,\n      nextIcon?: React.Node,\n      previousEditor?: string | (() => string),\n    |},\n  },\n  onEditorChanged: (editorName: string) => void,\n|};\n\nexport type EditorNavigatorInterface = {|\n  openEditor: (editorName: string) => void,\n|};\n\n// Flow types might have to be changed/removed if upgrading Flow\n// (see example at https://github.com/wgao19/flow-notes/blob/master/react/react-memo.md)\n\nexport default React.forwardRef<Props, EditorNavigatorInterface>(\n  (\n    { initialEditorName, editors, transitions, onEditorChanged }: Props,\n    ref\n  ) => {\n    const [currentEditorName, setCurrentEditorName] = React.useState(\n      initialEditorName\n    );\n    React.useImperativeHandle(ref, () => ({\n      openEditor: editorName => {\n        setCurrentEditorName(editorName);\n      },\n    }));\n    React.useEffect(\n      () => {\n        onEditorChanged(currentEditorName);\n      },\n      [currentEditorName, onEditorChanged]\n    );\n\n    const transition = transitions[currentEditorName];\n    let buttonLineJustifyContent = 'space-between';\n    if (transition) {\n      if (transition.previousEditor && !transition.nextEditor) {\n        buttonLineJustifyContent = 'flex-start';\n      }\n      if (!transition.previousEditor && transition.nextEditor) {\n        buttonLineJustifyContent = 'flex-end';\n      }\n    }\n\n    return (\n      <Column noMargin expand>\n        {transition && (\n          <Background maxWidth noExpand noFullHeight>\n            <Column>\n              <Line justifyContent={buttonLineJustifyContent}>\n                {transition.previousEditor && (\n                  <FlatButton\n                    label={<Trans>Back</Trans>}\n                    onClick={() => {\n                      if (transition.previousEditor)\n                        setCurrentEditorName(transition.previousEditor);\n                    }}\n                    icon={<ArrowBack />}\n                  />\n                )}\n                {transition.nextLabel && transition.nextEditor && (\n                  <FlatButton\n                    label={transition.nextLabel}\n                    onClick={() => {\n                      if (transition.nextEditor)\n                        setCurrentEditorName(transition.nextEditor);\n                    }}\n                    icon={transition.nextIcon}\n                  />\n                )}\n              </Line>\n            </Column>\n          </Background>\n        )}\n        {editors[currentEditorName]\n          ? editors[currentEditorName].renderEditor()\n          : null}\n      </Column>\n    );\n  }\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport * as React from 'react';\nimport Background from '../UI/Background';\nimport { Column, Spacer } from '../UI/Grid';\nimport Text from '../UI/Text';\nimport RaisedButton from '../UI/RaisedButton';\nimport FlatButton from '../UI/FlatButton';\n\ntype Props = {|\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  onEditFreeFunctions: () => void,\n  onEditBehaviors: () => void,\n  onEditExtensionOptions: () => void,\n|};\n\nexport default (props: Props) => {\n  const eventsFunctionsCount = props.eventsFunctionsExtension.getEventsFunctionsCount();\n  const eventsBasedBehaviorsCount = props.eventsFunctionsExtension\n    .getEventsBasedBehaviors()\n    .getCount();\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Background>\n          <Column>\n            <Text>\n              <Trans>\n                Extensions can provide functions (which can be actions,\n                conditions or expressions) or new behaviors.\n              </Trans>\n            </Text>\n            <RaisedButton\n              label={i18n._(\n                t`Edit functions (not attached to behaviors) (${eventsFunctionsCount})`\n              )}\n              onClick={props.onEditFreeFunctions}\n              primary\n            />\n            <Spacer />\n            <RaisedButton\n              label={i18n._(t`Edit behaviors (${eventsBasedBehaviorsCount})`)}\n              onClick={props.onEditBehaviors}\n              primary\n            />\n            <Spacer />\n            <FlatButton\n              label={<Trans>Edit extension options</Trans>}\n              onClick={props.onEditExtensionOptions}\n            />\n          </Column>\n        </Background>\n      )}\n    </I18n>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport PreferencesContext, {\n  type AlertMessageIdentifier,\n} from '../MainFrame/Preferences/PreferencesContext';\nimport AlertMessage from './AlertMessage';\nimport Window from '../Utils/Window';\n\ntype Props = {|\n  kind: 'info' | 'warning',\n  children: React.Node,\n  identifier: AlertMessageIdentifier,\n|};\n\n/**\n * Show an alert that can be permanently hidden. Hidden messages\n * will be stored in preferences.\n */\nconst DismissableAlertMessage = ({ identifier, kind, children }: Props) => (\n  <PreferencesContext.Consumer>\n    {({ values, showAlertMessage }) =>\n      !values.hiddenAlertMessages[identifier] && (\n        <AlertMessage\n          kind={kind}\n          children={children}\n          onHide={() => {\n            const answer = Window.showConfirmDialog(\n              \"Are you sure you want to hide this hint? You won't see it again, unless you re-activate it from the preferences.\"\n            );\n\n            if (!answer) return;\n\n            showAlertMessage(identifier, false);\n          }}\n        />\n      )\n    }\n  </PreferencesContext.Consumer>\n);\n\nexport default DismissableAlertMessage;\n","import gesture from 'pixi-simple-gesture';\nimport ObjectsRenderingService from '../../ObjectsRendering/ObjectsRenderingService';\nimport getObjectByName from '../../Utils/GetObjectByName';\n\nimport * as PIXI from 'pixi.js-legacy';\nimport { shouldBeHandledByPinch } from '../PinchHandler';\nimport { makeDoubleClickable } from './PixiDoubleClickEvent';\nconst gd /* TODO: add flow in this file */ = global.gd;\n\nexport default class LayerRenderer {\n  constructor({\n    project,\n    layout,\n    layer,\n    viewPosition,\n    instances,\n    onInstanceClicked,\n    onInstanceDoubleClicked,\n    onOverInstance,\n    onOutInstance,\n    onMoveInstance,\n    onMoveInstanceEnd,\n    onDownInstance,\n  }) {\n    this.project = project;\n    this.instances = instances;\n    this.layout = layout;\n    this.layer = layer; // /!\\ Don't store any other reference.\n    // `layer` can be changed at any moment (see InstancesRenderer).\n    this.viewPosition = viewPosition;\n    this.onInstanceClicked = onInstanceClicked;\n    this.onInstanceDoubleClicked = onInstanceDoubleClicked;\n    this.onOverInstance = onOverInstance;\n    this.onOutInstance = onOutInstance;\n    this.onMoveInstance = onMoveInstance;\n    this.onMoveInstanceEnd = onMoveInstanceEnd;\n    this.onDownInstance = onDownInstance;\n\n    this.viewTopLeft = [0, 0]; // Used for instances culling on rendering\n    this.viewBottomRight = [0, 0]; // Used for instances culling on rendering\n\n    this.renderedInstances = {};\n    this.pixiContainer = new PIXI.Container();\n\n    // Functor used to render an instance\n    this.instancesRenderer = new gd.InitialInstanceJSFunctor();\n    this.instancesRenderer.invoke = instancePtr => {\n      const instance = gd.wrapPointer(instancePtr, gd.InitialInstance);\n\n      //Get the \"RendereredInstance\" object associated to the instance and tell it to update.\n      var renderedInstance = this.getRendererOfInstance(instance);\n      if (!renderedInstance) return;\n\n      const pixiObject = renderedInstance.getPixiObject();\n      if (pixiObject) pixiObject.zOrder = instance.getZOrder();\n      if (pixiObject) pixiObject.interactive = !instance.isLocked();\n\n      // \"Culling\" improves rendering performance of large levels\n      const isVisible = this._isInstanceVisible(instance);\n      if (pixiObject) pixiObject.visible = isVisible;\n      if (isVisible) renderedInstance.update();\n\n      renderedInstance.wasUsed = true;\n    };\n  }\n\n  getPixiContainer() {\n    return this.pixiContainer;\n  }\n\n  getInstanceLeft = instance => {\n    return (\n      instance.getX() -\n      (this.renderedInstances[instance.ptr]\n        ? this.renderedInstances[instance.ptr].getOriginX()\n        : 0)\n    );\n  };\n\n  getInstanceTop = instance => {\n    return (\n      instance.getY() -\n      (this.renderedInstances[instance.ptr]\n        ? this.renderedInstances[instance.ptr].getOriginY()\n        : 0)\n    );\n  };\n\n  getInstanceWidth = instance => {\n    if (instance.hasCustomSize()) return instance.getCustomWidth();\n\n    return this.renderedInstances[instance.ptr]\n      ? this.renderedInstances[instance.ptr].getDefaultWidth()\n      : 0;\n  };\n\n  getInstanceHeight = instance => {\n    if (instance.hasCustomSize()) return instance.getCustomHeight();\n\n    return this.renderedInstances[instance.ptr]\n      ? this.renderedInstances[instance.ptr].getDefaultHeight()\n      : 0;\n  };\n\n  getRendererOfInstance = instance => {\n    var renderedInstance = this.renderedInstances[instance.ptr];\n    if (renderedInstance === undefined) {\n      //No renderer associated yet, the instance must have been just created!...\n      const associatedObjectName = instance.getObjectName();\n      const associatedObject = getObjectByName(\n        this.project,\n        this.layout,\n        associatedObjectName\n      );\n      if (!associatedObject) return;\n\n      //...so let's create a renderer.\n      renderedInstance = this.renderedInstances[\n        instance.ptr\n      ] = ObjectsRenderingService.createNewInstanceRenderer(\n        this.project,\n        this.layout,\n        instance,\n        associatedObject,\n        this.pixiContainer\n      );\n\n      renderedInstance._pixiObject.interactive = true;\n      gesture.panable(renderedInstance._pixiObject);\n      makeDoubleClickable(renderedInstance._pixiObject);\n      renderedInstance._pixiObject.on('click', () => {\n        this.onInstanceClicked(instance);\n      });\n      renderedInstance._pixiObject.on('doubleclick', () => {\n        this.onInstanceDoubleClicked(instance);\n      });\n      renderedInstance._pixiObject.on('mouseover', () => {\n        this.onOverInstance(instance);\n      });\n      renderedInstance._pixiObject.on('mousedown', () => {\n        this.onDownInstance(instance);\n      });\n      renderedInstance._pixiObject.on('touchstart', event => {\n        if (shouldBeHandledByPinch(event.data && event.data.originalEvent)) {\n          return;\n        }\n\n        this.onDownInstance(instance);\n      });\n      renderedInstance._pixiObject.on('mouseout', () => {\n        this.onOutInstance(instance);\n      });\n      renderedInstance._pixiObject.on('panmove', event => {\n        if (shouldBeHandledByPinch(event.data && event.data.originalEvent)) {\n          return;\n        }\n\n        this.onMoveInstance(instance, event.deltaX, event.deltaY);\n      });\n      renderedInstance._pixiObject.on('panend', event => {\n        this.onMoveInstanceEnd();\n      });\n    }\n\n    return renderedInstance;\n  };\n\n  /**\n   * This returns true if an instance is visible according to the viewPosition.\n   * The approach is a naive bounding box testing but save rendering time on large\n   * levels.\n   * @param {*} instance\n   */\n  _isInstanceVisible(instance) {\n    //TODO: Properly handle rotation\n    const left = this.getInstanceLeft(instance);\n    const top = this.getInstanceTop(instance);\n    if (\n      left + this.getInstanceWidth(instance) < this.viewTopLeft[0] ||\n      top + this.getInstanceHeight(instance) < this.viewTopLeft[1] ||\n      left > this.viewBottomRight[0] ||\n      top > this.viewBottomRight[1]\n    )\n      return false;\n\n    return true;\n  }\n\n  _computeViewBounds() {\n    // Add a margin of 100 pixels around the view. Culling will hide PIXI objects,\n    // and hidden objects won't respond to events. Hence, a margin allow the cursor to go\n    // slightly out of the canvas when moving an instance, and still have the instance\n    // to follow the cursor.\n    const margin = 100;\n    this.viewTopLeft = this.viewPosition.toSceneCoordinates(-margin, -margin);\n    this.viewBottomRight = this.viewPosition.toSceneCoordinates(\n      this.viewPosition.getWidth() + margin,\n      this.viewPosition.getHeight() + margin\n    );\n  }\n\n  render() {\n    this._computeViewBounds();\n    this.instances.iterateOverInstancesWithZOrdering(\n      this.instancesRenderer,\n      this.layer.getName()\n    );\n    this._updatePixiObjectsZOrder();\n    this._updateVisibility();\n    this._cleanRenderers();\n  }\n\n  _updatePixiObjectsZOrder() {\n    this.pixiContainer.children.sort((a, b) => {\n      a.zOrder = a.zOrder || 0;\n      b.zOrder = b.zOrder || 0;\n      return a.zOrder - b.zOrder;\n    });\n  }\n\n  _updateVisibility() {\n    this.pixiContainer.visible = this.layer.getVisibility();\n  }\n\n  /**\n   * Delete instance renderers of the specified objects, which will then be recreated during\n   * the next render.\n   * @param {string} objectName The name of the object for which instance must be re-rendered.\n   */\n  resetRenderersFor(objectName) {\n    for (let i in this.renderedInstances) {\n      if (this.renderedInstances.hasOwnProperty(i)) {\n        const renderedInstance = this.renderedInstances[i];\n        if (renderedInstance.getInstance().getObjectName() === objectName) {\n          renderedInstance.instanceRemovedFromScene();\n          delete this.renderedInstances[i];\n        }\n      }\n    }\n  }\n\n  /**\n   * Clean up rendered instances that are not associated to any instance anymore\n   * (this can happen after an instance has been deleted).\n   */\n  _cleanRenderers() {\n    for (let i in this.renderedInstances) {\n      if (this.renderedInstances.hasOwnProperty(i)) {\n        const renderedInstance = this.renderedInstances[i];\n        if (!renderedInstance.wasUsed) {\n          renderedInstance.instanceRemovedFromScene();\n          delete this.renderedInstances[i];\n        } else renderedInstance.wasUsed = false;\n      }\n    }\n  }\n\n  delete() {\n    this.instancesRenderer.delete();\n  }\n}\n","// @flow\nimport * as PIXI from 'pixi.js-legacy';\n\nconst moveTolerance = 10; // px\nconst doubleClickDelay = 500; //ms\n\n/**\n * Add a 'doubleclick' event to the given PIXI DisplayObject,\n * which is emitted when the object is double tapped in less than\n * 500ms (using touch or mouse) on the same position (with a small tolerance).\n */\nexport const makeDoubleClickable = (pixiDisplayObject: PIXI.DisplayObject) => {\n  let lastClickTime = 0;\n  let lastClickGlobalX = 0;\n  let lastClickGlobalY = 0;\n\n  const handleTap = (event: PIXI.InteractionEvent) => {\n    const { x, y } = event.data.global;\n    const currentTime = Date.now();\n\n    if (\n      currentTime - lastClickTime < doubleClickDelay &&\n      Math.abs(x - lastClickGlobalX) <= moveTolerance &&\n      Math.abs(y - lastClickGlobalY) <= moveTolerance\n    ) {\n      // Wait for the next event cycle, as otherwise the \"touchend\"\n      // event could be catched by a dialog/another component shown\n      // as a result of the double click.\n      setTimeout(() => {\n        pixiDisplayObject.emit('doubleclick', event);\n      });\n    }\n\n    lastClickTime = currentTime;\n    lastClickGlobalX = x;\n    lastClickGlobalY = y;\n  };\n\n  pixiDisplayObject.interactive = true;\n  pixiDisplayObject.on('click', handleTap);\n  pixiDisplayObject.on('touchend', handleTap);\n};\n","import * as PIXI from 'pixi.js-legacy';\nconst gd /* TODO: add flow in this file */ = global.gd;\n\nexport default class SelectionRectangle {\n  constructor({\n    instances,\n    instanceMeasurer,\n    toSceneCoordinates,\n    toCanvasCoordinates,\n  }) {\n    this.instances = instances;\n    this.instanceMeasurer = instanceMeasurer;\n    this.toSceneCoordinates = toSceneCoordinates;\n\n    this.pixiRectangle = new PIXI.Graphics();\n    this.pixiRectangle.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n    this.selectionRectangleStart = null;\n    this.selectionRectangleEnd = null;\n    this._instancesInSelectionRectangle = [];\n\n    this.selector = new gd.InitialInstanceJSFunctor();\n    this.selector.invoke = instancePtr => {\n      const instance = gd.wrapPointer(instancePtr, gd.InitialInstance);\n      const x = this.instanceMeasurer.getInstanceLeft(instance);\n      const y = this.instanceMeasurer.getInstanceTop(instance);\n      const instanceHeight = this.instanceMeasurer.getInstanceHeight(instance);\n      const instanceWidth = this.instanceMeasurer.getInstanceWidth(instance);\n\n      if (!this.selectionRectangleStart || !this.selectionRectangleEnd) return;\n\n      const selectionSceneStart = toSceneCoordinates(\n        this.selectionRectangleStart.x,\n        this.selectionRectangleStart.y\n      );\n      const selectionSceneEnd = toSceneCoordinates(\n        this.selectionRectangleEnd.x,\n        this.selectionRectangleEnd.y\n      );\n\n      if (\n        selectionSceneStart[0] <= x &&\n        x + instanceWidth <= selectionSceneEnd[0] &&\n        selectionSceneStart[1] <= y &&\n        y + instanceHeight <= selectionSceneEnd[1]\n      ) {\n        this._instancesInSelectionRectangle.push(instance);\n      }\n    };\n  }\n\n  hasStartedSelectionRectangle() {\n    return this.selectionRectangleStart;\n  }\n\n  startSelectionRectangle = (x, y) => {\n    this.selectionRectangleStart = { x, y };\n    this.selectionRectangleEnd = { x, y };\n  };\n\n  updateSelectionRectangle = (lastX, lastY) => {\n    if (!this.selectionRectangleStart)\n      this.selectionRectangleStart = { x: lastX, y: lastY };\n\n    this.selectionRectangleEnd = { x: lastX, y: lastY };\n  };\n\n  endSelectionRectangle = () => {\n    if (!this.selectionRectangleStart) return [];\n\n    this._instancesInSelectionRectangle.length = 0;\n    if (this.selectionRectangleStart.x > this.selectionRectangleEnd.x) {\n      const tmp = this.selectionRectangleStart.x;\n      this.selectionRectangleStart.x = this.selectionRectangleEnd.x;\n      this.selectionRectangleEnd.x = tmp;\n    }\n    if (this.selectionRectangleStart.y > this.selectionRectangleEnd.y) {\n      const tmp = this.selectionRectangleStart.y;\n      this.selectionRectangleStart.y = this.selectionRectangleEnd.y;\n      this.selectionRectangleEnd.y = tmp;\n    }\n\n    this.instances.iterateOverInstances(this.selector);\n\n    this.selectionRectangleStart = null;\n    return this._instancesInSelectionRectangle;\n  };\n\n  getPixiObject() {\n    return this.pixiRectangle;\n  }\n\n  render() {\n    if (!this.selectionRectangleStart) {\n      this.pixiRectangle.visible = false;\n      return;\n    }\n\n    let x1 = this.selectionRectangleStart.x;\n    let y1 = this.selectionRectangleStart.y;\n    let x2 = this.selectionRectangleEnd.x;\n    let y2 = this.selectionRectangleEnd.y;\n\n    this.pixiRectangle.visible = true;\n    this.pixiRectangle.clear();\n    this.pixiRectangle.beginFill(0x6868e8);\n    this.pixiRectangle.lineStyle(1, 0x6868e8, 1);\n    this.pixiRectangle.fill.alpha = 0.1;\n    this.pixiRectangle.alpha = 0.8;\n    this.pixiRectangle.drawRect(\n      Math.min(x1, x2),\n      Math.min(y1, y2),\n      Math.abs(x2 - x1),\n      Math.abs(y2 - y1)\n    );\n    this.pixiRectangle.endFill();\n  }\n\n  delete() {\n    this.selector.delete();\n  }\n}\n","// @flow\nimport { roundPosition } from '../Utils/GridHelpers';\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  instances: gdInitialInstancesContainer,\n  options: Object,\n|};\n\nconst roundPositionsToGrid = (\n  pos: [number, number],\n  options: Object\n): [number, number] => {\n  const newPos = pos;\n\n  if (options.grid && options.snap) {\n    newPos[0] = roundPosition(\n      newPos[0],\n      options.gridWidth,\n      options.gridOffsetX\n    );\n    newPos[1] = roundPosition(\n      newPos[1],\n      options.gridHeight,\n      options.gridOffsetY\n    );\n  } else {\n    newPos[0] = Math.round(newPos[0]);\n    newPos[1] = Math.round(newPos[1]);\n  }\n\n  return newPos;\n};\n\n/**\n * Allow to add instances on the scene. Supports \"temporary\" instances,\n * which are real instances but can be deleted as long as they are not \"committed\".\n */\nexport default class InstancesAdder {\n  _instances: gdInitialInstancesContainer;\n  _temporaryInstances: Array<gdInitialInstance>;\n  _options: Object;\n  _zOrderFinder = new gd.HighestZOrderFinder();\n\n  constructor({ instances, options }: Props) {\n    this._instances = instances;\n    this._options = options;\n    this._temporaryInstances = [];\n  }\n\n  setOptions(options: Object) {\n    this._options = options;\n  }\n\n  /**\n   * Immediately create new instance at the specified position\n   * (specified in scene coordinates).\n   */\n  addInstances = (\n    pos: [number, number],\n    objectNames: Array<string>\n  ): Array<gdInitialInstance> => {\n    this._instances.iterateOverInstances(this._zOrderFinder);\n    const zOrder = this._zOrderFinder.getHighestZOrder() + 1;\n\n    const newPos = roundPositionsToGrid(pos, this._options);\n    const addedInstances = objectNames.map(objectName => {\n      const instance: gdInitialInstance = this._instances.insertNewInitialInstance();\n      instance.setObjectName(objectName);\n      instance.setX(newPos[0]);\n      instance.setY(newPos[1]);\n      instance.setZOrder(zOrder);\n\n      return instance;\n    });\n\n    return addedInstances;\n  };\n\n  /**\n   * Create temporary instances at the specified position\n   * (specified in scene coordinates).\n   */\n  createOrUpdateTemporaryInstancesFromObjectNames = (\n    pos: [number, number],\n    objectNames: Array<string>\n  ) => {\n    if (!objectNames.length) return;\n\n    if (!this._temporaryInstances.length) {\n      this._createTemporaryInstancesFromObjectNames(pos, objectNames);\n    } else {\n      this.updateTemporaryInstancePositions(pos);\n    }\n  };\n\n  _createTemporaryInstancesFromObjectNames = (\n    pos: [number, number],\n    objectNames: Array<string>\n  ) => {\n    this.deleteTemporaryInstances();\n\n    this._instances.iterateOverInstances(this._zOrderFinder);\n    const zOrder = this._zOrderFinder.getHighestZOrder() + 1;\n\n    const newPos = roundPositionsToGrid(pos, this._options);\n    this._temporaryInstances = objectNames.map(objectName => {\n      const instance: gdInitialInstance = this._instances.insertNewInitialInstance();\n      instance.setObjectName(objectName);\n      instance.setX(newPos[0]);\n      instance.setY(newPos[1]);\n      instance.setZOrder(zOrder);\n\n      return instance;\n    });\n  };\n\n  /**\n   * Update the temporary instances  positions\n   * (specified in scene coordinates). Useful when dragging these instances.\n   */\n  updateTemporaryInstancePositions = (\n    pos: [number, number]\n  ): Array<gdInitialInstance> => {\n    const newPos = roundPositionsToGrid(pos, this._options);\n    this._temporaryInstances.forEach(instance => {\n      instance.setX(Math.round(newPos[0]));\n      instance.setY(Math.round(newPos[1]));\n    });\n\n    return this._temporaryInstances;\n  };\n\n  /**\n   * Delete the temporary instances.\n   */\n  deleteTemporaryInstances() {\n    this._temporaryInstances.forEach(instance => {\n      this._instances.removeInstance(instance);\n    });\n    this._temporaryInstances = [];\n  }\n\n  /**\n   * Consider the temporary instances as not temporary anymore.\n   */\n  commitTemporaryInstances() {\n    this._temporaryInstances = [];\n  }\n\n  unmount() {\n    this._zOrderFinder.delete();\n\n    // Nothing to do for temporaries instances, that should have been deleted/commited by this moment.\n    // Don't take the risk to delete them now as this._instances might have been deleted/invalidated\n    // already.\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Background from '../../UI/Background';\nimport enumerateLayers from '../../LayersList/EnumerateLayers';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport PropertiesEditor from '../../PropertiesEditor';\nimport propertiesMapToSchema from '../../PropertiesEditor/PropertiesMapToSchema';\nimport { type Schema } from '../../PropertiesEditor';\nimport VariablesList from '../../VariablesList';\nimport getObjectByName from '../../Utils/GetObjectByName';\nimport IconButton from '../../UI/IconButton';\nimport { Line, Column } from '../../UI/Grid';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport Text from '../../UI/Text';\nimport { type UnsavedChanges } from '../../MainFrame/UnsavedChangesContext';\nimport ScrollView from '../../UI/ScrollView';\n\ntype Props = {|\n  project: gdProject,\n  layout: gdLayout,\n  instances: Array<gdInitialInstance>,\n  onEditObjectByName: string => void,\n  editObjectVariables: (?gdObject) => void,\n  editInstanceVariables: gdInitialInstance => void,\n  unsavedChanges?: ?UnsavedChanges,\n  i18n: I18nType,\n|};\n\nexport default class InstancePropertiesEditor extends React.Component<Props> {\n  _instanceVariablesList: { current: null | VariablesList } = React.createRef();\n  schema: Schema = [\n    {\n      name: this.props.i18n._(t`Object name`),\n      valueType: 'string',\n      disabled: true,\n      getValue: (instance: gdInitialInstance) => instance.getObjectName(),\n      setValue: (instance: gdInitialInstance, newValue: string) =>\n        instance.setObjectName(newValue),\n      onEditButtonClick: (instance: gdInitialInstance) =>\n        this.props.onEditObjectByName(instance.getObjectName()),\n    },\n    {\n      name: this.props.i18n._(t`Position`),\n      type: 'row',\n      children: [\n        {\n          name: this.props.i18n._(t`X`),\n          valueType: 'number',\n          getValue: (instance: gdInitialInstance) => instance.getX(),\n          setValue: (instance: gdInitialInstance, newValue: number) =>\n            instance.setX(newValue),\n        },\n        {\n          name: this.props.i18n._(t`Y`),\n          valueType: 'number',\n          getValue: (instance: gdInitialInstance) => instance.getY(),\n          setValue: (instance: gdInitialInstance, newValue: number) =>\n            instance.setY(newValue),\n        },\n      ],\n    },\n    {\n      name: this.props.i18n._(t`Angle`),\n      valueType: 'number',\n      getValue: (instance: gdInitialInstance) => instance.getAngle(),\n      setValue: (instance: gdInitialInstance, newValue: number) =>\n        instance.setAngle(newValue),\n    },\n    {\n      name: this.props.i18n._(t`Lock position/angle in the editor`),\n      valueType: 'boolean',\n      getValue: (instance: gdInitialInstance) => instance.isLocked(),\n      setValue: (instance: gdInitialInstance, newValue: boolean) =>\n        instance.setLocked(newValue),\n    },\n    {\n      name: this.props.i18n._(t`Z Order`),\n      valueType: 'number',\n      getValue: (instance: gdInitialInstance) => instance.getZOrder(),\n      setValue: (instance: gdInitialInstance, newValue: number) =>\n        instance.setZOrder(newValue),\n    },\n    {\n      name: this.props.i18n._(t`Layer`),\n      valueType: 'string',\n      getChoices: () => enumerateLayers(this.props.layout),\n      getValue: (instance: gdInitialInstance) => instance.getLayer(),\n      setValue: (instance: gdInitialInstance, newValue: string) =>\n        instance.setLayer(newValue),\n    },\n    {\n      name: this.props.i18n._(t`Custom size?`),\n      valueType: 'boolean',\n      getValue: (instance: gdInitialInstance) => instance.hasCustomSize(),\n      setValue: (instance: gdInitialInstance, newValue: boolean) =>\n        instance.setHasCustomSize(newValue),\n    },\n    {\n      name: this.props.i18n._(t`Custom size`),\n      type: 'row',\n      children: [\n        {\n          name: this.props.i18n._(t`Width`),\n          valueType: 'number',\n          getValue: (instance: gdInitialInstance) => instance.getCustomWidth(),\n          setValue: (instance: gdInitialInstance, newValue: number) =>\n            instance.setCustomWidth(newValue),\n        },\n        {\n          name: this.props.i18n._(t`Height`),\n          valueType: 'number',\n          getValue: (instance: gdInitialInstance) => instance.getCustomHeight(),\n          setValue: (instance: gdInitialInstance, newValue: number) =>\n            instance.setCustomHeight(newValue),\n        },\n      ],\n    },\n  ];\n\n  _renderEmpty() {\n    return (\n      <EmptyMessage>\n        <Trans>\n          Click on an instance in the scene to display its properties\n        </Trans>\n      </EmptyMessage>\n    );\n  }\n\n  _renderInstancesProperties() {\n    const { project, layout, instances } = this.props;\n    const instance = instances[0];\n    const associatedObjectName = instance.getObjectName();\n    const object = getObjectByName(project, layout, associatedObjectName);\n    //TODO: multiple instances support\n    const properties = instance.getCustomProperties(project, layout);\n    const instanceSchema = propertiesMapToSchema(\n      properties,\n      (instance: gdInitialInstance) =>\n        instance.getCustomProperties(project, layout),\n      (instance: gdInitialInstance, name, value) =>\n        instance.updateCustomProperty(name, value, project, layout)\n    );\n\n    return (\n      <ScrollView\n        autoHideScrollbar\n        key={instances\n          .map((instance: gdInitialInstance) => '' + instance.ptr)\n          .join(';')}\n      >\n        <Line>\n          <Column expand noMargin>\n            <Column>\n              <PropertiesEditor\n                unsavedChanges={this.props.unsavedChanges}\n                schema={this.schema.concat(instanceSchema)}\n                instances={instances}\n              />\n              <Line alignItems=\"center\" justifyContent=\"space-between\">\n                <Text>\n                  <Trans>Instance Variables</Trans>\n                </Text>\n                <IconButton\n                  onClick={() => {\n                    this.props.editInstanceVariables(instance);\n                  }}\n                >\n                  <OpenInNew />\n                </IconButton>\n              </Line>\n            </Column>\n            <VariablesList\n              inheritedVariablesContainer={\n                object ? object.getVariables() : null\n              }\n              variablesContainer={instance.getVariables()}\n              ref={this._instanceVariablesList}\n            />\n          </Column>\n        </Line>\n      </ScrollView>\n    );\n  }\n\n  render() {\n    const { instances } = this.props;\n\n    return (\n      <Background>\n        {!instances || !instances.length\n          ? this._renderEmpty()\n          : this._renderInstancesProperties()}\n      </Background>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport {\n  AutoSizer,\n  Table as RVTable,\n  Column as RVColumn,\n} from 'react-virtualized';\nimport ThemeConsumer from '../../UI/Theme/ThemeConsumer';\nimport SearchBar, { useShouldAutofocusSearchbar } from '../../UI/SearchBar';\nconst gd /*TODO: add flow in this file */ = global.gd;\n\ntype State = {|\n  searchText: string,\n|};\n\ntype Props = {|\n  instances: gdInitialInstancesContainer,\n  selectedInstances: Array<gdInitialInstance>,\n  onSelectInstances: (Array<gdInitialInstance>) => void,\n|};\n\ntype RenderedRowInfo = {\n  instance: gdInitialInstance,\n  name: string,\n  locked: string,\n  x: string,\n  y: string,\n  angle: string,\n  layer: string,\n  zOrder: string,\n};\n\nconst styles = {\n  container: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'stretch',\n  },\n};\n\nexport default class InstancesList extends Component<Props, State> {\n  state = {\n    searchText: '',\n  };\n  renderedRows: Array<RenderedRowInfo> = [];\n  instanceRowRenderer: ?typeof gd.InitialInstanceJSFunctor;\n  table: ?typeof RVTable;\n  _searchBar = React.createRef<SearchBar>();\n\n  componentDidMount() {\n    if (useShouldAutofocusSearchbar() && this._searchBar.current)\n      this._searchBar.current.focus();\n  }\n\n  componentWillMount() {\n    // Functor used to display an instance row\n    this.instanceRowRenderer = new gd.InitialInstanceJSFunctor();\n    this.instanceRowRenderer.invoke = instancePtr => {\n      const { searchText } = this.state;\n      const instance = gd.wrapPointer(instancePtr, gd.InitialInstance);\n\n      const name: string = instance.getObjectName();\n      if (\n        !searchText ||\n        name.toLowerCase().indexOf(searchText.toLowerCase()) !== -1\n      ) {\n        this.renderedRows.push({\n          instance,\n          name,\n          locked: instance.isLocked() ? '🔒' : '',\n          x: instance.getX().toFixed(2),\n          y: instance.getY().toFixed(2),\n          angle: instance.getAngle().toFixed(2),\n          layer: instance.getLayer(),\n          zOrder: instance.getZOrder(),\n        });\n      }\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.instanceRowRenderer) this.instanceRowRenderer.delete();\n  }\n\n  _onRowClick = ({ index }: { index: number }) => {\n    if (!this.renderedRows[index]) return;\n    this.props.onSelectInstances([this.renderedRows[index].instance]);\n  };\n\n  _rowGetter = ({ index }: { index: number }) => {\n    return this.renderedRows[index];\n  };\n\n  _rowClassName = ({ index }: { index: number }) => {\n    if (index < 0) {\n      return 'tableHeaderRow';\n    } else {\n      const row = this.renderedRows[index];\n      if (row && this.props.selectedInstances.indexOf(row.instance) !== -1)\n        return 'tableSelectedRow';\n\n      return index % 2 === 0 ? 'tableEvenRow' : 'tableOddRow';\n    }\n  };\n\n  _selectFirstInstance = () => {\n    if (this.renderedRows.length) {\n      this.props.onSelectInstances([this.renderedRows[0].instance]);\n    }\n  };\n\n  render() {\n    const { searchText } = this.state;\n    const { instances } = this.props;\n\n    if (!this.instanceRowRenderer) return null;\n\n    this.renderedRows.length = 0;\n    instances.iterateOverInstances(this.instanceRowRenderer);\n\n    // Force RVTable component to be mounted again if instances\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const tableKey = instances.ptr;\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <div style={styles.container}>\n            <div style={{ flex: 1 }}>\n              <AutoSizer>\n                {({ height, width }) => (\n                  <RVTable\n                    ref={table => (this.table = table)}\n                    key={tableKey}\n                    headerHeight={30}\n                    height={height}\n                    className={`gd-table ${muiTheme.tableRootClassName}`}\n                    headerClassName={'tableHeaderColumn'}\n                    rowCount={this.renderedRows.length}\n                    rowGetter={this._rowGetter}\n                    rowHeight={32}\n                    onRowClick={this._onRowClick}\n                    rowClassName={this._rowClassName}\n                    width={width}\n                  >\n                    <RVColumn\n                      label={<Trans>Object name</Trans>}\n                      dataKey=\"name\"\n                      width={width * 0.35}\n                      className={'tableColumn'}\n                    />\n                    <RVColumn\n                      label=\"\"\n                      dataKey=\"locked\"\n                      width={width * 0.05}\n                      className={'tableColumn'}\n                    />\n                    <RVColumn\n                      label={<Trans>X</Trans>}\n                      dataKey=\"x\"\n                      width={width * 0.1}\n                      className={'tableColumn'}\n                    />\n                    <RVColumn\n                      label={<Trans>Y</Trans>}\n                      dataKey=\"y\"\n                      width={width * 0.1}\n                      className={'tableColumn'}\n                    />\n                    <RVColumn\n                      label={<Trans>Angle</Trans>}\n                      dataKey=\"angle\"\n                      width={width * 0.1}\n                      className={'tableColumn'}\n                    />\n                    <RVColumn\n                      label={<Trans>Layer</Trans>}\n                      dataKey=\"layer\"\n                      width={width * 0.2}\n                      className={'tableColumn'}\n                    />\n                    <RVColumn\n                      label={<Trans>Z Order</Trans>}\n                      dataKey=\"zOrder\"\n                      width={width * 0.1}\n                      className={'tableColumn'}\n                    />\n                  </RVTable>\n                )}\n              </AutoSizer>\n            </div>\n            <SearchBar\n              value={searchText}\n              onChange={searchText =>\n                this.setState({\n                  searchText,\n                })\n              }\n              onRequestSearch={this._selectFirstInstance}\n              ref={this._searchBar}\n            />\n          </div>\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport Text from '../UI/Text';\nimport enumerateLayers from './EnumerateLayers';\n\nexport default class VariablesEditorDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedLayer: '',\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (!this.props.open && newProps.open) {\n      this.setState({\n        selectedLayer: '',\n      });\n    }\n  }\n\n  render() {\n    if (!this.props.layersContainer || !this.props.open) return null;\n\n    const actions = [\n      <FlatButton\n        key=\"cancel\"\n        label={<Trans>Cancel</Trans>}\n        keyboardFocused={true}\n        onClick={() => this.props.onClose(false)}\n      />,\n      <FlatButton\n        key=\"remove\"\n        label={<Trans>Remove objects</Trans>}\n        onClick={() => this.props.onClose(true, null)}\n      />,\n      <FlatButton\n        key=\"move\"\n        label={<Trans>Move objects</Trans>}\n        primary={true}\n        onClick={() => this.props.onClose(true, this.state.selectedLayer)}\n      />,\n    ];\n\n    const layers = enumerateLayers(this.props.layersContainer);\n    const choices = layers\n      .filter(({ value }) => {\n        return value !== this.props.layerRemoved;\n      })\n      .map(({ value, label }) => (\n        <SelectOption key={value} value={value} primaryText={label} />\n      ));\n\n    return (\n      <Dialog\n        title={<Trans>Objects on {this.props.layerRemoved}</Trans>}\n        actions={actions}\n        cannotBeDismissed={false}\n        open={this.props.open}\n        onRequestClose={this.props.onCancel}\n      >\n        <Text>\n          <Trans>Move objects on layer {this.props.layerRemoved} to:</Trans>\n        </Text>\n        <SelectField\n          value={this.state.selectedLayer}\n          onChange={(event, index, newValue) => {\n            this.setState({ selectedLayer: newValue });\n          }}\n        >\n          {choices}\n        </SelectField>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport ColorField from '../UI/ColorField';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport InlineCheckbox from '../UI/InlineCheckbox';\nimport { type ColorResult } from '../UI/ColorField/ColorPicker';\nimport { useSerializableObjectCancelableEditor } from '../Utils/SerializableObjectCancelableEditor';\nimport DismissableAlertMessage from '../UI/DismissableAlertMessage';\nimport Text from '../UI/Text';\nimport useForceUpdate from '../Utils/UseForceUpdate';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport HotReloadPreviewButton, {\n  type HotReloadPreviewButtonProps,\n} from '../HotReload/HotReloadPreviewButton';\nimport HelpButton from '../UI/HelpButton';\nimport { Tab, Tabs } from '../UI/Tabs';\nimport EffectsList from '../EffectsList';\nimport { Spacer } from '../UI/Grid';\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  layer: gdLayer,\n  initialInstances: gdInitialInstancesContainer,\n\n  initialTab: 'properties' | 'effects',\n\n  onClose: () => void,\n\n  // Preview:\n  hotReloadPreviewButtonProps: HotReloadPreviewButtonProps,\n|};\n\nconst LayerEditorDialog = (props: Props) => {\n  const {\n    initialTab,\n    layer,\n    initialInstances,\n    onClose,\n    hotReloadPreviewButtonProps,\n  } = props;\n  const forceUpdate = useForceUpdate();\n  const onCancelChanges = useSerializableObjectCancelableEditor({\n    serializableObject: layer,\n    onCancel: onClose,\n  });\n  const [currentTab, setCurrentTab] = React.useState(initialTab);\n  const { instancesCount, highestZOrder } = React.useMemo(\n    () => {\n      const zOrderFinder = new gd.HighestZOrderFinder();\n      zOrderFinder.restrictSearchToLayer(layer.getName());\n\n      initialInstances.iterateOverInstances(zOrderFinder);\n      const instancesCount = zOrderFinder.getInstancesCount();\n      const highestZOrder = zOrderFinder.getHighestZOrder();\n      zOrderFinder.delete();\n      return { instancesCount, highestZOrder };\n    },\n    [layer, initialInstances]\n  );\n\n  return (\n    <Dialog\n      noMargin\n      open\n      title={<Trans>Edit Layer Properties</Trans>}\n      secondaryActions={[\n        <HelpButton\n          key=\"help\"\n          helpPagePath={'/interface/scene-editor/layer-effects' /* TODO */}\n        />,\n        <HotReloadPreviewButton\n          key=\"hot-reload-preview-button\"\n          {...hotReloadPreviewButtonProps}\n        />,\n      ]}\n      actions={[\n        <FlatButton\n          label={<Trans>Cancel</Trans>}\n          onClick={onCancelChanges}\n          key={'Cancel'}\n        />,\n        <FlatButton\n          label={<Trans>Apply</Trans>}\n          primary\n          keyboardFocused\n          onClick={onClose}\n          key={'Apply'}\n        />,\n      ]}\n      onRequestClose={onCancelChanges}\n    >\n      <Tabs value={currentTab} onChange={setCurrentTab}>\n        <Tab label={<Trans>Properties</Trans>} value=\"properties\" />\n        <Tab label={<Trans>Effects</Trans>} value=\"effects\" />\n      </Tabs>\n      {currentTab === 'properties' && (\n        <ColumnStackLayout>\n          {layer.isLightingLayer() ? (\n            <DismissableAlertMessage\n              kind=\"info\"\n              identifier=\"lighting-layer-usage\"\n            >\n              <Trans>\n                The lighting layer renders an ambient light on the scene. All\n                lights should be placed on this layer so that shadows are\n                properly rendered. By default, the layer follows the base layer\n                camera. Uncheck this if you want to manually move the camera\n                using events.\n              </Trans>\n            </DismissableAlertMessage>\n          ) : null}\n          <Text>\n            There are {instancesCount} instances of objects on this layer.\n          </Text>\n          {!props.project.getUseDeprecatedZeroAsDefaultZOrder() && (\n            <Text>\n              Objects created using events on this layer will be given a \"Z\n              order\" of {highestZOrder + 1}, so that they appear in front of all\n              objects of this layer. You can change this using the action to\n              change an object Z order, after using an action to create it.\n            </Text>\n          )}\n          <InlineCheckbox\n            label={<Trans>Layer visible</Trans>}\n            checked={layer.getVisibility()}\n            onCheck={(e, checked) => {\n              layer.setVisibility(checked);\n              forceUpdate();\n            }}\n          />\n          {layer.isLightingLayer() ? (\n            <React.Fragment>\n              <Text size=\"title\">\n                <Trans>Lighting settings</Trans>\n              </Text>\n              <InlineCheckbox\n                label={<Trans>Automatically follow the base layer.</Trans>}\n                checked={layer.isFollowingBaseLayerCamera()}\n                onCheck={(e, checked) => {\n                  layer.setFollowBaseLayerCamera(checked);\n                  forceUpdate();\n                }}\n              />\n              <ColorField\n                fullWidth\n                floatingLabelText={<Trans>Ambient light color</Trans>}\n                disableAlpha\n                color={{\n                  r: layer.getAmbientLightColorRed(),\n                  g: layer.getAmbientLightColorGreen(),\n                  b: layer.getAmbientLightColorBlue(),\n                }}\n                onChange={(color: ColorResult) => {\n                  layer.setAmbientLightColor(\n                    color.rgb.r,\n                    color.rgb.g,\n                    color.rgb.b\n                  );\n                  forceUpdate();\n                }}\n              />\n            </React.Fragment>\n          ) : (\n            // Add some space to avoid a dialog to short that would show scrollbars\n            <React.Fragment>\n              <Spacer />\n              <Spacer />\n            </React.Fragment>\n          )}\n        </ColumnStackLayout>\n      )}\n      {currentTab === 'effects' && (\n        <EffectsList\n          project={props.project}\n          resourceSources={props.resourceSources}\n          onChooseResource={props.onChooseResource}\n          resourceExternalEditors={props.resourceExternalEditors}\n          effectsContainer={layer}\n          onEffectsUpdated={\n            forceUpdate /*Force update to ensure dialog is properly positioned*/\n          }\n        />\n      )}\n    </Dialog>\n  );\n};\n\nexport default LayerEditorDialog;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport ObjectsEditorService from './ObjectsEditorService';\nimport Dialog from '../UI/Dialog';\nimport HelpButton from '../UI/HelpButton';\nimport BehaviorsEditor from '../BehaviorsEditor';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport { useSerializableObjectCancelableEditor } from '../Utils/SerializableObjectCancelableEditor';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport { Column, Line } from '../UI/Grid';\nimport { type EditorProps } from './Editors/EditorProps.flow';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\nimport useForceUpdate from '../Utils/UseForceUpdate';\nimport HotReloadPreviewButton, {\n  type HotReloadPreviewButtonProps,\n} from '../HotReload/HotReloadPreviewButton';\n\ntype Props = {|\n  open: boolean,\n  object: ?gdObject,\n\n  onApply: () => void,\n  onCancel: () => void,\n\n  // Object renaming:\n  onRename: string => void,\n  canRenameObject: string => boolean,\n\n  // Passed down to object editors:\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  unsavedChanges?: UnsavedChanges,\n  onUpdateBehaviorsSharedData: () => void,\n\n  // Preview:\n  hotReloadPreviewButtonProps: HotReloadPreviewButtonProps,\n|};\n\ntype InnerDialogProps = {|\n  ...Props,\n  editorComponent: ?Class<React.Component<EditorProps, any>>,\n  objectName: string,\n  helpPagePath: ?string,\n  object: gdObject,\n|};\n\nconst InnerDialog = (props: InnerDialogProps) => {\n  const [currentTab, setCurrentTab] = React.useState('properties');\n  const [newObjectName, setNewObjectName] = React.useState(props.objectName);\n  const forceUpdate = useForceUpdate();\n  const onCancelChanges = useSerializableObjectCancelableEditor({\n    serializableObject: props.object,\n    useProjectToUnserialize: props.project,\n    onCancel: props.onCancel,\n  });\n\n  const EditorComponent = props.editorComponent;\n\n  return (\n    <Dialog\n      key={props.object && props.object.ptr}\n      secondaryActions={[\n        <HelpButton key=\"help-button\" helpPagePath={props.helpPagePath} />,\n        <HotReloadPreviewButton\n          key=\"hot-reload-preview-button\"\n          {...props.hotReloadPreviewButtonProps}\n        />,\n      ]}\n      actions={[\n        <FlatButton\n          key=\"cancel\"\n          label={<Trans>Cancel</Trans>}\n          onClick={onCancelChanges}\n        />,\n        <FlatButton\n          key=\"apply\"\n          label={<Trans>Apply</Trans>}\n          primary\n          keyboardFocused\n          onClick={() => {\n            props.onApply();\n            // Do the renaming *after* applying changes, as \"withSerializableObject\"\n            // HOC will unserialize the object to apply modifications, which will\n            // override the name.\n            props.onRename(newObjectName);\n          }}\n        />,\n      ]}\n      noMargin\n      onRequestClose={onCancelChanges}\n      cannotBeDismissed={true}\n      open={props.open}\n      noTitleMargin\n      title={\n        <div>\n          <Tabs value={currentTab} onChange={setCurrentTab}>\n            <Tab\n              label={<Trans>Properties</Trans>}\n              value={'properties'}\n              key={'properties'}\n            />\n            <Tab\n              label={<Trans>Behaviors</Trans>}\n              value={'behaviors'}\n              key={'behaviors'}\n            />\n          </Tabs>\n        </div>\n      }\n    >\n      <Line>\n        <Column expand>\n          <SemiControlledTextField\n            fullWidth\n            commitOnBlur\n            floatingLabelText={<Trans>Object name</Trans>}\n            floatingLabelFixed\n            value={newObjectName}\n            hintText={t`Object Name`}\n            onChange={text => {\n              if (text === newObjectName) return;\n\n              if (props.canRenameObject(text)) {\n                setNewObjectName(text);\n              }\n            }}\n          />\n        </Column>\n      </Line>\n      {currentTab === 'properties' && EditorComponent && (\n        <EditorComponent\n          object={props.object}\n          project={props.project}\n          resourceSources={props.resourceSources}\n          onChooseResource={props.onChooseResource}\n          resourceExternalEditors={props.resourceExternalEditors}\n          onSizeUpdated={\n            forceUpdate /*Force update to ensure dialog is properly positionned*/\n          }\n          objectName={props.objectName}\n        />\n      )}\n      {currentTab === 'behaviors' && (\n        <BehaviorsEditor\n          object={props.object}\n          project={props.project}\n          resourceSources={props.resourceSources}\n          onChooseResource={props.onChooseResource}\n          resourceExternalEditors={props.resourceExternalEditors}\n          onSizeUpdated={\n            forceUpdate /*Force update to ensure dialog is properly positionned*/\n          }\n          onUpdateBehaviorsSharedData={props.onUpdateBehaviorsSharedData}\n        />\n      )}\n    </Dialog>\n  );\n};\n\ntype State = {|\n  editorComponent: ?Class<React.Component<EditorProps, any>>,\n  castToObjectType: ?(object: gdObject) => gdObject,\n  helpPagePath: ?string,\n  objectName: string,\n|};\n\nexport default class ObjectEditorDialog extends Component<Props, State> {\n  state = {\n    editorComponent: null,\n    castToObjectType: null,\n    helpPagePath: null,\n    objectName: '',\n  };\n\n  componentWillMount() {\n    this._loadFrom(this.props.object);\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      (!this.props.open && newProps.open) ||\n      (newProps.open && this.props.object !== newProps.object)\n    ) {\n      this._loadFrom(newProps.object);\n    }\n  }\n\n  _loadFrom(object: ?gdObject) {\n    if (!object) return;\n\n    const editorConfiguration = ObjectsEditorService.getEditorConfiguration(\n      object.getType()\n    );\n    if (!editorConfiguration) {\n      return this.setState({\n        editorComponent: null,\n        castToObjectType: null,\n      });\n    }\n\n    this.setState({\n      editorComponent: editorConfiguration.component,\n      helpPagePath: editorConfiguration.helpPagePath,\n      castToObjectType: editorConfiguration.castToObjectType,\n      objectName: object.getName(),\n    });\n  }\n\n  render() {\n    const { object } = this.props;\n    const { editorComponent, castToObjectType, helpPagePath } = this.state;\n\n    if (!object || !castToObjectType) return null;\n\n    return (\n      <InnerDialog\n        {...this.props}\n        editorComponent={editorComponent}\n        key={this.props.object && this.props.object.ptr}\n        helpPagePath={helpPagePath}\n        object={castToObjectType(object)}\n        objectName={this.state.objectName}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Checkbox from '../../UI/Checkbox';\nimport { Line, Column } from '../../UI/Grid';\nimport ColorPicker from '../../UI/ColorField/ColorPicker';\nimport MiniToolbar, { MiniToolbarText } from '../../UI/MiniToolbar';\nimport ResourceSelector from '../../ResourcesList/ResourceSelector';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { type EditorProps } from './EditorProps.flow';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nconst gd = global.gd;\n\nconst toolbarItemStyle = {\n  marginRight: 10,\n};\n\nconst styles = {\n  sizeTextField: {\n    width: 90,\n    ...toolbarItemStyle,\n  },\n  resourcesSelector: { alignSelf: 'center' },\n  toolbarItem: toolbarItemStyle,\n  checkbox: toolbarItemStyle,\n};\n\nexport default class TextEditor extends React.Component<EditorProps, void> {\n  render() {\n    const {\n      object,\n      project,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n    } = this.props;\n    const textObject = gd.asTextObject(object);\n\n    return (\n      <Column noMargin>\n        <MiniToolbar>\n          <MiniToolbarText>\n            <Trans>Size:</Trans>\n          </MiniToolbarText>\n          <SemiControlledTextField\n            commitOnBlur\n            type=\"number\"\n            margin=\"none\"\n            style={styles.sizeTextField}\n            value={textObject.getCharacterSize()}\n            onChange={value => {\n              textObject.setCharacterSize(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <MiniToolbarText>\n            <Trans>Color:</Trans>\n          </MiniToolbarText>\n          <ColorPicker\n            style={styles.toolbarItem}\n            disableAlpha\n            color={{\n              r: textObject.getColorR(),\n              g: textObject.getColorG(),\n              b: textObject.getColorB(),\n              a: 255,\n            }}\n            onChangeComplete={color => {\n              textObject.setColor(color.rgb.r, color.rgb.g, color.rgb.b);\n              this.forceUpdate();\n            }}\n          />\n          <Checkbox\n            label={<Trans>Bold</Trans>}\n            checked={textObject.isBold()}\n            onCheck={(e, checked) => {\n              textObject.setBold(checked);\n              this.forceUpdate();\n            }}\n            style={styles.checkbox}\n          />\n          <Checkbox\n            label={<Trans>Italic</Trans>}\n            checked={textObject.isItalic()}\n            onCheck={(e, checked) => {\n              textObject.setItalic(checked);\n              this.forceUpdate();\n            }}\n            style={styles.checkbox}\n          />\n          <MiniToolbarText>\n            <Trans>Font:</Trans>\n          </MiniToolbarText>\n          <ResourceSelector\n            margin=\"none\"\n            project={project}\n            resourceSources={resourceSources}\n            onChooseResource={onChooseResource}\n            resourceExternalEditors={resourceExternalEditors}\n            resourcesLoader={ResourcesLoader}\n            resourceKind=\"font\"\n            fullWidth\n            canBeReset\n            initialResourceName={textObject.getFontName()}\n            onChange={resourceName => {\n              textObject.setFontName(resourceName);\n              this.forceUpdate();\n            }}\n            hintText={<Trans>Choose a font</Trans>}\n            style={styles.resourcesSelector}\n          />\n        </MiniToolbar>\n        <Line noMargin>\n          <Column expand>\n            <Line>\n              <SemiControlledTextField\n                floatingLabelText={<Trans>Initial text to display</Trans>}\n                floatingLabelFixed\n                commitOnBlur\n                hintText={t`Enter the text to be displayed by the object`}\n                fullWidth\n                multiline\n                rows={8}\n                rowsMax={8}\n                value={textObject.getString()}\n                onChange={value => {\n                  textObject.setString(value);\n                  this.forceUpdate();\n                  this.props.onSizeUpdated();\n                }}\n              />\n            </Line>\n          </Column>\n        </Line>\n      </Column>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport ResourceSelectorWithThumbnail from '../../ResourcesList/ResourceSelectorWithThumbnail';\nimport { type EditorProps } from './EditorProps.flow';\nimport { ResponsiveLineStackLayout, ColumnStackLayout } from '../../UI/Layout';\nconst gd = global.gd;\n\nexport default class TiledSpriteEditor extends React.Component<\n  EditorProps,\n  void\n> {\n  render() {\n    const {\n      object,\n      project,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n    } = this.props;\n    const tiledSpriteObject = gd.asTiledSpriteObject(object);\n\n    return (\n      <ColumnStackLayout>\n        <ResourceSelectorWithThumbnail\n          project={project}\n          resourceSources={resourceSources}\n          onChooseResource={onChooseResource}\n          resourceKind=\"image\"\n          resourceName={tiledSpriteObject.getTexture()}\n          resourceExternalEditors={resourceExternalEditors}\n          onChange={resourceName => {\n            tiledSpriteObject.setTexture(resourceName);\n            this.forceUpdate();\n          }}\n          floatingLabelText={<Trans>Select an image</Trans>}\n        />\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Default width (in pixels)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={tiledSpriteObject.getWidth()}\n            onChange={value => {\n              tiledSpriteObject.setWidth(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Default height (in pixels)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={tiledSpriteObject.getHeight()}\n            onChange={value => {\n              tiledSpriteObject.setHeight(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n      </ColumnStackLayout>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Checkbox from '../../UI/Checkbox';\nimport ResourceSelectorWithThumbnail from '../../ResourcesList/ResourceSelectorWithThumbnail';\nimport { type EditorProps } from './EditorProps.flow';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport { ResponsiveLineStackLayout, ColumnStackLayout } from '../../UI/Layout';\nconst gd = global.gd;\n\nexport default class PanelSpriteEditor extends React.Component<\n  EditorProps,\n  void\n> {\n  render() {\n    const {\n      object,\n      project,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n    } = this.props;\n    const panelSpriteObject = gd.asPanelSpriteObject(object);\n\n    return (\n      <ColumnStackLayout>\n        <ResourceSelectorWithThumbnail\n          project={project}\n          resourceSources={resourceSources}\n          onChooseResource={onChooseResource}\n          resourceExternalEditors={resourceExternalEditors}\n          resourceKind=\"image\"\n          resourceName={panelSpriteObject.getTexture()}\n          onChange={resourceName => {\n            panelSpriteObject.setTexture(resourceName);\n            this.forceUpdate();\n          }}\n          floatingLabelText={<Trans>Select an image</Trans>}\n        />\n        <Checkbox\n          label={\n            <Trans>\n              Repeat borders and center textures (instead of stretching them)\n            </Trans>\n          }\n          checked={panelSpriteObject.isTiled()}\n          onCheck={(e, checked) => {\n            panelSpriteObject.setTiled(checked);\n            this.forceUpdate();\n          }}\n        />\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Top margin</Trans>}\n            fullWidth\n            type=\"number\"\n            value={panelSpriteObject.getTopMargin()}\n            onChange={value => {\n              panelSpriteObject.setTopMargin(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Bottom margin</Trans>}\n            fullWidth\n            type=\"number\"\n            value={panelSpriteObject.getBottomMargin()}\n            onChange={value => {\n              panelSpriteObject.setBottomMargin(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Left margin</Trans>}\n            fullWidth\n            type=\"number\"\n            value={panelSpriteObject.getLeftMargin()}\n            onChange={value => {\n              panelSpriteObject.setLeftMargin(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Right margin</Trans>}\n            fullWidth\n            type=\"number\"\n            value={panelSpriteObject.getRightMargin()}\n            onChange={value => {\n              panelSpriteObject.setRightMargin(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Default width (in pixels)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={panelSpriteObject.getWidth()}\n            onChange={value => {\n              panelSpriteObject.setWidth(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Default height (in pixels)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={panelSpriteObject.getHeight()}\n            onChange={value => {\n              panelSpriteObject.setHeight(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n      </ColumnStackLayout>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport SpritesList from './SpritesList';\nimport Add from '@material-ui/icons/Add';\nimport Delete from '@material-ui/icons/Delete';\nimport IconButton from '../../../UI/IconButton';\nimport FlatButton from '../../../UI/FlatButton';\nimport RaisedButton from '../../../UI/RaisedButton';\nimport { mapFor } from '../../../Utils/MapFor';\nimport SemiControlledTextField from '../../../UI/SemiControlledTextField';\nimport Dialog from '../../../UI/Dialog';\nimport HelpButton from '../../../UI/HelpButton';\nimport EmptyMessage from '../../../UI/EmptyMessage';\nimport MiniToolbar, { MiniToolbarText } from '../../../UI/MiniToolbar';\nimport DragHandle from '../../../UI/DragHandle';\nimport ContextMenu from '../../../UI/Menu/ContextMenu';\nimport { showWarningBox } from '../../../UI/Messages/MessageBox';\nimport ResourcesLoader from '../../../ResourcesLoader';\nimport PointsEditor from './PointsEditor';\nimport CollisionMasksEditor from './CollisionMasksEditor';\nimport Window from '../../../Utils/Window';\nimport {\n  deleteSpritesFromAnimation,\n  duplicateSpritesInAnimation,\n} from './Utils/SpriteObjectHelper';\nimport { type EditorProps } from '../EditorProps.flow';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../../../ResourcesList/ResourceExternalEditor.flow';\nimport { Column, Line } from '../../../UI/Grid';\nimport { ResponsiveLineStackLayout } from '../../../UI/Layout';\n\nconst gd = global.gd;\n\nconst styles = {\n  gridList: {\n    overflowY: 'auto',\n  },\n  animationTitle: {\n    flex: 1,\n  },\n  animationTools: {\n    flexShrink: 0,\n  },\n};\n\nconst AddAnimationLine = ({ onAdd, extraTools }) => (\n  <Column expand>\n    <Line justifyContent=\"space-between\">\n      {extraTools}\n      <RaisedButton\n        label={<Trans>Add an animation</Trans>}\n        primary\n        onClick={onAdd}\n        icon={<Add />}\n      />\n    </Line>\n  </Column>\n);\n\ntype AnimationProps = {|\n  animation: gdAnimation,\n  id: number,\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  onRemove: () => void,\n  resourcesLoader: typeof ResourcesLoader,\n  onSpriteContextMenu: (x: number, y: number, sprite: gdSprite) => void,\n  selectedSprites: {\n    [number]: boolean,\n  },\n  onSelectSprite: (sprite: gdSprite, selected: boolean) => void,\n  onReplaceDirection: (\n    directionIndex: number,\n    newDirection: gdDirection\n  ) => void,\n  objectName: string,\n  onChangeName: string => void,\n|};\n\nclass Animation extends React.Component<AnimationProps, void> {\n  render() {\n    const {\n      animation,\n      id,\n      project,\n      resourceSources,\n      onRemove,\n      onChooseResource,\n      resourceExternalEditors,\n      resourcesLoader,\n      onSpriteContextMenu,\n      selectedSprites,\n      onSelectSprite,\n      onReplaceDirection,\n      objectName,\n      onChangeName,\n    } = this.props;\n\n    const animationName = animation.getName();\n    return (\n      <div>\n        <MiniToolbar>\n          <DragHandle />\n          <MiniToolbarText>Animation #{id} </MiniToolbarText>\n          <Column expand margin>\n            <SemiControlledTextField\n              commitOnBlur\n              margin=\"none\"\n              value={animation.getName()}\n              hintText={t`Optional animation name`}\n              onChange={text => onChangeName(text)}\n              fullWidth\n            />\n          </Column>\n          <IconButton onClick={onRemove}>\n            <Delete />\n          </IconButton>\n        </MiniToolbar>\n        {mapFor(0, animation.getDirectionsCount(), i => {\n          const direction = animation.getDirection(i);\n          return (\n            <SpritesList\n              direction={direction}\n              key={i}\n              project={project}\n              resourcesLoader={resourcesLoader}\n              resourceSources={resourceSources}\n              onChooseResource={onChooseResource}\n              resourceExternalEditors={resourceExternalEditors}\n              onSpriteContextMenu={onSpriteContextMenu}\n              selectedSprites={selectedSprites}\n              onSelectSprite={onSelectSprite}\n              onReplaceByDirection={newDirection =>\n                onReplaceDirection(i, newDirection)\n              }\n              objectName={objectName}\n              animationName={animationName}\n              onChangeName={onChangeName}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst SortableAnimation = SortableElement(Animation);\n\nconst SortableAnimationsList = SortableContainer(\n  ({\n    spriteObject,\n    objectName,\n    onAddAnimation,\n    onRemoveAnimation,\n    onChangeAnimationName,\n    project,\n    resourcesLoader,\n    resourceSources,\n    onChooseResource,\n    resourceExternalEditors,\n    extraBottomTools,\n    onSpriteContextMenu,\n    selectedSprites,\n    onSelectSprite,\n    onReplaceDirection,\n  }) => {\n    return (\n      <div style={styles.gridList}>\n        {[\n          ...mapFor(0, spriteObject.getAnimationsCount(), i => {\n            const animation = spriteObject.getAnimation(i);\n            return (\n              <SortableAnimation\n                key={i}\n                index={i}\n                id={i}\n                animation={animation}\n                project={project}\n                resourcesLoader={resourcesLoader}\n                resourceSources={resourceSources}\n                onChooseResource={onChooseResource}\n                resourceExternalEditors={resourceExternalEditors}\n                onRemove={() => onRemoveAnimation(i)}\n                onChangeName={newName => onChangeAnimationName(i, newName)}\n                onSpriteContextMenu={onSpriteContextMenu}\n                selectedSprites={selectedSprites}\n                onSelectSprite={onSelectSprite}\n                onReplaceDirection={(directionId, newDirection) =>\n                  onReplaceDirection(i, directionId, newDirection)\n                }\n                objectName={objectName}\n              />\n            );\n          }),\n          <AddAnimationLine\n            onAdd={onAddAnimation}\n            key=\"add-animation-line\"\n            disabled\n            index={spriteObject.getAnimationsCount()}\n            extraTools={extraBottomTools}\n          />,\n        ]}\n      </div>\n    );\n  }\n);\n\ntype AnimationsListContainerProps = {|\n  spriteObject: gdSpriteObject,\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  resourcesLoader: typeof ResourcesLoader,\n  extraBottomTools: React.Node,\n  onSizeUpdated: () => void,\n  objectName: string,\n|};\n\ntype AnimationsListContainerState = {|\n  selectedSprites: {\n    [number]: boolean,\n  },\n|};\n\nclass AnimationsListContainer extends React.Component<\n  AnimationsListContainerProps,\n  AnimationsListContainerState\n> {\n  state = {\n    selectedSprites: {},\n  };\n  spriteContextMenu: ?ContextMenu;\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    this.props.spriteObject.moveAnimation(oldIndex, newIndex);\n    this.forceUpdate();\n  };\n\n  addAnimation = () => {\n    const emptyAnimation = new gd.Animation();\n    emptyAnimation.setDirectionsCount(1);\n    this.props.spriteObject.addAnimation(emptyAnimation);\n    this.forceUpdate();\n    this.props.onSizeUpdated();\n  };\n\n  removeAnimation = i => {\n    const answer = Window.showConfirmDialog(\n      'Are you sure you want to remove this animation?'\n    );\n\n    if (answer) {\n      this.props.spriteObject.removeAnimation(i);\n      this.forceUpdate();\n      this.props.onSizeUpdated();\n    }\n  };\n\n  changeAnimationName = (i, newName) => {\n    const { spriteObject } = this.props;\n\n    const otherNames = mapFor(0, spriteObject.getAnimationsCount(), index => {\n      return index === i\n        ? undefined // Don't check the current animation name as we're changing it.\n        : spriteObject.getAnimation(index).getName();\n    });\n\n    if (newName !== '' && otherNames.filter(name => name === newName).length) {\n      showWarningBox(\n        'Another animation with this name already exists. Please use another name.',\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    spriteObject.getAnimation(i).setName(newName);\n    this.forceUpdate();\n  };\n\n  deleteSelection = () => {\n    const { spriteObject } = this.props;\n\n    mapFor(0, spriteObject.getAnimationsCount(), index => {\n      const animation = spriteObject.getAnimation(index);\n      deleteSpritesFromAnimation(animation, this.state.selectedSprites);\n    });\n\n    this.setState({\n      selectedSprites: {},\n    });\n  };\n\n  duplicateSelection = () => {\n    const { spriteObject } = this.props;\n\n    mapFor(0, spriteObject.getAnimationsCount(), index => {\n      const animation = spriteObject.getAnimation(index);\n      duplicateSpritesInAnimation(animation, this.state.selectedSprites);\n    });\n\n    this.setState({\n      selectedSprites: {},\n    });\n  };\n\n  openSpriteContextMenu = (x, y, sprite, index) => {\n    this.selectSprite(sprite, true);\n    if (this.spriteContextMenu) this.spriteContextMenu.open(x, y);\n  };\n\n  selectSprite = (sprite, selected) => {\n    this.setState({\n      selectedSprites: {\n        ...this.state.selectedSprites,\n        [sprite.ptr]: selected,\n      },\n    });\n  };\n\n  replaceDirection = (animationId, directionId, newDirection) => {\n    this.props.spriteObject\n      .getAnimation(animationId)\n      .setDirection(newDirection, directionId);\n    this.forceUpdate();\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.spriteObject.getAnimationsCount() === 0 && (\n          <EmptyMessage>\n            <Trans>\n              This object has no animations containing images. Start by adding\n              an animation.\n            </Trans>\n          </EmptyMessage>\n        )}\n        <SortableAnimationsList\n          spriteObject={this.props.spriteObject}\n          objectName={this.props.objectName}\n          helperClass=\"sortable-helper\"\n          project={this.props.project}\n          onSortEnd={this.onSortEnd}\n          onAddAnimation={this.addAnimation}\n          onChangeAnimationName={this.changeAnimationName}\n          onRemoveAnimation={this.removeAnimation}\n          onReplaceDirection={this.replaceDirection}\n          onSpriteContextMenu={this.openSpriteContextMenu}\n          selectedSprites={this.state.selectedSprites}\n          onSelectSprite={this.selectSprite}\n          resourcesLoader={this.props.resourcesLoader}\n          resourceSources={this.props.resourceSources}\n          resourceExternalEditors={this.props.resourceExternalEditors}\n          onChooseResource={this.props.onChooseResource}\n          extraBottomTools={this.props.extraBottomTools}\n          useDragHandle\n          lockAxis=\"y\"\n          axis=\"y\"\n        />\n        <ContextMenu\n          ref={spriteContextMenu =>\n            (this.spriteContextMenu = spriteContextMenu)\n          }\n          buildMenuTemplate={(i18n: I18nType) => [\n            {\n              label: i18n._(t`Delete selection`),\n              click: () => this.deleteSelection(),\n            },\n            {\n              label: i18n._(t`Duplicate selection`),\n              click: () => this.duplicateSelection(),\n            },\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\ntype State = {|\n  pointsEditorOpen: boolean,\n  collisionMasksEditorOpen: boolean,\n|};\n\nexport default class SpriteEditor extends React.Component<EditorProps, State> {\n  state = {\n    pointsEditorOpen: false,\n    collisionMasksEditorOpen: false,\n  };\n\n  resourcesLoader: typeof ResourcesLoader;\n\n  constructor(props: EditorProps) {\n    super(props);\n\n    this.resourcesLoader = ResourcesLoader;\n  }\n\n  openPointsEditor = (open: boolean = true) => {\n    this.setState({\n      pointsEditorOpen: open,\n    });\n  };\n\n  openCollisionMasksEditor = (open: boolean = true) => {\n    this.setState({\n      collisionMasksEditorOpen: open,\n    });\n  };\n\n  render() {\n    const {\n      object,\n      project,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n      onSizeUpdated,\n      objectName,\n    } = this.props;\n    const spriteObject = gd.asSpriteObject(object);\n\n    return (\n      <div>\n        <AnimationsListContainer\n          spriteObject={spriteObject}\n          resourcesLoader={this.resourcesLoader}\n          resourceSources={resourceSources}\n          onChooseResource={onChooseResource}\n          resourceExternalEditors={resourceExternalEditors}\n          project={project}\n          objectName={objectName}\n          onSizeUpdated={onSizeUpdated}\n          extraBottomTools={\n            <ResponsiveLineStackLayout noMargin>\n              <RaisedButton\n                label={<Trans>Edit hitboxes</Trans>}\n                primary={false}\n                onClick={() => this.openCollisionMasksEditor(true)}\n                disabled={spriteObject.getAnimationsCount() === 0}\n              />\n              <RaisedButton\n                label={<Trans>Edit points</Trans>}\n                primary={false}\n                onClick={() => this.openPointsEditor(true)}\n                disabled={spriteObject.getAnimationsCount() === 0}\n              />\n            </ResponsiveLineStackLayout>\n          }\n        />\n        {this.state.pointsEditorOpen && (\n          <Dialog\n            actions={\n              <FlatButton\n                label={<Trans>Close</Trans>}\n                primary\n                onClick={() => this.openPointsEditor(false)}\n              />\n            }\n            secondaryActions={[\n              <HelpButton\n                helpPagePath=\"/objects/sprite/edit-points\"\n                key=\"help\"\n              />,\n            ]}\n            cannotBeDismissed={true}\n            noMargin\n            onRequestClose={() => this.openPointsEditor(false)}\n            open={this.state.pointsEditorOpen}\n          >\n            <PointsEditor\n              object={spriteObject}\n              resourcesLoader={this.resourcesLoader}\n              project={project}\n              onPointsUpdated={\n                () =>\n                  this.forceUpdate() /*Force update to ensure dialog is properly positioned*/\n              }\n            />\n          </Dialog>\n        )}\n        {this.state.collisionMasksEditorOpen && (\n          <Dialog\n            actions={\n              <FlatButton\n                label={<Trans>Close</Trans>}\n                primary\n                onClick={() => this.openCollisionMasksEditor(false)}\n              />\n            }\n            secondaryActions={[\n              <HelpButton\n                helpPagePath=\"/objects/sprite/collision-mask\"\n                key=\"help\"\n              />,\n            ]}\n            noMargin\n            cannotBeDismissed={true}\n            onRequestClose={() => this.openCollisionMasksEditor(false)}\n            open={this.state.collisionMasksEditorOpen}\n          >\n            <CollisionMasksEditor\n              object={spriteObject}\n              resourcesLoader={this.resourcesLoader}\n              project={project}\n              onCollisionMasksUpdated={\n                () =>\n                  this.forceUpdate() /*Force update to ensure dialog is properly positioned*/\n              }\n            />\n          </Dialog>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\r\nimport { Trans } from '@lingui/macro';\r\n\r\nimport React, { Component } from 'react';\r\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\r\nimport { mapFor } from '../../../Utils/MapFor';\r\nimport Add from '@material-ui/icons/Add';\r\nimport DirectionTools from './DirectionTools';\r\nimport MiniToolbar from '../../../UI/MiniToolbar';\r\nimport ImageThumbnail, {\r\n  thumbnailContainerStyle,\r\n} from '../../../ResourcesList/ResourceThumbnail/ImageThumbnail';\r\nimport {\r\n  copySpritePoints,\r\n  copySpritePolygons,\r\n  allDirectionSpritesHaveSamePointsAs,\r\n  allDirectionSpritesHaveSameCollisionMasksAs,\r\n} from './Utils/SpriteObjectHelper';\r\nimport ResourcesLoader from '../../../ResourcesLoader';\r\nimport {\r\n  type ResourceSource,\r\n  type ChooseResourceFunction,\r\n} from '../../../ResourcesList/ResourceSource.flow';\r\nimport { type ResourceExternalEditor } from '../../../ResourcesList/ResourceExternalEditor.flow';\r\nimport { applyResourceDefaults } from '../../../ResourcesList/ResourceUtils';\r\nimport FlatButton from '../../../UI/FlatButton';\r\nimport ThemeConsumer from '../../../UI/Theme/ThemeConsumer';\r\nconst gd: libGDevelop = global.gd;\r\nconst path = require('path');\r\n\r\nconst SPRITE_SIZE = 100; //TODO: Factor with Thumbnail\r\n\r\nconst styles = {\r\n  spritesList: {\r\n    whiteSpace: 'nowrap',\r\n    overflowY: 'hidden',\r\n  },\r\n  thumbnailExtraStyle: {\r\n    marginRight: 10,\r\n  },\r\n  spriteThumbnailImage: {\r\n    maxWidth: SPRITE_SIZE,\r\n    maxHeight: SPRITE_SIZE,\r\n    verticalAlign: 'middle',\r\n  },\r\n};\r\n\r\nconst AddSpriteButton = SortableElement(({ displayHint, onAdd }) => {\r\n  return (\r\n    <ThemeConsumer>\r\n      {muiTheme => (\r\n        <div\r\n          style={{\r\n            ...thumbnailContainerStyle,\r\n            backgroundColor: muiTheme.list.itemsBackgroundColor,\r\n          }}\r\n        >\r\n          <FlatButton\r\n            onClick={onAdd}\r\n            label={<Trans>Add</Trans>}\r\n            icon={<Add />}\r\n          />\r\n        </div>\r\n      )}\r\n    </ThemeConsumer>\r\n  );\r\n});\r\n\r\nconst SortableSpriteThumbnail = SortableElement(\r\n  ({ sprite, project, resourcesLoader, selected, onSelect, onContextMenu }) => {\r\n    return (\r\n      <ImageThumbnail\r\n        selectable\r\n        selected={selected}\r\n        onSelect={onSelect}\r\n        onContextMenu={onContextMenu}\r\n        resourceName={sprite.getImageName()}\r\n        resourcesLoader={resourcesLoader}\r\n        project={project}\r\n        style={styles.thumbnailExtraStyle}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nconst SortableList = SortableContainer(\r\n  ({\r\n    direction,\r\n    project,\r\n    resourcesLoader,\r\n    onAddSprite,\r\n    selectedSprites,\r\n    onSelectSprite,\r\n    onSpriteContextMenu,\r\n  }) => {\r\n    const spritesCount = direction.getSpritesCount();\r\n    return (\r\n      <div style={styles.spritesList}>\r\n        {[\r\n          ...mapFor(0, spritesCount, i => {\r\n            const sprite = direction.getSprite(i);\r\n            return (\r\n              <SortableSpriteThumbnail\r\n                sprite={sprite}\r\n                key={sprite.ptr}\r\n                index={i}\r\n                selected={!!selectedSprites[sprite.ptr]}\r\n                onContextMenu={(x, y) => onSpriteContextMenu(x, y, sprite)}\r\n                onSelect={selected => onSelectSprite(sprite, selected)}\r\n                resourcesLoader={resourcesLoader}\r\n                project={project}\r\n              />\r\n            );\r\n          }),\r\n          <AddSpriteButton\r\n            displayHint={!direction.getSpritesCount()}\r\n            key=\"add-sprite-button\"\r\n            disabled\r\n            index={spritesCount}\r\n            onAdd={onAddSprite}\r\n          />,\r\n        ]}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\n/**\r\n * Check if all sprites of the given direction have the same points and collision masks\r\n */\r\nconst checkDirectionPointsAndCollisionsMasks = (direction: gdDirection) => {\r\n  let allDirectionSpritesHaveSamePoints = false;\r\n  let allDirectionSpritesHaveSameCollisionMasks = false;\r\n  if (direction.getSpritesCount() !== 0) {\r\n    allDirectionSpritesHaveSamePoints = allDirectionSpritesHaveSamePointsAs(\r\n      direction.getSprite(0),\r\n      direction\r\n    );\r\n    allDirectionSpritesHaveSameCollisionMasks = allDirectionSpritesHaveSameCollisionMasksAs(\r\n      direction.getSprite(0),\r\n      direction\r\n    );\r\n  }\r\n\r\n  return {\r\n    allDirectionSpritesHaveSamePoints,\r\n    allDirectionSpritesHaveSameCollisionMasks,\r\n  };\r\n};\r\n\r\ntype Props = {|\r\n  direction: gdDirection,\r\n  project: gdProject,\r\n  resourcesLoader: typeof ResourcesLoader,\r\n  resourceSources: Array<ResourceSource>,\r\n  resourceExternalEditors: Array<ResourceExternalEditor>,\r\n  onChooseResource: ChooseResourceFunction,\r\n  onSpriteContextMenu: (x: number, y: number, sprite: gdSprite) => void,\r\n  selectedSprites: {\r\n    [number]: boolean,\r\n  },\r\n  onSelectSprite: (sprite: gdSprite, selected: boolean) => void,\r\n  onReplaceByDirection: (newDirection: gdDirection) => void,\r\n  onChangeName: (newAnimationName: string) => void, // Used by piskel to set the name, if there is no name\r\n  objectName: string, // This is used for the default name of images created with Piskel.\r\n  animationName: string, // This is used for the default name of images created with Piskel.\r\n|};\r\n\r\nexport default class SpritesList extends Component<Props, void> {\r\n  onSortEnd = ({\r\n    oldIndex,\r\n    newIndex,\r\n  }: {\r\n    oldIndex: number,\r\n    newIndex: number,\r\n  }) => {\r\n    this.props.direction.moveSprite(oldIndex, newIndex);\r\n    this.forceUpdate();\r\n  };\r\n\r\n  onAddSprite = () => {\r\n    const {\r\n      resourceSources,\r\n      onChooseResource,\r\n      project,\r\n      direction,\r\n    } = this.props;\r\n    if (!resourceSources) return;\r\n    const sources = resourceSources.filter(source => source.kind === 'image');\r\n    if (!sources.length) return;\r\n\r\n    const {\r\n      allDirectionSpritesHaveSameCollisionMasks,\r\n      allDirectionSpritesHaveSamePoints,\r\n    } = checkDirectionPointsAndCollisionsMasks(direction);\r\n\r\n    onChooseResource(sources[0].name).then(resources => {\r\n      resources.forEach(resource => {\r\n        applyResourceDefaults(project, resource);\r\n        project.getResourcesManager().addResource(resource);\r\n\r\n        const sprite = new gd.Sprite();\r\n        sprite.setImageName(resource.getName());\r\n        if (allDirectionSpritesHaveSamePoints) {\r\n          copySpritePoints(direction.getSprite(0), sprite);\r\n        }\r\n        if (allDirectionSpritesHaveSameCollisionMasks) {\r\n          copySpritePolygons(direction.getSprite(0), sprite);\r\n        }\r\n        direction.addSprite(sprite);\r\n      });\r\n\r\n      // Important, we are responsible for deleting the resources that were given to us.\r\n      // Otherwise we have a memory leak, as calling addResource is making a copy of the resource.\r\n      resources.forEach(resource => resource.delete());\r\n\r\n      this.forceUpdate();\r\n    });\r\n  };\r\n\r\n  editWith = (externalEditor: ResourceExternalEditor) => {\r\n    const {\r\n      project,\r\n      direction,\r\n      resourcesLoader,\r\n      onReplaceByDirection,\r\n      onChangeName,\r\n      objectName,\r\n      animationName,\r\n    } = this.props;\r\n    const resourceNames = mapFor(0, direction.getSpritesCount(), i => {\r\n      return direction.getSprite(i).getImageName();\r\n    });\r\n\r\n    const {\r\n      allDirectionSpritesHaveSameCollisionMasks,\r\n      allDirectionSpritesHaveSamePoints,\r\n    } = checkDirectionPointsAndCollisionsMasks(direction);\r\n\r\n    let externalEditorData = {};\r\n    const metadataRaw = direction.getMetadata();\r\n    if (metadataRaw) {\r\n      try {\r\n        externalEditorData = JSON.parse(metadataRaw);\r\n      } catch (e) {\r\n        console.error('Malformed metadata', e);\r\n      }\r\n    }\r\n\r\n    externalEditor.edit({\r\n      project,\r\n      resourcesLoader,\r\n      singleFrame: false,\r\n      resourceNames,\r\n      extraOptions: {\r\n        fps:\r\n          direction.getTimeBetweenFrames() > 0\r\n            ? 1 / direction.getTimeBetweenFrames()\r\n            : 1,\r\n        name:\r\n          animationName ||\r\n          (resourceNames.length > 0\r\n            ? path.basename(resourceNames[0], path.extname(resourceNames[0]))\r\n            : objectName),\r\n        isLooping: direction.isLooping(),\r\n        externalEditorData,\r\n      },\r\n      onChangesSaved: resources => {\r\n        const newDirection = new gd.Direction();\r\n        newDirection.setTimeBetweenFrames(direction.getTimeBetweenFrames());\r\n        newDirection.setLoop(direction.isLooping());\r\n        resources.forEach(resource => {\r\n          const sprite = new gd.Sprite();\r\n          sprite.setImageName(resource.name);\r\n          // Restore collision masks and points\r\n          if (\r\n            resource.originalIndex !== undefined &&\r\n            resource.originalIndex !== null\r\n          ) {\r\n            const originalSprite = direction.getSprite(resource.originalIndex);\r\n            copySpritePoints(originalSprite, sprite);\r\n            copySpritePolygons(originalSprite, sprite);\r\n          } else {\r\n            if (allDirectionSpritesHaveSamePoints) {\r\n              copySpritePoints(direction.getSprite(0), sprite);\r\n            }\r\n            if (allDirectionSpritesHaveSameCollisionMasks) {\r\n              copySpritePolygons(direction.getSprite(0), sprite);\r\n            }\r\n          }\r\n          newDirection.addSprite(sprite);\r\n          sprite.delete();\r\n        });\r\n\r\n        // set metadata if there is such on the direction\r\n        if (resources[0].metadata) {\r\n          newDirection.setMetadata(JSON.stringify(resources[0].metadata));\r\n        }\r\n\r\n        // Burst the ResourcesLoader cache to force images to be reloaded (and not cached by the browser).\r\n        resourcesLoader.burstUrlsCacheForResources(project, resourceNames);\r\n        onReplaceByDirection(newDirection);\r\n        // Set optional animation name if the user hasn't done so\r\n        if (resources[0].newAnimationName) {\r\n          onChangeName(resources[0].newAnimationName);\r\n        }\r\n        newDirection.delete();\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MiniToolbar justifyContent=\"flex-end\" smallest>\r\n          <DirectionTools\r\n            direction={this.props.direction}\r\n            resourcesLoader={this.props.resourcesLoader}\r\n            project={this.props.project}\r\n            resourceExternalEditors={this.props.resourceExternalEditors}\r\n            onEditWith={this.editWith}\r\n          />\r\n        </MiniToolbar>\r\n        <SortableList\r\n          resourcesLoader={this.props.resourcesLoader}\r\n          direction={this.props.direction}\r\n          project={this.props.project}\r\n          onSortEnd={this.onSortEnd}\r\n          onAddSprite={this.onAddSprite}\r\n          selectedSprites={this.props.selectedSprites}\r\n          onSelectSprite={this.props.onSelectSprite}\r\n          onSpriteContextMenu={this.props.onSpriteContextMenu}\r\n          helperClass=\"sortable-helper\"\r\n          lockAxis=\"x\"\r\n          axis=\"x\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// @flow\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { I18n } from '@lingui/react';\nimport TextField from '@material-ui/core/TextField';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport ListIcon from './ListIcon';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { MarkdownText } from './MarkdownText';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport ListItem from '@material-ui/core/ListItem';\nimport { computeTextFieldStyleProps } from './TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport muiZIndex from '@material-ui/core/styles/zIndex';\nimport { shouldCloseOrCancel } from './KeyboardShortcuts/InteractionKeys';\n\ntype Option =\n  | {|\n      type: 'separator',\n    |}\n  | {|\n      text: string, // The text used for filtering. If empty, item is always shown.\n      value: string, // The value to show on screen and to be selected\n      onClick?: () => void, // If defined, will be called when the item is clicked. onChange/onChoose won't be called.\n      renderIcon?: ?() => React.Element<typeof ListIcon | typeof SvgIcon>,\n    |};\n\nexport type DataSource = Array<Option>;\n\ntype Props = {|\n  value: string,\n  onChange: string => void,\n  onChoose?: string => void,\n  dataSource: DataSource,\n\n  id?: string,\n  onBlur?: (event: SyntheticFocusEvent<HTMLInputElement>) => void,\n  onRequestClose?: () => void,\n  errorText?: React.Node,\n  disabled?: boolean,\n  floatingLabelText?: React.Node,\n  helperMarkdownText?: ?string,\n  hintText?: MessageDescriptor | string,\n  fullWidth?: boolean,\n  margin?: 'none' | 'dense',\n  textFieldStyle?: Object,\n  openOnFocus?: boolean,\n  style?: Object,\n|};\n\nexport type SemiControlledAutoCompleteInterface = {|\n  focus: () => void,\n  forceInputValueTo: (newValue: string) => void,\n|};\n\nconst styles = {\n  container: {\n    position: 'relative',\n    width: '100%',\n  },\n  listItem: {\n    padding: 0,\n    margin: 0,\n    display: 'inline-block',\n    whiteSpace: 'nowrap',\n    width: 'calc(100%)',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n};\n\nconst useStyles = makeStyles({\n  option: {\n    cursor: 'default',\n  },\n  listbox: {\n    padding: 0,\n    margin: 0,\n  },\n  input: {\n    width: 'auto',\n    flexGrow: 1,\n  },\n  inputRoot: {\n    flexWrap: 'wrap',\n  },\n  popper: {\n    zIndex: muiZIndex.tooltip + 100,\n  },\n});\n\nconst renderItem = (option: Option, state: Object): React.Node => {\n  if (option.type && option.type === 'separator') {\n    return (\n      <ListItem\n        divider\n        disableGutters\n        component={'div'}\n        style={styles.listItem}\n      />\n    );\n  }\n  return (\n    <ListItem component={'div'} style={styles.listItem}>\n      {option.renderIcon && <ListItemIcon>{option.renderIcon()}</ListItemIcon>}\n      {option.value}\n    </ListItem>\n  );\n};\n\nconst isOptionDisabled = (option: Option) =>\n  option.type === 'separator' ? true : false;\n\nconst filterFunction = (\n  options: DataSource,\n  state: Object,\n  value: string\n): DataSource => {\n  const lowercaseInputValue = value.toLowerCase();\n  const optionList = options.filter(option => {\n    if (option.type === 'separator') return true;\n    if (!option.text) return true;\n    return option.text.toLowerCase().indexOf(lowercaseInputValue) !== -1;\n  });\n\n  if (\n    !optionList.filter(option => option.type !== 'separator' && option.value)\n      .length\n  )\n    return [];\n\n  // Remove divider(s) if they are at the start or end of array\n  while (\n    optionList[optionList.length - 1] !== undefined &&\n    optionList[optionList.length - 1].type !== undefined\n  )\n    optionList.pop();\n  while (optionList[0] !== undefined && optionList[0].type !== undefined)\n    optionList.shift();\n\n  return optionList;\n};\n\nconst handleChange = (\n  input: HTMLInputElement,\n  option: Option,\n  props: Props\n): void => {\n  if (option.type === 'separator') return;\n  else if (option.onClick) option.onClick();\n  else {\n    // Force the input to the selected value. We do this, bypassing inputValue state,\n    // because the change could be immediately followed by a blur, in which case the blur\n    // must have the updated value.\n    // Search for \"blur-value\" in this file for the rest of this \"workaround\".\n    input.value = option.value;\n\n    // Call the props to notify of the change. Note that if the component is blurred just after,\n    // onChange could be called again. Hence why we immediately set the input.value below.\n    // Search for \"blur-value\" in this file for the rest of this \"workaround\".\n    if (props.onChoose) {\n      props.onChoose(option.value);\n    } else {\n      props.onChange(option.value);\n    }\n\n    if (props.onRequestClose) {\n      props.onRequestClose();\n    }\n  }\n};\n\nconst getDefaultStylingProps = (\n  params: Object,\n  value: string,\n  props: Props\n): Object => {\n  const { InputProps, inputProps, InputLabelProps, ...other } = params;\n  return {\n    ...other,\n    InputProps: {\n      ...InputProps,\n      className: null,\n      endAdornment: null,\n    },\n    inputProps: {\n      ...inputProps,\n      className: null,\n      disabled: props.disabled,\n      onKeyDown: (event: SyntheticKeyboardEvent<HTMLInputElement>): void => {\n        if (shouldCloseOrCancel(event) && props.onRequestClose)\n          props.onRequestClose();\n      },\n    },\n  };\n};\n\nconst getOptionLabel = (option: Option, value: string): string =>\n  option.value ? option.value : value;\n\nexport default React.forwardRef<Props, SemiControlledAutoCompleteInterface>(\n  function SemiControlledAutoComplete(props: Props, ref) {\n    const input = React.useRef((null: ?HTMLInputElement));\n    const [inputValue, setInputValue] = useState((null: string | null));\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const classes = useStyles();\n\n    React.useImperativeHandle(ref, () => ({\n      focus: () => {\n        if (input.current) input.current.focus();\n      },\n      forceInputValueTo: (newValue: string) => {\n        if (inputValue !== null) setInputValue(newValue);\n      },\n    }));\n\n    const currentInputValue = inputValue !== null ? inputValue : props.value;\n\n    const helperText = props.helperMarkdownText ? (\n      <MarkdownText source={props.helperMarkdownText} />\n    ) : null;\n\n    const handleInputChange = (\n      event: SyntheticKeyboardEvent<HTMLInputElement>,\n      value: string,\n      reason: string\n    ): void => {\n      setInputValue(value);\n      if (!isMenuOpen) setIsMenuOpen(true);\n    };\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Autocomplete\n            freeSolo\n            classes={classes}\n            onChange={(\n              event: SyntheticKeyboardEvent<HTMLInputElement>,\n              option: Option | null\n            ) => {\n              if (option === null || !input.current) return;\n\n              handleChange(input.current, option, props);\n              setIsMenuOpen(false);\n            }}\n            open={isMenuOpen}\n            style={{\n              ...props.style,\n              ...styles.container,\n            }}\n            inputValue={currentInputValue}\n            value={currentInputValue}\n            onInputChange={handleInputChange}\n            options={props.dataSource}\n            renderOption={renderItem}\n            getOptionDisabled={isOptionDisabled}\n            getOptionLabel={(option: Option) =>\n              getOptionLabel(option, currentInputValue)\n            }\n            filterOptions={(options: DataSource, state) =>\n              filterFunction(options, state, currentInputValue)\n            }\n            renderInput={params => {\n              const {\n                InputProps,\n                inputProps,\n                ...otherStylingProps\n              } = getDefaultStylingProps(params, currentInputValue, props);\n              return (\n                <TextField\n                  InputProps={{\n                    ...InputProps,\n                    placeholder:\n                      typeof props.hintText === 'string'\n                        ? props.hintText\n                        : i18n._(props.hintText),\n                  }}\n                  inputProps={{\n                    ...inputProps,\n                    onFocus: (\n                      event: SyntheticFocusEvent<HTMLInputElement>\n                    ): void => {\n                      setIsMenuOpen(true);\n                      if (input.current)\n                        input.current.selectionStart =\n                          input.current.value.length;\n                    },\n                    // Redefine onBlur to call onChange when the component is blurred.\n                    // We do this because the default behavior of the Autocomplete is not\n                    // to call onChange when blurred (though it should according to the docs?).\n                    onBlur: (\n                      event: SyntheticFocusEvent<HTMLInputElement>\n                    ): void => {\n                      setInputValue(null);\n                      setIsMenuOpen(false);\n\n                      // Use the value of the input, rather than inputValue\n                      // that could be not updated.\n                      // Search for \"blur-value\" in this file for the rest of this \"workaround\".\n                      props.onChange(event.currentTarget.value);\n\n                      if (props.onBlur) props.onBlur(event);\n                    },\n                    onMouseDown: (\n                      event: SyntheticMouseEvent<HTMLInputElement>\n                    ): void => {\n                      // Toggle the menu when clicked and empty\n                      if (input.current && !input.current.value.length)\n                        setIsMenuOpen(!isMenuOpen);\n                    },\n                  }}\n                  {...otherStylingProps}\n                  {...computeTextFieldStyleProps(props)}\n                  style={props.textFieldStyle}\n                  label={props.floatingLabelText}\n                  inputRef={input}\n                  disabled={props.disabled}\n                  error={!!props.errorText}\n                  helperText={helperText || props.errorText}\n                  fullWidth={props.fullWidth}\n                />\n              );\n            }}\n          />\n        )}\n      </I18n>\n    );\n  }\n);\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport EmptyMessage from '../../../../UI/EmptyMessage';\nimport { Line, Column } from '../../../../UI/Grid';\nimport { mapFor } from '../../../../Utils/MapFor';\nimport PointsList from './PointsList';\nimport PointsPreview from './PointsPreview';\nimport ImagePreview from '../../../../ResourcesList/ResourcePreview/ImagePreview';\nimport {\n  getCurrentElements,\n  allSpritesHaveSamePointsAs,\n  copyAnimationsSpritePoints,\n} from '../Utils/SpriteObjectHelper';\nimport SpriteSelector from '../Utils/SpriteSelector';\nimport Window from '../../../../Utils/Window';\nimport every from 'lodash/every';\nconst gd /*TODO: add flow in this file */ = global.gd;\n\nexport default class PointsEditor extends Component {\n  state = {\n    animationIndex: 0,\n    directionIndex: 0,\n    spriteIndex: 0,\n    samePointsForAnimations: true,\n    samePointsForSprites: true,\n  };\n\n  componentDidMount() {\n    this._updateSamePointsToggles();\n  }\n\n  _updatePoints = () => {\n    const { object } = this.props;\n    const { animationIndex, directionIndex, spriteIndex } = this.state;\n    const spriteObject = gd.asSpriteObject(object);\n\n    const { animation, sprite } = getCurrentElements(\n      spriteObject,\n      animationIndex,\n      directionIndex,\n      spriteIndex\n    );\n\n    if (animation && sprite) {\n      if (this.state.samePointsForAnimations) {\n        mapFor(0, spriteObject.getAnimationsCount(), i => {\n          const otherAnimation = spriteObject.getAnimation(i);\n          copyAnimationsSpritePoints(sprite, otherAnimation);\n        });\n      } else if (this.state.samePointsForSprites) {\n        copyAnimationsSpritePoints(sprite, animation);\n      }\n    }\n\n    this.forceUpdate(); // Refresh the preview\n    if (this.props.onPointsUpdated) this.props.onPointsUpdated();\n  };\n\n  chooseAnimation = index => {\n    this.setState(\n      {\n        animationIndex: index,\n        directionIndex: 0,\n        spriteIndex: 0,\n      },\n      () => this._updateSamePointsToggles()\n    );\n  };\n\n  chooseDirection = index => {\n    this.setState({\n      directionIndex: index,\n      spriteIndex: 0,\n    });\n  };\n\n  chooseSprite = index => {\n    this.setState({\n      spriteIndex: index,\n    });\n  };\n\n  _updateSamePointsToggles = () => {\n    const { object } = this.props;\n    const { animationIndex, directionIndex, spriteIndex } = this.state;\n    const spriteObject = gd.asSpriteObject(object);\n\n    const { animation, sprite } = getCurrentElements(\n      spriteObject,\n      animationIndex,\n      directionIndex,\n      spriteIndex\n    );\n    if (!animation || !sprite) return;\n\n    this.setState({\n      samePointsForAnimations: every(\n        mapFor(0, spriteObject.getAnimationsCount(), i => {\n          const otherAnimation = spriteObject.getAnimation(i);\n          return allSpritesHaveSamePointsAs(sprite, otherAnimation);\n        })\n      ),\n      samePointsForSprites: allSpritesHaveSamePointsAs(sprite, animation),\n    });\n  };\n\n  _setSamePointsForAllAnimations = enable => {\n    if (enable) {\n      const answer = Window.showConfirmDialog(\n        \"Having the same points for all animations will erase and reset all the other animations points. This can't be undone. Are you sure you want to share these points amongst all the animations of the object?\"\n      );\n      if (!answer) return;\n    }\n\n    this.setState(\n      {\n        samePointsForAnimations: enable,\n        samePointsForSprites: enable ? true : this.state.samePointsForSprites,\n      },\n      () => {\n        this._updatePoints();\n      }\n    );\n  };\n\n  _setSamePointsForAllSprites = enable => {\n    if (enable) {\n      const answer = Window.showConfirmDialog(\n        \"Having the same points for all frames will erase and reset all the other frames points. This can't be undone. Are you sure you want to share these points amongst all the frames of the animation?\"\n      );\n      if (!answer) return;\n    }\n\n    this.setState(\n      {\n        samePointsForAnimations: enable\n          ? this.state.samePointsForAnimations\n          : false,\n        samePointsForSprites: enable,\n      },\n      () => {\n        this._updatePoints();\n      }\n    );\n  };\n\n  render() {\n    const { object, resourcesLoader, project } = this.props;\n    const {\n      samePointsForAnimations,\n      samePointsForSprites,\n      animationIndex,\n      directionIndex,\n      spriteIndex,\n    } = this.state;\n    const spriteObject = gd.asSpriteObject(object);\n\n    if (!object.getAnimationsCount()) return null;\n    const { hasValidSprite, sprite } = getCurrentElements(\n      spriteObject,\n      animationIndex,\n      directionIndex,\n      spriteIndex\n    );\n\n    return (\n      <div>\n        <ImagePreview\n          resourceName={hasValidSprite ? sprite.getImageName() : ''}\n          resourcesLoader={resourcesLoader}\n          project={project}\n          renderOverlay={({ imageWidth, imageHeight, imageZoomFactor }) =>\n            hasValidSprite && (\n              <PointsPreview\n                imageWidth={imageWidth}\n                imageHeight={imageHeight}\n                imageZoomFactor={imageZoomFactor}\n                pointsContainer={sprite}\n                onPointsUpdated={this._updatePoints}\n              />\n            )\n          }\n        />\n        <Line>\n          <Column expand>\n            <SpriteSelector\n              spriteObject={spriteObject}\n              animationIndex={animationIndex}\n              directionIndex={directionIndex}\n              spriteIndex={spriteIndex}\n              chooseAnimation={this.chooseAnimation}\n              chooseDirection={this.chooseDirection}\n              chooseSprite={this.chooseSprite}\n              sameForAllAnimations={samePointsForAnimations}\n              sameForAllSprites={samePointsForSprites}\n              setSameForAllAnimations={this._setSamePointsForAllAnimations}\n              setSameForAllSprites={this._setSamePointsForAllSprites}\n              setSameForAllAnimationsLabel={\n                <Trans>Share same points for all animations</Trans>\n              }\n              setSameForAllSpritesLabel={\n                <Trans>\n                  Share same points for all sprites of this animation\n                </Trans>\n              }\n            />\n          </Column>\n        </Line>\n        {!!sprite && (\n          <PointsList\n            pointsContainer={sprite}\n            onPointsUpdated={this._updatePoints}\n          />\n        )}\n        {!sprite && (\n          <EmptyMessage>\n            <Trans>Choose an animation and frame to edit the points</Trans>\n          </EmptyMessage>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableHeaderColumn,\n  TableRow,\n  TableRowColumn,\n} from '../../../../UI/Table';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport newNameGenerator from '../../../../Utils/NewNameGenerator';\nimport { mapVector } from '../../../../Utils/MapFor';\nimport Window from '../../../../Utils/Window';\nimport styles from './styles';\nimport PointRow from './PointRow';\nimport AddPointRow from './AddPointRow';\nconst gd: libGDevelop = global.gd;\n\nconst SortableAddPointRow = SortableElement(AddPointRow);\nconst SortablePointRow = SortableElement(PointRow);\n\nclass PointsListBody extends Component {\n  state = {\n    nameErrors: {},\n  };\n\n  _onPointsUpdated() {\n    this.forceUpdate();\n    this.props.onPointsUpdated();\n  }\n\n  updateOriginPointX = newValue => {\n    this.props.pointsContainer.getOrigin().setX(newValue);\n    this._onPointsUpdated();\n  };\n\n  updateOriginPointY = newValue => {\n    this.props.pointsContainer.getOrigin().setY(newValue);\n    this._onPointsUpdated();\n  };\n\n  updateCenterPointX = newValue => {\n    this.props.pointsContainer.getCenter().setX(newValue);\n    this._onPointsUpdated();\n  };\n\n  updateCenterPointY = newValue => {\n    this.props.pointsContainer.getCenter().setY(newValue);\n    this._onPointsUpdated();\n  };\n\n  updatePointX = (point, newValue) => {\n    point.setX(newValue);\n    this._onPointsUpdated();\n  };\n\n  updatePointY = (point, newValue) => {\n    point.setY(newValue);\n    this._onPointsUpdated();\n  };\n\n  render() {\n    const { pointsContainer } = this.props;\n\n    const nonDefaultPoints = pointsContainer.getAllNonDefaultPoints();\n    const pointsRows = mapVector(nonDefaultPoints, (point, i) => {\n      const pointName = point.getName();\n\n      return (\n        <SortablePointRow\n          index={i}\n          disabled\n          key={'point-' + pointName}\n          pointX={point.getX()}\n          pointY={point.getY()}\n          onChangePointX={newValue => this.updatePointX(point, newValue)}\n          onChangePointY={newValue => this.updatePointY(point, newValue)}\n          pointName={pointName}\n          nameError={this.state.nameErrors[pointName]}\n          onBlur={event => {\n            const newName = event.target.value;\n            if (pointName === newName) return;\n\n            let success = true;\n            if (pointsContainer.hasPoint(newName)) {\n              success = false;\n            } else {\n              point.setName(newName);\n            }\n\n            this.setState({\n              nameErrors: {\n                ...this.state.nameErrors,\n                [pointName]: !success,\n              },\n            });\n          }}\n          onRemove={() => {\n            const answer = Window.showConfirmDialog(\n              \"Are you sure you want to remove this point? This can't be undone.\"\n            );\n            if (!answer) return;\n\n            pointsContainer.delPoint(pointName);\n            this._onPointsUpdated();\n          }}\n        />\n      );\n    });\n\n    const originPoint = pointsContainer.getOrigin();\n    const centerPoint = pointsContainer.getCenter();\n\n    const originRow = (\n      <SortablePointRow\n        index={0}\n        key={'origin-point-row'}\n        pointName=\"Origin\"\n        pointX={originPoint.getX()}\n        pointY={originPoint.getY()}\n        onChangePointX={this.updateOriginPointX}\n        onChangePointY={this.updateOriginPointY}\n        disabled\n      />\n    );\n    const centerRow = (\n      <SortablePointRow\n        index={1}\n        key={'center-point-row'}\n        pointName=\"Center\"\n        isAutomatic={pointsContainer.isDefaultCenterPoint()}\n        pointX={centerPoint.getX()}\n        pointY={centerPoint.getY()}\n        onChangePointX={this.updateCenterPointX}\n        onChangePointY={this.updateCenterPointY}\n        disabled\n        onEdit={\n          pointsContainer.isDefaultCenterPoint()\n            ? () => {\n                pointsContainer.setDefaultCenterPoint(false);\n                this._onPointsUpdated();\n              }\n            : null\n        }\n        onRemove={\n          !pointsContainer.isDefaultCenterPoint()\n            ? () => {\n                pointsContainer.setDefaultCenterPoint(true);\n                this._onPointsUpdated();\n              }\n            : null\n        }\n      />\n    );\n\n    const addRow = (\n      <SortableAddPointRow\n        index={0}\n        key={'add-point-row'}\n        disabled\n        onAdd={() => {\n          const name = newNameGenerator('Point', name =>\n            pointsContainer.hasPoint(name)\n          );\n          const point = new gd.Point(name);\n          pointsContainer.addPoint(point);\n          point.delete();\n          this._onPointsUpdated();\n        }}\n      />\n    );\n\n    return (\n      <TableBody>{[originRow, centerRow, ...pointsRows, addRow]}</TableBody>\n    );\n  }\n}\n\nconst SortablePointsListBody = SortableContainer(PointsListBody);\nSortablePointsListBody.muiName = 'TableBody';\n\nexport default class PointsList extends Component {\n  render() {\n    return (\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHeaderColumn style={styles.handleColumn} />\n            <TableHeaderColumn>Point name</TableHeaderColumn>\n            <TableHeaderColumn style={styles.coordinateColumn}>\n              X\n            </TableHeaderColumn>\n            <TableHeaderColumn style={styles.coordinateColumn}>\n              Y\n            </TableHeaderColumn>\n            <TableRowColumn style={styles.toolColumn} />\n          </TableRow>\n        </TableHeader>\n        <SortablePointsListBody\n          pointsContainer={this.props.pointsContainer}\n          onPointsUpdated={this.props.onPointsUpdated}\n          onSortEnd={({ oldIndex, newIndex }) => {\n            // Reordering points is not supported for now\n          }}\n          helperClass=\"sortable-helper\"\n          useDragHandle\n          lockToContainerEdges\n        />\n      </Table>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport React from 'react';\nimport { TableRow, TableRowColumn } from '../../../../UI/Table';\nimport IconButton from '../../../../UI/IconButton';\nimport Delete from '@material-ui/icons/Delete';\nimport Edit from '@material-ui/icons/Edit';\nimport TextField from '../../../../UI/TextField';\nimport styles from './styles';\nimport ThemeConsumer from '../../../../UI/Theme/ThemeConsumer';\nimport Text from '../../../../UI/Text';\n\nconst PointRow = ({\n  pointName,\n  nameError,\n  onBlur,\n  onRemove,\n  pointX,\n  pointY,\n  onChangePointX,\n  onChangePointY,\n  onEdit,\n  isAutomatic,\n}) => (\n  <ThemeConsumer>\n    {muiTheme => (\n      <TableRow\n        style={{\n          backgroundColor: muiTheme.list.itemsBackgroundColor,\n        }}\n      >\n        <TableRowColumn style={styles.handleColumn}>\n          {/* <DragHandle /> Reordering point is not supported for now */}\n        </TableRowColumn>\n        <TableRowColumn>\n          <TextField\n            margin=\"none\"\n            defaultValue={pointName || 'Base layer'}\n            id={pointName}\n            fullWidth\n            errorText={nameError ? 'This name is already taken' : undefined}\n            disabled={!onBlur}\n            onBlur={onBlur}\n          />\n        </TableRowColumn>\n        <TableRowColumn style={styles.coordinateColumn}>\n          {!isAutomatic ? (\n            <TextField\n              margin=\"none\"\n              value={pointX}\n              type=\"number\"\n              id=\"point-x\"\n              onChange={(e, value) =>\n                onChangePointX(parseFloat(value || 0, 10))\n              }\n            />\n          ) : (\n            <Text noMargin>\n              <Trans>(auto)</Trans>\n            </Text>\n          )}\n        </TableRowColumn>\n        <TableRowColumn style={styles.coordinateColumn}>\n          {!isAutomatic ? (\n            <TextField\n              margin=\"none\"\n              value={pointY}\n              type=\"number\"\n              id=\"point-y\"\n              onChange={(e, value) =>\n                onChangePointY(parseFloat(value || 0, 10))\n              }\n            />\n          ) : (\n            <Text noMargin>\n              <Trans>(auto)</Trans>\n            </Text>\n          )}\n        </TableRowColumn>\n        <TableRowColumn style={styles.toolColumn}>\n          {!!onRemove && (\n            <IconButton size=\"small\" onClick={onRemove}>\n              <Delete />\n            </IconButton>\n          )}\n          {!!onEdit && (\n            <IconButton size=\"small\" onClick={onEdit}>\n              <Edit />\n            </IconButton>\n          )}\n        </TableRowColumn>\n      </TableRow>\n    )}\n  </ThemeConsumer>\n);\n\nexport default PointRow;\n","import React from 'react';\nimport { TableRow, TableRowColumn } from '../../../../UI/Table';\nimport Add from '@material-ui/icons/Add';\nimport IconButton from '../../../../UI/IconButton';\nimport styles from './styles';\n\nconst AddPointRow = ({ onAdd }) => (\n  <TableRow>\n    <TableRowColumn style={styles.handleColumn} />\n    <TableRowColumn />\n    <TableRowColumn style={styles.coordinateColumn} />\n    <TableRowColumn style={styles.coordinateColumn} />\n    <TableRowColumn style={styles.toolColumn}>\n      <IconButton size=\"small\" onClick={onAdd}>\n        <Add />\n      </IconButton>\n    </TableRowColumn>\n  </TableRow>\n);\n\nexport default AddPointRow;\n","// @flow\nimport React from 'react';\nimport { mapVector } from '../../../../Utils/MapFor';\n\nconst styles = {\n  container: {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n  },\n};\n\nconst pointKindIdentifiers = {\n  NORMAL: 1,\n  ORIGIN: 2,\n  CENTER: 3,\n};\ntype PointKind = 1 | 2 | 3;\n\ntype Props = {|\n  pointsContainer: gdSprite, // Could potentially be generalized to other things than Sprite in the future.\n  imageWidth: number,\n  imageHeight: number,\n  imageZoomFactor: number,\n  onPointsUpdated: () => void,\n|};\n\ntype State = {|\n  draggedPoint: ?gdPoint,\n  draggedPointKind: ?PointKind,\n|};\n\nexport default class PointsPreview extends React.Component<Props, State> {\n  _container: ?any;\n  state = {\n    draggedPoint: null,\n    draggedPointKind: null,\n  };\n\n  _onStartDragPoint = (draggedPoint: gdPoint, draggedPointKind: PointKind) => {\n    if (this.state.draggedPoint) return;\n\n    this.setState({\n      draggedPoint,\n      draggedPointKind,\n    });\n  };\n\n  _onEndDragPoint = () => {\n    const draggingWasDone = !!this.state.draggedPoint;\n    this.setState(\n      {\n        draggedPoint: null,\n        draggedPointKind: null,\n      },\n      () => {\n        if (draggingWasDone) this.props.onPointsUpdated();\n      }\n    );\n  };\n\n  /**\n   * Move a point with the mouse. A similar dragging implementation is done in\n   * CollisionMasksPreview (but with svg elements).\n   *\n   * TODO: This could be optimized by avoiding the forceUpdate (not sure if worth it though).\n   */\n  _onMouseMove = (event: any) => {\n    const { draggedPoint, draggedPointKind } = this.state;\n    if (!draggedPoint || !this._container) return;\n\n    const containerBoundingRect = this._container.getBoundingClientRect();\n    const xOnContainer = event.clientX - containerBoundingRect.left;\n    const yOnContainer = event.clientY - containerBoundingRect.top;\n\n    if (draggedPointKind === pointKindIdentifiers.CENTER) {\n      this.props.pointsContainer.setDefaultCenterPoint(false);\n    }\n    draggedPoint.setX(xOnContainer / this.props.imageZoomFactor);\n    draggedPoint.setY(yOnContainer / this.props.imageZoomFactor);\n    this.forceUpdate();\n  };\n\n  _renderPoint = (\n    name: string,\n    x: number,\n    y: number,\n    kind: PointKind,\n    point: gdPoint\n  ) => {\n    const imageSrc =\n      kind === pointKindIdentifiers.ORIGIN\n        ? 'res/originPoint.png'\n        : kind === pointKindIdentifiers.CENTER\n        ? 'res/centerPoint.png'\n        : 'res/point.png';\n    return (\n      <img\n        src={imageSrc}\n        style={{\n          position: 'absolute',\n          left: x,\n          top: y,\n          transform: 'translate(-6px, -5px)',\n          cursor: 'move',\n        }}\n        alt=\"\"\n        key={name}\n        onPointerDown={() => {\n          this._onStartDragPoint(point, kind);\n        }}\n      />\n    );\n  };\n\n  render() {\n    const {\n      pointsContainer,\n      imageWidth,\n      imageHeight,\n      imageZoomFactor,\n    } = this.props;\n    const nonDefaultPoints = pointsContainer.getAllNonDefaultPoints();\n    const points = mapVector(nonDefaultPoints, (point, i) =>\n      this._renderPoint(\n        point.getName(),\n        point.getX() * imageZoomFactor,\n        point.getY() * imageZoomFactor,\n        pointKindIdentifiers.NORMAL,\n        point\n      )\n    );\n\n    const originPoint = pointsContainer.getOrigin();\n    const centerPoint = pointsContainer.getCenter();\n    const automaticCenterPosition = pointsContainer.isDefaultCenterPoint();\n\n    return (\n      <div\n        style={styles.container}\n        onPointerMove={this._onMouseMove}\n        onPointerUp={this._onEndDragPoint}\n        ref={container => (this._container = container)}\n      >\n        {points}\n        {this._renderPoint(\n          'Origin',\n          originPoint.getX() * imageZoomFactor,\n          originPoint.getY() * imageZoomFactor,\n          pointKindIdentifiers.ORIGIN,\n          originPoint\n        )}\n        {this._renderPoint(\n          'Center',\n          (!automaticCenterPosition ? centerPoint.getX() : imageWidth / 2) *\n            imageZoomFactor,\n          (!automaticCenterPosition ? centerPoint.getY() : imageHeight / 2) *\n            imageZoomFactor,\n          pointKindIdentifiers.CENTER,\n          centerPoint\n        )}\n      </div>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport FlatButton from '../../../../UI/FlatButton';\nimport EmptyMessage from '../../../../UI/EmptyMessage';\nimport { Line, Column } from '../../../../UI/Grid';\nimport { mapFor } from '../../../../Utils/MapFor';\nimport PolygonsList from './PolygonsList';\nimport CollisionMasksPreview from './CollisionMasksPreview';\nimport ImagePreview from '../../../../ResourcesList/ResourcePreview/ImagePreview';\nimport {\n  getCurrentElements,\n  allSpritesHaveSameCollisionMasksAs,\n  copyAnimationsSpriteCollisionMasks,\n} from '../Utils/SpriteObjectHelper';\nimport SpriteSelector from '../Utils/SpriteSelector';\nimport Window from '../../../../Utils/Window';\nimport every from 'lodash/every';\nconst gd: libGDevelop = global.gd;\n\nexport default class CollisionMasksEditor extends Component {\n  state = {\n    animationIndex: 0,\n    directionIndex: 0,\n    spriteIndex: 0,\n    sameCollisionMasksForAnimations: true,\n    sameCollisionMasksForSprites: true,\n    spriteWidth: 0,\n    spriteHeight: 0,\n  };\n\n  componentDidMount() {\n    this._updateSameCollisionMasksToggles();\n  }\n\n  _updateCollisionMasks = () => {\n    const { object } = this.props;\n    const { animationIndex, directionIndex, spriteIndex } = this.state;\n    const spriteObject = gd.asSpriteObject(object);\n\n    const { animation, sprite } = getCurrentElements(\n      spriteObject,\n      animationIndex,\n      directionIndex,\n      spriteIndex\n    );\n\n    if (animation && sprite) {\n      if (this.state.sameCollisionMasksForAnimations) {\n        mapFor(0, spriteObject.getAnimationsCount(), i => {\n          const otherAnimation = spriteObject.getAnimation(i);\n          copyAnimationsSpriteCollisionMasks(sprite, otherAnimation);\n        });\n      } else if (this.state.sameCollisionMasksForSprites) {\n        copyAnimationsSpriteCollisionMasks(sprite, animation);\n      }\n    }\n\n    this.forceUpdate(); // Refresh the preview and the list\n    if (this.props.onCollisionMasksUpdated)\n      this.props.onCollisionMasksUpdated();\n  };\n\n  chooseAnimation = index => {\n    this.setState(\n      {\n        animationIndex: index,\n        directionIndex: 0,\n        spriteIndex: 0,\n      },\n      () => this._updateSameCollisionMasksToggles()\n    );\n  };\n\n  chooseDirection = index => {\n    this.setState({\n      directionIndex: index,\n      spriteIndex: 0,\n    });\n  };\n\n  chooseSprite = index => {\n    this.setState({\n      spriteIndex: index,\n    });\n  };\n\n  _updateSameCollisionMasksToggles = () => {\n    const { object } = this.props;\n    const { animationIndex, directionIndex, spriteIndex } = this.state;\n    const spriteObject = gd.asSpriteObject(object);\n\n    const { animation, sprite } = getCurrentElements(\n      spriteObject,\n      animationIndex,\n      directionIndex,\n      spriteIndex\n    );\n    if (!animation || !sprite) return;\n\n    this.setState({\n      sameCollisionMasksForAnimations: every(\n        mapFor(0, spriteObject.getAnimationsCount(), i => {\n          const otherAnimation = spriteObject.getAnimation(i);\n          return allSpritesHaveSameCollisionMasksAs(sprite, otherAnimation);\n        })\n      ),\n      sameCollisionMasksForSprites: allSpritesHaveSameCollisionMasksAs(\n        sprite,\n        animation\n      ),\n    });\n  };\n\n  _onSetCollisionMaskAutomatic = (automatic: boolean = true) => {\n    const { object } = this.props;\n    const { animationIndex, directionIndex, spriteIndex } = this.state;\n    const spriteObject = gd.asSpriteObject(object);\n\n    const { sprite } = getCurrentElements(\n      spriteObject,\n      animationIndex,\n      directionIndex,\n      spriteIndex\n    );\n    if (!sprite) return;\n\n    sprite.setCollisionMaskAutomatic(automatic);\n    this._updateCollisionMasks();\n  };\n\n  _setSameCollisionMasksForAllAnimations = enable => {\n    if (enable) {\n      const answer = Window.showConfirmDialog(\n        \"Having the same collision masks for all animations will erase and reset all the other animations collision masks. This can't be undone. Are you sure you want to share these collision masks amongst all the animations of the object?\"\n      );\n      if (!answer) return;\n    }\n\n    this.setState(\n      {\n        sameCollisionMasksForAnimations: enable,\n        sameCollisionMasksForSprites: enable\n          ? true\n          : this.state.sameCollisionMasksForSprites,\n      },\n      () => {\n        this._updateCollisionMasks();\n      }\n    );\n  };\n\n  _setSameCollisionMasksForAllSprites = enable => {\n    if (enable) {\n      const answer = Window.showConfirmDialog(\n        \"Having the same collision masks for all frames will erase and reset all the other frames collision masks. This can't be undone. Are you sure you want to share these collision masks amongst all the frames of the animation?\"\n      );\n      if (!answer) return;\n    }\n\n    this.setState(\n      {\n        sameCollisionMasksForAnimations: enable\n          ? this.state.sameCollisionMasksForAnimations\n          : false,\n        sameCollisionMasksForSprites: enable,\n      },\n      () => {\n        this._updateCollisionMasks();\n      }\n    );\n  };\n\n  _setCurrentSpriteSize = (spriteWidth: number, spriteHeight: number) => {\n    this.setState({\n      spriteWidth,\n      spriteHeight,\n    });\n  };\n\n  render() {\n    const { object, resourcesLoader, project } = this.props;\n    const {\n      sameCollisionMasksForAnimations,\n      sameCollisionMasksForSprites,\n      animationIndex,\n      directionIndex,\n      spriteIndex,\n      spriteWidth,\n      spriteHeight,\n    } = this.state;\n    const spriteObject = gd.asSpriteObject(object);\n\n    if (!object.getAnimationsCount()) return null;\n    const { hasValidSprite, sprite } = getCurrentElements(\n      spriteObject,\n      animationIndex,\n      directionIndex,\n      spriteIndex\n    );\n\n    return (\n      <div>\n        <ImagePreview\n          resourceName={hasValidSprite ? sprite.getImageName() : ''}\n          resourcesLoader={resourcesLoader}\n          project={project}\n          onSize={this._setCurrentSpriteSize}\n          renderOverlay={({ imageWidth, imageHeight, imageZoomFactor }) =>\n            hasValidSprite && (\n              <CollisionMasksPreview\n                imageWidth={imageWidth}\n                imageHeight={imageHeight}\n                imageZoomFactor={imageZoomFactor}\n                isDefaultBoundingBox={sprite.isCollisionMaskAutomatic()}\n                polygons={sprite.getCustomCollisionMask()}\n                onPolygonsUpdated={this._updateCollisionMasks}\n              />\n            )\n          }\n        />\n        <Line>\n          <Column expand>\n            <SpriteSelector\n              spriteObject={spriteObject}\n              animationIndex={animationIndex}\n              directionIndex={directionIndex}\n              spriteIndex={spriteIndex}\n              chooseAnimation={this.chooseAnimation}\n              chooseDirection={this.chooseDirection}\n              chooseSprite={this.chooseSprite}\n              sameForAllAnimations={sameCollisionMasksForAnimations}\n              sameForAllSprites={sameCollisionMasksForSprites}\n              setSameForAllAnimations={\n                this._setSameCollisionMasksForAllAnimations\n              }\n              setSameForAllSprites={this._setSameCollisionMasksForAllSprites}\n              setSameForAllAnimationsLabel={\n                <Trans>Share same collision masks for all animations</Trans>\n              }\n              setSameForAllSpritesLabel={\n                <Trans>\n                  Share same collision masks for all sprites of this animation\n                </Trans>\n              }\n            />\n          </Column>\n        </Line>\n        {!!sprite && !sprite.isCollisionMaskAutomatic() && (\n          <React.Fragment>\n            <PolygonsList\n              polygons={sprite.getCustomCollisionMask()}\n              onPolygonsUpdated={this._updateCollisionMasks}\n              spriteWidth={spriteWidth}\n              spriteHeight={spriteHeight}\n            />\n            <Line justifyContent=\"center\">\n              <FlatButton\n                label={<Trans>Restore the default collision mask</Trans>}\n                primary={false}\n                onClick={() => this._onSetCollisionMaskAutomatic(true)}\n              />\n            </Line>\n          </React.Fragment>\n        )}\n        {!!sprite && sprite.isCollisionMaskAutomatic() && (\n          <React.Fragment>\n            <EmptyMessage>\n              <Trans>\n                This sprite uses the default collision mask, a rectangle that is\n                as large as the sprite.\n              </Trans>\n            </EmptyMessage>\n            <Line justifyContent=\"center\">\n              <FlatButton\n                label={<Trans>Use a custom collision mask</Trans>}\n                primary={false}\n                onClick={() => this._onSetCollisionMaskAutomatic(false)}\n              />\n            </Line>\n          </React.Fragment>\n        )}\n        {!sprite && (\n          <EmptyMessage>\n            <Trans>\n              Choose an animation and frame to edit the collision masks\n            </Trans>\n          </EmptyMessage>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\nimport React, { Component } from 'react';\nimport flatten from 'lodash/flatten';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableHeaderColumn,\n  TableRow,\n  TableRowColumn,\n} from '../../../../UI/Table';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport { mapVector } from '../../../../Utils/MapFor';\nimport styles from './styles';\nimport VerticeRow from './VerticeRow';\nimport PolygonRow from './PolygonRow';\nimport AddVerticeRow from './AddVerticeRow';\nimport AddPolygonRow from './AddPolygonRow';\nconst gd = global.gd;\n\nconst SortableAddPolygonRow = SortableElement(AddPolygonRow);\nconst SortableAddVerticeRow = SortableElement(AddVerticeRow);\nconst SortableVerticeRow = SortableElement(VerticeRow);\nconst SortablePolygonRow = SortableElement(PolygonRow);\n\ntype PolygonsListBodyProps = {|\n  polygons: gdVectorPolygon2d,\n  onPolygonsUpdated: () => void,\n\n  // Sprite size is useful to make sure polygon vertices\n  // are not put outside the sprite bounding box, which is not supported:\n  spriteWidth: number,\n  spriteHeight: number,\n|};\n\nclass PolygonsListBody extends Component<PolygonsListBodyProps, void> {\n  _onPolygonUpdated() {\n    this.forceUpdate();\n    this.props.onPolygonsUpdated();\n  }\n\n  updateVerticeX = (vertice, newValue) => {\n    // Ensure vertice stays inside the sprite bounding box.\n    vertice.set_x(Math.min(this.props.spriteWidth, Math.max(newValue, 0)));\n    this._onPolygonUpdated();\n  };\n\n  updateVerticeY = (vertice, newValue) => {\n    // Ensure vertice stays inside the sprite bounding box.\n    vertice.set_y(Math.min(this.props.spriteHeight, Math.max(newValue, 0)));\n    this._onPolygonUpdated();\n  };\n\n  render() {\n    const { polygons } = this.props;\n\n    const polygonRows = flatten(\n      mapVector(polygons, (polygon, i) => {\n        const vertices = polygon.getVertices();\n        const isConvex = polygon.isConvex();\n\n        return [\n          <SortablePolygonRow\n            index={i}\n            disabled\n            key={'polygon-' + i}\n            polygon={polygon}\n            onRemove={() => {\n              gd.removeFromVectorPolygon2d(polygons, i);\n              this._onPolygonUpdated();\n            }}\n            isConvex={isConvex}\n            verticesCount={vertices.size()}\n          />,\n          mapVector(vertices, (vertice, j) => (\n            <SortableVerticeRow\n              index={i}\n              disabled\n              key={`polygon-${i}-vertice-${j}`}\n              verticeX={vertice.get_x()}\n              verticeY={vertice.get_y()}\n              onChangeVerticeX={newValue =>\n                this.updateVerticeX(vertice, newValue)\n              }\n              onChangeVerticeY={newValue =>\n                this.updateVerticeY(vertice, newValue)\n              }\n              onRemove={() => {\n                gd.removeFromVectorVector2f(polygon.getVertices(), j);\n                this._onPolygonUpdated();\n              }}\n              canRemove={vertices.size() > 3}\n              hasWarning={!isConvex}\n            />\n          )),\n          <SortableAddVerticeRow\n            index={0}\n            key={`polygon-${i}-add-vertice-row`}\n            disabled\n            onAdd={() => {\n              const newVertice = new gd.Vector2f();\n              polygon.getVertices().push_back(newVertice);\n              newVertice.delete();\n\n              this._onPolygonUpdated();\n            }}\n          />,\n        ];\n      })\n    );\n\n    const addRow = (\n      <SortableAddPolygonRow\n        index={0}\n        key={'add-polygon-row'}\n        disabled\n        onAdd={() => {\n          const newPolygon = gd.Polygon2d.createRectangle(32, 32);\n          newPolygon.move(\n            this.props.spriteWidth / 2,\n            this.props.spriteHeight / 2\n          );\n          polygons.push_back(newPolygon);\n\n          this._onPolygonUpdated();\n        }}\n      />\n    );\n\n    return <TableBody>{[...polygonRows, addRow]}</TableBody>;\n  }\n}\n\nconst SortablePolygonsListBody = SortableContainer(PolygonsListBody);\nSortablePolygonsListBody.muiName = 'TableBody';\n\ntype Props = {|\n  polygons: gdVectorPolygon2d,\n  onPolygonsUpdated: () => void,\n  spriteWidth: number,\n  spriteHeight: number,\n|};\n\nexport default class PolygonsList extends Component<Props, void> {\n  render() {\n    return (\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHeaderColumn style={styles.handleColumn} />\n            <TableHeaderColumn>Polygon</TableHeaderColumn>\n            <TableHeaderColumn style={styles.coordinateColumn}>\n              X\n            </TableHeaderColumn>\n            <TableHeaderColumn style={styles.coordinateColumn}>\n              Y\n            </TableHeaderColumn>\n            <TableRowColumn style={styles.toolColumn} />\n          </TableRow>\n        </TableHeader>\n        <SortablePolygonsListBody\n          polygons={this.props.polygons}\n          onPolygonsUpdated={this.props.onPolygonsUpdated}\n          spriteWidth={this.props.spriteWidth}\n          spriteHeight={this.props.spriteHeight}\n          onSortEnd={({ oldIndex, newIndex }) => {\n            // Reordering polygons is not supported for now\n          }}\n          helperClass=\"sortable-helper\"\n          useDragHandle\n          lockToContainerEdges\n        />\n      </Table>\n    );\n  }\n}\n","import React from 'react';\nimport { TableRow, TableRowColumn } from '../../../../UI/Table';\nimport IconButton from '../../../../UI/IconButton';\nimport Delete from '@material-ui/icons/Delete';\nimport TextField from '../../../../UI/TextField';\nimport Warning from '@material-ui/icons/Warning';\nimport styles from './styles';\nimport ThemeConsumer from '../../../../UI/Theme/ThemeConsumer';\n\nconst VerticeRow = ({\n  hasWarning,\n  canRemove,\n  onRemove,\n  verticeX,\n  verticeY,\n  onChangeVerticeX,\n  onChangeVerticeY,\n}) => (\n  <ThemeConsumer>\n    {muiTheme => (\n      <TableRow\n        style={{\n          backgroundColor: muiTheme.list.itemsBackgroundColor,\n        }}\n      >\n        <TableRowColumn style={styles.handleColumn}>\n          {/* <DragHandle /> Reordering vertices is not supported for now */}\n        </TableRowColumn>\n        <TableRowColumn>{hasWarning && <Warning />}</TableRowColumn>\n        <TableRowColumn style={styles.coordinateColumn}>\n          <TextField\n            margin=\"none\"\n            value={verticeX}\n            type=\"number\"\n            id=\"vertice-x\"\n            onChange={(e, value) =>\n              onChangeVerticeX(parseFloat(value || 0, 10))\n            }\n          />\n        </TableRowColumn>\n        <TableRowColumn style={styles.coordinateColumn}>\n          <TextField\n            margin=\"none\"\n            value={verticeY}\n            type=\"number\"\n            id=\"vertice-y\"\n            onChange={(e, value) =>\n              onChangeVerticeY(parseFloat(value || 0, 10))\n            }\n          />\n        </TableRowColumn>\n        <TableRowColumn style={styles.toolColumn}>\n          {!!onRemove && (\n            <IconButton size=\"small\" onClick={onRemove} disabled={!canRemove}>\n              <Delete />\n            </IconButton>\n          )}\n        </TableRowColumn>\n      </TableRow>\n    )}\n  </ThemeConsumer>\n);\n\nexport default VerticeRow;\n","import React from 'react';\nimport { TableRow, TableRowColumn } from '../../../../UI/Table';\nimport IconButton from '../../../../UI/IconButton';\nimport Delete from '@material-ui/icons/Delete';\nimport styles from './styles';\nimport ThemeConsumer from '../../../../UI/Theme/ThemeConsumer';\n\nconst PolygonRow = ({ onRemove, isConvex, verticesCount }) => {\n  return (\n    <ThemeConsumer>\n      {muiTheme => (\n        <TableRow\n          style={{\n            backgroundColor: muiTheme.list.itemsBackgroundColor,\n          }}\n        >\n          <TableRowColumn style={styles.handleColumn}>\n            {/* <DragHandle /> Reordering polygons is not supported for now */}\n          </TableRowColumn>\n          {isConvex && (\n            <TableRowColumn>\n              {verticesCount === 3 && `Triangle`}\n              {verticesCount === 4 && `Quadrilateral`}\n              {verticesCount >= 5 && `Polygon with ${verticesCount} vertices`}\n            </TableRowColumn>\n          )}\n          {!isConvex && <TableRowColumn>Polygon is not convex!</TableRowColumn>}\n          <TableRowColumn style={styles.coordinateColumn} />\n          <TableRowColumn style={styles.coordinateColumn} />\n          <TableRowColumn style={styles.toolColumn}>\n            {!!onRemove && (\n              <IconButton size=\"small\" onClick={onRemove}>\n                <Delete />\n              </IconButton>\n            )}\n          </TableRowColumn>\n        </TableRow>\n      )}\n    </ThemeConsumer>\n  );\n};\n\nexport default PolygonRow;\n","import React from 'react';\nimport { TableRow, TableRowColumn } from '../../../../UI/Table';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport IconButton from '../../../../UI/IconButton';\nimport styles from './styles';\n\nconst AddVerticeRow = ({ onAdd }) => (\n  <TableRow>\n    <TableRowColumn style={styles.handleColumn} />\n    <TableRowColumn />\n    <TableRowColumn style={styles.coordinateColumn} />\n    <TableRowColumn style={styles.coordinateColumn} />\n    <TableRowColumn style={styles.toolColumn}>\n      <IconButton size=\"small\" onClick={onAdd}>\n        <AddCircle />\n      </IconButton>\n    </TableRowColumn>\n  </TableRow>\n);\n\nexport default AddVerticeRow;\n","import React from 'react';\nimport { TableRow, TableRowColumn } from '../../../../UI/Table';\nimport Add from '@material-ui/icons/Add';\nimport IconButton from '../../../../UI/IconButton';\nimport styles from './styles';\n\nconst AddPolygonRow = ({ onAdd }) => (\n  <TableRow>\n    <TableRowColumn style={styles.handleColumn} />\n    <TableRowColumn />\n    <TableRowColumn style={styles.coordinateColumn} />\n    <TableRowColumn style={styles.coordinateColumn} />\n    <TableRowColumn style={styles.toolColumn}>\n      <IconButton size=\"small\" onClick={onAdd}>\n        <Add />\n      </IconButton>\n    </TableRowColumn>\n  </TableRow>\n);\n\nexport default AddPolygonRow;\n","// @flow\nimport * as React from 'react';\nimport { mapVector } from '../../../../Utils/MapFor';\n\nconst styles = {\n  container: {\n    position: 'relative',\n  },\n  svg: {\n    width: '100%',\n    height: '100%',\n  },\n  vertexCircle: {\n    cursor: 'move',\n  },\n};\n\ntype Props = {|\n  polygons: gdVectorPolygon2d,\n  isDefaultBoundingBox: boolean,\n  imageWidth: number,\n  imageHeight: number,\n  imageZoomFactor: number,\n  onPolygonsUpdated: () => void,\n|};\n\ntype State = {|\n  draggedVertex: ?gdVector2f,\n|};\n\nexport default class CollisionMasksPreview extends React.Component<\n  Props,\n  State\n> {\n  _svg: any;\n  state = {\n    draggedVertex: null,\n  };\n\n  _onStartDragVertex = (draggedVertex: gdVector2f) => {\n    if (this.state.draggedVertex) return;\n\n    this.setState({\n      draggedVertex,\n    });\n  };\n\n  _onEndDragVertex = () => {\n    const draggingWasDone = !!this.state.draggedVertex;\n    this.setState(\n      {\n        draggedVertex: null,\n      },\n      () => {\n        if (draggingWasDone) this.props.onPolygonsUpdated();\n      }\n    );\n  };\n\n  /**\n   * Move a vertex with the mouse. A similar dragging implementation is done in\n   * PointsPreview (but with div and img elements).\n   *\n   * TODO: This could be optimized by avoiding the forceUpdate (not sure if worth it though).\n   */\n  _onPointerMove = (event: any) => {\n    const { draggedVertex } = this.state;\n    if (!draggedVertex) return;\n\n    const pointOnScreen = this._svg.createSVGPoint();\n    pointOnScreen.x = event.clientX;\n    pointOnScreen.y = event.clientY;\n    const screenToSvgMatrix = this._svg.getScreenCTM().inverse();\n    const pointOnSvg = pointOnScreen.matrixTransform(screenToSvgMatrix);\n\n    draggedVertex.set_x(pointOnSvg.x / this.props.imageZoomFactor);\n    draggedVertex.set_y(pointOnSvg.y / this.props.imageZoomFactor);\n    this.forceUpdate();\n  };\n\n  _renderBoundingBox() {\n    const { imageWidth, imageHeight, imageZoomFactor } = this.props;\n\n    return (\n      <polygon\n        fill=\"rgba(255,0,0,0.2)\"\n        stroke=\"rgba(255,0,0,0.5)\"\n        strokeWidth={1}\n        fileRule=\"evenodd\"\n        points={`0,0 ${imageWidth * imageZoomFactor},0 ${imageWidth *\n          imageZoomFactor},${imageHeight * imageZoomFactor} 0,${imageHeight *\n          imageZoomFactor}`}\n      />\n    );\n  }\n\n  _renderPolygons() {\n    const { polygons, imageZoomFactor } = this.props;\n\n    return (\n      <React.Fragment>\n        {mapVector(polygons, (polygon, i) => {\n          const vertices = polygon.getVertices();\n          return (\n            <polygon\n              key={`polygon-${i}`}\n              fill=\"rgba(255,0,0,0.2)\"\n              stroke=\"rgba(255,0,0,0.5)\"\n              strokeWidth={1}\n              fileRule=\"evenodd\"\n              points={mapVector(\n                vertices,\n                (vertex, j) =>\n                  `${vertex.get_x() * imageZoomFactor},${vertex.get_y() *\n                    imageZoomFactor}`\n              ).join(' ')}\n            />\n          );\n        })}\n        {mapVector(polygons, (polygon, i) => {\n          const vertices = polygon.getVertices();\n          return mapVector(vertices, (vertex, j) => (\n            <circle\n              onPointerDown={event => this._onStartDragVertex(vertex)}\n              key={`polygon-${i}-vertex-${j}`}\n              fill=\"rgba(255,0,0,0.75)\"\n              strokeWidth={1}\n              cx={vertex.get_x() * imageZoomFactor}\n              cy={vertex.get_y() * imageZoomFactor}\n              r={5}\n              style={styles.vertexCircle}\n            />\n          ));\n        })}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const { isDefaultBoundingBox } = this.props;\n\n    return (\n      <svg\n        onPointerMove={this._onPointerMove}\n        onPointerUp={this._onEndDragVertex}\n        width={this.props.imageWidth * this.props.imageZoomFactor}\n        height={this.props.imageHeight * this.props.imageZoomFactor}\n        style={styles.svg}\n        ref={svg => (this._svg = svg)}\n      >\n        {isDefaultBoundingBox && this._renderBoundingBox()}\n        {!isDefaultBoundingBox && this._renderPolygons()}\n      </svg>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { type EditorProps } from './EditorProps.flow';\nimport { Line, Column } from '../../UI/Grid';\nimport EmptyMessage from '../../UI/EmptyMessage';\n\nexport default class EmptyEditor extends React.Component<EditorProps, void> {\n  render() {\n    return (\n      <Column>\n        <Line>\n          <EmptyMessage>\n            <Trans>\n              This object does not have any specific configuration. Add it on\n              the scene and use events to interact with it.\n            </Trans>\n          </EmptyMessage>\n        </Line>\n      </Column>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Checkbox from '../../UI/Checkbox';\nimport ColorField from '../../UI/ColorField';\nimport { type EditorProps } from './EditorProps.flow';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport { ResponsiveLineStackLayout, ColumnStackLayout } from '../../UI/Layout';\nconst gd = global.gd;\n\nexport default class PanelSpriteEditor extends React.Component<\n  EditorProps,\n  void\n> {\n  render() {\n    const { object } = this.props;\n    const shapePainterObject = gd.asShapePainterObject(object);\n\n    return (\n      <ColumnStackLayout>\n        <Checkbox\n          label={\n            <Trans>\n              Draw the shapes relative to the object position on the scene\n            </Trans>\n          }\n          checked={!shapePainterObject.areCoordinatesAbsolute()}\n          onCheck={(e, checked) => {\n            if (!checked) shapePainterObject.setCoordinatesAbsolute();\n            else shapePainterObject.setCoordinatesRelative();\n            this.forceUpdate();\n          }}\n        />\n        <Checkbox\n          label={<Trans>Clear the rendered image between each frame</Trans>}\n          checked={shapePainterObject.isClearedBetweenFrames()}\n          onCheck={(e, checked) => {\n            shapePainterObject.setClearBetweenFrames(checked);\n            this.forceUpdate();\n          }}\n        />\n        <ResponsiveLineStackLayout noMargin>\n          <ColorField\n            floatingLabelText={<Trans>Outline color</Trans>}\n            disableAlpha\n            fullWidth\n            color={{\n              r: shapePainterObject.getOutlineColorR(),\n              g: shapePainterObject.getOutlineColorG(),\n              b: shapePainterObject.getOutlineColorB(),\n              a: 255,\n            }}\n            onChangeComplete={color => {\n              shapePainterObject.setOutlineColor(\n                color.rgb.r,\n                color.rgb.g,\n                color.rgb.b\n              );\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Outline opacity (0-255)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={shapePainterObject.getOutlineOpacity()}\n            onChange={value => {\n              shapePainterObject.setOutlineOpacity(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Outline size (in pixels)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={shapePainterObject.getOutlineSize()}\n            onChange={value => {\n              shapePainterObject.setOutlineSize(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <ColorField\n            floatingLabelText={<Trans>Fill color</Trans>}\n            disableAlpha\n            fullWidth\n            color={{\n              r: shapePainterObject.getFillColorR(),\n              g: shapePainterObject.getFillColorG(),\n              b: shapePainterObject.getFillColorB(),\n              a: 255,\n            }}\n            onChangeComplete={color => {\n              shapePainterObject.setFillColor(\n                color.rgb.r,\n                color.rgb.g,\n                color.rgb.b\n              );\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Fill opacity (0-255)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={shapePainterObject.getFillOpacity()}\n            onChange={value => {\n              shapePainterObject.setFillOpacity(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n      </ColumnStackLayout>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Checkbox from '../../UI/Checkbox';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\nimport ColorField from '../../UI/ColorField';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport { type EditorProps } from './EditorProps.flow';\nimport ResourceSelectorWithThumbnail from '../../ResourcesList/ResourceSelectorWithThumbnail';\nimport { ResponsiveLineStackLayout, ColumnStackLayout } from '../../UI/Layout';\nimport DismissableTutorialMessage from '../../Hints/DismissableTutorialMessage';\nimport { getObjectTutorialHints } from '../../Hints';\nconst gd = global.gd;\n\nexport default class ParticleEmitterEditor extends React.Component<\n  EditorProps,\n  void\n> {\n  render() {\n    const {\n      object,\n      project,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n    } = this.props;\n    const particleEmitterObject = gd.asParticleEmitterObject(object);\n    const tutorialHints = getObjectTutorialHints(object.getType());\n\n    return (\n      <ColumnStackLayout>\n        {tutorialHints.map(tutorialHint => (\n          <DismissableTutorialMessage\n            key={tutorialHint.identifier}\n            tutorialHint={tutorialHint}\n          />\n        ))}\n        <SelectField\n          fullWidth\n          floatingLabelText={<Trans>Particles kind</Trans>}\n          value={particleEmitterObject.getRendererType()}\n          onChange={(e, i, value: string) => {\n            const rendererType = parseInt(value, 10) || 0;\n            particleEmitterObject.setRendererType(rendererType);\n            if (rendererType !== gd.ParticleEmitterObject.Quad) {\n              particleEmitterObject.setParticleTexture('');\n            }\n            this.forceUpdate();\n          }}\n        >\n          <SelectOption\n            value={gd.ParticleEmitterObject.Point}\n            primaryText={t`Point`}\n          />\n          <SelectOption\n            value={gd.ParticleEmitterObject.Line}\n            primaryText={t`Line`}\n          />\n          <SelectOption\n            value={gd.ParticleEmitterObject.Quad}\n            primaryText={t`Textured`}\n          />\n        </SelectField>\n        {particleEmitterObject.getRendererType() ===\n          gd.ParticleEmitterObject.Point && (\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Size</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getRendererParam1()}\n            onChange={value => {\n              particleEmitterObject.setRendererParam1(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n        )}\n        {particleEmitterObject.getRendererType() ===\n          gd.ParticleEmitterObject.Line && (\n          <ResponsiveLineStackLayout noMargin>\n            <SemiControlledTextField\n              commitOnBlur\n              floatingLabelText={<Trans>Lines length</Trans>}\n              fullWidth\n              type=\"number\"\n              value={particleEmitterObject.getRendererParam1()}\n              onChange={value => {\n                particleEmitterObject.setRendererParam1(parseFloat(value));\n                this.forceUpdate();\n              }}\n            />\n            <SemiControlledTextField\n              commitOnBlur\n              floatingLabelText={<Trans>Lines thickness</Trans>}\n              fullWidth\n              type=\"number\"\n              value={particleEmitterObject.getRendererParam2()}\n              onChange={value => {\n                particleEmitterObject.setRendererParam2(parseFloat(value));\n                this.forceUpdate();\n              }}\n            />\n          </ResponsiveLineStackLayout>\n        )}\n        {particleEmitterObject.getRendererType() ===\n          gd.ParticleEmitterObject.Quad && (\n          <ResourceSelectorWithThumbnail\n            project={project}\n            resourceSources={resourceSources}\n            onChooseResource={onChooseResource}\n            resourceKind=\"image\"\n            resourceName={particleEmitterObject.getParticleTexture()}\n            resourceExternalEditors={resourceExternalEditors}\n            onChange={resourceName => {\n              particleEmitterObject.setParticleTexture(resourceName);\n              this.forceUpdate();\n            }}\n            floatingLabelText={<Trans>Select an image</Trans>}\n          />\n        )}\n        {particleEmitterObject.getRendererType() ===\n          gd.ParticleEmitterObject.Quad && (\n          <ResponsiveLineStackLayout noMargin>\n            <SemiControlledTextField\n              commitOnBlur\n              floatingLabelText={<Trans>Particles start width</Trans>}\n              fullWidth\n              type=\"number\"\n              value={particleEmitterObject.getRendererParam1()}\n              onChange={value => {\n                particleEmitterObject.setRendererParam1(\n                  Math.max(0, parseFloat(value))\n                );\n                this.forceUpdate();\n              }}\n            />\n            <SemiControlledTextField\n              commitOnBlur\n              floatingLabelText={<Trans>Particles start height</Trans>}\n              fullWidth\n              type=\"number\"\n              value={particleEmitterObject.getRendererParam2()}\n              onChange={value => {\n                particleEmitterObject.setRendererParam2(\n                  Math.max(0, parseFloat(value))\n                );\n                this.forceUpdate();\n              }}\n            />\n          </ResponsiveLineStackLayout>\n        )}\n        <ResponsiveLineStackLayout noMargin>\n          <ColorField\n            floatingLabelText={<Trans>Particles start color</Trans>}\n            disableAlpha\n            fullWidth\n            color={{\n              r: particleEmitterObject.getParticleRed1(),\n              g: particleEmitterObject.getParticleGreen1(),\n              b: particleEmitterObject.getParticleBlue1(),\n              a: 255,\n            }}\n            onChangeComplete={color => {\n              particleEmitterObject.setParticleRed1(color.rgb.r);\n              particleEmitterObject.setParticleGreen1(color.rgb.g);\n              particleEmitterObject.setParticleBlue1(color.rgb.b);\n\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Start opacity (0-255)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleAlpha1()}\n            onChange={value => {\n              particleEmitterObject.setParticleAlpha1(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <ColorField\n            floatingLabelText={<Trans>Particles end color</Trans>}\n            disableAlpha\n            fullWidth\n            color={{\n              r: particleEmitterObject.getParticleRed2(),\n              g: particleEmitterObject.getParticleGreen2(),\n              b: particleEmitterObject.getParticleBlue2(),\n              a: 255,\n            }}\n            onChangeComplete={color => {\n              particleEmitterObject.setParticleRed2(color.rgb.r);\n              particleEmitterObject.setParticleGreen2(color.rgb.g);\n              particleEmitterObject.setParticleBlue2(color.rgb.b);\n\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>End opacity (0-255)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleAlpha2()}\n            onChange={value => {\n              particleEmitterObject.setParticleAlpha2(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <Checkbox\n          label={<Trans>Additive rendering</Trans>}\n          checked={particleEmitterObject.isRenderingAdditive()}\n          onCheck={(e, checked) => {\n            if (checked) particleEmitterObject.setRenderingAdditive();\n            else particleEmitterObject.setRenderingAlpha();\n            this.forceUpdate();\n          }}\n        />\n        <Checkbox\n          label={<Trans>Delete when out of particles</Trans>}\n          checked={particleEmitterObject.getDestroyWhenNoParticles()}\n          onCheck={(e, checked) => {\n            particleEmitterObject.setDestroyWhenNoParticles(checked);\n            this.forceUpdate();\n          }}\n        />\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Maximum number of particles displayed</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getMaxParticleNb()}\n            onChange={value => {\n              particleEmitterObject.setMaxParticleNb(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Number of particles in tank (-1 for infinite)</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getTank()}\n            onChange={value => {\n              particleEmitterObject.setTank(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Flow of particles (particles/seconds)</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getFlow()}\n            onChange={value => {\n              particleEmitterObject.setFlow(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Minimum emitter force applied on particles</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getEmitterForceMin()}\n            onChange={value => {\n              particleEmitterObject.setEmitterForceMin(\n                parseInt(value, 10) || 0\n              );\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Maximum emitter force applied on particles</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getEmitterForceMax()}\n            onChange={value => {\n              particleEmitterObject.setEmitterForceMax(\n                parseInt(value, 10) || 0\n              );\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Spray cone angle (in degrees)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getConeSprayAngle()}\n            onChange={value => {\n              particleEmitterObject.setConeSprayAngle(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Radius of the emitter</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getZoneRadius()}\n            onChange={value => {\n              particleEmitterObject.setZoneRadius(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Gravity on particles on X axis</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleGravityX()}\n            onChange={value => {\n              particleEmitterObject.setParticleGravityX(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Gravity on particles on Y axis</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleGravityY()}\n            onChange={value => {\n              particleEmitterObject.setParticleGravityY(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <SemiControlledTextField\n          commitOnBlur\n          floatingLabelText={<Trans>Friction on particles</Trans>}\n          fullWidth\n          type=\"number\"\n          value={particleEmitterObject.getFriction()}\n          onChange={value => {\n            particleEmitterObject.setFriction(parseFloat(value));\n            this.forceUpdate();\n          }}\n        />\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Particle minimum lifetime (in seconds)</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleLifeTimeMin()}\n            onChange={value => {\n              particleEmitterObject.setParticleLifeTimeMin(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Particle maximum lifetime (in seconds)</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleLifeTimeMax()}\n            onChange={value => {\n              particleEmitterObject.setParticleLifeTimeMax(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Particle start size (in percents)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleSize1()}\n            onChange={value => {\n              particleEmitterObject.setParticleSize1(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Particle end size (in percents)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleSize2()}\n            onChange={value => {\n              particleEmitterObject.setParticleSize2(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout noMargin>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Particle minimum rotation speed (degrees/second)</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleAngle1()}\n            onChange={value => {\n              particleEmitterObject.setParticleAngle1(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Particle maximum rotation speed (degrees/second)</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleAngle2()}\n            onChange={value => {\n              particleEmitterObject.setParticleAngle2(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n      </ColumnStackLayout>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\n\nimport * as React from 'react';\nimport PropertiesEditor from '../../PropertiesEditor';\nimport propertiesMapToSchema from '../../PropertiesEditor/PropertiesMapToSchema';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport { type EditorProps } from './EditorProps.flow';\nimport { Column, Line } from '../../UI/Grid';\nimport {\n  getExtraObjectsInformation,\n  getObjectTutorialHints,\n} from '../../Hints';\nimport AlertMessage from '../../UI/AlertMessage';\nimport { ColumnStackLayout } from '../../UI/Layout';\nimport DismissableTutorialMessage from '../../Hints/DismissableTutorialMessage';\n\nconst gd: libGDevelop = global.gd;\n\ntype Props = EditorProps;\n\nexport default class ObjectPropertiesEditor extends React.Component<Props> {\n  render() {\n    const {\n      object,\n      project,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n    } = this.props;\n\n    // TODO: Workaround a bad design of ObjectJsImplementation. When getProperties\n    // and associated methods are redefined in JS, they have different arguments (\n    // see ObjectJsImplementation C++ implementation). If called directly here from JS,\n    // the arguments will be mismatched. To workaround this, always case the object to\n    // a base gdObject to ensure C++ methods are called.\n    const objectAsGdObject = gd.castObject(object, gd.gdObject);\n    const properties = objectAsGdObject.getProperties();\n\n    const propertiesSchema = propertiesMapToSchema(\n      properties,\n      object => object.getProperties(),\n      (object, name, value) => object.updateProperty(name, value)\n    );\n\n    const extraInformation = getExtraObjectsInformation()[\n      objectAsGdObject.getType()\n    ];\n\n    const tutorialHints = getObjectTutorialHints(objectAsGdObject.getType());\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <ColumnStackLayout>\n            {tutorialHints.map(tutorialHint => (\n              <DismissableTutorialMessage\n                key={tutorialHint.identifier}\n                tutorialHint={tutorialHint}\n              />\n            ))}\n            {propertiesSchema.length ? (\n              <React.Fragment>\n                {extraInformation ? (\n                  <Line>\n                    <Column noMargin>\n                      {extraInformation.map(({ kind, message }, index) => (\n                        <AlertMessage kind={kind} key={index}>\n                          {i18n._(message)}\n                        </AlertMessage>\n                      ))}\n                    </Column>\n                  </Line>\n                ) : null}\n                <PropertiesEditor\n                  unsavedChanges={this.props.unsavedChanges}\n                  schema={propertiesSchema}\n                  instances={[objectAsGdObject]}\n                  project={project}\n                  resourceSources={resourceSources}\n                  onChooseResource={onChooseResource}\n                  resourceExternalEditors={resourceExternalEditors}\n                />\n              </React.Fragment>\n            ) : (\n              <EmptyMessage>\n                <Trans>\n                  There is nothing to configure for this object. You can still\n                  use events to interact with the object.\n                </Trans>\n              </EmptyMessage>\n            )}\n          </ColumnStackLayout>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport TextField from '../UI/TextField';\nimport Add from '@material-ui/icons/Add';\nimport Delete from '@material-ui/icons/Delete';\nimport IconButton from '../UI/IconButton';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport MiniToolbar, { MiniToolbarText } from '../UI/MiniToolbar';\nimport HelpIcon from '../UI/HelpIcon';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport NewBehaviorDialog from './NewBehaviorDialog';\nimport { getBehaviorHelpPagePath } from './BehaviorsHelpPagePaths';\nimport BehaviorsEditorService from './BehaviorsEditorService';\nimport { isNullPtr } from '../Utils/IsNullPtr';\nimport Window from '../Utils/Window';\nimport { Column, Line } from '../UI/Grid';\nimport RaisedButton from '../UI/RaisedButton';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport { getBehaviorTutorialHints } from '../Hints';\nimport DismissableTutorialMessage from '../Hints/DismissableTutorialMessage';\nimport { ColumnStackLayout } from '../UI/Layout';\nconst gd: libGDevelop = global.gd;\n\nconst AddBehaviorLine = ({ onAdd }) => (\n  <Column>\n    <Line justifyContent=\"flex-end\" expand>\n      <RaisedButton\n        label={<Trans>Add a behavior to the object</Trans>}\n        primary\n        onClick={onAdd}\n        icon={<Add />}\n      />\n    </Line>\n  </Column>\n);\n\ntype Props = {|\n  project: gdProject,\n  object: gdObject,\n  onUpdateBehaviorsSharedData: () => void,\n  onSizeUpdated?: ?() => void,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n|};\n\ntype State = {|\n  newBehaviorDialogOpen: boolean,\n|};\n\nexport default class BehaviorsEditor extends Component<Props, State> {\n  state = { newBehaviorDialogOpen: false };\n\n  chooseNewBehavior = () => {\n    this.setState({\n      newBehaviorDialogOpen: true,\n    });\n  };\n\n  _hasBehaviorWithType = (type: string) => {\n    const { object } = this.props;\n    const allBehaviorNames = object.getAllBehaviorNames().toJSArray();\n\n    return allBehaviorNames\n      .map(behaviorName => object.getBehavior(behaviorName))\n      .map(behavior => behavior.getTypeName())\n      .filter(behaviorType => behaviorType === type).length;\n  };\n\n  addBehavior = (type: string, defaultName: string) => {\n    const { object, project } = this.props;\n\n    this.setState(\n      {\n        newBehaviorDialogOpen: false,\n      },\n      () => {\n        if (this._hasBehaviorWithType(type)) {\n          const answer = Window.showConfirmDialog(\n            \"There is already a behavior of this type attached to the object. It's possible to add again this behavior but it's unusual and may not be always supported properly. Are you sure you want to add again this behavior?\"\n          );\n\n          if (!answer) return;\n        }\n\n        const name = newNameGenerator(defaultName, name =>\n          object.hasBehaviorNamed(name)\n        );\n        object.addNewBehavior(project, type, name);\n\n        this.forceUpdate();\n        if (this.props.onSizeUpdated) this.props.onSizeUpdated();\n        this.props.onUpdateBehaviorsSharedData();\n      }\n    );\n  };\n\n  _onChangeBehaviorName = (\n    behaviorContent: gdBehaviorContent,\n    newName: string\n  ) => {\n    // TODO: This is disabled for now as there is no proper refactoring\n    // of events after a behavior renaming. Once refactoring is available,\n    // the text field can be enabled again and refactoring calls added here\n    // (or in a parent).\n    // Renaming a behavior is something that is really rare anyway! :)\n\n    const { object } = this.props;\n    if (object.hasBehaviorNamed(newName)) return;\n\n    object.renameBehavior(behaviorContent.getName(), newName);\n    this.forceUpdate();\n  };\n\n  _onRemoveBehavior = (behaviorName: string) => {\n    const { object } = this.props;\n    const answer = Window.showConfirmDialog(\n      \"Are you sure you want to remove this behavior? This can't be undone.\"\n    );\n\n    if (answer) {\n      object.removeBehavior(behaviorName);\n      this.forceUpdate();\n      if (this.props.onSizeUpdated) this.props.onSizeUpdated();\n    }\n  };\n\n  render() {\n    const { object, project } = this.props;\n    const allBehaviorNames = object.getAllBehaviorNames().toJSArray();\n\n    return (\n      <div>\n        {allBehaviorNames\n          .map((behaviorName, index) => {\n            const behaviorContent = object.getBehavior(behaviorName);\n            const behaviorTypeName = behaviorContent.getTypeName();\n            const behavior = gd.JsPlatform.get().getBehavior(behaviorTypeName);\n            if (isNullPtr(gd, behavior)) {\n              return (\n                <div key={index}>\n                  <MiniToolbar>\n                    <MiniToolbarText>\n                      <Trans>Unknown behavior</Trans>{' '}\n                    </MiniToolbarText>\n                    <Column noMargin expand>\n                      <TextField margin=\"none\" value={behaviorName} disabled />\n                    </Column>\n                    <IconButton\n                      onClick={() => this._onRemoveBehavior(behaviorName)}\n                    >\n                      <Delete />\n                    </IconButton>\n                  </MiniToolbar>\n                  <EmptyMessage>\n                    <Trans>\n                      This behavior is unknown. It might be a behavior that was\n                      defined in an extension and that was later removed. You\n                      should delete it.\n                    </Trans>\n                  </EmptyMessage>\n                </div>\n              );\n            }\n\n            const BehaviorComponent = BehaviorsEditorService.getEditor(\n              behaviorTypeName\n            );\n            const tutorialHints = getBehaviorTutorialHints(behaviorTypeName);\n\n            return (\n              <div key={index}>\n                <MiniToolbar>\n                  <MiniToolbarText>\n                    <Trans>Behavior</Trans>{' '}\n                  </MiniToolbarText>\n                  <Column noMargin expand>\n                    <TextField\n                      value={behaviorName}\n                      hintText={t`Behavior name`}\n                      margin=\"none\"\n                      fullWidth\n                      disabled\n                      onChange={(e, text) =>\n                        this._onChangeBehaviorName(behaviorContent, text)\n                      }\n                    />\n                  </Column>\n                  <IconButton\n                    onClick={() => this._onRemoveBehavior(behaviorName)}\n                  >\n                    <Delete />\n                  </IconButton>\n                  <HelpIcon helpPagePath={getBehaviorHelpPagePath(behavior)} />\n                </MiniToolbar>\n                {tutorialHints.length ? (\n                  <Line>\n                    <ColumnStackLayout expand>\n                      {tutorialHints.map(tutorialHint => (\n                        <DismissableTutorialMessage\n                          key={tutorialHint.identifier}\n                          tutorialHint={tutorialHint}\n                        />\n                      ))}\n                    </ColumnStackLayout>\n                  </Line>\n                ) : null}\n                <Line>\n                  <BehaviorComponent\n                    behavior={behavior}\n                    behaviorContent={behaviorContent}\n                    project={project}\n                    resourceSources={this.props.resourceSources}\n                    onChooseResource={this.props.onChooseResource}\n                    resourceExternalEditors={this.props.resourceExternalEditors}\n                  />\n                </Line>\n              </div>\n            );\n          })\n          .concat(\n            <AddBehaviorLine\n              key=\"add-behavior-line\"\n              onAdd={this.chooseNewBehavior}\n            />\n          )}\n        {this.state.newBehaviorDialogOpen && (\n          <NewBehaviorDialog\n            open={this.state.newBehaviorDialogOpen}\n            objectType={object.getType()}\n            onClose={() => this.setState({ newBehaviorDialogOpen: false })}\n            onChoose={this.addBehavior}\n            project={project}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport HelpButton from '../UI/HelpButton';\nimport FlatButton from '../UI/FlatButton';\nimport Subheader from '../UI/Subheader';\nimport ListIcon from '../UI/ListIcon';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport { List, ListItem } from '../UI/List';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Create from '@material-ui/icons/Create';\nimport { Column, Line } from '../UI/Grid';\nimport { showMessageBox } from '../UI/Messages/MessageBox';\nimport { getDeprecatedBehaviorsInformation } from '../Hints';\nimport { getHelpLink } from '../Utils/HelpLink';\nimport {\n  type EnumeratedBehaviorMetadata,\n  enumerateBehaviorsMetadata,\n  filterEnumeratedBehaviorMetadata,\n} from './EnumerateBehaviorsMetadata';\nimport SearchBar, { useShouldAutofocusSearchbar } from '../UI/SearchBar';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport { ExtensionStore } from '../AssetStore/ExtensionStore';\nimport Window from '../Utils/Window';\nimport EventsFunctionsExtensionsContext from '../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext';\nimport { installExtension } from '../AssetStore/ExtensionStore/InstallExtension';\nimport InfoBar from '../UI/Messages/InfoBar';\nimport ScrollView, { type ScrollViewInterface } from '../UI/ScrollView';\n\nconst styles = {\n  disabledItem: { opacity: 0.6 },\n};\n\nconst BehaviorListItem = ({\n  behaviorMetadata,\n  onClick,\n  disabled,\n}: {|\n  behaviorMetadata: EnumeratedBehaviorMetadata,\n  onClick: () => void,\n  disabled: boolean,\n|}) => (\n  <ListItem\n    leftIcon={\n      <ListIcon\n        src={behaviorMetadata.iconFilename}\n        iconSize={40}\n        isGDevelopIcon\n      />\n    }\n    key={behaviorMetadata.type}\n    primaryText={behaviorMetadata.fullName}\n    secondaryText={behaviorMetadata.description}\n    secondaryTextLines={2}\n    onClick={onClick}\n    style={disabled ? styles.disabledItem : undefined}\n    disabled={disabled}\n  />\n);\n\ntype Props = {|\n  project: gdProject,\n  objectType: string,\n  open: boolean,\n  onClose: () => void,\n  onChoose: (type: string, defaultName: string) => void,\n|};\n\nexport default function NewBehaviorDialog({\n  project,\n  open,\n  onClose,\n  onChoose,\n  objectType,\n}: Props) {\n  const [showDeprecated, setShowDeprecated] = React.useState(false);\n  const [searchText, setSearchText] = React.useState('');\n  const [currentTab, setCurrentTab] = React.useState('installed');\n  const searchBar = React.useRef<?SearchBar>(null);\n  const scrollView = React.useRef((null: ?ScrollViewInterface));\n\n  const [isInstalling, setIsInstalling] = React.useState(false);\n  const [extensionInstallTime, setExtensionInstallTime] = React.useState(0);\n  const eventsFunctionsExtensionsState = React.useContext(\n    EventsFunctionsExtensionsContext\n  );\n\n  const platform = project.getCurrentPlatform();\n  const behaviorMetadata: Array<EnumeratedBehaviorMetadata> = React.useMemo(\n    () => {\n      return project && platform\n        ? enumerateBehaviorsMetadata(platform, project)\n        : [];\n    },\n    [project, platform, extensionInstallTime] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  const shouldAutofocusSearchbar = useShouldAutofocusSearchbar();\n  React.useEffect(\n    () => {\n      setTimeout(() => {\n        if (shouldAutofocusSearchbar && searchBar.current)\n          searchBar.current.focus();\n      }, 20 /* Be sure that the search bar is shown */);\n    },\n    [shouldAutofocusSearchbar]\n  );\n\n  if (!open || !project) return null;\n\n  const deprecatedBehaviorsInformation = getDeprecatedBehaviorsInformation();\n\n  const filteredBehaviorMetadata = filterEnumeratedBehaviorMetadata(\n    behaviorMetadata,\n    searchText\n  );\n  const behaviors = filteredBehaviorMetadata.filter(\n    ({ type }) => !deprecatedBehaviorsInformation[type]\n  );\n  const deprecatedBehaviors = filteredBehaviorMetadata.filter(\n    ({ type }) => !!deprecatedBehaviorsInformation[type]\n  );\n\n  const chooseBehavior = (\n    i18n: I18nType,\n    { type, defaultName }: EnumeratedBehaviorMetadata\n  ) => {\n    if (deprecatedBehaviorsInformation[type]) {\n      showMessageBox(i18n._(deprecatedBehaviorsInformation[type].warning));\n    }\n\n    return onChoose(type, defaultName);\n  };\n\n  const canBehaviorBeUsed = (behaviorMetadata: EnumeratedBehaviorMetadata) => {\n    // An empty object type means the base object, i.e: any object.\n    return (\n      behaviorMetadata.objectType === '' ||\n      behaviorMetadata.objectType === objectType\n    );\n  };\n\n  const hasSearchNoResult =\n    !!searchText && !behaviors.length && !deprecatedBehaviors.length;\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Dialog\n          title={<Trans>Add a new behavior to the object</Trans>}\n          actions={[\n            <FlatButton\n              key=\"close\"\n              label={<Trans>Close</Trans>}\n              primary={false}\n              onClick={onClose}\n            />,\n          ]}\n          secondaryActions={<HelpButton helpPagePath=\"/behaviors\" />}\n          open\n          cannotBeDismissed={false}\n          flexBody\n          noMargin\n        >\n          <Column expand noMargin>\n            <Tabs value={currentTab} onChange={setCurrentTab}>\n              <Tab\n                label={<Trans>Installed Behaviors</Trans>}\n                value=\"installed\"\n              />\n              <Tab label={<Trans>Search New Behaviors</Trans>} value=\"search\" />\n            </Tabs>\n            {currentTab === 'installed' && (\n              <React.Fragment>\n                <SearchBar\n                  value={searchText}\n                  onRequestSearch={() => {\n                    if (behaviors.length) {\n                      chooseBehavior(i18n, behaviors[0]);\n                    } else if (showDeprecated && deprecatedBehaviors.length) {\n                      chooseBehavior(i18n, deprecatedBehaviors[0]);\n                    }\n                  }}\n                  onChange={setSearchText}\n                  ref={searchBar}\n                />\n                {hasSearchNoResult && (\n                  <EmptyMessage>\n                    <Trans>\n                      No behavior found for your search. Try another search, or\n                      search for new behaviors to install.\n                    </Trans>\n                  </EmptyMessage>\n                )}\n                <ScrollView ref={scrollView}>\n                  <List>\n                    {behaviors.map((behaviorMetadata, index) => (\n                      <BehaviorListItem\n                        key={index}\n                        behaviorMetadata={behaviorMetadata}\n                        onClick={() => chooseBehavior(i18n, behaviorMetadata)}\n                        disabled={!canBehaviorBeUsed(behaviorMetadata)}\n                      />\n                    ))}\n                    {showDeprecated && !!deprecatedBehaviors.length && (\n                      <Subheader>\n                        Deprecated (old, prefer not to use anymore)\n                      </Subheader>\n                    )}\n                    {showDeprecated &&\n                      deprecatedBehaviors.map((behaviorMetadata, index) => (\n                        <BehaviorListItem\n                          key={index}\n                          behaviorMetadata={behaviorMetadata}\n                          onClick={() => chooseBehavior(i18n, behaviorMetadata)}\n                          disabled={!canBehaviorBeUsed(behaviorMetadata)}\n                        />\n                      ))}\n                  </List>\n                  <Line justifyContent=\"center\" alignItems=\"center\">\n                    {!showDeprecated ? (\n                      <FlatButton\n                        key=\"toggle-experimental\"\n                        icon={<Visibility />}\n                        primary={false}\n                        onClick={() => {\n                          setShowDeprecated(true);\n                        }}\n                        label={<Trans>Show deprecated (old) behaviors</Trans>}\n                      />\n                    ) : (\n                      <FlatButton\n                        key=\"toggle-experimental\"\n                        icon={<VisibilityOff />}\n                        primary={false}\n                        onClick={() => {\n                          setShowDeprecated(false);\n                        }}\n                        label={<Trans>Show deprecated (old) behaviors</Trans>}\n                      />\n                    )}\n                  </Line>\n                  <Line justifyContent=\"center\" alignItems=\"center\">\n                    <FlatButton\n                      icon={<Create />}\n                      primary={false}\n                      onClick={() =>\n                        Window.openExternalURL(\n                          getHelpLink('/behaviors/events-based-behaviors')\n                        )\n                      }\n                      label={<Trans>Create your own behavior</Trans>}\n                    />\n                  </Line>\n                </ScrollView>\n              </React.Fragment>\n            )}\n            {currentTab === 'search' && (\n              <ExtensionStore // TODO\n                project={project}\n                isInstalling={isInstalling}\n                onInstall={async extensionShortHeader => {\n                  setIsInstalling(true);\n                  const wasExtensionInstalled = await installExtension(\n                    i18n,\n                    project,\n                    eventsFunctionsExtensionsState,\n                    extensionShortHeader\n                  );\n\n                  if (wasExtensionInstalled) {\n                    // Setting the extension install time will force a reload of\n                    // the behavior metadata, and so the list of behaviors.\n                    setExtensionInstallTime(Date.now());\n                    setCurrentTab('installed');\n                    if (scrollView.current) scrollView.current.scrollToBottom();\n                  }\n                  setIsInstalling(false);\n                }}\n                showOnlyWithBehaviors\n              />\n            )}\n          </Column>\n          <InfoBar\n            identifier=\"extension-installed-explanation\"\n            message={\n              <Trans>\n                The behavior was added to the project. You can now add it to\n                your object.\n              </Trans>\n            }\n            show={extensionInstallTime !== 0}\n          />\n        </Dialog>\n      )}\n    </I18n>\n  );\n}\n","/**\n * Return the help page for the given behavior\n * @param {*} behavior\n */\nexport const getBehaviorHelpPagePath = behavior => {\n  if (!behavior) return null;\n\n  switch (behavior.getTypeName()) {\n    case 'DraggableBehavior::Draggable':\n      return '/behaviors/draggable';\n    case 'PlatformBehavior::PlatformerObjectBehavior':\n      return '/behaviors/platformer';\n    case 'PlatformBehavior::PlatformBehavior':\n      return '/behaviors/platformer';\n    default:\n      return '';\n  }\n};\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport TextField from '../UI/TextField';\nimport { ColumnStackLayout, ResponsiveLineStackLayout } from '../UI/Layout';\nimport Dialog from '../UI/Dialog';\nimport ColorField from '../UI/ColorField';\n\nexport default class SetupGridDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...props.gridOptions,\n    };\n  }\n\n  _onApply = () => {\n    this.props.onApply({\n      gridWidth: this.state.gridWidth,\n      gridHeight: this.state.gridHeight,\n      gridOffsetX: this.state.gridOffsetX,\n      gridOffsetY: this.state.gridOffsetY,\n      gridColor: this.state.gridColor,\n    });\n  };\n\n  render() {\n    const actions = [\n      <FlatButton\n        key=\"cancel\"\n        label={<Trans>Cancel</Trans>}\n        primary={false}\n        onClick={this.props.onCancel}\n      />,\n      <FlatButton\n        key=\"apply\"\n        label={<Trans>Apply</Trans>}\n        primary={true}\n        keyboardFocused={true}\n        onClick={this._onApply}\n      />,\n    ];\n\n    return (\n      <Dialog\n        title={<Trans>Edit Grid Options</Trans>}\n        actions={actions}\n        cannotBeDismissed={true}\n        open={this.props.open}\n        onRequestClose={this.props.onCancel}\n        maxWidth=\"sm\"\n        noMargin\n      >\n        <ColumnStackLayout>\n          <ResponsiveLineStackLayout noMargin expand>\n            <ColorField\n              floatingLabelText={<Trans>Line color</Trans>}\n              fullWidth\n              color={this.state.gridColor}\n              onChangeComplete={color => {\n                this.setState({ gridColor: color.rgb });\n              }}\n            />\n          </ResponsiveLineStackLayout>\n          <ResponsiveLineStackLayout noMargin expand>\n            <TextField\n              floatingLabelText={<Trans>Cell width (in pixels)</Trans>}\n              fullWidth\n              type=\"number\"\n              value={this.state.gridWidth}\n              onChange={(e, value) =>\n                this.setState({ gridWidth: parseInt(value, 10) })\n              }\n            />\n            <TextField\n              floatingLabelText={<Trans>Cell height (in pixels)</Trans>}\n              fullWidth\n              type=\"number\"\n              value={this.state.gridHeight}\n              onChange={(e, value) =>\n                this.setState({ gridHeight: parseInt(value, 10) })\n              }\n            />\n          </ResponsiveLineStackLayout>\n          <ResponsiveLineStackLayout noMargin expand>\n            <TextField\n              floatingLabelText={<Trans>X offset (in pixels)</Trans>}\n              fullWidth\n              type=\"number\"\n              value={this.state.gridOffsetX}\n              onChange={(e, value) =>\n                this.setState({ gridOffsetX: parseInt(value, 10) })\n              }\n            />\n            <TextField\n              floatingLabelText={<Trans>Y offset (in pixels)</Trans>}\n              fullWidth\n              type=\"number\"\n              value={this.state.gridOffsetY}\n              onChange={(e, value) =>\n                this.setState({ gridOffsetY: parseInt(value, 10) })\n              }\n            />\n          </ResponsiveLineStackLayout>\n        </ColumnStackLayout>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport React, { Component } from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport ViewPosition from './ViewPosition';\nimport throttle from 'lodash/throttle';\nimport InstancesEditor, {\n  type InstancesEditorPropsWithoutSizeAndScroll,\n} from './index';\nimport { ScreenTypeMeasurer } from '../UI/Reponsive/ScreenTypeMeasurer';\nimport { FullSizeMeasurer } from '../UI/FullSizeMeasurer';\n\nconst styles = {\n  container: {\n    overflow: 'hidden',\n  },\n  xScrollbar: {\n    position: 'absolute',\n    top: -13,\n    left: 0,\n    right: 0,\n  },\n  yScrollbar: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: -13,\n    transform: 'rotate(180deg)',\n  },\n};\n\ntype Props = {|\n  ...InstancesEditorPropsWithoutSizeAndScroll,\n  wrappedEditorRef: ?(?InstancesEditor) => void,\n|};\n\ntype State = {|\n  xValue: number,\n  yValue: number,\n  xMin: number,\n  xMax: number,\n  yMin: number,\n  yMax: number,\n|};\n\nconst noop = () => {};\n\nexport default class FullSizeInstancesEditorWithScrollbars extends Component<\n  Props,\n  State\n> {\n  _editor: ?InstancesEditor = null;\n\n  state: State = {\n    xValue: 0,\n    yValue: 0,\n    xMin: -5000,\n    xMax: +5000,\n    yMin: -5000,\n    yMax: +5000,\n  };\n\n  componentDidMount() {\n    if (this._editor) {\n      this._handleViewPositionChange(this._editor.getViewPosition());\n    }\n  }\n\n  _handleXChange = (e: any, value: number) => {\n    const { xMin, xMax } = this.state;\n    const xValue = xMin + ((xMax - xMin) * value) / 100;\n    this.setState(\n      {\n        xValue,\n      },\n      () => {\n        if (this._editor) {\n          this._editor.scrollTo(this.state.xValue, this.state.yValue);\n        }\n      }\n    );\n  };\n\n  _handleYChange = (e: any, value: number) => {\n    const { yMin, yMax } = this.state;\n    // Substract the value from 100 as the slider is 180deg rotated. Not perfect though\n    // as it breaks when using the keyboard arrow keys (when focusing the slider).\n    const yValue = yMin + ((yMax - yMin) * (100 - value)) / 100;\n    this.setState(\n      {\n        yValue,\n      },\n      () => {\n        if (this._editor) {\n          this._editor.scrollTo(this.state.xValue, this.state.yValue);\n        }\n      }\n    );\n  };\n\n  _setAndAdjust = ({ xValue, yValue }: { xValue: number, yValue: number }) => {\n    const xMax = Math.max(Math.abs(xValue) + 100, this.state.xMax);\n    const yMax = Math.max(Math.abs(yValue) + 100, this.state.yMax);\n\n    this.setState({\n      xMax,\n      yMax,\n      xMin: -xMax,\n      yMin: -yMax,\n      xValue,\n      yValue,\n    });\n  };\n\n  _handleViewPositionChange = throttle(\n    (viewPosition: ?ViewPosition) => {\n      if (!viewPosition) return;\n\n      this._setAndAdjust({\n        xValue: viewPosition.getViewX(),\n        yValue: viewPosition.getViewY(),\n      });\n    },\n    500, // Throttle the updates after a scroll to avoid make lots of updates in a row that would kill CPU\n    { leading: false, trailing: true }\n  );\n\n  render() {\n    const { wrappedEditorRef, ...otherProps } = this.props;\n\n    return (\n      <ScreenTypeMeasurer>\n        {screenType => (\n          <FullSizeMeasurer>\n            {({ width, height }) => (\n              <div style={styles.container}>\n                <InstancesEditor\n                  onViewPositionChanged={\n                    screenType !== 'touch'\n                      ? this._handleViewPositionChange\n                      : noop\n                  }\n                  ref={(editorRef: ?InstancesEditor) => {\n                    wrappedEditorRef && wrappedEditorRef(editorRef);\n                    this._editor = editorRef;\n                  }}\n                  width={width}\n                  height={height}\n                  screenType={screenType}\n                  {...otherProps}\n                />\n                {screenType !== 'touch' && (\n                  <Slider\n                    value={\n                      ((this.state.xValue - this.state.xMin) /\n                        (this.state.xMax - this.state.xMin)) *\n                      100\n                    }\n                    onChange={this._handleXChange}\n                    style={styles.xScrollbar}\n                    orientation=\"horizontal\"\n                  />\n                )}\n                {screenType !== 'touch' && (\n                  <Slider\n                    value={\n                      ((this.state.yValue - this.state.yMin) /\n                        (this.state.yMax - this.state.yMin)) *\n                      100\n                    }\n                    onChange={this._handleYChange}\n                    style={styles.yScrollbar}\n                    orientation=\"vertical\"\n                  />\n                )}\n              </div>\n            )}\n          </FullSizeMeasurer>\n        )}\n      </ScreenTypeMeasurer>\n    );\n  }\n}\n","// @flow\n\nexport const shortenString = (str: string, maxLength: number) => {\n  return str.length > maxLength ? str.substring(0, maxLength) + '...' : str;\n};\n","// @flow\nimport React, { Component } from 'react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport IconButton from '../IconButton';\nimport FilterList from '@material-ui/icons/FilterList';\nimport ElementWithMenu from '../Menu/ElementWithMenu';\nimport { type MenuItemTemplate } from '../Menu/Menu.flow';\n\nconst styles = {\n  container: {\n    padding: 0,\n    width: 32,\n    height: 32,\n  },\n  icon: {\n    width: 16,\n    height: 16,\n  },\n};\n\ntype Props = {|\n  buildMenuTemplate: (i18n: I18nType) => Array<MenuItemTemplate>,\n|};\n\nexport default class TagsButton extends Component<Props, {||}> {\n  render() {\n    return (\n      <ElementWithMenu\n        element={\n          <IconButton style={styles.container}>\n            <FilterList htmlColor=\"white\" style={styles.icon} />\n          </IconButton>\n        }\n        buildMenuTemplate={this.props.buildMenuTemplate}\n      />\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type AlertMessageIdentifier } from '../MainFrame/Preferences/PreferencesContext';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\n\n/*\n * Define additional logic which executes after an object/instance has been created.\n * Also, InfoBar can be used which could notify users of the additional changes.\n * Declare new identifier for infoBar in Mainframe/Preferences/PreferenceContext\n * and add it in hints/explanation list.\n */\n\nexport type InfoBarDetails = {|\n  identifier: AlertMessageIdentifier,\n  message: MessageDescriptor,\n  touchScreenMessage: MessageDescriptor,\n|};\n\ntype InfoBarEvent = 'onObjectAdded' | 'onInstanceAdded';\n\nexport const onObjectAdded = (\n  object: gdObject,\n  layout: gdLayout,\n  project: gdProject\n): ?InfoBarDetails => {\n  const additionalWork = objectType[object.getType()];\n  if (additionalWork) {\n    additionalWork.onObjectAdded(object, layout, project);\n    return additionalWork.getInfoBarDetails('onObjectAdded');\n  }\n\n  return null;\n};\n\nexport const onInstanceAdded = (\n  instance: gdInitialInstance,\n  layout: gdLayout,\n  project: gdProject\n): ?InfoBarDetails => {\n  const additionalWork =\n    objectType[layout.getObject(instance.getObjectName()).getType()];\n  if (additionalWork) {\n    additionalWork.onInstanceAdded(instance, layout, project);\n    return additionalWork.getInfoBarDetails('onInstanceAdded');\n  }\n\n  return null;\n};\n\nconst getLightingLayer = (layout: gdLayout): ?gdLayer => {\n  for (let i = 0; i < layout.getLayersCount(); i++) {\n    const layer = layout.getLayerAt(i);\n    if (layer.isLightingLayer()) return layer;\n  }\n\n  return null;\n};\n\nconst objectType = {\n  'Lighting::LightObject': {\n    onObjectAdded: (object: gdObject, layout: gdLayout, project: gdProject) => {\n      const lightingLayer = getLightingLayer(layout);\n      if (lightingLayer === null) {\n        const name = newNameGenerator('Lighting', name =>\n          layout.hasLayerNamed(name)\n        );\n        layout.insertNewLayer(name, layout.getLayersCount());\n        const layer: gdLayer = layout.getLayer('Lighting');\n        layer.setLightingLayer(true);\n        layer.setFollowBaseLayerCamera(true);\n        layer.setAmbientLightColor(128, 128, 128);\n      }\n    },\n\n    onInstanceAdded: (\n      instance: gdInitialInstance,\n      layout: gdLayout,\n      project: gdProject\n    ) => {\n      const lightingLayer = getLightingLayer(layout);\n      if (lightingLayer) {\n        instance.setLayer(lightingLayer.getName());\n      }\n    },\n\n    getInfoBarDetails: (infoBarEvent: InfoBarEvent): ?InfoBarDetails => {\n      if (infoBarEvent === 'onObjectAdded') {\n        return {\n          identifier: 'automatic-lighting-layer',\n          message: t`A lighting layer was created. Lights will be placed on it automatically. You can change the ambient light color in the properties of this layer`,\n          touchScreenMessage: t`A lighting layer was created. Lights will be placed on it automatically. You can change the ambient light color in the properties of this layer`,\n        };\n      }\n\n      if (infoBarEvent === 'onInstanceAdded') {\n        return {\n          identifier: 'object-moved-in-lighting-layer',\n          message: t`The light object was automatically placed on the Lighting layer.`,\n          touchScreenMessage: t`The light object was automatically placed on the Lighting layer.`,\n        };\n      }\n\n      return null;\n    },\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport ResourcesList from '../ResourcesList';\nimport ResourcePropertiesEditor from './ResourcePropertiesEditor';\nimport Toolbar from './Toolbar';\nimport EditorMosaic from '../UI/EditorMosaic';\nimport InfoBar from '../UI/Messages/InfoBar';\nimport ResourcesLoader from '../ResourcesLoader';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport Window from '../Utils/Window';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n  type ResourceKind,\n} from '../ResourcesList/ResourceSource.flow';\nimport { getResourceFilePathStatus } from '../ResourcesList/ResourceUtils.js';\n\nconst gd: libGDevelop = global.gd;\n\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\nconst path = optionalRequire('path');\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 1,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n};\n\ntype State = {|\n  showPropertiesInfoBar: boolean,\n  selectedResource: ?gdResource,\n|};\n\ntype Props = {|\n  setToolbar: React.Node => void,\n  project: gdProject,\n  onDeleteResource: (resource: gdResource, cb: (boolean) => void) => void,\n  onRenameResource: (\n    resource: gdResource,\n    newName: string,\n    cb: (boolean) => void\n  ) => void,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n|};\n\nconst initialMosaicEditorNodes = {\n  direction: 'row',\n  first: 'properties',\n  second: 'resources-list',\n  splitPercentage: 66,\n};\n\nexport default class ResourcesEditor extends React.Component<Props, State> {\n  static defaultProps = {\n    setToolbar: () => {},\n  };\n\n  editorMosaic: ?EditorMosaic = null;\n  _propertiesEditor: ?ResourcePropertiesEditor = null;\n  _resourcesList: ?ResourcesList = null;\n  resourcesLoader = ResourcesLoader;\n  state = {\n    showPropertiesInfoBar: false,\n    selectedResource: null,\n  };\n\n  updateToolbar() {\n    this.props.setToolbar(\n      <Toolbar\n        onOpenProjectFolder={this.openProjectFolder}\n        onOpenProperties={this.openProperties}\n        canDelete={!!this.state.selectedResource}\n        onDeleteSelection={() =>\n          this.deleteResource(this.state.selectedResource)\n        }\n      />\n    );\n  }\n\n  deleteResource = (resource: ?gdResource) => {\n    const { project, onDeleteResource } = this.props;\n    if (!resource) return;\n\n    const answer = Window.showConfirmDialog(\n      \"Are you sure you want to remove this resource? This can't be undone.\"\n    );\n    if (!answer) return;\n\n    onDeleteResource(resource, doRemove => {\n      if (!doRemove || !resource) return;\n\n      project.getResourcesManager().removeResource(resource.getName());\n      this.setState(\n        {\n          selectedResource: null,\n        },\n        () => {\n          // Force update of the resources list as otherwise it could render\n          // resource that was just deleted.\n          if (this._resourcesList) this._resourcesList.forceUpdateList();\n          this.updateToolbar();\n        }\n      );\n    });\n  };\n\n  _removeUnusedResources = (resourceKind: ResourceKind) => {\n    const { project } = this.props;\n    const selectedResourceName = this.state.selectedResource\n      ? this.state.selectedResource.getName()\n      : null;\n\n    const removedResourceNames = gd.ProjectResourcesAdder.getAllUseless(\n      project,\n      resourceKind\n    ).toJSArray();\n    console.info(\n      `Removing ${\n        removedResourceNames.length\n      } unused ${resourceKind} resource(s):`,\n      removedResourceNames\n    );\n\n    gd.ProjectResourcesAdder.removeAllUseless(project, resourceKind);\n\n    // The selectedResource might be *invalid* now if it was removed.\n    // Be sure to drop the reference to it if that's the case.\n    if (removedResourceNames.includes(selectedResourceName)) {\n      this._onResourceSelected(null);\n    }\n\n    // Force update of the resources list as otherwise it could render\n    // resources that were just deleted.\n    if (this._resourcesList) {\n      this._resourcesList.forceUpdateList();\n    }\n  };\n\n  _removeAllResourcesWithInvalidPath = () => {\n    const { project } = this.props;\n    const selectedResourceName = this.state.selectedResource\n      ? this.state.selectedResource.getName()\n      : null;\n\n    const resourcesManager = project.getResourcesManager();\n    const removedResourceNames = resourcesManager\n      .getAllResourceNames()\n      .toJSArray()\n      .filter(resourceName => {\n        return getResourceFilePathStatus(project, resourceName) === 'error';\n      });\n\n    removedResourceNames.forEach(resourceName => {\n      resourcesManager.removeResource(resourceName);\n      console.info('Removed due to invalid path: ' + resourceName);\n    });\n\n    // The selectedResource might be *invalid* now if it was removed.\n    // Be sure to drop the reference to it if that's the case.\n    if (removedResourceNames.includes(selectedResourceName)) {\n      this._onResourceSelected(null);\n    }\n\n    // Force update of the resources list as otherwise it could render\n    // resources that were just deleted.\n    if (this._resourcesList) {\n      this._resourcesList.forceUpdateList();\n    }\n  };\n\n  openProjectFolder = () => {\n    const project = this.props.project;\n    if (shell) shell.openItem(path.dirname(project.getProjectFile()));\n  };\n\n  openProperties = () => {\n    if (!this.editorMosaic) return;\n    if (!this.editorMosaic.openEditor('properties', 'start', 66, 'column')) {\n      this.setState({\n        showPropertiesInfoBar: true,\n      });\n    }\n  };\n\n  _onResourceSelected = (selectedResource: ?gdResource) => {\n    this.setState(\n      {\n        selectedResource,\n      },\n      () => {\n        if (this._propertiesEditor) this._propertiesEditor.forceUpdate();\n        this.updateToolbar();\n      }\n    );\n  };\n\n  render() {\n    const {\n      project,\n      onRenameResource,\n      onChooseResource,\n      resourceSources,\n    } = this.props;\n    const { selectedResource } = this.state;\n\n    const editors = {\n      properties: {\n        type: 'secondary',\n        title: t`Properties`,\n        renderEditor: () => (\n          <ResourcePropertiesEditor\n            key={selectedResource ? selectedResource.ptr : undefined}\n            resources={selectedResource ? [selectedResource] : []}\n            project={project}\n            resourcesLoader={this.resourcesLoader}\n            ref={propertiesEditor =>\n              (this._propertiesEditor = propertiesEditor)\n            }\n            onResourcePathUpdated={() => {\n              if (this._resourcesList) {\n                this._resourcesList.checkMissingPaths();\n              }\n            }}\n            onChooseResource={onChooseResource}\n            resourceSources={resourceSources}\n          />\n        ),\n      },\n      'resources-list': {\n        type: 'primary',\n        noTitleBar: true,\n        renderEditor: () => (\n          <ResourcesList\n            project={project}\n            onDeleteResource={this.deleteResource}\n            onRenameResource={onRenameResource}\n            onSelectResource={this._onResourceSelected}\n            selectedResource={selectedResource}\n            ref={resourcesList => (this._resourcesList = resourcesList)}\n            onRemoveUnusedResources={this._removeUnusedResources}\n            onRemoveAllResourcesWithInvalidPath={\n              this._removeAllResourcesWithInvalidPath\n            }\n          />\n        ),\n      },\n    };\n\n    return (\n      <div style={styles.container}>\n        <PreferencesContext.Consumer>\n          {({ getDefaultEditorMosaicNode, setDefaultEditorMosaicNode }) => (\n            <EditorMosaic\n              editors={editors}\n              ref={editorMosaic => (this.editorMosaic = editorMosaic)}\n              initialNodes={\n                getDefaultEditorMosaicNode('resources-editor') ||\n                initialMosaicEditorNodes\n              }\n              onPersistNodes={node =>\n                setDefaultEditorMosaicNode('resources-editor', node)\n              }\n            />\n          )}\n        </PreferencesContext.Consumer>\n        <InfoBar\n          message={\n            <Trans>\n              Properties panel is already opened. After selecting a resource,\n              inspect and change its properties from this panel.\n            </Trans>\n          }\n          show={!!this.state.showPropertiesInfoBar}\n          identifier=\"resource-properties-panel-explanation\"\n        />\n      </div>\n    );\n  }\n}\n","// @flow\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { AutoSizer } from 'react-virtualized';\nimport SortableVirtualizedItemList from '../UI/SortableVirtualizedItemList';\nimport Background from '../UI/Background';\nimport SearchBar from '../UI/SearchBar';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport { filterResourcesList } from './EnumerateResources';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport Window from '../Utils/Window';\nimport {\n  createOrUpdateResource,\n  getLocalResourceFullPath,\n  getResourceFilePathStatus,\n  RESOURCE_EXTENSIONS,\n} from './ResourceUtils.js';\nimport { type ResourceKind } from './ResourceSource.flow';\nimport optionalLazyRequire from '../Utils/OptionalLazyRequire';\n\nconst lazyRequireGlob = optionalLazyRequire('glob');\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst hasElectron = electron ? true : false;\n\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  listContainer: {\n    flex: 1,\n  },\n};\n\nconst getResourceName = (resource: gdResource) => resource.getName();\n\ntype State = {|\n  renamedResource: ?gdResource,\n  searchText: string,\n  resourcesWithErrors: { [string]: '' | 'error' | 'warning' },\n|};\n\ntype Props = {|\n  project: gdProject,\n  selectedResource: ?gdResource,\n  onSelectResource: (resource: ?gdResource) => void,\n  onDeleteResource: (resource: gdResource) => void,\n  onRenameResource: (\n    resource: gdResource,\n    newName: string,\n    cb: (boolean) => void\n  ) => void,\n  onRemoveUnusedResources: ResourceKind => void,\n  onRemoveAllResourcesWithInvalidPath: () => void,\n|};\n\nexport default class ResourcesList extends React.Component<Props, State> {\n  sortableList: any;\n  state: State = {\n    renamedResource: null,\n    searchText: '',\n    resourcesWithErrors: {},\n  };\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    // The component is costly to render, so avoid any re-rendering as much\n    // as possible.\n    // We make the assumption that no changes to resources list is made outside\n    // from the component.\n    // If a change is made, the component won't notice it: you have to manually\n    // call forceUpdate.\n\n    if (\n      this.state.renamedResource !== nextState.renamedResource ||\n      this.state.searchText !== nextState.searchText\n    )\n      return true;\n\n    if (\n      this.props.project !== nextProps.project ||\n      this.props.selectedResource !== nextProps.selectedResource\n    )\n      return true;\n\n    return false;\n  }\n\n  _deleteResource = (resource: gdResource) => {\n    this.props.onDeleteResource(resource);\n  };\n\n  _locateResourceFile = (resource: gdResource) => {\n    const resourceFolderPath = path.dirname(\n      getLocalResourceFullPath(this.props.project, resource.getName())\n    );\n    electron.shell.openItem(resourceFolderPath);\n  };\n\n  _openResourceFile = (resource: gdResource) => {\n    const resourceFilePath = getLocalResourceFullPath(\n      this.props.project,\n      resource.getName()\n    );\n    electron.shell.openItem(resourceFilePath);\n  };\n\n  _copyResourceFilePath = (resource: gdResource) => {\n    const resourceFilePath = getLocalResourceFullPath(\n      this.props.project,\n      resource.getName()\n    );\n    electron.clipboard.writeText(resourceFilePath);\n  };\n\n  _scanForNewResources = (\n    extensions: string,\n    createResource: () => gdResource\n  ) => {\n    const glob = lazyRequireGlob();\n    if (!glob) return;\n\n    const project = this.props.project;\n    const resourcesManager = project.getResourcesManager();\n    const projectPath = path.dirname(project.getProjectFile());\n\n    const getDirectories = (src, callback) => {\n      glob(src + '/**/*.{' + extensions + '}', callback);\n    };\n    getDirectories(projectPath, (err, res) => {\n      if (err) {\n        console.error('Error loading ', err);\n      } else {\n        res.forEach(pathFound => {\n          const fileName = path.relative(projectPath, pathFound);\n          if (!resourcesManager.hasResource(fileName)) {\n            createOrUpdateResource(project, createResource(), fileName);\n            console.info(`${fileName} added to project.`);\n          }\n        });\n      }\n      this.forceUpdate();\n    });\n  };\n\n  _editName = (resource: ?gdResource) => {\n    this.setState(\n      {\n        renamedResource: resource,\n      },\n      () => {\n        if (this.sortableList) this.sortableList.forceUpdateGrid();\n      }\n    );\n  };\n\n  _rename = (resource: gdResource, newName: string) => {\n    const { project } = this.props;\n    this.setState({\n      renamedResource: null,\n    });\n\n    if (resource.getName() === newName) return;\n\n    if (project.getResourcesManager().hasResource(newName)) {\n      showWarningBox('Another resource with this name already exists', {\n        delayToNextTick: true,\n      });\n      return;\n    }\n\n    const answer = Window.showConfirmDialog(\n      'Are you sure you want to rename this resource? \\nGame objects using the old name will no longer be able to find it!'\n    );\n    if (!answer) return;\n\n    this.props.onRenameResource(resource, newName, doRename => {\n      if (!doRename) return;\n      resource.setName(newName);\n      this.forceUpdate();\n    });\n  };\n\n  _moveSelectionTo = (destinationResource: gdResource) => {\n    const { project, selectedResource } = this.props;\n    if (!selectedResource) return;\n\n    const resourcesManager = project.getResourcesManager();\n    resourcesManager.moveResource(\n      resourcesManager.getResourcePosition(selectedResource.getName()),\n      resourcesManager.getResourcePosition(destinationResource.getName())\n    );\n    this.forceUpdateList();\n  };\n\n  forceUpdateList = () => {\n    this.forceUpdate();\n    if (this.sortableList) this.sortableList.forceUpdateGrid();\n  };\n\n  _renderResourceMenuTemplate = (i18n: I18nType) => (\n    resource: gdResource,\n    _index: number\n  ) => {\n    return [\n      {\n        label: i18n._(t`Rename`),\n        click: () => this._editName(resource),\n      },\n      {\n        label: i18n._(t`Remove`),\n        click: () => this._deleteResource(resource),\n      },\n      { type: 'separator' },\n      {\n        label: i18n._(t`Open File`),\n        click: () => this._openResourceFile(resource),\n        enabled: hasElectron,\n      },\n      {\n        label: i18n._(t`Locate File`),\n        click: () => this._locateResourceFile(resource),\n        enabled: hasElectron,\n      },\n      {\n        label: i18n._(t`Copy File Path`),\n        click: () => this._copyResourceFilePath(resource),\n        enabled: hasElectron,\n      },\n      { type: 'separator' },\n      {\n        label: i18n._(t`Scan for Images`),\n        click: () => {\n          this._scanForNewResources(\n            RESOURCE_EXTENSIONS.image,\n            () => new gd.ImageResource()\n          );\n        },\n        enabled: hasElectron,\n      },\n      {\n        label: i18n._(t`Scan for Audio`),\n        click: () => {\n          this._scanForNewResources(\n            RESOURCE_EXTENSIONS.audio,\n            () => new gd.AudioResource()\n          );\n        },\n        enabled: hasElectron,\n      },\n      {\n        label: i18n._(t`Scan for Fonts`),\n        click: () => {\n          this._scanForNewResources(\n            RESOURCE_EXTENSIONS.font,\n            () => new gd.FontResource()\n          );\n        },\n        enabled: hasElectron,\n      },\n      {\n        label: i18n._(t`Scan for Videos`),\n        click: () => {\n          this._scanForNewResources(\n            RESOURCE_EXTENSIONS.video,\n            () => new gd.VideoResource()\n          );\n        },\n        enabled: hasElectron,\n      },\n      { type: 'separator' },\n      {\n        label: i18n._(t`Remove Unused Images`),\n        click: () => {\n          this.props.onRemoveUnusedResources('image');\n        },\n      },\n      {\n        label: i18n._(t`Remove Unused Audio`),\n        click: () => {\n          this.props.onRemoveUnusedResources('audio');\n        },\n      },\n      {\n        label: i18n._(t`Remove Unused Fonts`),\n        click: () => {\n          this.props.onRemoveUnusedResources('font');\n        },\n      },\n      {\n        label: i18n._(t`Remove Resources with Invalid Path`),\n        click: () => {\n          this.props.onRemoveAllResourcesWithInvalidPath();\n        },\n        enabled: hasElectron,\n      },\n    ];\n  };\n\n  checkMissingPaths = () => {\n    const { project } = this.props;\n    const resourcesManager = project.getResourcesManager();\n    const resourceNames = resourcesManager.getAllResourceNames().toJSArray();\n    const resourcesWithErrors = {};\n    resourceNames.forEach(resourceName => {\n      resourcesWithErrors[resourceName] = getResourceFilePathStatus(\n        project,\n        resourceName\n      );\n    });\n    this.setState({ resourcesWithErrors });\n    this.forceUpdateList();\n  };\n\n  componentDidMount() {\n    this.checkMissingPaths();\n  }\n\n  render() {\n    const { project, selectedResource, onSelectResource } = this.props;\n    const { searchText } = this.state;\n\n    const resourcesManager = project.getResourcesManager();\n    const allResourcesList = resourcesManager\n      .getAllResourceNames()\n      .toJSArray()\n      .map(resourceName => resourcesManager.getResource(resourceName));\n    const filteredList = filterResourcesList(allResourcesList, searchText);\n\n    // Force List component to be mounted again if project\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const listKey = project.ptr;\n\n    return (\n      <Background>\n        <div style={styles.listContainer}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <I18n>\n                {({ i18n }) => (\n                  <SortableVirtualizedItemList\n                    key={listKey}\n                    ref={sortableList => (this.sortableList = sortableList)}\n                    fullList={filteredList}\n                    width={width}\n                    height={height}\n                    getItemName={getResourceName}\n                    selectedItems={selectedResource ? [selectedResource] : []}\n                    onItemSelected={onSelectResource}\n                    renamedItem={this.state.renamedResource}\n                    onRename={this._rename}\n                    onMoveSelectionToItem={this._moveSelectionTo}\n                    buildMenuTemplate={this._renderResourceMenuTemplate(i18n)}\n                    erroredItems={this.state.resourcesWithErrors}\n                    reactDndType=\"GD_RESOURCE\"\n                  />\n                )}\n              </I18n>\n            )}\n          </AutoSizer>\n        </div>\n        <SearchBar\n          value={searchText}\n          onRequestSearch={() => {}}\n          onChange={text =>\n            this.setState({\n              searchText: text,\n            })\n          }\n        />\n      </Background>\n    );\n  }\n}\n","// @flow\n\nexport const filterResourcesList = (\n  list: Array<gdResource>,\n  searchText: string\n): Array<gdResource> => {\n  if (!searchText) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list.filter((resource: gdResource) => {\n    return (\n      resource\n        .getName()\n        .toLowerCase()\n        .indexOf(lowercaseSearchText) !== -1\n    );\n  });\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport React, { PureComponent } from 'react';\nimport { ToolbarGroup } from '../UI/Toolbar';\nimport ToolbarIcon from '../UI/ToolbarIcon';\nimport ToolbarSeparator from '../UI/ToolbarSeparator';\n\ntype Props = {|\n  onOpenProjectFolder: () => void,\n  onDeleteSelection: () => void,\n  canDelete: boolean,\n  onOpenProperties: () => void,\n|};\n\ntype State = {||};\n\nexport class Toolbar extends PureComponent<Props, State> {\n  render() {\n    const { canDelete } = this.props;\n\n    return (\n      <ToolbarGroup lastChild>\n        <ToolbarIcon\n          onClick={this.props.onOpenProjectFolder}\n          src=\"res/ribbon_default/open32.png\"\n          tooltip={t`Open the project folder`}\n        />\n        <ToolbarSeparator />\n        <ToolbarIcon\n          onClick={this.props.onOpenProperties}\n          src=\"res/ribbon_default/editprop32.png\"\n          tooltip={t`Open the properties panel`}\n        />\n        <ToolbarSeparator />\n        <ToolbarIcon\n          onClick={this.props.onDeleteSelection}\n          src=\"res/ribbon_default/deleteselected32.png\"\n          disabled={!canDelete}\n          tooltip={t`Delete the selected resource`}\n        />\n      </ToolbarGroup>\n    );\n  }\n}\n\nexport default Toolbar;\n","// @flow\nimport { mapFor } from '../Utils/MapFor';\nimport flatten from 'lodash/flatten';\nimport { type SelectedTags, hasStringAllTags } from '../Utils/TagsHelper';\nconst gd: libGDevelop = global.gd;\n\nexport type EnumeratedObjectMetadata = {|\n  extension: gdPlatformExtension,\n  objectMetadata: gdObjectMetadata,\n  name: string,\n  fullName: string,\n  description: string,\n  iconFilename: string,\n|};\n\nexport type ObjectWithContext = {|\n  object: gdObject,\n  global: boolean,\n|};\n\nexport type GroupWithContext = {|\n  group: gdObjectGroup,\n  global: boolean,\n|};\n\nexport type ObjectWithContextList = Array<ObjectWithContext>;\nexport type GroupWithContextList = Array<GroupWithContext>;\n\nexport const isSameObjectWithContext = (\n  objectWithContext: ?ObjectWithContext\n) => (other: ?ObjectWithContext) => {\n  return (\n    objectWithContext &&\n    other &&\n    objectWithContext.global === other.global &&\n    objectWithContext.object === other.object\n  );\n};\n\nexport const enumerateObjects = (\n  project: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  type: ?string = undefined\n) => {\n  const filterObject = (object: gdObject): boolean => {\n    return (\n      !type ||\n      gd.getTypeOfObject(project, objectsContainer, object.getName(), false) ===\n        type\n    );\n  };\n\n  const containerObjectsList: ObjectWithContextList = mapFor(\n    0,\n    objectsContainer.getObjectsCount(),\n    i => objectsContainer.getObjectAt(i)\n  )\n    .filter(filterObject)\n    .map((object: gdObject): ObjectWithContext => ({ object, global: false }));\n\n  const projectObjectsList: ObjectWithContextList =\n    project === objectsContainer\n      ? []\n      : mapFor(0, project.getObjectsCount(), i => project.getObjectAt(i))\n          .filter(filterObject)\n          .map(\n            (object: gdObject): ObjectWithContext => ({\n              object,\n              global: true,\n            })\n          );\n\n  const allObjectsList: ObjectWithContextList = containerObjectsList.concat(\n    projectObjectsList\n  );\n\n  return {\n    containerObjectsList,\n    projectObjectsList,\n    allObjectsList,\n  };\n};\n\nexport const enumerateObjectTypes = (\n  project: gdProject\n): Array<EnumeratedObjectMetadata> => {\n  const platform = project.getCurrentPlatform();\n  const extensionsList = platform.getAllPlatformExtensions();\n\n  return flatten(\n    mapFor(0, extensionsList.size(), i => {\n      const extension = extensionsList.at(i);\n\n      return extension\n        .getExtensionObjectsTypes()\n        .toJSArray()\n        .map(objectType => extension.getObjectMetadata(objectType))\n        .map(objectMetadata => ({\n          extension,\n          objectMetadata,\n          name: objectMetadata.getName(),\n          fullName: objectMetadata.getFullName(),\n          description: objectMetadata.getDescription(),\n          iconFilename: objectMetadata.getIconFilename(),\n        }));\n    })\n  );\n};\n\nexport type ObjectFilteringOptions = {|\n  searchText: string,\n  selectedTags: SelectedTags,\n|};\n\nexport const filterObjectsList = (\n  list: ObjectWithContextList,\n  { searchText, selectedTags }: ObjectFilteringOptions\n): ObjectWithContextList => {\n  if (!searchText && !selectedTags.length) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list\n    .filter((objectWithContext: ObjectWithContext) => {\n      if (!selectedTags.length) return true;\n\n      const objectTags = objectWithContext.object.getTags();\n      return hasStringAllTags(objectTags, selectedTags);\n    })\n    .filter((objectWithContext: ObjectWithContext) => {\n      return (\n        objectWithContext.object\n          .getName()\n          .toLowerCase()\n          .indexOf(lowercaseSearchText) !== -1\n      );\n    });\n};\n\nexport const filterGroupsList = (\n  list: GroupWithContextList,\n  searchText: string\n): GroupWithContextList => {\n  if (!searchText) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list.filter((groupWithContext: GroupWithContext) => {\n    return (\n      groupWithContext.group\n        .getName()\n        .toLowerCase()\n        .indexOf(lowercaseSearchText) !== -1\n    );\n  });\n};\n\nexport const enumerateGroups = (\n  objectGroups: gdObjectGroupsContainer\n): Array<gdObjectGroup> => {\n  return mapFor(0, objectGroups.count(), i => {\n    return objectGroups.getAt(i);\n  });\n};\n\nexport const enumerateObjectsAndGroups = (\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  type: ?string = undefined\n) => {\n  const filterObject = (object: gdObject): boolean => {\n    return (\n      !type ||\n      gd.getTypeOfObject(\n        globalObjectsContainer,\n        objectsContainer,\n        object.getName(),\n        false\n      ) === type\n    );\n  };\n  const filterGroup = (group: gdObjectGroup): boolean => {\n    return (\n      !type ||\n      gd.getTypeOfObject(\n        globalObjectsContainer,\n        objectsContainer,\n        group.getName(),\n        true\n      ) === type\n    );\n  };\n\n  const containerObjectsList: ObjectWithContextList = mapFor(\n    0,\n    objectsContainer.getObjectsCount(),\n    i => objectsContainer.getObjectAt(i)\n  )\n    .filter(filterObject)\n    .map(object => ({ object, global: false }));\n\n  const containerGroups = objectsContainer.getObjectGroups();\n  const containerGroupsList: GroupWithContextList = enumerateGroups(\n    containerGroups\n  )\n    .filter(filterGroup)\n    .map(group => ({ group, global: false }));\n\n  const projectObjectsList: ObjectWithContextList =\n    globalObjectsContainer === objectsContainer\n      ? []\n      : mapFor(0, globalObjectsContainer.getObjectsCount(), i =>\n          globalObjectsContainer.getObjectAt(i)\n        )\n          .filter(filterObject)\n          .map(object => ({ object, global: true }));\n\n  const projectGroups = globalObjectsContainer.getObjectGroups();\n  const projectGroupsList: GroupWithContextList =\n    globalObjectsContainer === objectsContainer\n      ? []\n      : enumerateGroups(projectGroups)\n          .filter(filterGroup)\n          .map(group => ({ group, global: true }));\n\n  const allObjectsList: ObjectWithContextList = containerObjectsList.concat(\n    projectObjectsList\n  );\n  const allGroupsList: GroupWithContextList = containerGroupsList.concat(\n    projectGroupsList\n  );\n\n  return {\n    containerObjectsList,\n    projectObjectsList,\n    allObjectsList,\n    containerGroupsList,\n    projectGroupsList,\n    allGroupsList,\n  };\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport SelectField from '../../UI/SelectField';\nimport FlatButton from '../../UI/FlatButton';\nimport SelectOption from '../../UI/SelectOption';\nimport Dialog from '../../UI/Dialog';\nimport { Column, Line } from '../../UI/Grid';\nimport Window from '../../Utils/Window';\nimport PreferencesContext from './PreferencesContext';\nimport AlertMessage from '../../UI/AlertMessage';\nimport LocalesMetadata from '../../locales/LocalesMetadata';\nimport { I18n } from '@lingui/react';\n\ntype Props = {|\n  open: boolean,\n  onClose: (languageDidChange: boolean) => void,\n|};\n\ntype State = {|\n  languageDidChange: boolean,\n|};\n\nconst displayLocaleMetadata = localeMetadata => {\n  if (localeMetadata.languageCode === 'en') return false;\n  if (localeMetadata.languageCode === 'pseudo_LOCALE') return Window.isDev();\n\n  return true;\n};\n\nconst renderLanguageSelectOption = localeMetadata => {\n  const translationRatio = localeMetadata.translationRatio || 0;\n  const percent = (100 * localeMetadata.translationRatio).toFixed(0);\n  const isStarted = translationRatio > 0;\n\n  return (\n    <SelectOption\n      value={localeMetadata.languageCode}\n      primaryText={\n        localeMetadata.languageNativeName +\n        ' (' +\n        localeMetadata.languageName +\n        ')' +\n        (isStarted ? ` - ~${percent}%` : '')\n      }\n      disabled={!isStarted}\n      key={localeMetadata.languageCode}\n    />\n  );\n};\n\nexport default class LanguageDialog extends Component<Props, State> {\n  state = {\n    languageDidChange: false,\n  };\n\n  render() {\n    const { open, onClose } = this.props;\n    if (!open) return null;\n\n    const localesToDisplay = LocalesMetadata.filter(displayLocaleMetadata);\n    const goodProgressLocales = localesToDisplay.filter(\n      localeMetadata => localeMetadata.translationRatio > 0.5\n    );\n    const startedLocales = localesToDisplay.filter(\n      localeMetadata => localeMetadata.translationRatio < 0.5\n    );\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <PreferencesContext.Consumer>\n            {({ values, setLanguage }) => {\n              const isLoadingLanguage = i18n.language !== values.language;\n\n              return (\n                <Dialog\n                  actions={[\n                    <FlatButton\n                      label={\n                        isLoadingLanguage ? (\n                          <Trans>Loading...</Trans>\n                        ) : (\n                          <Trans>Close</Trans>\n                        )\n                      }\n                      primary={false}\n                      onClick={() => {\n                        onClose(this.state.languageDidChange);\n                      }}\n                      disabled={isLoadingLanguage}\n                      key=\"close\"\n                    />,\n                  ]}\n                  secondaryActions={[\n                    <FlatButton\n                      label={<Trans>Report a wrong translation</Trans>}\n                      key=\"report-wrong-translation\"\n                      primary={false}\n                      onClick={() =>\n                        Window.openExternalURL(\n                          'https://github.com/4ian/GDevelop/issues/969'\n                        )\n                      }\n                    />,\n                  ]}\n                  onRequestClose={() => onClose(this.state.languageDidChange)}\n                  cannotBeDismissed={false}\n                  open={open}\n                  title={<Trans>Language</Trans>}\n                >\n                  <Column noMargin>\n                    <Line>\n                      <AlertMessage kind=\"info\">\n                        <Trans>\n                          Support for translations is still new and in beta.\n                          GDevelop needs your help to be translated in your\n                          language!\n                        </Trans>\n                      </AlertMessage>\n                    </Line>\n                    <Line expand>\n                      <SelectField\n                        floatingLabelText={\n                          <Trans>Choose GDevelop language</Trans>\n                        }\n                        value={values.language}\n                        onChange={(e, i, value: string) => {\n                          setLanguage(value);\n                          this.setState({\n                            languageDidChange: true,\n                          });\n                        }}\n                        fullWidth\n                      >\n                        <SelectOption\n                          value=\"en\"\n                          primaryText=\"English (default)\"\n                        />\n                        {goodProgressLocales.map(localeMetadata =>\n                          renderLanguageSelectOption(localeMetadata)\n                        )}\n                        {startedLocales.map(localeMetadata =>\n                          renderLanguageSelectOption(localeMetadata)\n                        )}\n                      </SelectField>\n                    </Line>\n                    <Line expand>\n                      <FlatButton\n                        primary\n                        label={\n                          <Trans>Help to translate GD in your language</Trans>\n                        }\n                        onClick={() =>\n                          Window.openExternalURL(\n                            'https://crowdin.com/project/gdevelop'\n                          )\n                        }\n                        fullWidth\n                      />\n                    </Line>\n                  </Column>\n                </Dialog>\n              );\n            }}\n          </PreferencesContext.Consumer>\n        )}\n      </I18n>\n    );\n  }\n}\n","// This file is generated by compile-translations.js script\n// prettier-ignore\nmodule.exports = [\n  {\n    \"languageCode\": \"af_ZA\",\n    \"languageName\": \"Afrikaans\",\n    \"languageNativeName\": \"Afrikaans\",\n    \"translationRatio\": 0.010320678215997026\n  },\n  {\n    \"languageCode\": \"ar_SA\",\n    \"languageName\": \"Arabic\",\n    \"languageNativeName\": \"اللغة العربية\",\n    \"translationRatio\": 0.32215259859933654\n  },\n  {\n    \"languageCode\": \"az_AZ\",\n    \"languageName\": \"Azerbaijani\",\n    \"languageNativeName\": \"azərbaycan dili\",\n    \"translationRatio\": 0.02064135643199405\n  },\n  {\n    \"languageCode\": \"bg_BG\",\n    \"languageName\": \"Bulgarian\",\n    \"languageNativeName\": \"български език\",\n    \"translationRatio\": 0.05860670844084037\n  },\n  {\n    \"languageCode\": \"bn_BD\",\n    \"languageName\": \"Bengali\",\n    \"languageNativeName\": \"বাংলা\",\n    \"translationRatio\": 0.06929598230740874\n  },\n  {\n    \"languageCode\": \"ca_ES\",\n    \"languageName\": \"Catalan\",\n    \"languageNativeName\": \"Català\",\n    \"translationRatio\": 0.10320678215997048\n  },\n  {\n    \"languageCode\": \"cs_CZ\",\n    \"languageName\": \"Czech\",\n    \"languageNativeName\": \"čeština\",\n    \"translationRatio\": 0.13896056026538883\n  },\n  {\n    \"languageCode\": \"da_DK\",\n    \"languageName\": \"Danish\",\n    \"languageNativeName\": \"dansk\",\n    \"translationRatio\": 0.03133063029856242\n  },\n  {\n    \"languageCode\": \"de_DE\",\n    \"languageName\": \"German\",\n    \"languageNativeName\": \"Deutsch\",\n    \"translationRatio\": 0.7760781422779212\n  },\n  {\n    \"languageCode\": \"el_GR\",\n    \"languageName\": \"Greek\",\n    \"languageNativeName\": \"Ελληνικά\",\n    \"translationRatio\": 0.22152598599336526\n  },\n  {\n    \"languageCode\": \"en\",\n    \"languageName\": \"English\",\n    \"languageNativeName\": \"English\",\n    \"translationRatio\": 0.04025256511444353\n  },\n  {\n    \"languageCode\": \"eo_UY\",\n    \"languageName\": \"Esperanto\",\n    \"languageNativeName\": \"Esperanto\",\n    \"translationRatio\": 0.018614080353851814\n  },\n  {\n    \"languageCode\": \"es_ES\",\n    \"languageName\": \"Spanish\",\n    \"languageNativeName\": \"Español\",\n    \"translationRatio\": 0.9120899373387394\n  },\n  {\n    \"languageCode\": \"fa_IR\",\n    \"languageName\": \"Persian\",\n    \"languageNativeName\": \"فارسی\",\n    \"translationRatio\": 0.20936232952451161\n  },\n  {\n    \"languageCode\": \"fi_FI\",\n    \"languageName\": \"Finnish\",\n    \"languageNativeName\": \"suomi\",\n    \"translationRatio\": 0.2788426096572061\n  },\n  {\n    \"languageCode\": \"fil_PH\",\n    \"languageName\": \"Filipino\",\n    \"languageNativeName\": \"Mga Filipino\",\n    \"translationRatio\": 0.5105049760412828\n  },\n  {\n    \"languageCode\": \"fr_FR\",\n    \"languageName\": \"French\",\n    \"languageNativeName\": \"Français\",\n    \"translationRatio\": 0.9071138960560265\n  },\n  {\n    \"languageCode\": \"ha_HG\",\n    \"languageName\": \"Hausa\",\n    \"languageNativeName\": \"هَوُسَ\",\n    \"translationRatio\": 0.016586804275709577\n  },\n  {\n    \"languageCode\": \"he_IL\",\n    \"languageName\": \"Hebrew\",\n    \"languageNativeName\": \"עברית\",\n    \"translationRatio\": 0.02451161076299302\n  },\n  {\n    \"languageCode\": \"hi_IN\",\n    \"languageName\": \"Hindi\",\n    \"languageNativeName\": \"हिन्दी\",\n    \"translationRatio\": 0.3337633615923332\n  },\n  {\n    \"languageCode\": \"hu_HU\",\n    \"languageName\": \"Hungarian\",\n    \"languageNativeName\": \"magyar\",\n    \"translationRatio\": 0.20549207519351276\n  },\n  {\n    \"languageCode\": \"id_ID\",\n    \"languageName\": \"Indonesian\",\n    \"languageNativeName\": \"Bahasa Indonesia\",\n    \"translationRatio\": 0.4598230740877257\n  },\n  {\n    \"languageCode\": \"it_IT\",\n    \"languageName\": \"Italian\",\n    \"languageNativeName\": \"Italiano\",\n    \"translationRatio\": 0.892185772207888\n  },\n  {\n    \"languageCode\": \"ja_JP\",\n    \"languageName\": \"Japanese\",\n    \"languageNativeName\": \"日本語\",\n    \"translationRatio\": 0.9697751566531515\n  },\n  {\n    \"languageCode\": \"ko_KR\",\n    \"languageName\": \"Korean\",\n    \"languageNativeName\": \"한국어\",\n    \"translationRatio\": 0.7775525248802064\n  },\n  {\n    \"languageCode\": \"lt_LT\",\n    \"languageName\": \"Lithuanian\",\n    \"languageNativeName\": \"lietuvių kalba\",\n    \"translationRatio\": 0.03427939550313308\n  },\n  {\n    \"languageCode\": \"lv_LV\",\n    \"languageName\": \"Latvian\",\n    \"languageNativeName\": \"latviešu valoda\",\n    \"translationRatio\": 0.009399189089568716\n  },\n  {\n    \"languageCode\": \"mr_IN\",\n    \"languageName\": \"Marathi\",\n    \"languageNativeName\": \"मराठी\",\n    \"translationRatio\": 0.00995208256542568\n  },\n  {\n    \"languageCode\": \"ms_MY\",\n    \"languageName\": \"Malay\",\n    \"languageNativeName\": \"Bahasa Malaysia\",\n    \"translationRatio\": 0.04902322152598604\n  },\n  {\n    \"languageCode\": \"my_MM\",\n    \"languageName\": \"Burmese\",\n    \"languageNativeName\": \"ဗမာစာ\",\n    \"translationRatio\": 0.010320678215997026\n  },\n  {\n    \"languageCode\": \"nl_NL\",\n    \"languageName\": \"Dutch\",\n    \"languageNativeName\": \"Nederlands\",\n    \"translationRatio\": 0.38426096572060453\n  },\n  {\n    \"languageCode\": \"no_NO\",\n    \"languageName\": \"Norwegian\",\n    \"languageNativeName\": \"Norsk\",\n    \"translationRatio\": 0.2042019904165131\n  },\n  {\n    \"languageCode\": \"pl_PL\",\n    \"languageName\": \"Polish\",\n    \"languageNativeName\": \"język polski\",\n    \"translationRatio\": 0.8875783265757464\n  },\n  {\n    \"languageCode\": \"pseudo_LOCALE\",\n    \"languageName\": \"for development only\",\n    \"languageNativeName\": \"Pseudolocalization\",\n    \"translationRatio\": 0.9952644041041832\n  },\n  {\n    \"languageCode\": \"pt_BR\",\n    \"languageName\": \"Brazilian Portuguese\",\n    \"languageNativeName\": \"Português brasileiro\",\n    \"translationRatio\": 0.9299668263914486\n  },\n  {\n    \"languageCode\": \"pt_PT\",\n    \"languageName\": \"Portuguese\",\n    \"languageNativeName\": \"Português\",\n    \"translationRatio\": 0.5493918171765573\n  },\n  {\n    \"languageCode\": \"ro_RO\",\n    \"languageName\": \"Romanian\",\n    \"languageNativeName\": \"Română\",\n    \"translationRatio\": 0.05786951713969779\n  },\n  {\n    \"languageCode\": \"ru_RU\",\n    \"languageName\": \"Russian\",\n    \"languageNativeName\": \"Русский\",\n    \"translationRatio\": 0.9683007740508662\n  },\n  {\n    \"languageCode\": \"sk_SK\",\n    \"languageName\": \"Slovak\",\n    \"languageNativeName\": \"slovenčina\",\n    \"translationRatio\": 0.023774419461850327\n  },\n  {\n    \"languageCode\": \"sl_SI\",\n    \"languageName\": \"Slovene\",\n    \"languageNativeName\": \"slovenski jezik\",\n    \"translationRatio\": 0.8964246221894582\n  },\n  {\n    \"languageCode\": \"sr_CS\",\n    \"languageName\": \"Serbian (Latin)\",\n    \"languageNativeName\": \"srpski\",\n    \"translationRatio\": 0.29026907482491704\n  },\n  {\n    \"languageCode\": \"sr_SP\",\n    \"languageName\": \"Serbian\",\n    \"languageNativeName\": \"српски језик\",\n    \"translationRatio\": 0.6015481017323996\n  },\n  {\n    \"languageCode\": \"sv_SE\",\n    \"languageName\": \"Swedish\",\n    \"languageNativeName\": \"svenska\",\n    \"translationRatio\": 0.18521931441208994\n  },\n  {\n    \"languageCode\": \"th_TH\",\n    \"languageName\": \"Thai\",\n    \"languageNativeName\": \"ไทย\",\n    \"translationRatio\": 0.04589015849612976\n  },\n  {\n    \"languageCode\": \"tr_TR\",\n    \"languageName\": \"Turkish\",\n    \"languageNativeName\": \"Türkçe\",\n    \"translationRatio\": 0.7425359380759307\n  },\n  {\n    \"languageCode\": \"uk_UA\",\n    \"languageName\": \"Ukrainian\",\n    \"languageNativeName\": \"Українська\",\n    \"translationRatio\": 0.8074087725764836\n  },\n  {\n    \"languageCode\": \"ur_PK\",\n    \"languageName\": \"Urdu\",\n    \"languageNativeName\": \"اردو\",\n    \"translationRatio\": 0.01806118687799485\n  },\n  {\n    \"languageCode\": \"uz_UZ\",\n    \"languageName\": \"Uzbek\",\n    \"languageNativeName\": \"Ўзбек\",\n    \"translationRatio\": 0.01087357169185399\n  },\n  {\n    \"languageCode\": \"yo_NG\",\n    \"languageName\": \"Yoruba\",\n    \"languageNativeName\": \"Yorùbá\",\n    \"translationRatio\": 0.5669001105786952\n  },\n  {\n    \"languageCode\": \"zh_CN\",\n    \"languageName\": \"Chinese Simplified\",\n    \"languageNativeName\": \"简化字\",\n    \"translationRatio\": 0.9703280501290085\n  },\n  {\n    \"languageCode\": \"zh_TW\",\n    \"languageName\": \"Chinese Traditional\",\n    \"languageNativeName\": \"正體字\",\n    \"translationRatio\": 0.207519351271655\n  }\n];\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport { type StorageProvider } from '.';\nimport { List, ListItem } from '../UI/List';\nimport RaisedButton from '../UI/RaisedButton';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport BackgroundText from '../UI/BackgroundText';\nimport { Column, Line } from '../UI/Grid';\nconst electron = optionalRequire('electron');\n\ntype Props = {|\n  storageProviders: Array<StorageProvider>,\n  onChooseProvider: StorageProvider => void,\n  onClose: () => void,\n  onCreateNewProject: () => void,\n|};\n\nconst OpenFromStorageProviderDialog = ({\n  onClose,\n  storageProviders,\n  onChooseProvider,\n  onCreateNewProject,\n}: Props) => {\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Dialog\n          title={<Trans>Choose where to load the project from</Trans>}\n          onRequestClose={onClose}\n          actions={[\n            <FlatButton\n              label={<Trans>Cancel</Trans>}\n              key=\"close\"\n              primary={false}\n              onClick={onClose}\n            />,\n          ]}\n          secondaryActions={[\n            <RaisedButton\n              label={<Trans>Create a new project</Trans>}\n              key=\"create-new-project\"\n              primary\n              onClick={onCreateNewProject}\n            />,\n          ]}\n          cannotBeDismissed={false}\n          open\n          noMargin\n          maxWidth=\"sm\"\n        >\n          <List>\n            {storageProviders\n              .filter(storageProvider => !storageProvider.hiddenInOpenDialog)\n              .map(storageProvider => (\n                <ListItem\n                  key={storageProvider.internalName}\n                  disabled={!!storageProvider.disabled}\n                  primaryText={i18n._(storageProvider.name)}\n                  leftIcon={\n                    storageProvider.renderIcon\n                      ? storageProvider.renderIcon()\n                      : undefined\n                  }\n                  onClick={() => onChooseProvider(storageProvider)}\n                />\n              ))}\n          </List>\n          {!electron && (\n            <Line>\n              <Column>\n                <BackgroundText>\n                  <Trans>\n                    If you have a popup blocker interrupting the opening, allow\n                    the popups and try a second time to open the project.\n                  </Trans>\n                </BackgroundText>\n              </Column>\n            </Line>\n          )}\n        </Dialog>\n      )}\n    </I18n>\n  );\n};\n\nexport default OpenFromStorageProviderDialog;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport { type StorageProvider } from '.';\nimport { List, ListItem } from '../UI/List';\n\ntype Props = {|\n  storageProviders: Array<StorageProvider>,\n  onChooseProvider: StorageProvider => void,\n  onClose: () => void,\n|};\n\nexport default ({ onClose, storageProviders, onChooseProvider }: Props) => {\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Dialog\n          title={<Trans>Choose where to save the project to</Trans>}\n          onRequestClose={onClose}\n          actions={[\n            <FlatButton\n              label={<Trans>Cancel</Trans>}\n              key=\"close\"\n              primary={false}\n              onClick={onClose}\n            />,\n          ]}\n          cannotBeDismissed={true}\n          open\n          noMargin\n          maxWidth=\"sm\"\n        >\n          <List>\n            {storageProviders\n              .filter(storageProvider => !storageProvider.hiddenInSaveDialog)\n              .map(storageProvider => (\n                <ListItem\n                  key={storageProvider.internalName}\n                  disabled={!!storageProvider.disabled}\n                  primaryText={i18n._(storageProvider.name)}\n                  leftIcon={\n                    storageProvider.renderIcon\n                      ? storageProvider.renderIcon()\n                      : undefined\n                  }\n                  onClick={() => onChooseProvider(storageProvider)}\n                />\n              ))}\n          </List>\n        </Dialog>\n      )}\n    </I18n>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport BackgroundText from '../UI/BackgroundText';\nimport { Column, Line } from '../UI/Grid';\nimport Text from '../UI/Text';\nimport { type StorageProviderOperations } from '.';\n\ntype OpenConfirmDialogProps = {|\n  onClose: () => void,\n  onConfirm: () => void,\n|};\n\nexport const OpenConfirmDialog = ({\n  onClose,\n  onConfirm,\n}: OpenConfirmDialogProps) => {\n  return (\n    <Dialog\n      title={<Trans>Confirm the opening</Trans>}\n      actions={[\n        <FlatButton\n          label={<Trans>Cancel</Trans>}\n          key=\"close\"\n          primary={false}\n          onClick={onClose}\n        />,\n        <RaisedButton\n          label={<Trans>Open the project</Trans>}\n          key=\"open-project\"\n          primary\n          onClick={onConfirm}\n        />,\n      ]}\n      cannotBeDismissed={true}\n      open\n      maxWidth=\"sm\"\n    >\n      <Line>\n        <Column>\n          <Text>\n            <Trans>\n              You're about to open (or re-open) a project. Click on \"Open the\n              Project\" to continue.\n            </Trans>\n          </Text>\n        </Column>\n      </Line>\n      <Line>\n        <Column>\n          <BackgroundText>\n            <Trans>\n              If you have a popup blocker interrupting the opening, allow the\n              popups and try a second time to open the project.\n            </Trans>\n          </BackgroundText>\n        </Column>\n      </Line>\n    </Dialog>\n  );\n};\n\nexport const useOpenConfirmDialog = () => {\n  const interactionMade = React.useRef(false);\n  const pendingConfirmationPromiseResolve = React.useRef<?(boolean) => void>(\n    null\n  );\n  const [openConfirmDialogOpen, openOpenConfirmDialog] = React.useState(false);\n\n  return {\n    /**\n     * Ensure that the user does an interaction (i.e: click on a button), before\n     * resolving the promise, if the specified storage provider needs an interaction.\n     * This is for example the case when opening directly the web-app with a file\n     * to open from the URL (like a Google Drive file).\n     */\n    ensureInteractionHappened: (\n      storageProviderOperations: StorageProviderOperations\n    ): Promise<boolean> => {\n      return new Promise(resolve => {\n        if (\n          interactionMade.current ||\n          !storageProviderOperations.doesInitialOpenRequireUserInteraction\n        ) {\n          // No need for any interaction, just proceed.\n          resolve(true);\n          return;\n        }\n\n        // We need an interaction first, display a confirmation dialog\n        console.info(\n          'Displaying confirmation dialog to ensure an interaction is made before continuing.'\n        );\n        pendingConfirmationPromiseResolve.current = resolve;\n        openOpenConfirmDialog(true);\n      });\n    },\n    /**\n     * Render, if needed, the dialog that will ask the user to confirm the opening.\n     */\n    renderOpenConfirmDialog: () => {\n      if (!openConfirmDialogOpen) return null;\n\n      const closeAndResolveWith = (proceed: boolean) => {\n        interactionMade.current = true;\n        openOpenConfirmDialog(false);\n        const resolve = pendingConfirmationPromiseResolve.current;\n        if (resolve) {\n          resolve(proceed);\n          pendingConfirmationPromiseResolve.current = null;\n        }\n      };\n\n      return (\n        <OpenConfirmDialog\n          onClose={() => closeAndResolveWith(false)}\n          onConfirm={() => closeAndResolveWith(true)}\n        />\n      );\n    },\n  };\n};\n","// @flow\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\n\nexport default function verifyProjectContent(\n  i18n: I18nType,\n  content: Object\n): boolean {\n  if (!content.gdVersion && content.eventsFunctions) {\n    showErrorBox({\n      message: [\n        i18n._(t`Unable to open this file.`),\n        i18n._(\n          t`This file is an extension file for GDevelop 5. You should instead import it, using the window to add a new extension to your project.`\n        ),\n      ].join('\\n'),\n      rawError: undefined,\n      errorId: 'extension-opened-as-project-error',\n      doNotReport: true,\n    });\n    return false;\n  }\n\n  if (!content.gdVersion && !content.eventsFunctions) {\n    showErrorBox({\n      message: [\n        i18n._(t`Unable to open this file.`),\n        i18n._(\n          t`This file is not recognized as a GDevelop 5 project. Be sure to open a file that was saved using GDevelop.`\n        ),\n      ].join('\\n'),\n      rawError: undefined,\n      errorId: 'malformed-project-error',\n      doNotReport: true,\n    });\n    return false;\n  }\n  return true;\n}\n","import React from 'react';\n\n/**\n * A useState hook that returns a promise when the state is set.\n * *Don't use it* excepted for MainFrame. This is used while transitioning\n * MainFrame to hooks - and it's not typed properly.\n */\nexport default function useStateWithCallback(initialValue) {\n  const [state, setState] = React.useState(initialValue);\n  const callback = React.useRef(null);\n\n  const useStateWithCB = React.useCallback(\n    newValue => {\n      return new Promise(resolve => {\n        callback.current = resolve;\n        setState(newValue);\n      });\n    },\n    [setState]\n  );\n\n  React.useEffect(\n    () => {\n      if (callback.current !== null) {\n        callback.current(state);\n        callback.current = null;\n      }\n    },\n    [state]\n  );\n  return [state, useStateWithCB];\n}\n","// @flow\nimport * as React from 'react';\nimport { type I18n } from '@lingui/core';\nimport {\n  useCommand,\n  useCommandWithOptions,\n} from '../CommandPalette/CommandHooks';\nimport {\n  enumerateLayouts,\n  enumerateExternalEvents,\n  enumerateExternalLayouts,\n  enumerateEventsFunctionsExtensions,\n} from '../ProjectManager/EnumerateProjectItems';\n\ntype Item =\n  | gdLayout\n  | gdExternalEvents\n  | gdExternalLayout\n  | gdEventsFunctionsExtension;\n\n/**\n * Helper function to generate options list\n * for each kind of project item\n */\nconst generateProjectItemOptions = <T: Item>(\n  project: ?gdProject,\n  enumerate: (project: gdProject) => Array<T>,\n  onOpen: string => void\n) => {\n  if (!project) return [];\n  return enumerate(project).map(item => ({\n    text: item.getName(),\n    handler: () => onOpen(item.getName()),\n  }));\n};\n\ntype CommandHandlers = {|\n  i18n: I18n,\n  project: ?gdProject,\n  previewEnabled: boolean,\n  hasPreviewsRunning: boolean,\n  onOpenProjectManager: () => void,\n  onLaunchPreview: () => void | Promise<void>,\n  onLaunchDebugPreview: () => void,\n  onLaunchNetworkPreview: () => void,\n  onHotReloadPreview: () => void,\n  allowNetworkPreview: boolean,\n  onOpenStartPage: () => void,\n  onCreateProject: () => void,\n  onOpenProject: () => void,\n  onSaveProject: () => void,\n  onSaveProjectAs: () => void,\n  onCloseApp: () => void,\n  onCloseProject: () => Promise<void>,\n  onExportGame: () => void,\n  onOpenLayout: string => void,\n  onOpenExternalEvents: string => void,\n  onOpenExternalLayout: string => void,\n  onOpenEventsFunctionsExtension: string => void,\n  onOpenCommandPalette: () => void,\n  onOpenProfile: () => void,\n  onOpenGamesDashboard: () => void,\n|};\n\nconst useMainFrameCommands = (handlers: CommandHandlers) => {\n  useCommand('QUIT_APP', true, {\n    handler: handlers.onCloseApp,\n  });\n\n  useCommand('OPEN_PROFILE', !!handlers.project, {\n    handler: handlers.onOpenProfile,\n  });\n\n  useCommand('OPEN_GAMES_DASHBOARD', !!handlers.project, {\n    handler: handlers.onOpenGamesDashboard,\n  });\n\n  useCommand('OPEN_PROJECT_MANAGER', !!handlers.project, {\n    handler: handlers.onOpenProjectManager,\n  });\n\n  useCommand('LAUNCH_NEW_PREVIEW', handlers.previewEnabled, {\n    handler: handlers.onLaunchPreview,\n  });\n\n  useCommand('HOT_RELOAD_PREVIEW', handlers.hasPreviewsRunning, {\n    handler: handlers.onHotReloadPreview,\n  });\n\n  useCommand(\n    'LAUNCH_DEBUG_PREVIEW',\n    handlers.previewEnabled && handlers.allowNetworkPreview,\n    {\n      handler: handlers.onLaunchDebugPreview,\n    }\n  );\n\n  useCommand(\n    'LAUNCH_NETWORK_PREVIEW',\n    handlers.previewEnabled && handlers.allowNetworkPreview,\n    {\n      handler: handlers.onLaunchNetworkPreview,\n    }\n  );\n\n  useCommand('OPEN_START_PAGE', true, {\n    handler: handlers.onOpenStartPage,\n  });\n\n  useCommand('CREATE_NEW_PROJECT', true, {\n    handler: handlers.onCreateProject,\n  });\n\n  useCommand('OPEN_PROJECT', true, {\n    handler: handlers.onOpenProject,\n  });\n\n  useCommand('SAVE_PROJECT', !!handlers.project, {\n    handler: handlers.onSaveProject,\n  });\n\n  useCommand('SAVE_PROJECT_AS', !!handlers.project, {\n    handler: handlers.onSaveProjectAs,\n  });\n\n  useCommand('CLOSE_PROJECT', !!handlers.project, {\n    handler: handlers.onCloseProject,\n  });\n\n  useCommand('EXPORT_GAME', !!handlers.project, {\n    handler: handlers.onExportGame,\n  });\n\n  useCommand('OPEN_COMMAND_PALETTE', true, {\n    handler: handlers.onOpenCommandPalette,\n  });\n\n  useCommandWithOptions('OPEN_LAYOUT', !!handlers.project, {\n    generateOptions: React.useCallback(\n      () =>\n        generateProjectItemOptions(\n          handlers.project,\n          enumerateLayouts,\n          handlers.onOpenLayout\n        ),\n      [handlers.project, handlers.onOpenLayout]\n    ),\n  });\n\n  useCommandWithOptions('OPEN_EXTERNAL_EVENTS', !!handlers.project, {\n    generateOptions: React.useCallback(\n      () =>\n        generateProjectItemOptions(\n          handlers.project,\n          enumerateExternalEvents,\n          handlers.onOpenExternalEvents\n        ),\n      [handlers.project, handlers.onOpenExternalEvents]\n    ),\n  });\n\n  useCommandWithOptions('OPEN_EXTERNAL_LAYOUT', !!handlers.project, {\n    generateOptions: React.useCallback(\n      () =>\n        generateProjectItemOptions(\n          handlers.project,\n          enumerateExternalLayouts,\n          handlers.onOpenExternalLayout\n        ),\n      [handlers.project, handlers.onOpenExternalLayout]\n    ),\n  });\n\n  useCommandWithOptions('OPEN_EXTENSION', !!handlers.project, {\n    generateOptions: React.useCallback(\n      () =>\n        generateProjectItemOptions(\n          handlers.project,\n          enumerateEventsFunctionsExtensions,\n          handlers.onOpenEventsFunctionsExtension\n        ),\n      [handlers.project, handlers.onOpenEventsFunctionsExtension]\n    ),\n  });\n};\n\nexport default useMainFrameCommands;\n","// @flow\nimport * as React from 'react';\nimport {\n  CommandManagerInterface,\n  type Command,\n  type NamedCommand,\n} from './CommandManager';\nimport { type CommandName } from './CommandsList';\nimport CommandsContext from './CommandsContext';\nimport useRefInit from './UseRefInitHook';\n\nclass ScopedCommandManager implements CommandManagerInterface {\n  _commands: { [CommandName]: Command };\n  _centralManager: CommandManagerInterface;\n  _isActive: boolean;\n\n  constructor(centralCommandManager) {\n    this._commands = {};\n    this._isActive = false;\n    this._centralManager = centralCommandManager;\n  }\n\n  setActive = (active: boolean) => {\n    this._isActive = active;\n  };\n\n  registerCommand = (commandName: CommandName, command: Command) => {\n    this._commands[commandName] = command;\n    if (this._isActive)\n      this._centralManager.registerCommand(commandName, command);\n  };\n\n  deregisterCommand = (commandName: CommandName) => {\n    delete this._commands[commandName];\n    if (this._isActive) this._centralManager.deregisterCommand(commandName);\n  };\n\n  registerAllCommandsToCentralManager = () => {\n    Object.keys(this._commands).forEach(commandName => {\n      this._centralManager.registerCommand(\n        commandName,\n        this._commands[commandName]\n      );\n    });\n  };\n\n  deregisterAllCommandsFromCentralManager = () => {\n    Object.keys(this._commands).forEach(commandName => {\n      this._centralManager.deregisterCommand(commandName);\n    });\n  };\n\n  getAllNamedCommands = () => {\n    return Object.keys(this._commands).map<NamedCommand>(commandName => {\n      const cmd = this._commands[commandName];\n      return { ...cmd, name: commandName };\n    });\n  };\n\n  getNamedCommand = (commandName: CommandName) => {\n    const command = this._commands[commandName];\n    if (command) return { name: commandName, ...(command: Command) };\n    return this._centralManager.getNamedCommand(commandName);\n  };\n}\n\ntype Props = {|\n  children: React.Node,\n  active: boolean,\n|};\n\nconst CommandsContextScopedProvider = (props: Props) => {\n  const centralManager = React.useContext(CommandsContext);\n  const scopedManager = useRefInit(\n    () => new ScopedCommandManager(centralManager)\n  );\n\n  React.useEffect(\n    () => {\n      if (!props.active) return;\n      scopedManager.setActive(true);\n      scopedManager.registerAllCommandsToCentralManager();\n      return () => {\n        scopedManager.setActive(false);\n        scopedManager.deregisterAllCommandsFromCentralManager();\n      };\n    },\n    [props.active, scopedManager]\n  );\n\n  return (\n    <CommandsContext.Provider value={scopedManager}>\n      {props.children}\n    </CommandsContext.Provider>\n  );\n};\n\nexport default CommandsContextScopedProvider;\n","// @flow\nimport * as React from 'react';\nimport {\n  type PreviewDebuggerServer,\n  type DebuggerId,\n  type HotReloaderLog,\n} from '../Export/PreviewLauncher.flow';\n\n/** Represents what should be run when a preview is launched */\nexport type PreviewState = {|\n  /** The previewed layout name, set by the current editor. */\n  previewLayoutName: ?string,\n  /** The previewed external layout name, set by the current editor. */\n  previewExternalLayoutName: ?string,\n\n  /** If true, the previewed layout/external layout is overriden, */\n  isPreviewOverriden: boolean,\n  /** The layout name to be used instead of the one set by the current editor. */\n  overridenPreviewLayoutName: ?string,\n  /** The external layout name to be used instead of the one set by the current editor. */\n  overridenPreviewExternalLayoutName: ?string,\n|};\n\ntype PreviewDebuggerServerWatcherResults = {|\n  previewDebuggerIds: Array<DebuggerId>,\n  hotReloadLogs: Array<HotReloaderLog>,\n  clearHotReloadLogs: () => void,\n|};\n\n/**\n * Return the ids of the debuggers being run, watching for changes (new\n * debugger launched or existing one closed).\n */\nexport const usePreviewDebuggerServerWatcher = (\n  previewDebuggerServer: ?PreviewDebuggerServer\n): PreviewDebuggerServerWatcherResults => {\n  const [debuggerIds, setDebuggerIds] = React.useState<Array<DebuggerId>>([]);\n  const [hotReloadLogs, setHotReloadLogs] = React.useState<\n    Array<HotReloaderLog>\n  >([]);\n  React.useEffect(\n    () => {\n      if (!previewDebuggerServer) {\n        setDebuggerIds([]);\n        return;\n      }\n\n      const unregisterCallbacks = previewDebuggerServer.registerCallbacks({\n        onErrorReceived: err => {\n          // Nothing to do.\n        },\n        onConnectionClosed: ({ id, debuggerIds }) => {\n          setDebuggerIds([...debuggerIds]);\n        },\n        onConnectionOpened: ({ id, debuggerIds }) => {\n          setDebuggerIds([...debuggerIds]);\n        },\n        onServerStateChanged: () => {\n          // Nothing to do.\n        },\n        onHandleParsedMessage: ({ id, parsedMessage }) => {\n          if (parsedMessage.command === 'hotReloader.logs') {\n            setHotReloadLogs(parsedMessage.payload);\n          }\n        },\n      });\n      return () => {\n        unregisterCallbacks();\n      };\n    },\n    [previewDebuggerServer]\n  );\n  const clearHotReloadLogs = React.useCallback(() => setHotReloadLogs([]), [\n    setHotReloadLogs,\n  ]);\n\n  return { previewDebuggerIds: debuggerIds, hotReloadLogs, clearHotReloadLogs };\n};\n","// @flow\nimport RenderedUnknownInstance from './Renderers/RenderedUnknownInstance';\nimport RenderedSpriteInstance from './Renderers/RenderedSpriteInstance';\nimport RenderedTiledSpriteInstance from './Renderers/RenderedTiledSpriteInstance';\nimport RenderedPanelSpriteInstance from './Renderers/RenderedPanelSpriteInstance';\nimport RenderedTextInstance from './Renderers/RenderedTextInstance';\nimport RenderedShapePainterInstance from './Renderers/RenderedShapePainterInstance';\nimport RenderedTextEntryInstance from './Renderers/RenderedTextEntryInstance';\nimport RenderedParticleEmitterInstance from './Renderers/RenderedParticleEmitterInstance';\nimport RenderedSkeletonInstance from './Renderers/RenderedSkeletonInstance';\nimport PixiResourcesLoader from './PixiResourcesLoader';\nimport ResourcesLoader from '../ResourcesLoader';\nimport RenderedInstance from './Renderers/RenderedInstance';\nimport * as PIXI from 'pixi.js-legacy';\nimport optionalRequire from '../Utils/OptionalRequire';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst gd: libGDevelop = global.gd;\n\n// Some PixiJS plugins like pixi-tilemap are not distributed as UMD modules,\n// or still require a global PIXI object to be accessible, so we expose PIXI here.\n// This can be removed if no more extension PixiJS plugin requires this.\nglobal.PIXI = PIXI;\n\nconst requirableModules = {};\n\n/**\n * A service containing functions that are called to render instances\n * of objects in a PIXI.Container.\n */\nexport default {\n  renderers: {\n    unknownObjectType: RenderedUnknownInstance,\n    Sprite: RenderedSpriteInstance,\n    'TiledSpriteObject::TiledSprite': RenderedTiledSpriteInstance,\n    'PanelSpriteObject::PanelSprite': RenderedPanelSpriteInstance,\n    'TextObject::Text': RenderedTextInstance,\n    'PrimitiveDrawing::Drawer': RenderedShapePainterInstance,\n    'TextEntryObject::TextEntry': RenderedTextEntryInstance,\n    'ParticleSystem::ParticleEmitter': RenderedParticleEmitterInstance,\n    'SkeletonObject::Skeleton': RenderedSkeletonInstance,\n  },\n  getThumbnail: function(project: gdProject, object: gdObject) {\n    var objectType = object.getType();\n    if (this.renderers.hasOwnProperty(objectType))\n      return this.renderers[objectType].getThumbnail(\n        project,\n        ResourcesLoader,\n        object\n      );\n    else\n      return this.renderers['unknownObjectType'].getThumbnail(\n        project,\n        ResourcesLoader,\n        object\n      );\n  },\n  createNewInstanceRenderer: function(\n    project: gdProject,\n    layout: gdLayout,\n    instance: gdInitialInstance,\n    associatedObject: gdObject,\n    pixiContainer: any\n  ) {\n    var objectType = associatedObject.getType();\n    if (this.renderers.hasOwnProperty(objectType))\n      return new this.renderers[objectType](\n        project,\n        layout,\n        instance,\n        associatedObject,\n        pixiContainer,\n        PixiResourcesLoader\n      );\n    else {\n      console.warn(\n        `Object with type ${objectType} has no instance renderer registered. Please use registerInstanceRenderer to register your renderer.`\n      );\n      return new this.renderers['unknownObjectType'](\n        project,\n        layout,\n        instance,\n        associatedObject,\n        pixiContainer,\n        PixiResourcesLoader\n      );\n    }\n  },\n  registerInstanceRenderer: function(objectType: string, renderer: any) {\n    if (!renderer.getThumbnail) {\n      console.warn(\n        `Tried to register renderer for object \"${objectType}\", but getThumbnail is not defined.`\n      );\n      return;\n    }\n\n    if (this.renderers.hasOwnProperty(objectType)) {\n      console.warn(\n        `Tried to register renderer for object \"${objectType}\", but a renderer already exists.`\n      );\n      return;\n    }\n\n    console.info(`Properly registered renderer for object \"${objectType}\".`);\n    this.renderers[objectType] = renderer;\n  },\n  /**\n   * Register a module that can be then required using `requireModule`.\n   * This is necessary for the web-app, as all files must be bundled.\n   */\n  registerModule: function(requirePath: string, module: any) {\n    requirableModules[requirePath] = module;\n  },\n  /**\n   * Require a module, that was either registered using `registerModule` (i.e: on the web-app), or from\n   * the specified path (if `optionalRequire` can find the file, i.e: on the electron app).\n   */\n  requireModule: function(requireBasePath: string, requirePath: string): ?any {\n    // On Electron, where modules can be required at runtime from files, require the\n    // file, relative to the base path.\n    if (electron && path) {\n      const originalRequiredModulePath = path.join(\n        requireBasePath,\n        requirePath\n      );\n\n      // Get the \"module\" module from Node.js and temporarily overwrite its internal \"_load\"\n      // method. This method is called when a module is loaded, and is used here to provide \"pixi.js-legacy\"\n      // to extensions needing it. If we don't, \"pixi.js-legacy\" is found in development, because Node.js resolution\n      // algorithm traverses the paths until it reaches newIDE/app/node_modules, but is not found in production,\n      // because newIDE/app node_modules are now gone (compiled by Webpack).\n      const module = optionalRequire('module');\n      if (!module._load) {\n        throw new Error(\n          'module._load does not exist. This is possibly a change in Node.js that is breaking the custom loader, in ObjectsRenderingService.requireModule, that is injected to expose Pixi.js to extensions using \"require\".'\n        );\n      }\n      const originalNodeModuleLoad = module._load;\n\n      // Allow pixi.js to be required by extensions:\n      const allowedModules = {\n        'pixi.js-legacy': PIXI,\n        'pixi.js': PIXI,\n        '@pixi/core': PIXI,\n        '@pixi/display': PIXI,\n        '@pixi/constants': PIXI,\n        '@pixi/sprite': PIXI,\n        '@pixi/math': PIXI,\n        '@pixi/utils': PIXI,\n        '@pixi/graphics': PIXI,\n      };\n      module._load = function hookedLoader(request, parent, isMain) {\n        const loadedModule = allowedModules[request];\n        if (loadedModule) return loadedModule;\n\n        if (\n          request.indexOf('./') === 0 ||\n          request === originalRequiredModulePath\n        )\n          return originalNodeModuleLoad(request, parent, isMain);\n\n        console.error(\n          `A module (\"${request}\") was required from ${originalRequiredModulePath} but is not an allowed module or a relative file path starting with \"./\". null will be returned instead.`\n        );\n        console.warn(`Allowed modules are: `, Object.keys(allowedModules));\n        console.warn(\n          `Please use only allowed modules or a reference a local file.`\n        );\n        return null;\n      };\n\n      let requiredModule = null;\n      try {\n        requiredModule = global.require(originalRequiredModulePath);\n      } catch (ex) {\n        console.error(\n          `Unable to load module \"${requirePath}\". Only files located in ${requireBasePath} are supported. Exception was:`,\n          ex\n        );\n        requiredModule = null;\n      }\n\n      // Whatever the result, always restore the original \"_load\" in Node.js \"module\".\n      module._load = originalNodeModuleLoad;\n      return requiredModule;\n    } else {\n      // On the web-app, modules need to be registered manually.\n      if (requirableModules[requirePath]) return requirableModules[requirePath];\n\n      console.error(\n        `Unable to load module \"${requirePath}\". Are you sure you registered it using ObjectsRenderingService.registerModule? This is mandatory for the web-app to have the file bundled.`\n      );\n\n      return null;\n    }\n  },\n  gd, // Expose gd so that it can be used by renderers\n  PIXI, // Expose PIXI so that it can be used by renderers\n  RenderedInstance, // Expose the base class for renderers so that it can be used by renderers\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport HelpButton from '../UI/HelpButton';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport Text from '../UI/Text';\nimport { type HotReloaderLog } from '../Export/PreviewLauncher.flow';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\n\ntype Props = {|\n  logs: Array<HotReloaderLog>,\n  onClose: () => void,\n  onLaunchNewPreview: () => void,\n|};\n\nconst shouldDisplayDialogForLogs = logs =>\n  logs.filter(log => log.kind === 'error' || log.kind === 'fatal').length > 0;\n\nexport default function HotReloadLogsDialog({\n  onClose,\n  onLaunchNewPreview,\n  logs,\n}: Props) {\n  if (!shouldDisplayDialogForLogs(logs)) {\n    return null;\n  }\n\n  return (\n    <Dialog\n      title={<Trans>Restarting the preview from scratch is required</Trans>}\n      onRequestClose={onClose}\n      actions={[\n        <FlatButton\n          label={<Trans>Close</Trans>}\n          key=\"close\"\n          primary={false}\n          onClick={onClose}\n        />,\n        <RaisedButton\n          icon={<PlayCircleFilledIcon />}\n          label={<Trans>Close and launch a new preview</Trans>}\n          key=\"new-preview\"\n          primary\n          onClick={onLaunchNewPreview}\n        />,\n      ]}\n      secondaryActions={[\n        <HelpButton key=\"help\" helpPagePath={'/interface/preview'} />,\n      ]}\n      open\n      cannotBeDismissed\n    >\n      <ColumnStackLayout noMargin>\n        <Text>\n          <Trans>\n            Your latest changes could not be applied to the preview(s) being\n            run. You should start a new preview instead to make sure that all\n            your changes are reflected in the game.\n          </Trans>\n        </Text>\n      </ColumnStackLayout>\n    </Dialog>\n  );\n}\n","// @flow\nimport { useEffect, useState } from 'react';\nimport optionalRequire from './OptionalRequire';\nconst electron = optionalRequire('electron');\nconst ipc = electron ? electron.ipcRenderer : null;\n\nconst richPresenceStartTimestamp = Date.now();\n\nconst updateDiscordRichPresence = (project: ?gdProject) => {\n  if (ipc === null) return;\n\n  const config = {\n    details: project ? 'Working on:' : 'Not working on',\n    state: project ? project.getName() : 'any game',\n    startTimestamp: richPresenceStartTimestamp,\n    largeImageKey: 'gdicon',\n    largeImageText: 'GDevelop',\n  };\n\n  ipc.send('update-discord-rich-presence', config);\n};\n\nexport const useDiscordRichPresence = (project: ?gdProject) => {\n  const [lastCallTime, setLastCallTime] = useState(0);\n  useEffect(() => updateDiscordRichPresence(project));\n  useEffect(\n    () => {\n      if (performance.now() - lastCallTime > 60000) {\n        setLastCallTime(performance.now());\n        updateDiscordRichPresence(project);\n      }\n    },\n    [project, lastCallTime]\n  );\n};\n","// @flow\nimport React, { Component } from 'react';\nimport { mapVector } from '../Utils/MapFor';\nimport TextField from '../UI/TextField';\nimport SearchbarWithChips from '../UI/SearchbarWithChips';\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  value: string,\n  onChange: string => void,\n  chosenExtensionName: string,\n  onExtensionNameChosen: string => void,\n|};\n\nexport default class ExamplesSearchbar extends Component<Props> {\n  _chips: Array<{| text: string, value: string |}> = [];\n  _textField: ?TextField;\n\n  constructor(props: Props) {\n    super(props);\n\n    const extensions = gd.JsPlatform.get().getAllPlatformExtensions();\n    this._chips = mapVector(extensions, extension => {\n      if (\n        extension.isBuiltin() ||\n        extension.getFullName().indexOf('(deprecated)') !== -1\n      )\n        return null;\n\n      return {\n        text: extension.getFullName(),\n        value: extension.getName(),\n      };\n    }).filter(Boolean);\n  }\n\n  render() {\n    const {\n      chosenExtensionName,\n      onExtensionNameChosen,\n      value,\n      onChange,\n    } = this.props;\n    return (\n      <SearchbarWithChips\n        value={value}\n        onChange={onChange}\n        chips={this._chips}\n        chosenChip={chosenExtensionName}\n        onChooseChip={onExtensionNameChosen}\n        onRequestSearch={() => {}}\n      />\n    );\n  }\n}\n","// @flow\nimport React, { Component } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport { Column, Line } from '../UI/Grid';\nimport randomColor from 'randomcolor';\nimport SearchBar, { useShouldAutofocusSearchbar } from '../UI/SearchBar';\n\ntype Props = {|\n  value: string,\n  onChange: string => void,\n  chosenChip: string,\n  onChooseChip: string => void,\n  chips: ?Array<{| text: string, value: string |}>,\n  onRequestSearch: () => void,\n|};\n\nconst styles = {\n  chip: {\n    margin: 2,\n  },\n  chipsList: {\n    marginTop: 4,\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n};\n\nconst getChipColor = (tag: string) => {\n  return randomColor({\n    seed: tag,\n    luminosity: 'light',\n  });\n};\n\nexport default class SearchbarWithChips extends Component<Props> {\n  _searchBar: ?SearchBar;\n\n  componentDidMount() {\n    if (useShouldAutofocusSearchbar() && this._searchBar)\n      this._searchBar.focus();\n  }\n\n  render() {\n    const {\n      chosenChip,\n      onChooseChip,\n      value,\n      onChange,\n      onRequestSearch,\n      chips,\n    } = this.props;\n\n    return (\n      <Column noMargin>\n        <SearchBar\n          value={value}\n          onRequestSearch={onRequestSearch}\n          onChange={value => {\n            onChange(value);\n          }}\n          ref={searchBar => (this._searchBar = searchBar)}\n        />\n        <Line>\n          <Column>\n            <div style={styles.chipsList}>\n              {chips &&\n                chips.map(({ text, value }) => (\n                  <Chip\n                    size=\"small\"\n                    key={value}\n                    style={{\n                      ...styles.chip,\n                      backgroundColor:\n                        !chosenChip || chosenChip === value\n                          ? getChipColor(value)\n                          : undefined,\n                      color:\n                        !chosenChip || chosenChip === value\n                          ? 'black'\n                          : undefined,\n                    }}\n                    onClick={() =>\n                      onChooseChip(chosenChip === value ? '' : value)\n                    }\n                    label={text}\n                  />\n                ))}\n            </div>\n          </Column>\n        </Line>\n      </Column>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ThemeConsumer from './Theme/ThemeConsumer';\nimport Text from './Text';\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  paddingLeft: 8,\n  paddingRight: 8,\n};\n\nclass MiniToolbar extends Component {\n  render() {\n    const { justifyContent } = this.props;\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <div\n            style={{\n              ...style,\n              height: 32,\n              backgroundColor: muiTheme.toolbar.backgroundColor,\n              justifyContent,\n            }}\n          >\n            {this.props.children}\n          </div>\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n\nconst toolbarTextStyle = {\n  marginRight: 5,\n};\n\nexport const MiniToolbarText = ({ children }) => (\n  <Text noShrink style={toolbarTextStyle}>\n    {children}\n  </Text>\n);\n\nexport default MiniToolbar;\n","// @flow\nimport * as React from 'react';\nimport { I18nProvider } from '@lingui/react';\nimport { setupI18n } from '@lingui/core';\nimport { getTranslationFunction } from './getTranslationFunction';\nimport { type I18n as I18nType } from '@lingui/core';\nconst gd = global.gd;\n\ntype Catalog = any;\ntype Catalogs = {\n  [string]: Catalog,\n};\n\ntype Props = {|\n  language: string,\n  children: React.Node,\n|};\n\ntype State = {\n  language: string,\n  i18n: ?I18nType,\n  catalogs: Catalogs,\n};\n\nexport default class GDI18nProvider extends React.Component<Props, State> {\n  state = {\n    language: 'en',\n    catalogs: {},\n    i18n: null,\n  };\n\n  componentDidMount() {\n    this._loadLanguage(this.props.language);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.language !== this.props.language) {\n      this._loadLanguage(this.props.language);\n    }\n  }\n\n  _loadCatalog = (language: string): Promise<Catalogs> => {\n    if (this.state.catalogs[language]) {\n      return Promise.resolve(this.state.catalogs);\n    }\n\n    return import(/* webpackMode: \"lazy\", webpackChunkName: \"locales-[request]\" */\n    `../../locales/${language}/messages`).then(\n      catalog => {\n        return { ...this.state.catalogs, [language]: catalog };\n      },\n      (error: Error) => {\n        console.error('Error while loading language=' + language, error);\n        return this.state.catalogs;\n      }\n    );\n  };\n\n  _loadLanguage(language: string) {\n    this._loadCatalog(language).then(catalogs => {\n      this.setState(\n        {\n          language,\n          catalogs,\n          i18n: setupI18n({\n            language: language,\n            catalogs,\n          }),\n        },\n        () => {\n          const { i18n } = this.state;\n          gd.getTranslation = getTranslationFunction(i18n);\n          console.info(`Loaded \"${language}\" language`);\n        }\n      );\n    });\n  }\n\n  render() {\n    // Use language from the state, as it is synchronized with the catalogs,\n    // while the language from props is the \"target language\", and sometime\n    // can be a language for which the catalog is not loaded yet (which would\n    // create warning and a \"flash\" effect when changing language).\n    const { i18n, catalogs, language } = this.state;\n    const { children } = this.props;\n\n    if (!i18n) return null; // Skip rendering when catalog isn't loaded.\n\n    return (\n      <I18nProvider i18n={i18n} language={language} catalogs={catalogs}>\n        {children}\n      </I18nProvider>\n    );\n  }\n}\n","var map = {\n\t\"./af_ZA/messages\": [\n\t\t2241,\n\t\t5\n\t],\n\t\"./ar_SA/messages\": [\n\t\t2242,\n\t\t6\n\t],\n\t\"./az_AZ/messages\": [\n\t\t2243,\n\t\t7\n\t],\n\t\"./bg_BG/messages\": [\n\t\t2244,\n\t\t8\n\t],\n\t\"./bn_BD/messages\": [\n\t\t2245,\n\t\t9\n\t],\n\t\"./ca_ES/messages\": [\n\t\t2246,\n\t\t10\n\t],\n\t\"./cs_CZ/messages\": [\n\t\t2247,\n\t\t11\n\t],\n\t\"./da_DK/messages\": [\n\t\t2248,\n\t\t12\n\t],\n\t\"./de_DE/messages\": [\n\t\t2249,\n\t\t13\n\t],\n\t\"./el_GR/messages\": [\n\t\t2250,\n\t\t14\n\t],\n\t\"./en/messages\": [\n\t\t2251,\n\t\t15\n\t],\n\t\"./eo_UY/messages\": [\n\t\t2252,\n\t\t16\n\t],\n\t\"./es_ES/messages\": [\n\t\t2253,\n\t\t17\n\t],\n\t\"./fa_IR/messages\": [\n\t\t2254,\n\t\t18\n\t],\n\t\"./fi_FI/messages\": [\n\t\t2255,\n\t\t19\n\t],\n\t\"./fil_PH/messages\": [\n\t\t2256,\n\t\t20\n\t],\n\t\"./fr_FR/messages\": [\n\t\t2257,\n\t\t21\n\t],\n\t\"./ha_HG/messages\": [\n\t\t2258,\n\t\t22\n\t],\n\t\"./he_IL/messages\": [\n\t\t2259,\n\t\t23\n\t],\n\t\"./hi_IN/messages\": [\n\t\t2260,\n\t\t24\n\t],\n\t\"./hu_HU/messages\": [\n\t\t2261,\n\t\t25\n\t],\n\t\"./id_ID/messages\": [\n\t\t2262,\n\t\t26\n\t],\n\t\"./it_IT/messages\": [\n\t\t2263,\n\t\t27\n\t],\n\t\"./ja_JP/messages\": [\n\t\t2264,\n\t\t28\n\t],\n\t\"./ko_KR/messages\": [\n\t\t2265,\n\t\t29\n\t],\n\t\"./lt_LT/messages\": [\n\t\t2266,\n\t\t30\n\t],\n\t\"./lv_LV/messages\": [\n\t\t2267,\n\t\t31\n\t],\n\t\"./mr_IN/messages\": [\n\t\t2268,\n\t\t32\n\t],\n\t\"./ms_MY/messages\": [\n\t\t2269,\n\t\t33\n\t],\n\t\"./my_MM/messages\": [\n\t\t2270,\n\t\t34\n\t],\n\t\"./nl_NL/messages\": [\n\t\t2271,\n\t\t35\n\t],\n\t\"./no_NO/messages\": [\n\t\t2272,\n\t\t36\n\t],\n\t\"./pl_PL/messages\": [\n\t\t2273,\n\t\t37\n\t],\n\t\"./pseudo_LOCALE/messages\": [\n\t\t2274,\n\t\t38\n\t],\n\t\"./pt_BR/messages\": [\n\t\t2275,\n\t\t39\n\t],\n\t\"./pt_PT/messages\": [\n\t\t2276,\n\t\t40\n\t],\n\t\"./ro_RO/messages\": [\n\t\t2277,\n\t\t41\n\t],\n\t\"./ru_RU/messages\": [\n\t\t2278,\n\t\t42\n\t],\n\t\"./sk_SK/messages\": [\n\t\t2279,\n\t\t43\n\t],\n\t\"./sl_SI/messages\": [\n\t\t2280,\n\t\t44\n\t],\n\t\"./sr_CS/messages\": [\n\t\t2281,\n\t\t45\n\t],\n\t\"./sr_SP/messages\": [\n\t\t2282,\n\t\t46\n\t],\n\t\"./sv_SE/messages\": [\n\t\t2283,\n\t\t47\n\t],\n\t\"./th_TH/messages\": [\n\t\t2284,\n\t\t48\n\t],\n\t\"./tr_TR/messages\": [\n\t\t2285,\n\t\t49\n\t],\n\t\"./uk_UA/messages\": [\n\t\t2286,\n\t\t50\n\t],\n\t\"./ur_PK/messages\": [\n\t\t2287,\n\t\t51\n\t],\n\t\"./uz_UZ/messages\": [\n\t\t2288,\n\t\t52\n\t],\n\t\"./yo_NG/messages\": [\n\t\t2289,\n\t\t53\n\t],\n\t\"./zh_CN/messages\": [\n\t\t2290,\n\t\t54\n\t],\n\t\"./zh_TW/messages\": [\n\t\t2291,\n\t\t55\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 1975;\nmodule.exports = webpackAsyncContext;","// @flow\n\nexport const isRelativePathToDocumentationRoot = (path: string) => {\n  return path.startsWith('/');\n};\n\nexport const isDocumentationAbsoluteUrl = (path: string) => {\n  return path.startsWith('http://') || path.startsWith('https://');\n};\n\nexport const getHelpLink = (path: string): string => {\n  if (isRelativePathToDocumentationRoot(path))\n    return `http://wiki.compilgames.net/doku.php/gdevelop5${path}?utm_source=gdevelop&utm_medium=help-link`;\n\n  if (isDocumentationAbsoluteUrl(path)) return path;\n\n  return '';\n};\n","// @flow\nimport * as React from 'react';\nimport ThemeConsumer from './Theme/ThemeConsumer';\nimport Typography from '@material-ui/core/Typography';\n// No i18n in this file\n\ntype Props = {|\n  tooltipText?: string,\n  style?: Object,\n  children: ?React.Node,\n|};\n\nconst BackgroundText = (props: Props) => (\n  <ThemeConsumer>\n    {muiTheme => (\n      <Typography\n        variant=\"body2\"\n        align=\"center\"\n        style={{\n          opacity: 0.6,\n          textShadow: `1px 1px 0px ${muiTheme.emptyMessage.shadowColor}`,\n          ...props.style,\n        }}\n        title={props.tooltipText}\n      >\n        {props.children}\n      </Typography>\n    )}\n  </ThemeConsumer>\n);\n\nexport default BackgroundText;\n","// @flow\nimport * as React from 'react';\n\ntype Props = {|\n  src: ?string,\n  className?: string,\n  style?: Object,\n  /* img elements must have an alt prop, either with meaningful text, or an empty string for decorative images */\n  alt: ?string,\n  title?: ?string,\n  onError?: (?Error) => void,\n  onLoad?: (e: any) => void,\n|};\n\nconst addSearchParameterToUrl = (\n  url: string,\n  urlEncodedParameterName: string,\n  urlEncodedValue: string\n) => {\n  if (url.startsWith('data:')) {\n    // data protocol does not support search parameters, which are useless anyway.\n    return url;\n  }\n\n  const separator = url.indexOf('?') === -1 ? '?' : '&';\n  return url + separator + urlEncodedParameterName + '=' + urlEncodedValue;\n};\n\n/**\n * An `img` element where the `src` URL has an extra parameter added to avoid CORS issue\n * when trying to load the image from another website (typically for game previews/exports).\n *\n * As a rule of thumb, use this **anytime you need to display an image that is a game resource/\n * user chosen image**.\n * On the contrary, if you're displaying a built-in GDevelop image, coming for example from the\n * \"res/\" folder (i.e: a GDevelop icon), you don't need this and can use `<img>` as usual.\n */\nexport const CorsAwareImage = (props: Props) => (\n  <img // eslint-disable-line jsx-a11y/alt-text\n    {...props}\n    src={\n      // To avoid strange/hard to understand CORS issues, we add a dummy parameter.\n      // By doing so, we force browser to consider this URL as different than the one traditionally\n      // used to render the resource in the editor (usually as an `<img>` or as a background image).\n      // If we don't add this distinct parameter, it can happen that browsers fail to load the image\n      // as it's already in the **browser cache** but with slightly different request parameters -\n      // making the CORS checks fail (even if it's coming from the browser cache).\n      //\n      // It's happening sometimes (according to loading order probably) in Chrome and (more often)\n      // in Safari. It might be linked to Amazon S3 + CloudFront that \"doesn't support the Vary: Origin header\".\n      // To be safe, we entirely avoid the issue with this parameter, making the browsers consider\n      // the resources for use in Pixi.js and for the rest of the editor as entirely separate.\n      //\n      // See:\n      // - https://stackoverflow.com/questions/26140487/cross-origin-amazon-s3-not-working-using-chrome\n      // - https://stackoverflow.com/questions/20253472/cors-problems-with-amazon-s3-on-the-latest-chomium-and-google-canary\n      // - https://stackoverflow.com/a/20299333\n      //\n      // Search for \"cors-cache-workaround\" in the codebase for the same workarounds.\n      props.src\n        ? addSearchParameterToUrl(props.src, 'gdUsage', 'img')\n        : undefined\n    }\n  />\n);\n","// @flow\nimport * as React from 'react';\nimport { type CommandWithOptions, type SimpleCommand } from './CommandManager';\nimport CommandsContext from './CommandsContext';\nimport { type CommandName } from './CommandsList';\n\n/**\n * React hook for dynamically registering and deregistering a simple command\n */\nexport const useCommand = (\n  commandName: CommandName,\n  enabled: boolean,\n  command: SimpleCommand\n) => {\n  const commandManager = React.useContext(CommandsContext);\n  const { handler } = command;\n  React.useEffect(\n    () => {\n      if (!enabled) return;\n      commandManager.registerCommand(commandName, { handler });\n      return () => commandManager.deregisterCommand(commandName);\n    },\n    [commandManager, commandName, enabled, handler]\n  );\n};\n\n/**\n * React hook for dynamically registering and deregistering command with options\n */\nexport const useCommandWithOptions = (\n  commandName: CommandName,\n  enabled: boolean,\n  command: CommandWithOptions\n) => {\n  const commandManager = React.useContext(CommandsContext);\n  const { generateOptions } = command;\n  React.useEffect(\n    () => {\n      if (!enabled) return;\n      commandManager.registerCommand(commandName, { generateOptions });\n      return () => commandManager.deregisterCommand(commandName);\n    },\n    [commandManager, commandName, enabled, generateOptions]\n  );\n};\n\n/**\n * React component for using useCommand hook in\n * class components\n */\nexport const UseCommandHook = (props: {|\n  name: CommandName,\n  enabled: boolean,\n  command: SimpleCommand,\n|}) => {\n  useCommand(props.name, props.enabled, props.command);\n  return null;\n};\n\n/**\n * React component for using useCommandWithOptions\n * hook in class components\n */\nexport const UseCommandWithOptionsHook = (props: {|\n  name: CommandName,\n  enabled: boolean,\n  command: CommandWithOptions,\n|}) => {\n  useCommandWithOptions(props.name, props.enabled, props.command);\n  return null;\n};\n","// @flow\nimport axios from 'axios';\nimport { makeTimestampedId } from '../../Utils/TimestampedId';\nimport { GDevelopBuildApi } from './ApiConfigs';\nimport { getSignedUrl } from './Usage';\n\nexport type TargetName =\n  | 'winExe'\n  | 'winZip'\n  | 'macZip'\n  | 'linuxAppImage'\n  | 's3';\n\nexport type Build = {\n  id: string,\n  userId: string,\n  bucket?: string,\n  logsKey?: string,\n  apkKey?: string,\n  windowsExeKey?: string,\n  windowsZipKey?: string,\n  macosZipKey?: string,\n  linuxAppImageKey?: string,\n  s3Key?: string,\n  status: 'pending' | 'complete' | 'error',\n  type: 'cordova-build' | 'electron-build' | 'web-build',\n  targets?: Array<TargetName>,\n  createdAt: number,\n  updatedAt: number,\n};\n\nexport type BuildArtifactKeyName =\n  | 'apkKey'\n  | 'windowsExeKey'\n  | 'windowsZipKey'\n  | 'macosZipKey'\n  | 'linuxAppImageKey'\n  | 's3Key'\n  | 'logsKey';\n\nexport const getBuildArtifactUrl = (\n  build: ?Build,\n  keyName: BuildArtifactKeyName\n): ?string => {\n  if (!build || !build[keyName]) {\n    return null;\n  }\n\n  if (keyName === 's3Key') {\n    return `https://games.gdevelop-app.com/${build[keyName]}/index.html`;\n  }\n\n  return `https://builds.gdevelop-app.com/${build[keyName]}`;\n};\n\ntype UploadOptions = {|\n  signedUrl: string,\n  contentType: string,\n  key: string,\n|};\n\nexport const getBuildFileUploadOptions = (): Promise<UploadOptions> => {\n  const prefix = 'game-archive-' + makeTimestampedId();\n  const filename = 'game-archive.zip';\n  const contentType = 'application/zip';\n  const key = prefix + '/' + filename;\n\n  return getSignedUrl({ uploadType: 'build', key, contentType }).then(\n    ({ signedUrl }) => {\n      return {\n        signedUrl,\n        contentType,\n        key,\n      };\n    }\n  );\n};\n\nexport const buildElectron = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  key: string,\n  targets: Array<TargetName>\n): Promise<Build> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.post(\n        `${GDevelopBuildApi.baseUrl}/build?userId=${encodeURIComponent(\n          userId\n        )}&key=${encodeURIComponent(\n          key\n        )}&type=electron-build&targets=${encodeURIComponent(\n          targets.join(',')\n        )}`,\n        null,\n        {\n          params: {},\n          headers: {\n            Authorization: authorizationHeader,\n          },\n        }\n      )\n    )\n    .then(response => response.data);\n};\n\nexport const buildWeb = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  key: string\n): Promise<Build> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.post(\n        `${GDevelopBuildApi.baseUrl}/build?userId=${encodeURIComponent(\n          userId\n        )}&key=${encodeURIComponent(key)}&type=web-build&targets=s3`,\n        null,\n        {\n          params: {},\n          headers: {\n            Authorization: authorizationHeader,\n          },\n        }\n      )\n    )\n    .then(response => response.data);\n};\n\nexport const buildCordovaAndroid = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  key: string\n): Promise<Build> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.post(\n        `${GDevelopBuildApi.baseUrl}/build?userId=${encodeURIComponent(\n          userId\n        )}&key=${encodeURIComponent(key)}&type=cordova-build`,\n        null,\n        {\n          params: {},\n          headers: {\n            Authorization: authorizationHeader,\n          },\n        }\n      )\n    )\n    .then(response => response.data);\n};\n\nexport const getBuild = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  buildId: string\n): Promise<Build> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.get(`${GDevelopBuildApi.baseUrl}/build/${buildId}`, {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n\nexport const getBuilds = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string\n): Promise<Array<Build>> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.get(`${GDevelopBuildApi.baseUrl}/build`, {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n","// @flow\nimport * as React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport ThemeContext from './Theme/ThemeContext';\nimport classNames from 'classnames';\n\n// Sensible defaults for react-markdown\nconst makeMarkdownCustomRenderers = (\n  isStandaloneText: boolean,\n  allowParagraphs: boolean\n) => ({\n  // Ensure link are opened in a new page\n  root: props => (isStandaloneText ? <div {...props} /> : <span {...props} />),\n  link: props =>\n    props.href ? (\n      <a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\">\n        {props.children}\n      </a>\n    ) : (\n      props.children\n    ),\n  linkReference: props =>\n    props.href ? (\n      <a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\">\n        {props.children}\n      </a>\n    ) : (\n      props.children\n    ),\n  // Add paragraphs only if we explictly opt in.\n  paragraph: props =>\n    isStandaloneText || allowParagraphs ? (\n      <p>{props.children}</p>\n    ) : (\n      props.children\n    ),\n});\n\ntype Props = {|\n  source: string,\n  isStandaloneText?: boolean,\n  allowParagraphs?: boolean,\n|};\n\n/**\n * Display a markdown text\n */\nexport const MarkdownText = (props: Props) => {\n  const gdevelopTheme = React.useContext(ThemeContext);\n  const markdownCustomRenderers = React.useMemo(\n    () =>\n      makeMarkdownCustomRenderers(\n        props.isStandaloneText || false,\n        props.allowParagraphs || false\n      ),\n    [props.isStandaloneText, props.allowParagraphs]\n  );\n\n  return (\n    <ReactMarkdown\n      escapeHtml\n      source={props.source}\n      className={classNames({\n        'gd-markdown': true,\n        [gdevelopTheme.markdownRootClassName]: true,\n        'standalone-text-container': props.isStandaloneText,\n      })}\n      renderers={markdownCustomRenderers}\n    />\n  );\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport { type AlertMessageIdentifier } from '../MainFrame/Preferences/PreferencesContext';\nimport { getHelpLink } from '../Utils/HelpLink';\n\nexport type Hint = {|\n  kind: 'warning' | 'info',\n  message: MessageDescriptor,\n  identifier?: AlertMessageIdentifier,\n|};\nexport type TutorialHint = {|\n  kind: 'tutorial' | 'video-tutorial',\n  name: string,\n  message: MessageDescriptor,\n  iconSrc: ?string,\n  link: string,\n  identifier: string,\n  featuredForGettingStarted?: boolean,\n|};\n\nexport const getDeprecatedBehaviorsInformation = (): {\n  [string]: {| warning: MessageDescriptor |},\n} => ({\n  'PhysicsBehavior::PhysicsBehavior': {\n    warning: t`A new physics engine (Physics Engine 2.0) is now available. You should prefer using it for new game. For existing games, note that the two behaviors are not compatible, so you should only use one of them with your objects.`,\n  },\n});\n\nexport const getExperimentalObjects = (): {\n  [string]: boolean,\n} => ({\n  'Video::VideoObject': true,\n  'SkeletonObject::Skeleton': true,\n  'TileMap::TileMap': true,\n});\n\nexport const getExtraObjectsInformation = (): {\n  [string]: Array<Hint>,\n} => ({\n  'Video::VideoObject': [\n    {\n      kind: 'warning',\n      message: t`Most browsers will require the user to have interacted with your game before allowing any video to play. Make sure that the player click/touch the screen at the beginning of the game before starting any video.`,\n    },\n    {\n      kind: 'warning',\n      message: t`For a given video resource, only one video will be played in memory and displayed. If you put this object multiple times on the scene, all the instances will be displaying the exact same video (with the same timing and paused/played/stopped state).`,\n    },\n    {\n      kind: 'info',\n      message: t`Video format supported can vary according to devices and browsers. For maximum compatibility, use H.264/mp4 file format (and AAC for audio).`,\n    },\n  ],\n  'SkeletonObject::Skeleton': [\n    {\n      kind: 'warning',\n      message: t`This object is experimental and not actively maintained. It might have bugs or incomplete support in GDevelop. A maintainer is searched to improve the object implementation and solve any issue. Your help is welcome!`,\n    },\n    {\n      kind: 'info',\n      message: t`Only use this object if you can contribute back to the source code or are able to remove/replace it from your game in a future version.`,\n    },\n  ],\n  'TileMap::TileMap': [\n    {\n      kind: 'info',\n      message: t`The tilemap must be designed in a separated program, Tiled, that can be downloaded on mapeditor.org. Save your map as a JSON file, then select here the Atlas image that you used and the Tile map JSON file.`,\n    },\n  ],\n});\n\nexport const getExtraInstructionInformation = (type: string): ?Hint => {\n  if (type.indexOf('PhysicsBehavior::') === 0) {\n    return {\n      kind: 'warning',\n      message: t`This action is deprecated and should not be used anymore. Instead,\n  use for all your objects the behavior called \"Physics2\" and the\n  associated actions (in this case, all objects must be set up to use\n  Physics2, you can't mix the behaviors).`,\n    };\n  }\n  if (type === 'TextObject::Size') {\n    return {\n      kind: 'warning',\n      message: t`This action will create a new texture and re-render the text each time it is called, which is expensive and can reduce performances. Prefer to avoid changing a lot the character size of a text.`,\n    };\n  }\n  if (type === 'PlayMusicCanal' || type === 'PlayMusic') {\n    return {\n      kind: 'warning',\n      message: t`Musics will only be played if the user has interacted with the game before (by clicking/touching it or pressing a key on the keyboard). This is due to browser limitations. Make sure to have the user interact with the game before using this action.`,\n    };\n  }\n  if (type === 'P2P::OnEvent') {\n    return {\n      kind: 'info',\n      message: t`Read the wiki page for more info about the dataloss mode.`,\n    };\n  }\n  if (type.indexOf('P2P::') === 0) {\n    return {\n      kind: 'warning',\n      message: t`It is recommended to use your own custom broker server. Read the wiki page for more info.`,\n      identifier: 'p2p-broker-recommendation',\n    };\n  }\n  if (type === 'SystemInfo::IsMobile') {\n    return {\n      kind: 'warning',\n      message: t`Note that the distinction between what is a mobile device and what is not is becoming blurry (with devices like iPad pro and other \"desktop-class\" tablets). If you use this for mobile controls, prefer to check if the device has touchscreen support.`,\n    };\n  }\n  if (\n    type === 'AdvancedWindow::SetClosable' ||\n    type === 'AdvancedWindow::EnableWindow' ||\n    type === 'AdvancedWindow::Show' ||\n    type === 'AdvancedWindow::SetFocusable' ||\n    type === 'AdvancedWindow::Focus'\n  ) {\n    return {\n      kind: 'warning',\n      message: t`Be careful with this action, you may have problems exiting the preview if you don't add a way to toggle it back.`,\n    };\n  }\n  if (type === 'GetArgumentAsBoolean') {\n    return {\n      kind: 'info',\n      message: t`If the parameter is a string or a number, you probably want to use the expressions \"GetArgumentAsString\" or \"GetArgumentAsNumber\", along with the conditions \"Compare two strings\" or \"Compare two numbers\".`,\n    };\n  }\n\n  return null;\n};\n\nconst tutorialHints = {\n  'geometry-monster': {\n    kind: 'tutorial',\n    iconSrc: 'res/tutorial_icons/geometry-monster.png',\n    name: 'Geometry Monster Tutorial',\n    message: t`Make a hyper-casual mobile game where the player must grab shapes and avoid bombs.`,\n    link: getHelpLink('/tutorials/geometry-monster'),\n    identifier: 'geometry-monster',\n    featuredForGettingStarted: true,\n  },\n  platformer: {\n    kind: 'tutorial',\n    iconSrc: 'res/tutorial_icons/platformer.png',\n    name: 'Platformer Tutorial',\n    message: t`Make a platform game from scratch.`,\n    link: getHelpLink('/tutorials/platformer/start'),\n    identifier: 'platformer',\n    featuredForGettingStarted: true,\n  },\n  'space-shooter': {\n    kind: 'tutorial',\n    iconSrc: 'res/tutorial_icons/space-shooter.png',\n    name: 'Space Shooter Tutorial',\n    message: t`Make a space shooter game from scratch.`,\n    link: getHelpLink('/tutorials/space-shooter'),\n    identifier: 'space-shooter',\n    featuredForGettingStarted: true,\n  },\n  'simple-game-physics-particles': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/simple-game-physics-particles.jpg',\n    name: 'How to Create a Simple Game with Physics and Particles',\n    message: t`Create a game from scratch using physics and particles.`,\n    link: 'https://www.youtube.com/watch?v=w8B84Dpgkjc',\n    identifier: 'simple-game-physics-particles',\n    featuredForGettingStarted: true,\n  },\n  'tank-shooter': {\n    kind: 'tutorial',\n    iconSrc: null,\n    name: 'Tank Shooter Tutorial',\n    message: t`Make a simple tank shooter game from scratch.`,\n    link: getHelpLink('/tutorials/tank-shooter'),\n    identifier: 'tank-shooter',\n  },\n  'endless-runner': {\n    kind: 'tutorial',\n    iconSrc: null,\n    name: 'Endless Runner Tutorial',\n    message: t`Make a simple game where the player must jump on platforms for as long as possible.`,\n    link: getHelpLink('/tutorials/endless-runner'),\n    identifier: 'endless-runner',\n  },\n  'endless-car-game': {\n    kind: 'tutorial',\n    iconSrc: null,\n    name: 'Endless Car Game Tutorial',\n    message: t`Create a simple game where you must dodge the cars on the road.`,\n    link: getHelpLink('/tutorials/roadrider'),\n    identifier: 'endless-car-game',\n  },\n  'breakout-tutorial': {\n    kind: 'tutorial',\n    iconSrc: null,\n    name: 'Breakout Tutorial',\n    message: t`Create a simple breakout game where you must destroy all the bricks on the screen.`,\n    link: getHelpLink('/tutorials/breakout'),\n    identifier: 'breakout-tutorial',\n  },\n\n  'screen-shake-timer-variables': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/screen-shake-timer-variables.jpg',\n    name: 'Screen Shake Effect with Timers and Variables',\n    message: t`Learn how to add a screen shake effect when the player falls from a very high platform in a platformer.`,\n    link: 'https://www.youtube.com/watch?v=0w0NGuj4OFQ',\n    identifier: 'screen-shake-timer-variables',\n  },\n  'ghost-enemy-following-player': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/ghost-enemy-following-player.jpg',\n    name: 'Ghost Enemy Following the Player',\n    message: t`Make a ghost like enemy floating toward the player.`,\n    link: 'https://www.youtube.com/watch?v=SLUlnhKuuqE',\n    identifier: 'ghost-enemy-following-player',\n  },\n  'melee-sword-attack': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/melee-sword-attack.jpg',\n    name: 'Melee/Sword Attack',\n    message: t`Learn how to make a melee/sword attack with a randomly triggered animation each time a key is pressed.`,\n    link: 'https://www.youtube.com/watch?v=3XT40kDRp8g',\n    identifier: 'melee-sword-attack',\n  },\n  'physics-engine-platformer-game': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/physics-engine-platformer-game.jpg',\n    name: 'Platformer with the physics engine',\n    message: t`Learn how to make a platformer game using the physics engine.`,\n    link: 'https://www.youtube.com/watch?v=96gNCmnQwaE',\n    identifier: 'physics-engine-platformer-game',\n  },\n  'tween-behavior': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/tween-behavior.jpg',\n    name: 'Tween Behavior',\n    message: t`Learn how to use the Tween Behavior and how it can be used to add more life and animation to you projects.`,\n    link: 'https://www.youtube.com/watch?v=SLqnwC9D5Q4',\n    identifier: 'tween-behavior',\n  },\n  'responsive-ui': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/responsive-ui.jpg',\n    name: 'Reponsive UI',\n    message: t`Learn how to add responsive UI using anchors.`,\n    link: 'https://www.youtube.com/watch?v=VgrEhg0esCg',\n    identifier: 'responsive-ui',\n  },\n  'smooth-camera-movement': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/smooth-camera-movement.jpg',\n    name: 'Smooth Camera Movement',\n    message: t`Learn how to make the camera follow the player in a smooth movement.`,\n    link: 'https://www.youtube.com/watch?v=yUNisggNh7s',\n    identifier: 'smooth-camera-movement',\n  },\n  'pause-menu': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/pause-menu.jpg',\n    name: 'Pause Menu',\n    message: t`Learn how to stop the time and make a pause menu.`,\n    link: 'https://www.youtube.com/watch?v=k2J784esdkc',\n    identifier: 'pause-menu',\n  },\n  'character-selection-feature': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/character-selection-feature.jpg',\n    name: 'Character Selection',\n    message: t`Learn how to add a selector to choose a character (or anything else) in your game.`,\n    link: 'https://www.youtube.com/watch?v=8DpsjXHd4ro',\n    identifier: 'character-selection-feature',\n  },\n  'push-objects': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/push-objects.jpg',\n    name: 'Push Objects',\n    message: t`Learn how to push objects, like a box, in a platform game.`,\n    link: 'https://www.youtube.com/watch?v=11tjJ0JgYuk',\n    identifier: 'push-objects',\n  },\n  'save-and-load': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/save-and-load.jpg',\n    name: 'Save and Load',\n    message: t`Learn how to save the player progress, and other information, and to load them again later.`,\n    link: 'https://www.youtube.com/watch?v=bXUGJqHhuCo',\n    identifier: 'save-and-load',\n  },\n  'particle-effects': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/particle-effects.jpg',\n    name: 'Particle Effects',\n    message: t`Learn how to use particle emitters in GDevelop to create effects like fire, explosion, magic beam, etc...`,\n    link: 'https://www.youtube.com/watch?v=7sqMmTntvKs',\n    identifier: 'particle-effects',\n  },\n  'opening-chest': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/opening-chest.jpg',\n    name: 'Open a Loot Chest',\n    message: t`How to open a loot chest with a key that the player can find in the level`,\n    link: 'https://www.youtube.com/watch?v=1qsCgwFtYfg',\n    identifier: 'opening-chest',\n  },\n  'health-bar-and-health-potion': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/health-bar-and-health-potion.jpg',\n    name: 'Create a Health Bar and Health Potion',\n    message: t`How to show a health bar on screen and a potion to give back health to the player.`,\n    link: 'https://www.youtube.com/watch?v=P-scQW7PeVg',\n    identifier: 'health-bar-and-health-potion',\n  },\n  'touch-360-joystick-controller': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/touch-360-joystick-controller.jpg',\n    name: 'Create a Touch 360 Joystick Controller',\n    message: t`How to create a joystick displayed on screen, useful to control the player in mobile games.`,\n    link: 'https://www.youtube.com/watch?v=-k-bVU3QrfA',\n    identifier: 'touch-360-joystick-controller',\n  },\n  'flickering-dynamic-light-effect': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/flickering-dynamic-light-effect.jpg',\n    name: 'Create a Flickering Dynamic Light Effect',\n    message: t`Learn how to create a dynamic light following the player, with a flickering effect.`,\n    link: 'https://www.youtube.com/watch?v=HolCWx4E0TU',\n    identifier: 'flickering-dynamic-light-effect',\n  },\n  '2d-platformer-shooter': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/2d-platformer-shooter.jpg',\n    name: 'Create a 2D Platformer Shooter',\n    message: t`Create a 2D platform game where the player can shoot at enemies chasing him.`,\n    link: 'https://www.youtube.com/watch?v=OOw3Sh6rga8',\n    identifier: '2d-platformer-shooter',\n  },\n  'animated-buttons': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/animated-buttons.jpg',\n    name: 'Create Animated Buttons',\n    message: t`Create animated buttons that can be shown in your game menus (main menu, selection screen, etc...).`,\n    link: 'https://www.youtube.com/watch?v=7_oLY_x4vEk',\n    identifier: 'animated-buttons',\n  },\n  'simple-trampoline-platformer': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/simple-trampoline-platformer.jpg',\n    name: 'Make a Simple Trampoline/Jump Pad',\n    message: t`Create a trampoline in your platformer game, making the player jump very high when stepped on.`,\n    link: 'https://www.youtube.com/watch?v=p42i4omA7j8',\n    identifier: 'simple-trampoline-platformer',\n  },\n  '2d-car-physics-movement': {\n    kind: 'video-tutorial',\n    iconSrc: 'res/tutorial_icons/2d-car-physics-movement.jpg',\n    name: 'How to Make a 2D Car or Bike Movement With Physics Engine',\n    message: t`Learn how to create a physics based car movement.`,\n    link: 'https://www.youtube.com/watch?v=_-fX755cctU',\n    identifier: '2d-car-physics-movement',\n  },\n};\n\nconst allTutorialHints = Object.keys(tutorialHints).map(\n  identifier => tutorialHints[identifier]\n);\n\nexport const getObjectTutorialHints = (type: string): Array<TutorialHint> => {\n  if (type === 'ParticleSystem::ParticleEmitter') {\n    return [tutorialHints['particle-effects']];\n  }\n  if (type === 'Lighting::LightObject') {\n    return [tutorialHints['flickering-dynamic-light-effect']];\n  }\n\n  return [];\n};\n\nexport const getBehaviorTutorialHints = (type: string): Array<TutorialHint> => {\n  if (type === 'Tween::TweenBehavior') {\n    return [tutorialHints['tween-behavior']];\n  }\n  if (type === 'AnchorBehavior::AnchorBehavior') {\n    return [tutorialHints['responsive-ui']];\n  }\n  if (type === 'Physics2::Physics2Behavior') {\n    return [\n      tutorialHints['physics-engine-platformer-game'],\n      tutorialHints['2d-car-physics-movement'],\n    ];\n  }\n\n  return [];\n};\n\nexport const getInstructionTutorialHints = (\n  type: string\n): Array<TutorialHint> => {\n  if (\n    [\n      'CameraX',\n      'CameraY',\n      'RotateCamera',\n      'ZoomCamera',\n      'FixCamera',\n      'CentreCamera',\n    ].includes(type)\n  ) {\n    return [tutorialHints['smooth-camera-movement']];\n  }\n  if (type === 'ChangeTimeScale') {\n    return [tutorialHints['pause-menu']];\n  }\n  if (\n    [\n      'EcrireFichierExp',\n      'EcrireFichierTxt',\n      'LireFichierExp',\n      'LireFichierTxt',\n    ].includes(type)\n  ) {\n    return [tutorialHints['save-and-load']];\n  }\n  if (type === 'PlatformBehavior::SimulateJumpKey') {\n    return [tutorialHints['simple-trampoline-platformer']];\n  }\n\n  return [];\n};\n\nexport const getAllTutorialHints = (): Array<TutorialHint> => allTutorialHints;\n","// @flow\nimport * as React from 'react';\n\nexport type ScreenType = 'normal' | 'touch';\n\nlet userHasTouchedScreen = false;\nif (typeof window !== 'undefined') {\n  window.addEventListener(\n    'touchstart',\n    function onFirstTouch() {\n      console.info('Touch detected, considering the screen as touch enabled.');\n      userHasTouchedScreen = true;\n      window.removeEventListener('touchstart', onFirstTouch, false);\n    },\n    false\n  );\n}\n\ntype Props = {|\n  children: (screenType: ScreenType) => React.Node,\n|};\n\n/**\n * Check if the screen is a touchscreen or not.\n */\nexport const ScreenTypeMeasurer = ({ children }: Props) => {\n  if (typeof window === 'undefined') {\n    return children('normal');\n  }\n\n  return children(userHasTouchedScreen ? 'touch' : 'normal');\n};\n\n/** Return if the screen is a touchscreen or not. */\nexport const useScreenType = () => {\n  // Note: this is not a React hook but is named as one to encourage\n  // components to use it as such, so that it could be reworked\n  // at some point to use a context (verify in this case all usages).\n  return userHasTouchedScreen ? 'touch' : 'normal';\n};\n","// @flow\nimport * as React from 'react';\nimport { type Profile } from '../Utils/GDevelopServices/Authentification';\nimport {\n  type Limits,\n  type Usages,\n  type Subscription,\n} from '../Utils/GDevelopServices/Usage';\n\nexport type UserProfile = {|\n  authenticated: boolean,\n  profile: ?Profile,\n  limits: ?Limits,\n  usages: ?Usages,\n  subscription: ?Subscription,\n  onLogout: () => void,\n  onLogin: () => void,\n  onCreateAccount: () => void,\n  onRefreshUserProfile: () => void,\n  getAuthorizationHeader: () => Promise<string>,\n|};\n\nexport const initialUserProfile = {\n  authenticated: false,\n  profile: null,\n  subscription: null,\n  usages: null,\n  limits: null,\n  onLogout: () => {},\n  onLogin: () => {},\n  onCreateAccount: () => {},\n  onRefreshUserProfile: () => {},\n  getAuthorizationHeader: () => Promise.reject(new Error('Unimplemented')),\n};\n\nconst UserProfileContext = React.createContext<UserProfile>(initialUserProfile);\n\nexport default UserProfileContext;\n","// @flow\nimport ResourcesLoader from '../ResourcesLoader';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nconst fs = optionalRequire('fs');\nconst path = optionalRequire('path');\nconst gd: libGDevelop = global.gd;\n\nexport const RESOURCE_EXTENSIONS = {\n  image: 'png,jpg,jpeg,PNG,JPG,JPEG',\n  audio: 'wav,mp3,ogg,WAV,MP3,OGG',\n  font: 'ttf,ttc,otf,TTF,TTC,OTF',\n  video: 'mp4,MP4',\n};\n\nexport const createOrUpdateResource = (\n  project: gdProject,\n  newlyCreatedResource: gdResource,\n  resourceName: string\n) => {\n  const resourcesManager = project.getResourcesManager();\n  if (resourcesManager.hasResource(resourceName)) {\n    resourcesManager.removeResource(resourceName);\n  }\n  newlyCreatedResource.setFile(resourceName);\n  newlyCreatedResource.setName(resourceName);\n  applyResourceDefaults(project, newlyCreatedResource);\n\n  // Important, we are responsible for deleting the resources that was given to us.\n  // Otherwise we have a memory leak.\n  resourcesManager.addResource(newlyCreatedResource);\n\n  newlyCreatedResource.delete();\n};\n\n/**\n * Get the local path of a resource. This works by asking the ResourcesLoader\n * for the resource URL, then stripping anything that is specific to a URL.\n */\nexport const getLocalResourceFullPath = (\n  project: gdProject,\n  resourceName: string\n) => {\n  let resourcePath = ResourcesLoader.getResourceFullUrl(\n    project,\n    resourceName,\n    {}\n  ).substring(7 /* Remove \"file://\" from the URL to get a local path */);\n\n  if (resourcePath.indexOf('?cache=') !== -1) {\n    // Remove, if needed, the cache bursting argument from the URL.\n    resourcePath = resourcePath.substring(\n      0,\n      resourcePath.lastIndexOf('?cache=')\n    );\n  }\n  return resourcePath;\n};\n\nexport const isPathInProjectFolder = (\n  project: gdProject,\n  resourcePath: string\n) => {\n  const projectPath = path.dirname(project.getProjectFile());\n  return resourcePath.includes(projectPath);\n};\n\nexport const copyAllToProjectFolder = (\n  project: gdProject,\n  resourcePaths: Array<string>\n): Promise<Array<string>> => {\n  if (!fs || !path) {\n    return Promise.resolve(resourcePaths);\n  }\n\n  const projectPath = path.dirname(project.getProjectFile());\n\n  return Promise.all(\n    resourcePaths.map(resourcePath => {\n      if (isPathInProjectFolder(project, resourcePath)) {\n        return resourcePath;\n      }\n\n      const resourceBasename = path.basename(resourcePath),\n        fileExtension = path.extname(resourceBasename),\n        fileNameWithoutExtension = path.basename(\n          resourceBasename,\n          fileExtension\n        );\n\n      const newFileNameWithoutExtension = newNameGenerator(\n        fileNameWithoutExtension,\n        tentativeFileName => {\n          const tentativePath =\n            path.join(projectPath, tentativeFileName) + fileExtension;\n          return fs.existsSync(tentativePath);\n        }\n      );\n\n      const resourceNewPath = path.join(\n        projectPath,\n        newFileNameWithoutExtension + fileExtension\n      );\n\n      return new Promise(resolve => {\n        fs.copyFile(resourcePath, resourceNewPath, err => {\n          if (err) {\n            return resolve(resourcePath);\n          }\n\n          return resolve(resourceNewPath);\n        });\n      });\n    })\n  );\n};\n\nexport const getResourceFilePathStatus = (\n  project: gdProject,\n  resourceName: string\n) => {\n  if (!fs) return '';\n  const resourcePath = path.normalize(\n    getLocalResourceFullPath(project, resourceName)\n  );\n\n  // The resource path doesn't exist\n  if (!fs.existsSync(resourcePath)) return 'error';\n\n  // The resource path is outside of the project folder\n  if (!isPathInProjectFolder(project, resourcePath)) return 'warning';\n\n  // The resource path seems ok\n  return '';\n};\n\nexport const applyResourceDefaults = (\n  project: gdProject,\n  newResource: gdResource\n) => {\n  if (newResource instanceof gd.ImageResource) {\n    newResource.setSmooth(project.getScaleMode() !== 'nearest');\n  }\n};\n","/**\n * RenderedInstance is the base class used for creating renderers of instances,\n * which display on the scene editor, using Pixi.js, the instance of an object (see InstancesEditor).\n *\n * @class RenderedInstance\n * @constructor\n */\nfunction RenderedInstance(\n  project,\n  layout,\n  instance,\n  associatedObject,\n  pixiContainer,\n  pixiResourcesLoader\n) {\n  this._pixiObject = null;\n  this._instance = instance;\n  this._associatedObject = associatedObject;\n  this._pixiContainer = pixiContainer;\n  this._project = project;\n  this._layout = layout;\n  this._pixiResourcesLoader = pixiResourcesLoader;\n  this.wasUsed = true; //Used by InstancesRenderer to track rendered instance that are not used anymore.\n}\n\n/**\n * Convert an angle from degrees to radians.\n */\nRenderedInstance.toRad = function(angleInDegrees) {\n  return (angleInDegrees / 180) * 3.14159;\n};\n\n/**\n * Called when the scene editor is rendered.\n */\nRenderedInstance.prototype.update = function() {\n  //Nothing to do.\n};\n\nRenderedInstance.prototype.getPixiObject = function() {\n  return this._pixiObject;\n};\n\nRenderedInstance.prototype.getInstance = function() {\n  return this._instance;\n};\n\n/**\n * Called to notify the instance renderer that its associated instance was removed from\n * the scene. The PIXI object should probably be removed from the container: This is what\n * the default implementation of the method does.\n */\nRenderedInstance.prototype.instanceRemovedFromScene = function() {\n  if (\n    this._pixiObject !== null &&\n    this._pixiContainer.children.indexOf(this._pixiObject) !== -1\n  )\n    this._pixiContainer.removeChild(this._pixiObject);\n};\n\nRenderedInstance.prototype.getOriginX = function() {\n  return 0;\n};\n\nRenderedInstance.prototype.getOriginY = function() {\n  return 0;\n};\n\n/**\n * Return the width of the instance when the instance doesn't have a custom size.\n */\nRenderedInstance.prototype.getDefaultWidth = function() {\n  return 32;\n};\n\n/**\n * Return the height of the instance when the instance doesn't have a custom size.\n */\nRenderedInstance.prototype.getDefaultHeight = function() {\n  return 32;\n};\n\nexport default RenderedInstance;\n","// @flow\nimport md5 from 'blueimp-md5';\n\nexport const getGravatarUrl = (\n  email: string,\n  { size }: { size: number } = { size: 40 }\n): string => {\n  const hash = md5(email.trim().toLowerCase());\n  return `https://www.gravatar.com/avatar/${hash}?s=${size}&d=retro`;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Column, Line, Spacer } from '../UI/Grid';\nimport { type Profile } from '../Utils/GDevelopServices/Authentification';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport { getGravatarUrl } from '../UI/GravatarUrl';\nimport Text from '../UI/Text';\n\ntype Props = {\n  profile: ?Profile,\n};\n\nexport default ({ profile }: Props) =>\n  profile ? (\n    <Column>\n      <Line alignItems=\"center\">\n        <Avatar src={getGravatarUrl(profile.email || '', { size: 40 })} />\n        <Spacer />\n        <Text size=\"title\">You are connected as {profile.email}</Text>\n      </Line>\n      <Line>\n        <Text>\n          <Trans>\n            An account allows you to access GDevelop services online.\n          </Trans>\n        </Text>\n      </Line>\n    </Column>\n  ) : (\n    <PlaceholderLoader />\n  );\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableHeaderColumn,\n  TableRow,\n  TableRowColumn,\n} from '../UI/Table';\nimport { type Usages } from '../Utils/GDevelopServices/Usage';\nimport { Column, Line } from '../UI/Grid';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport format from 'date-fns/format';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\n\ntype Props = { usages: ?Usages };\n\nexport default ({ usages }: Props) => (\n  <Column noMargin>\n    <Line>\n      {!usages ? (\n        <PlaceholderLoader />\n      ) : usages.length === 0 ? (\n        <EmptyMessage>\n          <Trans>You don't have any usage of the online services for now</Trans>\n        </EmptyMessage>\n      ) : (\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHeaderColumn>Date</TableHeaderColumn>\n              <TableHeaderColumn>Type</TableHeaderColumn>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {usages.map(usage => (\n              <TableRow key={usage.id}>\n                <TableRowColumn>\n                  {format(usage.createdAt, 'yyyy-MM-dd HH:mm:ss')}\n                </TableRowColumn>\n                <TableRowColumn>{usage.type}</TableRowColumn>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n    </Line>\n  </Column>\n);\n","// @flow\nimport * as React from 'react';\nimport { Column, Line } from '../UI/Grid';\nimport { type Subscription } from '../Utils/GDevelopServices/Usage';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Trans } from '@lingui/macro';\nimport Text from '../UI/Text';\n\ntype Props = {\n  subscription: ?Subscription,\n  onChangeSubscription: Function,\n};\n\nexport default ({ subscription, onChangeSubscription }: Props) =>\n  subscription && subscription.planId ? (\n    <Column>\n      <Line>\n        <Text>\n          <Trans>\n            You are subscribed to {subscription.planId}. Congratulations! You\n            have access to more online services, including building your game\n            for Android, Windows, macOS and Linux in one click!\n          </Trans>\n        </Text>\n      </Line>\n      <Line justifyContent=\"center\">\n        <RaisedButton\n          label={<Trans>Upgrade/change</Trans>}\n          primary\n          onClick={onChangeSubscription}\n        />\n      </Line>\n    </Column>\n  ) : subscription && !subscription.planId ? (\n    <Column>\n      <Line>\n        <Text>\n          <Trans>\n            If you don't have a subscription, consider getting one now. Accounts\n            allow you to access all of the online services. With just one click,\n            you can build your game for Android, Windows, macOS and Linux!\n          </Trans>\n        </Text>\n      </Line>\n      <Line justifyContent=\"center\">\n        <RaisedButton\n          label={<Trans>Choose a subscription</Trans>}\n          primary\n          onClick={onChangeSubscription}\n        />\n      </Line>\n    </Column>\n  ) : (\n    <PlaceholderLoader />\n  );\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { Card, CardActions, CardHeader, Chip } from '@material-ui/core';\nimport { format } from 'date-fns';\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport { Line, Spacer } from '../UI/Grid';\nimport RaisedButton from '../UI/RaisedButton';\nimport { type Game } from '../Utils/GDevelopServices/Game';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\n\ntype Props = {|\n  game: Game,\n  isCurrentGame: boolean,\n  onOpenAnalytics: () => void,\n  onOpenDetails: () => void,\n  onOpenMonetization: () => void,\n|};\n\nexport const GameCard = ({\n  game,\n  isCurrentGame,\n  onOpenDetails,\n  onOpenAnalytics,\n  onOpenMonetization,\n}: Props) => (\n  <Card key={game.id}>\n    <CardHeader\n      title={game.gameName}\n      subheader={\n        <Line alignItems=\"center\" noMargin>\n          <Trans>\n            Registered on{' '}\n            {format(game.createdAt * 1000 /* TODO */, 'yyyy-MM-dd')}\n          </Trans>\n          {isCurrentGame && (\n            <React.Fragment>\n              <Spacer />\n              <Chip size=\"small\" label={<Trans>Game currently edited</Trans>} />\n            </React.Fragment>\n          )}\n        </Line>\n      }\n    />\n    <CardActions>\n      <Line expand noMargin justifyContent=\"flex-end\">\n        <FlatButton\n          label={<Trans>See details</Trans>}\n          onClick={onOpenDetails}\n        />\n        <RaisedButton\n          primary\n          icon={<TimelineIcon />}\n          label={<Trans>Analytics</Trans>}\n          onClick={onOpenAnalytics}\n        />\n        <Spacer />\n        <RaisedButton\n          primary\n          icon={<MonetizationOnIcon />}\n          label={<Trans>Monetization</Trans>}\n          onClick={onOpenMonetization}\n        />\n      </Line>\n    </CardActions>\n  </Card>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport UserProfileContext from '../Profile/UserProfileContext';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport PlaceholderError from '../UI/PlaceholderError';\nimport { type Game, getGames } from '../Utils/GDevelopServices/Game';\nimport { GameCard } from './GameCard';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport { GameRegistration } from './GameRegistration';\nimport { GameDetailsDialog } from './GameDetailsDialog';\n\ntype Props = {|\n  project: ?gdProject,\n|};\n\nexport const GamesList = (props: Props) => {\n  const [error, setError] = React.useState<?Error>(null);\n  const [games, setGames] = React.useState<?Array<Game>>(null);\n  const { authenticated, profile, getAuthorizationHeader } = React.useContext(\n    UserProfileContext\n  );\n  const [openedGame, setOpenedGame] = React.useState<?Game>(null);\n  const [openedGameInitialTab, setOpenedGameInitialTab] = React.useState<\n    'details' | 'analytics' | 'monetization'\n  >('details');\n\n  const loadGames = React.useCallback(\n    async () => {\n      if (!authenticated || !profile) return;\n\n      try {\n        setError(null);\n        const games = await getGames(getAuthorizationHeader, profile.uid);\n        setGames(games);\n      } catch (error) {\n        console.error('Error while loading user games.', error);\n        setError(error);\n      }\n    },\n    [authenticated, profile, getAuthorizationHeader]\n  );\n\n  React.useEffect(\n    () => {\n      loadGames();\n    },\n    [loadGames]\n  );\n\n  if (!authenticated) {\n    return null;\n  }\n\n  if (!games && error) {\n    return (\n      <PlaceholderError\n        onRetry={() => {\n          loadGames();\n        }}\n      >\n        <Trans>\n          Can't load the games. Verify your internet connection or retry later.\n        </Trans>\n      </PlaceholderError>\n    );\n  }\n\n  if (!games) {\n    return <PlaceholderLoader />;\n  }\n\n  const projectUuid = props.project ? props.project.getProjectUuid() : null;\n  const thisGame = games.find(game => !!projectUuid && game.id === projectUuid);\n  const displayedGames = [\n    thisGame,\n    ...games.filter(game => game !== thisGame),\n  ].filter(Boolean);\n\n  return (\n    <ColumnStackLayout noMargin>\n      <GameRegistration\n        project={props.project}\n        hideIfRegistered\n        hideLoader\n        onGameRegistered={() => {\n          loadGames();\n        }}\n      />\n      {displayedGames.map(game => (\n        <GameCard\n          key={game.id}\n          isCurrentGame={!!projectUuid && game.id === projectUuid}\n          game={game}\n          onOpenAnalytics={() => {\n            setOpenedGameInitialTab('analytics');\n            setOpenedGame(game);\n          }}\n          onOpenDetails={() => {\n            setOpenedGameInitialTab('details');\n            setOpenedGame(game);\n          }}\n          onOpenMonetization={() => {\n            setOpenedGameInitialTab('monetization');\n            setOpenedGame(game);\n          }}\n        />\n      ))}\n      {openedGame && (\n        <GameDetailsDialog\n          game={openedGame}\n          project={\n            !!projectUuid && openedGame.id === projectUuid\n              ? props.project\n              : null\n          }\n          initialTab={openedGameInitialTab}\n          onClose={() => {\n            setOpenedGame(null);\n          }}\n          onGameUpdated={updatedGame => {\n            setGames(\n              games.map(game => (game === openedGame ? updatedGame : game))\n            );\n            setOpenedGame(updatedGame);\n          }}\n          onGameDeleted={() => {\n            setOpenedGame(null);\n            loadGames();\n          }}\n        />\n      )}\n    </ColumnStackLayout>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport Dialog from '../UI/Dialog';\nimport { Column, Line } from '../UI/Grid';\nimport CreateProfile from './CreateProfile';\nimport ProfileDetails from './ProfileDetails';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport HelpButton from '../UI/HelpButton';\nimport UsagesDetails from './UsagesDetails';\nimport SubscriptionDetails from './SubscriptionDetails';\nimport UserProfileContext, { type UserProfile } from './UserProfileContext';\nimport { GamesList } from '../GameDashboard/GamesList';\nimport { ColumnStackLayout } from '../UI/Layout';\n\ntype Props = {|\n  currentProject: ?gdProject,\n  open: boolean,\n  onClose: Function,\n  onChangeSubscription: Function,\n  initialTab: 'profile' | 'games-dashboard',\n|};\n\ntype State = {|\n  currentTab: string,\n|};\n\nexport default class ProfileDialog extends Component<Props, State> {\n  state = {\n    currentTab: this.props.initialTab,\n  };\n\n  _onChangeTab = (newTab: string) =>\n    this.setState({\n      currentTab: newTab,\n    });\n\n  render() {\n    const { open, onClose } = this.props;\n    const actions = [\n      <FlatButton\n        label={<Trans>Close</Trans>}\n        key=\"close\"\n        primary={false}\n        onClick={onClose}\n      />,\n    ];\n\n    return (\n      <UserProfileContext.Consumer>\n        {(userProfile: UserProfile) => (\n          <Dialog\n            actions={actions}\n            secondaryActions={[\n              <HelpButton\n                key=\"help\"\n                helpPagePath={\n                  this.state.currentTab === 'games-dashboard'\n                    ? '/interface/games-dashboard'\n                    : '/interface/profile'\n                }\n              />,\n              userProfile.authenticated && (\n                <FlatButton\n                  label={<Trans>Refresh</Trans>}\n                  key=\"refresh\"\n                  onClick={userProfile.onRefreshUserProfile}\n                />\n              ),\n              userProfile.authenticated && userProfile.profile && (\n                <FlatButton\n                  label={<Trans>Logout</Trans>}\n                  key=\"logout\"\n                  onClick={userProfile.onLogout}\n                />\n              ),\n            ]}\n            onRequestClose={onClose}\n            cannotBeDismissed={false}\n            open={open}\n            noMargin\n          >\n            <Tabs value={this.state.currentTab} onChange={this._onChangeTab}>\n              <Tab label={<Trans>My Profile</Trans>} value=\"profile\" />\n              <Tab\n                label={<Trans>Games Dashboard</Trans>}\n                value=\"games-dashboard\"\n              />\n              <Tab label={<Trans>Services Usage</Trans>} value=\"usage\" />\n            </Tabs>\n            {this.state.currentTab === 'profile' &&\n              (userProfile.authenticated ? (\n                <Column noMargin>\n                  <ProfileDetails profile={userProfile.profile} />\n                  <SubscriptionDetails\n                    subscription={userProfile.subscription}\n                    onChangeSubscription={this.props.onChangeSubscription}\n                  />\n                </Column>\n              ) : (\n                <Column>\n                  <CreateProfile\n                    onLogin={userProfile.onLogin}\n                    onCreateAccount={userProfile.onCreateAccount}\n                  />\n                </Column>\n              ))}\n            {this.state.currentTab === 'games-dashboard' &&\n              (userProfile.authenticated ? (\n                <Line>\n                  <ColumnStackLayout expand>\n                    <GamesList project={this.props.currentProject} />\n                  </ColumnStackLayout>\n                </Line>\n              ) : (\n                <Column>\n                  <CreateProfile\n                    onLogin={userProfile.onLogin}\n                    onCreateAccount={userProfile.onCreateAccount}\n                    message={\n                      <Trans>\n                        Create an account to register your games and to get\n                        access to metrics collected anonymously, like the number\n                        of daily players and retention of the players after a\n                        few days.\n                      </Trans>\n                    }\n                  />\n                </Column>\n              ))}\n            {this.state.currentTab === 'usage' &&\n              (userProfile.authenticated ? (\n                <Column noMargin>\n                  <UsagesDetails usages={userProfile.usages} />\n                </Column>\n              ) : (\n                <EmptyMessage>\n                  <Trans>\n                    Register to see the usage that you've made of the online\n                    services\n                  </Trans>\n                </EmptyMessage>\n              ))}\n          </Dialog>\n        )}\n      </UserProfileContext.Consumer>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport Text from '../UI/Text';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport PropertiesEditor from '../PropertiesEditor';\nimport propertiesMapToSchema from '../PropertiesEditor/PropertiesMapToSchema';\nimport { List } from '@material-ui/core';\n\ntype Props = {|\n  project: gdProject,\n|};\n\nfunction ExtensionsProperties(props: Props) {\n  const { project } = props;\n  const allExtensions = project.getCurrentPlatform().getAllPlatformExtensions();\n  const propertyList = [];\n  for (let i = 0; i < allExtensions.size(); i++) {\n    const extension = allExtensions.at(i);\n    const properties = project\n      .getExtensionProperties()\n      .getAllExtensionProperties(extension.getName(), project);\n    if (properties.keys().size() === 0) continue;\n    const propertiesSchema = propertiesMapToSchema(\n      properties,\n      instance =>\n        project\n          .getExtensionProperties()\n          .getAllExtensionProperties(extension.getName(), project),\n      (instance, propertyName, newValue) => {\n        if (\n          project\n            .getExtensionProperties()\n            .getAllExtensionProperties(extension.getName(), project)\n            .get(propertyName)\n            .getType() === 'boolean'\n        ) {\n          project\n            .getExtensionProperties()\n            .setValue(\n              extension.getName(),\n              propertyName,\n              newValue === '1' ? 'true' : 'false'\n            );\n        } else {\n          project\n            .getExtensionProperties()\n            .setValue(extension.getName(), propertyName, newValue);\n        }\n      }\n    );\n\n    propertyList.push(\n      <ColumnStackLayout key={extension.getName()} noMargin>\n        <Text size=\"title\">{extension.getFullName()}</Text>\n        <PropertiesEditor\n          schema={propertiesSchema}\n          instances={[extension.getAllProperties()]}\n        />\n      </ColumnStackLayout>\n    );\n  }\n\n  return propertyList.length ? <List>{propertyList}</List> : null;\n}\n\nexport default ExtensionsProperties;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport Checkbox from '../UI/Checkbox';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport Dialog from '../UI/Dialog';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport SubscriptionChecker from '../Profile/SubscriptionChecker';\nimport {\n  getErrors,\n  displayProjectErrorsBox,\n  validatePackageName,\n} from './ProjectErrorsChecker';\nimport DismissableAlertMessage from '../UI/DismissableAlertMessage';\nimport HelpButton from '../UI/HelpButton';\nimport { ResponsiveLineStackLayout, ColumnStackLayout } from '../UI/Layout';\nimport Text from '../UI/Text';\nimport ExtensionsProperties from './ExtensionsProperties';\nimport { useSerializableObjectCancelableEditor } from '../Utils/SerializableObjectCancelableEditor';\nimport RaisedButton from '../UI/RaisedButton';\nimport Window from '../Utils/Window';\nimport { I18n } from '@lingui/react';\nimport AlertMessage from '../UI/AlertMessage';\nimport { GameRegistration } from '../GameDashboard/GameRegistration';\n\ntype Props = {|\n  project: gdProject,\n  open: boolean,\n  onClose: Function,\n  onApply: Function,\n  onChangeSubscription: () => void,\n|};\n\ntype ProjectProperties = {|\n  gameResolutionWidth: number,\n  gameResolutionHeight: number,\n  adaptGameResolutionAtRuntime: boolean,\n  name: string,\n  author: string,\n  version: string,\n  packageName: string,\n  orientation: string,\n  scaleMode: string,\n  sizeOnStartupMode: string,\n  showGDevelopSplash: boolean,\n  minFPS: number,\n  maxFPS: number,\n  isFolderProject: boolean,\n  useDeprecatedZeroAsDefaultZOrder: boolean,\n|};\n\nfunction loadPropertiesFromProject(project: gdProject): ProjectProperties {\n  return {\n    gameResolutionWidth: project.getGameResolutionWidth(),\n    gameResolutionHeight: project.getGameResolutionHeight(),\n    adaptGameResolutionAtRuntime: project.getAdaptGameResolutionAtRuntime(),\n    name: project.getName(),\n    author: project.getAuthor(),\n    version: project.getVersion(),\n    packageName: project.getPackageName(),\n    orientation: project.getOrientation(),\n    scaleMode: project.getScaleMode(),\n    sizeOnStartupMode: project.getSizeOnStartupMode(),\n    showGDevelopSplash: project.getLoadingScreen().isGDevelopSplashShown(),\n    minFPS: project.getMinimumFPS(),\n    maxFPS: project.getMaximumFPS(),\n    isFolderProject: project.isFolderProject(),\n    useDeprecatedZeroAsDefaultZOrder: project.getUseDeprecatedZeroAsDefaultZOrder(),\n  };\n}\n\nfunction applyPropertiesToProject(\n  project: gdProject,\n  newProperties: ProjectProperties\n) {\n  const t = str => str; //TODO\n  const {\n    gameResolutionWidth,\n    gameResolutionHeight,\n    adaptGameResolutionAtRuntime,\n    name,\n    author,\n    version,\n    packageName,\n    orientation,\n    scaleMode,\n    sizeOnStartupMode,\n    showGDevelopSplash,\n    minFPS,\n    maxFPS,\n    isFolderProject,\n    useDeprecatedZeroAsDefaultZOrder,\n  } = newProperties;\n  project.setGameResolutionSize(gameResolutionWidth, gameResolutionHeight);\n  project.setAdaptGameResolutionAtRuntime(adaptGameResolutionAtRuntime);\n  project.setName(name);\n  project.setAuthor(author);\n  project.setVersion(version);\n  project.setPackageName(packageName);\n  project.setOrientation(orientation);\n  project.setScaleMode(scaleMode);\n  project.setSizeOnStartupMode(sizeOnStartupMode);\n  project.setMinimumFPS(minFPS);\n  project.setMaximumFPS(maxFPS);\n  project.getLoadingScreen().showGDevelopSplash(showGDevelopSplash);\n  project.setFolderProject(isFolderProject);\n  project.setUseDeprecatedZeroAsDefaultZOrder(useDeprecatedZeroAsDefaultZOrder);\n\n  return displayProjectErrorsBox(t, getErrors(t, project));\n}\n\nfunction ProjectPropertiesDialog(props: Props) {\n  const { project } = props;\n\n  const subscriptionChecker = React.useRef<?SubscriptionChecker>(null);\n\n  const initialProperties = React.useMemo(\n    () => loadPropertiesFromProject(project),\n    [project]\n  );\n  let [name, setName] = React.useState(initialProperties.name);\n  let [gameResolutionWidth, setGameResolutionWidth] = React.useState(\n    initialProperties.gameResolutionWidth\n  );\n  let [gameResolutionHeight, setGameResolutionHeight] = React.useState(\n    initialProperties.gameResolutionHeight\n  );\n  let [\n    adaptGameResolutionAtRuntime,\n    setAdaptGameResolutionAtRuntime,\n  ] = React.useState(initialProperties.adaptGameResolutionAtRuntime);\n  let [author, setAuthor] = React.useState(initialProperties.author);\n  let [version, setVersion] = React.useState(initialProperties.version);\n  let [packageName, setPackageName] = React.useState(\n    initialProperties.packageName\n  );\n  let [orientation, setOrientation] = React.useState(\n    initialProperties.orientation\n  );\n  let [scaleMode, setScaleMode] = React.useState(initialProperties.scaleMode);\n  let [sizeOnStartupMode, setSizeOnStartupMode] = React.useState(\n    initialProperties.sizeOnStartupMode\n  );\n  let [showGDevelopSplash, setShowGDevelopSplash] = React.useState(\n    initialProperties.showGDevelopSplash\n  );\n  let [minFPS, setMinFPS] = React.useState(initialProperties.minFPS);\n  let [maxFPS, setMaxFPS] = React.useState(initialProperties.maxFPS);\n  let [isFolderProject, setIsFolderProject] = React.useState(\n    initialProperties.isFolderProject\n  );\n  let [\n    useDeprecatedZeroAsDefaultZOrder,\n    setUseDeprecatedZeroAsDefaultZOrder,\n  ] = React.useState(initialProperties.useDeprecatedZeroAsDefaultZOrder);\n\n  const defaultPackageName = 'com.example.mygame';\n  const defaultVersion = '1.0.0';\n\n  const onCancelChanges = useSerializableObjectCancelableEditor({\n    serializableObject: project.getExtensionProperties(),\n    onCancel: props.onClose,\n  });\n\n  return (\n    <React.Fragment>\n      <Dialog\n        actions={[\n          <FlatButton\n            label={<Trans>Cancel</Trans>}\n            primary={false}\n            onClick={onCancelChanges}\n            key=\"cancel\"\n          />,\n          <FlatButton\n            label={<Trans>Apply</Trans>}\n            primary={true}\n            onClick={() => {\n              if (\n                applyPropertiesToProject(project, {\n                  gameResolutionWidth,\n                  gameResolutionHeight,\n                  adaptGameResolutionAtRuntime,\n                  name,\n                  author,\n                  version,\n                  packageName,\n                  orientation,\n                  scaleMode,\n                  sizeOnStartupMode,\n                  showGDevelopSplash,\n                  minFPS,\n                  maxFPS,\n                  isFolderProject,\n                  useDeprecatedZeroAsDefaultZOrder,\n                })\n              )\n                props.onApply();\n            }}\n            key=\"apply\"\n          />,\n        ]}\n        secondaryActions={[\n          <HelpButton\n            helpPagePath=\"/interface/project-manager/properties\"\n            key=\"help\"\n          />,\n        ]}\n        title={<Trans>Project properties</Trans>}\n        cannotBeDismissed={true}\n        open={props.open}\n        onRequestClose={onCancelChanges}\n      >\n        <ColumnStackLayout noMargin>\n          <SemiControlledTextField\n            floatingLabelText={<Trans>Game name</Trans>}\n            fullWidth\n            type=\"text\"\n            value={name}\n            onChange={setName}\n            autoFocus\n          />\n          <Checkbox\n            label={\n              <Trans>\n                Display GDevelop splash at startup (in exported game)\n              </Trans>\n            }\n            checked={showGDevelopSplash}\n            onCheck={(e, checked) => {\n              if (!checked) {\n                if (\n                  subscriptionChecker.current &&\n                  !subscriptionChecker.current.checkHasSubscription()\n                )\n                  return;\n              }\n\n              setShowGDevelopSplash(checked);\n            }}\n          />\n          <SemiControlledTextField\n            floatingLabelText={<Trans>Version number (X.Y.Z)</Trans>}\n            fullWidth\n            hintText={defaultVersion}\n            type=\"text\"\n            value={version}\n            onChange={setVersion}\n          />\n          <SemiControlledTextField\n            floatingLabelText={\n              <Trans>Package name (for iOS and Android)</Trans>\n            }\n            fullWidth\n            hintText={defaultPackageName}\n            type=\"text\"\n            value={packageName}\n            onChange={setPackageName}\n            errorText={\n              validatePackageName(packageName) ? (\n                undefined\n              ) : (\n                <Trans>\n                  The package name is containing invalid characters or not\n                  following the convention \"xxx.yyy.zzz\" (numbers allowed after\n                  a letter only).\n                </Trans>\n              )\n            }\n          />\n          <SemiControlledTextField\n            floatingLabelText={<Trans>Author name</Trans>}\n            fullWidth\n            hintText={t`Your name`}\n            type=\"text\"\n            value={author}\n            onChange={setAuthor}\n          />\n          {useDeprecatedZeroAsDefaultZOrder ? (\n            <React.Fragment>\n              <Text size=\"title\">\n                <Trans>Z Order of objects created from events</Trans>\n              </Text>\n              <AlertMessage kind=\"info\">\n                <Trans>\n                  When you create an object using an action, GDevelop now sets\n                  the Z order of the object to the maximum value that was found\n                  when starting the scene for each layer. This allow to make\n                  sure that objects that you create are in front of others. This\n                  game was created before this change, so GDevelop maintains the\n                  old behavior: newly created objects Z order is set to 0. It's\n                  recommended that you switch to the new behavior by clicking\n                  the following button.\n                </Trans>\n              </AlertMessage>\n              <I18n>\n                {({ i18n }) => (\n                  <RaisedButton\n                    onClick={() => {\n                      const answer = Window.showConfirmDialog(\n                        i18n._(\n                          t`Make sure to verify all your events creating objects, and optionally add an action to set the Z order back to 0 if it's important for your game. Do you want to continue (recommened)?`\n                        )\n                      );\n                      if (!answer) return;\n\n                      setUseDeprecatedZeroAsDefaultZOrder(false);\n                    }}\n                    label={\n                      <Trans>\n                        Switch to create objects with the highest Z order of the\n                        layer\n                      </Trans>\n                    }\n                  />\n                )}\n              </I18n>\n            </React.Fragment>\n          ) : null}\n          <Text size=\"title\">\n            <Trans>Analytics</Trans>\n          </Text>\n          <GameRegistration project={project} />\n          <Text size=\"title\">\n            <Trans>Resolution and rendering</Trans>\n          </Text>\n          <ResponsiveLineStackLayout noMargin>\n            <SemiControlledTextField\n              floatingLabelText={<Trans>Game resolution width</Trans>}\n              fullWidth\n              type=\"number\"\n              value={'' + gameResolutionWidth}\n              onChange={value =>\n                setGameResolutionWidth(Math.max(1, parseInt(value, 10)))\n              }\n            />\n            <SemiControlledTextField\n              floatingLabelText={<Trans>Game resolution height</Trans>}\n              fullWidth\n              type=\"number\"\n              value={'' + gameResolutionHeight}\n              onChange={value =>\n                setGameResolutionHeight(Math.max(1, parseInt(value, 10)))\n              }\n            />\n          </ResponsiveLineStackLayout>\n          <SelectField\n            fullWidth\n            floatingLabelText={\n              <Trans>Game resolution resize mode (fullscreen or window)</Trans>\n            }\n            value={sizeOnStartupMode}\n            onChange={(e, i, value: string) => setSizeOnStartupMode(value)}\n          >\n            <SelectOption\n              value=\"\"\n              primaryText={t`No changes to the game size`}\n            />\n            <SelectOption\n              value=\"adaptWidth\"\n              primaryText={t`Change width to fit the screen or window size`}\n            />\n            <SelectOption\n              value=\"adaptHeight\"\n              primaryText={t`Change height to fit the screen or window size`}\n            />\n          </SelectField>\n          <Checkbox\n            label={\n              <Trans>\n                Update resolution during the game to fit the screen or window\n                size\n              </Trans>\n            }\n            disabled={sizeOnStartupMode === ''}\n            checked={adaptGameResolutionAtRuntime}\n            onCheck={(e, checked) => setAdaptGameResolutionAtRuntime(checked)}\n          />\n          <ResponsiveLineStackLayout noMargin>\n            <SemiControlledTextField\n              floatingLabelText={<Trans>Minimum FPS</Trans>}\n              fullWidth\n              type=\"number\"\n              value={'' + minFPS}\n              onChange={value => setMinFPS(Math.max(0, parseInt(value, 10)))}\n            />\n            <SemiControlledTextField\n              floatingLabelText={<Trans>Maximum FPS (0 to disable)</Trans>}\n              fullWidth\n              type=\"number\"\n              value={'' + maxFPS}\n              onChange={value => setMaxFPS(Math.max(0, parseInt(value, 10)))}\n            />\n          </ResponsiveLineStackLayout>\n          {maxFPS > 0 && maxFPS < 60 && (\n            <DismissableAlertMessage\n              identifier=\"maximum-fps-too-low\"\n              kind=\"warning\"\n            >\n              <Trans>\n                Most monitors have a refresh rate of 60 FPS. Setting a maximum\n                number of FPS under 60 will force the game to skip frames, and\n                the real number of FPS will be way below 60, making the game\n                laggy and impacting the gameplay negatively. Consider putting 60\n                or more for the maximum number or FPS, or disable it by setting\n                0.\n              </Trans>\n            </DismissableAlertMessage>\n          )}\n          {minFPS < 20 && (\n            <DismissableAlertMessage\n              identifier=\"minimum-fps-too-low\"\n              kind=\"warning\"\n            >\n              <Trans>\n                Setting the minimum number of FPS below 20 will increase a lot\n                the time that is allowed between the simulation of two frames of\n                the game. If case of a sudden slowdown, or on slow computers,\n                this can create buggy behaviors like objects passing beyond a\n                wall. Consider setting 20 as the minimum FPS.\n              </Trans>\n            </DismissableAlertMessage>\n          )}\n          <SelectField\n            fullWidth\n            floatingLabelText={\n              <Trans>Device orientation (for iOS and Android)</Trans>\n            }\n            value={orientation}\n            onChange={(e, i, value: string) => setOrientation(value)}\n          >\n            <SelectOption value=\"default\" primaryText={t`Platform default`} />\n            <SelectOption value=\"landscape\" primaryText={t`Landscape`} />\n            <SelectOption value=\"portrait\" primaryText={t`Portrait`} />\n          </SelectField>\n          <SelectField\n            fullWidth\n            floatingLabelText={\n              <Trans>Scale mode (also called \"Sampling\")</Trans>\n            }\n            value={scaleMode}\n            onChange={(e, i, value: string) => setScaleMode(value)}\n          >\n            <SelectOption\n              value=\"linear\"\n              primaryText={t`Linear (antialiased rendering, good for most games)`}\n            />\n            <SelectOption\n              value=\"nearest\"\n              primaryText={t`Nearest (no antialiasing, good for pixel perfect games)`}\n            />\n          </SelectField>\n          {scaleMode === 'nearest' && (\n            <DismissableAlertMessage\n              identifier=\"use-non-smoothed-textures\"\n              kind=\"info\"\n            >\n              <Trans>\n                To obtain the best pixel-perfect effect possible, go in the\n                resources editor and disable the Smoothing for all images of\n                your game. It will be done automatically for new images added\n                from now.\n              </Trans>\n            </DismissableAlertMessage>\n          )}\n          <Text size=\"title\">\n            <Trans>Project files</Trans>\n          </Text>\n          <SelectField\n            fullWidth\n            floatingLabelText={<Trans>Project file type</Trans>}\n            value={isFolderProject ? 'folder-project' : 'single-file'}\n            onChange={(e, i, value: string) =>\n              setIsFolderProject(value === 'folder-project')\n            }\n          >\n            <SelectOption\n              value={'single-file'}\n              primaryText={t`Single file (default)`}\n            />\n            <SelectOption\n              value={'folder-project'}\n              primaryText={t`Multiple files, saved in folder next to the main file`}\n            />\n          </SelectField>\n        </ColumnStackLayout>\n        <ExtensionsProperties project={project} />\n      </Dialog>\n      <SubscriptionChecker\n        ref={subscriptionChecker}\n        onChangeSubscription={() => {\n          onCancelChanges();\n          props.onChangeSubscription();\n        }}\n        mode=\"mandatory\"\n        id=\"Disable GDevelop splash at startup\"\n        title={<Trans>Disable GDevelop splash at startup</Trans>}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default ProjectPropertiesDialog;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport CloudDownload from '@material-ui/icons/CloudDownload';\nimport { ExtensionStore } from '.';\nimport EventsFunctionsExtensionsContext from '../../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext';\nimport HelpButton from '../../UI/HelpButton';\nimport { importExtension, installExtension } from './InstallExtension';\nimport InfoBar from '../../UI/Messages/InfoBar';\nimport { type ExtensionShortHeader } from '../../Utils/GDevelopServices/Extension';\n\ntype Props = {|\n  project: gdProject,\n  onClose: () => void,\n  onInstallExtension: ExtensionShortHeader => void,\n|};\n\n/**\n * Allows to browse and install events based extensions.\n */\nexport default function ExtensionsSearchDialog({\n  project,\n  onClose,\n  onInstallExtension,\n}: Props) {\n  const [isInstalling, setIsInstalling] = React.useState(false);\n  const [extensionWasInstalled, setExtensionWasInstalled] = React.useState(\n    false\n  );\n  const eventsFunctionsExtensionsState = React.useContext(\n    EventsFunctionsExtensionsContext\n  );\n  const eventsFunctionsExtensionOpener = eventsFunctionsExtensionsState.getEventsFunctionsExtensionOpener();\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Dialog\n          title={<Trans>Search for New Extensions</Trans>}\n          actions={[\n            <FlatButton\n              key=\"close\"\n              label={<Trans>Close</Trans>}\n              primary\n              onClick={onClose}\n              disabled={isInstalling}\n            />,\n          ]}\n          secondaryActions={[\n            <HelpButton key=\"help\" helpPagePath=\"/extensions/search\" />,\n            eventsFunctionsExtensionOpener ? (\n              <FlatButton\n                icon={<CloudDownload />}\n                key=\"import\"\n                label={<Trans>Import extension</Trans>}\n                onClick={() => {\n                  (async () => {\n                    setIsInstalling(true);\n                    const wasExtensionImported = await importExtension(\n                      i18n,\n                      eventsFunctionsExtensionsState,\n                      project\n                    );\n                    setExtensionWasInstalled(wasExtensionImported);\n                    setIsInstalling(false);\n                  })();\n                }}\n                disabled={isInstalling}\n              />\n            ) : null,\n          ]}\n          cannotBeDismissed={true}\n          flexBody\n          open\n          noMargin\n          onRequestClose={onClose}\n        >\n          <ExtensionStore\n            isInstalling={isInstalling}\n            onInstall={async extensionShortHeader => {\n              setIsInstalling(true);\n              onInstallExtension(extensionShortHeader);\n              const wasExtensionInstalled = await installExtension(\n                i18n,\n                project,\n                eventsFunctionsExtensionsState,\n                extensionShortHeader\n              );\n\n              setExtensionWasInstalled(wasExtensionInstalled);\n              setIsInstalling(false);\n            }}\n            project={project}\n            showOnlyWithBehaviors={false}\n          />\n          <InfoBar\n            identifier=\"extension-installed-explanation\"\n            message={\n              <Trans>\n                The extension was added to the project. You can now use it in\n                the list of actions/conditions and, if it's a behavior, in the\n                list of behaviors for an object.\n              </Trans>\n            }\n            show={extensionWasInstalled}\n          />\n        </Dialog>\n      )}\n    </I18n>\n  );\n}\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\n// This is \"AccountTree\" material icon.\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M22 11V3h-7v3H9V3H2v8h7V8h2v10h4v3h7v-8h-7v3h-2V8h2v3z\" />\n  </SvgIcon>\n));\n","// @flow\nimport { useCommand } from '../CommandPalette/CommandHooks';\n\ntype Props = {|\n  project: ?gdProject,\n  onOpenProjectProperties: () => void,\n  onOpenProjectVariables: () => void,\n  onOpenResourcesDialog: () => void,\n  onOpenPlatformSpecificAssetsDialog: () => void,\n|};\n\nconst ProjectManagerCommands = (props: Props) => {\n  useCommand('OPEN_PROJECT_PROPERTIES', !!props.project, {\n    handler: props.onOpenProjectProperties,\n  });\n\n  useCommand('OPEN_PROJECT_VARIABLES', !!props.project, {\n    handler: props.onOpenProjectVariables,\n  });\n\n  useCommand('OPEN_PLATFORM_SPECIFIC_ASSETS_DIALOG', !!props.project, {\n    handler: props.onOpenPlatformSpecificAssetsDialog,\n  });\n\n  useCommand('OPEN_PROJECT_RESOURCES', !!props.project, {\n    handler: props.onOpenResourcesDialog,\n  });\n\n  return null;\n};\n\nexport default ProjectManagerCommands;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { List, ListItem } from '../UI/List';\nimport TextField, {\n  noMarginTextFieldInListItemTopOffset,\n} from '../UI/TextField';\nimport SearchBar, { useShouldAutofocusSearchbar } from '../UI/SearchBar';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport ListIcon from '../UI/ListIcon';\nimport { AddListItem, SearchListItem } from '../UI/ListCommonItem';\nimport Window from '../Utils/Window';\nimport VariablesEditorDialog from '../VariablesList/VariablesEditorDialog';\nimport ProjectPropertiesDialog from './ProjectPropertiesDialog';\nimport {\n  enumerateLayouts,\n  enumerateExternalEvents,\n  enumerateExternalLayouts,\n  enumerateEventsFunctionsExtensions,\n  filterProjectItemsList,\n} from './EnumerateProjectItems';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport Clipboard, { SafeExtractor } from '../Utils/Clipboard';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\nimport ThemeConsumer from '../UI/Theme/ThemeConsumer';\nimport ExtensionsSearchDialog from '../AssetStore/ExtensionStore/ExtensionsSearchDialog';\nimport Close from '@material-ui/icons/Close';\nimport SettingsApplications from '@material-ui/icons/SettingsApplications';\nimport PhotoLibrary from '@material-ui/icons/PhotoLibrary';\nimport Settings from '@material-ui/icons/Settings';\nimport Save from '@material-ui/icons/Save';\nimport VariableTree from '../UI/CustomSvgIcons/VariableTree';\nimport ArtTrack from '@material-ui/icons/ArtTrack';\nimport AddToHomeScreen from '@material-ui/icons/AddToHomeScreen';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport ScenePropertiesDialog from '../SceneEditor/ScenePropertiesDialog';\nimport SceneVariablesDialog from '../SceneEditor/SceneVariablesDialog';\nimport { isExtensionNameTaken } from './EventFunctionExtensionNameVerifier';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\nimport { type MenuItemTemplate } from '../UI/Menu/Menu.flow';\nimport ProjectManagerCommands from './ProjectManagerCommands';\nimport { type HotReloadPreviewButtonProps } from '../HotReload/HotReloadPreviewButton';\nimport { shouldValidate } from '../UI/KeyboardShortcuts/InteractionKeys';\nimport { type ExtensionShortHeader } from '../Utils/GDevelopServices/Extension';\n\nconst LAYOUT_CLIPBOARD_KIND = 'Layout';\nconst EXTERNAL_LAYOUT_CLIPBOARD_KIND = 'External layout';\nconst EXTERNAL_EVENTS_CLIPBOARD_KIND = 'External events';\nconst EVENTS_FUNCTIONS_EXTENSION_CLIPBOARD_KIND = 'Events Functions Extension';\n\nconst styles = {\n  container: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    overflowY: 'hidden',\n  },\n  list: {\n    flex: 1,\n    overflowY: 'scroll',\n    padding: 0,\n  },\n  noIndentNestedList: {\n    padding: 0,\n  },\n  itemName: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n  },\n  itemTextField: {\n    top: noMarginTextFieldInListItemTopOffset,\n  },\n};\n\ntype ProjectStructureItemProps = {|\n  autoGenerateNestedIndicator?: boolean,\n  initiallyOpen?: boolean,\n  leftIcon?: React$Element<any>,\n  indentNestedItems?: boolean,\n  renderNestedItems: () => Array<React$Element<any> | null>,\n  primaryText: React.Node,\n  error?: ?Error,\n  onRefresh?: () => void,\n  open?: boolean,\n|};\n\nconst ProjectStructureItem = (props: ProjectStructureItemProps) => (\n  <ThemeConsumer>\n    {muiTheme => {\n      const {\n        error,\n        leftIcon,\n        onRefresh,\n        indentNestedItems,\n        ...otherProps\n      } = props;\n      return (\n        <ListItem\n          style={{\n            backgroundColor: muiTheme.listItem.groupBackgroundColor,\n            borderBottom: `1px solid ${muiTheme.listItem.separatorColor}`,\n          }}\n          nestedListStyle={\n            indentNestedItems ? undefined : styles.noIndentNestedList\n          }\n          {...otherProps}\n          leftIcon={error ? <WarningIcon /> : leftIcon}\n          displayReloadButton={!!error}\n          onReload={onRefresh}\n          reloadButtonTooltip={`An error has occured in functions. Click to reload them.`}\n        />\n      );\n    }}\n  </ThemeConsumer>\n);\n\ntype ItemProps = {|\n  primaryText: string,\n  editingName: boolean,\n  onEdit: () => void,\n  onDelete: () => void,\n  addLabel: string,\n  onAdd: () => void,\n  onRename: string => void,\n  onEditName: () => void,\n  onCopy: () => void,\n  onCut: () => void,\n  onPaste: () => void,\n  onDuplicate: () => void,\n  canPaste: () => boolean,\n  canMoveUp: boolean,\n  onMoveUp: () => void,\n  canMoveDown: boolean,\n  onMoveDown: () => void,\n  buildExtraMenuTemplate?: (i18n: I18nType) => Array<MenuItemTemplate>,\n  style?: ?Object,\n|};\n\nclass Item extends React.Component<ItemProps, {||}> {\n  textField: ?Object;\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.editingName && this.props.editingName) {\n      setTimeout(() => {\n        if (this.textField) this.textField.focus();\n      }, 100);\n    }\n  }\n\n  render() {\n    const label = this.props.editingName ? (\n      <TextField\n        id=\"rename-item-field\"\n        margin=\"none\"\n        ref={textField => (this.textField = textField)}\n        defaultValue={this.props.primaryText}\n        onBlur={e => this.props.onRename(e.currentTarget.value)}\n        onKeyPress={event => {\n          if (shouldValidate(event)) {\n            if (this.textField) this.textField.blur();\n          }\n        }}\n        fullWidth\n        style={styles.itemTextField}\n      />\n    ) : (\n      <div style={styles.itemName}>{this.props.primaryText}</div>\n    );\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <I18n>\n            {({ i18n }) => (\n              <ListItem\n                style={{\n                  borderBottom: `1px solid ${muiTheme.listItem.separatorColor}`,\n                  ...this.props.style,\n                }}\n                primaryText={label}\n                displayMenuButton\n                buildMenuTemplate={(i18n: I18nType) => [\n                  {\n                    label: i18n._(t`Edit`),\n                    click: () => this.props.onEdit(),\n                  },\n                  ...(this.props.buildExtraMenuTemplate\n                    ? this.props.buildExtraMenuTemplate(i18n)\n                    : []),\n                  { type: 'separator' },\n                  {\n                    label: i18n._(t`Rename`),\n                    click: () => this.props.onEditName(),\n                  },\n                  {\n                    label: i18n._(t`Delete`),\n                    click: () => this.props.onDelete(),\n                  },\n                  {\n                    label: this.props.addLabel,\n                    visible: !!this.props.onAdd,\n                    click: () => this.props.onAdd(),\n                  },\n                  { type: 'separator' },\n                  {\n                    label: i18n._(t`Copy`),\n                    click: () => this.props.onCopy(),\n                  },\n                  {\n                    label: i18n._(t`Cut`),\n                    click: () => this.props.onCut(),\n                  },\n                  {\n                    label: i18n._(t`Paste`),\n                    enabled: this.props.canPaste(),\n                    click: () => this.props.onPaste(),\n                  },\n                  {\n                    label: i18n._(t`Duplicate`),\n                    click: () => this.props.onDuplicate(),\n                  },\n                  { type: 'separator' },\n                  {\n                    label: i18n._(t`Move up`),\n                    enabled: this.props.canMoveUp,\n                    click: () => this.props.onMoveUp(),\n                  },\n                  {\n                    label: i18n._(t`Move down`),\n                    enabled: this.props.canMoveDown,\n                    click: () => this.props.onMoveDown(),\n                  },\n                ]}\n                onClick={() => {\n                  // It's essential to discard clicks when editing the name,\n                  // to avoid weird opening of an editor (accompanied with a\n                  // closing of the project manager) when clicking on the text\n                  // field.\n                  if (!this.props.editingName) this.props.onEdit();\n                }}\n              />\n            )}\n          </I18n>\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n\ntype Props = {|\n  project: gdProject,\n  onDeleteLayout: gdLayout => void,\n  onDeleteExternalEvents: gdExternalEvents => void,\n  onDeleteExternalLayout: gdExternalLayout => void,\n  onDeleteEventsFunctionsExtension: gdEventsFunctionsExtension => void,\n  onRenameLayout: (string, string) => void,\n  onRenameExternalEvents: (string, string) => void,\n  onRenameExternalLayout: (string, string) => void,\n  onRenameEventsFunctionsExtension: (string, string) => void,\n  onOpenLayout: string => void,\n  onOpenExternalEvents: string => void,\n  onOpenExternalLayout: string => void,\n  onOpenEventsFunctionsExtension: string => void,\n  onSaveProject: () => void,\n  onSaveProjectAs: () => void,\n  onCloseProject: () => void,\n  onExportProject: () => void,\n  onOpenPreferences: () => void,\n  onOpenProfile: () => void,\n  onOpenGamesDashboard: () => void,\n  onOpenResources: () => void,\n  onAddLayout: () => void,\n  onAddExternalEvents: () => void,\n  onAddExternalLayout: () => void,\n  onAddEventsFunctionsExtension: () => void,\n  onOpenPlatformSpecificAssets: () => void,\n  onChangeSubscription: () => void,\n  eventsFunctionsExtensionsError: ?Error,\n  onReloadEventsFunctionsExtensions: () => void,\n  freezeUpdate: boolean,\n  unsavedChanges?: UnsavedChanges,\n  hotReloadPreviewButtonProps: HotReloadPreviewButtonProps,\n  onInstallExtension: ExtensionShortHeader => void,\n|};\n\ntype State = {|\n  editedPropertiesLayout: ?gdLayout,\n  editedVariablesLayout: ?gdLayout,\n  renamedItemKind: ?string,\n  renamedItemName: string,\n  searchText: string,\n  projectPropertiesDialogOpen: boolean,\n  projectVariablesEditorOpen: boolean,\n  extensionsSearchDialogOpen: boolean,\n  layoutPropertiesDialogOpen: boolean,\n  layoutVariablesDialogOpen: boolean,\n|};\n\nexport default class ProjectManager extends React.Component<Props, State> {\n  _searchBar: ?SearchBar;\n\n  state = {\n    editedPropertiesLayout: null,\n    editedVariablesLayout: null,\n    renamedItemKind: null,\n    renamedItemName: '',\n    searchText: '',\n    projectPropertiesDialogOpen: false,\n    projectVariablesEditorOpen: false,\n    extensionsSearchDialogOpen: false,\n    layoutPropertiesDialogOpen: false,\n    layoutVariablesDialogOpen: false,\n  };\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    if (\n      nextState.projectPropertiesDialogOpen !==\n      this.state.projectPropertiesDialogOpen\n    )\n      return true;\n    if (\n      nextState.projectVariablesEditorOpen !==\n      this.state.projectVariablesEditorOpen\n    )\n      return true;\n    // Rendering the component is (super) costly (~20ms) as it iterates over\n    // every project layouts/external layouts/external events,\n    // so the prop freezeUpdate allow to ask the component to stop\n    // updating, for example when hidden.\n    return !nextProps.freezeUpdate;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    // Typical usage (don't forget to compare props):\n    if (!this.props.freezeUpdate && prevProps.freezeUpdate) {\n      if (useShouldAutofocusSearchbar() && this._searchBar)\n        this._searchBar.focus();\n    }\n  }\n\n  _openProjectProperties = () => {\n    this.setState({\n      projectPropertiesDialogOpen: true,\n    });\n  };\n\n  _openProjectVariables = () => {\n    this.setState({\n      projectVariablesEditorOpen: true,\n    });\n  };\n\n  _onEditName = (kind: ?string, name: string) => {\n    this.setState({\n      renamedItemKind: kind,\n      renamedItemName: name,\n    });\n  };\n\n  _copyLayout = (layout: gdLayout) => {\n    Clipboard.set(LAYOUT_CLIPBOARD_KIND, {\n      layout: serializeToJSObject(layout),\n      name: layout.getName(),\n    });\n  };\n\n  _cutLayout = (layout: gdLayout) => {\n    this._copyLayout(layout);\n    this.props.onDeleteLayout(layout);\n  };\n\n  _pasteLayout = (index: number) => {\n    if (!Clipboard.has(LAYOUT_CLIPBOARD_KIND)) return;\n\n    const clipboardContent = Clipboard.get(LAYOUT_CLIPBOARD_KIND);\n    const copiedLayout = SafeExtractor.extractObjectProperty(\n      clipboardContent,\n      'layout'\n    );\n    const name = SafeExtractor.extractStringProperty(clipboardContent, 'name');\n    if (!name || !copiedLayout) return;\n\n    const { project } = this.props;\n\n    const newName = newNameGenerator(name, name =>\n      project.hasLayoutNamed(name)\n    );\n\n    const newLayout = project.insertNewLayout(newName, index);\n\n    unserializeFromJSObject(\n      newLayout,\n      copiedLayout,\n      'unserializeFrom',\n      project\n    );\n    newLayout.setName(newName); // Unserialization has overwritten the name.\n    newLayout.updateBehaviorsSharedData(project);\n\n    this._onProjectItemModified();\n  };\n\n  _duplicateLayout = (layout: gdLayout, index: number) => {\n    this._copyLayout(layout);\n    this._pasteLayout(index);\n  };\n\n  _addLayout = (index: number) => {\n    const { project } = this.props;\n\n    const newName = newNameGenerator('New scene', name =>\n      project.hasLayoutNamed(name)\n    );\n    const newLayout = project.insertNewLayout(newName, index + 1);\n\n    newLayout.setName(newName);\n    newLayout.updateBehaviorsSharedData(project);\n\n    this._onProjectItemModified();\n  };\n\n  _onOpenLayoutProperties = (layout: ?gdLayout) => {\n    this.setState({ editedPropertiesLayout: layout });\n  };\n\n  _onOpenLayoutVariables = (layout: ?gdLayout) => {\n    this.setState({ editedVariablesLayout: layout });\n  };\n\n  _addExternalEvents = (index: number) => {\n    const { project } = this.props;\n\n    const newName = newNameGenerator('NewExternalEvents', name =>\n      project.hasExternalEventsNamed(name)\n    );\n    project.insertNewExternalEvents(newName, index + 1);\n    this._onProjectItemModified();\n  };\n\n  _addExternalLayout = (index: number) => {\n    const { project } = this.props;\n\n    const newName = newNameGenerator('NewExternalLayout', name =>\n      project.hasExternalLayoutNamed(name)\n    );\n    project.insertNewExternalLayout(newName, index + 1);\n    this._onProjectItemModified();\n  };\n\n  _addEventsFunctionsExtension = (index: number) => {\n    const { project } = this.props;\n\n    const newName = newNameGenerator('NewExtension', name =>\n      isExtensionNameTaken(name, project)\n    );\n    project.insertNewEventsFunctionsExtension(newName, index + 1);\n    this._onProjectItemModified();\n  };\n\n  _moveUpLayout = (index: number) => {\n    const { project } = this.props;\n    if (index <= 0) return;\n\n    project.swapLayouts(index, index - 1);\n    this._onProjectItemModified();\n  };\n\n  _moveDownLayout = (index: number) => {\n    const { project } = this.props;\n    if (index >= project.getLayoutsCount() - 1) return;\n\n    project.swapLayouts(index, index + 1);\n    this._onProjectItemModified();\n  };\n\n  _copyExternalEvents = (externalEvents: gdExternalEvents) => {\n    Clipboard.set(EXTERNAL_EVENTS_CLIPBOARD_KIND, {\n      externalEvents: serializeToJSObject(externalEvents),\n      name: externalEvents.getName(),\n    });\n  };\n\n  _cutExternalEvents = (externalEvents: gdExternalEvents) => {\n    this._copyExternalEvents(externalEvents);\n    this.props.onDeleteExternalEvents(externalEvents);\n  };\n\n  _pasteExternalEvents = (index: number) => {\n    if (!Clipboard.has(EXTERNAL_EVENTS_CLIPBOARD_KIND)) return;\n\n    const clipboardContent = Clipboard.get(EXTERNAL_EVENTS_CLIPBOARD_KIND);\n    const copiedExternalEvents = SafeExtractor.extractObjectProperty(\n      clipboardContent,\n      'externalEvents'\n    );\n    const name = SafeExtractor.extractStringProperty(clipboardContent, 'name');\n    if (!name || !copiedExternalEvents) return;\n\n    const { project } = this.props;\n\n    const newName = newNameGenerator(name, name =>\n      project.hasExternalEventsNamed(name)\n    );\n\n    const newExternalEvents = project.insertNewExternalEvents(newName, index);\n\n    unserializeFromJSObject(\n      newExternalEvents,\n      copiedExternalEvents,\n      'unserializeFrom',\n      project\n    );\n    newExternalEvents.setName(newName); // Unserialization has overwritten the name.\n\n    this._onProjectItemModified();\n  };\n\n  _duplicateExternalEvents = (\n    externalEvents: gdExternalEvents,\n    index: number\n  ) => {\n    this._copyExternalEvents(externalEvents);\n    this._pasteExternalEvents(index);\n  };\n\n  _moveUpExternalEvents = (index: number) => {\n    const { project } = this.props;\n    if (index <= 0) return;\n\n    project.swapExternalEvents(index, index - 1);\n    this._onProjectItemModified();\n  };\n\n  _moveDownExternalEvents = (index: number) => {\n    const { project } = this.props;\n    if (index >= project.getExternalEventsCount() - 1) return;\n\n    project.swapExternalEvents(index, index + 1);\n    this._onProjectItemModified();\n  };\n\n  _copyExternalLayout = (externalLayout: gdExternalLayout) => {\n    Clipboard.set(EXTERNAL_LAYOUT_CLIPBOARD_KIND, {\n      externalLayout: serializeToJSObject(externalLayout),\n      name: externalLayout.getName(),\n    });\n  };\n\n  _cutExternalLayout = (externalLayout: gdExternalLayout) => {\n    this._copyExternalLayout(externalLayout);\n    this.props.onDeleteExternalLayout(externalLayout);\n  };\n\n  _pasteExternalLayout = (index: number) => {\n    if (!Clipboard.has(EXTERNAL_LAYOUT_CLIPBOARD_KIND)) return;\n\n    const clipboardContent = Clipboard.get(EXTERNAL_LAYOUT_CLIPBOARD_KIND);\n    const copiedExternalLayout = SafeExtractor.extractObjectProperty(\n      clipboardContent,\n      'externalLayout'\n    );\n    const name = SafeExtractor.extractStringProperty(clipboardContent, 'name');\n    if (!name || !copiedExternalLayout) return;\n\n    const { project } = this.props;\n\n    const newName = newNameGenerator(name, name =>\n      project.hasExternalLayoutNamed(name)\n    );\n\n    const newExternalLayout = project.insertNewExternalLayout(newName, index);\n\n    unserializeFromJSObject(newExternalLayout, copiedExternalLayout);\n    newExternalLayout.setName(newName); // Unserialization has overwritten the name.\n    this._onProjectItemModified();\n  };\n\n  _duplicateExternalLayout = (\n    externalLayout: gdExternalLayout,\n    index: number\n  ) => {\n    this._copyExternalLayout(externalLayout);\n    this._pasteExternalLayout(index);\n  };\n\n  _moveUpExternalLayout = (index: number) => {\n    const { project } = this.props;\n    if (index <= 0) return;\n\n    project.swapExternalLayouts(index, index - 1);\n    this._onProjectItemModified();\n  };\n\n  _moveDownExternalLayout = (index: number) => {\n    const { project } = this.props;\n    if (index >= project.getExternalLayoutsCount() - 1) return;\n\n    project.swapExternalLayouts(index, index + 1);\n    this._onProjectItemModified();\n  };\n\n  _copyEventsFunctionsExtension = (\n    eventsFunctionsExtension: gdEventsFunctionsExtension\n  ) => {\n    Clipboard.set(EVENTS_FUNCTIONS_EXTENSION_CLIPBOARD_KIND, {\n      eventsFunctionsExtension: serializeToJSObject(eventsFunctionsExtension),\n      name: eventsFunctionsExtension.getName(),\n    });\n  };\n\n  _cutEventsFunctionsExtension = (\n    eventsFunctionsExtension: gdEventsFunctionsExtension\n  ) => {\n    this._copyEventsFunctionsExtension(eventsFunctionsExtension);\n    this.props.onDeleteEventsFunctionsExtension(eventsFunctionsExtension);\n  };\n\n  _duplicateEventsFunctionsExtension = (\n    eventsFunctionsExtension: gdEventsFunctionsExtension,\n    index: number\n  ) => {\n    this._copyEventsFunctionsExtension(eventsFunctionsExtension);\n    this._pasteEventsFunctionsExtension(index);\n  };\n\n  _pasteEventsFunctionsExtension = (index: number) => {\n    if (!Clipboard.has(EVENTS_FUNCTIONS_EXTENSION_CLIPBOARD_KIND)) return;\n\n    const clipboardContent = Clipboard.get(\n      EVENTS_FUNCTIONS_EXTENSION_CLIPBOARD_KIND\n    );\n    const copiedEventsFunctionsExtension = SafeExtractor.extractObjectProperty(\n      clipboardContent,\n      'eventsFunctionsExtension'\n    );\n    const name = SafeExtractor.extractStringProperty(clipboardContent, 'name');\n    if (!name || !copiedEventsFunctionsExtension) return;\n\n    const { project } = this.props;\n\n    const newName = newNameGenerator(name, name =>\n      isExtensionNameTaken(name, project)\n    );\n\n    const newEventsFunctionsExtension = project.insertNewEventsFunctionsExtension(\n      newName,\n      index\n    );\n\n    unserializeFromJSObject(\n      newEventsFunctionsExtension,\n      copiedEventsFunctionsExtension,\n      'unserializeFrom',\n      project\n    );\n    newEventsFunctionsExtension.setName(newName); // Unserialization has overwritten the name.\n\n    this._onProjectItemModified();\n    this.props.onReloadEventsFunctionsExtensions();\n  };\n\n  _moveUpEventsFunctionsExtension = (index: number) => {\n    const { project } = this.props;\n    if (index <= 0) return;\n\n    project.swapEventsFunctionsExtensions(index, index - 1);\n    this._onProjectItemModified();\n  };\n\n  _moveDownEventsFunctionsExtension = (index: number) => {\n    const { project } = this.props;\n    if (index >= project.getEventsFunctionsExtensionsCount() - 1) return;\n\n    project.swapEventsFunctionsExtensions(index, index + 1);\n    this._onProjectItemModified();\n  };\n\n  _renderMenu() {\n    // If there is already a main menu (as the native one made with\n    // Electron), don't show it in the Project Manager.\n    if (Window.hasMainMenu()) return null;\n\n    return (\n      <React.Fragment>\n        <ListItem\n          key=\"save\"\n          primaryText={<Trans>Save</Trans>}\n          leftIcon={<Save />}\n          onClick={() => this.props.onSaveProject()}\n        />\n        <ListItem\n          key=\"save-as\"\n          primaryText={<Trans>Save as...</Trans>}\n          leftIcon={<FileCopy />}\n          onClick={() => this.props.onSaveProjectAs()}\n        />\n        <ListItem\n          key=\"export\"\n          primaryText={<Trans>Export</Trans>}\n          leftIcon={<AddToHomeScreen />}\n          onClick={() => this.props.onExportProject()}\n        />\n        <ListItem\n          key=\"close\"\n          primaryText={<Trans>Close</Trans>}\n          leftIcon={<Close />}\n          onClick={() => this.props.onCloseProject()}\n        />\n        <ListItem\n          key=\"preferences\"\n          primaryText={<Trans>Preferences</Trans>}\n          leftIcon={<Settings />}\n          onClick={() => this.props.onOpenPreferences()}\n        />\n        <ListItem\n          key=\"profile\"\n          primaryText={<Trans>My profile</Trans>}\n          leftIcon={<AccountCircle />}\n          onClick={() => this.props.onOpenProfile()}\n        />\n        <ListItem\n          key=\"games-dashboard\"\n          primaryText={<Trans>Published Games Dashboard</Trans>}\n          leftIcon={<TimelineIcon />}\n          onClick={() => this.props.onOpenGamesDashboard()}\n        />\n      </React.Fragment>\n    );\n  }\n\n  _onSearchChange = (text: string) =>\n    this.setState({\n      searchText: text,\n    });\n\n  _onRequestSearch = () => {\n    /* Do nothing for now, but we could open the first result. */\n  };\n\n  _onProjectItemModified = () => {\n    this.forceUpdate();\n    if (this.props.unsavedChanges)\n      this.props.unsavedChanges.triggerUnsavedChanges();\n  };\n\n  render() {\n    const {\n      project,\n      eventsFunctionsExtensionsError,\n      onReloadEventsFunctionsExtensions,\n      onInstallExtension,\n    } = this.props;\n    const { renamedItemKind, renamedItemName, searchText } = this.state;\n\n    const forceOpen = searchText !== '' ? true : undefined;\n\n    return (\n      <div style={styles.container}>\n        <ProjectManagerCommands\n          project={this.props.project}\n          onOpenProjectProperties={this._openProjectProperties}\n          onOpenProjectVariables={this._openProjectVariables}\n          onOpenResourcesDialog={this.props.onOpenResources}\n          onOpenPlatformSpecificAssetsDialog={\n            this.props.onOpenPlatformSpecificAssets\n          }\n        />\n        <List style={styles.list}>\n          {this._renderMenu()}\n          <ProjectStructureItem\n            primaryText={<Trans>Game settings</Trans>}\n            leftIcon={\n              <ListIcon\n                iconSize={24}\n                isGDevelopIcon\n                src=\"res/ribbon_default/projectManager32.png\"\n              />\n            }\n            initiallyOpen={false}\n            autoGenerateNestedIndicator={true}\n            indentNestedItems\n            renderNestedItems={() => [\n              <ListItem\n                key=\"properties\"\n                primaryText={<Trans>Properties</Trans>}\n                leftIcon={<SettingsApplications />}\n                onClick={this._openProjectProperties}\n              />,\n              <ListItem\n                key=\"global-variables\"\n                primaryText={<Trans>Global variables</Trans>}\n                leftIcon={<VariableTree />}\n                onClick={this._openProjectVariables}\n              />,\n              <ListItem\n                key=\"icons\"\n                primaryText={<Trans>Icons</Trans>}\n                leftIcon={<PhotoLibrary />}\n                onClick={() => this.props.onOpenPlatformSpecificAssets()}\n              />,\n              <ListItem\n                key=\"resources\"\n                primaryText={<Trans>Resources</Trans>}\n                leftIcon={<ArtTrack />}\n                onClick={() => {\n                  this.props.onOpenResources();\n                }}\n              />,\n            ]}\n          />\n          <ProjectStructureItem\n            primaryText={<Trans>Scenes</Trans>}\n            leftIcon={\n              <ListIcon\n                iconSize={24}\n                isGDevelopIcon\n                src=\"res/ribbon_default/sceneadd32.png\"\n              />\n            }\n            initiallyOpen={true}\n            open={forceOpen}\n            autoGenerateNestedIndicator={!forceOpen}\n            renderNestedItems={() =>\n              filterProjectItemsList(enumerateLayouts(project), searchText)\n                .map((layout: gdLayout, i: number) => {\n                  const name = layout.getName();\n                  return (\n                    <Item\n                      key={i}\n                      primaryText={name}\n                      editingName={\n                        renamedItemKind === 'layout' && renamedItemName === name\n                      }\n                      onEdit={() => this.props.onOpenLayout(name)}\n                      onDelete={() => this.props.onDeleteLayout(layout)}\n                      addLabel={'Add a New Scene'}\n                      onAdd={() => this._addLayout(i)}\n                      onRename={newName => {\n                        this.props.onRenameLayout(name, newName);\n                        this._onEditName(null, '');\n                      }}\n                      onEditName={() => this._onEditName('layout', name)}\n                      onCopy={() => this._copyLayout(layout)}\n                      onCut={() => this._cutLayout(layout)}\n                      onPaste={() => this._pasteLayout(i)}\n                      onDuplicate={() => this._duplicateLayout(layout, i)}\n                      canPaste={() => Clipboard.has(LAYOUT_CLIPBOARD_KIND)}\n                      canMoveUp={i !== 0}\n                      onMoveUp={() => this._moveUpLayout(i)}\n                      canMoveDown={i !== project.getLayoutsCount() - 1}\n                      onMoveDown={() => this._moveDownLayout(i)}\n                      buildExtraMenuTemplate={(i18n: I18nType) => [\n                        {\n                          label: i18n._(t`Edit Scene Properties`),\n                          enabled: true,\n                          click: () => this._onOpenLayoutProperties(layout),\n                        },\n                        {\n                          label: i18n._(t`Edit Scene Variables`),\n                          enabled: true,\n                          click: () => this._onOpenLayoutVariables(layout),\n                        },\n                      ]}\n                    />\n                  );\n                })\n                .concat(\n                  <AddListItem\n                    key={'add-scene'}\n                    onClick={this.props.onAddLayout}\n                    primaryText={<Trans>Click to add a scene</Trans>}\n                  />\n                )\n            }\n          />\n          <ProjectStructureItem\n            primaryText={<Trans>External events</Trans>}\n            leftIcon={\n              <ListIcon\n                iconSize={24}\n                isGDevelopIcon\n                src=\"res/ribbon_default/externalevents32.png\"\n              />\n            }\n            initiallyOpen={false}\n            open={forceOpen}\n            autoGenerateNestedIndicator={!forceOpen}\n            renderNestedItems={() =>\n              filterProjectItemsList(\n                enumerateExternalEvents(project),\n                searchText\n              )\n                .map((externalEvents, i) => {\n                  const name = externalEvents.getName();\n                  return (\n                    <Item\n                      key={i}\n                      primaryText={name}\n                      editingName={\n                        renamedItemKind === 'external-events' &&\n                        renamedItemName === name\n                      }\n                      onEdit={() => this.props.onOpenExternalEvents(name)}\n                      onDelete={() =>\n                        this.props.onDeleteExternalEvents(externalEvents)\n                      }\n                      addLabel={'Add New External Events'}\n                      onAdd={() => this._addExternalEvents(i)}\n                      onRename={newName => {\n                        this.props.onRenameExternalEvents(name, newName);\n                        this._onEditName(null, '');\n                      }}\n                      onEditName={() =>\n                        this._onEditName('external-events', name)\n                      }\n                      onCopy={() => this._copyExternalEvents(externalEvents)}\n                      onCut={() => this._cutExternalEvents(externalEvents)}\n                      onPaste={() => this._pasteExternalEvents(i)}\n                      onDuplicate={() =>\n                        this._duplicateExternalEvents(externalEvents, i)\n                      }\n                      canPaste={() =>\n                        Clipboard.has(EXTERNAL_EVENTS_CLIPBOARD_KIND)\n                      }\n                      canMoveUp={i !== 0}\n                      onMoveUp={() => this._moveUpExternalEvents(i)}\n                      canMoveDown={i !== project.getExternalEventsCount() - 1}\n                      onMoveDown={() => this._moveDownExternalEvents(i)}\n                    />\n                  );\n                })\n                .concat(\n                  <AddListItem\n                    key={'add-external-events'}\n                    primaryText={<Trans>Click to add external events</Trans>}\n                    onClick={this.props.onAddExternalEvents}\n                  />\n                )\n            }\n          />\n          <ProjectStructureItem\n            primaryText={<Trans>External layouts</Trans>}\n            leftIcon={\n              <ListIcon\n                iconSize={24}\n                isGDevelopIcon\n                src=\"res/ribbon_default/externallayout32.png\"\n              />\n            }\n            initiallyOpen={false}\n            open={forceOpen}\n            autoGenerateNestedIndicator={!forceOpen}\n            renderNestedItems={() =>\n              filterProjectItemsList(\n                enumerateExternalLayouts(project),\n                searchText\n              )\n                .map((externalLayout, i) => {\n                  const name = externalLayout.getName();\n                  return (\n                    <Item\n                      key={i}\n                      primaryText={name}\n                      editingName={\n                        renamedItemKind === 'external-layout' &&\n                        renamedItemName === name\n                      }\n                      onEdit={() => this.props.onOpenExternalLayout(name)}\n                      onDelete={() =>\n                        this.props.onDeleteExternalLayout(externalLayout)\n                      }\n                      addLabel={'Add a New External Layout'}\n                      onAdd={() => this._addExternalLayout(i)}\n                      onRename={newName => {\n                        this.props.onRenameExternalLayout(name, newName);\n                        this._onEditName(null, '');\n                      }}\n                      onEditName={() =>\n                        this._onEditName('external-layout', name)\n                      }\n                      onCopy={() => this._copyExternalLayout(externalLayout)}\n                      onCut={() => this._cutExternalLayout(externalLayout)}\n                      onPaste={() => this._pasteExternalLayout(i)}\n                      onDuplicate={() =>\n                        this._duplicateExternalLayout(externalLayout, i)\n                      }\n                      canPaste={() =>\n                        Clipboard.has(EXTERNAL_LAYOUT_CLIPBOARD_KIND)\n                      }\n                      canMoveUp={i !== 0}\n                      onMoveUp={() => this._moveUpExternalLayout(i)}\n                      canMoveDown={i !== project.getExternalLayoutsCount() - 1}\n                      onMoveDown={() => this._moveDownExternalLayout(i)}\n                    />\n                  );\n                })\n                .concat(\n                  <AddListItem\n                    key={'add-external-layout'}\n                    primaryText={<Trans>Click to add an external layout</Trans>}\n                    onClick={this.props.onAddExternalLayout}\n                  />\n                )\n            }\n          />\n          <ProjectStructureItem\n            primaryText={<Trans>Functions/Behaviors</Trans>}\n            error={eventsFunctionsExtensionsError}\n            onRefresh={onReloadEventsFunctionsExtensions}\n            leftIcon={\n              <ListIcon\n                iconSize={24}\n                isGDevelopIcon\n                src=\"res/ribbon_default/function32.png\"\n              />\n            }\n            initiallyOpen={false}\n            open={forceOpen}\n            autoGenerateNestedIndicator={\n              !forceOpen && !eventsFunctionsExtensionsError\n            }\n            renderNestedItems={() =>\n              filterProjectItemsList(\n                enumerateEventsFunctionsExtensions(project),\n                searchText\n              )\n                .map((eventsFunctionsExtension, i) => {\n                  const name = eventsFunctionsExtension.getName();\n                  return (\n                    <Item\n                      key={i}\n                      primaryText={name}\n                      editingName={\n                        renamedItemKind === 'events-functions-extension' &&\n                        renamedItemName === name\n                      }\n                      onEdit={() =>\n                        this.props.onOpenEventsFunctionsExtension(name)\n                      }\n                      onDelete={() =>\n                        this.props.onDeleteEventsFunctionsExtension(\n                          eventsFunctionsExtension\n                        )\n                      }\n                      addLabel={'Add a New Extension'}\n                      onAdd={() => this._addEventsFunctionsExtension(i)}\n                      onRename={newName => {\n                        this.props.onRenameEventsFunctionsExtension(\n                          name,\n                          newName\n                        );\n                        this._onEditName(null, '');\n                      }}\n                      onEditName={() =>\n                        this._onEditName('events-functions-extension', name)\n                      }\n                      onCopy={() =>\n                        this._copyEventsFunctionsExtension(\n                          eventsFunctionsExtension\n                        )\n                      }\n                      onCut={() =>\n                        this._cutEventsFunctionsExtension(\n                          eventsFunctionsExtension\n                        )\n                      }\n                      onPaste={() => this._pasteEventsFunctionsExtension(i)}\n                      onDuplicate={() =>\n                        this._duplicateEventsFunctionsExtension(\n                          eventsFunctionsExtension,\n                          i\n                        )\n                      }\n                      canPaste={() =>\n                        Clipboard.has(EVENTS_FUNCTIONS_EXTENSION_CLIPBOARD_KIND)\n                      }\n                      canMoveUp={i !== 0}\n                      onMoveUp={() => this._moveUpEventsFunctionsExtension(i)}\n                      canMoveDown={\n                        i !== project.getEventsFunctionsExtensionsCount() - 1\n                      }\n                      onMoveDown={() =>\n                        this._moveDownEventsFunctionsExtension(i)\n                      }\n                    />\n                  );\n                })\n                .concat(\n                  <AddListItem\n                    key={'add-events-functions-extension'}\n                    primaryText={\n                      <Trans>Click to add functions and behaviors</Trans>\n                    }\n                    onClick={this.props.onAddEventsFunctionsExtension}\n                  />\n                )\n                .concat(\n                  <SearchListItem\n                    key={'extensions-search'}\n                    primaryText={<Trans>Search for new extensions</Trans>}\n                    onClick={() =>\n                      this.setState({ extensionsSearchDialogOpen: true })\n                    }\n                  />\n                )\n            }\n          />\n        </List>\n        <SearchBar\n          ref={searchBar => (this._searchBar = searchBar)}\n          value={searchText}\n          onRequestSearch={this._onRequestSearch}\n          onChange={this._onSearchChange}\n        />\n        {this.state.projectVariablesEditorOpen && (\n          <VariablesEditorDialog\n            title={<Trans>Global Variables</Trans>}\n            open\n            variablesContainer={project.getVariables()}\n            onCancel={() =>\n              this.setState({ projectVariablesEditorOpen: false })\n            }\n            onApply={() => {\n              if (this.props.unsavedChanges)\n                this.props.unsavedChanges.triggerUnsavedChanges();\n              this.setState({ projectVariablesEditorOpen: false });\n            }}\n            emptyExplanationMessage={\n              <Trans>\n                Global variables are variables that are shared amongst all the\n                scenes of the game.\n              </Trans>\n            }\n            emptyExplanationSecondMessage={\n              <Trans>\n                For example, you can have a variable called UnlockedLevelsCount\n                representing the number of levels unlocked by the player.\n              </Trans>\n            }\n            hotReloadPreviewButtonProps={this.props.hotReloadPreviewButtonProps}\n          />\n        )}\n        {this.state.projectPropertiesDialogOpen && (\n          <ProjectPropertiesDialog\n            open={this.state.projectPropertiesDialogOpen}\n            project={project}\n            onClose={() =>\n              this.setState({ projectPropertiesDialogOpen: false })\n            }\n            onApply={() => {\n              if (this.props.unsavedChanges)\n                this.props.unsavedChanges.triggerUnsavedChanges();\n              this.setState({ projectPropertiesDialogOpen: false });\n            }}\n            onChangeSubscription={this.props.onChangeSubscription}\n          />\n        )}\n        {!!this.state.editedPropertiesLayout && (\n          <ScenePropertiesDialog\n            open\n            layout={this.state.editedPropertiesLayout}\n            project={this.props.project}\n            onApply={() => {\n              if (this.props.unsavedChanges)\n                this.props.unsavedChanges.triggerUnsavedChanges();\n              this._onOpenLayoutProperties(null);\n            }}\n            onClose={() => this._onOpenLayoutProperties(null)}\n            onEditVariables={() => {\n              this._onOpenLayoutVariables(this.state.editedPropertiesLayout);\n              this._onOpenLayoutProperties(null);\n            }}\n          />\n        )}\n        {!!this.state.editedVariablesLayout && (\n          <SceneVariablesDialog\n            open\n            layout={this.state.editedVariablesLayout}\n            onClose={() => this._onOpenLayoutVariables(null)}\n            onApply={() => {\n              if (this.props.unsavedChanges)\n                this.props.unsavedChanges.triggerUnsavedChanges();\n              this._onOpenLayoutVariables(null);\n            }}\n            hotReloadPreviewButtonProps={this.props.hotReloadPreviewButtonProps}\n          />\n        )}\n        {this.state.extensionsSearchDialogOpen && (\n          <ExtensionsSearchDialog\n            project={project}\n            onClose={() => this.setState({ extensionsSearchDialogOpen: false })}\n            onInstallExtension={onInstallExtension}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport MuiBadge from '@material-ui/core/Badge';\n\ntype Props = {|\n  children: React.Node,\n  badgeContent: React.Node,\n  color: 'error' | 'primary' | 'secondary' | 'default',\n|};\n\nexport default function Badge(props: Props) {\n  return <MuiBadge {...props} />;\n}\n","// @flow\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\nimport { Trans } from '@lingui/macro';\nimport React from 'react';\nimport { TreeTableRow, TreeTableCell } from '../UI/TreeTable';\nimport InlineCheckbox from '../UI/InlineCheckbox';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FlareIcon from '@material-ui/icons/Flare';\nimport IconButton from '../UI/IconButton';\nimport Delete from '@material-ui/icons/Delete';\nimport TextField from '../UI/TextField';\nimport DragHandle from '../UI/DragHandle';\nimport ElementWithMenu from '../UI/Menu/ElementWithMenu';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Badge from '../UI/Badge';\n\ntype Props = {|\n  layerName: string,\n  nameError: boolean,\n  onBlur: () => void,\n  onRemove: () => void,\n  isVisible: boolean,\n  isLightingLayer: boolean,\n  onChangeVisibility: boolean => void,\n  effectsCount: number,\n  onEditEffects: () => void,\n  onEdit: () => void,\n  width: number,\n|};\n\nexport default ({\n  layerName,\n  nameError,\n  onBlur,\n  onRemove,\n  isVisible,\n  effectsCount,\n  onEditEffects,\n  onChangeVisibility,\n  width,\n  isLightingLayer,\n  onEdit,\n}: Props) => (\n  <I18n>\n    {({ i18n }) => (\n      <TreeTableRow>\n        <TreeTableCell>\n          <DragHandle />\n        </TreeTableCell>\n        <TreeTableCell expand>\n          <TextField\n            margin=\"none\"\n            defaultValue={layerName || i18n._(t`Base layer`)}\n            id={layerName}\n            errorText={\n              nameError ? <Trans>This name is already taken</Trans> : undefined\n            }\n            disabled={!layerName}\n            onBlur={onBlur}\n            fullWidth\n          />\n        </TreeTableCell>\n        <TreeTableCell>\n          {width < 350 ? (\n            <ElementWithMenu\n              element={\n                <IconButton size=\"small\">\n                  <MoreVert />\n                </IconButton>\n              }\n              buildMenuTemplate={(i18n: I18nType) => [\n                {\n                  label: isLightingLayer\n                    ? i18n._(t`Edit lighting properties`)\n                    : i18n._(t`Edit properties`),\n                  click: onEdit,\n                },\n                {\n                  label: i18n._(t`Edit effects (${effectsCount})`),\n                  click: onEditEffects,\n                },\n                {\n                  type: 'checkbox',\n                  label: i18n._(t`Visible`),\n                  checked: isVisible,\n                  click: () => onChangeVisibility(!isVisible),\n                },\n                { type: 'separator' },\n                {\n                  label: i18n._(t`Delete`),\n                  enabled: !!layerName,\n                  click: onRemove,\n                },\n              ]}\n            />\n          ) : (\n            <React.Fragment>\n              <InlineCheckbox\n                checked={isVisible}\n                checkedIcon={<Visibility />}\n                uncheckedIcon={<VisibilityOff />}\n                onCheck={(e, value) => onChangeVisibility(value)}\n              />\n              <IconButton\n                size=\"small\"\n                onClick={onEditEffects}\n                tooltip={t`Edit effects (${effectsCount})`}\n              >\n                <Badge badgeContent={effectsCount} color=\"primary\">\n                  <FlareIcon />\n                </Badge>\n              </IconButton>\n              <IconButton\n                size=\"small\"\n                onClick={onEdit}\n                tooltip={\n                  isLightingLayer\n                    ? t`Edit lighting properties`\n                    : t`Edit properties`\n                }\n              >\n                {isLightingLayer ? <EmojiObjectsIcon /> : <EditIcon />}\n              </IconButton>\n              <IconButton\n                size=\"small\"\n                onClick={onRemove}\n                disabled={!layerName}\n                tooltip={t`Delete the layer`}\n              >\n                <Delete />\n              </IconButton>\n            </React.Fragment>\n          )}\n        </TreeTableCell>\n      </TreeTableRow>\n    )}\n  </I18n>\n);\n","// @flow\nimport { I18n } from '@lingui/react';\nimport { t } from '@lingui/macro';\nimport React from 'react';\nimport TextField from '../UI/TextField';\nimport ColorPicker from '../UI/ColorField/ColorPicker';\nimport { TreeTableCell, TreeTableRow } from '../UI/TreeTable';\nimport DragHandle from '../UI/DragHandle';\n\ntype Props = {|\n  layout: gdLayout,\n  onBackgroundColorChanged: () => void,\n|};\n\nexport default ({ layout, onBackgroundColorChanged }: Props) => (\n  <I18n>\n    {({ i18n }) => (\n      <TreeTableRow>\n        <TreeTableCell>\n          <DragHandle disabled />\n        </TreeTableCell>\n        <TreeTableCell expand>\n          <TextField\n            fullWidth\n            value={i18n._(t`Background color`)}\n            margin=\"none\"\n            disabled\n          />\n        </TreeTableCell>\n        <TreeTableCell>\n          <ColorPicker\n            disableAlpha\n            color={{\n              r: layout.getBackgroundColorRed(),\n              g: layout.getBackgroundColorGreen(),\n              b: layout.getBackgroundColorBlue(),\n              a: 255,\n            }}\n            onChangeComplete={color => {\n              layout.setBackgroundColor(color.rgb.r, color.rgb.g, color.rgb.b);\n              onBackgroundColorChanged();\n            }}\n          />\n        </TreeTableCell>\n      </TreeTableRow>\n    )}\n  </I18n>\n);\n","// @flow\nimport * as React from 'react';\nimport ElementWithMenu from './Menu/ElementWithMenu';\nimport { type MenuItemTemplate } from './Menu/Menu.flow';\nimport { type I18n as I18nType } from '@lingui/core';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { Spacer } from './Grid';\n\ntype Props = {|\n  label?: React.Node,\n  primary?: boolean,\n  disabled?: boolean,\n  icon?: React.Node,\n  onClick: ?() => void,\n  buildMenuTemplate: (i18n: I18nType) => Array<MenuItemTemplate>,\n|};\n\nconst shouldNeverBeCalled = () => {\n  throw new Error(\n    'This RaisedButtonWithSplitMenu onClick should never be called'\n  );\n};\n\n/**\n * A raised button based on Material-UI button, that has a menu displayed\n * when the the dropdown arrow is clicked.\n */\nconst RaisedButtonWithSplitMenu = (props: Props) => {\n  const { buildMenuTemplate, onClick, label, primary, icon, disabled } = props;\n\n  // In theory, focus ripple is only shown after a keyboard interaction\n  // (see https://github.com/mui-org/material-ui/issues/12067). However, as\n  // it's important to get focus right in the whole app, make the ripple\n  // always visible to be sure we're getting focusing right.\n  const focusRipple = true;\n\n  return (\n    <ButtonGroup\n      variant=\"contained\"\n      color={primary ? 'primary' : 'default'}\n      disabled={disabled}\n      size=\"small\"\n    >\n      <Button focusRipple={focusRipple} onClick={onClick}>\n        {icon}\n        {icon && <Spacer />}\n        {label}\n      </Button>\n      <ElementWithMenu\n        passExtraProps={\n          true /* ButtonGroup is passing props to Button: disabled, color, variant, size */\n        }\n        element={\n          <Button onClick={shouldNeverBeCalled} focusRipple={focusRipple}>\n            <ArrowDropDownIcon />\n          </Button>\n        }\n        buildMenuTemplate={buildMenuTemplate}\n      />\n    </ButtonGroup>\n  );\n};\n\nexport default RaisedButtonWithSplitMenu;\n","// @flow\nimport { t, Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport { mapReverseFor } from '../Utils/MapFor';\nimport LayerRow from './LayerRow';\nimport BackgroundColorRow from './BackgroundColorRow';\nimport { Column, Line } from '../UI/Grid';\nimport Add from '@material-ui/icons/Add';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\nimport ScrollView from '../UI/ScrollView';\nimport { FullSizeMeasurer } from '../UI/FullSizeMeasurer';\nimport Background from '../UI/Background';\nimport { type HotReloadPreviewButtonProps } from '../HotReload/HotReloadPreviewButton';\nimport RaisedButtonWithSplitMenu from '../UI/RaisedButtonWithSplitMenu';\n\nconst SortableLayerRow = SortableElement(LayerRow);\n\ntype LayersListBodyState = {|\n  nameErrors: { [string]: boolean },\n|};\n\nclass LayersListBody extends Component<*, LayersListBodyState> {\n  state = {\n    nameErrors: {},\n  };\n\n  _onLayerModified = () => {\n    if (this.props.unsavedChanges)\n      this.props.unsavedChanges.triggerUnsavedChanges();\n    this.forceUpdate();\n  };\n\n  render() {\n    const { layersContainer, onEditEffects, onEdit, width } = this.props;\n\n    const layersCount = layersContainer.getLayersCount();\n    const containerLayersList = mapReverseFor(0, layersCount, i => {\n      const layer = layersContainer.getLayerAt(i);\n      const layerName = layer.getName();\n      const isLightingLayer = layer.isLightingLayer();\n\n      return (\n        <SortableLayerRow\n          index={layersCount - 1 - i}\n          key={'layer-' + layerName}\n          layer={layer}\n          layerName={layerName}\n          isLightingLayer={isLightingLayer}\n          nameError={this.state.nameErrors[layerName]}\n          effectsCount={layer.getEffectsCount()}\n          onEditEffects={() => onEditEffects(layer)}\n          onEdit={() => onEdit(layer)}\n          onBlur={event => {\n            const newName = event.target.value;\n            if (layerName === newName) return;\n\n            let success = true;\n            if (layersContainer.hasLayerNamed(newName)) {\n              success = false;\n            } else {\n              this.props.onRenameLayer(layerName, newName, doRename => {\n                if (doRename)\n                  layersContainer.getLayer(layerName).setName(newName);\n              });\n            }\n\n            this.setState({\n              nameErrors: {\n                ...this.state.nameErrors,\n                [layerName]: !success,\n              },\n            });\n          }}\n          onRemove={() => {\n            this.props.onRemoveLayer(layerName, doRemove => {\n              if (!doRemove) return;\n\n              layersContainer.removeLayer(layerName);\n              this._onLayerModified();\n            });\n          }}\n          isVisible={layer.getVisibility()}\n          onChangeVisibility={visible => {\n            layer.setVisibility(visible);\n            this._onLayerModified();\n          }}\n          width={width}\n        />\n      );\n    });\n\n    return (\n      <Column noMargin expand>\n        {containerLayersList}\n        <BackgroundColorRow\n          layout={layersContainer}\n          onBackgroundColorChanged={() => this._onLayerModified()}\n        />\n      </Column>\n    );\n  }\n}\n\nconst SortableLayersListBody = SortableContainer(LayersListBody);\n\ntype Props = {|\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  layersContainer: gdLayout,\n  onEditLayerEffects: (layer: ?gdLayer) => void,\n  onEditLayer: (layer: ?gdLayer) => void,\n  onRemoveLayer: (layerName: string, cb: (done: boolean) => void) => void,\n  onRenameLayer: (\n    oldName: string,\n    newName: string,\n    cb: (done: boolean) => void\n  ) => void,\n  unsavedChanges?: ?UnsavedChanges,\n\n  // Preview:\n  hotReloadPreviewButtonProps: HotReloadPreviewButtonProps,\n|};\n\ntype State = {|\n  effectsEditedLayer: ?gdLayer,\n|};\n\nconst hasLightingLayer = (layout: gdLayout) => {\n  const layersCount = layout.getLayersCount();\n  return (\n    mapReverseFor(0, layersCount, i =>\n      layout.getLayerAt(i).isLightingLayer()\n    ).filter(Boolean).length > 0\n  );\n};\n\nexport default class LayersList extends Component<Props, State> {\n  _addLayer = () => {\n    const { layersContainer } = this.props;\n    const name = newNameGenerator('Layer', name =>\n      layersContainer.hasLayerNamed(name)\n    );\n    layersContainer.insertNewLayer(name, layersContainer.getLayersCount());\n    this._onLayerModified();\n  };\n\n  _addLightingLayer = () => {\n    const { layersContainer } = this.props;\n    const name = newNameGenerator('Lighting', name =>\n      layersContainer.hasLayerNamed(name)\n    );\n    layersContainer.insertNewLayer(name, layersContainer.getLayersCount());\n    const layer = layersContainer.getLayer(name);\n    layer.setLightingLayer(true);\n    layer.setFollowBaseLayerCamera(true);\n    layer.setAmbientLightColor(200, 200, 200);\n    this._onLayerModified();\n  };\n\n  _onLayerModified = () => {\n    if (this.props.unsavedChanges)\n      this.props.unsavedChanges.triggerUnsavedChanges();\n    this.forceUpdate();\n  };\n\n  render() {\n    // Force the list to be mounted again if layersContainer\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const listKey = this.props.layersContainer.ptr;\n    const isLightingLayerPresent = hasLightingLayer(this.props.layersContainer);\n\n    return (\n      <Background>\n        <ScrollView autoHideScrollbar>\n          <FullSizeMeasurer>\n            {({ width }) => (\n              // TODO: The list is costly to render when there are many layers, consider\n              // using SortableVirtualizedItemList.\n              <SortableLayersListBody\n                key={listKey}\n                layersContainer={this.props.layersContainer}\n                onEditEffects={this.props.onEditLayerEffects}\n                onEdit={this.props.onEditLayer}\n                onRemoveLayer={this.props.onRemoveLayer}\n                onRenameLayer={this.props.onRenameLayer}\n                onSortEnd={({ oldIndex, newIndex }) => {\n                  const layersCount = this.props.layersContainer.getLayersCount();\n                  this.props.layersContainer.moveLayer(\n                    layersCount - 1 - oldIndex,\n                    layersCount - 1 - newIndex\n                  );\n                  this._onLayerModified();\n                }}\n                helperClass=\"sortable-helper\"\n                useDragHandle\n                unsavedChanges={this.props.unsavedChanges}\n                width={width}\n              />\n            )}\n          </FullSizeMeasurer>\n          <Column>\n            <Line justifyContent=\"flex-end\" expand>\n              <RaisedButtonWithSplitMenu\n                label={<Trans>Add a layer</Trans>}\n                primary\n                onClick={this._addLayer}\n                icon={<Add />}\n                buildMenuTemplate={i18n => [\n                  {\n                    label: i18n._(t`Add lighting layer`),\n                    enabled: !isLightingLayerPresent,\n                    click: this._addLightingLayer,\n                  },\n                ]}\n              />\n            </Line>\n          </Column>\n        </ScrollView>\n      </Background>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport PropertiesEditor from '../../PropertiesEditor';\nimport propertiesMapToSchema from '../../PropertiesEditor/PropertiesMapToSchema';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport { Column } from '../../UI/Grid';\nimport { type BehaviorEditorProps } from './BehaviorEditorProps.flow';\n\ntype Props = BehaviorEditorProps;\n\nexport default class BehaviorPropertiesEditor extends React.Component<Props> {\n  render() {\n    const { behavior, behaviorContent } = this.props;\n    const properties = behavior.getProperties(behaviorContent.getContent());\n\n    const propertiesSchema = propertiesMapToSchema(\n      properties,\n      behaviorContent => behavior.getProperties(behaviorContent.getContent()),\n      (behaviorContent, name, value) => {\n        behavior.updateProperty(behaviorContent.getContent(), name, value);\n      }\n    );\n\n    return (\n      <Column expand>\n        {propertiesSchema.length ? (\n          <PropertiesEditor\n            schema={propertiesSchema}\n            instances={[behaviorContent]}\n          />\n        ) : (\n          <EmptyMessage>\n            <Trans>\n              There is nothing to configure for this behavior. You can still use\n              events to interact with the object and this behavior.\n            </Trans>\n          </EmptyMessage>\n        )}\n      </Column>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { type Vertex } from './PolygonEditor';\n\ntype Props = {|\n  shape: string,\n  dimensionA: number,\n  dimensionB: number,\n  offsetX: number,\n  offsetY: number,\n  polygonOrigin: string,\n  vertices: Array<Vertex>,\n  width: number,\n  height: number,\n  zoomFactor: number,\n  onMoveVertex: (index: number, newX: number, newY: number) => void,\n|};\n\ntype State = {|\n  draggedVertex: ?Vertex,\n  draggedIndex: number,\n|};\n\nexport default class ShapePreview extends React.Component<Props, State> {\n  state = { draggedVertex: null, draggedIndex: -1 };\n  _svg: any;\n\n  _onVertexDown = (vertex: Vertex, index: number) => {\n    if (this.state.draggedVertex) return;\n    this.setState({ draggedVertex: vertex, draggedIndex: index });\n  };\n\n  _onMouseUp = () => {\n    const draggingWasDone = !!this.state.draggedVertex;\n    const { draggedVertex, draggedIndex } = this.state;\n    this.setState(\n      {\n        draggedVertex: null,\n      },\n      () => {\n        if (draggingWasDone)\n          this.props.onMoveVertex(\n            draggedIndex,\n            Math.round(draggedVertex ? draggedVertex.x : 0),\n            Math.round(draggedVertex ? draggedVertex.y : 0)\n          );\n      }\n    );\n  };\n\n  _onMouseMove = (event: any) => {\n    const {\n      offsetX,\n      offsetY,\n      polygonOrigin,\n      width,\n      height,\n      zoomFactor,\n    } = this.props;\n    const { draggedVertex } = this.state;\n    if (!draggedVertex) return;\n\n    const pointOnScreen = this._svg.createSVGPoint();\n    pointOnScreen.x = event.clientX;\n    pointOnScreen.y = event.clientY;\n    const screenToSvgMatrix = this._svg.getScreenCTM().inverse();\n    const pointOnSvg = pointOnScreen.matrixTransform(screenToSvgMatrix);\n\n    draggedVertex.x =\n      pointOnSvg.x / zoomFactor -\n      offsetX -\n      (polygonOrigin === 'Center' ? width / 2 : 0);\n    draggedVertex.y =\n      pointOnSvg.y / zoomFactor -\n      offsetY -\n      (polygonOrigin === 'Center' ? height / 2 : 0);\n\n    this.forceUpdate();\n  };\n\n  _renderBox() {\n    const {\n      dimensionA,\n      dimensionB,\n      width,\n      height,\n      offsetX,\n      offsetY,\n      zoomFactor,\n    } = this.props;\n    const fixedWidth = dimensionA > 0 ? dimensionA : width > 0 ? width : 1;\n    const fixedHeight = dimensionB > 0 ? dimensionB : height > 0 ? height : 1;\n\n    return (\n      <rect\n        key={'boxShape'}\n        fill=\"rgba(255,0,0,0.75)\"\n        strokeWidth={1}\n        x={(offsetX + width / 2 - fixedWidth / 2) * zoomFactor}\n        y={(offsetY + height / 2 - fixedHeight / 2) * zoomFactor}\n        width={fixedWidth * zoomFactor}\n        height={fixedHeight * zoomFactor}\n      />\n    );\n  }\n\n  _renderCircle() {\n    const {\n      dimensionA,\n      width,\n      height,\n      offsetX,\n      offsetY,\n      zoomFactor,\n    } = this.props;\n\n    return (\n      <circle\n        key={'circleShape'}\n        fill=\"rgba(255,0,0,0.75)\"\n        strokeWidth={1}\n        cx={(offsetX + width / 2) * zoomFactor}\n        cy={(offsetY + height / 2) * zoomFactor}\n        r={\n          (dimensionA > 0\n            ? dimensionA\n            : width + height > 0\n            ? (width + height) / 4\n            : 1) * zoomFactor\n        }\n      />\n    );\n  }\n\n  _renderEdge() {\n    const {\n      dimensionA,\n      dimensionB,\n      width,\n      height,\n      offsetX,\n      offsetY,\n      zoomFactor,\n    } = this.props;\n    const halfLength =\n      (dimensionA > 0 ? dimensionA : width > 0 ? width : 1) / 2;\n    const cos = Math.cos((dimensionB * Math.PI) / 180);\n    const sin = Math.sin((dimensionB * Math.PI) / 180);\n\n    return (\n      <line\n        key={'edgeShape'}\n        stroke=\"rgba(255,0,0,0.75)\"\n        strokeWidth={2}\n        x1={(offsetX + width / 2 - halfLength * cos) * zoomFactor}\n        y1={(offsetY + height / 2 - halfLength * sin) * zoomFactor}\n        x2={(offsetX + width / 2 + halfLength * cos) * zoomFactor}\n        y2={(offsetY + height / 2 + halfLength * sin) * zoomFactor}\n      />\n    );\n  }\n\n  _renderPolygon() {\n    const {\n      vertices,\n      polygonOrigin,\n      width,\n      height,\n      offsetX,\n      offsetY,\n      zoomFactor,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <polygon\n          key={'polygonShape'}\n          fill=\"rgba(255,0,0,0.75)\"\n          strokeWidth={1}\n          filerule=\"evenodd\"\n          points={vertices\n            .map(\n              vertex =>\n                `${(vertex.x +\n                  offsetX +\n                  (polygonOrigin === 'Center' ? width / 2 : 0)) *\n                  zoomFactor},${(vertex.y +\n                  offsetY +\n                  (polygonOrigin === 'Center' ? height / 2 : 0)) *\n                  zoomFactor}`\n            )\n            .join(' ')}\n        />\n        {vertices.map((vertex, index) => (\n          <circle\n            onPointerDown={event => this._onVertexDown(vertex, index)}\n            key={`vertex-${index}`}\n            fill=\"rgba(150,0,0,0.75)\"\n            strokeWidth={1}\n            style={{\n              cursor: 'move',\n            }}\n            cx={\n              (vertex.x +\n                offsetX +\n                (polygonOrigin === 'Center' ? width / 2 : 0)) *\n              zoomFactor\n            }\n            cy={\n              (vertex.y +\n                offsetY +\n                (polygonOrigin === 'Center' ? height / 2 : 0)) *\n              zoomFactor\n            }\n            r={5}\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const { shape } = this.props;\n\n    return (\n      <svg\n        onPointerMove={this._onMouseMove}\n        onPointerUp={this._onMouseUp}\n        ref={svg => (this._svg = svg)}\n        width=\"100%\"\n        height=\"100%\"\n      >\n        {shape === 'Box' && this._renderBox()}\n        {shape === 'Circle' && this._renderCircle()}\n        {shape === 'Edge' && this._renderEdge()}\n        {shape === 'Polygon' && this._renderPolygon()}\n      </svg>\n    );\n  }\n}\n","// @flow\r\nimport * as React from 'react';\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableRowColumn,\r\n  TableBody,\r\n  TableHeader,\r\n  TableHeaderColumn,\r\n} from '../../../UI/Table';\r\nimport SemiControlledTextField from '../../../UI/SemiControlledTextField';\r\nimport Warning from '@material-ui/icons/Warning';\r\nimport IconButton from '../../../UI/IconButton';\r\nimport ThemeConsumer from '../../../UI/Theme/ThemeConsumer';\r\nimport AddCircle from '@material-ui/icons/AddCircle';\r\nimport Delete from '@material-ui/icons/Delete';\r\n\r\nexport type Vertex = {|\r\n  x: number,\r\n  y: number,\r\n|};\r\n\r\ntype Props = {|\r\n  vertices: Array<Vertex>,\r\n  onChangeVertexX: (newValue: number, index: number) => void,\r\n  onChangeVertexY: (newValue: number, index: number) => void,\r\n  onAdd: () => void,\r\n  onRemove: (index: number) => void,\r\n|};\r\n\r\nexport default class PolygonEditor extends React.Component<Props> {\r\n  _isPolygonConvex(vertices: Array<Vertex>) {\r\n    // Get edges\r\n    let edges = [];\r\n    let v1 = null;\r\n    let v2 = null;\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      v1 = vertices[i];\r\n      if (i + 1 >= vertices.length) v2 = vertices[0];\r\n      else v2 = vertices[i + 1];\r\n      edges.push({ x: v2.x - v1.x, y: v2.y - v1.y });\r\n    }\r\n\r\n    // Check convexity\r\n    if (edges.length < 3) return false;\r\n\r\n    const zProductIsPositive =\r\n      edges[0].x * edges[0 + 1].y - edges[0].y * edges[0 + 1].x > 0;\r\n\r\n    for (let i = 1; i < edges.length - 1; ++i) {\r\n      let zCrossProduct =\r\n        edges[i].x * edges[i + 1].y - edges[i].y * edges[i + 1].x;\r\n      let zCrossProductIsPositive = zCrossProduct > 0;\r\n      if (zCrossProductIsPositive !== zProductIsPositive) return false;\r\n    }\r\n\r\n    let lastZCrossProduct =\r\n      edges[edges.length - 1].x * edges[0].y -\r\n      edges[edges.length - 1].y * edges[0].x;\r\n    let lastZCrossProductIsPositive = lastZCrossProduct > 0;\r\n    if (lastZCrossProductIsPositive !== zProductIsPositive) return false;\r\n\r\n    // Check for repeated vertices (would crash Box2D during the game)\r\n    for (let i = 0; i < vertices.length - 1; ++i) {\r\n      for (let j = i + 1; j < vertices.length; ++j) {\r\n        if (vertices[i].x === vertices[j].x && vertices[i].y === vertices[j].y)\r\n          return false;\r\n      }\r\n    }\r\n\r\n    // Check if all vertices are aligned (would crash Box2D during the game)\r\n    let alignedX = true;\r\n    let alignedY = true;\r\n    for (let i = 0; i < vertices.length - 1; ++i) {\r\n      if (vertices[i].x !== vertices[i + 1].x) alignedX = false;\r\n      if (vertices[i].y !== vertices[i + 1].y) alignedY = false;\r\n    }\r\n    if (alignedX || alignedY) return false;\r\n\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      vertices,\r\n      onChangeVertexX,\r\n      onChangeVertexY,\r\n      onAdd,\r\n      onRemove,\r\n    } = this.props;\r\n\r\n    return (\r\n      <ThemeConsumer>\r\n        {muiTheme => (\r\n          <Table>\r\n            <TableHeader>\r\n              <TableRow>\r\n                <TableHeaderColumn />\r\n                <TableHeaderColumn>X</TableHeaderColumn>\r\n                <TableHeaderColumn>Y</TableHeaderColumn>\r\n                <TableRowColumn />\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {vertices.map((value, index) => {\r\n                return (\r\n                  <TableRow\r\n                    key={`vertexRow${index}`}\r\n                    style={{\r\n                      backgroundColor: muiTheme.list.itemsBackgroundColor,\r\n                    }}\r\n                  >\r\n                    <TableRowColumn>\r\n                      {!this._isPolygonConvex(vertices) && <Warning />}\r\n                    </TableRowColumn>\r\n                    <TableRowColumn>\r\n                      <SemiControlledTextField\r\n                        margin=\"none\"\r\n                        fullWidth\r\n                        value={value.x.toString(10)}\r\n                        onChange={newValue =>\r\n                          onChangeVertexX(parseFloat(newValue) || 0, index)\r\n                        }\r\n                        type=\"number\"\r\n                      />\r\n                    </TableRowColumn>\r\n                    <TableRowColumn>\r\n                      <SemiControlledTextField\r\n                        margin=\"none\"\r\n                        fullWidth\r\n                        value={value.y.toString(10)}\r\n                        onChange={newValue =>\r\n                          onChangeVertexY(parseFloat(newValue) || 0, index)\r\n                        }\r\n                        type=\"number\"\r\n                      />\r\n                    </TableRowColumn>\r\n                    <TableRowColumn>\r\n                      <IconButton size=\"small\" onClick={() => onRemove(index)}>\r\n                        <Delete />\r\n                      </IconButton>\r\n                    </TableRowColumn>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              <TableRow>\r\n                <TableRowColumn />\r\n                <TableRowColumn />\r\n                <TableRowColumn />\r\n                <TableRowColumn>\r\n                  <IconButton onClick={onAdd}>\r\n                    <AddCircle />\r\n                  </IconButton>\r\n                </TableRowColumn>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        )}\r\n      </ThemeConsumer>\r\n    );\r\n  }\r\n}\r\n","// @flow\r\nimport { t } from '@lingui/macro';\r\nimport { Trans } from '@lingui/macro';\r\n\r\nimport * as React from 'react';\r\nimport { Line, Column } from '../../../UI/Grid';\r\nimport Checkbox from '../../../UI/Checkbox';\r\nimport SelectField from '../../../UI/SelectField';\r\nimport SelectOption from '../../../UI/SelectOption';\r\nimport SemiControlledTextField from '../../../UI/SemiControlledTextField';\r\nimport ImagePreview from '../../../ResourcesList/ResourcePreview/ImagePreview';\r\nimport ResourceSelector from '../../../ResourcesList/ResourceSelector';\r\nimport ResourcesLoader from '../../../ResourcesLoader';\r\nimport ShapePreview from './ShapePreview.js';\r\nimport PolygonEditor from './PolygonEditor.js';\r\nimport { type BehaviorEditorProps } from '../BehaviorEditorProps.flow';\r\nimport Text from '../../../UI/Text';\r\nimport DismissableAlertMessage from '../../../UI/DismissableAlertMessage';\r\nimport { ResponsiveLineStackLayout } from '../../../UI/Layout';\r\nimport EmptyMessage from '../../../UI/EmptyMessage';\r\n\r\ntype Props = BehaviorEditorProps;\r\n\r\ntype State = {|\r\n  image: string,\r\n|};\r\n\r\nfunction NumericProperty(props: {|\r\n  properties: gdMapStringPropertyDescriptor,\r\n  propertyName: string,\r\n  step: number,\r\n  onUpdate: (newValue: string) => void,\r\n|}) {\r\n  const { properties, propertyName, step, onUpdate } = props;\r\n\r\n  return (\r\n    <SemiControlledTextField\r\n      fullWidth\r\n      value={properties.get(propertyName).getValue()}\r\n      key={propertyName}\r\n      floatingLabelText={properties.get(propertyName).getLabel()}\r\n      step={step}\r\n      onChange={onUpdate}\r\n      type=\"number\"\r\n    />\r\n  );\r\n}\r\n\r\nfunction BitProperty(props: {|\r\n  enabled: boolean,\r\n  propertyName: string,\r\n  pos: number,\r\n  spacing: boolean,\r\n  onUpdate: (enabled: boolean) => void,\r\n|}) {\r\n  const { enabled, propertyName, pos, spacing, onUpdate } = props;\r\n\r\n  return (\r\n    <div style={{ width: spacing ? '7.5%' : '5%' }}>\r\n      {\r\n        <Checkbox\r\n          checked={enabled}\r\n          onCheck={(e, checked) => onUpdate(checked)}\r\n        />\r\n      }\r\n      {spacing && (\r\n        <div\r\n          style={{ width: '33%' }}\r\n          key={propertyName + '-space' + pos.toString(10)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default class Physics2Editor extends React.Component<Props, State> {\r\n  resourcesLoader = ResourcesLoader;\r\n\r\n  state = {\r\n    image: '',\r\n  };\r\n\r\n  _isBitEnabled(bitsValue: number, pos: number) {\r\n    return !!(bitsValue & (1 << pos));\r\n  }\r\n\r\n  _enableBit(bitsValue: number, pos: number, enable: boolean) {\r\n    if (enable) bitsValue |= 1 << pos;\r\n    else bitsValue &= ~(1 << pos);\r\n    return bitsValue;\r\n  }\r\n\r\n  render() {\r\n    const { behavior, behaviorContent } = this.props;\r\n\r\n    const properties = behavior.getProperties(behaviorContent.getContent());\r\n    const bits = Array(16).fill(null);\r\n    const shape = properties.get('shape').getValue();\r\n    const layersValues = parseInt(properties.get('layers').getValue(), 10);\r\n    const masksValues = parseInt(properties.get('masks').getValue(), 10);\r\n\r\n    return (\r\n      <Column expand>\r\n        <Line>\r\n          <SelectField\r\n            key={'bodyType'}\r\n            fullWidth\r\n            floatingLabelText={properties.get('bodyType').getLabel()}\r\n            value={properties.get('bodyType').getValue()}\r\n            onChange={(e, i, newValue: string) => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'bodyType',\r\n                newValue\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          >\r\n            {[\r\n              <SelectOption\r\n                key={'dynamic'}\r\n                value={'Dynamic'}\r\n                primaryText={t`Dynamic`}\r\n              />,\r\n              <SelectOption\r\n                key={'static'}\r\n                value={'Static'}\r\n                primaryText={t`Static`}\r\n              />,\r\n              <SelectOption\r\n                key={'kinematic'}\r\n                value={'Kinematic'}\r\n                primaryText={t`Kinematic`}\r\n              />,\r\n            ]}\r\n          </SelectField>\r\n        </Line>\r\n        <ResponsiveLineStackLayout>\r\n          <Checkbox\r\n            label={properties.get('bullet').getLabel()}\r\n            checked={properties.get('bullet').getValue() === 'true'}\r\n            onCheck={(e, checked) => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'bullet',\r\n                checked ? '1' : '0'\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n          <Checkbox\r\n            label={properties.get('fixedRotation').getLabel()}\r\n            checked={properties.get('fixedRotation').getValue() === 'true'}\r\n            onCheck={(e, checked) => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'fixedRotation',\r\n                checked ? '1' : '0'\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n          <Checkbox\r\n            label={properties.get('canSleep').getLabel()}\r\n            checked={properties.get('canSleep').getValue() === 'true'}\r\n            onCheck={(e, checked) => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'canSleep',\r\n                checked ? '1' : '0'\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n        </ResponsiveLineStackLayout>\r\n        <Line>\r\n          <DismissableAlertMessage\r\n            identifier=\"physics2-shape-collisions\"\r\n            kind=\"info\"\r\n          >\r\n            <Trans>\r\n              The shape used in the Physics behavior is independent from the\r\n              collision mask of the object. Be sure to use the \"Collision\"\r\n              condition provided by the Physics behavior in the events. The\r\n              usual \"Collision\" condition won't take into account the shape that\r\n              you've set up here.\r\n            </Trans>\r\n          </DismissableAlertMessage>\r\n        </Line>\r\n        <Line>\r\n          <SelectField\r\n            fullWidth\r\n            floatingLabelText={properties.get('shape').getLabel()}\r\n            value={properties.get('shape').getValue()}\r\n            onChange={(e, i, newValue: string) => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'shape',\r\n                newValue\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          >\r\n            <SelectOption key={'box'} value={'Box'} primaryText={t`Box`} />\r\n            <SelectOption\r\n              key={'circle'}\r\n              value={'Circle'}\r\n              primaryText={t`Circle`}\r\n            />\r\n            <SelectOption key={'edge'} value={'Edge'} primaryText={t`Edge`} />\r\n            <SelectOption\r\n              key={'polygon'}\r\n              value={'Polygon'}\r\n              primaryText={t`Polygon`}\r\n            />\r\n          </SelectField>\r\n        </Line>\r\n        <ResponsiveLineStackLayout>\r\n          {shape !== 'Polygon' && (\r\n            <SemiControlledTextField\r\n              fullWidth\r\n              value={properties\r\n                .get(shape === 'Polygon' ? 'PolygonOriginX' : 'shapeDimensionA')\r\n                .getValue()}\r\n              key={'shapeDimensionA'}\r\n              floatingLabelText={\r\n                shape === 'Circle'\r\n                  ? 'Radius'\r\n                  : shape === 'Edge'\r\n                  ? 'Length'\r\n                  : 'Width'\r\n              }\r\n              min={0}\r\n              onChange={newValue => {\r\n                behavior.updateProperty(\r\n                  behaviorContent.getContent(),\r\n                  shape === 'Polygon' ? 'PolygonOriginX' : 'shapeDimensionA',\r\n                  newValue\r\n                );\r\n                this.forceUpdate();\r\n              }}\r\n              type=\"number\"\r\n            />\r\n          )}\r\n          {shape !== 'Polygon' && shape !== 'Circle' && (\r\n            <SemiControlledTextField\r\n              fullWidth\r\n              value={properties\r\n                .get(shape === 'Polygon' ? 'PolygonOriginY' : 'shapeDimensionB')\r\n                .getValue()}\r\n              key={'shapeDimensionB'}\r\n              floatingLabelText={shape === 'Edge' ? 'Angle' : 'Height'}\r\n              min={shape === 'Edge' ? undefined : 0}\r\n              onChange={newValue => {\r\n                behavior.updateProperty(\r\n                  behaviorContent.getContent(),\r\n                  shape === 'Polygon' ? 'PolygonOriginY' : 'shapeDimensionB',\r\n                  newValue\r\n                );\r\n                this.forceUpdate();\r\n              }}\r\n              type=\"number\"\r\n            />\r\n          )}\r\n          {shape === 'Polygon' && (\r\n            <SelectField\r\n              fullWidth\r\n              floatingLabelText={properties.get('polygonOrigin').getLabel()}\r\n              value={properties.get('polygonOrigin').getValue()}\r\n              onChange={(e, i, newValue: string) => {\r\n                behavior.updateProperty(\r\n                  behaviorContent.getContent(),\r\n                  'polygonOrigin',\r\n                  newValue\r\n                );\r\n                this.forceUpdate();\r\n              }}\r\n            >\r\n              {[\r\n                <SelectOption\r\n                  key={'center'}\r\n                  value={'Center'}\r\n                  primaryText={t`Center`}\r\n                />,\r\n                <SelectOption\r\n                  key={'origin'}\r\n                  value={'Origin'}\r\n                  primaryText={t`Origin`}\r\n                />,\r\n                <SelectOption\r\n                  key={'topLeft'}\r\n                  value={'TopLeft'}\r\n                  primaryText={t`Top-Left`}\r\n                />,\r\n              ]}\r\n            </SelectField>\r\n          )}\r\n          <NumericProperty\r\n            properties={properties}\r\n            propertyName={'shapeOffsetX'}\r\n            step={1}\r\n            onUpdate={newValue => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'shapeOffsetX',\r\n                newValue\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n          <NumericProperty\r\n            properties={properties}\r\n            propertyName={'shapeOffsetY'}\r\n            step={1}\r\n            onUpdate={newValue => {\r\n              this.props.behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'shapeOffsetY',\r\n                newValue\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n        </ResponsiveLineStackLayout>\r\n        <Line>\r\n          <ResourceSelector\r\n            floatingLabelText={\r\n              <Trans>\r\n                A temporary image to help you visualize the shape/polygon\r\n              </Trans>\r\n            }\r\n            project={this.props.project}\r\n            resourceSources={this.props.resourceSources}\r\n            onChooseResource={this.props.onChooseResource}\r\n            resourceExternalEditors={this.props.resourceExternalEditors}\r\n            resourcesLoader={this.resourcesLoader}\r\n            resourceKind={'image'}\r\n            initialResourceName={''}\r\n            fullWidth\r\n            onChange={resourceName => {\r\n              this.setState({ image: resourceName });\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n        </Line>\r\n        {!this.state.image && (\r\n          <Line>\r\n            <EmptyMessage>\r\n              <Trans>\r\n                To preview the shape that the Physics engine will use for this\r\n                object, choose first a temporary image to use for the preview.\r\n              </Trans>\r\n            </EmptyMessage>\r\n          </Line>\r\n        )}\r\n        {this.state.image && (\r\n          <Line>\r\n            <div\r\n              style={{\r\n                width:\r\n                  '100%' /* This div prevents ImagePreview to overflow outside the parent */,\r\n              }}\r\n            >\r\n              <ImagePreview\r\n                resourceName={this.state.image}\r\n                project={this.props.project}\r\n                resourcesLoader={this.resourcesLoader}\r\n                renderOverlay={({\r\n                  imageWidth,\r\n                  imageHeight,\r\n                  imageZoomFactor,\r\n                }) => (\r\n                  <ShapePreview\r\n                    shape={properties.get('shape').getValue()}\r\n                    dimensionA={parseFloat(\r\n                      properties.get('shapeDimensionA').getValue()\r\n                    )}\r\n                    dimensionB={parseFloat(\r\n                      properties.get('shapeDimensionB').getValue()\r\n                    )}\r\n                    offsetX={parseFloat(\r\n                      properties.get('shapeOffsetX').getValue()\r\n                    )}\r\n                    offsetY={parseFloat(\r\n                      properties.get('shapeOffsetY').getValue()\r\n                    )}\r\n                    polygonOrigin={properties.get('polygonOrigin').getValue()}\r\n                    vertices={JSON.parse(properties.get('vertices').getValue())}\r\n                    width={imageWidth}\r\n                    height={imageHeight}\r\n                    zoomFactor={imageZoomFactor}\r\n                    onMoveVertex={(index, newX, newY) => {\r\n                      let vertices = JSON.parse(\r\n                        properties.get('vertices').getValue()\r\n                      );\r\n                      vertices[index].x = newX;\r\n                      vertices[index].y = newY;\r\n                      behavior.updateProperty(\r\n                        behaviorContent.getContent(),\r\n                        'vertices',\r\n                        JSON.stringify(vertices)\r\n                      );\r\n                      this.forceUpdate();\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n          </Line>\r\n        )}\r\n        {shape === 'Polygon' && (\r\n          <Line>\r\n            <PolygonEditor\r\n              vertices={JSON.parse(properties.get('vertices').getValue())}\r\n              onChangeVertexX={(newValue, index) => {\r\n                let vertices = JSON.parse(\r\n                  properties.get('vertices').getValue()\r\n                );\r\n                vertices[index].x = newValue;\r\n                behavior.updateProperty(\r\n                  behaviorContent.getContent(),\r\n                  'vertices',\r\n                  JSON.stringify(vertices)\r\n                );\r\n                this.forceUpdate();\r\n              }}\r\n              onChangeVertexY={(newValue, index) => {\r\n                let vertices = JSON.parse(\r\n                  properties.get('vertices').getValue()\r\n                );\r\n                vertices[index].y = newValue;\r\n                behavior.updateProperty(\r\n                  behaviorContent.getContent(),\r\n                  'vertices',\r\n                  JSON.stringify(vertices)\r\n                );\r\n                this.forceUpdate();\r\n              }}\r\n              onAdd={() => {\r\n                let vertices = JSON.parse(\r\n                  properties.get('vertices').getValue()\r\n                );\r\n                if (vertices.length >= 8) return;\r\n                vertices.push({ x: 0, y: 0 });\r\n                behavior.updateProperty(\r\n                  behaviorContent.getContent(),\r\n                  'vertices',\r\n                  JSON.stringify(vertices)\r\n                );\r\n                this.forceUpdate();\r\n              }}\r\n              onRemove={index => {\r\n                let vertices = JSON.parse(\r\n                  properties.get('vertices').getValue()\r\n                );\r\n                vertices.splice(index, 1);\r\n                behavior.updateProperty(\r\n                  behaviorContent.getContent(),\r\n                  'vertices',\r\n                  JSON.stringify(vertices)\r\n                );\r\n                this.forceUpdate();\r\n              }}\r\n            />\r\n          </Line>\r\n        )}\r\n        <ResponsiveLineStackLayout>\r\n          <NumericProperty\r\n            properties={properties}\r\n            propertyName={'density'}\r\n            step={0.1}\r\n            onUpdate={newValue => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'density',\r\n                parseFloat(newValue) > 0 ? newValue : '0'\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n          <NumericProperty\r\n            properties={properties}\r\n            propertyName={'gravityScale'}\r\n            step={0.1}\r\n            onUpdate={newValue => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'gravityScale',\r\n                newValue\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n        </ResponsiveLineStackLayout>\r\n        <ResponsiveLineStackLayout>\r\n          <NumericProperty\r\n            properties={properties}\r\n            propertyName={'friction'}\r\n            step={0.1}\r\n            onUpdate={newValue => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'friction',\r\n                parseFloat(newValue) > 0 ? newValue : '0'\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n          <NumericProperty\r\n            properties={properties}\r\n            propertyName={'restitution'}\r\n            step={0.1}\r\n            onUpdate={newValue => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'restitution',\r\n                parseFloat(newValue) > 0 ? newValue : '0'\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n        </ResponsiveLineStackLayout>\r\n        <ResponsiveLineStackLayout>\r\n          <NumericProperty\r\n            properties={properties}\r\n            propertyName={'linearDamping'}\r\n            step={0.05}\r\n            onUpdate={newValue => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'linearDamping',\r\n                newValue\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n          <NumericProperty\r\n            properties={properties}\r\n            propertyName={'angularDamping'}\r\n            step={0.05}\r\n            onUpdate={newValue => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'angularDamping',\r\n                newValue\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n        </ResponsiveLineStackLayout>\r\n        <Line>\r\n          <Text>{properties.get('layers').getLabel()}</Text>\r\n          {bits.map((value, index) => {\r\n            return (\r\n              <BitProperty\r\n                enabled={this._isBitEnabled(layersValues, index)}\r\n                propertyName={'layers'}\r\n                pos={index}\r\n                spacing={index === 7}\r\n                onUpdate={enabled => {\r\n                  const newValue = this._enableBit(\r\n                    layersValues,\r\n                    index,\r\n                    enabled\r\n                  );\r\n                  this.props.behavior.updateProperty(\r\n                    behaviorContent.getContent(),\r\n                    'layers',\r\n                    newValue.toString(10)\r\n                  );\r\n                  this.forceUpdate();\r\n                }}\r\n                key={`layer${index}`}\r\n              />\r\n            );\r\n          })}\r\n        </Line>\r\n        <Line>\r\n          <Text>{properties.get('masks').getLabel()}</Text>\r\n          {bits.map((value, index) => {\r\n            return (\r\n              <BitProperty\r\n                enabled={this._isBitEnabled(masksValues, index)}\r\n                propertyName={'masks'}\r\n                pos={index}\r\n                spacing={index === 7}\r\n                onUpdate={enabled => {\r\n                  const newValue = this._enableBit(masksValues, index, enabled);\r\n                  this.props.behavior.updateProperty(\r\n                    behaviorContent.getContent(),\r\n                    'masks',\r\n                    newValue.toString(10)\r\n                  );\r\n                  this.forceUpdate();\r\n                }}\r\n                key={`mask${index}`}\r\n              />\r\n            );\r\n          })}\r\n        </Line>\r\n      </Column>\r\n    );\r\n  }\r\n}\r\n","// @flow\nimport BehaviorPropertiesEditor from './Editors/BehaviorPropertiesEditor';\nimport Physics2Editor from './Editors/Physics2Editor';\n\n/**\n * A service returning editor components for each behavior type.\n */\nexport default {\n  getEditor(behaviorType: string) {\n    if (!this.components[behaviorType]) {\n      return BehaviorPropertiesEditor; // Default properties editor\n    }\n    return this.components[behaviorType].component; // Custom  behavior editor\n  },\n  components: {\n    'Physics2::Physics2Behavior': {\n      component: Physics2Editor,\n    },\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { getShortcutMetadataFromEvent, getShortcutDisplayName } from './index';\n\nconst styles = {\n  shortcutBox: {\n    padding: 15,\n    textAlign: 'center',\n  },\n};\n\ntype Props = {|\n  commandText: ?string,\n  onSet: (shortcut: string) => void,\n  onClose: () => void,\n|};\n\nconst DetectShortcutDialog = (props: Props) => {\n  const [shortcutString, setShortcutString] = React.useState('');\n  const [isValid, setIsValid] = React.useState(false);\n\n  React.useEffect(() => {\n    const handler = (e: KeyboardEvent) => {\n      e.preventDefault();\n      const metadata = getShortcutMetadataFromEvent(e);\n      if (e.type === 'keyup') return;\n      setIsValid(metadata.isValid);\n      setShortcutString(metadata.shortcutString);\n    };\n    document.addEventListener('keyup', handler);\n    document.addEventListener('keydown', handler);\n    return () => {\n      document.removeEventListener('keydown', handler);\n      document.removeEventListener('keyup', handler);\n    };\n  }, []);\n\n  return (\n    <Dialog\n      open\n      title={<Trans>Set shortcut</Trans>}\n      onRequestClose={props.onClose}\n      cannotBeDismissed={false}\n      maxWidth=\"xs\"\n      actions={[\n        <FlatButton\n          key=\"Cancel\"\n          label={<Trans>Cancel</Trans>}\n          onClick={props.onClose}\n        />,\n        <FlatButton\n          label={<Trans>Set shortcut</Trans>}\n          primary\n          key=\"Set\"\n          onClick={() => {\n            shortcutString && props.onSet(shortcutString);\n            props.onClose();\n          }}\n          disabled={!isValid}\n        />,\n      ]}\n      secondaryActions={[\n        <FlatButton\n          key=\"Remove\"\n          label={<Trans>Remove shortcut</Trans>}\n          onClick={() => {\n            props.onSet('');\n            props.onClose();\n          }}\n        />,\n      ]}\n    >\n      <Typography>{props.commandText}</Typography>\n      <Paper variant=\"outlined\" style={styles.shortcutBox}>\n        <Typography>\n          {shortcutString ? (\n            getShortcutDisplayName(shortcutString)\n          ) : (\n            <Trans>Press a shortcut combination...</Trans>\n          )}\n        </Typography>\n      </Paper>\n    </Dialog>\n  );\n};\n\nexport default DetectShortcutDialog;\n","// @flow\nimport * as React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport { type I18n } from '@lingui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Chip from '@material-ui/core/Chip';\nimport IconButton from '../UI/IconButton';\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport commandsList, { type CommandName } from '../CommandPalette/CommandsList';\n\nconst styles = {\n  shortcutChip: {\n    borderRadius: 3,\n  },\n};\n\ntype Props = {|\n  i18n: I18n,\n  commandName: CommandName,\n  isDefault: boolean,\n  shortcutString: string,\n  isClashing: boolean,\n  onEditShortcut: () => void,\n  onResetShortcut: () => void,\n|};\n\nconst ShortcutsListRow = (props: Props) => {\n  return (\n    <ListItem>\n      <ListItemText\n        primary={props.i18n._(commandsList[props.commandName].displayText)}\n      />\n      <ListItemSecondaryAction>\n        {props.isClashing && (\n          <IconButton tooltip={t`This shortcut clashes with another action.`}>\n            <WarningIcon />\n          </IconButton>\n        )}\n        <Chip\n          style={styles.shortcutChip}\n          label={props.shortcutString || <Trans>No shortcut</Trans>}\n          onClick={props.onEditShortcut}\n          title={props.i18n._(t`Edit shortcut`)}\n          color={props.shortcutString ? 'secondary' : 'default'}\n        />\n        {!props.isDefault && (\n          <IconButton\n            onClick={props.onResetShortcut}\n            tooltip={t`Reset to default`}\n          >\n            <RotateLeftIcon />\n          </IconButton>\n        )}\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default ShortcutsListRow;\n","// @flow\nimport * as React from 'react';\nimport { t, Trans } from '@lingui/macro';\nimport { type I18n } from '@lingui/core';\nimport List from '@material-ui/core/List';\nimport Text from '../UI/Text';\nimport DetectShortcutDialog from './DetectShortcutDialog';\nimport { Line } from '../UI/Grid';\nimport RaisedButton from '../UI/RaisedButton';\nimport DismissableAlertMessage from '../UI/DismissableAlertMessage';\nimport { type ShortcutMap } from './DefaultShortcuts';\nimport { getShortcutDisplayName } from './index';\nimport Window from '../Utils/Window';\nimport defaultShortcuts from '../KeyboardShortcuts/DefaultShortcuts';\nimport ShortcutsListRow from './ShortcutsListRow';\nimport commandsList, {\n  type CommandName,\n  commandAreas,\n} from '../CommandPalette/CommandsList';\n\n/**\n * Sorts all commands into an object keyed by area name, and also creates a\n * reverse mapping from shortcut string to list of commands with that shortcut.\n */\nconst sortCommandsIntoAreasAndGetReverseMap = (\n  userShortcutMap: ShortcutMap\n) => {\n  const areaWiseCommands = {};\n  const shortcutStringToCommands: { [string]: Array<CommandName> } = {};\n  Object.keys(commandsList)\n    .filter(name => !commandsList[name].noShortcut)\n    .forEach(name => {\n      // Sort commands by area\n      const areaName = commandsList[name].area;\n      if (!areaWiseCommands[areaName]) areaWiseCommands[areaName] = [];\n      areaWiseCommands[areaName].push(name);\n\n      // Add to shortcut-command mapping\n      const userShortcut = userShortcutMap[name];\n      const defaultShortcut = defaultShortcuts[name] || '';\n      const shortcutString = userShortcut || defaultShortcut;\n      if (shortcutString === '') return;\n      shortcutStringToCommands[shortcutString] = (\n        shortcutStringToCommands[shortcutString] || []\n      ).concat(name);\n    });\n\n  return [areaWiseCommands, shortcutStringToCommands];\n};\n\ntype Props = {|\n  i18n: I18n,\n  userShortcutMap: ShortcutMap,\n  onEdit: (commandName: CommandName, shortcut: string) => void,\n  onReset: () => void,\n|};\n\nconst ShortcutsList = (props: Props) => {\n  const [\n    editedShortcut,\n    setEditedShortcut,\n  ] = React.useState<null | CommandName>(null);\n\n  const resetAllShortcutsToDefault = () => {\n    const answer = Window.showConfirmDialog(\n      props.i18n._(\n        t`Are you sure you want to reset all shortcuts to their default values?`\n      ),\n      'question'\n    );\n    if (answer) props.onReset();\n  };\n\n  const resetShortcut = (commandName: CommandName) => {\n    props.onEdit(commandName, defaultShortcuts[commandName]);\n  };\n\n  const [\n    areaWiseCommands,\n    shortcutStringToCommands,\n  ] = sortCommandsIntoAreasAndGetReverseMap(props.userShortcutMap);\n\n  const commandPaletteShortcut = getShortcutDisplayName(\n    props.userShortcutMap['OPEN_COMMAND_PALETTE'] ||\n      defaultShortcuts['OPEN_COMMAND_PALETTE']\n  );\n\n  return (\n    <>\n      <Line>\n        <DismissableAlertMessage\n          kind=\"info\"\n          identifier=\"command-palette-shortcut\"\n        >\n          <Trans>You can open the command palette by pressing</Trans>{' '}\n          {commandPaletteShortcut}\n        </DismissableAlertMessage>\n      </Line>\n      <Line>\n        <RaisedButton\n          label={<Trans>Reset all shortcuts to default</Trans>}\n          onClick={resetAllShortcutsToDefault}\n        />\n      </Line>\n      <List>\n        {Object.keys(areaWiseCommands).map(areaName => (\n          <React.Fragment key={areaName}>\n            <Text size=\"title\">{props.i18n._(commandAreas[areaName])}</Text>\n            {areaWiseCommands[areaName].map(commandName => {\n              // Get default and user-set shortcuts\n              const userShortcut = props.userShortcutMap[commandName];\n              const defaultShortcut = defaultShortcuts[commandName] || '';\n              const shortcutString = userShortcut || defaultShortcut;\n              const shortcutDisplayName = getShortcutDisplayName(\n                shortcutString\n              );\n              // Check if shortcut clashes with another command\n              const clashingCommands = shortcutStringToCommands[shortcutString];\n              const hasClash = clashingCommands && clashingCommands.length > 1;\n\n              return (\n                <ShortcutsListRow\n                  i18n={props.i18n}\n                  key={commandName}\n                  shortcutString={shortcutDisplayName}\n                  commandName={commandName}\n                  isDefault={!userShortcut}\n                  isClashing={hasClash}\n                  onEditShortcut={() => setEditedShortcut(commandName)}\n                  onResetShortcut={() => resetShortcut(commandName)}\n                />\n              );\n            })}\n          </React.Fragment>\n        ))}\n      </List>\n      {editedShortcut && (\n        <DetectShortcutDialog\n          commandText={props.i18n._(commandsList[editedShortcut].displayText)}\n          onClose={() => setEditedShortcut(null)}\n          onSet={shortcut => {\n            props.onEdit(editedShortcut, shortcut);\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ShortcutsList;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type I18n } from '@lingui/core';\n\nimport React from 'react';\nimport SelectField from '../../UI/SelectField';\nimport FlatButton from '../../UI/FlatButton';\nimport SelectOption from '../../UI/SelectOption';\nimport Toggle from '../../UI/Toggle';\nimport Dialog from '../../UI/Dialog';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport { themes } from '../../UI/Theme';\nimport { getAllThemes } from '../../CodeEditor/Theme';\nimport Window from '../../Utils/Window';\nimport PreferencesContext, { allAlertMessages } from './PreferencesContext';\nimport Text from '../../UI/Text';\nimport { ResponsiveLineStackLayout } from '../../UI/Layout';\nimport { Tabs, Tab } from '../../UI/Tabs';\nimport { getAllTutorialHints } from '../../Hints';\nimport RaisedButton from '../../UI/RaisedButton';\nimport ShortcutsList from '../../KeyboardShortcuts/ShortcutsList';\n\ntype Props = {|\n  i18n: I18n,\n  onClose: Function,\n|};\n\nconst PreferencesDialog = ({ i18n, onClose }: Props) => {\n  const [currentTab, setCurrentTab] = React.useState('preferences');\n  const {\n    values,\n    setThemeName,\n    setCodeEditorThemeName,\n    setAutoDownloadUpdates,\n    showAlertMessage,\n    showTutorialHint,\n    setAutoDisplayChangelog,\n    setEventsSheetShowObjectThumbnails,\n    setAutosaveOnPreview,\n    setUseNewInstructionEditorDialog,\n    setUseGDJSDevelopmentWatcher,\n    setEventsSheetUseAssignmentOperators,\n    getDefaultEditorMosaicNode,\n    setDefaultEditorMosaicNode,\n    setAutoOpenMostRecentProject,\n    resetShortcutsToDefault,\n    setShortcutForCommand,\n    setIsMenuBarHiddenInPreview,\n  } = React.useContext(PreferencesContext);\n\n  return (\n    <Dialog\n      actions={[\n        <FlatButton\n          key=\"close\"\n          label={<Trans>Close</Trans>}\n          primary={false}\n          onClick={onClose}\n        />,\n      ]}\n      onRequestClose={onClose}\n      cannotBeDismissed={true}\n      open\n      title={<Trans>GDevelop Preferences</Trans>}\n      maxWidth=\"sm\"\n      noMargin\n    >\n      <Tabs value={currentTab} onChange={setCurrentTab}>\n        <Tab label={<Trans>Preferences</Trans>} value=\"preferences\" />\n        <Tab label={<Trans>Hints &amp; explanations</Trans>} value=\"hints\" />\n        <Tab label={<Trans>Keyboard Shortcuts</Trans>} value=\"shortcuts\" />\n      </Tabs>\n      {currentTab === 'preferences' && (\n        <Column>\n          <Text size=\"title\">\n            <Trans>Appearance</Trans>\n          </Text>\n          <ResponsiveLineStackLayout noMargin>\n            <SelectField\n              floatingLabelText={<Trans>UI Theme</Trans>}\n              value={values.themeName}\n              onChange={(e, i, value: string) => setThemeName(value)}\n              fullWidth\n            >\n              {Object.keys(themes).map(themeName => (\n                <SelectOption\n                  value={themeName}\n                  primaryText={themeName}\n                  key={themeName}\n                />\n              ))}\n            </SelectField>\n            <SelectField\n              floatingLabelText={<Trans>Code editor Theme</Trans>}\n              value={values.codeEditorThemeName}\n              onChange={(e, i, value: string) => setCodeEditorThemeName(value)}\n              fullWidth\n            >\n              {getAllThemes().map(codeEditorTheme => (\n                <SelectOption\n                  value={codeEditorTheme.themeName}\n                  primaryText={codeEditorTheme.name}\n                  key={codeEditorTheme.themeName}\n                />\n              ))}\n            </SelectField>\n          </ResponsiveLineStackLayout>\n          <Line noMargin>\n            <Text>\n              <Trans>You can contribute and create your own themes: </Trans>\n            </Text>\n            <FlatButton\n              label={<Trans>Learn more</Trans>}\n              onClick={() => {\n                Window.openExternalURL(\n                  'https://github.com/4ian/GDevelop/tree/master/newIDE#theming'\n                );\n              }}\n            />\n          </Line>\n          <Text size=\"title\">\n            <Trans>Layouts</Trans>\n          </Text>\n          <Line>\n            <Column>\n              <RaisedButton\n                label={<Trans>Reset Scene Editor layout</Trans>}\n                onClick={() => setDefaultEditorMosaicNode('scene-editor', null)}\n                disabled={!getDefaultEditorMosaicNode('scene-editor')}\n              />\n              <Spacer />\n              <RaisedButton\n                label={<Trans>Reset Scene Editor (small window) layout</Trans>}\n                onClick={() =>\n                  setDefaultEditorMosaicNode('scene-editor-small', null)\n                }\n                disabled={!getDefaultEditorMosaicNode('scene-editor-small')}\n              />\n              <Spacer />\n              <RaisedButton\n                label={<Trans>Reset Debugger layout</Trans>}\n                onClick={() => setDefaultEditorMosaicNode('debugger', null)}\n                disabled={!getDefaultEditorMosaicNode('debugger')}\n              />\n              <Spacer />\n              <RaisedButton\n                label={<Trans>Reset Resource Editor layout</Trans>}\n                onClick={() =>\n                  setDefaultEditorMosaicNode('resources-editor', null)\n                }\n                disabled={!getDefaultEditorMosaicNode('resources-editor')}\n              />\n              <Spacer />\n              <RaisedButton\n                label={<Trans>Reset Extension Editor layout</Trans>}\n                onClick={() =>\n                  setDefaultEditorMosaicNode(\n                    'events-functions-extension-editor',\n                    null\n                  )\n                }\n                disabled={\n                  !getDefaultEditorMosaicNode(\n                    'events-functions-extension-editor'\n                  )\n                }\n              />\n            </Column>\n          </Line>\n          <Text size=\"title\">\n            <Trans>Updates</Trans>\n          </Text>\n          <Line>\n            <Toggle\n              onToggle={(e, check) => setAutoDownloadUpdates(check)}\n              toggled={values.autoDownloadUpdates}\n              labelPosition=\"right\"\n              label={\n                <Trans>Auto download and install updates (recommended)</Trans>\n              }\n            />\n          </Line>\n          <Line>\n            <Toggle\n              onToggle={(e, check) => setAutoDisplayChangelog(check)}\n              toggled={values.autoDisplayChangelog}\n              labelPosition=\"right\"\n              label={\n                <Trans>\n                  Display What's New when a new version is launched\n                  (recommended)\n                </Trans>\n              }\n            />\n          </Line>\n          <Text size=\"title\">\n            <Trans>Events Sheet</Trans>\n          </Text>\n          <Line>\n            <Toggle\n              onToggle={(e, check) => setEventsSheetShowObjectThumbnails(check)}\n              toggled={values.eventsSheetShowObjectThumbnails}\n              labelPosition=\"right\"\n              label={<Trans>Display object thumbnails in Events Sheets</Trans>}\n            />\n          </Line>\n          <Line>\n            <Toggle\n              onToggle={(e, check) =>\n                setEventsSheetUseAssignmentOperators(check)\n              }\n              toggled={values.eventsSheetUseAssignmentOperators}\n              labelPosition=\"right\"\n              label={\n                <Trans>Display assignment operators in Events Sheets</Trans>\n              }\n            />\n          </Line>\n          <Line>\n            <Toggle\n              onToggle={(e, check) => setUseNewInstructionEditorDialog(check)}\n              toggled={values.useNewInstructionEditorDialog}\n              labelPosition=\"right\"\n              label={<Trans>Use the new action/condition editor</Trans>}\n            />\n          </Line>\n          <Text size=\"title\">\n            <Trans>Advanced</Trans>\n          </Text>\n          <Line>\n            <Toggle\n              onToggle={(e, check) => setAutosaveOnPreview(check)}\n              toggled={values.autosaveOnPreview}\n              labelPosition=\"right\"\n              label={<Trans>Auto-save project on Preview</Trans>}\n            />\n          </Line>\n          <Line>\n            <Toggle\n              onToggle={(e, check) => setAutoOpenMostRecentProject(check)}\n              toggled={values.autoOpenMostRecentProject}\n              labelPosition=\"right\"\n              label={\n                <Trans>\n                  Automatically re-open the project edited during last session\n                </Trans>\n              }\n            />\n          </Line>\n          <Line>\n            <Toggle\n              onToggle={(e, check) => setIsMenuBarHiddenInPreview(check)}\n              toggled={values.isMenuBarHiddenInPreview}\n              labelPosition=\"right\"\n              label={<Trans>Hide the menu bar in the preview window</Trans>}\n            />\n          </Line>\n          {Window.isDev() && (\n            <Line>\n              <Toggle\n                onToggle={(e, check) => setUseGDJSDevelopmentWatcher(check)}\n                toggled={values.useGDJSDevelopmentWatcher}\n                labelPosition=\"right\"\n                label={\n                  <Trans>\n                    Watch changes in game engine (GDJS) sources and auto import\n                    them (dev only)\n                  </Trans>\n                }\n              />\n            </Line>\n          )}\n        </Column>\n      )}\n      {currentTab === 'hints' && (\n        <Column>\n          <Line>\n            <Column noMargin>\n              <Text>\n                <Trans>Warn/show explanation about:</Trans>\n              </Text>\n              {allAlertMessages.map(({ key, label }) => (\n                <Line key={key}>\n                  <Toggle\n                    onToggle={(e, check) => showAlertMessage(key, check)}\n                    toggled={!values.hiddenAlertMessages[key]}\n                    labelPosition=\"right\"\n                    label={label}\n                  />\n                </Line>\n              ))}\n              <Text>\n                <Trans>Show link to tutorials:</Trans>\n              </Text>\n              {getAllTutorialHints().map(({ identifier, name }) => (\n                <Line key={identifier}>\n                  <Toggle\n                    onToggle={(e, check) => showTutorialHint(identifier, check)}\n                    toggled={!values.hiddenTutorialHints[identifier]}\n                    labelPosition=\"right\"\n                    label={name}\n                  />\n                </Line>\n              ))}\n            </Column>\n          </Line>\n        </Column>\n      )}\n      {currentTab === 'shortcuts' && (\n        <Column>\n          <ShortcutsList\n            i18n={i18n}\n            userShortcutMap={values.userShortcutMap}\n            onEdit={setShortcutForCommand}\n            onReset={resetShortcutsToDefault}\n          />\n        </Column>\n      )}\n    </Dialog>\n  );\n};\n\nexport default PreferencesDialog;\n","// @flow\nimport * as React from 'react';\nimport { enumerateObjects } from './EnumerateObjects';\nimport { useCommandWithOptions } from '../CommandPalette/CommandHooks';\nimport { type CommandOption } from '../CommandPalette/CommandManager';\nimport ObjectsRenderingService from '../ObjectsRendering/ObjectsRenderingService';\n\nconst generateLayoutObjectsOptions = (\n  project: gdProject,\n  layout: gdLayout,\n  onChoose: (object: gdObject) => void\n): Array<CommandOption> => {\n  return enumerateObjects(project, layout).containerObjectsList.map(item => ({\n    text: item.object.getName(),\n    handler: () => onChoose(item.object),\n    iconSrc: ObjectsRenderingService.getThumbnail.bind(ObjectsRenderingService)(\n      project,\n      item.object\n    ),\n  }));\n};\n\ntype Props = {|\n  project: gdProject,\n  layout: gdLayout,\n  onEditObject: (object: gdObject) => void,\n  onEditObjectVariables: (object: gdObject) => void,\n|};\n\nconst useObjectsListCommands = (props: Props) => {\n  const { project, layout, onEditObject, onEditObjectVariables } = props;\n  useCommandWithOptions('EDIT_OBJECT', true, {\n    generateOptions: React.useCallback(\n      () => generateLayoutObjectsOptions(project, layout, onEditObject),\n      [project, layout, onEditObject]\n    ),\n  });\n\n  useCommandWithOptions('EDIT_OBJECT_VARIABLES', true, {\n    generateOptions: React.useCallback(\n      () =>\n        generateLayoutObjectsOptions(project, layout, onEditObjectVariables),\n      [project, layout, onEditObjectVariables]\n    ),\n  });\n};\n\nexport default useObjectsListCommands;\n","// @flow\nimport * as React from 'react';\nimport { enumerateGroups } from '../ObjectsList/EnumerateObjects';\nimport { useCommandWithOptions } from '../CommandPalette/CommandHooks';\n\ntype Props = {|\n  project: gdProject,\n  layout: gdLayout,\n  onEditObjectGroup: (group: gdObjectGroup) => void,\n|};\n\nconst useObjectGroupsListCommands = (props: Props) => {\n  const { project, layout, onEditObjectGroup } = props;\n\n  useCommandWithOptions('EDIT_OBJECT_GROUP', true, {\n    generateOptions: React.useCallback(\n      () =>\n        [\n          ...enumerateGroups(layout.getObjectGroups()),\n          ...enumerateGroups(project.getObjectGroups()),\n        ].map(group => ({\n          text: group.getName(),\n          handler: () => onEditObjectGroup(group),\n        })),\n      [onEditObjectGroup, project, layout]\n    ),\n  });\n};\n\nexport default useObjectGroupsListCommands;\n","// @flow\nimport * as React from 'react';\nimport { mapReverseFor } from '../Utils/MapFor';\nimport { useCommandWithOptions } from '../CommandPalette/CommandHooks';\n\ntype Props = {|\n  layout: gdLayout,\n  onEditLayerEffects: (layer: gdLayer) => void,\n  onEditLayer: (layer: gdLayer) => void,\n|};\n\nconst useLayersListCommands = (props: Props) => {\n  const { layout, onEditLayerEffects, onEditLayer } = props;\n\n  useCommandWithOptions('EDIT_LAYER_EFFECTS', true, {\n    generateOptions: React.useCallback(\n      () => {\n        const layersCount = layout.getLayersCount();\n        return mapReverseFor(0, layersCount, i => {\n          const layer = layout.getLayerAt(i);\n          return {\n            text: layer.getName() || 'Base layer',\n            handler: () => onEditLayerEffects(layer),\n          };\n        });\n      },\n      [layout, onEditLayerEffects]\n    ),\n  });\n\n  useCommandWithOptions('EDIT_LAYER', true, {\n    generateOptions: React.useCallback(\n      () => {\n        const layersCount = layout.getLayersCount();\n        return mapReverseFor(0, layersCount, i => {\n          const layer = layout.getLayerAt(i);\n          return {\n            text: layer.getName() || 'Base layer',\n            handler: () => onEditLayer(layer),\n          };\n        });\n      },\n      [layout, onEditLayer]\n    ),\n  });\n};\n\nexport default useLayersListCommands;\n","// @flow\nimport { useCommand } from '../CommandPalette/CommandHooks';\nimport useObjectsListCommands from '../ObjectsList/UseObjectsListCommands';\nimport useObjectGroupsListCommands from '../ObjectGroupsList/UseObjectGroupsListCommands';\nimport useLayersListCommands from '../LayersList/UseLayersListCommands';\n\ntype Props = {|\n  project: gdProject,\n  layout: gdLayout,\n  onEditObject: (object: gdObject) => void,\n  onEditObjectVariables: (object: gdObject) => void,\n  onOpenSceneProperties: () => void,\n  onOpenSceneVariables: () => void,\n  onEditObjectGroup: (group: gdObjectGroup) => void,\n  onEditLayerEffects: (layer: gdLayer) => void,\n  onEditLayer: (layer: gdLayer) => void,\n|};\n\nconst UseSceneEditorCommands = (props: Props) => {\n  const {\n    project,\n    layout,\n    onEditObject,\n    onEditObjectVariables,\n    onOpenSceneProperties,\n    onOpenSceneVariables,\n    onEditObjectGroup,\n    onEditLayerEffects,\n    onEditLayer,\n  } = props;\n\n  useCommand('OPEN_SCENE_PROPERTIES', true, {\n    handler: onOpenSceneProperties,\n  });\n\n  useCommand('OPEN_SCENE_VARIABLES', true, {\n    handler: onOpenSceneVariables,\n  });\n\n  useObjectsListCommands({\n    project,\n    layout,\n    onEditObject,\n    onEditObjectVariables,\n  });\n\n  useObjectGroupsListCommands({\n    project,\n    layout,\n    onEditObjectGroup,\n  });\n\n  useLayersListCommands({\n    layout,\n    onEditLayerEffects,\n    onEditLayer,\n  });\n\n  return null;\n};\n\nexport default UseSceneEditorCommands;\n","// @flow\nimport * as React from 'react';\nimport ThemeConsumer from '../../../UI/Theme/ThemeConsumer';\n\nconst styles = {\n  logo: {\n    width: '100%',\n  },\n};\n\nconst GDevelopLogo = () => (\n  <ThemeConsumer>\n    {muiTheme => <img src={muiTheme.logo.src} alt=\"\" style={styles.logo} />}\n  </ThemeConsumer>\n);\n\nexport default GDevelopLogo;\n","// @flow\nimport * as React from 'react';\nimport ThemeConsumer from '../../../UI/Theme/ThemeConsumer';\n\nconst styles = {\n  scrollContainer: {\n    flex: 1,\n    display: 'flex',\n    overflowY: 'scroll',\n  },\n};\n\ntype Props = {|\n  children: React.Node,\n|};\n\nconst ScrollBackground = ({ children }: Props) => (\n  <ThemeConsumer>\n    {muiTheme => (\n      <div\n        style={{\n          ...styles.scrollContainer,\n          backgroundColor: muiTheme.palette.canvasColor,\n        }}\n      >\n        {children}\n      </div>\n    )}\n  </ThemeConsumer>\n);\n\nexport default ScrollBackground;\n","// @flow\nimport { Trans, t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport * as React from 'react';\nimport FlatButton from '../../../UI/FlatButton';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '../../../UI/IconButton';\nimport Language from '@material-ui/icons/Language';\nimport { type RenderEditorContainerPropsWithRef } from '../BaseEditor';\nimport Window from '../../../Utils/Window';\nimport { Line } from '../../../UI/Grid';\nimport GDevelopLogo from './GDevelopLogo';\nimport ScrollBackground from './ScrollBackground';\nimport RaisedButton from '../../../UI/RaisedButton';\nimport Text from '../../../UI/Text';\nimport {\n  ColumnStackLayout,\n  ResponsiveLineStackLayout,\n} from '../../../UI/Layout';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport HelpIcon from '@material-ui/icons/Help';\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\n\nconst styles = {\n  innerContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    minHeight: 400,\n  },\n  centerContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'stretch',\n    justifyContent: 'center',\n    flexShrink: 0,\n    maxWidth: 400,\n  },\n  logoPaper: {\n    marginBottom: 10,\n    width: '100%',\n    textAlign: 'center',\n  },\n};\n\ntype Props = {|\n  project: ?gdProject,\n\n  isActive: boolean,\n  projectItemName: ?string,\n  project: ?gdProject,\n  setToolbar: (?React.Node) => void,\n\n  // Project opening\n  canOpen: boolean,\n  onOpen: () => void,\n  onCreate: () => void,\n  onOpenProjectManager: () => void,\n  onCloseProject: () => Promise<void>,\n\n  // Other dialogs opening:\n  onOpenGamesShowcase: () => void,\n  onOpenHelpFinder: () => void,\n  onOpenLanguageDialog: () => void,\n|};\n\nexport class StartPage extends React.Component<Props, {||}> {\n  shouldComponentUpdate(nextProps: Props) {\n    // Prevent any update to the editor if the editor is not active,\n    // and so not visible to the user.\n    return nextProps.isActive;\n  }\n\n  getProject() {\n    return undefined;\n  }\n\n  updateToolbar() {\n    if (this.props.setToolbar) this.props.setToolbar(null);\n  }\n\n  forceUpdateEditor() {\n    // No updates to be done\n  }\n\n  render() {\n    const {\n      project,\n      canOpen,\n      onOpen,\n      onCreate,\n      onOpenProjectManager,\n      onCloseProject,\n      onOpenGamesShowcase,\n      onOpenHelpFinder,\n      onOpenLanguageDialog,\n    } = this.props;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <ScrollBackground>\n            <div style={styles.innerContainer}>\n              <Line expand justifyContent=\"center\">\n                <div style={styles.centerContainer}>\n                  <Paper\n                    elevation={2}\n                    style={{\n                      ...styles.logoPaper,\n                    }}\n                  >\n                    <GDevelopLogo />\n                    <Text>\n                      <Trans>\n                        GDevelop is an easy-to-use game creator with no\n                        programming language to learn.\n                      </Trans>\n                    </Text>\n                  </Paper>\n                  <ColumnStackLayout noMargin>\n                    {!project && canOpen && (\n                      <RaisedButton\n                        label={<Trans>Open a project</Trans>}\n                        fullWidth\n                        onClick={onOpen}\n                        primary\n                      />\n                    )}\n                    {!project && (\n                      <RaisedButton\n                        label={<Trans>Create a new project</Trans>}\n                        fullWidth\n                        onClick={onCreate}\n                        primary\n                      />\n                    )}\n                    {!!project && (\n                      <RaisedButton\n                        label={<Trans>Open Project Manager</Trans>}\n                        fullWidth\n                        onClick={onOpenProjectManager}\n                        primary\n                      />\n                    )}\n                    {!!project && (\n                      <FlatButton\n                        label={<Trans>Close project</Trans>}\n                        fullWidth\n                        onClick={() => {\n                          onCloseProject();\n                        }}\n                      />\n                    )}\n                    {\n                      <FlatButton\n                        label={<Trans>Search the documentation</Trans>}\n                        fullWidth\n                        onClick={onOpenHelpFinder}\n                      />\n                    }\n                  </ColumnStackLayout>\n                </div>\n              </Line>\n              <Line noMargin>\n                <ResponsiveLineStackLayout\n                  alignItems=\"center\"\n                  justifyContent=\"space-between\"\n                  expand\n                >\n                  <Line noMargin justifyContent=\"center\">\n                    <FlatButton\n                      icon={<SportsEsportsIcon />}\n                      label={<Trans>GDevelop Games</Trans>}\n                      onClick={onOpenGamesShowcase}\n                    />\n                    <FlatButton\n                      icon={<ForumIcon />}\n                      label={<Trans>Community Forums</Trans>}\n                      onClick={() =>\n                        Window.openExternalURL('https://forum.gdevelop-app.com')\n                      }\n                    />\n                    <FlatButton\n                      icon={<HelpIcon />}\n                      label={<Trans>Help and tutorials</Trans>}\n                      onClick={() =>\n                        Window.openExternalURL(\n                          'http://wiki.compilgames.net/doku.php/gdevelop5/start'\n                        )\n                      }\n                    />\n                  </Line>\n                  <Line noMargin alignItems=\"center\" justifyContent=\"center\">\n                    <IconButton\n                      className=\"icon-youtube\"\n                      onClick={() =>\n                        Window.openExternalURL(\n                          'https://www.youtube.com/c/GDevelopApp'\n                        )\n                      }\n                      tooltip={t`Tutorials on YouTube`}\n                    />\n                    <IconButton\n                      className=\"icon-discord\"\n                      onClick={() =>\n                        Window.openExternalURL('https://discord.gg/rjdYHvj')\n                      }\n                      tooltip={t`GDevelop on Discord`}\n                    />\n                    <IconButton\n                      className=\"icon-reddit\"\n                      onClick={() =>\n                        Window.openExternalURL(\n                          'https://www.reddit.com/r/gdevelop'\n                        )\n                      }\n                      tooltip={t`GDevelop on Reddit`}\n                    />\n                    <IconButton\n                      className=\"icon-twitter\"\n                      onClick={() =>\n                        Window.openExternalURL(\n                          'https://twitter.com/GDevelopApp'\n                        )\n                      }\n                      tooltip={t`GDevelop on Twitter`}\n                    />\n                    <IconButton\n                      className=\"icon-facebook\"\n                      onClick={() =>\n                        Window.openExternalURL(\n                          'https://www.facebook.com/GDevelopApp'\n                        )\n                      }\n                      tooltip={t`GDevelop on Facebook`}\n                    />\n                    <FlatButton\n                      label={i18n.language}\n                      onClick={onOpenLanguageDialog}\n                      icon={<Language />}\n                    />\n                  </Line>\n                </ResponsiveLineStackLayout>\n              </Line>\n            </div>\n          </ScrollBackground>\n        )}\n      </I18n>\n    );\n  }\n}\n\nexport const renderStartPageContainer = (\n  props: RenderEditorContainerPropsWithRef\n) => (\n  <StartPage\n    ref={props.ref}\n    project={props.project}\n    isActive={props.isActive}\n    projectItemName={props.projectItemName}\n    setToolbar={props.setToolbar}\n    canOpen={props.canOpen}\n    onOpen={props.onOpen}\n    onCreate={props.onCreate}\n    onOpenProjectManager={props.onOpenProjectManager}\n    onCloseProject={props.onCloseProject}\n    onOpenGamesShowcase={props.onOpenGamesShowcase}\n    onOpenHelpFinder={props.onOpenHelpFinder}\n    onOpenLanguageDialog={props.onOpenLanguageDialog}\n  />\n);\n","// @flow\nimport { fuzzyOrEmptyFilter } from '../../Utils/FuzzyOrEmptyFilter';\n\n/**\n * Filters options both simply and fuzzy-ly,\n * prioritizing simple-matched options\n */\nconst filterOptions = <T>(\n  options: Array<T>,\n  state: { getOptionLabel: T => string, inputValue: string }\n) => {\n  const searchText = state.inputValue.toLowerCase();\n  if (searchText === '') return options;\n\n  const directMatches = [];\n  const fuzzyMatches = [];\n  options.forEach(option => {\n    const optionText = state.getOptionLabel(option).toLowerCase();\n    if (optionText.includes(searchText)) return directMatches.push(option);\n    if (fuzzyOrEmptyFilter(searchText, optionText))\n      return fuzzyMatches.push(option);\n  });\n\n  return [...directMatches, ...fuzzyMatches];\n};\n\nexport default filterOptions;\n","// @flow\nimport * as React from 'react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { type MessageDescriptor } from '../../Utils/i18n/MessageDescriptor.flow';\nimport ListIcon from '../../UI/ListIcon';\nimport { useShortcutMap } from '../../KeyboardShortcuts';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Chip from '@material-ui/core/Chip';\nimport TextField from '@material-ui/core/TextField';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport filterOptions from './FilterOptions';\nimport { type NamedCommand, type CommandOption } from '../CommandManager';\nimport commandsList, { commandAreas } from '../CommandsList';\nimport { getShortcutDisplayName } from '../../KeyboardShortcuts';\n\nconst useStyles = makeStyles({\n  shortcutChip: {\n    borderRadius: 3,\n  },\n  listItemContainer: {\n    width: '100%',\n  },\n});\n\ntype Item = NamedCommand | CommandOption;\n\ntype Props<T> = {|\n  onClose: () => void,\n  onSelect: (item: T) => void,\n  items: Array<T>,\n  placeholder: MessageDescriptor,\n  i18n: I18nType,\n|};\n\nconst AutocompletePicker = (\n  props: Props<NamedCommand> | Props<CommandOption>\n) => {\n  const [open, setOpen] = React.useState(true);\n  const shortcutMap = useShortcutMap();\n  const classes = useStyles();\n\n  const handleClose = (_, reason) => {\n    if (reason === 'select-option') return;\n    props.onClose();\n  };\n\n  const handleSelect = (_, item) => {\n    props.onSelect(item);\n  };\n\n  const getItemHint = (item: Item) => {\n    if (item.text) return null;\n    else if (item.name) {\n      const shortcutString = shortcutMap[item.name];\n      if (!shortcutString) return null;\n      const shortcutDisplayName = getShortcutDisplayName(shortcutString);\n      return (\n        <ListItemSecondaryAction>\n          <Chip className={classes.shortcutChip} label={shortcutDisplayName} />\n        </ListItemSecondaryAction>\n      );\n    }\n  };\n\n  const getItemText = (item: Item) => {\n    if (item.text) return item.text;\n    else if (item.name) {\n      const { area, displayText } = commandsList[item.name];\n      const areaText = commandAreas[area];\n      return props.i18n._(areaText) + ' 〉' + props.i18n._(displayText);\n    }\n  };\n\n  const getItemIcon = (item: Item) => {\n    if (item.text && item.iconSrc) {\n      return <ListIcon iconSize={20} src={item.iconSrc} />;\n    } else return <ChevronRightIcon />;\n  };\n\n  return (\n    <Autocomplete\n      open={open}\n      onClose={handleClose}\n      onOpen={() => setOpen(true)}\n      options={props.items}\n      getOptionLabel={getItemText}\n      onChange={handleSelect}\n      openOnFocus\n      autoHighlight\n      filterOptions={filterOptions}\n      renderInput={params => (\n        <TextField\n          {...params}\n          placeholder={props.i18n._(props.placeholder)}\n          variant=\"outlined\"\n          autoFocus\n        />\n      )}\n      renderOption={item => (\n        <ListItem\n          dense\n          component=\"div\"\n          ContainerComponent=\"div\"\n          classes={{ container: classes.listItemContainer }}\n        >\n          <ListItemIcon>{getItemIcon(item)}</ListItemIcon>\n          <ListItemText primary={getItemText(item)} />\n          {getItemHint(item)}\n        </ListItem>\n      )}\n    />\n  );\n};\n\nexport default AutocompletePicker;\n","// @flow\nimport React from 'react';\nimport { I18n } from '@lingui/react';\nimport { t } from '@lingui/macro';\nimport Dialog from '@material-ui/core/Dialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CommandsContext from '../CommandsContext';\nimport {\n  type NamedCommand,\n  type NamedCommandWithOptions,\n  type CommandOption,\n} from '../CommandManager';\nimport AutocompletePicker from './AutocompletePicker';\nimport commandsList, { type CommandName } from '../CommandsList';\n\n// Show the command palette dialog at the top of the screen\nconst useStyles = makeStyles({\n  scrollPaper: {\n    alignItems: 'flex-start',\n  },\n});\n\nexport type CommandPaletteInterface = {|\n  open: (open?: boolean) => void,\n  launchCommand: (commandName: CommandName) => void,\n|};\n\ntype PaletteMode = 'closed' | 'command' | 'option';\n\nconst CommandPalette = React.forwardRef<{||}, CommandPaletteInterface>(\n  (props, ref) => {\n    const classes = useStyles();\n    const commandManager = React.useContext(CommandsContext);\n    const [mode, setMode] = React.useState<PaletteMode>('closed');\n    const [\n      selectedCommand,\n      selectCommand,\n    ] = React.useState<null | NamedCommandWithOptions>(null);\n\n    // Takes a command and if simple command, executes handler\n    // If command with options, opens options of the palette\n    const handleCommandChoose = React.useCallback(\n      (command: NamedCommand) => {\n        if (command.handler) {\n          // Simple command\n          command.handler();\n          if (command.name !== 'OPEN_COMMAND_PALETTE') {\n            // Don't close palette if the command is for opening it\n            setMode('closed');\n          }\n        } else {\n          // Command with options\n          selectCommand(command);\n          setMode('option');\n        }\n      },\n      [selectCommand, setMode]\n    );\n\n    // Executes handler of a command option and closes palette\n    const handleOptionChoose = (option: CommandOption) => {\n      option.handler();\n      setMode('closed');\n    };\n\n    // Opens the palette in command mode\n    const openPalette = React.useCallback((open? = true) => {\n      if (open) setMode('command');\n      else setMode('closed');\n    }, []);\n\n    // Takes command name, gets command object from\n    // manager and launches command accordingly\n    const launchCommand = React.useCallback(\n      commandName => {\n        const command = commandManager.getNamedCommand(commandName);\n        if (!command) return;\n        handleCommandChoose(command);\n      },\n      [handleCommandChoose, commandManager]\n    );\n\n    React.useImperativeHandle(ref, () => ({\n      open: openPalette,\n      launchCommand,\n    }));\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Dialog\n            onClose={() => setMode('closed')}\n            aria-label=\"command-palette\"\n            open={mode !== 'closed'}\n            fullWidth\n            hideBackdrop\n            maxWidth=\"sm\"\n            classes={classes}\n            transitionDuration={0}\n          >\n            {mode === 'command' && (\n              // Command picker\n              <AutocompletePicker\n                i18n={i18n}\n                items={\n                  (commandManager\n                    .getAllNamedCommands()\n                    .filter(\n                      command => !commandsList[command.name].ghost\n                    ): Array<NamedCommand>)\n                }\n                placeholder={t`Start typing a command...`}\n                onClose={() => setMode('closed')}\n                onSelect={handleCommandChoose}\n              />\n            )}\n            {mode === 'option' && selectedCommand && (\n              // Command options picker\n              <AutocompletePicker\n                i18n={i18n}\n                items={selectedCommand.generateOptions()}\n                placeholder={commandsList[selectedCommand.name]}\n                onClose={() => setMode('closed')}\n                onSelect={handleOptionChoose}\n              />\n            )}\n          </Dialog>\n        )}\n      </I18n>\n    );\n  }\n);\n\nexport default CommandPalette;\n","// @flow\nimport React, { Component } from 'react';\nimport InstructionOrExpressionSelector from './index';\nimport {\n  createTree,\n  type InstructionTreeNode,\n} from '../../../InstructionOrExpression/CreateTree';\nimport { enumerateAllInstructions } from '../../../InstructionOrExpression/EnumerateInstructions';\nimport {\n  type EnumeratedInstructionMetadata,\n  filterEnumeratedInstructionOrExpressionMetadataByScope,\n} from '../../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js';\nimport { type EventsScope } from '../../../InstructionOrExpression/EventsScope.flow';\n\ntype Props = {|\n  isCondition: boolean,\n  focusOnMount?: boolean,\n  selectedType: string,\n  onChoose: (type: string, EnumeratedInstructionMetadata) => void,\n  scope: EventsScope,\n|};\n\nconst style = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n};\n\nexport default class InstructionSelector extends Component<Props, {||}> {\n  instructionsInfo: Array<EnumeratedInstructionMetadata> = filterEnumeratedInstructionOrExpressionMetadataByScope(\n    enumerateAllInstructions(this.props.isCondition),\n    this.props.scope\n  );\n  instructionsInfoTree: InstructionTreeNode = createTree(this.instructionsInfo);\n\n  render() {\n    const { isCondition, scope, ...otherProps } = this.props;\n    return (\n      <InstructionOrExpressionSelector\n        style={style}\n        instructionsInfo={this.instructionsInfo}\n        instructionsInfoTree={this.instructionsInfoTree}\n        iconSize={24}\n        {...otherProps}\n      />\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport InstructionSelector from './InstructionOrExpressionSelector/InstructionSelector.js';\nimport InstructionParametersEditor from './InstructionParametersEditor.js';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../../ResourcesList/ResourceExternalEditor.flow';\nimport { type EventsScope } from '../../InstructionOrExpression/EventsScope.flow';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 1,\n  },\n  parametersEditor: {\n    flex: 2,\n    display: 'flex',\n    paddingLeft: 16,\n    paddingRight: 16,\n    zIndex: 1, // Put the Paper shadow on the type selector\n  },\n};\n\ntype Props = {|\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  instruction: gdInstruction,\n  isCondition: boolean,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  style?: Object,\n  openInstructionOrExpression: (\n    extension: gdPlatformExtension,\n    type: string\n  ) => void,\n  anchorEl?: any, // Unused\n|};\ntype State = {||};\n\nexport default class InstructionEditor extends React.Component<Props, State> {\n  _instructionParametersEditor: ?InstructionParametersEditor;\n\n  chooseType = (type: string) => {\n    const { instruction } = this.props;\n    instruction.setType(type);\n    this.forceUpdate(() => {\n      if (this._instructionParametersEditor) {\n        this._instructionParametersEditor.focus();\n      }\n    });\n  };\n\n  render() {\n    const {\n      instruction,\n      isCondition,\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      scope,\n    } = this.props;\n\n    return (\n      <div style={styles.container}>\n        <InstructionSelector\n          isCondition={isCondition}\n          selectedType={instruction.getType()}\n          onChoose={this.chooseType}\n          focusOnMount={!instruction.getType()}\n          scope={scope}\n        />\n        <Paper style={styles.parametersEditor} square elevation={2}>\n          <InstructionParametersEditor\n            project={project}\n            scope={scope}\n            globalObjectsContainer={globalObjectsContainer}\n            objectsContainer={objectsContainer}\n            isCondition={isCondition}\n            instruction={instruction}\n            resourceSources={this.props.resourceSources}\n            onChooseResource={this.props.onChooseResource}\n            resourceExternalEditors={this.props.resourceExternalEditors}\n            openInstructionOrExpression={this.props.openInstructionOrExpression}\n            ref={instructionParametersEditor =>\n              (this._instructionParametersEditor = instructionParametersEditor)\n            }\n            focusOnMount={!!instruction.getType()}\n          />\n        </Paper>\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport InstructionEditor from './index.js';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../../ResourcesList/ResourceExternalEditor.flow';\nimport { type EventsScope } from '../../InstructionOrExpression/EventsScope.flow';\n\ntype Props = {|\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  instruction: gdInstruction,\n  isCondition: boolean,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  style?: Object,\n  isNewInstruction: boolean,\n  onCancel: () => void,\n  onSubmit: () => void,\n  open: boolean,\n  openInstructionOrExpression: (\n    extension: gdPlatformExtension,\n    type: string\n  ) => void,\n  anchorEl?: any, // Unused\n  canPasteInstructions: boolean, // Unused\n  onPasteInstructions: () => void, // Unused\n|};\ntype State = {||};\n\nexport default class InstructionEditorDialog extends React.Component<\n  Props,\n  State\n> {\n  render() {\n    const {\n      isNewInstruction,\n      onCancel,\n      onSubmit,\n      open,\n      canPasteInstructions,\n      onPasteInstructions,\n      ...otherProps\n    } = this.props;\n    const actions = [\n      <FlatButton\n        key=\"cancel\"\n        label={<Trans>Cancel</Trans>}\n        primary={false}\n        onClick={onCancel}\n      />,\n      <FlatButton\n        key=\"ok\"\n        label={<Trans>Ok</Trans>}\n        primary={true}\n        keyboardFocused={false}\n        onClick={onSubmit}\n      />,\n    ];\n\n    return (\n      <Dialog\n        actions={actions}\n        open={open}\n        cannotBeDismissed={true}\n        onRequestClose={onCancel}\n        maxWidth={false}\n        flexBody\n        noMargin\n      >\n        <InstructionEditor {...otherProps} />\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\n\nconst styles = {\n  previewContainer: {\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 200,\n    border: '#AAAAAA 1px solid',\n    background: 'url(\"res/transparentback.png\") repeat',\n  },\n  icon: { width: 60, height: 60 },\n};\n\ntype Props = {|\n  renderIcon: ({| style: Object |}) => React.Node,\n|};\n\n/**\n * Display a generic container to display an icon.\n */\nexport default ({ renderIcon }: Props) => (\n  <div style={styles.previewContainer}>\n    {renderIcon({ style: styles.icon })}\n  </div>\n);\n","// @flow\nimport * as React from 'react';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { type ResourceKind } from '../ResourceSource.flow';\nimport ImagePreview from './ImagePreview';\nimport GenericIconPreview from './GenericIconPreview';\nimport Audiotrack from '@material-ui/icons/Audiotrack';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport VideoLibrary from '@material-ui/icons/VideoLibrary';\nimport FontDownload from '@material-ui/icons/FontDownload';\n\ntype Props = {|\n  project: gdProject,\n  resourceName: string,\n  resourcePath?: string,\n  resourcesLoader: typeof ResourcesLoader,\n  onSize?: (number, number) => void,\n|};\n\ntype State = {|\n  resourceKind: ?ResourceKind,\n|};\n\n/**\n * Display the right preview for any given resource of a project\n */\nexport default class ResourcePreview extends React.PureComponent<Props, State> {\n  state = this._loadFrom(this.props);\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      newProps.resourceName !== this.props.resourceName ||\n      newProps.project !== this.props.project ||\n      newProps.resourcePath !== this.props.resourcePath\n    ) {\n      this.setState(this._loadFrom(newProps));\n    }\n  }\n\n  _loadFrom(props: Props): State {\n    const { project, resourceName } = props;\n    const resourcesManager = project.getResourcesManager();\n    const resourceKind = resourcesManager.hasResource(resourceName)\n      ? resourcesManager.getResource(resourceName).getKind()\n      : null;\n\n    return {\n      resourceKind,\n    };\n  }\n\n  render() {\n    const { resourceKind } = this.state;\n\n    switch (resourceKind) {\n      case 'image':\n        return (\n          <ImagePreview\n            project={this.props.project}\n            resourceName={this.props.resourceName}\n            resourcesLoader={this.props.resourcesLoader}\n            onSize={this.props.onSize}\n            resourcePath={this.props.resourcePath}\n          />\n        );\n      case 'audio':\n        return (\n          <GenericIconPreview renderIcon={props => <Audiotrack {...props} />} />\n        );\n      case 'json':\n        return (\n          <GenericIconPreview\n            renderIcon={props => <InsertDriveFile {...props} />}\n          />\n        );\n      case 'video':\n        return (\n          <GenericIconPreview\n            renderIcon={props => <VideoLibrary {...props} />}\n          />\n        );\n      case 'font':\n        return (\n          <GenericIconPreview\n            renderIcon={props => <FontDownload {...props} />}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Background from '../../UI/Background';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport PropertiesEditor from '../../PropertiesEditor';\nimport ResourcePreview from '../../ResourcesList/ResourcePreview';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport propertiesMapToSchema from '../../PropertiesEditor/PropertiesMapToSchema';\nimport { type Schema } from '../../PropertiesEditor';\n\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../ResourcesList/ResourceSource.flow';\n\nconst styles = {\n  propertiesContainer: {\n    padding: 8,\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    flex: 2,\n  },\n};\n\ntype Props = {|\n  project: gdProject,\n  resourcesLoader: typeof ResourcesLoader,\n  resources: Array<gdResource>,\n  onResourcePathUpdated: () => void,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n|};\n\nexport default class ResourcePropertiesEditor extends React.Component<\n  Props,\n  {}\n> {\n  schema: Schema = [\n    {\n      name: 'Resource name',\n      valueType: 'string',\n      disabled: true,\n      getValue: (resource: gdResource) => resource.getName(),\n      setValue: (resource: gdResource, newValue: string) =>\n        resource.setName(newValue),\n    },\n    {\n      name: 'File',\n      valueType: 'string',\n      getValue: (resource: gdResource) => resource.getFile(),\n      setValue: (resource: gdResource, newValue: string) =>\n        resource.setFile(newValue),\n      onEditButtonClick: () => this._chooseResourcePath(),\n    },\n  ];\n\n  _renderEmpty() {\n    return (\n      <EmptyMessage>\n        <Trans>\n          Resources are automatically added to your project whenever you add an\n          image, a font or a video to an object or when you choose an audio file\n          in events. Choose a resource to display its properties.\n        </Trans>\n      </EmptyMessage>\n    );\n  }\n\n  _chooseResourcePath = () => {\n    const {\n      resources,\n      onResourcePathUpdated,\n      onChooseResource,\n      resourceSources,\n    } = this.props;\n    const resource = resources[0];\n    const sources = resourceSources.filter(\n      source => source.kind === resource.getKind()\n    );\n    if (!sources.length) return;\n    onChooseResource(sources[0].name).then(resources => {\n      if (!resources.length) return; // No path was chosen by the user.\n      resource.setFile(resources[0].getFile());\n\n      // Important, we are responsible for deleting the resources that were given to us.\n      // Otherwise we have a memory leak.\n      resources.forEach(resource => resource.delete());\n\n      onResourcePathUpdated();\n      this.forceUpdate();\n    });\n  };\n\n  _renderResourcesProperties() {\n    const { resources } = this.props;\n    //TODO: Multiple resources support\n    const properties = resources[0].getProperties();\n    const resourceSchema = propertiesMapToSchema(\n      properties,\n      resource => resource.getProperties(),\n      (resource, name, value) => resource.updateProperty(name, value)\n    );\n\n    return (\n      <div\n        style={styles.propertiesContainer}\n        key={resources.map(resource => '' + resource.ptr).join(';')}\n      >\n        <PropertiesEditor\n          schema={this.schema.concat(resourceSchema)}\n          instances={resources}\n        />\n      </div>\n    );\n  }\n\n  _renderPreview() {\n    const { resources, project, resourcesLoader } = this.props;\n    if (!resources || !resources.length) return;\n\n    return (\n      <ResourcePreview\n        resourceName={resources[0].getName()}\n        resourcePath={resources[0].getFile()}\n        resourcesLoader={resourcesLoader}\n        project={project}\n      />\n    );\n  }\n\n  render() {\n    const { resources } = this.props;\n\n    return (\n      <Background maxWidth>\n        {this._renderPreview()}\n        {!resources || !resources.length\n          ? this._renderEmpty()\n          : this._renderResourcesProperties()}\n      </Background>\n    );\n  }\n}\n","// @flow\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport { t } from '@lingui/macro';\nimport ToolbarIcon from '../../UI/ToolbarIcon';\nimport ElementWithMenu from '../../UI/Menu/ElementWithMenu';\nimport { type PreviewState } from '../PreviewState';\n\nexport type PreviewButtonsProps = {|\n  onPreviewWithoutHotReload: () => void,\n  onOpenDebugger: () => void,\n  onNetworkPreview: () => void,\n  onHotReloadPreview: () => void,\n  setPreviewOverride: ({|\n    isPreviewOverriden: boolean,\n    overridenPreviewLayoutName: ?string,\n    overridenPreviewExternalLayoutName: ?string,\n  |}) => void,\n  showNetworkPreviewButton: boolean,\n  isPreviewEnabled: boolean,\n  hasPreviewsRunning: boolean,\n  previewState: PreviewState,\n|};\n\nexport default function PreviewButtons({\n  onPreviewWithoutHotReload,\n  onNetworkPreview,\n  onOpenDebugger,\n  onHotReloadPreview,\n  showNetworkPreviewButton,\n  isPreviewEnabled,\n  hasPreviewsRunning,\n  previewState,\n  setPreviewOverride,\n}: PreviewButtonsProps) {\n  const previewIcon = (\n    <ToolbarIcon\n      onClick={onHotReloadPreview}\n      disabled={!isPreviewEnabled}\n      src={\n        hasPreviewsRunning\n          ? 'res/ribbon_default/hotReload64.png'\n          : previewState.isPreviewOverriden\n          ? 'res/ribbon_default/previewOverride32.png'\n          : 'res/ribbon_default/preview64.png'\n      }\n      tooltip={\n        hasPreviewsRunning\n          ? t`Apply changes to the running preview, right click for more`\n          : previewState.isPreviewOverriden\n          ? t`Preview is overridden, right click for more`\n          : previewState.previewExternalLayoutName\n          ? t`Launch a preview of the external layout inside the scene, right click for more`\n          : t`Launch a preview of the scene, right click for more`\n      }\n    />\n  );\n\n  return (\n    <React.Fragment>\n      <ElementWithMenu\n        element={previewIcon}\n        openMenuWithSecondaryClick\n        buildMenuTemplate={(i18n: I18nType) => [\n          {\n            label: i18n._(t`Launch another preview in a new window`),\n            click: onPreviewWithoutHotReload,\n            enabled: isPreviewEnabled && hasPreviewsRunning,\n          },\n          { type: 'separator' },\n          ...(previewState.overridenPreviewLayoutName\n            ? [\n                {\n                  type: 'checkbox',\n                  label: previewState.overridenPreviewExternalLayoutName\n                    ? i18n._(\n                        t`Start all previews from external layout ${\n                          previewState.overridenPreviewExternalLayoutName\n                        }`\n                      )\n                    : i18n._(\n                        t`Start all previews from scene ${\n                          previewState.overridenPreviewLayoutName\n                        }`\n                      ),\n                  checked: previewState.isPreviewOverriden,\n                  click: () =>\n                    setPreviewOverride({\n                      isPreviewOverriden: !previewState.isPreviewOverriden,\n                      overridenPreviewLayoutName:\n                        previewState.overridenPreviewLayoutName,\n                      overridenPreviewExternalLayoutName:\n                        previewState.overridenPreviewExternalLayoutName,\n                    }),\n                },\n                { type: 'separator' },\n              ]\n            : []),\n          {\n            label: previewState.previewExternalLayoutName\n              ? i18n._(\n                  t`Use this external layout inside this scene to start all previews`\n                )\n              : i18n._(t`Use this scene to start all previews`),\n            click: () =>\n              setPreviewOverride({\n                isPreviewOverriden: true,\n                overridenPreviewLayoutName: previewState.previewLayoutName,\n                overridenPreviewExternalLayoutName:\n                  previewState.previewExternalLayoutName,\n              }),\n            enabled:\n              previewState.previewLayoutName !==\n                previewState.overridenPreviewLayoutName ||\n              previewState.previewExternalLayoutName !==\n                previewState.overridenPreviewExternalLayoutName,\n          },\n        ]}\n      />\n      {showNetworkPreviewButton && (\n        <ElementWithMenu\n          element={\n            <ToolbarIcon\n              disabled={!isPreviewEnabled}\n              src=\"res/ribbon_default/bug32.png\"\n              tooltip={t`Advanced preview options (debugger, network preview...)`}\n            />\n          }\n          buildMenuTemplate={(i18n: I18nType) => [\n            {\n              label: i18n._(t`Start Network Preview (Preview over WiFi/LAN)`),\n              click: () => onNetworkPreview(),\n            },\n            { type: 'separator' },\n            {\n              label: i18n._(\n                t`Start Preview with Debugger and Performance Profiler`\n              ),\n              click: () => onOpenDebugger(),\n            },\n          ]}\n        />\n      )}\n    </React.Fragment>\n  );\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport React, { PureComponent } from 'react';\nimport { Toolbar, ToolbarGroup } from '../../UI/Toolbar';\nimport ToolbarIcon from '../../UI/ToolbarIcon';\nimport ToolbarSeparator from '../../UI/ToolbarSeparator';\nimport ElementWithMenu from '../../UI/Menu/ElementWithMenu';\nimport Window from '../../Utils/Window';\nimport PreviewButtons, { type PreviewButtonsProps } from './PreviewButtons';\n\ntype Props = {|\n  showProjectIcons: boolean,\n  hasProject: boolean,\n  toggleProjectManager: () => void,\n  requestUpdate: ?() => void,\n  simulateUpdateDownloaded: ?() => void,\n  simulateUpdateAvailable: ?() => void,\n  exportProject: () => void,\n  ...PreviewButtonsProps,\n|};\n\ntype State = {|\n  editorToolbar: any,\n|};\n\nexport class MainFrameToolbar extends PureComponent<Props, State> {\n  state = {\n    editorToolbar: null,\n  };\n\n  isDev = Window.isDev();\n\n  setEditorToolbar(editorToolbar: any) {\n    this.setState({\n      editorToolbar,\n    });\n  }\n\n  render() {\n    return (\n      <Toolbar>\n        <ToolbarGroup firstChild>\n          {this.props.showProjectIcons && (\n            <ToolbarIcon\n              onClick={this.props.toggleProjectManager}\n              src=\"res/ribbon_default/projectManager32.png\"\n              disabled={!this.props.hasProject}\n              tooltip={t`Project manager`}\n            />\n          )}\n          {this.props.showProjectIcons && (\n            <ToolbarIcon\n              onClick={this.props.exportProject}\n              src=\"res/ribbon_default/export32.png\"\n              disabled={!this.props.hasProject}\n              tooltip={t`Export the game (Web, Android, iOS...)`}\n            />\n          )}\n          {this.isDev && (\n            <ElementWithMenu\n              element={<ToolbarIcon src=\"res/ribbon_default/bug32.png\" />}\n              buildMenuTemplate={() => [\n                {\n                  label: 'Request update from external editor',\n                  disabled: !this.props.requestUpdate,\n                  click: () => {\n                    this.props.requestUpdate && this.props.requestUpdate();\n                  },\n                },\n                {\n                  label: 'Simulate update downloaded',\n                  disabled: !this.props.simulateUpdateDownloaded,\n                  click: () => {\n                    this.props.simulateUpdateDownloaded &&\n                      this.props.simulateUpdateDownloaded();\n                  },\n                },\n                {\n                  label: 'Simulate update available',\n                  disabled: !this.props.simulateUpdateAvailable,\n                  click: () => {\n                    this.props.simulateUpdateAvailable &&\n                      this.props.simulateUpdateAvailable();\n                  },\n                },\n              ]}\n            />\n          )}\n          <ToolbarSeparator />\n          <PreviewButtons\n            onPreviewWithoutHotReload={this.props.onPreviewWithoutHotReload}\n            onOpenDebugger={this.props.onOpenDebugger}\n            onNetworkPreview={this.props.onNetworkPreview}\n            onHotReloadPreview={this.props.onHotReloadPreview}\n            setPreviewOverride={this.props.setPreviewOverride}\n            showNetworkPreviewButton={this.props.showNetworkPreviewButton}\n            isPreviewEnabled={this.props.isPreviewEnabled}\n            previewState={this.props.previewState}\n            hasPreviewsRunning={this.props.hasPreviewsRunning}\n          />\n        </ToolbarGroup>\n        {this.state.editorToolbar || <ToolbarGroup />}\n      </Toolbar>\n    );\n  }\n}\n\nexport default MainFrameToolbar;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport TextField from '../UI/TextField';\nimport FlatButton from '../UI/FlatButton';\nimport Window from '../Utils/Window';\nimport { List, ListItem } from '../UI/List';\nimport { Column } from '../UI/Grid';\nimport algoliasearch from 'algoliasearch/lite';\nimport debounce from 'lodash/debounce';\nimport Text from '../UI/Text';\n\nconst styles = {\n  dropdownMenuContainer: {\n    maxHeight: 300,\n    overflowY: 'scroll',\n  },\n};\n\ntype Props = {|\n  onChange: string => void,\n  value: string,\n|};\n\ntype AlgoliaResult = {|\n  content: string,\n  url: string,\n  hierarchy: {|\n    lvl0: ?string,\n    lvl1: ?string,\n    lvl2: ?string,\n    lvl3: ?string,\n    lvl4: ?string,\n    lvl5: ?string,\n    lvl6: ?string,\n  |},\n  objectID: string,\n|};\n\ntype State = {|\n  results: ?Array<AlgoliaResult>,\n  error: ?Error,\n|};\n\nconst fixSomeHtmlCharacters = (str: string) => {\n  return str\n    .replace(/&amp;/g, '&')\n    .replace(/&quot;/g, '\"')\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&#x27;/g, \"'\");\n};\n\nconst indexName = 'gdevelop';\nconst appId = 'BH4D9OD16A';\nconst apiKey = '69c73fc1a710bb79543d4b91f6b81c08';\nconst algoliaOptions = { hitsPerPage: 5 };\n\nexport default class DocSearchArea extends React.Component<Props, State> {\n  // $FlowFixMe\n  client = algoliasearch(appId, apiKey, algoliaOptions);\n  state = {\n    results: null,\n    error: null,\n  };\n\n  _handleSearchTextChange = (searchText: string) => {\n    this.props.onChange(searchText);\n  };\n\n  _launchSearchRequest = debounce(() => {\n    if (this.props.value) {\n      this.client\n        // $FlowFixMe\n        .search([\n          {\n            indexName: indexName,\n            query: this.props.value,\n            params: algoliaOptions,\n          },\n        ])\n        .then(\n          data => {\n            let hits = data.results[0].hits;\n            console.log(hits);\n\n            this.setState({\n              results: hits,\n              error: null,\n            });\n          },\n          error => {\n            this.setState({\n              error,\n            });\n          }\n        );\n    }\n  }, 200);\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.value !== this.props.value && this.props.value) {\n      this._launchSearchRequest();\n    }\n  }\n\n  _renderResult = (result: AlgoliaResult) => {\n    const primaryText =\n      result.hierarchy.lvl0 ||\n      result.hierarchy.lvl1 ||\n      result.hierarchy.lvl2 ||\n      result.hierarchy.lvl3 ||\n      result.hierarchy.lvl4 ||\n      result.hierarchy.lvl5 ||\n      result.hierarchy.lvl6 ||\n      '';\n\n    const secondaryText = [\n      result.hierarchy.lvl0,\n      result.hierarchy.lvl1,\n      result.hierarchy.lvl2,\n      result.hierarchy.lvl3,\n      result.hierarchy.lvl4,\n      result.hierarchy.lvl5,\n      result.hierarchy.lvl6,\n    ]\n      .filter(text => !!text)\n      .filter(text => text !== primaryText)\n      .join(' - ');\n\n    return (\n      <ListItem\n        key={result.objectID}\n        primaryText={fixSomeHtmlCharacters(primaryText)}\n        secondaryText={fixSomeHtmlCharacters(result.content || secondaryText)}\n        secondaryTextLines={2}\n        onClick={() => {\n          Window.openExternalURL(result.url);\n        }}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <TextField\n          id={'help-finder-search-bar'}\n          fullWidth\n          hintText={t`Enter what you want to build.`}\n          value={this.props.value}\n          onChange={(e, text) => this.props.onChange(text)}\n        />\n        <div\n          id=\"help-finder-dropdown-menu-container\"\n          className=\"algolia-autocomplete\"\n          style={{\n            ...styles.dropdownMenuContainer,\n            visibility: !this.props.value ? 'hidden' : undefined,\n          }}\n        />\n        {this.state.error ? (\n          <Text>\n            <Trans>\n              Unable to search in the documentation. Are you sure you are online\n              and have a proper internet connection?\n            </Trans>\n          </Text>\n        ) : this.state.results ? (\n          <List>\n            {this.state.results.map(result => this._renderResult(result))}\n          </List>\n        ) : (\n          <React.Fragment>\n            <Text>\n              <Trans>Examples:</Trans>\n            </Text>\n            <Column expand>\n              <Text>\n                Coins in platformer\n                <br />\n                Export on Android\n                <br />\n                Add a score\n                <br />\n                Move enemies\n                <br />\n                ...\n                <br />\n              </Text>\n            </Column>\n          </React.Fragment>\n        )}\n        <Text align=\"right\">\n          This search is powered by{' '}\n          <FlatButton\n            onClick={() => Window.openExternalURL('http://algolia.com/')}\n            label={'Algolia'}\n          />\n        </Text>\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport Window from '../Utils/Window';\nimport DocSearchArea from './DocSearchArea';\nimport debounce from 'lodash/debounce';\nimport {\n  sendHelpFinderOpened,\n  sendHelpSearch,\n} from '../Utils/Analytics/EventSender';\n\ntype Props = {|\n  open: boolean,\n  onClose: () => void,\n|};\n\ntype State = {|\n  searchText: string,\n|};\n\nexport default class HelpFinder extends React.PureComponent<Props, State> {\n  state = {\n    searchText: '',\n  };\n\n  componentWillReceiveProps(newProps: Props) {\n    if (newProps.open && !this.props.open) {\n      sendHelpFinderOpened();\n    }\n  }\n\n  _handleSearchTextChange = (searchText: string) => {\n    this.setState({\n      searchText,\n    });\n    this._sendHelpSearch();\n  };\n\n  _sendHelpSearch = debounce(() => {\n    if (this.state.searchText) sendHelpSearch(this.state.searchText.trim());\n  }, 2900);\n\n  render() {\n    const { open, onClose } = this.props;\n\n    return (\n      <Dialog\n        title={<Trans>Help!</Trans>}\n        onRequestClose={onClose}\n        actions={[\n          <FlatButton\n            label={<Trans>Close</Trans>}\n            key=\"close\"\n            primary={false}\n            onClick={onClose}\n          />,\n        ]}\n        secondaryActions={[\n          <FlatButton\n            key=\"forum\"\n            primary={false}\n            onClick={() => {\n              Window.openExternalURL('https://forum.gdevelop-app.com');\n            }}\n            label={<Trans>Community forum</Trans>}\n          />,\n          <FlatButton\n            key=\"wiki\"\n            primary={false}\n            onClick={() => {\n              Window.openExternalURL(\n                'http://wiki.compilgames.net/doku.php/gdevelop5/start'\n              );\n            }}\n            label={<Trans>Wiki</Trans>}\n          />,\n        ]}\n        cannotBeDismissed={false}\n        open={open}\n      >\n        <DocSearchArea\n          value={this.state.searchText}\n          onChange={this._handleSearchTextChange}\n        />\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { useEffect, useRef } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport Dialog from '../UI/Dialog';\nimport { type UserProfile } from './UserProfileContext';\nimport { Column, Line, Spacer } from '../UI/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport BackgroundText from '../UI/BackgroundText';\nimport VerifiedUser from '@material-ui/icons/VerifiedUser';\nimport Text from '../UI/Text';\n\ntype Props = {|\n  onClose: Function,\n  userProfile: UserProfile,\n|};\n\nfunction useInterval(callback: () => void, delay: number | null) {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(\n    () => {\n      function tick() {\n        if (savedCallback.current) savedCallback.current();\n      }\n\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    },\n    [delay]\n  );\n}\n\nexport default function SubscriptionPendingDialog({\n  onClose,\n  userProfile,\n}: Props) {\n  const hasPlan =\n    !!userProfile &&\n    !!userProfile.subscription &&\n    !!userProfile.subscription.planId;\n  useInterval(() => userProfile.onRefreshUserProfile(), hasPlan ? null : 3900);\n\n  return (\n    <Dialog\n      actions={[\n        hasPlan ? (\n          <RaisedButton\n            label={<Trans>Done!</Trans>}\n            key=\"close\"\n            primary\n            onClick={onClose}\n          />\n        ) : (\n          <FlatButton\n            label={<Trans>Cancel and close</Trans>}\n            key=\"close\"\n            primary={false}\n            onClick={onClose}\n          />\n        ),\n      ]}\n      title={undefined}\n      maxWidth=\"sm\"\n      cannotBeDismissed={true}\n      open\n      noMargin\n    >\n      {!hasPlan && (\n        <Column>\n          <Line>\n            <Text>\n              <Trans>\n                Thanks for getting a subscription and supporting GDevelop!\n              </Trans>{' '}\n              {'❤️'}\n              <b>\n                <Trans>\n                  Your browser will now open to enter your payment details\n                  (handled securely by Stripe.com).\n                </Trans>\n              </b>\n            </Text>\n          </Line>\n          <Line justifyContent=\"center\" alignItems=\"center\">\n            <CircularProgress size={20} />\n            <Spacer />\n            <Text>Waiting for the subscription confirmation...</Text>\n          </Line>\n          <Spacer />\n          <Line justifyContent=\"center\">\n            <BackgroundText>\n              <Trans>\n                Once you're done, come back to GDevelop and your account will be\n                upgraded automatically, unlocking the extra exports and online\n                services.\n              </Trans>\n            </BackgroundText>\n          </Line>\n        </Column>\n      )}\n      {hasPlan && (\n        <Column>\n          <Line>\n            <Text>\n              <Trans>\n                Thanks for getting a subscription and supporting GDevelop!\n              </Trans>{' '}\n              {'❤️'}\n            </Text>\n          </Line>\n          <Line justifyContent=\"center\" alignItems=\"center\">\n            <VerifiedUser />\n            <Spacer />\n            <Text>\n              <b>\n                <Trans>Your new plan is now activated</Trans>\n              </b>\n            </Text>\n          </Line>\n          <Spacer />\n          <Line justifyContent=\"center\">\n            <BackgroundText>\n              <Trans>\n                Your account is upgraded, with the extra exports and online\n                services. If you wish to change later, come back to your profile\n                and choose another plan.\n              </Trans>\n            </BackgroundText>\n          </Line>\n        </Column>\n      )}\n    </Dialog>\n  );\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport UserProfileContext, { type UserProfile } from './UserProfileContext';\nimport { Column, Line } from '../UI/Grid';\nimport {\n  getSubscriptionPlans,\n  type PlanDetails,\n  changeUserSubscription,\n  getRedirectToCheckoutUrl,\n} from '../Utils/GDevelopServices/Usage';\nimport RaisedButton from '../UI/RaisedButton';\nimport CheckCircle from '@material-ui/icons/CheckCircle';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport { showMessageBox, showErrorBox } from '../UI/Messages/MessageBox';\nimport LeftLoader from '../UI/LeftLoader';\nimport PlaceholderMessage from '../UI/PlaceholderMessage';\nimport {\n  sendSubscriptionDialogShown,\n  sendChoosePlanClicked,\n} from '../Utils/Analytics/EventSender';\nimport SubscriptionPendingDialog from './SubscriptionPendingDialog';\nimport Window from '../Utils/Window';\nimport Text from '../UI/Text';\nimport ThemeConsumer from '../UI/Theme/ThemeConsumer';\n\nconst styles = {\n  descriptionText: {\n    marginLeft: 16,\n    marginRight: 16,\n  },\n  card: {\n    margin: 16,\n  },\n  actions: {\n    textAlign: 'right',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  bulletIcon: { width: 20, height: 20, marginLeft: 5, marginRight: 10 },\n  bulletText: { flex: 1 },\n};\n\ntype Props = {|\n  open: boolean,\n  onClose: Function,\n|};\n\ntype State = {|\n  isLoading: boolean,\n  subscriptionPendingDialogOpen: boolean,\n|};\n\nexport default class SubscriptionDialog extends React.Component<Props, State> {\n  state = { isLoading: false, subscriptionPendingDialogOpen: false };\n\n  componentDidMount() {\n    if (this.props.open) {\n      sendSubscriptionDialogShown();\n    }\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (!this.props.open && newProps.open) {\n      sendSubscriptionDialogShown();\n    }\n  }\n\n  choosePlan = (\n    i18n: I18nType,\n    userProfile: UserProfile,\n    plan: PlanDetails\n  ) => {\n    const { getAuthorizationHeader, subscription, profile } = userProfile;\n    if (!profile || !subscription) return;\n    sendChoosePlanClicked(plan.planId);\n\n    if (subscription.stripeSubscriptionId) {\n      const answer = Window.showConfirmDialog(\n        plan.planId\n          ? i18n._(t`Are you sure you want to subscribe to this new plan?`)\n          : i18n._(t`Are you sure you want to cancel your subscription?`)\n      );\n      if (!answer) return;\n\n      // We already have a stripe customer, change the subscription without\n      // asking for the user card.\n      this.setState({ isLoading: true });\n      changeUserSubscription(getAuthorizationHeader, profile.uid, {\n        planId: plan.planId,\n      }).then(\n        () => this.handleUpdatedSubscriptionSuccess(i18n, userProfile, plan),\n        (err: Error) => this.handleUpdatedSubscriptionFailure(i18n, err)\n      );\n    } else {\n      this.setState({\n        subscriptionPendingDialogOpen: true,\n      });\n      Window.openExternalURL(\n        getRedirectToCheckoutUrl(\n          plan.planId || '',\n          profile.uid,\n          profile.email || ''\n        )\n      );\n    }\n  };\n\n  handleUpdatedSubscriptionSuccess = (\n    i18n: I18nType,\n    userProfile: UserProfile,\n    plan: PlanDetails\n  ) => {\n    userProfile.onRefreshUserProfile();\n    this.setState({ isLoading: false });\n    if (plan.planId) {\n      showMessageBox(\n        i18n._(\n          t`Congratulations, your new subscription is now active!\\n\\nYou can now use the services unlocked with this plan.`\n        )\n      );\n    } else {\n      showMessageBox(\n        i18n._(\n          t`Your subscription was properly cancelled. Sorry to see you go!`\n        )\n      );\n    }\n  };\n\n  handleUpdatedSubscriptionFailure = (i18n: I18nType, rawError: Error) => {\n    this.setState({ isLoading: false });\n    showErrorBox({\n      message: i18n._(\n        t`Your subscription could not be updated. Please try again later!`\n      ),\n      rawError,\n      errorId: 'subscription-update-error',\n    });\n  };\n\n  _renderPrice(plan: PlanDetails): React.Node {\n    return !plan.monthlyPriceInEuros ? (\n      <Trans>Free</Trans>\n    ) : (\n      <Trans>{plan.monthlyPriceInEuros}€/month</Trans>\n    );\n  }\n\n  _isLoading = (userProfile: UserProfile) =>\n    !userProfile.subscription || !userProfile.profile || this.state.isLoading;\n\n  render() {\n    const { open, onClose } = this.props;\n    const { subscriptionPendingDialogOpen } = this.state;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <UserProfileContext.Consumer>\n            {(userProfile: UserProfile) => (\n              <ThemeConsumer>\n                {muiTheme => (\n                  <Dialog\n                    actions={[\n                      <FlatButton\n                        label={<Trans>Close</Trans>}\n                        key=\"close\"\n                        primary={false}\n                        onClick={onClose}\n                      />,\n                    ]}\n                    onRequestClose={onClose}\n                    cannotBeDismissed={true}\n                    open={open}\n                    noMargin\n                  >\n                    <Column>\n                      <Line>\n                        <Text>\n                          <Trans>\n                            Get a subscription to package your games for\n                            Android, Windows, macOS and Linux, use live preview\n                            over wifi and more. With a subscription, you're also\n                            supporting the development of GDevelop, which is an\n                            open-source software.\n                          </Trans>\n                        </Text>\n                      </Line>\n                    </Column>\n                    {getSubscriptionPlans().map(plan => (\n                      <Card key={plan.planId || ''} style={styles.card}>\n                        <CardHeader\n                          title={\n                            <span>\n                              <b>{plan.name}</b> - {this._renderPrice(plan)}\n                            </span>\n                          }\n                          subheader={\n                            plan.smallDescription\n                              ? i18n._(plan.smallDescription)\n                              : ''\n                          }\n                        />\n                        <CardContent>\n                          {plan.descriptionBullets.map(\n                            (descriptionBullet, index) => (\n                              <Column key={index} expand>\n                                <Line noMargin alignItems=\"center\">\n                                  {userProfile.subscription &&\n                                  userProfile.subscription.planId ===\n                                    plan.planId ? (\n                                    <CheckCircle\n                                      style={{\n                                        ...styles.bulletIcon,\n                                        color: muiTheme.message.valid,\n                                      }}\n                                    />\n                                  ) : (\n                                    <CheckCircle style={styles.bulletIcon} />\n                                  )}\n                                  <Text style={styles.bulletText}>\n                                    {i18n._(descriptionBullet.message)}{' '}\n                                    {descriptionBullet.isLocalAppOnly && (\n                                      <Trans>(on the desktop app only)</Trans>\n                                    )}\n                                  </Text>\n                                </Line>\n                              </Column>\n                            )\n                          )}\n                          <Text style={styles.descriptionText}>\n                            {plan.extraDescription\n                              ? i18n._(plan.extraDescription)\n                              : ''}\n                          </Text>\n                        </CardContent>\n                        <CardActions style={styles.actions}>\n                          {userProfile.subscription &&\n                          userProfile.subscription.planId === plan.planId ? (\n                            <FlatButton\n                              disabled\n                              label={<Trans>This is your current plan</Trans>}\n                              onClick={() =>\n                                this.choosePlan(i18n, userProfile, plan)\n                              }\n                            />\n                          ) : plan.planId ? (\n                            <LeftLoader\n                              isLoading={this._isLoading(userProfile)}\n                            >\n                              <RaisedButton\n                                primary\n                                disabled={this._isLoading(userProfile)}\n                                label={<Trans>Choose this plan</Trans>}\n                                onClick={() =>\n                                  this.choosePlan(i18n, userProfile, plan)\n                                }\n                              />\n                            </LeftLoader>\n                          ) : (\n                            <LeftLoader\n                              isLoading={this._isLoading(userProfile)}\n                            >\n                              <FlatButton\n                                disabled={this._isLoading(userProfile)}\n                                label={<Trans>Cancel your subscription</Trans>}\n                                onClick={() =>\n                                  this.choosePlan(i18n, userProfile, plan)\n                                }\n                              />\n                            </LeftLoader>\n                          )}\n                        </CardActions>\n                      </Card>\n                    ))}\n                    <Column>\n                      <Line>\n                        <EmptyMessage>\n                          <Trans>\n                            Subscriptions can be stopped at any time. GDevelop\n                            uses Stripe.com for secure payment. No credit card\n                            data is stored by GDevelop: everything is managed by\n                            Stripe secure infrastructure.\n                          </Trans>\n                        </EmptyMessage>\n                      </Line>\n                    </Column>\n                    {!userProfile.authenticated && (\n                      <PlaceholderMessage>\n                        <Text>\n                          <Trans>\n                            Create a GDevelop account to continue. It's free and\n                            you'll be able to access to online services like\n                            one-click build for Android:\n                          </Trans>\n                        </Text>\n                        <RaisedButton\n                          label={<Trans>Create my account</Trans>}\n                          primary\n                          onClick={userProfile.onLogin}\n                        />\n                        <FlatButton\n                          label={<Trans>Not now, thanks</Trans>}\n                          onClick={onClose}\n                        />\n                      </PlaceholderMessage>\n                    )}\n                    {subscriptionPendingDialogOpen && (\n                      <SubscriptionPendingDialog\n                        userProfile={userProfile}\n                        onClose={() => {\n                          this.setState(\n                            {\n                              subscriptionPendingDialogOpen: false,\n                            },\n                            () => userProfile.onRefreshUserProfile()\n                          );\n                        }}\n                      />\n                    )}\n                  </Dialog>\n                )}\n              </ThemeConsumer>\n            )}\n          </UserProfileContext.Consumer>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport Changelog from '.';\nimport Text from '../../UI/Text';\n\ntype Props = {|\n  open: boolean,\n  onClose: () => void,\n|};\n\ntype State = {||};\n\nexport default class ChangelogDialog extends React.Component<Props, State> {\n  render() {\n    const { open, onClose } = this.props;\n    if (!open) {\n      // Don't render anything, to avoid in particular sending useless requests.\n      return null;\n    }\n\n    const actions = [\n      <FlatButton\n        key=\"close\"\n        label={<Trans>Close</Trans>}\n        primary={true}\n        onClick={onClose}\n      />,\n    ];\n\n    return (\n      <Dialog\n        title={<Trans>What's new in GDevelop?</Trans>}\n        actions={actions}\n        open={open}\n        onRequestClose={onClose}\n        cannotBeDismissed={false}\n      >\n        <Text>\n          <Trans>\n            GDevelop was upgraded to a new version! Check out the changes.\n          </Trans>\n        </Text>\n        <Changelog\n          onUpdated={() => {\n            this.forceUpdate(); /*Force update to ensure dialog is properly positionned*/\n          }}\n        />\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ChangelogDialog from './ChangelogDialog';\nimport PreferencesContext from '../Preferences/PreferencesContext';\n\ntype ContainerProps = {|\n  defaultOpen: boolean,\n|};\n\ntype ContainerState = {|\n  open: boolean,\n|};\n\nclass ChangelogDialogContainer extends React.Component<\n  ContainerProps,\n  ContainerState\n> {\n  state = {\n    open: this.props.defaultOpen,\n  };\n\n  render() {\n    const { open } = this.state;\n    return (\n      <ChangelogDialog\n        open={open}\n        onClose={() =>\n          this.setState({\n            open: false,\n          })\n        }\n      />\n    );\n  }\n}\n\n/**\n * The container showing the ChangelogDialog only if a a new version\n * of GDevelop is detected.\n */\nexport default (props: {||}) => (\n  <PreferencesContext.Consumer>\n    {({ values, verifyIfIsNewVersion }) => (\n      <ChangelogDialogContainer\n        defaultOpen={verifyIfIsNewVersion() && values.autoDisplayChangelog}\n      />\n    )}\n  </PreferencesContext.Consumer>\n);\n","// @flow\nimport * as React from 'react';\nimport {\n  useCommand,\n  useCommandWithOptions,\n} from '../CommandPalette/CommandHooks';\nimport { type EventMetadata } from './EnumerateEventsMetadata';\n\ntype Props = {|\n  onAddStandardEvent: () => void,\n  onAddSubEvent: () => void,\n  canAddSubEvent: boolean,\n  onAddCommentEvent: () => void,\n  allEventsMetadata: Array<EventMetadata>,\n  onAddEvent: (eventType: string) => Array<gdBaseEvent>,\n  onRemove: () => void,\n  canRemove: boolean,\n  undo: () => void,\n  canUndo: boolean,\n  redo: () => void,\n  canRedo: boolean,\n  onToggleSearchPanel: () => void,\n  onOpenSettings?: ?() => void,\n|};\n\nconst ToolbarCommands = (props: Props) => {\n  const { onAddEvent } = props;\n\n  useCommand('ADD_STANDARD_EVENT', true, {\n    handler: props.onAddStandardEvent,\n  });\n\n  useCommand('ADD_SUBEVENT', props.canAddSubEvent, {\n    handler: props.onAddSubEvent,\n  });\n\n  useCommand('ADD_COMMENT_EVENT', true, {\n    handler: props.onAddCommentEvent,\n  });\n\n  useCommandWithOptions('CHOOSE_AND_ADD_EVENT', true, {\n    generateOptions: React.useCallback(\n      () =>\n        props.allEventsMetadata.map(metadata => ({\n          text: metadata.fullName,\n          handler: () => {\n            onAddEvent(metadata.type);\n          },\n        })),\n      [props.allEventsMetadata, onAddEvent]\n    ),\n  });\n\n  useCommand('DELETE_SELECTION', props.canRemove, {\n    handler: props.onRemove,\n  });\n\n  useCommand('EVENTS_EDITOR_UNDO', props.canUndo, {\n    handler: props.undo,\n  });\n\n  useCommand('EVENTS_EDITOR_REDO', props.canRedo, {\n    handler: props.redo,\n  });\n\n  useCommand('SEARCH_EVENTS', true, {\n    handler: props.onToggleSearchPanel,\n  });\n\n  useCommand('OPEN_EXTENSION_SETTINGS', !!props.onOpenSettings, {\n    handler: props.onOpenSettings || (() => {}),\n  });\n\n  return null;\n};\n\nexport default ToolbarCommands;\n","//@flow\nimport { t } from '@lingui/macro';\nimport React, { PureComponent } from 'react';\nimport { ToolbarGroup } from '../UI/Toolbar';\nimport ToolbarSeparator from '../UI/ToolbarSeparator';\nimport ToolbarIcon from '../UI/ToolbarIcon';\nimport ElementWithMenu from '../UI/Menu/ElementWithMenu';\nimport ToolbarCommands from './ToolbarCommands';\nimport { type EventMetadata } from './EnumerateEventsMetadata';\n\ntype Props = {|\n  onAddStandardEvent: () => void,\n  onAddSubEvent: () => void,\n  canAddSubEvent: boolean,\n  onAddCommentEvent: () => void,\n  allEventsMetadata: Array<EventMetadata>,\n  onAddEvent: (eventType: string) => Array<gdBaseEvent>,\n  onRemove: () => void,\n  canRemove: boolean,\n  undo: () => void,\n  canUndo: boolean,\n  redo: () => void,\n  canRedo: boolean,\n  onToggleSearchPanel: () => void,\n  onOpenSettings?: ?() => void,\n|};\n\nexport class Toolbar extends PureComponent<Props> {\n  render() {\n    return (\n      <>\n        <ToolbarCommands {...this.props} />\n        <ToolbarGroup lastChild>\n          <ToolbarIcon\n            onClick={this.props.onAddStandardEvent}\n            src=\"res/ribbon_default/eventadd32.png\"\n            tooltip={t`Add a new empty event`}\n          />\n          <ToolbarIcon\n            onClick={this.props.onAddSubEvent}\n            src=\"res/ribbon_default/subeventadd32.png\"\n            disabled={!this.props.canAddSubEvent}\n            tooltip={t`Add a sub-event to the selected event`}\n          />\n          <ToolbarIcon\n            onClick={this.props.onAddCommentEvent}\n            src=\"res/ribbon_default/commentaireadd32.png\"\n            tooltip={t`Add a comment`}\n          />\n          <ElementWithMenu\n            element={\n              <ToolbarIcon\n                src=\"res/ribbon_default/add32.png\"\n                tooltip={t`Choose and add an event`}\n              />\n            }\n            buildMenuTemplate={() =>\n              this.props.allEventsMetadata.map(metadata => {\n                return {\n                  label: metadata.fullName,\n                  click: () => {\n                    this.props.onAddEvent(metadata.type);\n                  },\n                };\n              })\n            }\n          />\n          <ToolbarSeparator />\n          <ToolbarIcon\n            onClick={this.props.onRemove}\n            src=\"res/ribbon_default/deleteselected32.png\"\n            disabled={!this.props.canRemove}\n            tooltip={t`Delete the selected event(s)`}\n          />\n          <ToolbarIcon\n            onClick={this.props.undo}\n            src=\"res/ribbon_default/undo32.png\"\n            disabled={!this.props.canUndo}\n            tooltip={t`Undo the last changes`}\n          />\n          <ToolbarIcon\n            onClick={this.props.redo}\n            src=\"res/ribbon_default/redo32.png\"\n            disabled={!this.props.canRedo}\n            tooltip={t`Redo the last changes`}\n          />\n          <ToolbarSeparator />\n          <ToolbarIcon\n            onClick={() => this.props.onToggleSearchPanel()}\n            src=\"res/ribbon_default/search32.png\"\n            tooltip={t`Search in events`}\n            acceleratorString={'CmdOrCtrl+F'}\n          />\n          {this.props.onOpenSettings && <ToolbarSeparator />}\n          {this.props.onOpenSettings && (\n            <ToolbarIcon\n              onClick={this.props.onOpenSettings}\n              src=\"res/ribbon_default/pref32.png\"\n              tooltip={t`Open settings`}\n            />\n          )}\n        </ToolbarGroup>\n      </>\n    );\n  }\n}\n\nexport default Toolbar;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { AutoSizer } from 'react-virtualized';\nimport SortableVirtualizedItemList from '../UI/SortableVirtualizedItemList';\nimport SearchBar from '../UI/SearchBar';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport Background from '../UI/Background';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport {\n  enumerateEventsFunctions,\n  filterEventFunctionsList,\n} from './EnumerateEventsFunctions';\nimport Clipboard, { SafeExtractor } from '../Utils/Clipboard';\nimport Window from '../Utils/Window';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\n\nconst EVENTS_FUNCTION_CLIPBOARD_KIND = 'Events Function';\n\nconst styles = {\n  listContainer: {\n    flex: 1,\n  },\n};\n\nexport type EventsFunctionCreationParameters = {|\n  functionType: 0 | 1 | 2,\n  name: ?string,\n|};\n\nconst getEventsFunctionName = (eventsFunction: gdEventsFunction) =>\n  eventsFunction.getName();\n\ntype State = {|\n  renamedEventsFunction: ?gdEventsFunction,\n  searchText: string,\n|};\n\ntype Props = {|\n  project: gdProject,\n  eventsFunctionsContainer: gdEventsFunctionsContainer,\n  selectedEventsFunction: ?gdEventsFunction,\n  onSelectEventsFunction: (eventsFunction: ?gdEventsFunction) => void,\n  onDeleteEventsFunction: (\n    eventsFunction: gdEventsFunction,\n    cb: (boolean) => void\n  ) => void,\n  canRename: (eventsFunction: gdEventsFunction) => boolean,\n  onRenameEventsFunction: (\n    eventsFunction: gdEventsFunction,\n    newName: string,\n    cb: (boolean) => void\n  ) => void,\n  onAddEventsFunction: (\n    (parameters: ?EventsFunctionCreationParameters) => void\n  ) => void,\n  onEventsFunctionAdded: (eventsFunction: gdEventsFunction) => void,\n  renderHeader?: () => React.Node,\n  unsavedChanges?: ?UnsavedChanges,\n|};\n\nexport default class EventsFunctionsList extends React.Component<Props, State> {\n  static defaultProps = {\n    onDeleteEventsFunction: (\n      eventsFunction: gdEventsFunction,\n      cb: boolean => void\n    ) => cb(true),\n    onRenameEventsFunction: (\n      eventsFunction: gdEventsFunction,\n      newName: string,\n      cb: boolean => void\n    ) => cb(true),\n  };\n\n  sortableList: any;\n  state: State = {\n    renamedEventsFunction: null,\n    searchText: '',\n  };\n\n  _deleteEventsFunction = (\n    eventsFunction: gdEventsFunction,\n    { askForConfirmation }: {| askForConfirmation: boolean |}\n  ) => {\n    const { eventsFunctionsContainer } = this.props;\n\n    if (askForConfirmation) {\n      const answer = Window.showConfirmDialog(\n        \"Are you sure you want to remove this function? This can't be undone.\"\n      );\n      if (!answer) return;\n    }\n\n    this.props.onDeleteEventsFunction(eventsFunction, doRemove => {\n      if (!doRemove) return;\n\n      eventsFunctionsContainer.removeEventsFunction(eventsFunction.getName());\n      this._onEventsFunctionModified();\n    });\n  };\n\n  _editName = (eventsFunction: ?gdEventsFunction) => {\n    this.setState(\n      {\n        renamedEventsFunction: eventsFunction,\n      },\n      () => {\n        if (this.sortableList) this.sortableList.forceUpdateGrid();\n      }\n    );\n  };\n\n  _rename = (eventsFunction: gdEventsFunction, newName: string) => {\n    const { eventsFunctionsContainer } = this.props;\n    this.setState({\n      renamedEventsFunction: null,\n    });\n\n    if (eventsFunction.getName() === newName) return;\n\n    if (eventsFunctionsContainer.hasEventsFunctionNamed(newName)) {\n      showWarningBox('Another function with this name already exists.', {\n        delayToNextTick: true,\n      });\n      return;\n    }\n\n    this.props.onRenameEventsFunction(eventsFunction, newName, doRename => {\n      if (!doRename) return;\n      eventsFunction.setName(newName);\n      this._onEventsFunctionModified();\n    });\n  };\n\n  _moveSelectionTo = (destinationEventsFunction: gdEventsFunction) => {\n    const { eventsFunctionsContainer, selectedEventsFunction } = this.props;\n    if (!selectedEventsFunction) return;\n\n    eventsFunctionsContainer.moveEventsFunction(\n      eventsFunctionsContainer.getEventsFunctionPosition(\n        selectedEventsFunction\n      ),\n      eventsFunctionsContainer.getEventsFunctionPosition(\n        destinationEventsFunction\n      )\n    );\n\n    this.forceUpdateList();\n  };\n\n  forceUpdateList = () => {\n    this._onEventsFunctionModified();\n    if (this.sortableList) this.sortableList.forceUpdateGrid();\n  };\n\n  _copyEventsFunction = (eventsFunction: gdEventsFunction) => {\n    Clipboard.set(EVENTS_FUNCTION_CLIPBOARD_KIND, {\n      eventsFunction: serializeToJSObject(eventsFunction),\n      name: eventsFunction.getName(),\n    });\n  };\n\n  _cutEventsFunction = (eventsFunction: gdEventsFunction) => {\n    this._copyEventsFunction(eventsFunction);\n    this._deleteEventsFunction(eventsFunction, { askForConfirmation: false });\n  };\n\n  _pasteEventsFunction = (index: number) => {\n    if (!Clipboard.has(EVENTS_FUNCTION_CLIPBOARD_KIND)) return;\n\n    const clipboardContent = Clipboard.get(EVENTS_FUNCTION_CLIPBOARD_KIND);\n    const copiedEventsFunction = SafeExtractor.extractObjectProperty(\n      clipboardContent,\n      'eventsFunction'\n    );\n    const name = SafeExtractor.extractStringProperty(clipboardContent, 'name');\n    if (!name || !copiedEventsFunction) return;\n\n    const { project, eventsFunctionsContainer } = this.props;\n\n    const newName = newNameGenerator(name, name =>\n      eventsFunctionsContainer.hasEventsFunctionNamed(name)\n    );\n\n    const newEventsFunction = eventsFunctionsContainer.insertNewEventsFunction(\n      newName,\n      index\n    );\n\n    unserializeFromJSObject(\n      newEventsFunction,\n      copiedEventsFunction,\n      'unserializeFrom',\n      project\n    );\n    newEventsFunction.setName(newName);\n    this.props.onEventsFunctionAdded(newEventsFunction);\n\n    this._onEventsFunctionModified();\n  };\n\n  _onEventsFunctionModified() {\n    if (this.props.unsavedChanges)\n      this.props.unsavedChanges.triggerUnsavedChanges();\n    this.forceUpdate();\n  }\n\n  _renderEventsFunctionMenuTemplate = (i18n: I18nType) => (\n    eventsFunction: gdEventsFunction,\n    index: number\n  ) => {\n    return [\n      {\n        label: i18n._(t`Rename`),\n        click: () => this._editName(eventsFunction),\n        enabled: this.props.canRename(eventsFunction),\n      },\n      {\n        label: i18n._(t`Remove`),\n        click: () =>\n          this._deleteEventsFunction(eventsFunction, {\n            askForConfirmation: true,\n          }),\n      },\n      {\n        type: 'separator',\n      },\n      {\n        label: i18n._(t`Copy`),\n        click: () => this._copyEventsFunction(eventsFunction),\n      },\n      {\n        label: i18n._(t`Cut`),\n        click: () => this._cutEventsFunction(eventsFunction),\n      },\n      {\n        label: i18n._(t`Paste`),\n        enabled: Clipboard.has(EVENTS_FUNCTION_CLIPBOARD_KIND),\n        click: () => this._pasteEventsFunction(index),\n      },\n    ];\n  };\n\n  _addNewEventsFunction = () => {\n    const { eventsFunctionsContainer } = this.props;\n\n    this.props.onAddEventsFunction(\n      (parameters: ?EventsFunctionCreationParameters) => {\n        if (!parameters) {\n          return;\n        }\n\n        const eventsFunctionName =\n          parameters.name ||\n          newNameGenerator('Function', name =>\n            eventsFunctionsContainer.hasEventsFunctionNamed(name)\n          );\n\n        const eventsFunction = eventsFunctionsContainer.insertNewEventsFunction(\n          eventsFunctionName,\n          eventsFunctionsContainer.getEventsFunctionsCount()\n        );\n        eventsFunction.setFunctionType(parameters.functionType);\n        this.props.onEventsFunctionAdded(eventsFunction);\n        this._onEventsFunctionModified();\n      }\n    );\n  };\n\n  render() {\n    const {\n      project,\n      eventsFunctionsContainer,\n      selectedEventsFunction,\n      onSelectEventsFunction,\n      renderHeader,\n    } = this.props;\n    const { searchText } = this.state;\n\n    const list = filterEventFunctionsList(\n      enumerateEventsFunctions(eventsFunctionsContainer),\n      searchText\n    );\n\n    // Force List component to be mounted again if project or objectsContainer\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const listKey = project.ptr + ';' + eventsFunctionsContainer.ptr;\n\n    return (\n      <Background>\n        {renderHeader ? renderHeader() : null}\n        <div style={styles.listContainer}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <I18n>\n                {({ i18n }) => (\n                  <SortableVirtualizedItemList\n                    key={listKey}\n                    ref={sortableList => (this.sortableList = sortableList)}\n                    fullList={list}\n                    width={width}\n                    height={height}\n                    onAddNewItem={this._addNewEventsFunction}\n                    addNewItemLabel={<Trans>Add a new function</Trans>}\n                    getItemName={getEventsFunctionName}\n                    selectedItems={\n                      selectedEventsFunction ? [selectedEventsFunction] : []\n                    }\n                    onItemSelected={onSelectEventsFunction}\n                    renamedItem={this.state.renamedEventsFunction}\n                    onRename={this._rename}\n                    onMoveSelectionToItem={this._moveSelectionTo}\n                    buildMenuTemplate={this._renderEventsFunctionMenuTemplate(\n                      i18n\n                    )}\n                    reactDndType=\"GD_EVENTS_FUNCTION\"\n                  />\n                )}\n              </I18n>\n            )}\n          </AutoSizer>\n        </div>\n        <SearchBar\n          value={searchText}\n          onRequestSearch={() => {}}\n          onChange={text =>\n            this.setState({\n              searchText: text,\n            })\n          }\n        />\n      </Background>\n    );\n  }\n}\n","//@flow\nimport { mapFor } from '../Utils/MapFor';\n\nexport const enumerateEventsFunctions = (\n  eventsFunctionsContainer: gdEventsFunctionsContainer\n): Array<gdEventsFunction> =>\n  mapFor(0, eventsFunctionsContainer.getEventsFunctionsCount(), i =>\n    eventsFunctionsContainer.getEventsFunctionAt(i)\n  );\n\nexport const filterEventFunctionsList = (\n  list: Array<gdEventsFunction>,\n  searchText: string\n): Array<gdEventsFunction> => {\n  if (!searchText) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list.filter(\n    (item: any) =>\n      item\n        .getName()\n        .toLowerCase()\n        .indexOf(lowercaseSearchText) !== -1\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { AutoSizer } from 'react-virtualized';\nimport SortableVirtualizedItemList from '../UI/SortableVirtualizedItemList';\nimport SearchBar from '../UI/SearchBar';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport Background from '../UI/Background';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport {\n  enumerateEventsBasedBehaviors,\n  filterEventsBasedBehaviorsList,\n} from './EnumerateEventsBasedBehaviors';\nimport Clipboard, { SafeExtractor } from '../Utils/Clipboard';\nimport Window from '../Utils/Window';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\n\nconst EVENTS_BASED_BEHAVIOR_CLIPBOARD_KIND = 'Events Based Behavior';\n\nconst styles = {\n  listContainer: {\n    flex: 1,\n  },\n};\n\ntype State = {|\n  renamedEventsBasedBehavior: ?gdEventsBasedBehavior,\n  searchText: string,\n|};\n\nconst getEventsBasedBehaviorName = (\n  eventsBasedBehavior: gdEventsBasedBehavior\n) => eventsBasedBehavior.getName();\n\ntype Props = {|\n  project: gdProject,\n  eventsBasedBehaviorsList: gdEventsBasedBehaviorsList,\n  selectedEventsBasedBehavior: ?gdEventsBasedBehavior,\n  onSelectEventsBasedBehavior: (\n    eventsBasedBehavior: ?gdEventsBasedBehavior\n  ) => void,\n  onDeleteEventsBasedBehavior: (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    cb: (boolean) => void\n  ) => void,\n  onRenameEventsBasedBehavior: (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    newName: string,\n    cb: (boolean) => void\n  ) => void,\n  onEventsBasedBehaviorRenamed: (\n    eventsBasedBehavior: gdEventsBasedBehavior\n  ) => void,\n  onEditProperties: (eventsBasedBehavior: gdEventsBasedBehavior) => void,\n  unsavedChanges?: ?UnsavedChanges,\n|};\n\nexport default class EventsBasedBehaviorsList extends React.Component<\n  Props,\n  State\n> {\n  static defaultProps = {\n    onDeleteEventsBasedBehavior: (\n      eventsBasedBehavior: gdEventsBasedBehavior,\n      cb: boolean => void\n    ) => cb(true),\n    onRenameEventsBasedBehavior: (\n      eventsBasedBehavior: gdEventsBasedBehavior,\n      newName: string,\n      cb: boolean => void\n    ) => cb(true),\n  };\n\n  sortableList: ?SortableVirtualizedItemList<gdEventsBasedBehavior>;\n  state: State = {\n    renamedEventsBasedBehavior: null,\n    searchText: '',\n  };\n\n  _deleteEventsBasedBehavior = (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    { askForConfirmation }: {| askForConfirmation: boolean |}\n  ) => {\n    const { eventsBasedBehaviorsList } = this.props;\n\n    if (askForConfirmation) {\n      const answer = Window.showConfirmDialog(\n        \"Are you sure you want to remove this behavior? This can't be undone.\"\n      );\n      if (!answer) return;\n    }\n\n    this.props.onDeleteEventsBasedBehavior(eventsBasedBehavior, doRemove => {\n      if (!doRemove) return;\n\n      eventsBasedBehaviorsList.remove(eventsBasedBehavior.getName());\n      this._onEventsBasedBehaviorModified();\n    });\n  };\n\n  _editName = (renamedEventsBasedBehavior: ?gdEventsBasedBehavior) => {\n    this.setState(\n      {\n        renamedEventsBasedBehavior,\n      },\n      () => {\n        if (this.sortableList) this.sortableList.forceUpdateGrid();\n      }\n    );\n  };\n\n  _rename = (eventsBasedBehavior: gdEventsBasedBehavior, newName: string) => {\n    const { eventsBasedBehaviorsList } = this.props;\n    this.setState({\n      renamedEventsBasedBehavior: null,\n    });\n\n    if (eventsBasedBehavior.getName() === newName) return;\n\n    if (eventsBasedBehaviorsList.has(newName)) {\n      showWarningBox('Another behavior with this name already exists.', {\n        delayToNextTick: true,\n      });\n      return;\n    }\n\n    this.props.onRenameEventsBasedBehavior(\n      eventsBasedBehavior,\n      newName,\n      doRename => {\n        if (!doRename) return;\n        eventsBasedBehavior.setName(newName);\n        this._onEventsBasedBehaviorModified();\n        this.props.onEventsBasedBehaviorRenamed(eventsBasedBehavior);\n      }\n    );\n  };\n\n  _moveSelectionTo = (\n    destinationEventsBasedBehavior: gdEventsBasedBehavior\n  ) => {\n    const {\n      eventsBasedBehaviorsList,\n      selectedEventsBasedBehavior,\n    } = this.props;\n    if (!selectedEventsBasedBehavior) return;\n\n    eventsBasedBehaviorsList.move(\n      eventsBasedBehaviorsList.getPosition(selectedEventsBasedBehavior),\n      eventsBasedBehaviorsList.getPosition(destinationEventsBasedBehavior)\n    );\n\n    this.forceUpdateList();\n  };\n\n  forceUpdateList = () => {\n    this._onEventsBasedBehaviorModified();\n    if (this.sortableList) this.sortableList.forceUpdateGrid();\n  };\n\n  _copyEventsBasedBehavior = (eventsBasedBehavior: gdEventsBasedBehavior) => {\n    Clipboard.set(EVENTS_BASED_BEHAVIOR_CLIPBOARD_KIND, {\n      eventsBasedBehavior: serializeToJSObject(eventsBasedBehavior),\n      name: eventsBasedBehavior.getName(),\n    });\n  };\n\n  _cutEventsBasedBehavior = (eventsBasedBehavior: gdEventsBasedBehavior) => {\n    this._copyEventsBasedBehavior(eventsBasedBehavior);\n    this._deleteEventsBasedBehavior(eventsBasedBehavior, {\n      askForConfirmation: false,\n    });\n  };\n\n  _pasteEventsBasedBehavior = (index: number) => {\n    if (!Clipboard.has(EVENTS_BASED_BEHAVIOR_CLIPBOARD_KIND)) return;\n\n    const clipboardContent = Clipboard.get(\n      EVENTS_BASED_BEHAVIOR_CLIPBOARD_KIND\n    );\n    const copiedEventsBasedBehavior = SafeExtractor.extractObjectProperty(\n      clipboardContent,\n      'eventsBasedBehavior'\n    );\n    const name = SafeExtractor.extractStringProperty(clipboardContent, 'name');\n    if (!name || !copiedEventsBasedBehavior) return;\n\n    const { project, eventsBasedBehaviorsList } = this.props;\n\n    const newName = newNameGenerator(name, name =>\n      eventsBasedBehaviorsList.has(name)\n    );\n\n    const newEventsBasedBehavior = eventsBasedBehaviorsList.insertNew(\n      newName,\n      index\n    );\n\n    unserializeFromJSObject(\n      newEventsBasedBehavior,\n      copiedEventsBasedBehavior,\n      'unserializeFrom',\n      project\n    );\n    newEventsBasedBehavior.setName(newName);\n\n    this._onEventsBasedBehaviorModified();\n  };\n\n  _renderEventsBasedBehaviorMenuTemplate = (i18n: I18nType) => (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    index: number\n  ) => {\n    return [\n      {\n        label: i18n._(t`Properties`),\n        click: () => this.props.onEditProperties(eventsBasedBehavior),\n      },\n      {\n        type: 'separator',\n      },\n      {\n        label: i18n._(t`Rename`),\n        click: () => this._editName(eventsBasedBehavior),\n      },\n      {\n        label: i18n._(t`Remove`),\n        click: () =>\n          this._deleteEventsBasedBehavior(eventsBasedBehavior, {\n            askForConfirmation: true,\n          }),\n      },\n      {\n        type: 'separator',\n      },\n      {\n        label: i18n._(t`Copy`),\n        click: () => this._copyEventsBasedBehavior(eventsBasedBehavior),\n      },\n      {\n        label: i18n._(t`Cut`),\n        click: () => this._cutEventsBasedBehavior(eventsBasedBehavior),\n      },\n      {\n        label: i18n._(t`Paste`),\n        enabled: Clipboard.has(EVENTS_BASED_BEHAVIOR_CLIPBOARD_KIND),\n        click: () => this._pasteEventsBasedBehavior(index),\n      },\n    ];\n  };\n\n  _addNewEventsBasedBehavior = () => {\n    const { eventsBasedBehaviorsList } = this.props;\n\n    const name = newNameGenerator('MyBehavior', name =>\n      eventsBasedBehaviorsList.has(name)\n    );\n    eventsBasedBehaviorsList.insertNew(\n      name,\n      eventsBasedBehaviorsList.getCount()\n    );\n    this._onEventsBasedBehaviorModified();\n  };\n\n  _onEventsBasedBehaviorModified() {\n    if (this.props.unsavedChanges)\n      this.props.unsavedChanges.triggerUnsavedChanges();\n    this.forceUpdate();\n  }\n\n  render() {\n    const {\n      project,\n      eventsBasedBehaviorsList,\n      selectedEventsBasedBehavior,\n      onSelectEventsBasedBehavior,\n    } = this.props;\n    const { searchText } = this.state;\n\n    const list = filterEventsBasedBehaviorsList(\n      enumerateEventsBasedBehaviors(eventsBasedBehaviorsList),\n      searchText\n    );\n\n    // Force List component to be mounted again if project or eventsBasedBehaviorsList\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const listKey = project.ptr + ';' + eventsBasedBehaviorsList.ptr;\n\n    return (\n      <Background>\n        <div style={styles.listContainer}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <I18n>\n                {({ i18n }) => (\n                  <SortableVirtualizedItemList\n                    key={listKey}\n                    ref={sortableList => (this.sortableList = sortableList)}\n                    fullList={list}\n                    width={width}\n                    height={height}\n                    onAddNewItem={this._addNewEventsBasedBehavior}\n                    addNewItemLabel={<Trans>Add a new behavior</Trans>}\n                    getItemName={getEventsBasedBehaviorName}\n                    selectedItems={\n                      selectedEventsBasedBehavior\n                        ? [selectedEventsBasedBehavior]\n                        : []\n                    }\n                    onItemSelected={onSelectEventsBasedBehavior}\n                    renamedItem={this.state.renamedEventsBasedBehavior}\n                    onRename={this._rename}\n                    onMoveSelectionToItem={this._moveSelectionTo}\n                    buildMenuTemplate={this._renderEventsBasedBehaviorMenuTemplate(\n                      i18n\n                    )}\n                    reactDndType=\"GD_EVENTS_BASED_BEHAVIOR\"\n                  />\n                )}\n              </I18n>\n            )}\n          </AutoSizer>\n        </div>\n        <SearchBar\n          value={searchText}\n          onRequestSearch={() => {}}\n          onChange={text =>\n            this.setState({\n              searchText: text,\n            })\n          }\n        />\n      </Background>\n    );\n  }\n}\n","//@flow\nimport { mapVector } from '../Utils/MapFor';\n\nexport const enumerateEventsBasedBehaviors = (\n  eventsFunctionsContainer: gdEventsBasedBehaviorsList\n): Array<gdEventsBasedBehavior> =>\n  mapVector(\n    eventsFunctionsContainer,\n    eventsBasedBehavior => eventsBasedBehavior\n  );\n\nexport const filterEventsBasedBehaviorsList = (\n  list: Array<gdEventsBasedBehavior>,\n  searchText: string\n): Array<gdEventsBasedBehavior> => {\n  if (!searchText) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list.filter(\n    (item: any) =>\n      item\n        .getName()\n        .toLowerCase()\n        .indexOf(lowercaseSearchText) !== -1\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport TextField from '../UI/TextField';\nimport CloudUpload from '@material-ui/icons/CloudUpload';\nimport { Column, Line } from '../UI/Grid';\nimport Dialog from '../UI/Dialog';\nimport HelpButton from '../UI/HelpButton';\nimport EventsFunctionsExtensionsContext, {\n  type EventsFunctionsExtensionsState,\n} from '../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext';\nimport RaisedButton from '../UI/RaisedButton';\nimport Window from '../Utils/Window';\nimport Text from '../UI/Text';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport { ResourceStore } from '../AssetStore/ResourceStore';\nimport { ColumnStackLayout, TextFieldWithButtonLayout } from '../UI/Layout';\nimport axios from 'axios';\nimport useForceUpdate from '../Utils/UseForceUpdate';\nimport { useIsMounted } from '../Utils/UseIsMounted';\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport {\n  getHelpLink,\n  isRelativePathToDocumentationRoot,\n  isDocumentationAbsoluteUrl,\n} from '../Utils/HelpLink';\n\ntype Props = {|\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  onClose: () => void,\n  open: boolean,\n|};\n\nconst exportExtension = (\n  eventsFunctionsExtensionsState: EventsFunctionsExtensionsState,\n  eventsFunctionsExtension: gdEventsFunctionsExtension\n) => {\n  const eventsFunctionsExtensionWriter = eventsFunctionsExtensionsState.getEventsFunctionsExtensionWriter();\n  if (!eventsFunctionsExtensionWriter)\n    return Promise.reject(new Error('Not supported'));\n\n  return eventsFunctionsExtensionWriter\n    .chooseEventsFunctionExtensionFile()\n    .then(pathOrUrl => {\n      if (!pathOrUrl) return;\n\n      eventsFunctionsExtensionWriter\n        .writeEventsFunctionsExtension(eventsFunctionsExtension, pathOrUrl)\n        .then();\n    });\n};\n\nconst downloadSvgAsBase64 = async (url: string): Promise<string> => {\n  try {\n    const response = await axios.get(url, { responseType: 'arraybuffer' });\n\n    const image = btoa(\n      new Uint8Array(response.data).reduce(\n        (data, byte) => data + String.fromCharCode(byte),\n        ''\n      )\n    );\n    if (image.length > 100 * 1024) {\n      throw new Error(\n        `Icon is too big (size after base64 conversion: ${image.length})`\n      );\n    }\n\n    const contentType = response.headers\n      ? response.headers['content-type'].toLowerCase()\n      : '';\n    if (contentType !== 'image/svg+xml')\n      throw new Error(\n        `Wrong content type. Got: \"${contentType}\", expected \"image/svg+xml\"`\n      );\n\n    return `data:${contentType};base64,${image}`;\n  } catch (err) {\n    console.error('Unable to import the icon.', err);\n    throw err;\n  }\n};\n\nconst openGitHubIssue = () => {\n  const body = `\n**⚠️ Please edit and complete this before submitting your extension:**\n\n## Describe the extension\nA clear and concise description of what the extension is, how useful it is.\n\n## Checklist\n\n- [ ] Extension has a proper name and description.\n- [ ] Extension has tags (for example: \"platform, brick, breakable\").\n- [ ] All behaviors have a description.\n- [ ] All functions (actions, conditions, expressions) have descriptions.\n- [ ] I confirm that this extension can be intergrated to this GitHub repository, distributed and MIT licensed.\n\n## Extension file\n\nFinally, attach the .json file of your extension here.\n\nYou also may have to create an account on GitHub before posting.\nIf your extension is high quality and useful, it will be added to the list of GDevelop community extensions.\nWhen you're ready, remove this last paragraph and click on \"Submit new issue\". Thanks 🙌`;\n  Window.openExternalURL(\n    `https://github.com/4ian/GDevelop-extensions/issues/new?body=${encodeURIComponent(\n      body\n    )}&title=New%20extension`\n  );\n};\n\ntype HelpPathTextFieldProps = {|\n  i18n: I18nType,\n  helpPath: string,\n  onChangeHelpPath: string => void,\n|};\n\nconst HelpPathTextField = ({\n  i18n,\n  helpPath,\n  onChangeHelpPath,\n}: HelpPathTextFieldProps) => {\n  const isAbsoluteUrl = isDocumentationAbsoluteUrl(helpPath);\n  const isRelativePath = isRelativePathToDocumentationRoot(helpPath);\n  const helperText = helpPath\n    ? (isRelativePath\n        ? i18n._(\n            t`This is a relative path that will open in the GDevelop wiki.`\n          )\n        : i18n._(t`This is link to a webpage.`)) +\n      ` [${i18n._(t`Click here to test the link.`)}](${getHelpLink(helpPath)})`\n    : i18n._(\n        t`This can either be a URL to a web page, or a path starting with a slash that will be opened in the GDevelop wiki. Leave empty if there is no help page, although it's recommended you eventually write one if you distribute the extension.`\n      );\n\n  return (\n    <TextField\n      floatingLabelText={<Trans>Help page URL</Trans>}\n      value={helpPath}\n      onChange={(e, text) => {\n        onChangeHelpPath(text);\n      }}\n      errorText={\n        !!helpPath && !isAbsoluteUrl && !isRelativePath ? (\n          <Trans>\n            This is not a URL starting with \"http://\" or \"https://\".\n          </Trans>\n        ) : null\n      }\n      helperMarkdownText={helperText}\n      fullWidth\n    />\n  );\n};\n\nexport default function OptionsEditorDialog({\n  eventsFunctionsExtension,\n  onClose,\n  open,\n}: Props) {\n  const [exportDialogOpen, setExportDialogOpen] = React.useState(false);\n  const [resourceStoreOpen, setResourceStoreOpen] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const forceUpdate = useForceUpdate();\n  const isMounted = useIsMounted();\n\n  const eventsFunctionsExtensionsState = React.useContext(\n    EventsFunctionsExtensionsContext\n  );\n  const eventsFunctionsExtensionWriter = eventsFunctionsExtensionsState.getEventsFunctionsExtensionWriter();\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Dialog\n          secondaryActions={[\n            <HelpButton key=\"help\" helpPagePath=\"/extensions/create\" />,\n            eventsFunctionsExtensionWriter ? (\n              <FlatButton\n                icon={<CloudUpload />}\n                key=\"export\"\n                label={<Trans>Export extension</Trans>}\n                onClick={() => {\n                  setExportDialogOpen(true);\n                }}\n                disabled={isLoading}\n              />\n            ) : null,\n          ]}\n          actions={[\n            <FlatButton\n              label={<Trans>Close</Trans>}\n              primary={true}\n              keyboardFocused={true}\n              onClick={() => onClose()}\n              disabled={isLoading}\n              key={'close'}\n            />,\n          ]}\n          cannotBeDismissed={true}\n          open={open}\n          title={<Trans>Edit Extension Options</Trans>}\n          onRequestClose={isLoading ? () => {} : onClose}\n        >\n          <ColumnStackLayout noMargin>\n            <TextField\n              floatingLabelText={<Trans>Name</Trans>}\n              value={eventsFunctionsExtension.getName()}\n              disabled\n              fullWidth\n            />\n            <TextFieldWithButtonLayout\n              renderButton={style => (\n                <RaisedButton\n                  onClick={() => {\n                    setResourceStoreOpen(true);\n                  }}\n                  primary\n                  label={<Trans>Choose</Trans>}\n                  disabled={isLoading}\n                  style={style}\n                />\n              )}\n              renderTextField={() => (\n                <SemiControlledTextField\n                  floatingLabelText={<Trans>Icon URL</Trans>}\n                  value={eventsFunctionsExtension.getPreviewIconUrl()}\n                  onChange={text => {\n                    eventsFunctionsExtension.setPreviewIconUrl(text);\n                  }}\n                  disabled\n                  fullWidth\n                />\n              )}\n            />\n            <TextField\n              floatingLabelText={<Trans>Name displayed in editor</Trans>}\n              value={eventsFunctionsExtension.getFullName()}\n              onChange={(e, text) => {\n                eventsFunctionsExtension.setFullName(text);\n                forceUpdate();\n              }}\n              fullWidth\n            />\n            <TextField\n              floatingLabelText={<Trans>Short description</Trans>}\n              value={eventsFunctionsExtension.getShortDescription()}\n              onChange={(e, text) => {\n                eventsFunctionsExtension.setShortDescription(text);\n                forceUpdate();\n              }}\n              multiline\n              fullWidth\n              rows={2}\n              rowsMax={2}\n            />\n            <TextField\n              floatingLabelText={\n                <Trans>Description (markdown supported)</Trans>\n              }\n              value={eventsFunctionsExtension.getDescription()}\n              onChange={(e, text) => {\n                eventsFunctionsExtension.setDescription(text);\n                forceUpdate();\n              }}\n              multiline\n              fullWidth\n              rows={5}\n              rowsMax={5}\n            />\n            <TextField\n              floatingLabelText={<Trans>Version</Trans>}\n              value={eventsFunctionsExtension.getVersion()}\n              onChange={(e, text) => {\n                eventsFunctionsExtension.setVersion(text);\n                forceUpdate();\n              }}\n              fullWidth\n            />\n            <SemiControlledTextField\n              floatingLabelText={<Trans>Tags (comma separated)</Trans>}\n              value={eventsFunctionsExtension\n                .getTags()\n                .toJSArray()\n                .join(', ')}\n              onChange={text => {\n                const tags = eventsFunctionsExtension.getTags();\n                tags.clear();\n                text\n                  .split(',')\n                  .map(tag => tag.trim())\n                  .filter(Boolean)\n                  .forEach(tag => {\n                    tags.push_back(tag);\n                  });\n                forceUpdate();\n              }}\n              fullWidth\n            />\n            <HelpPathTextField\n              i18n={i18n}\n              helpPath={eventsFunctionsExtension.getHelpPath()}\n              onChangeHelpPath={helpPath => {\n                eventsFunctionsExtension.setHelpPath(helpPath);\n                forceUpdate();\n              }}\n            />\n            <TextField\n              floatingLabelText={\n                <Trans>Author (Name, email or GitHub handle)</Trans>\n              }\n              value={eventsFunctionsExtension.getAuthor()}\n              onChange={(e, text) => {\n                eventsFunctionsExtension.setAuthor(text);\n                forceUpdate();\n              }}\n              fullWidth\n            />\n          </ColumnStackLayout>\n          {exportDialogOpen && (\n            <Dialog\n              secondaryActions={[\n                <HelpButton key=\"help\" helpPagePath=\"/extensions/share\" />,\n              ]}\n              actions={[\n                <FlatButton\n                  label={<Trans>Close</Trans>}\n                  keyboardFocused={true}\n                  onClick={() => {\n                    setExportDialogOpen(false);\n                  }}\n                  key={'close'}\n                />,\n              ]}\n              open\n              cannotBeDismissed={false}\n              onRequestClose={() => {\n                setExportDialogOpen(false);\n              }}\n            >\n              <Column expand>\n                <Line>\n                  <Text>\n                    <Trans>\n                      You can export the extension to a file to easily import it\n                      in another project. If your extension is providing useful\n                      and reusable functions or behaviors, consider sharing it\n                      with the GDevelop community!\n                    </Trans>\n                  </Text>\n                </Line>\n                <Line>\n                  <RaisedButton\n                    icon={<CloudUpload />}\n                    primary\n                    label={<Trans>Export to a file</Trans>}\n                    onClick={() => {\n                      exportExtension(\n                        eventsFunctionsExtensionsState,\n                        eventsFunctionsExtension\n                      );\n                    }}\n                  />\n                  <FlatButton\n                    label={<Trans>Submit extension to the community</Trans>}\n                    onClick={openGitHubIssue}\n                  />\n                </Line>\n              </Column>\n            </Dialog>\n          )}\n          {resourceStoreOpen && (\n            <Dialog\n              title={<Trans>Choose an icon for the extension</Trans>}\n              actions={[\n                <FlatButton\n                  key=\"cancel\"\n                  label={<Trans>Cancel</Trans>}\n                  primary={false}\n                  onClick={() => {\n                    setResourceStoreOpen(false);\n                  }}\n                />,\n              ]}\n              cannotBeDismissed={false}\n              open\n              noMargin\n            >\n              <ResourceStore\n                onChoose={resource => {\n                  setResourceStoreOpen(false);\n                  setIsLoading(true);\n                  downloadSvgAsBase64(resource.url)\n                    .then(\n                      base64Svg => {\n                        if (!isMounted.current) return;\n\n                        eventsFunctionsExtension.setPreviewIconUrl(\n                          resource.url\n                        );\n                        eventsFunctionsExtension.setIconUrl(base64Svg);\n                      },\n                      rawError => {\n                        if (!isMounted.current) return;\n\n                        showErrorBox({\n                          message: i18n._(\n                            t`Unable to download the icon. Verify your internet connection or try again later.`\n                          ),\n                          rawError,\n                          errorId: 'icon-download-error',\n                        });\n                      }\n                    )\n                    .then(() => {\n                      if (!isMounted.current) return;\n\n                      setIsLoading(false);\n                    });\n                }}\n                resourceKind={'svg'}\n              />\n            </Dialog>\n          )}\n        </Dialog>\n      )}\n    </I18n>\n  );\n}\n","// @flow\nimport * as React from 'react';\n\n/**\n * Returns a React \"ref\" telling if the component is \"mounted\" or not. While this is\n * usually an anti pattern to rely on this, it can be useful when having to \"cancel\"\n * promises/network dependent effects.\n */\nexport const useIsMounted = (): {| current: boolean |} => {\n  const isMounted = React.useRef<boolean>(false);\n  React.useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  return isMounted;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport { Line, Spacer } from '../../../../UI/Grid';\nimport ImagePreview from '../../../../ResourcesList/ResourcePreview/ImagePreview';\nimport Replay from '@material-ui/icons/Replay';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport Pause from '@material-ui/icons/Pause';\nimport Timer from '@material-ui/icons/Timer';\nimport TextField from '../../../../UI/TextField';\nimport FlatButton from '../../../../UI/FlatButton';\nimport Text from '../../../../UI/Text';\n\ntype Props = {|\n  spritesContainer: Object,\n  resourcesLoader: Object,\n  project: Object,\n  timeBetweenFrames: number,\n  onChangeTimeBetweenFrames: number => void,\n|};\n\ntype State = {|\n  currentFrameIndex: number,\n  currentFrameElapsedTime: number,\n  paused: boolean,\n  fps: number,\n|};\n\nconst styles = {\n  timeField: {\n    width: 75,\n  },\n  timeIcon: {\n    paddingLeft: 6,\n    paddingRight: 8,\n  },\n};\n\nexport default class AnimationPreview extends Component<Props, State> {\n  state = {\n    currentFrameIndex: 0,\n    currentFrameElapsedTime: 0,\n    paused: false,\n    fps: Math.round(1 / this.props.timeBetweenFrames),\n  };\n\n  nextUpdate = null;\n\n  componentDidMount() {\n    this.nextUpdate = requestAnimationFrame(this._updateAnimation);\n  }\n\n  componentWillUnmount() {\n    if (this.nextUpdate) cancelAnimationFrame(this.nextUpdate);\n  }\n\n  replay = () =>\n    this.setState({\n      currentFrameIndex: 0,\n      currentFrameElapsedTime: 0,\n      paused: false,\n    });\n\n  play = () =>\n    this.setState({\n      paused: false,\n    });\n\n  pause = () =>\n    this.setState({\n      paused: true,\n    });\n\n  _updateAnimation = () => {\n    const animationSpeedScale = 1;\n\n    const { spritesContainer, timeBetweenFrames } = this.props;\n    const { currentFrameIndex, currentFrameElapsedTime, paused } = this.state;\n\n    const elapsedTime = 1 / 60;\n    let newFrameIndex = currentFrameIndex;\n    let newFrameElapsedTime = currentFrameElapsedTime;\n    newFrameElapsedTime += paused ? 0 : elapsedTime * animationSpeedScale;\n\n    if (newFrameElapsedTime > timeBetweenFrames) {\n      const count = Math.floor(newFrameElapsedTime / timeBetweenFrames);\n      newFrameIndex += count;\n      newFrameElapsedTime = newFrameElapsedTime - count * timeBetweenFrames;\n      if (newFrameElapsedTime < 0) newFrameElapsedTime = 0;\n    }\n\n    if (newFrameIndex >= spritesContainer.getSpritesCount()) {\n      newFrameIndex = spritesContainer.isLooping()\n        ? newFrameIndex % spritesContainer.getSpritesCount()\n        : spritesContainer.getSpritesCount() - 1;\n    }\n    if (newFrameIndex < 0) newFrameIndex = 0; //May happen if there is no frame.\n\n    this.setState({\n      currentFrameIndex: newFrameIndex,\n      currentFrameElapsedTime: newFrameElapsedTime,\n    });\n    this.nextUpdate = requestAnimationFrame(this._updateAnimation);\n  };\n\n  render() {\n    const {\n      spritesContainer,\n      resourcesLoader,\n      project,\n      timeBetweenFrames,\n      onChangeTimeBetweenFrames,\n    } = this.props;\n    const { currentFrameIndex, paused, fps } = this.state;\n\n    const hasValidSprite =\n      currentFrameIndex < spritesContainer.getSpritesCount();\n    const sprite = hasValidSprite\n      ? spritesContainer.getSprite(currentFrameIndex)\n      : null;\n\n    return (\n      <div>\n        <ImagePreview\n          resourceName={sprite ? sprite.getImageName() : ''}\n          resourcesLoader={resourcesLoader}\n          project={project}\n        />\n        <Line noMargin alignItems=\"center\">\n          <Text>\n            <Trans>FPS:</Trans>\n          </Text>\n          <Spacer />\n          <TextField\n            margin=\"none\"\n            value={fps}\n            onChange={(e, text) => {\n              const fps = parseFloat(text);\n              if (fps > 0) {\n                this.setState({ fps });\n                onChangeTimeBetweenFrames(parseFloat((1 / fps).toFixed(4)));\n                this.replay();\n              }\n            }}\n            id=\"direction-time-between-frames\"\n            type=\"number\"\n            step={1}\n            min={1}\n            max={100}\n            style={styles.timeField}\n            autoFocus={true}\n          />\n          <Timer style={styles.timeIcon} />\n          <TextField\n            margin=\"none\"\n            value={timeBetweenFrames}\n            onChange={(e, text) => {\n              const time = parseFloat(text);\n              if (time > 0) {\n                this.setState({ fps: Math.round(1 / time) });\n                onChangeTimeBetweenFrames(time);\n                this.replay();\n              }\n            }}\n            id=\"direction-time-between-frames\"\n            type=\"number\"\n            step={0.005}\n            precision={2}\n            min={0.01}\n            max={5}\n            style={styles.timeField}\n          />\n          <FlatButton\n            icon={<Replay />}\n            label={<Trans>Replay</Trans>}\n            onClick={this.replay}\n          />\n          <FlatButton\n            icon={paused ? <PlayArrow /> : <Pause />}\n            label={paused ? 'Play' : 'Pause'}\n            onClick={paused ? this.play : this.pause}\n          />\n        </Line>\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport Timer from '@material-ui/icons/Timer';\nimport FlatButton from '../../../UI/FlatButton';\nimport Checkbox from '../../../UI/Checkbox';\nimport Brush from '@material-ui/icons/Brush';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport TextField from '../../../UI/TextField';\nimport Dialog from '../../../UI/Dialog';\nimport AnimationPreview from './AnimationPreview';\nimport ResourcesLoader from '../../../ResourcesLoader';\nimport { type ResourceExternalEditor } from '../../../ResourcesList/ResourceExternalEditor.flow';\nimport { ResponsiveWindowMeasurer } from '../../../UI/Reponsive/ResponsiveWindowMeasurer';\n\nconst styles = {\n  container: {\n    paddingLeft: 12,\n    paddingRight: 12,\n    display: 'flex',\n    alignItems: 'center',\n  },\n  timeField: {\n    width: 75,\n  },\n  timeIcon: {\n    paddingLeft: 6,\n    paddingRight: 6,\n  },\n  spacer: {\n    width: 16,\n  },\n};\n\nconst formatTime = (time: number) => Number(time.toFixed(6));\n\ntype Props = {|\n  direction: gdDirection,\n  resourcesLoader: typeof ResourcesLoader,\n  project: gdProject,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  onEditWith: ResourceExternalEditor => void,\n|};\n\ntype State = {|\n  timeBetweenFrames: number,\n  timeError: boolean,\n  previewOpen: boolean,\n|};\n\nexport default class DirectionTools extends Component<Props, State> {\n  state = {\n    timeBetweenFrames: formatTime(this.props.direction.getTimeBetweenFrames()),\n    timeError: false,\n    previewOpen: false,\n  };\n\n  componentWillReceiveProps(newProps: Props) {\n    this.setState({\n      timeBetweenFrames: formatTime(\n        this.props.direction.getTimeBetweenFrames()\n      ),\n      timeError: false,\n    });\n  }\n\n  saveTimeBetweenFrames = () => {\n    const { direction } = this.props;\n\n    const newTime = Math.max(parseFloat(this.state.timeBetweenFrames), 0.00001);\n    const newTimeIsValid = !isNaN(newTime);\n\n    if (newTimeIsValid) direction.setTimeBetweenFrames(newTime);\n    this.setState({\n      timeBetweenFrames: formatTime(\n        this.props.direction.getTimeBetweenFrames()\n      ),\n      timeError: newTimeIsValid,\n    });\n  };\n\n  setLooping = (check: boolean) => {\n    const { direction } = this.props;\n\n    direction.setLoop(!!check);\n    this.forceUpdate();\n  };\n\n  openPreview = (open: boolean) => {\n    this.setState({\n      previewOpen: open,\n    });\n    if (!open) {\n      this.saveTimeBetweenFrames();\n    }\n  };\n\n  render() {\n    const {\n      direction,\n      resourcesLoader,\n      project,\n      resourceExternalEditors,\n      onEditWith,\n    } = this.props;\n\n    const imageResourceExternalEditors = resourceExternalEditors.filter(\n      ({ kind }) => kind === 'image'\n    );\n\n    return (\n      <div style={styles.container}>\n        <ResponsiveWindowMeasurer>\n          {windowWidth =>\n            windowWidth !== 'small' &&\n            !!imageResourceExternalEditors.length && (\n              <FlatButton\n                label={imageResourceExternalEditors[0].displayName}\n                icon={<Brush />}\n                onClick={() => onEditWith(imageResourceExternalEditors[0])}\n              />\n            )\n          }\n        </ResponsiveWindowMeasurer>\n        <FlatButton\n          label={<Trans>Preview</Trans>}\n          icon={<PlayArrow />}\n          onClick={() => this.openPreview(true)}\n        />\n        <Timer style={styles.timeIcon} />\n        <TextField\n          value={this.state.timeBetweenFrames}\n          onChange={(e, text) =>\n            this.setState({ timeBetweenFrames: parseFloat(text) || 0 })\n          }\n          onBlur={() => this.saveTimeBetweenFrames()}\n          id=\"direction-time-between-frames\"\n          margin=\"none\"\n          style={styles.timeField}\n          type=\"number\"\n          step={0.005}\n          precision={2}\n          min={0.01}\n          max={5}\n        />\n        <span style={styles.spacer} />\n        <Checkbox\n          checked={direction.isLooping()}\n          label={<Trans>Loop</Trans>}\n          onCheck={(e, check) => this.setLooping(check)}\n        />\n        {this.state.previewOpen && (\n          <Dialog\n            actions={\n              <FlatButton\n                label={<Trans>OK</Trans>}\n                primary\n                onClick={() => this.openPreview(false)}\n                key=\"ok\"\n              />\n            }\n            noMargin\n            cannotBeDismissed={false}\n            onRequestClose={() => this.openPreview(false)}\n            open={this.state.previewOpen}\n          >\n            <AnimationPreview\n              spritesContainer={direction}\n              resourcesLoader={resourcesLoader}\n              project={project}\n              timeBetweenFrames={this.state.timeBetweenFrames}\n              onChangeTimeBetweenFrames={text =>\n                this.setState({ timeBetweenFrames: text })\n              }\n            />\n          </Dialog>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\nimport { useCommand } from '../CommandPalette/CommandHooks';\n\ntype Props = {|\n  openObjectsList: () => void,\n  openObjectGroupsList: () => void,\n  openPropertiesPanel: () => void,\n  toggleInstancesList: () => void,\n  toggleLayersList: () => void,\n  undo: () => void,\n  canUndo: boolean,\n  redo: () => void,\n  canRedo: boolean,\n  deleteSelection: () => void,\n  canDeleteSelection: boolean,\n  toggleWindowMask: () => void,\n  toggleGrid: () => void,\n  setupGrid: () => void,\n|};\n\nconst ToolbarCommands = (props: Props) => {\n  useCommand('OPEN_OBJECTS_PANEL', true, {\n    handler: props.openObjectsList,\n  });\n\n  useCommand('OPEN_OBJECT_GROUPS_PANEL', true, {\n    handler: props.openObjectGroupsList,\n  });\n\n  useCommand('OPEN_PROPERTIES_PANEL', true, {\n    handler: props.openPropertiesPanel,\n  });\n\n  useCommand('TOGGLE_INSTANCES_PANEL', true, {\n    handler: props.toggleInstancesList,\n  });\n\n  useCommand('TOGGLE_LAYERS_PANEL', true, {\n    handler: props.toggleLayersList,\n  });\n\n  useCommand('SCENE_EDITOR_UNDO', props.canUndo, {\n    handler: props.undo,\n  });\n\n  useCommand('SCENE_EDITOR_REDO', props.canRedo, {\n    handler: props.redo,\n  });\n\n  useCommand('DELETE_INSTANCES', props.canDeleteSelection, {\n    handler: props.deleteSelection,\n  });\n\n  useCommand('TOGGLE_WINDOW_MASK', true, {\n    handler: props.toggleWindowMask,\n  });\n\n  useCommand('TOGGLE_GRID', true, {\n    handler: props.toggleGrid,\n  });\n\n  useCommand('OPEN_SETUP_GRID', true, {\n    handler: props.setupGrid,\n  });\n\n  return null;\n};\n\nexport default ToolbarCommands;\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\nimport React, { PureComponent } from 'react';\nimport { ToolbarGroup } from '../UI/Toolbar';\nimport ToolbarSeparator from '../UI/ToolbarSeparator';\nimport ToolbarIcon from '../UI/ToolbarIcon';\nimport ElementWithMenu from '../UI/Menu/ElementWithMenu';\nimport ToolbarCommands from './ToolbarCommands';\nimport InstancesSelection from '../InstancesEditor/InstancesSelection';\n\ntype Props = {|\n  openObjectsList: () => void,\n  openObjectGroupsList: () => void,\n  openProperties: () => void,\n  undo: () => void,\n  canUndo: boolean,\n  redo: () => void,\n  canRedo: boolean,\n  deleteSelection: () => void,\n  instancesSelection: InstancesSelection,\n  toggleInstancesList: () => void,\n  toggleLayersList: () => void,\n  isWindowMaskShown: () => boolean,\n  toggleWindowMask: () => void,\n  isGridShown: () => boolean,\n  toggleGrid: () => void,\n  openSetupGrid: () => void,\n  zoomIn: () => void,\n  zoomOut: () => void,\n  centerView: () => void,\n  setZoomFactor: number => void,\n  onOpenSettings?: ?() => void,\n|};\n\nexport class Toolbar extends PureComponent<Props> {\n  render() {\n    return (\n      <>\n        <ToolbarCommands\n          openObjectsList={this.props.openObjectsList}\n          openObjectGroupsList={this.props.openObjectGroupsList}\n          openPropertiesPanel={this.props.openProperties}\n          toggleInstancesList={this.props.toggleInstancesList}\n          toggleLayersList={this.props.toggleLayersList}\n          undo={this.props.undo}\n          canUndo={this.props.canUndo}\n          redo={this.props.redo}\n          canRedo={this.props.canRedo}\n          deleteSelection={this.props.deleteSelection}\n          toggleWindowMask={this.props.toggleWindowMask}\n          toggleGrid={this.props.toggleGrid}\n          setupGrid={this.props.openSetupGrid}\n          canDeleteSelection={\n            this.props.instancesSelection.getSelectedInstances().length !== 0\n          }\n        />\n        <ToolbarGroup lastChild>\n          <ToolbarIcon\n            onClick={this.props.openObjectsList}\n            src=\"res/ribbon_default/objects64.png\"\n            tooltip={t`Open the objects editor`}\n          />\n          <ToolbarIcon\n            onClick={this.props.openObjectGroupsList}\n            src={'res/ribbon_default/objectsgroups64.png'}\n            tooltip={t`Open the objects groups editor`}\n          />\n          <ToolbarIcon\n            onClick={this.props.openProperties}\n            src=\"res/ribbon_default/editprop32.png\"\n            tooltip={t`Open the properties panel`}\n          />\n          <ToolbarIcon\n            onClick={this.props.toggleInstancesList}\n            src=\"res/ribbon_default/ObjectsPositionsList32.png\"\n            tooltip={t`Open the list of instances`}\n          />\n          <ToolbarIcon\n            onClick={this.props.toggleLayersList}\n            src=\"res/ribbon_default/layers32.png\"\n            tooltip={t`Open the layers editor`}\n          />\n          <ToolbarSeparator />\n          <ToolbarIcon\n            onClick={this.props.undo}\n            src=\"res/ribbon_default/undo32.png\"\n            disabled={!this.props.canUndo}\n            tooltip={t`Undo the last changes`}\n          />\n          <ToolbarIcon\n            onClick={this.props.redo}\n            src=\"res/ribbon_default/redo32.png\"\n            disabled={!this.props.canRedo}\n            tooltip={t`Redo the last changes`}\n          />\n          <ToolbarSeparator />\n          <ToolbarIcon\n            onClick={this.props.deleteSelection}\n            src=\"res/ribbon_default/deleteselected32.png\"\n            disabled={\n              !this.props.instancesSelection.getSelectedInstances().length\n            }\n            tooltip={t`Delete the selected instances from the scene`}\n          />\n          <ToolbarSeparator />\n          <ElementWithMenu\n            element={\n              <ToolbarIcon\n                src=\"res/ribbon_default/grid32.png\"\n                tooltip={t`Toggle/edit grid`}\n              />\n            }\n            buildMenuTemplate={(i18n: I18nType) => [\n              {\n                type: 'checkbox',\n                label: i18n._(t`Show Mask`),\n                checked: this.props.isWindowMaskShown(),\n                click: () => this.props.toggleWindowMask(),\n              },\n              {\n                type: 'checkbox',\n                label: i18n._(t`Show grid`),\n                checked: this.props.isGridShown(),\n                click: () => this.props.toggleGrid(),\n              },\n              { type: 'separator' },\n              {\n                label: i18n._(t`Setup grid`),\n                click: () => this.props.openSetupGrid(),\n              },\n            ]}\n          />\n          <ElementWithMenu\n            element={\n              <ToolbarIcon\n                src=\"res/ribbon_default/zoom32.png\"\n                tooltip={t`Change editor zoom`}\n              />\n            }\n            buildMenuTemplate={(i18n: I18nType) => [\n              {\n                label: i18n._(t`Zoom in`),\n                click: this.props.zoomIn,\n                accelerator: 'CmdOrCtrl+numadd',\n              },\n              {\n                label: i18n._(t`Zoom out`),\n                click: this.props.zoomOut,\n                accelerator: 'CmdOrCtrl+numsub',\n              },\n              {\n                label: i18n._(t`Center View`),\n                click: () => this.props.centerView(),\n              },\n              { type: 'separator' },\n              { label: '5%', click: () => this.props.setZoomFactor(0.05) },\n              { label: '10%', click: () => this.props.setZoomFactor(0.1) },\n              { label: '25%', click: () => this.props.setZoomFactor(0.25) },\n              { label: '50%', click: () => this.props.setZoomFactor(0.5) },\n              { label: '100%', click: () => this.props.setZoomFactor(1.0) },\n              { label: '150%', click: () => this.props.setZoomFactor(1.5) },\n              { label: '200%', click: () => this.props.setZoomFactor(2.0) },\n              { label: '400%', click: () => this.props.setZoomFactor(4.0) },\n            ]}\n          />\n        </ToolbarGroup>\n      </>\n    );\n  }\n}\n\nexport default Toolbar;\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\" />\n  </SvgIcon>\n));\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React from 'react';\nimport Add from '@material-ui/icons/Add';\nimport IconButton from '../UI/IconButton';\nimport Copy from '../UI/CustomSvgIcons/Copy';\nimport Paste from '../UI/CustomSvgIcons/Paste';\nimport Delete from '@material-ui/icons/Delete';\nimport { Line, Column } from '../UI/Grid';\nimport RaisedButton from '../UI/RaisedButton';\n\ntype Props = {|\n  onAdd: () => void,\n  onCopy: () => void,\n  hasSelection: boolean,\n  onPaste: () => void,\n  hasClipboard: boolean,\n  onDeleteSelection: () => void,\n|};\n\nconst EditVariableRow = ({\n  onAdd,\n  onCopy,\n  hasSelection,\n  onPaste,\n  hasClipboard,\n  onDeleteSelection,\n}: Props) => (\n  <Line justifyContent=\"space-between\" alignItems=\"center\">\n    <Column>\n      <Line noMargin>\n        <IconButton size=\"small\" onClick={onCopy} disabled={!hasSelection}>\n          <Copy />\n        </IconButton>\n        <IconButton size=\"small\" onClick={onPaste} disabled={!hasClipboard}>\n          <Paste />\n        </IconButton>\n        <IconButton\n          size=\"small\"\n          onClick={onDeleteSelection}\n          disabled={!hasSelection}\n        >\n          <Delete />\n        </IconButton>\n      </Line>\n    </Column>\n\n    <Column>\n      <RaisedButton\n        primary\n        label={<Trans>Add</Trans>}\n        onClick={onAdd}\n        icon={<Add />}\n      />\n    </Column>\n  </Line>\n);\n\nexport default EditVariableRow;\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { largeSelectedArea, largeSelectableArea } from '../ClassNames';\nimport { type EventRendererProps } from './EventRenderer';\n\nexport default class UnknownEvent extends React.Component<\n  EventRendererProps,\n  *\n> {\n  render() {\n    return (\n      <p\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n        })}\n      >\n        {'Unknown event of type ' + this.props.event.getType()}\n      </p>\n    );\n  }\n}\n","import UnknownEvent from './Renderers/UnknownEvent';\nimport StandardEvent from './Renderers/StandardEvent';\nimport GroupEvent from './Renderers/GroupEvent';\nimport CommentEvent from './Renderers/CommentEvent';\nimport ForEachEvent from './Renderers/ForEachEvent';\nimport ForEachChildVariableEvent from './Renderers/ForEachChildVariableEvent';\nimport RepeatEvent from './Renderers/RepeatEvent';\nimport WhileEvent from './Renderers/WhileEvent';\nimport LinkEvent from './Renderers/LinkEvent';\nimport JsCodeEvent from './Renderers/JsCodeEvent';\n\nexport default {\n  components: {\n    unknownEvent: UnknownEvent,\n    'BuiltinCommonInstructions::Standard': StandardEvent,\n    'BuiltinCommonInstructions::Group': GroupEvent,\n    'BuiltinCommonInstructions::Comment': CommentEvent,\n    'BuiltinCommonInstructions::ForEach': ForEachEvent,\n    'BuiltinCommonInstructions::ForEachChildVariable': ForEachChildVariableEvent,\n    'BuiltinCommonInstructions::Repeat': RepeatEvent,\n    'BuiltinCommonInstructions::While': WhileEvent,\n    'BuiltinCommonInstructions::Link': LinkEvent,\n    'BuiltinCommonInstructions::JsCode': JsCodeEvent,\n  },\n  getEventComponent: function(event) {\n    if (this.components.hasOwnProperty(event.getType()))\n      return this.components[event.getType()];\n    else return this.components.unknownEvent;\n  },\n  registerEvent: function(eventType, renderFunction) {\n    if (!this.components.hasOwnProperty(eventType)) {\n      console.warn(\n        'Tried to register renderer for events \"' +\n          eventType +\n          '\", but a renderer already exists.'\n      );\n      return;\n    }\n\n    this.components[eventType] = renderFunction;\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { type GDevelopTheme } from '.';\nimport DefaultTheme from './DefaultTheme';\n\nconst GDevelopThemeContext = React.createContext<GDevelopTheme>(\n  DefaultTheme.gdevelopTheme\n);\n\nexport default GDevelopThemeContext;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport { Column, Line } from '../UI/Grid';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport { mapFor } from '../Utils/MapFor';\nimport RaisedButton from '../UI/RaisedButton';\nimport IconButton from '../UI/IconButton';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport ElementWithMenu from '../UI/Menu/ElementWithMenu';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport MiniToolbar, { MiniToolbarText } from '../UI/MiniToolbar';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport Add from '@material-ui/icons/Add';\nimport PropertiesEditor from '../PropertiesEditor';\nimport DismissableAlertMessage from '../UI/DismissableAlertMessage';\nimport BackgroundText from '../UI/BackgroundText';\nimport { MarkdownText } from '../UI/MarkdownText';\nimport useForceUpdate from '../Utils/UseForceUpdate';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport {\n  enumerateEffectsMetadata,\n  type EnumeratedEffectMetadata,\n  setEffectDefaultParameters,\n} from './EnumerateEffects';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\n\ntype Props = {|\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  effectsContainer: gdEffectsContainer,\n  onEffectsUpdated: () => void,\n|};\n\nconst getEnumeratedEffectMetadata = (\n  allEffectDescriptions: Array<EnumeratedEffectMetadata>,\n  effectType: string\n): ?EnumeratedEffectMetadata => {\n  return allEffectDescriptions.find(\n    effectMetadata => effectMetadata.type === effectType\n  );\n};\n\n/**\n * Display a list of effects and allow to add/remove/edit them.\n *\n * All available effects are fetched from the project's platform.\n */\nexport default function EffectsList(props: Props) {\n  const { effectsContainer, onEffectsUpdated } = props;\n\n  const preferences = React.useContext(PreferencesContext);\n  const showEffectParameterNames = preferences.values.showEffectParameterNames;\n  const setShowEffectParameterNames = preferences.setShowEffectParameterNames;\n\n  const allEffectMetadata = React.useMemo(\n    () => enumerateEffectsMetadata(props.project),\n    [props.project]\n  );\n\n  const forceUpdate = useForceUpdate();\n\n  const addEffect = () => {\n    const newName = newNameGenerator('Effect', name =>\n      effectsContainer.hasEffectNamed(name)\n    );\n    effectsContainer.insertNewEffect(\n      newName,\n      effectsContainer.getEffectsCount()\n    );\n\n    forceUpdate();\n    onEffectsUpdated();\n  };\n\n  const removeEffect = (name: string) => {\n    effectsContainer.removeEffect(name);\n    forceUpdate();\n    onEffectsUpdated();\n  };\n\n  const chooseEffectType = (effect: gdEffect, newEffectType: string) => {\n    effect.setEffectType(newEffectType);\n    const effectMetadata = getEnumeratedEffectMetadata(\n      allEffectMetadata,\n      newEffectType\n    );\n\n    if (effectMetadata) {\n      setEffectDefaultParameters(effect, effectMetadata.effectMetadata);\n    }\n\n    forceUpdate();\n    onEffectsUpdated();\n  };\n\n  return (\n    <I18n>\n      {({ i18n }) => {\n        return (\n          <Column noMargin expand>\n            <Line>\n              <Column>\n                <DismissableAlertMessage identifier=\"effects-usage\" kind=\"info\">\n                  <Trans>\n                    Effects can change how the layer is rendered on screen.\n                    After adding an effect, set up its parameters. Launch a\n                    preview to see the result. Using the events and the name of\n                    the effect, you can change the parameters during the game.\n                  </Trans>\n                </DismissableAlertMessage>\n              </Column>\n            </Line>\n            {effectsContainer.getEffectsCount() > 3 && (\n              <Line>\n                <Column>\n                  <DismissableAlertMessage\n                    identifier=\"too-much-effects\"\n                    kind=\"warning\"\n                  >\n                    <Trans>\n                      Using a lot of effects can have a severe negative impact\n                      on the rendering performance, especially on low-end or\n                      mobile devices. Consider using less effects if possible.\n                      You can also disable and re-enable effects as needed using\n                      events.\n                    </Trans>\n                  </DismissableAlertMessage>\n                </Column>\n              </Line>\n            )}\n            {mapFor(0, effectsContainer.getEffectsCount(), (i: number) => {\n              const effect: gdEffect = effectsContainer.getEffectAt(i);\n              const effectType = effect.getEffectType();\n              const effectMetadata = getEnumeratedEffectMetadata(\n                allEffectMetadata,\n                effectType\n              );\n\n              return (\n                <React.Fragment key={i}>\n                  <MiniToolbar>\n                    <MiniToolbarText>\n                      <Trans>Effect name:</Trans>\n                    </MiniToolbarText>\n                    <SemiControlledTextField\n                      margin=\"none\"\n                      commitOnBlur\n                      hintText={t`Enter the effect name`}\n                      value={effect.getName()}\n                      onChange={newName => {\n                        if (newName === effect.getName()) return;\n\n                        effect.setName(newName);\n                        forceUpdate();\n                        onEffectsUpdated();\n                      }}\n                      fullWidth\n                    />\n                    <MiniToolbarText>\n                      <Trans>Type:</Trans>\n                    </MiniToolbarText>\n                    <SelectField\n                      margin=\"none\"\n                      value={effectType}\n                      onChange={(e, i, newEffectType: string) =>\n                        chooseEffectType(effect, newEffectType)\n                      }\n                      fullWidth\n                      hintText={t`Choose the effect to apply`}\n                    >\n                      {allEffectMetadata.map(effectMetadata => (\n                        <SelectOption\n                          key={effectMetadata.type}\n                          value={effectMetadata.type}\n                          primaryText={effectMetadata.fullName}\n                        />\n                      ))}\n                    </SelectField>\n                    <ElementWithMenu\n                      element={\n                        <IconButton>\n                          <MoreVert />\n                        </IconButton>\n                      }\n                      buildMenuTemplate={(i18n: I18nType) => [\n                        {\n                          label: i18n._(t`Delete`),\n                          click: () => removeEffect(effect.getName()),\n                        },\n                        { type: 'separator' },\n                        {\n                          type: 'checkbox',\n                          label: i18n._(t`Show Parameter Names`),\n                          checked: showEffectParameterNames,\n                          click: () =>\n                            setShowEffectParameterNames(\n                              !showEffectParameterNames\n                            ),\n                        },\n                      ]}\n                    />\n                  </MiniToolbar>\n                  <Line expand noMargin>\n                    <Column expand>\n                      {!!effectType && effectMetadata ? (\n                        <React.Fragment>\n                          <Line>\n                            <BackgroundText>\n                              <MarkdownText\n                                source={effectMetadata.description}\n                              />\n                            </BackgroundText>\n                          </Line>\n                          <PropertiesEditor\n                            instances={[effect]}\n                            schema={effectMetadata.parametersSchema}\n                            project={props.project}\n                            resourceSources={props.resourceSources}\n                            onChooseResource={props.onChooseResource}\n                            resourceExternalEditors={\n                              props.resourceExternalEditors\n                            }\n                            renderExtraDescriptionText={\n                              showEffectParameterNames\n                                ? parameterName =>\n                                    i18n._(\n                                      t`Parameter name in events: \\`${parameterName}\\` `\n                                    )\n                                : undefined\n                            }\n                          />\n                        </React.Fragment>\n                      ) : null}\n                    </Column>\n                  </Line>\n                </React.Fragment>\n              );\n            })}\n            {effectsContainer.getEffectsCount() === 0 ? (\n              <EmptyMessage>\n                <Trans>No effects applied.</Trans>\n              </EmptyMessage>\n            ) : null}\n            <Column>\n              <Line justifyContent=\"flex-end\" alignItems=\"center\" expand>\n                <RaisedButton\n                  primary\n                  label={<Trans>Add an effect</Trans>}\n                  onClick={addEffect}\n                  icon={<Add />}\n                />\n              </Line>\n            </Column>\n          </Column>\n        );\n      }}\n    </I18n>\n  );\n}\n","// @flow\nimport { mapFor } from '../Utils/MapFor';\nimport { type Schema } from '../PropertiesEditor';\nimport { type ResourceKind } from '../ResourcesList/ResourceSource.flow';\nimport flatten from 'lodash/flatten';\n\nexport type EnumeratedEffectMetadata = {|\n  extension: gdPlatformExtension,\n  effectMetadata: gdEffectMetadata,\n  type: string,\n  fullName: string,\n  description: string,\n  parametersSchema: Schema,\n|};\n\n/**\n * Fetch all the effects available for a project, and convert them\n * to a format easier to use.\n */\nexport const enumerateEffectsMetadata = (\n  project: gdProject\n): Array<EnumeratedEffectMetadata> => {\n  const platform = project.getCurrentPlatform();\n  const extensionsList = platform.getAllPlatformExtensions();\n\n  return flatten(\n    mapFor(0, extensionsList.size(), i => {\n      const extension = extensionsList.at(i);\n\n      return extension\n        .getExtensionEffectTypes()\n        .toJSArray()\n        .map(type => extension.getEffectMetadata(type))\n        .map((effectMetadata: gdEffectMetadata) => {\n          const effectType = effectMetadata.getType();\n\n          // Convert the effect type properties to a PropertiesEditor Schema.\n          const properties = effectMetadata.getProperties();\n          const parameterNames = properties.keys().toJSArray();\n          const parametersSchema: Schema = parameterNames\n            .map((parameterName: string) => {\n              const property = properties.get(parameterName);\n              const valueType = property.getType().toLowerCase();\n              const propertyLabel = property.getLabel();\n              const propertyDescription = property.getDescription();\n              const getLabel = () => propertyLabel;\n              const getDescription = () => propertyDescription;\n              const getExtraDescription = () => parameterName;\n\n              if (valueType === 'number') {\n                return {\n                  name: parameterName,\n                  valueType: 'number',\n                  getValue: (effect: gdEffect) =>\n                    effect.getDoubleParameter(parameterName),\n                  setValue: (effect: gdEffect, newValue: number) =>\n                    effect.setDoubleParameter(parameterName, newValue),\n                  getLabel,\n                  getDescription,\n                  getExtraDescription,\n                };\n              } else if (valueType === 'boolean') {\n                return {\n                  name: parameterName,\n                  valueType: 'boolean',\n                  getValue: (effect: gdEffect) =>\n                    effect.getBooleanParameter(parameterName),\n                  setValue: (effect: gdEffect, newValue: boolean) =>\n                    effect.setBooleanParameter(parameterName, newValue),\n                  getLabel,\n                  getDescription,\n                  getExtraDescription,\n                };\n              } else if (valueType === 'resource') {\n                // Resource is a \"string\" (with a selector in the UI)\n                const kind: ResourceKind =\n                  // $FlowFixMe - assume the passed resource kind is always valid.\n                  property.getExtraInfo().toJSArray()[0] || '';\n                return {\n                  name: parameterName,\n                  valueType: 'resource',\n                  resourceKind: kind,\n                  getValue: (effect: gdEffect) =>\n                    effect.getStringParameter(parameterName),\n                  setValue: (effect: gdEffect, newValue: string) =>\n                    effect.setStringParameter(parameterName, newValue),\n                  getLabel,\n                  getDescription,\n                  getExtraDescription,\n                };\n              } else if (valueType === 'color') {\n                return {\n                  name: parameterName,\n                  valueType: 'color',\n                  getValue: (effect: gdEffect) =>\n                    effect.getStringParameter(parameterName),\n                  setValue: (effect: gdEffect, newValue: string) =>\n                    effect.setStringParameter(parameterName, newValue),\n                  getLabel,\n                  getDescription,\n                  getExtraDescription,\n                };\n              } else {\n                console.error(\n                  `A property with type=${valueType} could not be mapped to a field for effect ${effectType}. Ensure that this type is correct.`\n                );\n                return null;\n              }\n            })\n            .filter(Boolean);\n\n          return {\n            extension,\n            type: effectType,\n            effectMetadata,\n            fullName: effectMetadata.getFullName(),\n            description: effectMetadata.getDescription(),\n            parametersSchema,\n          };\n        });\n    })\n  );\n};\n\nexport const setEffectDefaultParameters = (\n  effect: gdEffect,\n  effectMetadata: gdEffectMetadata\n) => {\n  effect.clearParameters();\n\n  const properties = effectMetadata.getProperties();\n  const parameterNames = properties.keys().toJSArray();\n  parameterNames.forEach((parameterName: string) => {\n    const property = properties.get(parameterName);\n    const valueType = property.getType().toLowerCase();\n\n    if (valueType === 'number') {\n      effect.setDoubleParameter(\n        parameterName,\n        parseFloat(property.getValue()) || 0\n      );\n    } else if (valueType === 'boolean') {\n      effect.setBooleanParameter(parameterName, property.getValue() === 'true');\n    } else {\n      effect.setStringParameter(parameterName, property.getValue());\n    }\n  });\n};\n","//@flow\nimport { findGDJS } from '../GameEngineFinder/LocalGDJSFinder';\nimport optionalRequire from '../Utils/OptionalRequire';\nconst fs = optionalRequire('fs');\nconst path = optionalRequire('path');\n\nexport const setupAutocompletions = (monaco: any) => {\n  const importAllJsFilesFromFolder = (folderPath: string) =>\n    fs.readdir(folderPath, (error: ?Error, filenames: Array<string>) => {\n      if (error) {\n        console.error(\n          'Unable to read GDJS files for setting up autocompletions:',\n          error\n        );\n        return;\n      }\n\n      filenames.forEach(filename => {\n        if (filename.endsWith('.ts') || filename.endsWith('.js')) {\n          const fullPath = path.join(folderPath, filename);\n          fs.readFile(fullPath, 'utf8', (fileError, content) => {\n            if (fileError) {\n              console.error(\n                `Unable to read ${fullPath} for setting up autocompletions:`,\n                fileError\n              );\n              return;\n            }\n\n            monaco.languages.typescript.javascriptDefaults.addExtraLib(\n              content,\n              fullPath\n            );\n          });\n        }\n      });\n    });\n\n  findGDJS().then(({ gdjsRoot }) => {\n    // Autocompletions are generated by reading the sources of the game engine\n    // (much like how autocompletions work in Visual Studio Code) - *not* the built files.\n    // The built files are stripped of their types and documentation, so it would\n    // not work.\n    //\n    // We could also use the TypeScript compiler to emit .d.ts files when building GDJS,\n    // but this would make TypeScript slower (at least 2x slower) and we would still need\n    // to copy and read an equivalent number of files.\n    const runtimePath = path.join(gdjsRoot, 'Runtime-sources');\n    const runtimeTypesPath = path.join(runtimePath, 'types');\n    const runtimeLibsPath = path.join(runtimePath, 'libs');\n    const runtimePixiRenderersPath = path.join(runtimePath, 'pixi-renderers');\n    const runtimeCocosRenderersPath = path.join(runtimePath, 'cocos-renderers');\n    const runtimeHowlerSoundManagerPath = path.join(\n      runtimePath,\n      'howler-sound-manager'\n    );\n    const runtimeCocosSoundManagerPath = path.join(\n      runtimePath,\n      'cocos-sound-manager'\n    );\n    const runtimeFontfaceobserverFontManagerPath = path.join(\n      runtimePath,\n      'fontfaceobserver-font-manager'\n    );\n    const extensionsPath = path.join(runtimePath, 'Extensions');\n    const eventToolsPath = path.join(runtimePath, 'events-tools');\n\n    importAllJsFilesFromFolder(runtimePath);\n    importAllJsFilesFromFolder(runtimeTypesPath);\n    importAllJsFilesFromFolder(runtimeLibsPath);\n    importAllJsFilesFromFolder(runtimePixiRenderersPath);\n    importAllJsFilesFromFolder(runtimeCocosRenderersPath);\n    importAllJsFilesFromFolder(runtimeHowlerSoundManagerPath);\n    importAllJsFilesFromFolder(runtimeCocosSoundManagerPath);\n    importAllJsFilesFromFolder(runtimeFontfaceobserverFontManagerPath);\n    importAllJsFilesFromFolder(eventToolsPath);\n    fs.readdir(extensionsPath, (error: ?Error, folderNames: Array<string>) => {\n      if (error) {\n        console.error(\n          'Unable to read Extensions folders for setting up autocompletions:',\n          error\n        );\n        return;\n      }\n\n      folderNames\n        .filter(\n          folderName =>\n            !folderName.endsWith('.txt') &&\n            !folderName.endsWith('.md') &&\n            !folderName.endsWith('.gitignore')\n        )\n        .forEach(folderName =>\n          importAllJsFilesFromFolder(path.join(extensionsPath, folderName))\n        );\n    });\n\n    monaco.languages.typescript.javascriptDefaults.addExtraLib(\n      `\n/** Represents the scene being played. */\nvar runtimeScene = new gdjs.RuntimeScene();\n\n/**\n * The instances of objects that are passed to your JavaScript function.\n * @type {gdjs.RuntimeObject[]}\n */\nvar objects = [];\n\n/**\n * @type {EventsFunctionContext}\n */\nvar eventsFunctionContext = {};\n`,\n      'this-mock-the-context-of-events.js'\n    );\n  });\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { setupAutocompletions } from './LocalCodeEditorAutocompletions';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport RaisedButton from '../UI/RaisedButton';\nimport Text from '../UI/Text';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport { getAllThemes } from './Theme';\n\nexport type State = {|\n  MonacoEditor: ?any,\n  error: ?Error,\n|};\nexport type Props = {|\n  value: string,\n  onChange: string => void,\n  width?: number,\n  height?: number,\n  onEditorMounted?: () => void,\n|};\n\nconst monacoEditorOptions = {\n  scrollBeyondLastLine: false,\n  minimap: {\n    enabled: false,\n  },\n};\n\n// There is only a single instance of monaco living, keep track\n// of if its initialized or not.\nlet monacoCompletionsInitialized = false;\nlet monacoThemesInitialized = false;\n\nexport class CodeEditor extends React.Component<Props, State> {\n  state = {\n    MonacoEditor: null,\n    error: null,\n  };\n\n  setupEditorThemes = (monaco: any) => {\n    if (!monacoThemesInitialized) {\n      monacoThemesInitialized = true;\n\n      getAllThemes().forEach(codeEditorTheme => {\n        // Builtin themes don't have themeData, don't redefine them.\n        if (codeEditorTheme.themeData) {\n          monaco.editor.defineTheme(\n            codeEditorTheme.themeName,\n            codeEditorTheme.themeData\n          );\n        }\n      });\n    }\n  };\n\n  setupEditorCompletions = (editor: any, monaco: any) => {\n    if (!monacoCompletionsInitialized) {\n      monacoCompletionsInitialized = true;\n\n      monaco.languages.typescript.javascriptDefaults.setCompilerOptions({\n        // noLib: true,\n        target: monaco.languages.typescript.ScriptTarget.ES6,\n        allowNonTsExtensions: true,\n        allowJs: true,\n        checkJs: true,\n      });\n      setupAutocompletions(monaco);\n    }\n\n    if (this.props.onEditorMounted) this.props.onEditorMounted();\n  };\n\n  componentDidMount() {\n    this.loadMonacoEditor();\n  }\n\n  handleLoadError(error: Error) {\n    this.setState({\n      error,\n    });\n  }\n\n  loadMonacoEditor() {\n    this.setState({\n      error: null,\n    });\n\n    // Define the global variable used by Monaco Editor to find its worker\n    // (used, at least, for auto-completions).\n    window.MonacoEnvironment = {\n      getWorkerUrl: function(workerId, label) {\n        return 'external/monaco-editor-min/vs/base/worker/workerMain.js';\n      },\n    };\n\n    import(/* webpackChunkName: \"react-monaco-editor\" */ 'react-monaco-editor')\n      .then(module =>\n        this.setState({\n          MonacoEditor: module.default,\n        })\n      )\n      .catch(this.handleLoadError);\n  }\n\n  _handleContextMenu = (event: SyntheticEvent<>) => {\n    // Prevent right click to bubble up and trigger the context menu\n    // of the event.\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  render() {\n    const { MonacoEditor, error } = this.state;\n    if (error) {\n      return (\n        <React.Fragment>\n          <Text>\n            <Trans>Unable to load the code editor</Trans>\n          </Text>\n          <RaisedButton\n            label={<Trans>Retry</Trans>}\n            onClick={this.loadMonacoEditor}\n          />\n        </React.Fragment>\n      );\n    }\n\n    if (!MonacoEditor) {\n      return <PlaceholderLoader />;\n    }\n\n    return (\n      <div onContextMenu={this._handleContextMenu}>\n        <PreferencesContext.Consumer>\n          {({ values }) => (\n            <MonacoEditor\n              width={this.props.width || 600}\n              height={this.props.height || 200}\n              language=\"javascript\"\n              theme={values.codeEditorThemeName}\n              value={this.props.value}\n              onChange={this.props.onChange}\n              editorWillMount={this.setupEditorThemes}\n              editorDidMount={this.setupEditorCompletions}\n              options={monacoEditorOptions}\n            />\n          )}\n        </PreferencesContext.Consumer>\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type EventsScope } from '../../../InstructionOrExpression/EventsScope.flow';\nimport * as React from 'react';\nimport { mapFor } from '../../../Utils/MapFor';\nimport EmptyMessage from '../../../UI/EmptyMessage';\n\nexport type ParameterValues = Array<string>;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  project?: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  expressionMetadata: gdExpressionMetadata,\n  parameterValues: ParameterValues,\n  onChangeParameter: (index: number, value: string) => void,\n  parameterRenderingService?: {\n    components: any,\n    getParameterComponent: (type: string) => any,\n  },\n|};\ntype State = {||};\n\nexport default class ExpressionParametersEditor extends React.Component<\n  Props,\n  State\n> {\n  static getNonCodeOnlyParametersCount(\n    expressionMetadata: gdExpressionMetadata\n  ) {\n    return mapFor(0, expressionMetadata.getParametersCount(), i => {\n      const parameterMetadata = expressionMetadata.getParameter(i);\n      return !parameterMetadata.isCodeOnly();\n    }).filter(isVisible => isVisible).length;\n  }\n\n  render() {\n    const {\n      expressionMetadata,\n      parameterValues,\n      project,\n      scope,\n      globalObjectsContainer,\n      objectsContainer,\n      parameterRenderingService,\n    } = this.props;\n\n    if (!parameterRenderingService) {\n      console.error(\n        'Missing parameterRenderingService for ExpressionParametersEditor'\n      );\n      return null;\n    }\n\n    // Create an object mimicking Instruction interface so that it can be used by\n    // ParameterFields components.\n    const parametersCount = expressionMetadata.getParametersCount();\n    const expression = {\n      getParametersCount: () => parametersCount,\n      getParameter: index => {\n        return parameterValues[index] || '';\n      },\n    };\n\n    return (\n      <div style={styles.container}>\n        {mapFor(0, expressionMetadata.getParametersCount(), i => {\n          const parameterMetadata = expressionMetadata.getParameter(i);\n          const ParameterComponent = parameterRenderingService.getParameterComponent(\n            parameterMetadata.getType()\n          );\n\n          if (parameterMetadata.isCodeOnly()) return null;\n          return (\n            <ParameterComponent\n              expressionMetadata={expressionMetadata}\n              expression={expression}\n              parameterMetadata={parameterMetadata}\n              parameterIndex={i}\n              value={parameterValues[i]}\n              onChange={value => this.props.onChangeParameter(i, value)}\n              project={project}\n              scope={scope}\n              globalObjectsContainer={globalObjectsContainer}\n              objectsContainer={objectsContainer}\n              key={i}\n              parameterRenderingService={parameterRenderingService}\n            />\n          );\n        })}\n        {ExpressionParametersEditor.getNonCodeOnlyParametersCount(\n          expressionMetadata\n        ) === 0 && (\n          <EmptyMessage>\n            <Trans>There is nothing to configure.</Trans>\n          </EmptyMessage>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type EventsScope } from '../../../InstructionOrExpression/EventsScope.flow';\nimport React, { Component } from 'react';\nimport FlatButton from '../../../UI/FlatButton';\nimport ExpressionParametersEditor from './ExpressionParametersEditor';\nimport Dialog from '../../../UI/Dialog';\nimport Text from '../../../UI/Text';\nimport { Column } from '../../../UI/Grid';\n\nexport type ParameterValues = Array<string>;\n\nconst styles = {\n  minHeightContainer: {\n    // Use a minimum height that is large enough so that ExpressionSelector in\n    // GenericExpressionField can fit and display entirely.\n    minHeight: 300,\n    flex: 1,\n    flexDirection: 'column',\n  },\n};\n\ntype Props = {\n  project?: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  expressionMetadata: gdExpressionMetadata,\n  onDone: ParameterValues => void,\n  onRequestClose: () => void,\n  parameterRenderingService?: {\n    components: any,\n    getParameterComponent: (type: string) => any,\n  },\n};\n\ntype State = {\n  parameterValues: ParameterValues,\n};\n\nexport default class ExpressionParametersEditorDialog extends Component<\n  Props,\n  State\n> {\n  state = {\n    parameterValues: Array(\n      this.props.expressionMetadata.getParametersCount()\n    ).fill(''),\n  };\n\n  render() {\n    const {\n      project,\n      scope,\n      globalObjectsContainer,\n      objectsContainer,\n      expressionMetadata,\n      parameterRenderingService,\n    } = this.props;\n\n    return (\n      <Dialog\n        title={<Trans>Enter the expression parameters</Trans>}\n        cannotBeDismissed={true}\n        open\n        actions={\n          <FlatButton\n            key=\"apply\"\n            label={<Trans>Apply</Trans>}\n            primary\n            onClick={() => this.props.onDone(this.state.parameterValues)}\n          />\n        }\n        noMargin\n        onRequestClose={this.props.onRequestClose}\n      >\n        <Column>\n          <div style={styles.minHeightContainer}>\n            <Text>{expressionMetadata.getDescription()}</Text>\n            <ExpressionParametersEditor\n              project={project}\n              scope={scope}\n              globalObjectsContainer={globalObjectsContainer}\n              objectsContainer={objectsContainer}\n              expressionMetadata={expressionMetadata}\n              parameterValues={this.state.parameterValues}\n              onChangeParameter={(editedIndex, value) => {\n                this.setState({\n                  parameterValues: this.state.parameterValues.map(\n                    (oldValue, index) =>\n                      index === editedIndex ? value : oldValue\n                  ),\n                });\n              }}\n              parameterRenderingService={parameterRenderingService}\n            />\n          </div>\n        </Column>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport { useSerializableObjectCancelableEditor } from '../Utils/SerializableObjectCancelableEditor';\nimport VariablesList from './index';\nimport useForceUpdate from '../Utils/UseForceUpdate';\nimport HotReloadPreviewButton, {\n  type HotReloadPreviewButtonProps,\n} from '../HotReload/HotReloadPreviewButton';\n\ntype Props = {|\n  onCancel: () => void,\n  onApply: () => void,\n  open: boolean,\n  onEditObjectVariables?: () => void,\n  title: React.Node,\n  emptyExplanationMessage?: React.Node,\n  emptyExplanationSecondMessage?: React.Node,\n  variablesContainer: gdVariablesContainer,\n  hotReloadPreviewButtonProps?: ?HotReloadPreviewButtonProps,\n|};\n\nconst VariablesEditorDialog = ({\n  onCancel,\n  onApply,\n  open,\n  onEditObjectVariables,\n  title,\n  emptyExplanationMessage,\n  emptyExplanationSecondMessage,\n  variablesContainer,\n  hotReloadPreviewButtonProps,\n}: Props) => {\n  const forceUpdate = useForceUpdate();\n  const onCancelChanges = useSerializableObjectCancelableEditor({\n    serializableObject: variablesContainer,\n    onCancel,\n  });\n\n  return (\n    <Dialog\n      noMargin\n      actions={[\n        <FlatButton\n          label={<Trans>Cancel</Trans>}\n          onClick={onCancelChanges}\n          key={'Cancel'}\n        />,\n        <FlatButton\n          label={<Trans>Apply</Trans>}\n          primary\n          keyboardFocused\n          onClick={onApply}\n          key={'Apply'}\n        />,\n      ]}\n      open={open}\n      cannotBeDismissed={true}\n      onRequestClose={onCancelChanges}\n      secondaryActions={[\n        onEditObjectVariables ? (\n          <FlatButton\n            key=\"edit-object-variables\"\n            label={<Trans>Edit Object Variables</Trans>}\n            primary={false}\n            onClick={onEditObjectVariables}\n          />\n        ) : null,\n        hotReloadPreviewButtonProps ? (\n          <HotReloadPreviewButton\n            key=\"hot-reload-preview-button\"\n            {...hotReloadPreviewButtonProps}\n          />\n        ) : null,\n      ]}\n      title={title}\n    >\n      <VariablesList\n        commitVariableValueOnBlur={\n          // Reduce the number of re-renders by saving the variable value only when the field is blurred.\n          // We don't do that by default because the VariablesList can be used in a component like\n          // InstancePropertiesEditor, that can be unmounted at any time, before the text fields get a\n          // chance to be blurred.\n          true\n        }\n        variablesContainer={variablesContainer}\n        emptyExplanationMessage={emptyExplanationMessage}\n        emptyExplanationSecondMessage={emptyExplanationSecondMessage}\n        onSizeUpdated={\n          forceUpdate /*Force update to ensure dialog is properly positionned*/\n        }\n      />\n    </Dialog>\n  );\n};\n\nexport default VariablesEditorDialog;\n","// @flow\nimport optionalRequire from './OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst electronClipboard = electron ? electron.clipboard : null;\n\nexport type ClipboardKind = string;\n\nlet internalClipboard = '';\n\nconst mangleClipboardKind = (kind: ClipboardKind): string => {\n  // Mangle the name with GDevelop specific strings and random\n  // characters so that the probability that something that is not\n  // a valid GDevelop clipboard content is recognized as valid is almost 0.\n  return 'GDEVELOP_' + kind + '_CLIPBOARD_KIND-jsBdHbLy912y8Rc';\n};\n\n/**\n * Access to properties and type objects safely (ensuring no crash and no exception\n * in case the expected type is not the one found or totally different than assumed).\n *\n * Each method returns null if the expected type is not found.\n *\n * Useful to deal with arbitrary content coming from the Clipboard.\n */\nexport class SafeExtractor {\n  static extractNumberProperty(\n    anything: any,\n    propertyName: string\n  ): number | null {\n    const object = this.extractObject(anything);\n    if (!object) return null;\n\n    const property = anything[propertyName];\n\n    if (typeof property !== 'number') return null;\n\n    return property;\n  }\n\n  static extractStringProperty(\n    anything: any,\n    propertyName: string\n  ): string | null {\n    const object = this.extractObject(anything);\n    if (!object) return null;\n\n    const property = anything[propertyName];\n\n    if (typeof property !== 'string') return null;\n\n    return property;\n  }\n\n  static extractObjectProperty(\n    anything: any,\n    propertyName: string\n  ): Object | null {\n    const object = this.extractObject(anything);\n    if (!object) return null;\n\n    const property = anything[propertyName];\n\n    return this.extractObject(property);\n  }\n\n  static extractArrayProperty(\n    anything: any,\n    propertyName: string\n  ): Array<any> | null {\n    const object = this.extractObject(anything);\n    if (!object) return null;\n\n    const property = anything[propertyName];\n\n    return this.extractArray(property);\n  }\n\n  static extractObject(anything: any): Object | null {\n    if (\n      anything === null ||\n      anything === undefined ||\n      typeof anything !== 'object' ||\n      Array.isArray(anything)\n    )\n      return null;\n\n    return anything;\n  }\n\n  static extractArray(anything: any): Array<any> | null {\n    if (\n      anything === null ||\n      anything === undefined ||\n      typeof anything !== 'object' ||\n      !Array.isArray(anything)\n    )\n      return null;\n\n    return anything;\n  }\n}\n\nexport default class Clipboard {\n  static set(kind: ClipboardKind, object: any) {\n    const text = JSON.stringify({\n      '000kind': mangleClipboardKind(kind), /// 000 to ensure the key is written first.\n      content: object,\n    });\n\n    if (electronClipboard) {\n      electronClipboard.writeText(text);\n    } else {\n      internalClipboard = text;\n    }\n  }\n\n  /**\n   * Quickly check that the clipboard content *should* be containing valid JSON content\n   * of the specified kind.\n   *\n   * This is only a quick check and not a guarantee. Use `Clipboard.get` to get the value.\n   */\n  static has(kind: ClipboardKind): boolean {\n    let text = '';\n    if (electronClipboard) {\n      text = electronClipboard.readText();\n    } else {\n      text = internalClipboard;\n    }\n\n    return text.indexOf(mangleClipboardKind(kind)) === 12; /// 12 is the position of '000kind' value\n  }\n\n  /**\n   * Get the content of the clipboard. Will return null if not valid JSON.\n   *\n   * Even after parsing, content is **arbitrary** and should be accessed with `SafeExtractor`\n   * to ensure everything is accessed without risk of having a wrong type, which could\n   * crash the app.\n   */\n  static get(kind: ClipboardKind): ?any {\n    if (!Clipboard.has(kind)) return null;\n\n    let text = '';\n    if (electronClipboard) {\n      text = electronClipboard.readText();\n    } else {\n      text = internalClipboard;\n    }\n\n    try {\n      const parsedText = JSON.parse(text);\n      return parsedText.content;\n    } catch (e) {\n      console.warn('The clipboard content is not valid JSON');\n      return null;\n    }\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport InlineCheckbox from '../UI/InlineCheckbox';\nimport ResourceSelector from '../ResourcesList/ResourceSelector';\nimport ResourcesLoader from '../ResourcesLoader';\nimport Subheader from '../UI/Subheader';\nimport FlatButton from '../UI/FlatButton';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport Edit from '@material-ui/icons/Edit';\nimport ColorField from '../UI/ColorField';\nimport { MarkdownText } from '../UI/MarkdownText';\nimport { hexToRGBColor } from '../Utils/ColorTransformer';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport {\n  type ResourceKind,\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport {\n  TextFieldWithButtonLayout,\n  ResponsiveLineStackLayout,\n  ColumnStackLayout,\n} from '../UI/Layout';\nimport RaisedButton from '../UI/RaisedButton';\nimport UnsavedChangesContext, {\n  type UnsavedChanges,\n} from '../MainFrame/UnsavedChangesContext';\n\n// An \"instance\" here is the objects for which properties are shown\nexport type Instance = Object; // This could be improved using generics.\nexport type Instances = Array<Instance>;\n\n// \"Value\" fields are fields displayed in the properties.\nexport type ValueFieldCommonProperties = {|\n  name: string,\n  getLabel?: Instance => string,\n  getDescription?: Instance => string,\n  getExtraDescription?: Instance => string,\n  disabled?: boolean,\n  onEditButtonClick?: Instance => void,\n  onClick?: Instance => void,\n|};\n\n// \"Primitive\" value fields are \"simple\" fields.\nexport type PrimitiveValueField =\n  | {|\n      valueType: 'number',\n      getValue: Instance => number,\n      setValue: (instance: Instance, newValue: number) => void,\n      ...ValueFieldCommonProperties,\n    |}\n  | {|\n      valueType: 'string',\n      getValue: Instance => string,\n      setValue: (instance: Instance, newValue: string) => void,\n      getChoices?: ?() => Array<{| value: string, label: string |}>,\n      ...ValueFieldCommonProperties,\n    |}\n  | {|\n      valueType: 'boolean',\n      getValue: Instance => boolean,\n      setValue: (instance: Instance, newValue: boolean) => void,\n      ...ValueFieldCommonProperties,\n    |}\n  | {|\n      valueType: 'color',\n      getValue: Instance => string,\n      setValue: (instance: Instance, newValue: string) => void,\n      ...ValueFieldCommonProperties,\n    |}\n  | {|\n      valueType: 'textarea',\n      getValue: Instance => string,\n      setValue: (instance: Instance, newValue: string) => void,\n      ...ValueFieldCommonProperties,\n    |};\n\n// \"Resource\" fields are showing a resource selector.\ntype ResourceField = {|\n  valueType: 'resource',\n  resourceKind: ResourceKind,\n  getValue: Instance => string,\n  setValue: (instance: Instance, newValue: string) => void,\n  ...ValueFieldCommonProperties,\n|};\n\n// A value field is a primitive or a resource.\nexport type ValueField = PrimitiveValueField | ResourceField;\n\n// A field can be a primitive, a resource or a list of fields\nexport type Field =\n  | PrimitiveValueField\n  | ResourceField\n  | {|\n      name: string,\n      type: 'row' | 'column',\n      children: Array<Object>,\n    |};\n\n// The schema is the tree of all fields.\nexport type Schema = Array<Field>;\n\n// Mandatory props in any case when using the component\ntype MandatoryProps = {|\n  onInstancesModified?: Instances => void,\n  instances: Instances,\n  schema: Schema,\n  mode?: 'column' | 'row',\n\n  // If set, render the \"extra\" description content from fields\n  // (see getExtraDescription).\n  renderExtraDescriptionText?: (extraDescription: string) => string,\n  unsavedChanges?: ?UnsavedChanges,\n|};\n\ntype Props =\n  // Mandatory props in all cases:\n  | MandatoryProps\n  // Props to be used when you want to display resources:\n  | {|\n      ...MandatoryProps,\n      project: gdProject,\n      resourceSources: Array<ResourceSource>,\n      onChooseResource: ChooseResourceFunction,\n      resourceExternalEditors: Array<ResourceExternalEditor>,\n    |};\n\nconst styles = {\n  columnContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  fieldContainer: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'baseline',\n  },\n  field: {\n    flex: 1,\n    width: 'auto',\n  },\n  subPropertiesEditorContainer: {\n    marginLeft: 15,\n  },\n  subHeader: {\n    paddingLeft: 0,\n  },\n};\n\nconst getFieldValue = (\n  instances: Instances,\n  field: ValueField,\n  defaultValue?: any\n): any => {\n  if (!instances[0]) {\n    console.log(\n      'getFieldValue was called with an empty list of instances (or containing undefined). This is a bug that should be fixed'\n    );\n    return defaultValue;\n  }\n\n  let value = field.getValue(instances[0]);\n  for (var i = 1; i < instances.length; ++i) {\n    if (value !== field.getValue(instances[i])) {\n      if (typeof defaultValue !== 'undefined') value = defaultValue;\n      break;\n    }\n  }\n\n  return value;\n};\n\nconst getFieldLabel = (instances: Instances, field: ValueField): any => {\n  if (!instances[0]) {\n    console.log(\n      'PropertiesEditor._getFieldLabel was called with an empty list of instances (or containing undefined). This is a bug that should be fixed'\n    );\n    return field.name;\n  }\n\n  if (field.getLabel) return field.getLabel(instances[0]);\n\n  return field.name;\n};\n\nexport default class PropertiesEditor extends React.Component<Props, {||}> {\n  _onInstancesModified = (instances: Instances) => {\n    // This properties editor is dealing with fields that are\n    // responsible to update their state (see field.setValue).\n\n    if (this.props.unsavedChanges)\n      this.props.unsavedChanges.triggerUnsavedChanges();\n    if (this.props.onInstancesModified)\n      this.props.onInstancesModified(instances);\n    else this.forceUpdate();\n  };\n\n  _getFieldDescription = (instances: Instances, field: ValueField): ?string => {\n    const { renderExtraDescriptionText } = this.props;\n    if (!instances[0]) {\n      console.log(\n        'PropertiesEditor._getFieldDescription was called with an empty list of instances (or containing undefined). This is a bug that should be fixed'\n      );\n      return undefined;\n    }\n\n    const descriptions: Array<string> = [];\n    if (field.getDescription)\n      descriptions.push(field.getDescription(instances[0]));\n    if (renderExtraDescriptionText && field.getExtraDescription)\n      descriptions.push(\n        renderExtraDescriptionText(field.getExtraDescription(instances[0]))\n      );\n\n    return descriptions.join('\\n') || undefined;\n  };\n\n  _renderInputField = (field: ValueField) => {\n    if (field.name === 'PLEASE_ALSO_SHOW_EDIT_BUTTON_THANKS') return null; // This special property was used in GDevelop 4 IDE to ask for a Edit button to be shown, ignore it.\n\n    if (field.valueType === 'boolean') {\n      const { setValue } = field;\n      const description = this._getFieldDescription(\n        this.props.instances,\n        field\n      );\n\n      return (\n        <InlineCheckbox\n          label={\n            !description ? (\n              getFieldLabel(this.props.instances, field)\n            ) : (\n              <React.Fragment>\n                {getFieldLabel(this.props.instances, field)}{' '}\n                <FormHelperText style={{ display: 'inline' }}>\n                  <MarkdownText source={description} />\n                </FormHelperText>\n              </React.Fragment>\n            )\n          }\n          key={field.name}\n          checked={getFieldValue(this.props.instances, field)}\n          onCheck={(event, newValue) => {\n            this.props.instances.forEach(i => setValue(i, !!newValue));\n            this._onInstancesModified(this.props.instances);\n          }}\n          disabled={field.disabled}\n        />\n      );\n    } else if (field.valueType === 'number') {\n      const { setValue } = field;\n      return (\n        <SemiControlledTextField\n          value={getFieldValue(this.props.instances, field)}\n          key={field.name}\n          id={field.name}\n          floatingLabelText={getFieldLabel(this.props.instances, field)}\n          floatingLabelFixed\n          helperMarkdownText={this._getFieldDescription(\n            this.props.instances,\n            field\n          )}\n          onChange={newValue => {\n            this.props.instances.forEach(i =>\n              setValue(i, parseFloat(newValue) || 0)\n            );\n            this._onInstancesModified(this.props.instances);\n          }}\n          type=\"number\"\n          style={styles.field}\n          disabled={field.disabled}\n        />\n      );\n    } else if (field.valueType === 'color') {\n      const { setValue } = field;\n      return (\n        <ColorField\n          key={field.name}\n          id={field.name}\n          floatingLabelText={getFieldLabel(this.props.instances, field)}\n          helperMarkdownText={this._getFieldDescription(\n            this.props.instances,\n            field\n          )}\n          disableAlpha\n          fullWidth\n          color={hexToRGBColor(getFieldValue(this.props.instances, field))}\n          onChangeComplete={color => {\n            this.props.instances.forEach(i =>\n              setValue(i, color.hex || '#000000')\n            );\n            this._onInstancesModified(this.props.instances);\n          }}\n        />\n      );\n    } else if (field.valueType === 'textarea') {\n      const { setValue } = field;\n      return (\n        <SemiControlledTextField\n          key={field.name}\n          id={field.name}\n          onChange={text => {\n            this.props.instances.forEach(i => setValue(i, text || ''));\n            this._onInstancesModified(this.props.instances);\n          }}\n          value={getFieldValue(this.props.instances, field)}\n          floatingLabelText={getFieldLabel(this.props.instances, field)}\n          floatingLabelFixed\n          helperMarkdownText={this._getFieldDescription(\n            this.props.instances,\n            field\n          )}\n          multiline\n          style={styles.field}\n        />\n      );\n    } else {\n      const { onEditButtonClick, setValue } = field;\n      return (\n        <TextFieldWithButtonLayout\n          key={field.name}\n          renderTextField={() => (\n            <SemiControlledTextField\n              value={getFieldValue(\n                this.props.instances,\n                field,\n                '(Multiple values)'\n              )}\n              id={field.name}\n              floatingLabelText={getFieldLabel(this.props.instances, field)}\n              floatingLabelFixed\n              helperMarkdownText={this._getFieldDescription(\n                this.props.instances,\n                field\n              )}\n              onChange={newValue => {\n                this.props.instances.forEach(i => setValue(i, newValue || ''));\n                this._onInstancesModified(this.props.instances);\n              }}\n              style={styles.field}\n              disabled={field.disabled}\n            />\n          )}\n          renderButton={style =>\n            onEditButtonClick ? (\n              <RaisedButton\n                style={style}\n                primary\n                disabled={this.props.instances.length !== 1}\n                icon={<Edit />}\n                label={<Trans>Edit</Trans>}\n                onClick={() => onEditButtonClick(this.props.instances[0])}\n              />\n            ) : null\n          }\n        />\n      );\n    }\n  };\n\n  _renderSelectField = (field: ValueField) => {\n    if (!field.getChoices || !field.getValue) return;\n\n    const children = field\n      .getChoices()\n      .map(({ value, label }) => (\n        <SelectOption key={value} value={value} primaryText={label} />\n      ));\n\n    if (field.valueType === 'number') {\n      const { setValue } = field;\n      return (\n        <SelectField\n          value={getFieldValue(this.props.instances, field)}\n          key={field.name}\n          floatingLabelText={getFieldLabel(this.props.instances, field)}\n          helperMarkdownText={this._getFieldDescription(\n            this.props.instances,\n            field\n          )}\n          onChange={(event, index, newValue: string) => {\n            this.props.instances.forEach(i =>\n              setValue(i, parseFloat(newValue) || 0)\n            );\n            this._onInstancesModified(this.props.instances);\n          }}\n          style={styles.field}\n          disabled={field.disabled}\n        >\n          {children}\n        </SelectField>\n      );\n    } else if (field.valueType === 'string') {\n      const { setValue } = field;\n      return (\n        <SelectField\n          value={getFieldValue(\n            this.props.instances,\n            field,\n            '(Multiple values)'\n          )}\n          key={field.name}\n          floatingLabelText={getFieldLabel(this.props.instances, field)}\n          helperMarkdownText={this._getFieldDescription(\n            this.props.instances,\n            field\n          )}\n          onChange={(event, index, newValue: string) => {\n            this.props.instances.forEach(i => setValue(i, newValue || ''));\n            this._onInstancesModified(this.props.instances);\n          }}\n          style={styles.field}\n          disabled={field.disabled}\n        >\n          {children}\n        </SelectField>\n      );\n    }\n  };\n\n  _renderButton = (field: ValueField) => {\n    //TODO: multi selection handling\n    return (\n      <FlatButton\n        key={field.name}\n        fullWidth\n        primary\n        label={getFieldLabel(this.props.instances, field)}\n        onClick={() => {\n          if (field.onClick) field.onClick(this.props.instances[0]);\n        }}\n      />\n    );\n  };\n\n  _renderResourceField = (field: ResourceField) => {\n    if (!this.props.project) {\n      console.error(\n        'You tried to display a resource field in a PropertiesEditor that does not support display resources. If you need to display resources, pass additional props (project, resourceSources, etc...)'\n      );\n      return;\n    }\n\n    const { setValue } = field;\n    return (\n      <ResourceSelector\n        key={field.name}\n        project={this.props.project}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        resourcesLoader={ResourcesLoader}\n        resourceKind={field.resourceKind}\n        fullWidth\n        initialResourceName={getFieldValue(\n          this.props.instances,\n          field,\n          '(Multiple values)' //TODO\n        )}\n        onChange={newValue => {\n          this.props.instances.forEach(i => setValue(i, newValue));\n          this._onInstancesModified(this.props.instances);\n        }}\n        floatingLabelText={getFieldLabel(this.props.instances, field)}\n        helperMarkdownText={this._getFieldDescription(\n          this.props.instances,\n          field\n        )}\n      />\n    );\n  };\n\n  render() {\n    const { mode } = this.props;\n\n    const renderContainer =\n      mode === 'row'\n        ? (fields: React.Node) => (\n            <ResponsiveLineStackLayout noMargin>\n              {fields}\n            </ResponsiveLineStackLayout>\n          )\n        : (fields: React.Node) => (\n            <ColumnStackLayout noMargin>{fields}</ColumnStackLayout>\n          );\n\n    return renderContainer(\n      this.props.schema.map(field => {\n        if (field.children) {\n          if (field.type === 'row') {\n            return (\n              <UnsavedChangesContext.Consumer key={field.name}>\n                {unsavedChanges => (\n                  <PropertiesEditor\n                    schema={field.children}\n                    instances={this.props.instances}\n                    mode=\"row\"\n                    unsavedChanges={unsavedChanges}\n                  />\n                )}\n              </UnsavedChangesContext.Consumer>\n            );\n          }\n\n          return (\n            <div key={field.name}>\n              <Subheader>{field.name}</Subheader>\n              <div style={styles.subPropertiesEditorContainer}>\n                <PropertiesEditor\n                  schema={field.children}\n                  instances={this.props.instances}\n                  mode=\"column\"\n                />\n              </div>\n            </div>\n          );\n        } else if (field.valueType === 'resource') {\n          return this._renderResourceField(field);\n        } else {\n          if (field.getChoices && field.getValue)\n            return this._renderSelectField(field);\n          if (field.getValue) return this._renderInputField(field);\n          if (field.onClick) return this._renderButton(field);\n        }\n\n        return null;\n      })\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Column, Line } from './Grid';\nimport RaisedButton from './RaisedButton';\nimport EmptyMessage from './EmptyMessage';\n\ntype Props = {|\n  children: React.Node,\n  onRetry?: () => void,\n|};\n\nconst PlaceholderError = ({ onRetry, children }: Props) => (\n  <Column expand alignItems=\"center\">\n    <EmptyMessage>{children}</EmptyMessage>\n    <Line>\n      {onRetry && (\n        <RaisedButton\n          primary\n          label={<Trans>Retry</Trans>}\n          onClick={() => onRetry()}\n        />\n      )}\n    </Line>\n  </Column>\n);\n\nexport default PlaceholderError;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  type Filters,\n  type TagsTreeNode,\n} from '../../Utils/GDevelopServices/Types.flow';\nimport InlineCheckbox from '../InlineCheckbox';\nimport { ColumnStackLayout } from '../Layout';\nimport PlaceholderLoader from '../PlaceholderLoader';\nimport EmptyMessage from '../EmptyMessage';\n\nexport type ChosenCategory = {|\n  node: TagsTreeNode,\n  parentNodes: Array<TagsTreeNode>,\n|};\n\nexport type FiltersState = {|\n  chosenFilters: Set<string>,\n  addFilter: string => void,\n  removeFilter: string => void,\n  chosenCategory: ?ChosenCategory,\n  setChosenCategory: (?ChosenCategory) => void,\n|};\n\nexport const useFilters = (): FiltersState => {\n  const [chosenCategory, setChosenCategory] = React.useState<?ChosenCategory>(\n    null\n  );\n  const [chosenFilters, setChosenFilters] = React.useState<Set<string>>(\n    () => new Set()\n  );\n\n  const setChosenCategoryAndUpdateFilters = React.useCallback(\n    (newChosenCategory: ?ChosenCategory) => {\n      if (!newChosenCategory) {\n        // No more category is chosen. Keep the filters\n        setChosenCategory(null);\n      } else {\n        // Remove the filters that are not included in the category,\n        // as it would make no sense (not displayed, and everything would be filtered out).\n        const newChosenFilters = new Set();\n        for (const tag of chosenFilters.keys()) {\n          if (newChosenCategory.node.allChildrenTags.includes(tag)) {\n            newChosenFilters.add(tag);\n          }\n        }\n\n        setChosenFilters(newChosenFilters);\n        setChosenCategory(newChosenCategory);\n      }\n    },\n    [chosenFilters]\n  );\n\n  return {\n    chosenCategory,\n    setChosenCategory: setChosenCategoryAndUpdateFilters,\n    chosenFilters,\n    addFilter: (tag: string) => {\n      const newChosenFilters = new Set(chosenFilters);\n      newChosenFilters.add(tag);\n      setChosenFilters(newChosenFilters);\n    },\n    removeFilter: (tag: string) => {\n      const newChosenFilters = new Set(chosenFilters);\n      newChosenFilters.delete(tag);\n\n      setChosenFilters(newChosenFilters);\n    },\n  };\n};\n\nconst capitalize = (str: string) => {\n  if (!str) return '';\n\n  return str[0].toUpperCase() + str.substr(1);\n};\n\ntype Props = {|\n  filtersState: FiltersState,\n  allFilters: ?Filters,\n  error: ?Error,\n|};\n\nexport const FiltersChooser = ({ filtersState, allFilters, error }: Props) => {\n  if (!allFilters) {\n    return <PlaceholderLoader />;\n  }\n  if (error) {\n    // Error and retry button shown somewhere else in the UI\n    return null;\n  }\n\n  // Only display the tags that are contained inside the selected category\n  const selectedCategoryTags = filtersState.chosenCategory\n    ? filtersState.chosenCategory.node.allChildrenTags\n    : allFilters.defaultTags;\n\n  return (\n    <ColumnStackLayout>\n      {!selectedCategoryTags ? (\n        <EmptyMessage>\n          <Trans>Choose a category to display filters</Trans>\n        </EmptyMessage>\n      ) : selectedCategoryTags.length ? (\n        selectedCategoryTags.map(tag => (\n          <InlineCheckbox\n            key={tag}\n            label={capitalize(tag)}\n            checked={filtersState.chosenFilters.has(tag)}\n            onCheck={() => {\n              if (filtersState.chosenFilters.has(tag)) {\n                filtersState.removeFilter(tag);\n              } else {\n                filtersState.addFilter(tag);\n              }\n            }}\n          />\n        ))\n      ) : (\n        <EmptyMessage>\n          <Trans>No filters in this category.</Trans>\n        </EmptyMessage>\n      )}\n    </ColumnStackLayout>\n  );\n};\n","// @flow\nimport { type I18n as I18nType } from '@lingui/core';\nimport { mapVector, mapFor } from '../Utils/MapFor';\nimport { caseSensitiveSlug } from '../Utils/CaseSensitiveSlug';\nimport {\n  declareInstructionOrExpressionMetadata,\n  declareBehaviorInstructionOrExpressionMetadata,\n  declareEventsFunctionParameters,\n  declareBehaviorMetadata,\n  declareExtension,\n  isBehaviorLifecycleEventsFunction,\n  isExtensionLifecycleEventsFunction,\n  declareBehaviorPropertiesInstructionAndExpressions,\n} from './MetadataDeclarationHelpers';\n\nconst gd: libGDevelop = global.gd;\n\nexport type EventsFunctionCodeWriter = {|\n  getIncludeFileFor: (functionName: string) => string,\n  writeFunctionCode: (functionName: string, code: string) => Promise<void>,\n  writeBehaviorCode: (behaviorName: string, code: string) => Promise<void>,\n|};\n\nexport type IncludeFileContent = {|\n  includeFile: string,\n  content: string,\n|};\n\nexport type EventsFunctionCodeWriterCallbacks = {|\n  onWriteFile: IncludeFileContent => void,\n|};\n\ntype Options = {|\n  skipCodeGeneration?: boolean,\n  eventsFunctionCodeWriter: EventsFunctionCodeWriter,\n  i18n: I18nType,\n|};\n\ntype CodeGenerationContext = {|\n  codeNamespacePrefix: string,\n  extensionIncludeFiles: Array<string>,\n|};\n\nconst mangleName = (name: string) => {\n  return caseSensitiveSlug(name, '_', []);\n};\n\n/** Generate the namespace for a free function. */\nconst getFreeFunctionCodeNamespace = (\n  eventsFunction: gdEventsFunction,\n  codeNamespacePrefix: string\n) => {\n  return codeNamespacePrefix + '__' + mangleName(eventsFunction.getName());\n};\n\n/** Generate the namespace for a behavior function. */\nconst getBehaviorFunctionCodeNamespace = (\n  eventsBasedBehavior: gdEventsBasedBehavior,\n  codeNamespacePrefix: string\n) => {\n  return codeNamespacePrefix + '__' + mangleName(eventsBasedBehavior.getName());\n};\n\n/**\n * Load all events functions of a project in extensions\n */\nexport const loadProjectEventsFunctionsExtensions = (\n  project: gdProject,\n  eventsFunctionCodeWriter: EventsFunctionCodeWriter,\n  i18n: I18nType\n): Promise<Array<void>> => {\n  return Promise.all(\n    // First pass: generate extensions from the events functions extensions,\n    // without writing code for the functions. This is useful as events in functions\n    // could be using other functions, which would not yet be available as\n    // extensions.\n    mapFor(0, project.getEventsFunctionsExtensionsCount(), i => {\n      return loadProjectEventsFunctionsExtension(\n        project,\n        project.getEventsFunctionsExtensionAt(i),\n        { skipCodeGeneration: true, eventsFunctionCodeWriter, i18n }\n      );\n    })\n  ).then(() =>\n    Promise.all(\n      // Second pass: generate extensions, including code.\n      mapFor(0, project.getEventsFunctionsExtensionsCount(), i => {\n        return loadProjectEventsFunctionsExtension(\n          project,\n          project.getEventsFunctionsExtensionAt(i),\n          {\n            skipCodeGeneration: false,\n            eventsFunctionCodeWriter,\n            i18n,\n          }\n        );\n      })\n    )\n  );\n};\n\nconst loadProjectEventsFunctionsExtension = (\n  project: gdProject,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  options: Options\n): Promise<void> => {\n  return generateEventsFunctionExtension(\n    project,\n    eventsFunctionsExtension,\n    options\n  ).then(extension => {\n    gd.JsPlatform.get().addNewExtension(extension);\n    extension.delete();\n  });\n};\n\n/**\n * Get the list of mandatory include files when using the\n * extension.\n */\nconst getExtensionIncludeFiles = (\n  project: gdProject,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  options: Options,\n  codeNamespacePrefix: string\n): Array<string> => {\n  return mapFor(0, eventsFunctionsExtension.getEventsFunctionsCount(), i => {\n    const eventsFunction = eventsFunctionsExtension.getEventsFunctionAt(i);\n\n    if (isExtensionLifecycleEventsFunction(eventsFunction.getName())) {\n      const codeNamespace = getFreeFunctionCodeNamespace(\n        eventsFunction,\n        codeNamespacePrefix\n      );\n      const functionName = codeNamespace + '.func'; // TODO\n\n      return options.eventsFunctionCodeWriter.getIncludeFileFor(functionName);\n    }\n\n    return null;\n  }).filter(Boolean);\n};\n\n/**\n * Generate the code for the events based extension\n */\nconst generateEventsFunctionExtension = (\n  project: gdProject,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  options: Options\n): Promise<gdPlatformExtension> => {\n  const extension = new gd.PlatformExtension();\n  declareExtension(extension, eventsFunctionsExtension);\n\n  const codeNamespacePrefix =\n    'gdjs.evtsExt__' + mangleName(eventsFunctionsExtension.getName());\n\n  const extensionIncludeFiles = getExtensionIncludeFiles(\n    project,\n    eventsFunctionsExtension,\n    options,\n    codeNamespacePrefix\n  );\n  const codeGenerationContext = {\n    codeNamespacePrefix,\n    extensionIncludeFiles,\n  };\n\n  return Promise.all(\n    // Generate all behaviors and their functions\n    mapVector(\n      eventsFunctionsExtension.getEventsBasedBehaviors(),\n      eventsBasedBehavior => {\n        return generateBehavior(\n          project,\n          extension,\n          eventsFunctionsExtension,\n          eventsBasedBehavior,\n          options,\n          codeGenerationContext\n        );\n      }\n    )\n  )\n    .then(() =>\n      // Generate all free functions\n      Promise.all(\n        mapFor(0, eventsFunctionsExtension.getEventsFunctionsCount(), i => {\n          const eventsFunction = eventsFunctionsExtension.getEventsFunctionAt(\n            i\n          );\n          return generateFreeFunction(\n            project,\n            extension,\n            eventsFunctionsExtension,\n            eventsFunction,\n            options,\n            codeGenerationContext\n          );\n        })\n      )\n    )\n    .then(() => extension);\n};\n\nconst generateFreeFunction = (\n  project: gdProject,\n  extension: gdPlatformExtension,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  eventsFunction: gdEventsFunction,\n  options: Options,\n  codeGenerationContext: CodeGenerationContext\n): Promise<void> => {\n  const instructionOrExpression = declareInstructionOrExpressionMetadata(\n    extension,\n    eventsFunctionsExtension,\n    eventsFunction\n  );\n  // By convention, first parameter is always the Runtime Scene.\n  instructionOrExpression.addCodeOnlyParameter('currentScene', '');\n  declareEventsFunctionParameters(eventsFunction, instructionOrExpression);\n\n  // Hide \"lifecycle\" functions as they are called automatically by\n  // the game engine.\n  if (isExtensionLifecycleEventsFunction(eventsFunction.getName())) {\n    instructionOrExpression.setHidden();\n  }\n\n  const codeNamespace = getFreeFunctionCodeNamespace(\n    eventsFunction,\n    codeGenerationContext.codeNamespacePrefix\n  );\n  const functionName = codeNamespace + '.func';\n\n  const codeExtraInformation = instructionOrExpression.getCodeExtraInformation();\n  codeExtraInformation\n    .setIncludeFile(\n      options.eventsFunctionCodeWriter.getIncludeFileFor(functionName)\n    )\n    .setFunctionName(functionName);\n\n  // Always include the extension include files when using a free function.\n  codeGenerationContext.extensionIncludeFiles.forEach(includeFile => {\n    codeExtraInformation.addIncludeFile(includeFile);\n  });\n\n  if (!options.skipCodeGeneration) {\n    const includeFiles = new gd.SetString();\n    const eventsFunctionsExtensionCodeGenerator = new gd.EventsFunctionsExtensionCodeGenerator(\n      project\n    );\n    const code = eventsFunctionsExtensionCodeGenerator.generateFreeEventsFunctionCompleteCode(\n      eventsFunction,\n      codeNamespace,\n      includeFiles,\n      // For now, always generate functions for runtime (this disables\n      // generation of profiling for groups (see EventsCodeGenerator))\n      // as extensions generated can be used either for preview or export.\n      true\n    );\n\n    // Add any include file required by the function to the list\n    // of include files for this function (so that when used, the \"dependencies\"\n    // are transitively included).\n    includeFiles\n      .toNewVectorString()\n      .toJSArray()\n      .forEach((includeFile: string) => {\n        codeExtraInformation.addIncludeFile(includeFile);\n      });\n\n    includeFiles.delete();\n\n    return options.eventsFunctionCodeWriter.writeFunctionCode(\n      functionName,\n      code\n    );\n  } else {\n    // Skip code generation if no events function writer is provided.\n    // This is the case during the \"first pass\", where all events functions extensions\n    // are loaded as extensions but not code generated, as events in functions could\n    // themselves be using functions that are not yet available in extensions.\n    return Promise.resolve();\n  }\n};\n\nfunction generateBehavior(\n  project: gdProject,\n  extension: gdPlatformExtension,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  eventsBasedBehavior: gdEventsBasedBehavior,\n  options: Options,\n  codeGenerationContext: CodeGenerationContext\n): Promise<void> {\n  const behaviorMetadata = declareBehaviorMetadata(\n    extension,\n    eventsBasedBehavior\n  );\n\n  const eventsFunctionsContainer = eventsBasedBehavior.getEventsFunctions();\n  const codeNamespace = getBehaviorFunctionCodeNamespace(\n    eventsBasedBehavior,\n    codeGenerationContext.codeNamespacePrefix\n  );\n  const includeFile = options.eventsFunctionCodeWriter.getIncludeFileFor(\n    codeNamespace\n  );\n\n  behaviorMetadata.setIncludeFile(includeFile);\n\n  // Always include the extension include files when using a behavior.\n  codeGenerationContext.extensionIncludeFiles.forEach(includeFile => {\n    behaviorMetadata.addIncludeFile(includeFile);\n  });\n\n  return Promise.resolve().then(() => {\n    const behaviorMethodMangledNames = new gd.MapStringString();\n\n    // Declare the instructions/expressions for properties\n    declareBehaviorPropertiesInstructionAndExpressions(\n      options.i18n,\n      extension,\n      behaviorMetadata,\n      eventsBasedBehavior\n    );\n\n    // Declare all the behavior functions\n    mapFor(0, eventsFunctionsContainer.getEventsFunctionsCount(), i => {\n      const eventsFunction = eventsFunctionsContainer.getEventsFunctionAt(i);\n\n      const eventsFunctionMangledName = mangleName(eventsFunction.getName());\n      behaviorMethodMangledNames.set(\n        eventsFunction.getName(),\n        eventsFunctionMangledName\n      );\n\n      const instructionOrExpression = declareBehaviorInstructionOrExpressionMetadata(\n        extension,\n        behaviorMetadata,\n        eventsBasedBehavior,\n        eventsFunction\n      );\n      declareEventsFunctionParameters(eventsFunction, instructionOrExpression);\n\n      // Hide \"lifecycle\" methods as they are called automatically by\n      // the game engine.\n      if (isBehaviorLifecycleEventsFunction(eventsFunction.getName())) {\n        instructionOrExpression.setHidden();\n      }\n\n      const codeExtraInformation = instructionOrExpression.getCodeExtraInformation();\n      codeExtraInformation\n        .setIncludeFile(includeFile)\n        .setFunctionName(eventsFunctionMangledName);\n    });\n\n    // Generate code for the behavior and its methods\n    if (!options.skipCodeGeneration) {\n      const includeFiles = new gd.SetString();\n      const behaviorCodeGenerator = new gd.BehaviorCodeGenerator(project);\n      const code = behaviorCodeGenerator.generateRuntimeBehaviorCompleteCode(\n        eventsFunctionsExtension.getName(),\n        eventsBasedBehavior,\n        codeNamespace,\n        behaviorMethodMangledNames,\n        includeFiles,\n\n        // For now, always generate functions for runtime (this disables\n        // generation of profiling for groups (see EventsCodeGenerator))\n        // as extensions generated can be used either for preview or export.\n        true\n      );\n      behaviorCodeGenerator.delete();\n      behaviorMethodMangledNames.delete();\n\n      // Add any include file required by the functions to the list\n      // of include files for this behavior (so that when used, the \"dependencies\"\n      // are transitively included).\n      includeFiles\n        .toNewVectorString()\n        .toJSArray()\n        .forEach((includeFile: string) => {\n          behaviorMetadata.addIncludeFile(includeFile);\n        });\n\n      includeFiles.delete();\n\n      return options.eventsFunctionCodeWriter.writeBehaviorCode(\n        codeNamespace,\n        code\n      );\n    } else {\n      // Skip code generation\n      behaviorMethodMangledNames.delete();\n      return Promise.resolve();\n    }\n  });\n}\n\n/**\n * Unload all extensions providing events functions of a project\n */\nexport const unloadProjectEventsFunctionsExtensions = (\n  project: gdProject\n): Promise<Array<void>> => {\n  return Promise.all(\n    mapFor(0, project.getEventsFunctionsExtensionsCount(), i => {\n      gd.JsPlatform.get().removeExtension(\n        project.getEventsFunctionsExtensionAt(i).getName()\n      );\n    })\n  );\n};\n\n/**\n * Unload a single extension providing events functions of a project\n */\nexport const unloadProjectEventsFunctionsExtension = (\n  project: gdProject,\n  extensionName: string\n): void => {\n  gd.JsPlatform.get().removeExtension(extensionName);\n};\n\n/**\n * Given metadata about an instruction or an expression, tells if this was created\n * from an event function.\n */\nexport const isAnEventFunctionMetadata = (\n  instructionOrExpression: gdInstructionMetadata | gdExpressionMetadata\n) => {\n  const parametersCount = instructionOrExpression.getParametersCount();\n  if (parametersCount <= 0) return false;\n\n  return (\n    instructionOrExpression.getParameter(parametersCount - 1).getType() ===\n    'eventsFunctionContext'\n  );\n};\n\n/**\n * Get back the name a function from its type.\n * See also getFreeEventsFunctionType for the reverse operation.\n */\nexport const getFunctionNameFromType = (type: string) => {\n  const parts = type.split('::');\n  if (!parts.length)\n    return {\n      name: '',\n      behaviorName: '',\n      extensionName: '',\n    };\n\n  return {\n    name: parts[parts.length - 1],\n    behaviorName: parts.length > 2 ? parts[1] : undefined,\n    extensionName: parts[0],\n  };\n};\n\n/**\n * Get the type of a Events Function.\n * See also getFunctionNameFromType for the reverse operation.\n */\nexport const getFreeEventsFunctionType = (\n  extensionName: string,\n  eventsFunction: gdEventsFunction\n) => {\n  return extensionName + '::' + eventsFunction.getName();\n};\n\n/**\n * Return the index of the first parameter to be shown to the user:\n * * 0 for a behavior \"method\",\n * * 1 for a free function (as the first parameter is by convention the runtimeScene).\n */\nexport const getParametersIndexOffset = (\n  isEventsBasedBehaviorMethod: boolean\n) => {\n  return isEventsBasedBehaviorMethod\n    ? 0 /*In the case of a behavior events function, the first two parameters are by convention the \"Object\" and \"Behavior\" */\n    : 1; /*In the case of a free events function (i.e: not tied to a behavior), the first parameter is by convention the current scene and is not shown.*/\n};\n","// @flow\n\n/**\n * Checks if a dialog or overlay is currently open on screen\n */\nconst isDialogOpen = () => {\n  // If currently focused element is inside MainFrame div, we can\n  // be sure that no dialog or overlay is opened.\n  // But clicking on some empty spaces like in properties panel leads\n  // to <body> element getting focused, so we also need to check if\n  // currently focused element is <body>.\n  const body = document.body;\n  const activeEl = document.activeElement;\n  const mainFrame = document.querySelector('div.main-frame');\n  const isInMainframe = mainFrame && mainFrame.contains(activeEl);\n  const isBody = activeEl === body;\n  return !isBody && !isInMainframe;\n};\n\nexport default isDialogOpen;\n","// @flow\n\nconst reservedShortcuts = [\n  'CmdOrCtrl+KeyZ', // Undo\n  'CmdOrCtrl+KeyY', // Redo\n  'CmdOrCtrl+Shift+KeyZ', // Redo\n  'CmdOrCtrl+KeyX', // Cut\n  'CmdOrCtrl+KeyC', // Copy\n  'CmdOrCtrl+KeyV', // Paste\n  'CmdOrCtrl+Shift+KeyV', // Paste with style\n  'CmdOrCtrl+KeyA', // Select all\n  'Delete', // Delete\n  'CmdOrCtrl+Shift+KeyI', // Open dev tools\n  'F11', // Toggle fullscreen\n\n  'NumpadAdd', // Scene: Zoom in\n  'CmdOrCtrl+Equal', // Scene: Zoom in\n  'NumpadSubtract', // Scene: Zoom out\n  'CmdOrCtrl+Minus', // Scene: Zoom out\n\n  // TODO: Following shortcuts correspond to actions\n  // that have overlapping commands\n  'CmdOrCtrl+KeyF', // Events: Search\n];\n\nexport default reservedShortcuts;\n","// @flow\n\n/**\n * Checks if the user is currently typing text\n */\nconst isUserTyping = () => {\n  const activeElement = document.activeElement;\n  if (!activeElement) return false;\n  // Check if focused element is part of a text entry HTML element\n  const textEditorSelectors = 'textarea, input, [contenteditable=\"true\"]';\n  if (activeElement.closest(textEditorSelectors)) return true;\n  return false;\n};\n\nexport default isUserTyping;\n","// @flow\nimport * as React from 'react';\nimport isDialogOpen from '../UI/OpenedDialogChecker';\nimport { isMacLike } from '../Utils/Platform';\nimport reservedShortcuts from './ReservedShortcuts';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport commandsList, { type CommandName } from '../CommandPalette/CommandsList';\nimport isUserTyping from './IsUserTyping';\nimport defaultShortcuts, { type ShortcutMap } from './DefaultShortcuts';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\n\n// Valid action keys\ntype KeyType =\n  | 'alphabet' // A-Z\n  | 'number' // Numrow 0-9\n  | 'fn-row' // F1-F12\n  | 'numpad-arith' // Numpad+, Numpad-\n  | 'numrow-arith' // Numrow-, Numrow=\n  | 'other'; // Tab, Space\n\n/**\n * Given a key code, gives the associated KeyType.\n * Returns null if the key code can't be categorised.\n */\nconst getKeyTypeFromCode = (code: string): KeyType | null => {\n  if (!code) return null;\n  if (code.indexOf('Key') === 0) return 'alphabet';\n  if (code.indexOf('Digit') === 0) return 'number';\n  if (code.indexOf('F') === 0) return 'fn-row';\n  if (code === 'NumpadAdd' || code === 'NumpadSubtract') return 'numpad-arith';\n  if (code === 'Equal' || code === 'Minus') return 'numrow-arith';\n  if (code === 'Tab' || code === 'Space') return 'other';\n  return null;\n};\n\n/**\n * Returns possibly partial shortcut string corresponding to given event object\n */\nexport const getShortcutStringFromEvent = (e: KeyboardEvent): string => {\n  let shortcutString = '';\n  if (e.ctrlKey || e.metaKey) shortcutString += 'CmdOrCtrl+';\n  if (e.shiftKey) shortcutString += 'Shift+';\n  if (e.altKey) shortcutString += 'Alt+';\n\n  const code = e.code || ''; // Somehow `code` was sometimes reported to be undefined.\n  const keyType = getKeyTypeFromCode(code);\n  if (keyType) shortcutString += code;\n  return shortcutString;\n};\n\n/**\n * Checks if the given event corresponds to a valid shortcut press.\n * Does not check if shortcut is reserved or not.\n */\nexport const isValidShortcutEvent = (e: KeyboardEvent): boolean => {\n  // Check if action key is a shortcut supported key\n  const code = e.code || ''; // Somehow `code` was sometimes reported to be undefined.\n  const keyType = getKeyTypeFromCode(code);\n  if (!keyType) return false;\n\n  const ctrlOrCmdPressed = e.ctrlKey || e.metaKey;\n  const altPressed = e.altKey;\n\n  // Check keytype-specific restrictions\n  if (keyType === 'other') {\n    // Tab and Space may clash with keyboard navigation - Ctrl or Alt required\n    if (!ctrlOrCmdPressed && !altPressed) return false;\n  }\n\n  return true;\n};\n\n/**\n * Extracts shortcut-related information from given event object\n */\nexport const getShortcutMetadataFromEvent = (\n  e: KeyboardEvent\n): {| shortcutString: string, isValid: boolean |} => {\n  const shortcutString = getShortcutStringFromEvent(e);\n  const isValidKey = isValidShortcutEvent(e);\n  const isReserved = reservedShortcuts.includes(shortcutString);\n  return { shortcutString, isValid: isValidKey && !isReserved };\n};\n\n/**\n * Patches default shortcuts set with user's custom shortcuts and\n * returns the full shortcut map obtained.\n */\nexport const useShortcutMap = (): ShortcutMap => {\n  const preferences = React.useContext(PreferencesContext);\n  const userShortcutMap = preferences.values.userShortcutMap;\n  return { ...defaultShortcuts, ...userShortcutMap };\n};\n\n/**\n * Listens for keyboard shortcuts and launches\n * callback with corresponding command\n */\nexport const useKeyboardShortcuts = (onRunCommand: CommandName => void) => {\n  const shortcutMap = useShortcutMap();\n\n  React.useEffect(\n    () => {\n      const handler = (e: KeyboardEvent) => {\n        // Extract shortcut from event object and check if it's valid\n        const shortcutData = getShortcutMetadataFromEvent(e);\n        if (!shortcutData.isValid) return;\n\n        // Get corresponding command, if it exists\n        const commandName = Object.keys(shortcutMap).find(\n          name => shortcutMap[name] === shortcutData.shortcutString\n        );\n        if (!commandName) return;\n\n        // On desktop app, ignore shortcuts that are handled by Electron\n        if (electron && commandsList[commandName].handledByElectron) return;\n\n        // e.preventDefault tends to block user from typing,\n        // so do it only if user is not typing.\n        if (isUserTyping()) return;\n        e.preventDefault();\n\n        // Discard shortcut presses if a dialog is open\n        if (isDialogOpen()) return;\n\n        onRunCommand(commandName);\n      };\n\n      document.addEventListener('keydown', handler);\n      return () => document.removeEventListener('keydown', handler);\n    },\n    [onRunCommand, shortcutMap]\n  );\n};\n\n/**\n * Converts an action key's e.code value to user-friendly string\n * For example, \"KeyA\" -> \"A\", \"NumpadAdd\" -> \"Plus\"\n */\nconst getKeyDisplayName = (code: string) => {\n  const keyType = getKeyTypeFromCode(code);\n  if (keyType === 'alphabet') return code.slice(3);\n  if (keyType === 'number') return code.slice(5);\n  if (keyType === 'fn-row') return code;\n  if (keyType === 'numpad-arith') return code === 'NumpadAdd' ? 'Num+' : 'Num-';\n  if (keyType === 'numrow-arith') return code === 'Minus' ? '-' : '=';\n  return code; // Tab, Space\n};\n\n/**\n * Parses shortcut string into array of platform-specific key strings\n */\nexport const getShortcutDisplayName = (shortcutString: string) => {\n  return shortcutString\n    .split('+')\n    .map<string>(keyCode => {\n      if (keyCode === 'CmdOrCtrl') return isMacLike() ? 'Cmd' : 'Ctrl';\n      if (keyCode === 'Shift' || keyCode === 'Alt') return keyCode;\n      return getKeyDisplayName(keyCode);\n    })\n    .join(' + ');\n};\n\n/**\n * Takes key code and returns Electron string for the key\n */\nconst getElectronKeyString = (code: string) => {\n  const keyType = getKeyTypeFromCode(code);\n  if (keyType === 'alphabet') return code.slice(3);\n  if (keyType === 'number') return code.slice(5);\n  if (keyType === 'fn-row') return code;\n  if (keyType === 'numpad-arith')\n    return code === 'NumpadAdd' ? 'numadd' : 'numsub';\n  if (keyType === 'numrow-arith') return code === 'Minus' ? '-' : '=';\n  return code; // Tab, Space\n};\n\n/**\n * Converts given shortcut string into an Electron accelerator string\n */\nexport const getElectronAccelerator = (shortcutString: string) => {\n  return shortcutString\n    .split('+')\n    .map<string>(keyCode => {\n      if (keyCode === 'CmdOrCtrl' || keyCode === 'Shift' || keyCode === 'Alt')\n        return keyCode;\n      return getElectronKeyString(keyCode);\n    })\n    .join('+');\n};\n","// @flow\nimport * as React from 'react';\nimport RaisedButton, {\n  type RaisedButtonPropsWithoutOnClick,\n} from './RaisedButton';\nimport ElementWithMenu from './Menu/ElementWithMenu';\nimport { type MenuItemTemplate } from './Menu/Menu.flow';\nimport { type I18n as I18nType } from '@lingui/core';\n\n// We support a subset of the props supported by Material-UI v0.x RaisedButton\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  ...RaisedButtonPropsWithoutOnClick,\n  buildMenuTemplate: (i18n: I18nType) => Array<MenuItemTemplate>,\n|};\n\nconst shouldNeverBeCalled = () => {\n  throw new Error('This RaisedButtonWithMenu onClick should never be called');\n};\n\n/**\n * A raised button based on Material-UI button, that has a menu displayed when clicked.\n */\nconst RaisedButtonWithMenu = (props: Props) => {\n  const { buildMenuTemplate, ...otherProps } = props;\n\n  return (\n    <ElementWithMenu\n      element={<RaisedButton {...otherProps} onClick={shouldNeverBeCalled} />}\n      buildMenuTemplate={buildMenuTemplate}\n    />\n  );\n};\n\nexport default RaisedButtonWithMenu;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport SemiControlledAutoComplete, {\n  type DataSource,\n  type SemiControlledAutoCompleteInterface,\n} from '../UI/SemiControlledAutoComplete';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport Add from '@material-ui/icons/Add';\nimport Brush from '@material-ui/icons/Brush';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n  type ResourceKind,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport ResourcesLoader from '../ResourcesLoader';\nimport { applyResourceDefaults } from './ResourceUtils';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport RaisedButtonWithMenu from '../UI/RaisedButtonWithMenu';\nimport { TextFieldWithButtonLayout } from '../UI/Layout';\nimport IconButton from '../UI/IconButton';\n\ntype Props = {|\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  resourcesLoader: typeof ResourcesLoader,\n  resourceKind: ResourceKind,\n  fullWidth?: boolean,\n  canBeReset?: boolean,\n  initialResourceName: string,\n  onChange: string => void,\n  floatingLabelText?: React.Node,\n  helperMarkdownText?: ?string,\n  hintText?: MessageDescriptor,\n  onRequestClose?: () => void,\n  margin?: 'none' | 'dense',\n  style?: {| alignSelf?: 'center' |},\n|};\n\ntype State = {|\n  notExistingError: boolean,\n  resourceName: string,\n|};\n\nexport default class ResourceSelector extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      notExistingError: false,\n      resourceName: props.initialResourceName || '',\n    };\n\n    const { project } = props;\n    if (project) {\n      this._loadFrom(project.getResourcesManager());\n    }\n  }\n\n  allResourcesNames: Array<string>;\n  autoCompleteData: DataSource;\n  _autoComplete: ?SemiControlledAutoCompleteInterface;\n\n  focus() {\n    if (this._autoComplete) this._autoComplete.focus();\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.initialResourceName !== this.props.initialResourceName) {\n      this.setState({\n        resourceName: nextProps.initialResourceName || '',\n      });\n    }\n  }\n\n  _getResourceSourceItems(): DataSource {\n    const sources = this.props.resourceSources || [];\n    return [\n      ...sources\n        .filter(source => source.kind === this.props.resourceKind)\n        .map(source => ({\n          text: '',\n          value: source.displayName,\n          renderIcon: () => <Add />,\n          onClick: () => this._addFrom(source),\n        })),\n      {\n        type: 'separator',\n      },\n    ];\n  }\n\n  _loadFrom(resourcesManager: gdResourcesManager) {\n    this.allResourcesNames = resourcesManager.getAllResourceNames().toJSArray();\n    if (this.props.resourceKind) {\n      this.allResourcesNames = this.allResourcesNames.filter(resourceName => {\n        return (\n          resourcesManager.getResource(resourceName).getKind() ===\n          this.props.resourceKind\n        );\n      });\n    }\n    const resourceSourceItems = this._getResourceSourceItems();\n    const resourceItems = this.allResourcesNames.map(resourceName => ({\n      text: resourceName,\n      value: resourceName,\n    }));\n    this.autoCompleteData = [...resourceSourceItems, ...resourceItems];\n  }\n\n  _addFrom = (source: ResourceSource) => {\n    if (!source) return;\n\n    const { project, onChooseResource } = this.props;\n    onChooseResource(source.name, false)\n      .then(resources => {\n        if (!resources.length) return;\n        const resource = resources[0];\n        applyResourceDefaults(project, resource);\n\n        // addResource will check if a resource with the same name exists, and if it is\n        // the case, no new resource will be added.\n        project.getResourcesManager().addResource(resource);\n\n        this._loadFrom(project.getResourcesManager());\n        const resourceName: string = resource.getName();\n        this._onChangeResourceName(resourceName);\n\n        // Imperatively set the value of the autocomplete, as it can be (on Windows for example),\n        // still focused. This means that when it's then getting blurred, the value we\n        // set for the resource name would get erased by the one that was getting entered.\n        if (this._autoComplete)\n          this._autoComplete.forceInputValueTo(resourceName);\n\n        // Important, we are responsible for deleting the resources that were given to us.\n        // Otherwise we have a memory leak, as calling addResource is making a copy of the resource.\n        resources.forEach(resource => resource.delete());\n      })\n      .catch(err => {\n        // TODO: Display an error message\n        console.error('Unable to choose a resource', err);\n      });\n  };\n\n  _onResetResourceName = () => {\n    this.setState(\n      {\n        resourceName: '',\n        notExistingError: false,\n      },\n      () => {\n        if (this.props.onChange) this.props.onChange(this.state.resourceName);\n      }\n    );\n  };\n\n  _onChangeResourceName = (resourceName: string) => {\n    if (resourceName === '') {\n      this._onResetResourceName();\n      return;\n    }\n    this.setState(\n      {\n        resourceName,\n        notExistingError: this.allResourcesNames.indexOf(resourceName) === -1,\n      },\n      () => {\n        if (!this.state.notExistingError) {\n          if (this.props.onChange) this.props.onChange(resourceName);\n        }\n      }\n    );\n  };\n\n  _editWith = (resourceExternalEditor: ResourceExternalEditor) => {\n    const { project, resourcesLoader, resourceKind } = this.props;\n    const { resourceName } = this.state;\n    const resourcesManager = project.getResourcesManager();\n    const initialResource = resourcesManager.getResource(resourceName);\n    let initialResourceMetadata = {};\n    const initialResourceMetadataRaw = initialResource.getMetadata();\n    if (initialResourceMetadataRaw) {\n      try {\n        initialResourceMetadata = JSON.parse(initialResourceMetadataRaw);\n      } catch (e) {\n        console.error('Malformed metadata', e);\n      }\n    }\n\n    if (resourceKind === 'image') {\n      const resourceNames = [];\n      if (resourcesManager.hasResource(resourceName)) {\n        resourceNames.push(resourceName);\n      }\n      const externalEditorOptions = {\n        project,\n        resourcesLoader,\n        singleFrame: true,\n        resourceNames,\n        extraOptions: {\n          fps: 0,\n          name: resourceName,\n          isLooping: false,\n          externalEditorData: initialResourceMetadata,\n        },\n        onChangesSaved: newResourceData => {\n          if (!newResourceData.length) return;\n\n          // Burst the ResourcesLoader cache to force images to be reloaded (and not cached by the browser).\n          resourcesLoader.burstUrlsCacheForResources(project, [\n            newResourceData[0].name,\n          ]);\n          this.props.onChange(newResourceData[0].name);\n        },\n      };\n      resourceExternalEditor.edit(externalEditorOptions);\n    } else if (resourceKind === 'audio') {\n      const externalEditorOptions = {\n        project,\n        resourcesLoader,\n        resourceNames: [resourceName],\n        extraOptions: {\n          externalEditorData: initialResourceMetadata,\n        },\n        onChangesSaved: newResourceData => {\n          // Burst the ResourcesLoader cache to force audio to be reloaded (and not cached by the browser).\n          resourcesLoader.burstUrlsCacheForResources(project, [\n            newResourceData[0].name,\n          ]);\n          this.props.onChange(newResourceData[0].name);\n        },\n      };\n      resourceExternalEditor.edit(externalEditorOptions);\n    } else if (resourceKind === 'json') {\n      const externalEditorOptions = {\n        project,\n        resourcesLoader,\n        resourceNames: [resourceName],\n        extraOptions: {\n          initialResourceMetadata,\n        },\n        onChangesSaved: newResourceData => {\n          this.props.onChange(newResourceData[0].name);\n        },\n      };\n      resourceExternalEditor.edit(externalEditorOptions);\n    }\n  };\n\n  render() {\n    const errorText = this.state.notExistingError\n      ? 'This resource does not exist in the game'\n      : null;\n\n    const externalEditors = this.props.resourceExternalEditors.filter(\n      externalEditor => externalEditor.kind === this.props.resourceKind\n    );\n    return (\n      <TextFieldWithButtonLayout\n        noFloatingLabelText={!this.props.floatingLabelText}\n        margin={this.props.margin}\n        renderTextField={() => (\n          <SemiControlledAutoComplete\n            style={this.props.style}\n            floatingLabelText={this.props.floatingLabelText}\n            helperMarkdownText={this.props.helperMarkdownText}\n            hintText={this.props.hintText}\n            openOnFocus\n            dataSource={this.autoCompleteData || []}\n            value={this.state.resourceName}\n            onChange={this._onChangeResourceName}\n            errorText={errorText}\n            fullWidth={this.props.fullWidth}\n            margin={this.props.margin}\n            onRequestClose={this.props.onRequestClose}\n            ref={autoComplete => (this._autoComplete = autoComplete)}\n          />\n        )}\n        renderButton={style => (\n          <React.Fragment>\n            {this.props.canBeReset && (\n              <IconButton\n                size=\"small\"\n                onClick={() => {\n                  this._onResetResourceName();\n                }}\n              >\n                <BackspaceIcon />\n              </IconButton>\n            )}\n            {!!externalEditors.length ? (\n              <RaisedButtonWithMenu\n                style={style}\n                icon={<Brush />}\n                label={\n                  this.state.resourceName ? (\n                    <Trans>Edit</Trans>\n                  ) : (\n                    <Trans>Create</Trans>\n                  )\n                }\n                primary\n                buildMenuTemplate={() =>\n                  externalEditors.map(externalEditor => ({\n                    label: externalEditor.displayName,\n                    click: () => this._editWith(externalEditor),\n                  }))\n                }\n              />\n            ) : null}\n          </React.Fragment>\n        )}\n      />\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport IconButton from './IconButton';\nimport ThemeConsumer from './Theme/ThemeConsumer';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\n\ntype Props = {|\n  src: string,\n  tooltip?: MessageDescriptor,\n  acceleratorString?: string,\n  disabled?: boolean,\n  onClick?: () => void,\n  onContextMenu?: () => void,\n|};\n\n/**\n * An icon that can be used in a ToolbarGroup of a Toolbar.\n */\nconst ToolbarIcon = React.forwardRef<Props, IconButton>((props: Props, ref) => {\n  const {\n    src,\n    tooltip,\n    acceleratorString,\n    disabled,\n    onClick,\n    onContextMenu,\n  } = props;\n\n  return (\n    <ThemeConsumer>\n      {muiTheme => (\n        <IconButton\n          onClick={onClick}\n          onContextMenu={onContextMenu}\n          size=\"small\"\n          disabled={disabled}\n          tooltip={tooltip}\n          acceleratorString={acceleratorString}\n          ref={ref}\n        >\n          <img\n            alt={tooltip}\n            src={src}\n            width={32}\n            height={32}\n            style={{\n              filter: disabled\n                ? 'grayscale(100%)'\n                : muiTheme.gdevelopIconsCSSFilter,\n            }}\n          />\n        </IconButton>\n      )}\n    </ThemeConsumer>\n  );\n});\n\nexport default ToolbarIcon;\n","// @flow\nimport * as React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\ntype Props = {|\n  label?: ?React.Node,\n  checked: boolean,\n  onCheck?: (e: {||}, checked: boolean) => void,\n  checkedIcon?: React.Node,\n  uncheckedIcon?: React.Node,\n  disabled?: boolean,\n|};\n\n/**\n * A checkbox based on Material-UI Checkbox, but that can be displayed\n * without having it taking the full width of its container.\n */\nexport default (props: Props) => {\n  const { onCheck } = props;\n  const checkbox = (\n    <Checkbox\n      disabled={props.disabled}\n      checked={props.checked}\n      onChange={\n        onCheck ? event => onCheck(event, event.target.checked) : undefined\n      }\n      icon={props.uncheckedIcon}\n      checkedIcon={props.checkedIcon}\n      color=\"primary\"\n    />\n  );\n  return props.label ? (\n    <FormControlLabel control={checkbox} label={props.label} />\n  ) : (\n    checkbox\n  );\n};\n","import { t } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport TextField from '../TextField';\nimport ColorPicker from './ColorPicker';\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'inline-block',\n  },\n  picker: {\n    position: 'absolute',\n    right: '8px',\n    top: '19px',\n  },\n};\n\nexport default class ColorField extends Component {\n  onClick = () => {\n    if (this.textField) this.textField.blur();\n    if (this.picker) this.picker.open();\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          ...styles.container,\n          width: this.props.fullWidth ? '100%' : undefined,\n        }}\n      >\n        <TextField\n          fullWidth\n          floatingLabelText={this.props.floatingLabelText}\n          floatingLabelFixed\n          helperMarkdownText={this.props.helperMarkdownText}\n          type=\"text\"\n          hintText={t`Click to choose`}\n          onClick={this.onClick}\n          onFocus={this.onClick}\n          value=\"\"\n          ref={textField => (this.textField = textField)}\n        />\n        <div style={styles.picker}>\n          <ColorPicker {...this.props} ref={picker => (this.picker = picker)} />\n        </div>\n      </div>\n    );\n  }\n}\n","// @flow\n\nexport type RGBColor = {|\n  r: number,\n  g: number,\n  b: number,\n  a?: number,\n|};\n\nexport const rgbColorToHexNumber = (rgbColor: RGBColor) => {\n  const { r, g, b } = rgbColor;\n  return rgbToHexNumber(r, g, b);\n};\n\n/**\n * Convert a rgb color value to a string hex value.\n * @note No \"#\" or \"0x\" are added.\n */\nexport const rgbToHex = (r: number, g: number, b: number) =>\n  '' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n/**\n * Convert a rgb color value to a hex value.\n */\nexport const rgbToHexNumber = (r: number, g: number, b: number) =>\n  (r << 16) + (g << 8) + b;\n\n/**\n * Convert a hex color value to an rgb object value.\n */\nexport const hexToRGBColor = (hex: string) => {\n  const hexNumber = parseInt(hex.replace('#', ''), 16);\n  return {\n    r: (hexNumber >> 16) & 0xff,\n    g: (hexNumber >> 8) & 0xff,\n    b: hexNumber & 0xff,\n    a: 255,\n  };\n};\n","// @flow\nimport { mapFor } from '../Utils/MapFor';\nimport { type Schema, type Instance } from '.';\nimport { type ResourceKind } from '../ResourcesList/ResourceSource.flow';\n\n/**\n * Transform a MapStringPropertyDescriptor to a schema that can be used in PropertiesEditor.\n *\n * @param {gdMapStringPropertyDescriptor} properties The properties to use\n * @param {*} getProperties The function called to read again the properties\n * @param {*} onUpdateProperty The function called to update a property of an object\n */\nexport default (\n  properties: gdMapStringPropertyDescriptor,\n  getProperties: (instance: Instance) => any,\n  onUpdateProperty: (\n    instance: Instance,\n    propertyName: string,\n    newValue: string\n  ) => void\n): Schema => {\n  const propertyNames = properties.keys();\n  const propertyFields = mapFor(0, propertyNames.size(), i => {\n    const name = propertyNames.at(i);\n    const property = properties.get(name);\n    const propertyDescription = property.getDescription();\n    const valueType = property.getType().toLowerCase();\n    const getLabel = (instance: Instance) => {\n      const propertyName = getProperties(instance)\n        .get(name)\n        .getLabel();\n      if (propertyName) return propertyName;\n      return (\n        name.charAt(0).toUpperCase() +\n        name\n          .slice(1)\n          .split(/(?=[A-Z])/)\n          .join(' ')\n      );\n    };\n    const getDescription = () => propertyDescription;\n\n    if (property.isHidden()) return null;\n\n    if (valueType === 'number') {\n      return {\n        name,\n        valueType,\n        getValue: (instance: Instance): number => {\n          return (\n            parseFloat(\n              getProperties(instance)\n                .get(name)\n                .getValue()\n            ) || 0\n          ); // Consider a missing value as 0 to avoid propagating NaN.\n        },\n        setValue: (instance: Instance, newValue: number) => {\n          onUpdateProperty(instance, name, '' + newValue);\n        },\n        getLabel,\n        getDescription,\n      };\n    } else if (valueType === 'string' || valueType === '') {\n      return {\n        name,\n        valueType: 'string',\n        getValue: (instance: Instance): string => {\n          return getProperties(instance)\n            .get(name)\n            .getValue();\n        },\n        setValue: (instance: Instance, newValue: string) => {\n          onUpdateProperty(instance, name, newValue);\n        },\n        getLabel,\n        getDescription,\n      };\n    } else if (valueType === 'boolean') {\n      return {\n        name,\n        valueType,\n        getValue: (instance: Instance): boolean => {\n          return (\n            getProperties(instance)\n              .get(name)\n              .getValue() === 'true'\n          );\n        },\n        setValue: (instance: Instance, newValue: boolean) => {\n          onUpdateProperty(instance, name, newValue ? '1' : '0');\n        },\n        getLabel,\n        getDescription,\n      };\n    } else if (valueType === 'choice') {\n      // Choice is a \"string\" (with a selector for the user in the UI)\n      const choices = property\n        .getExtraInfo()\n        .toJSArray()\n        .map(value => ({ value, label: value }));\n      return {\n        name,\n        valueType: 'string',\n        getChoices: () => choices,\n        getValue: (instance: Instance): string => {\n          return getProperties(instance)\n            .get(name)\n            .getValue();\n        },\n        setValue: (instance: Instance, newValue: string) => {\n          onUpdateProperty(instance, name, newValue);\n        },\n        getLabel,\n        getDescription,\n      };\n    } else if (valueType === 'resource') {\n      // Resource is a \"string\" (with a selector in the UI)\n      // $FlowFixMe - assume the passed resource kind is always valid.\n      const kind: ResourceKind = property.getExtraInfo().toJSArray()[0] || '';\n      return {\n        name,\n        valueType: 'resource',\n        resourceKind: kind,\n        getValue: (instance: Instance): string => {\n          return getProperties(instance)\n            .get(name)\n            .getValue();\n        },\n        setValue: (instance: Instance, newValue: string) => {\n          onUpdateProperty(instance, name, newValue);\n        },\n        getLabel,\n        getDescription,\n      };\n    } else if (valueType === 'color') {\n      return {\n        name,\n        valueType: 'color',\n        getValue: (instance: Instance): string => {\n          return getProperties(instance)\n            .get(name)\n            .getValue();\n        },\n        setValue: (instance: Instance, newValue: string) => {\n          onUpdateProperty(instance, name, newValue);\n        },\n        getLabel,\n        getDescription,\n      };\n    } else if (valueType === 'textarea') {\n      return {\n        name,\n        valueType: 'textarea',\n        getValue: (instance: Instance): string => {\n          return getProperties(instance)\n            .get(name)\n            .getValue();\n        },\n        setValue: (instance: Instance, newValue: string) => {\n          onUpdateProperty(instance, name, newValue);\n        },\n        getLabel,\n        getDescription,\n      };\n    } else {\n      console.error(\n        `A property with type=${valueType} could not be mapped to a field. Ensure that this type is correct and understood by the IDE.`\n      );\n      return null;\n    }\n  }).filter(Boolean);\n\n  return propertyFields;\n};\n","// @flow\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\n\ntype Props = {|\n  children: React.Node,\n|};\n\nexport default (props: Props) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0,0,0,0.5)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Paper\n        elevation={3}\n        style={{\n          padding: 10,\n          margin: 5,\n        }}\n      >\n        {props.children}\n      </Paper>\n    </div>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = {\n  progress: { marginRight: 8, verticalAlign: 'middle' },\n};\n\nexport default ({\n  children,\n  isLoading,\n}: {\n  children: React.Node,\n  isLoading: ?boolean,\n}) => (\n  <span>\n    {isLoading && <CircularProgress size={20} style={styles.progress} />}\n    {children}\n  </span>\n);\n","// @flow\nimport * as React from 'react';\nimport {\n  type EventsFunctionsExtensionWriter,\n  type EventsFunctionsExtensionOpener,\n} from './Storage';\n\nexport type EventsFunctionsExtensionsState = {|\n  eventsFunctionsExtensionsError: ?Error,\n  loadProjectEventsFunctionsExtensions: (project: ?gdProject) => Promise<void>,\n  unloadProjectEventsFunctionsExtensions: (project: gdProject) => void,\n  unloadProjectEventsFunctionsExtension: (\n    project: gdProject,\n    extensionName: string\n  ) => void,\n  reloadProjectEventsFunctionsExtensions: (\n    project: ?gdProject\n  ) => Promise<void>,\n  getEventsFunctionsExtensionWriter: () => ?EventsFunctionsExtensionWriter,\n  getEventsFunctionsExtensionOpener: () => ?EventsFunctionsExtensionOpener,\n  ensureLoadFinished: () => Promise<void>,\n  getIncludeFileHashs: () => { [string]: number },\n|};\n\nconst defaultState = {\n  eventsFunctionsExtensionsError: null,\n  loadProjectEventsFunctionsExtensions: () =>\n    Promise.reject(new Error('Use a provider')),\n  unloadProjectEventsFunctionsExtensions: () => {},\n  reloadProjectEventsFunctionsExtensions: () =>\n    Promise.reject(new Error('Use a provider')),\n  unloadProjectEventsFunctionsExtension: () => {},\n  getEventsFunctionsExtensionWriter: () => null,\n  getEventsFunctionsExtensionOpener: () => null,\n  ensureLoadFinished: () => Promise.reject(new Error('Use a provider')),\n  getIncludeFileHashs: () => ({}),\n};\n\nconst EventsFunctionsExtensionsContext = React.createContext<EventsFunctionsExtensionsState>(\n  defaultState\n);\n\nexport default EventsFunctionsExtensionsContext;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport PreferencesContext, {\n  type AlertMessageIdentifier,\n} from '../../MainFrame/Preferences/PreferencesContext';\nimport { ScreenTypeMeasurer } from '../Reponsive/ScreenTypeMeasurer';\n\ntype Props = {|\n  identifier: AlertMessageIdentifier,\n  message: React.Node,\n  touchScreenMessage?: React.Node,\n  show: boolean,\n|};\n\nexport default class InfoBar extends React.PureComponent<Props> {\n  render() {\n    const { identifier } = this.props;\n\n    return (\n      <ScreenTypeMeasurer>\n        {screenType => (\n          <PreferencesContext.Consumer>\n            {({ values, showAlertMessage }) => (\n              <Snackbar\n                open={\n                  this.props.show && !values.hiddenAlertMessages[identifier]\n                }\n                message={\n                  screenType === 'touch' && this.props.touchScreenMessage\n                    ? this.props.touchScreenMessage\n                    : this.props.message\n                }\n                action={\n                  <Button\n                    key=\"undo\"\n                    color=\"primary\"\n                    size=\"small\"\n                    onClick={() => {\n                      showAlertMessage(identifier, false);\n                    }}\n                  >\n                    <Trans>Got it</Trans>\n                  </Button>\n                }\n              />\n            )}\n          </PreferencesContext.Consumer>\n        )}\n      </ScreenTypeMeasurer>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport Instruction, { reactDndInstructionType } from './Instruction';\nimport { mapFor } from '../../Utils/MapFor';\nimport {\n  isInstructionSelected,\n  type InstructionsListContext,\n  type InstructionContext,\n  type ParameterContext,\n} from '../SelectionHandler';\nimport DropIndicator from './DropIndicator';\nimport { Trans } from '@lingui/macro';\nimport { hasClipboardConditions, hasClipboardActions } from '../ClipboardKind';\nimport { makeDropTarget } from '../../UI/DragAndDrop/DropTarget';\nimport { type ScreenType } from '../../UI/Reponsive/ScreenTypeMeasurer';\nimport { type WidthType } from '../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport { useLongTouch } from '../../Utils/UseLongTouch';\n\nconst styles = {\n  addButton: {\n    cursor: 'pointer',\n  },\n};\n\ntype Props = {\n  instrsList: gdInstructionsList,\n  areConditions: boolean,\n  onAddNewInstruction: InstructionsListContext => void,\n  onPasteInstructions: InstructionsListContext => void,\n  onMoveToInstruction: (destinationContext: InstructionContext) => void,\n  onMoveToInstructionsList: (\n    destinationContext: InstructionsListContext\n  ) => void,\n  onInstructionClick: InstructionContext => void,\n  onInstructionDoubleClick: InstructionContext => void,\n  onInstructionContextMenu: (x: number, y: number, InstructionContext) => void,\n  onAddInstructionContextMenu: (\n    HTMLButtonElement,\n    InstructionsListContext\n  ) => void,\n  onParameterClick: ParameterContext => void,\n  selection: any,\n  addButtonLabel?: React.Node,\n  className?: string,\n  style?: Object,\n  disabled: boolean,\n  renderObjectThumbnail: string => React.Node,\n\n  screenType: ScreenType,\n  windowWidth: WidthType,\n};\n\nconst DropTarget = makeDropTarget<{\n  isCondition: boolean,\n}>(reactDndInstructionType);\n\nexport default function InstructionsList({\n  addButtonLabel,\n  areConditions,\n  className,\n  instrsList,\n  onAddNewInstruction,\n  onPasteInstructions,\n  onMoveToInstruction,\n  onMoveToInstructionsList,\n  onInstructionClick,\n  onInstructionContextMenu,\n  onInstructionDoubleClick,\n  onAddInstructionContextMenu,\n  onParameterClick,\n  selection,\n  style,\n  disabled,\n  renderObjectThumbnail,\n  screenType,\n  windowWidth,\n}: Props) {\n  const [canPaste, setCanPaste] = React.useState(false);\n\n  const addNewInstruction = React.useCallback(\n    () => {\n      if (onAddNewInstruction)\n        onAddNewInstruction({\n          instrsList,\n          isCondition: areConditions,\n        });\n    },\n    [onAddNewInstruction, instrsList, areConditions]\n  );\n\n  const pasteInstructions = React.useCallback(\n    () => {\n      onPasteInstructions({\n        instrsList,\n        isCondition: areConditions,\n      });\n    },\n    [onPasteInstructions, instrsList, areConditions]\n  );\n\n  const instructions = mapFor(0, instrsList.size(), i => {\n    const instruction = instrsList.get(i);\n    const instructionContext = {\n      isCondition: areConditions,\n      instrsList: instrsList,\n      instruction,\n      indexInList: i,\n    };\n\n    return (\n      <Instruction\n        instruction={instruction}\n        isCondition={areConditions}\n        key={instruction.ptr}\n        selected={isInstructionSelected(selection, instruction)}\n        onMoveToInstruction={() => onMoveToInstruction(instructionContext)}\n        onClick={() => onInstructionClick(instructionContext)}\n        onDoubleClick={() => onInstructionDoubleClick(instructionContext)}\n        onContextMenu={(x, y) =>\n          onInstructionContextMenu(x, y, instructionContext)\n        }\n        onParameterClick={(domEvent, parameterIndex) =>\n          onParameterClick({\n            isCondition: instructionContext.isCondition,\n            instrsList: instructionContext.instrsList,\n            instruction: instructionContext.instruction,\n            indexInList: instructionContext.indexInList,\n            parameterIndex,\n            domEvent,\n          })\n        }\n        selection={selection}\n        onAddNewSubInstruction={onAddNewInstruction}\n        onPasteSubInstructions={onPasteInstructions}\n        onMoveToSubInstruction={onMoveToInstruction}\n        onMoveToSubInstructionsList={onMoveToInstructionsList}\n        onSubInstructionClick={onInstructionClick}\n        onSubInstructionDoubleClick={onInstructionDoubleClick}\n        onSubInstructionContextMenu={onInstructionContextMenu}\n        onAddSubInstructionContextMenu={onAddInstructionContextMenu}\n        onSubParameterClick={onParameterClick}\n        disabled={disabled}\n        renderObjectThumbnail={renderObjectThumbnail}\n        screenType={screenType}\n        windowWidth={windowWidth}\n      />\n    );\n  });\n\n  const instructionsListContext = {\n    instrsList,\n    isCondition: areConditions,\n  };\n\n  const addButton = React.useRef<?HTMLButtonElement>(null);\n  const addButtonDefaultLabel = areConditions ? (\n    <Trans>Add condition</Trans>\n  ) : (\n    <Trans>Add action</Trans>\n  );\n  const longTouchForContextMenuProps = useLongTouch(\n    React.useCallback(\n      event => {\n        addButton.current &&\n          onAddInstructionContextMenu(\n            addButton.current,\n            instructionsListContext\n          );\n      },\n      [onAddInstructionContextMenu, instructionsListContext, addButton]\n    )\n  );\n\n  return (\n    <DropTarget\n      canDrop={draggedItem => draggedItem.isCondition === areConditions}\n      drop={() => {\n        onMoveToInstructionsList({\n          isCondition: areConditions,\n          instrsList: instrsList,\n        });\n      }}\n    >\n      {({ connectDropTarget, isOver, canDrop }) =>\n        connectDropTarget(\n          <div className={className} style={style}>\n            {instructions}\n            {isOver && <DropIndicator canDrop={canDrop} />}\n            <span\n              onPointerEnter={() => {\n                setCanPaste(\n                  (areConditions && hasClipboardConditions()) ||\n                    (!areConditions && hasClipboardActions())\n                );\n              }}\n              onPointerLeave={() => {\n                setCanPaste(false);\n              }}\n            >\n              <button\n                style={styles.addButton}\n                className=\"add-link\"\n                onClick={addNewInstruction}\n                onContextMenu={e => {\n                  e.stopPropagation();\n                  onAddInstructionContextMenu(\n                    e.currentTarget,\n                    instructionsListContext\n                  );\n                }}\n                {...longTouchForContextMenuProps}\n                ref={addButton}\n              >\n                {addButtonLabel || addButtonDefaultLabel}\n              </button>\n              {canPaste && (\n                <span>\n                  <button\n                    style={styles.addButton}\n                    className=\"add-link\"\n                    onClick={pasteInstructions}\n                  >\n                    {areConditions ? (\n                      <Trans>(or paste conditions)</Trans>\n                    ) : (\n                      <Trans>(or paste actions)</Trans>\n                    )}\n                  </button>\n                </span>\n              )}\n            </span>\n          </div>\n        )\n      }\n    </DropTarget>\n  );\n}\n","// @flow\n\n// Helpers to manipulate tags. See also EditTagsDialog.js\n\nexport type Tags = Array<string>;\nexport type SelectedTags = Tags;\n\nexport const removeTag = (tags: Tags, tag: string): Tags => {\n  return tags.filter(selectedTag => selectedTag !== tag);\n};\n\nexport const addTags = (tags: Tags, newTags: Tags): Tags => {\n  return Array.from(new Set([...tags, ...newTags]));\n};\n\nexport type BuildTagsMenuTemplateOptions = {|\n  noTagLabel: string,\n  getAllTags: () => Array<string>,\n  selectedTags: SelectedTags,\n  onChange: SelectedTags => void,\n  onEditTags?: () => void,\n  editTagsLabel?: string,\n|};\n\nexport const buildTagsMenuTemplate = ({\n  noTagLabel,\n  getAllTags,\n  selectedTags,\n  onChange,\n  onEditTags,\n  editTagsLabel,\n}: BuildTagsMenuTemplateOptions): Array<any> => {\n  const allTags = getAllTags();\n  const footerMenuItems =\n    onEditTags && editTagsLabel\n      ? [\n          {\n            type: 'separator',\n          },\n          {\n            label: editTagsLabel,\n            click: onEditTags,\n          },\n        ]\n      : [];\n\n  if (!allTags.length) {\n    return [\n      {\n        label: noTagLabel,\n        enabled: false,\n      },\n      ...footerMenuItems,\n    ];\n  }\n\n  return allTags\n    .map(tag => ({\n      type: 'checkbox',\n      label: tag,\n      checked: selectedTags.includes(tag),\n      click: () => {\n        if (selectedTags.includes(tag)) {\n          onChange(removeTag(selectedTags, tag));\n        } else {\n          onChange(addTags(selectedTags, [tag]));\n        }\n      },\n    }))\n    .concat(footerMenuItems);\n};\n\nexport const getTagsFromString = (tagsString: string): Tags => {\n  if (tagsString.trim() === '') return [];\n\n  return tagsString.split(',').map(tag => tag.trim());\n};\n\nexport const getStringFromTags = (tags: Tags): string => {\n  return tags.join(', ');\n};\n\nexport const hasStringAllTags = (tagsString: string, tags: Tags) => {\n  for (const tag of tags) {\n    if (tagsString.indexOf(tag) === -1) return false;\n  }\n\n  return true;\n};\n","// @flow\nimport {\n  type EnumeratedInstructionMetadata,\n  type InstructionOrExpressionScope,\n  type EnumeratedInstructionOrExpressionMetadata,\n} from './EnumeratedInstructionOrExpressionMetadata.js';\nconst gd: libGDevelop = global.gd;\n\nconst GROUP_DELIMITER = '/';\n\ntype ExtensionsExtraInstructions = {\n  BuiltinObject?: {\n    '': Array<string>,\n  },\n  Physics2?: {\n    'Physics2::Physics2Behavior': Array<string>,\n  },\n};\n\nconst freeActionsToAddToObject: ExtensionsExtraInstructions = {\n  BuiltinObject: {\n    '': ['AjoutHasard', 'Create', 'AjoutObjConcern'],\n  },\n};\n\nconst freeConditionsToAddToObject: ExtensionsExtraInstructions = {\n  BuiltinObject: {\n    '': [\n      'AjoutHasard',\n      'AjoutObjConcern',\n      'CollisionNP',\n      'NbObjet',\n      'PickNearest',\n      'Distance',\n      'SeDirige',\n      'EstTourne',\n      'SourisSurObjet',\n    ],\n  },\n};\n\nconst freeActionsToAddToBehavior: ExtensionsExtraInstructions = {};\n\nconst freeConditionsToAddToBehavior: ExtensionsExtraInstructions = {\n  Physics2: {\n    'Physics2::Physics2Behavior': ['Physics2::Collision'],\n  },\n};\n\nconst freeInstructionsToRemove = {\n  BuiltinObject: [\n    // Note: even if \"Create\" was added to the object actions for convenience,\n    // we also keep it in the list of free actions.\n\n    // $FlowFixMe\n    ...freeConditionsToAddToObject.BuiltinObject[''],\n  ],\n  Physics2: [\n    // $FlowFixMe\n    ...freeConditionsToAddToBehavior.Physics2['Physics2::Physics2Behavior'],\n  ],\n};\n\n/**\n * When all instructions are searched, some can be duplicated\n * (on purpose, so that it's easier to find them for users)\n * in both the object instructions and in the free instructions.\n *\n * This removes the duplication, useful for showing results in a list.\n */\nexport const deduplicateInstructionsList = (\n  list: Array<EnumeratedInstructionMetadata>\n): Array<EnumeratedInstructionMetadata> => {\n  let createFound = false;\n  return list.filter(enumerateInstruction => {\n    if (enumerateInstruction.type === 'Create') {\n      if (createFound) return false;\n\n      createFound = true;\n    }\n\n    return true;\n  });\n};\n\nconst filterInstructionsToRemove = (\n  list: Array<EnumeratedInstructionMetadata>,\n  typesToRemove: ?$ReadOnlyArray<string>\n) => {\n  const types = typesToRemove; // Make Flow happy\n  if (!types) return list;\n\n  return list.filter(metadata => types.indexOf(metadata.type) === -1);\n};\n\nconst enumerateExtraBehaviorInstructions = (\n  isCondition: boolean,\n  extension: gdPlatformExtension,\n  behaviorType: string,\n  prefix: string,\n  scope: InstructionOrExpressionScope\n) => {\n  const extensionName = extension.getName();\n\n  const extensionsExtraInstructions = isCondition\n    ? freeConditionsToAddToBehavior[extensionName]\n    : freeActionsToAddToBehavior[extensionName];\n  if (!extensionsExtraInstructions) {\n    return [];\n  }\n\n  const objectExtraInstructions = extensionsExtraInstructions[behaviorType];\n  if (!objectExtraInstructions) {\n    return [];\n  }\n\n  const instructionMetadataMap = isCondition\n    ? extension.getAllConditions()\n    : extension.getAllActions();\n\n  return objectExtraInstructions.map(type =>\n    enumerateInstruction(prefix, type, instructionMetadataMap.get(type), scope)\n  );\n};\n\nconst enumerateExtraObjectInstructions = (\n  isCondition: boolean,\n  extension: gdPlatformExtension,\n  objectType: string,\n  prefix: string,\n  scope: InstructionOrExpressionScope\n) => {\n  const extensionName = extension.getName();\n\n  const extensionsExtraInstructions = isCondition\n    ? freeConditionsToAddToObject[extensionName]\n    : freeActionsToAddToObject[extensionName];\n  if (!extensionsExtraInstructions) {\n    return [];\n  }\n\n  const objectExtraInstructions = extensionsExtraInstructions[objectType];\n  if (!objectExtraInstructions) {\n    return [];\n  }\n\n  const instructionMetadataMap = isCondition\n    ? extension.getAllConditions()\n    : extension.getAllActions();\n\n  return objectExtraInstructions.map(type =>\n    enumerateInstruction(prefix, type, instructionMetadataMap.get(type), scope)\n  );\n};\n\nconst enumerateInstruction = (\n  prefix: string,\n  type: string,\n  instrMetadata: gdInstructionMetadata,\n  scope: InstructionOrExpressionScope\n): EnumeratedInstructionMetadata => {\n  const displayedName = instrMetadata.getFullName();\n  const groupName = instrMetadata.getGroup();\n  const iconFilename = instrMetadata.getIconFilename();\n  const fullGroupName = prefix + groupName;\n\n  return {\n    type,\n    metadata: instrMetadata,\n    iconFilename,\n    displayedName,\n    fullGroupName,\n    scope,\n    isPrivate: instrMetadata.isPrivate(),\n  };\n};\n\nconst enumerateExtensionInstructions = (\n  prefix: string,\n  instructions: gdMapStringInstructionMetadata,\n  scope: InstructionOrExpressionScope\n): Array<EnumeratedInstructionMetadata> => {\n  //Get the map containing the metadata of the instructions provided by the extension...\n  const instructionsTypes = instructions.keys();\n  const allInstructions = [];\n\n  //... and add each instruction\n  for (let j = 0; j < instructionsTypes.size(); ++j) {\n    const type = instructionsTypes.at(j);\n    const instrMetadata = instructions.get(type);\n    if (instrMetadata.isHidden()) continue;\n\n    allInstructions.push(\n      enumerateInstruction(prefix, type, instrMetadata, scope)\n    );\n  }\n\n  return allInstructions;\n};\n\n/**\n * List all the instructions available.\n */\nexport const enumerateAllInstructions = (\n  isCondition: boolean\n): Array<EnumeratedInstructionMetadata> => {\n  let allInstructions = [];\n\n  const allExtensions = gd\n    .asPlatform(gd.JsPlatform.get())\n    .getAllPlatformExtensions();\n  for (let i = 0; i < allExtensions.size(); ++i) {\n    const extension = allExtensions.at(i);\n    const extensionName = extension.getName();\n    const allObjectsTypes = extension.getExtensionObjectsTypes();\n    const allBehaviorsTypes = extension.getBehaviorsTypes();\n\n    let prefix = '';\n    if (allObjectsTypes.size() > 0 || allBehaviorsTypes.size() > 0) {\n      prefix =\n        extensionName === 'BuiltinObject'\n          ? 'Common ' +\n            (isCondition ? 'conditions' : 'actions') +\n            ' for all objects'\n          : extension.getFullName();\n      prefix += GROUP_DELIMITER;\n    }\n\n    //Free instructions\n    const extensionFreeInstructions = enumerateExtensionInstructions(\n      prefix,\n      isCondition ? extension.getAllConditions() : extension.getAllActions(),\n      {\n        objectMetadata: undefined,\n        behaviorMetadata: undefined,\n      }\n    );\n    allInstructions = [\n      ...allInstructions,\n      ...filterInstructionsToRemove(\n        extensionFreeInstructions,\n        freeInstructionsToRemove[extensionName]\n      ),\n    ];\n\n    //Objects instructions:\n    for (let j = 0; j < allObjectsTypes.size(); ++j) {\n      const objectType = allObjectsTypes.at(j);\n      const objectMetadata = extension.getObjectMetadata(objectType);\n      const scope = { objectMetadata };\n      allInstructions = [\n        ...allInstructions,\n        ...enumerateExtensionInstructions(\n          prefix,\n          isCondition\n            ? extension.getAllConditionsForObject(objectType)\n            : extension.getAllActionsForObject(objectType),\n          scope\n        ),\n        ...enumerateExtraObjectInstructions(\n          isCondition,\n          extension,\n          objectType,\n          prefix,\n          scope\n        ),\n      ];\n    }\n\n    //Behaviors instructions:\n    for (let j = 0; j < allBehaviorsTypes.size(); ++j) {\n      const behaviorType = allBehaviorsTypes.at(j);\n      const behaviorMetadata = extension.getBehaviorMetadata(behaviorType);\n      const scope = { behaviorMetadata };\n\n      allInstructions = [\n        ...allInstructions,\n        ...enumerateExtensionInstructions(\n          prefix,\n          isCondition\n            ? extension.getAllConditionsForBehavior(behaviorType)\n            : extension.getAllActionsForBehavior(behaviorType),\n          scope\n        ),\n        ...enumerateExtraBehaviorInstructions(\n          isCondition,\n          extension,\n          behaviorType,\n          prefix,\n          scope\n        ),\n      ];\n    }\n  }\n\n  return allInstructions;\n};\n\nconst orderFirstInstructionsWithoutGroup = (\n  allInstructions: Array<EnumeratedInstructionMetadata>\n) => {\n  const noGroupInstructions = allInstructions.filter(\n    instructionMetadata => instructionMetadata.fullGroupName.length === 0\n  );\n  const instructionsWithGroups = allInstructions.filter(\n    instructionMetadata => instructionMetadata.fullGroupName.length !== 0\n  );\n\n  return [...noGroupInstructions, ...instructionsWithGroups];\n};\n\n/**\n * List all the instructions that can be used for the given object,\n * in the given context. This includes instructions for the behaviors\n * attached to the object.\n */\nexport const enumerateObjectAndBehaviorsInstructions = (\n  isCondition: boolean,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  objectName: string\n): Array<EnumeratedInstructionMetadata> => {\n  let allInstructions = [];\n\n  const objectType: string = gd.getTypeOfObject(\n    globalObjectsContainer,\n    objectsContainer,\n    objectName,\n    true\n  );\n  const objectBehaviorNames: Array<string> = gd\n    .getBehaviorsOfObject(\n      globalObjectsContainer,\n      objectsContainer,\n      objectName,\n      true\n    )\n    .toJSArray();\n  const objectBehaviorTypes = new Set(\n    objectBehaviorNames.map(behaviorName =>\n      gd.getTypeOfBehavior(\n        globalObjectsContainer,\n        objectsContainer,\n        behaviorName,\n        false\n      )\n    )\n  );\n  const baseObjectType = ''; /* An empty string means the base object */\n\n  const allExtensions = gd\n    .asPlatform(gd.JsPlatform.get())\n    .getAllPlatformExtensions();\n  for (let i = 0; i < allExtensions.size(); ++i) {\n    const extension = allExtensions.at(i);\n    const hasObjectType =\n      extension\n        .getExtensionObjectsTypes()\n        .toJSArray()\n        .indexOf(objectType) !== -1;\n    const hasBaseObjectType =\n      extension\n        .getExtensionObjectsTypes()\n        .toJSArray()\n        .indexOf(baseObjectType) !== -1;\n    const behaviorTypes = extension\n      .getBehaviorsTypes()\n      .toJSArray()\n      .filter(behaviorType => objectBehaviorTypes.has(behaviorType));\n\n    if (!hasObjectType && !hasBaseObjectType && behaviorTypes.length === 0) {\n      continue;\n    }\n\n    const prefix = '';\n\n    //Objects instructions:\n    if (objectType !== baseObjectType && hasObjectType) {\n      const objectMetadata = extension.getObjectMetadata(objectType);\n      const scope = { objectMetadata };\n\n      allInstructions = [\n        ...allInstructions,\n        ...enumerateExtensionInstructions(\n          prefix,\n          isCondition\n            ? extension.getAllConditionsForObject(objectType)\n            : extension.getAllActionsForObject(objectType),\n          scope\n        ),\n        ...enumerateExtraObjectInstructions(\n          isCondition,\n          extension,\n          baseObjectType,\n          prefix,\n          scope\n        ),\n      ];\n    }\n\n    if (hasBaseObjectType) {\n      const objectMetadata = extension.getObjectMetadata(baseObjectType);\n      const scope = { objectMetadata };\n\n      allInstructions = [\n        ...allInstructions,\n        ...enumerateExtensionInstructions(\n          prefix,\n          isCondition\n            ? extension.getAllConditionsForObject(baseObjectType)\n            : extension.getAllActionsForObject(baseObjectType),\n          scope\n        ),\n        ...enumerateExtraObjectInstructions(\n          isCondition,\n          extension,\n          baseObjectType,\n          prefix,\n          scope\n        ),\n      ];\n    }\n\n    //Behaviors instructions (show them at the top of the list):\n    // eslint-disable-next-line\n    behaviorTypes.forEach(behaviorType => {\n      const behaviorMetadata = extension.getBehaviorMetadata(behaviorType);\n      const scope = { behaviorMetadata };\n\n      allInstructions = [\n        ...enumerateExtensionInstructions(\n          prefix,\n          isCondition\n            ? extension.getAllConditionsForBehavior(behaviorType)\n            : extension.getAllActionsForBehavior(behaviorType),\n          scope\n        ),\n        ...enumerateExtraBehaviorInstructions(\n          isCondition,\n          extension,\n          behaviorType,\n          prefix,\n          scope\n        ),\n        ...allInstructions,\n      ];\n    });\n  }\n\n  return orderFirstInstructionsWithoutGroup(allInstructions);\n};\n\n/**\n * Enumerate all the instructions that are not directly tied\n * to an object.\n */\nexport const enumerateFreeInstructions = (\n  isCondition: boolean\n): Array<EnumeratedInstructionMetadata> => {\n  let allFreeInstructions = [];\n\n  const allExtensions = gd\n    .asPlatform(gd.JsPlatform.get())\n    .getAllPlatformExtensions();\n  for (let i = 0; i < allExtensions.size(); ++i) {\n    const extension = allExtensions.at(i);\n    const extensionName: string = extension.getName();\n    const allObjectsTypes = extension.getExtensionObjectsTypes();\n    const allBehaviorsTypes = extension.getBehaviorsTypes();\n\n    let prefix = '';\n    if (allObjectsTypes.size() > 0 || allBehaviorsTypes.size() > 0) {\n      prefix = extensionName === 'BuiltinObject' ? '' : extension.getFullName();\n      prefix += GROUP_DELIMITER;\n    }\n\n    //Free instructions\n    const extensionFreeInstructions = enumerateExtensionInstructions(\n      prefix,\n      isCondition ? extension.getAllConditions() : extension.getAllActions(),\n      {\n        objectMetadata: undefined,\n        behaviorMetadata: undefined,\n      }\n    );\n    allFreeInstructions = [\n      ...allFreeInstructions,\n      ...filterInstructionsToRemove(\n        extensionFreeInstructions,\n        freeInstructionsToRemove[extensionName]\n      ),\n    ];\n  }\n\n  return allFreeInstructions;\n};\n\nexport type InstructionFilteringOptions = {|\n  searchText: string,\n|};\n\nexport const filterInstructionsList = <\n  T: EnumeratedInstructionOrExpressionMetadata\n>(\n  list: Array<T>,\n  { searchText }: InstructionFilteringOptions\n): Array<T> => {\n  if (!searchText === '') {\n    return list;\n  }\n\n  const lowercaseSearch = searchText.toLowerCase();\n\n  const matchCritera = (enumeratedInstructionOrExpressionMetadata: T) => {\n    const {\n      displayedName,\n      fullGroupName,\n    } = enumeratedInstructionOrExpressionMetadata;\n    return (\n      displayedName.toLowerCase().indexOf(lowercaseSearch) !== -1 ||\n      fullGroupName.toLowerCase().indexOf(lowercaseSearch) !== -1\n    );\n  };\n\n  const favorExactMatch = (list: Array<T>): Array<T> => {\n    if (!searchText) {\n      return list;\n    }\n\n    for (var i = 0; i < list.length; ++i) {\n      if (list[i].displayedName.toLowerCase() === lowercaseSearch) {\n        const exactMatch = list[i];\n        list.splice(i, 1);\n        list.unshift(exactMatch);\n      }\n    }\n\n    return list;\n  };\n\n  // See EnumerateExpressions for a similar logic for expressions\n  return favorExactMatch(list.filter(matchCritera));\n};\n\nexport const getObjectParameterIndex = (\n  instructionMetadata: gdInstructionMetadata\n) => {\n  const parametersCount = instructionMetadata.getParametersCount();\n  if (parametersCount >= 1) {\n    const firstParameterType = instructionMetadata.getParameter(0).getType();\n    if (firstParameterType === 'object') {\n      // By convention, all object conditions/actions have the object as first parameter\n      return 0;\n    }\n    if (gd.ParameterMetadata.isObject(firstParameterType)) {\n      // Some \"free condition/actions\" might be considered as \"object\" instructions, in which\n      // case they are taking an object list as fist parameter - which will be identified\n      // by gd.ParameterMetadata.isObject\n      return 0;\n    }\n\n    if (\n      firstParameterType === 'objectsContext' ||\n      firstParameterType === 'currentScene'\n    ) {\n      if (parametersCount >= 2) {\n        const secondParameterType = instructionMetadata\n          .getParameter(1)\n          .getType();\n        if (gd.ParameterMetadata.isObject(secondParameterType)) {\n          // Some special action/conditions like \"Create\", \"AjoutHasard\" (pick random object) or\n          // \"AjoutObjConcern\" (pick all objects) are \"free condition/actions\", but are manipulating\n          // objects list, so their first parameter is an \"objectsContext\" or \"currentScene\",\n          // followed by an object parameter.\n          return 1;\n        }\n      }\n    }\n  }\n\n  return -1;\n};\n","// @flow\nimport type {\n  GroupWithContext,\n  ObjectWithContext,\n} from '../../../ObjectsList/EnumerateObjects';\nimport { type EnumeratedInstructionOrExpressionMetadata } from '../../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js';\n\n// ListItem created must have consistent keys that include their type\n// (object, group, instruction) to allow them to be living\n// in the same list (in search results) and be selected.\n\nexport const getObjectGroupListItemKey = (groupWithContext: GroupWithContext) =>\n  `object-group-key-${groupWithContext.group.getName()}-${\n    groupWithContext.global ? '-global' : ''\n  }`;\nexport const getObjectListItemKey = (objectWithContext: ObjectWithContext) =>\n  `object-key-${objectWithContext.object.getName()}-${\n    objectWithContext.global ? '-global' : ''\n  }`;\nexport const getObjectOrObjectGroupListItemValue = (\n  objectOrObjectGroupName: string\n) => `object-or-object-group-value-${objectOrObjectGroupName}`;\n\nexport const getInstructionListItemKey = (\n  instruction: EnumeratedInstructionOrExpressionMetadata\n) => `instruction-key-${instruction.fullGroupName}-${instruction.type}`;\nexport const getInstructionListItemValue = (instructionType: string) =>\n  `instruction-value-${instructionType}`;\n\nexport const getSubheaderListItemKey = (subheader: string) =>\n  `subheader-key-${subheader}`;\n","// @flow\nimport * as React from 'react';\nimport Popper from '@material-ui/core/Popper';\nimport Background from '../UI/Background';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport { Column, Line } from '../UI/Grid';\nimport {\n  shouldCloseOrCancel,\n  shouldFocusNextField,\n  shouldFocusPreviousField,\n} from '../UI/KeyboardShortcuts/InteractionKeys';\n\nconst styles = {\n  popover: {\n    paddingBottom: 10,\n    overflowY: 'auto',\n\n    // Never show a horizontal scrollbar\n    overflowX: 'hidden',\n\n    // Restrict size in case of extra small or large popover (though this should not happen)\n    minHeight: 30,\n    maxHeight: 400,\n    maxWidth: 600,\n    minWidth: 300, // Avoid extra small popover for some parameters like relational operator\n\n    // When displayed in an events sheet that has Mosaic windows (see `EditorMosaic`) next to it,\n    // it could be displayed behind them, because they have a z-index of 1, and 4 for the window titles :/\n    // use a z-index of 5 then. Only one InlinePopover should be shown at a time anyway.\n    zIndex: 5,\n  },\n};\n\ntype Props = {|\n  children: React.Node,\n  anchorEl: ?HTMLElement,\n  open: boolean,\n  onRequestClose: () => void,\n|};\n\n/**\n * A popover that can be used to show the field to edit a parameter, without\n * opening the full instruction editor.\n * Works like a dialog when opened (trapping the focus, dismissed on Escape,\n * dismissed on click/touch outside) but positioned under the edited parameter.\n */\nexport default function InlinePopover(props: Props) {\n  const startSentinel = React.useRef<?HTMLDivElement>(null);\n  const endSentinel = React.useRef<?HTMLDivElement>(null);\n\n  return (\n    <ClickAwayListener\n      onClickAway={event => {\n        if (event instanceof MouseEvent) {\n          // onClickAway is triggered on a \"click\" (which can actually happen\n          // on a touchscreen too!).\n          // The click already gave the opportunity to the popover content to\n          // get blurred (allowing \"semi controlled\" text fields\n          // to apply their changes). We can close now.\n          props.onRequestClose();\n        } else {\n          // Give a bit of time to the popover content to be blurred\n          // (useful for the \"semi controlled\" text fields for example)\n          // for touch events.\n          //\n          // This timeout needs to be at least around 50ms, otherwise\n          // blur events for GenericExpressionField are not triggered on iOS.\n          // There might be a better way to do this without waiting this much time.\n          setTimeout(() => {\n            props.onRequestClose();\n          }, 50);\n        }\n      }}\n    >\n      <Popper\n        open={props.open}\n        anchorEl={props.anchorEl}\n        style={styles.popover}\n        placement=\"bottom-start\"\n        onKeyDown={event => {\n          // Much like a dialog, offer a way to close the popover\n          // with a key.\n          // Note that the content of the popover can capture the event\n          // and stop its propagation (for example, the GenericExpressionField\n          // when showing autocompletion), which is fine.\n          if (shouldCloseOrCancel(event)) {\n            props.onRequestClose();\n          }\n\n          // Also like a dialog, add a \"focus trap\". If the user keeps pressing tab\n          // (or shift+tab), we \"loop\" the focus so that it stays inside the popover.\n          // Otherwise, the focus would espace and could go in some unrelated element\n          // in the events sheet, triggering a scroll, which would be very disturbing\n          // and would break the keyboard navigation.\n          if (shouldFocusNextField(event)) {\n            if (event.target && event.target === endSentinel.current) {\n              event.stopPropagation();\n              event.preventDefault();\n              if (startSentinel.current) {\n                startSentinel.current.focus();\n              }\n            }\n          } else if (shouldFocusPreviousField(event)) {\n            if (event.target && event.target === startSentinel.current) {\n              event.stopPropagation();\n              event.preventDefault();\n              if (endSentinel.current) {\n                endSentinel.current.focus();\n              }\n            }\n          }\n        }}\n      >\n        <Background>\n          <div tabIndex={0} ref={startSentinel} />\n          <Column expand>\n            <Line>{props.children}</Line>\n          </Column>\n          <div tabIndex={0} ref={endSentinel} />\n        </Background>\n      </Popper>\n    </ClickAwayListener>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport ThemeConsumer from './Theme/ThemeConsumer';\n\ntype ToolbarProps = {|\n  children: React.Node,\n|};\n\ntype ToolbarGroupProps = {|\n  children?: React.Node,\n  firstChild?: true, // Not used, but could be useful one day for styling\n  lastChild?: true, // Not used, but could be useful one day for styling\n|};\n\nexport const Toolbar = React.memo<ToolbarProps>(\n  ({ children }: ToolbarProps) => (\n    <ThemeConsumer>\n      {muiTheme => (\n        <div\n          style={{\n            backgroundColor: muiTheme.toolbar.backgroundColor,\n            padding: 3,\n            flexShrink: 0,\n            display: 'flex',\n            justifyContent: 'space-between',\n            overflowX: 'auto',\n            overflowY: 'hidden',\n          }}\n        >\n          {children}\n        </div>\n      )}\n    </ThemeConsumer>\n  )\n);\n\nconst toolbarGroupStyle = {\n  display: 'flex',\n  alignItems: 'center',\n};\n\nexport const ToolbarGroup = React.memo<ToolbarGroupProps>(\n  ({ children }: ToolbarGroupProps) => (\n    <span style={toolbarGroupStyle}>{children}</span>\n  )\n);\n","import React from 'react';\nimport ThemeConsumer from './Theme/ThemeConsumer';\n\nexport default props => {\n  return (\n    <ThemeConsumer>\n      {muiTheme => (\n        <span\n          style={{\n            height: 32,\n            marginLeft: 3,\n            marginRight: 3,\n            borderLeftStyle: 'solid',\n            borderLeftWidth: 1,\n            borderColor: muiTheme.toolbar.separatorColor,\n          }}\n        />\n      )}\n    </ThemeConsumer>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\n// We support a subset of the props supported by Material-UI v0.x Toggle\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  label?: ?React.Node,\n  toggled: boolean,\n  onToggle: (e: {||}, toggled: boolean) => void,\n  disabled?: boolean,\n  labelPosition: 'right',\n\n  style?: {|\n    marginTop?: number,\n  |},\n|};\n\n/**\n * A text field based on Material-UI text field.\n */\nexport default class Toggle extends React.Component<Props, {||}> {\n  render() {\n    return (\n      <FormControlLabel\n        control={\n          <Switch\n            checked={this.props.toggled}\n            onChange={event => this.props.onToggle(event, event.target.checked)}\n            color=\"primary\"\n          />\n        }\n        label={this.props.label}\n        disabled={this.props.disabled}\n        style={this.props.style}\n      />\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\n\nexport type CommandName =\n  | 'QUIT_APP'\n  | 'OPEN_PROJECT_MANAGER'\n  | 'LAUNCH_NEW_PREVIEW'\n  | 'LAUNCH_DEBUG_PREVIEW'\n  | 'LAUNCH_NETWORK_PREVIEW'\n  | 'HOT_RELOAD_PREVIEW'\n  | 'OPEN_START_PAGE'\n  | 'CREATE_NEW_PROJECT'\n  | 'OPEN_PROJECT'\n  | 'SAVE_PROJECT'\n  | 'SAVE_PROJECT_AS'\n  | 'CLOSE_PROJECT'\n  | 'EXPORT_GAME'\n  | 'OPEN_RECENT_PROJECT'\n  | 'OPEN_COMMAND_PALETTE'\n  | 'OPEN_PROJECT_PROPERTIES'\n  | 'OPEN_PROJECT_VARIABLES'\n  | 'OPEN_PLATFORM_SPECIFIC_ASSETS_DIALOG'\n  | 'OPEN_PROJECT_RESOURCES'\n  | 'OPEN_LAYOUT'\n  | 'OPEN_EXTERNAL_EVENTS'\n  | 'OPEN_EXTERNAL_LAYOUT'\n  | 'OPEN_EXTENSION'\n  | 'OPEN_SCENE_PROPERTIES'\n  | 'OPEN_SCENE_VARIABLES'\n  | 'OPEN_OBJECTS_PANEL'\n  | 'OPEN_OBJECT_GROUPS_PANEL'\n  | 'OPEN_PROPERTIES_PANEL'\n  | 'TOGGLE_INSTANCES_PANEL'\n  | 'TOGGLE_LAYERS_PANEL'\n  | 'SCENE_EDITOR_UNDO'\n  | 'SCENE_EDITOR_REDO'\n  | 'DELETE_INSTANCES'\n  | 'TOGGLE_WINDOW_MASK'\n  | 'TOGGLE_GRID'\n  | 'OPEN_SETUP_GRID'\n  | 'EDIT_LAYER_EFFECTS'\n  | 'EDIT_LAYER'\n  | 'EDIT_NETWORK_PREVIEW'\n  | 'EDIT_OBJECT'\n  | 'EDIT_OBJECT_VARIABLES'\n  | 'EDIT_OBJECT_GROUP'\n  | 'ADD_STANDARD_EVENT'\n  | 'ADD_SUBEVENT'\n  | 'ADD_COMMENT_EVENT'\n  | 'CHOOSE_AND_ADD_EVENT'\n  | 'EVENTS_EDITOR_UNDO'\n  | 'EVENTS_EDITOR_REDO'\n  | 'DELETE_SELECTION'\n  | 'SEARCH_EVENTS'\n  | 'OPEN_EXTENSION_SETTINGS'\n  | 'OPEN_PROFILE'\n  | 'OPEN_GAMES_DASHBOARD';\n\nexport const commandAreas = {\n  GENERAL: t`General`,\n  IDE: t`IDE`,\n  PROJECT: t`Project`,\n  SCENE: t`Scene`,\n  EVENTS: t`Events`,\n};\n\ntype CommandArea = $Keys<typeof commandAreas>;\n\ntype CommandMetadata = {|\n  area: CommandArea,\n  displayText: MessageDescriptor,\n  noShortcut?: boolean, // If true, command won't show up in shortcuts list\n  ghost?: boolean, // If true, command won't show up in palette\n  handledByElectron?: boolean, // If true, command shortcut is handled by Electron in desktop app\n|};\n\nconst commandsList: { [CommandName]: CommandMetadata } = {\n  // General commands\n  QUIT_APP: {\n    area: 'GENERAL',\n    displayText: t`Close GDevelop`,\n    handledByElectron: true,\n  },\n  OPEN_PROJECT_MANAGER: {\n    area: 'IDE',\n    displayText: t`Open project manager`,\n    handledByElectron: true,\n  },\n  OPEN_PROFILE: {\n    area: 'IDE',\n    displayText: t`Open My Profile`,\n  },\n  OPEN_GAMES_DASHBOARD: {\n    area: 'IDE',\n    displayText: t`Open My Games Dashboard`,\n  },\n  LAUNCH_NEW_PREVIEW: { area: 'PROJECT', displayText: t`Launch new preview` },\n  LAUNCH_DEBUG_PREVIEW: {\n    area: 'PROJECT',\n    displayText: t`Launch preview with debugger and profiler`,\n  },\n  LAUNCH_NETWORK_PREVIEW: {\n    area: 'PROJECT',\n    displayText: t`Launch network preview over WiFi/LAN`,\n  },\n  HOT_RELOAD_PREVIEW: {\n    area: 'PROJECT',\n    displayText: t`Apply changes to the running preview`,\n  },\n  OPEN_START_PAGE: { area: 'IDE', displayText: t`Open start page` },\n  CREATE_NEW_PROJECT: {\n    area: 'GENERAL',\n    displayText: t`Create a new project`,\n    handledByElectron: true,\n  },\n  OPEN_PROJECT: {\n    area: 'GENERAL',\n    displayText: t`Open project`,\n    handledByElectron: true,\n  },\n  SAVE_PROJECT: {\n    area: 'GENERAL',\n    displayText: t`Save project`,\n    handledByElectron: true,\n  },\n  SAVE_PROJECT_AS: {\n    area: 'GENERAL',\n    displayText: t`Save project as...`,\n    handledByElectron: true,\n  },\n  CLOSE_PROJECT: {\n    area: 'GENERAL',\n    displayText: t`Close project`,\n    handledByElectron: true,\n  },\n  EXPORT_GAME: {\n    area: 'PROJECT',\n    displayText: t`Export game`,\n    handledByElectron: true,\n  },\n  OPEN_RECENT_PROJECT: {\n    area: 'GENERAL',\n    displayText: t`Open recent project...`,\n  },\n  OPEN_COMMAND_PALETTE: {\n    area: 'IDE',\n    displayText: t`Open command palette`,\n    ghost: true,\n  },\n\n  // Project manager commands\n  OPEN_PROJECT_PROPERTIES: {\n    area: 'PROJECT',\n    displayText: t`Open project properties`,\n  },\n  OPEN_PROJECT_VARIABLES: {\n    area: 'PROJECT',\n    displayText: t`Edit global variables`,\n  },\n  OPEN_PLATFORM_SPECIFIC_ASSETS_DIALOG: {\n    area: 'PROJECT',\n    displayText: t`Open project icons`,\n  },\n  OPEN_PROJECT_RESOURCES: {\n    area: 'PROJECT',\n    displayText: t`Open project resources`,\n  },\n\n  // Tab-opening commands\n  OPEN_LAYOUT: { area: 'IDE', displayText: t`Open scene...` },\n  OPEN_EXTERNAL_EVENTS: {\n    area: 'IDE',\n    displayText: t`Open external events...`,\n  },\n  OPEN_EXTERNAL_LAYOUT: {\n    area: 'IDE',\n    displayText: t`Open external layout...`,\n  },\n  OPEN_EXTENSION: { area: 'IDE', displayText: t`Open extension...` },\n\n  // Scene editor commands\n  OPEN_SCENE_PROPERTIES: {\n    area: 'SCENE',\n    displayText: t`Open scene properties`,\n  },\n  OPEN_SCENE_VARIABLES: {\n    area: 'SCENE',\n    displayText: t`Open scene variables`,\n  },\n\n  // Scene editor toolbar commands\n  OPEN_OBJECTS_PANEL: {\n    area: 'SCENE',\n    displayText: t`Open the objects editor`,\n  },\n  OPEN_OBJECT_GROUPS_PANEL: {\n    area: 'SCENE',\n    displayText: t`Open the object groups editor`,\n  },\n  OPEN_PROPERTIES_PANEL: {\n    area: 'SCENE',\n    displayText: t`Open the properties panel`,\n  },\n  TOGGLE_INSTANCES_PANEL: {\n    area: 'SCENE',\n    displayText: t`Open the list of instances`,\n  },\n  TOGGLE_LAYERS_PANEL: {\n    area: 'SCENE',\n    displayText: t`Open the layers editor`,\n  },\n  SCENE_EDITOR_UNDO: {\n    area: 'SCENE',\n    displayText: t`Undo the last changes`,\n    noShortcut: true,\n  },\n  SCENE_EDITOR_REDO: {\n    area: 'SCENE',\n    displayText: t`Redo the last changes`,\n    noShortcut: true,\n  },\n  DELETE_INSTANCES: {\n    area: 'SCENE',\n    displayText: t`Delete the selected instances from the scene`,\n    noShortcut: true,\n  },\n  TOGGLE_WINDOW_MASK: { area: 'SCENE', displayText: t`Toggle mask` },\n  TOGGLE_GRID: { area: 'SCENE', displayText: t`Toggle grid` },\n  OPEN_SETUP_GRID: { area: 'SCENE', displayText: t`Setup grid` },\n\n  // Layers list commands\n  EDIT_LAYER_EFFECTS: {\n    area: 'SCENE',\n    displayText: t`Edit layer effects...`,\n  },\n  EDIT_LAYER: {\n    area: 'SCENE',\n    displayText: t`Edit layer...`,\n  },\n\n  // Objects list commands\n  EDIT_OBJECT: { area: 'SCENE', displayText: t`Edit object...` },\n  EDIT_OBJECT_VARIABLES: {\n    area: 'SCENE',\n    displayText: t`Edit object variables...`,\n  },\n\n  // Object groups list commands\n  EDIT_OBJECT_GROUP: { area: 'SCENE', displayText: t`Edit object group...` },\n\n  // Events editor toolbar commands\n  ADD_STANDARD_EVENT: {\n    area: 'EVENTS',\n    displayText: t`Add a new empty event`,\n  },\n  ADD_SUBEVENT: {\n    area: 'EVENTS',\n    displayText: t`Add a sub-event to the selected event`,\n  },\n  ADD_COMMENT_EVENT: { area: 'EVENTS', displayText: t`Add a comment` },\n  CHOOSE_AND_ADD_EVENT: {\n    area: 'EVENTS',\n    displayText: t`Choose and add an event...`,\n  },\n  EVENTS_EDITOR_UNDO: {\n    area: 'EVENTS',\n    displayText: t`Undo the last changes`,\n    noShortcut: true,\n  },\n  EVENTS_EDITOR_REDO: {\n    area: 'EVENTS',\n    displayText: t`Redo the last changes`,\n    noShortcut: true,\n  },\n  DELETE_SELECTION: {\n    area: 'EVENTS',\n    displayText: t`Delete the selected event(s)`,\n    noShortcut: true,\n  },\n  SEARCH_EVENTS: {\n    area: 'EVENTS',\n    displayText: t`Search in events`,\n    noShortcut: true,\n  },\n  OPEN_EXTENSION_SETTINGS: {\n    area: 'EVENTS',\n    displayText: t`Open extension settings`,\n  },\n};\n\nexport default commandsList;\n","// @flow\nimport * as React from 'react';\n\ntype CallbackEvent = {|\n  /* The X position, relative to the viewport, not including scroll offset, of the long touch */\n  clientX: number,\n  /* The Y position, relative to the viewport, not including scroll offset, of the long touch */\n  clientY: number,\n|};\n\n// Find the position of an event on the screen\nconst getClientXY = (event: TouchEvent): CallbackEvent => {\n  if (event.touches && event.touches.length > 0) {\n    return {\n      clientX: event.touches[0].clientX,\n      clientY: event.touches[0].clientY,\n    };\n  }\n\n  return {\n    clientX: 0,\n    clientY: 0,\n  };\n};\n\nconst delay = 600; // ms\nconst moveTolerance = 10; // px\n\n/**\n * A hook to listen to a long touch (\"long press\") on an element, to workaround the\n * non working onContextMenu on some platforms (Safari on iOS).\n *\n * A long press is characterized by starting a touch and staying pressed, without\n * moving too far from the initial position (to avoid being confused with a drag/scroll).\n */\nexport const useLongTouch = (callback: (e: CallbackEvent) => void) => {\n  const timeout = React.useRef<?TimeoutID>(null);\n  const currentTouchCallbackEvent = React.useRef<CallbackEvent>({\n    clientX: 0,\n    clientY: 0,\n  });\n  const clear = React.useCallback(() => {\n    timeout.current && clearTimeout(timeout.current);\n  }, []);\n\n  React.useEffect(\n    () => {\n      // Cancel the long touch if scrolling (otherwise we can get a long touch\n      // being activated while scroll and maintaining the touch on an element,\n      // which is weird for the user that just want to scroll).\n      document.addEventListener('scroll', clear, {\n        // Get notified as soon as the scroll happens.\n        capture: true,\n\n        // No need for passive: true\n        // According to MDN: \"You don't need to worry about the value of passive for the basic scroll event.\n        // Since it can't be canceled, event listeners can't block page rendering anyway\".\n      });\n\n      return () => {\n        // Ensure we remove the timeout waiting for the long press\n        // if the component is destroyed.\n        clear();\n\n        // Remove the listener for the scroll\n        document.removeEventListener('scroll', clear, { capture: true });\n      };\n    },\n    [clear]\n  );\n\n  const start = React.useCallback(\n    (event: TouchEvent) => {\n      // Ensure we remove the timeout waiting for the long press\n      // if there is one already. This can happen if start is called\n      // multiple times.\n      timeout.current && clearTimeout(timeout.current);\n\n      currentTouchCallbackEvent.current = getClientXY(event);\n      timeout.current = setTimeout(() => {\n        callback(currentTouchCallbackEvent.current);\n      }, delay);\n    },\n    [callback]\n  );\n\n  const onMove = React.useCallback(\n    (event: TouchEvent) => {\n      // If more than one touch,\n      // it's not a long press anymore.\n      if (event.touches.length !== 1) {\n        clear();\n        return;\n      }\n\n      // If touch moved too far from the initial touch position,\n      // it's not a long press anymore.\n      const touch = event.touches[0];\n      const { clientX, clientY } = currentTouchCallbackEvent.current;\n      if (\n        Math.abs(touch.clientX - clientX) > moveTolerance ||\n        Math.abs(touch.clientY - clientY) > moveTolerance\n      ) {\n        clear();\n        return;\n      }\n    },\n    [currentTouchCallbackEvent, clear]\n  );\n\n  return {\n    onTouchStart: start,\n    onTouchMove: onMove,\n    onTouchEnd: clear,\n  };\n};\n","// @flow\nimport * as React from 'react';\nconst gd = global.gd;\n\ntype Props = {|\n  serializableObject: gdSerializable,\n  useProjectToUnserialize?: ?gdProject,\n  onCancel: () => void,\n|};\n\n/**\n * Custom hook serializing the object and allowing to restore back\n * the object to this serialized state later, by calling the function\n * returned by the hook.\n */\nexport const useSerializableObjectCancelableEditor = ({\n  serializableObject,\n  useProjectToUnserialize,\n  onCancel,\n}: Props) => {\n  const serializedElementRef = React.useRef(null);\n  React.useEffect(\n    () => {\n      // Serialize the content of the object, to be used in case the user\n      // want to cancel their changes.\n      if (serializedElementRef.current) {\n        serializedElementRef.current.delete();\n        serializedElementRef.current = null;\n      }\n\n      serializedElementRef.current = new gd.SerializerElement();\n      serializableObject.serializeTo(serializedElementRef.current);\n\n      return () => {\n        if (serializedElementRef.current) {\n          serializedElementRef.current.delete();\n          serializedElementRef.current = null;\n        }\n      };\n    },\n    [serializableObject]\n  );\n\n  const onCancelChanges = React.useCallback(\n    () => {\n      // Use the value that was serialized to cancel the changes\n      // made to the object\n      const serializedElement = serializedElementRef.current;\n      if (!serializedElement) return;\n\n      if (!useProjectToUnserialize) {\n        serializableObject.unserializeFrom(serializedElement);\n      } else {\n        serializableObject.unserializeFrom(\n          useProjectToUnserialize,\n          serializedElement\n        );\n      }\n\n      onCancel();\n    },\n    [serializableObject, useProjectToUnserialize, onCancel]\n  );\n\n  return onCancelChanges;\n};\n","// @flow\r\n// Inspired by https://github.com/LoicMahieu/material-ui-color-picker\r\n\r\nimport * as React from 'react';\r\nimport { SketchPicker } from 'react-color';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport muiZIndex from '@material-ui/core/styles/zIndex';\r\nimport { type RGBColor } from '../../Utils/ColorTransformer';\r\n\r\nexport type ColorResult = {\r\n  rgb: RGBColor,\r\n};\r\n\r\ntype ColorChangeHandler = (color: ColorResult) => void;\r\n\r\ntype Props = {|\r\n  color: ?RGBColor,\r\n  style?: Object,\r\n  onChange?: ColorChangeHandler,\r\n  onChangeComplete?: ColorChangeHandler,\r\n  disableAlpha?: boolean,\r\n|};\r\n\r\ntype State = {|\r\n  displayColorPicker: boolean,\r\n|};\r\n\r\nconst styles = {\r\n  color: {\r\n    width: '36px',\r\n    height: '14px',\r\n    borderRadius: '2px',\r\n    textAlign: 'center',\r\n    fontSize: '10px',\r\n  },\r\n  swatch: {\r\n    padding: '5px',\r\n    background: '#fff',\r\n    borderRadius: '1px',\r\n    boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n    display: 'inline-block',\r\n    cursor: 'pointer',\r\n  },\r\n  popover: {\r\n    // Ensure the popover is above everything (modal, dialog, snackbar, tooltips, etc).\r\n    // There will be only one ColorPicker opened at a time, so it's fair to put the\r\n    // highest z index. If this is breaking, check the z-index of material-ui.\r\n    zIndex: muiZIndex.tooltip + 100,\r\n  },\r\n};\r\n\r\nclass ColorPicker extends React.Component<Props, State> {\r\n  _swatch = React.createRef<HTMLDivElement>();\r\n  state = {\r\n    displayColorPicker: false,\r\n  };\r\n\r\n  open = () => {\r\n    this.setState({ displayColorPicker: true });\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ displayColorPicker: false });\r\n  };\r\n\r\n  render() {\r\n    const { style, color, ...otherProps } = this.props;\r\n\r\n    const displayedColor = color\r\n      ? color\r\n      : {\r\n          r: 200,\r\n          g: 200,\r\n          b: 200,\r\n          a: 1,\r\n        };\r\n\r\n    return (\r\n      <div style={style}>\r\n        <div\r\n          style={styles.swatch}\r\n          onClick={this.handleClick}\r\n          ref={this._swatch}\r\n        >\r\n          <div\r\n            style={{\r\n              ...styles.color,\r\n              background: `rgba(${displayedColor.r}, ${displayedColor.g}, ${\r\n                displayedColor.b\r\n              }, ${displayedColor.a || 1})`,\r\n            }}\r\n          >\r\n            {color ? null : '?'}\r\n          </div>\r\n        </div>\r\n        {this.state.displayColorPicker && this._swatch.current ? (\r\n          <Popover\r\n            open\r\n            onClose={this.handleClose}\r\n            anchorEl={this._swatch.current}\r\n            style={styles.popover}\r\n          >\r\n            <SketchPicker color={displayedColor} {...otherProps} />\r\n          </Popover>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorPicker;\r\n","// @flow\nimport { mapFor } from '../Utils/MapFor';\n\nexport const enumerateLayouts = (project: gdProject): Array<gdLayout> =>\n  mapFor(0, project.getLayoutsCount(), i => project.getLayoutAt(i));\n\nexport const enumerateExternalEvents = (\n  project: gdProject\n): Array<gdExternalEvents> =>\n  mapFor(0, project.getExternalEventsCount(), i =>\n    project.getExternalEventsAt(i)\n  );\n\nexport const enumerateExternalLayouts = (\n  project: gdProject\n): Array<gdExternalLayout> =>\n  mapFor(0, project.getExternalLayoutsCount(), i =>\n    project.getExternalLayoutAt(i)\n  );\n\nexport const enumerateEventsFunctionsExtensions = (\n  project: gdProject\n): Array<gdEventsFunctionsExtension> =>\n  mapFor(0, project.getEventsFunctionsExtensionsCount(), i =>\n    project.getEventsFunctionsExtensionAt(i)\n  );\n\nexport const filterProjectItemsList = <T>(\n  list: Array<T>,\n  searchText: string\n): Array<T> => {\n  if (!searchText) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list.filter(\n    (item: any) =>\n      item\n        .getName()\n        .toLowerCase()\n        .indexOf(lowercaseSearchText) !== -1\n  );\n};\n","// @flow\nimport update from 'lodash/update';\nimport compact from 'lodash/compact';\nimport {\n  type EnumeratedInstructionOrExpressionMetadata,\n  type EnumeratedInstructionMetadata,\n  type EnumeratedExpressionMetadata,\n} from './EnumeratedInstructionOrExpressionMetadata.js';\n\nconst GROUP_DELIMITER = '/';\n\nexport type TreeNode<T> =\n  | T\n  | {\n      [string]: TreeNode<T>,\n    };\n\nexport type InstructionTreeNode = TreeNode<EnumeratedInstructionMetadata>;\nexport type ExpressionTreeNode = TreeNode<EnumeratedExpressionMetadata>;\nexport type InstructionOrExpressionTreeNode =\n  | InstructionTreeNode\n  | EnumeratedExpressionMetadata;\n\nexport const createTree = <T: EnumeratedInstructionOrExpressionMetadata>(\n  allExpressions: Array<T>\n): TreeNode<T> => {\n  const tree = {};\n  allExpressions.forEach((expressionInfo: T) => {\n    let pathInTree = compact(\n      expressionInfo.fullGroupName.split(GROUP_DELIMITER)\n    );\n    if (!pathInTree.length) {\n      // Group items without a group in an empty group\n      pathInTree = [''];\n    }\n\n    update(tree, pathInTree, groupInfo => {\n      const existingGroupInfo = groupInfo || {};\n      return {\n        ...existingGroupInfo,\n        [expressionInfo.displayedName]: expressionInfo,\n      };\n    });\n  });\n\n  return tree;\n};\n\nexport const findInTree = <T: Object>(\n  instructionTreeNode: TreeNode<T>,\n  instructionType: ?string\n): ?Array<string> => {\n  if (!instructionType) return null;\n\n  const keys = Object.keys(instructionTreeNode);\n  for (var i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n\n    // In theory, we should have a way to distinguish\n    // between instruction (leaf nodes) and group (nodes). We use\n    // the \"type\" properties, but this will fail if a group is called \"type\"\n    // (hence the flow errors, which are valid warnings)\n    const instructionOrGroup = instructionTreeNode[key];\n    if (!instructionOrGroup) return null;\n\n    if (typeof instructionOrGroup.type === 'string') {\n      // $FlowFixMe - see above\n      const instructionInformation: EnumeratedInstructionOrExpressionMetadata = instructionOrGroup;\n\n      if (instructionInformation.type === instructionType) {\n        return [];\n      }\n    } else {\n      // $FlowFixMe - see above\n      const groupOfInstructionInformation: TreeNode<T> = instructionOrGroup;\n      const searchResult = findInTree(\n        groupOfInstructionInformation,\n        instructionType\n      );\n      if (searchResult) {\n        return [key, ...searchResult];\n      }\n    }\n  }\n\n  return null;\n};\n","// @flow\nimport * as React from 'react';\nimport { type WidthType } from '../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport {\n  actionsContainer,\n  conditionsContainer,\n  smallWidthContainer,\n} from './ClassNames';\n\ntype Props = {|\n  renderConditionsList: ({ style: Object, className: string }) => React.Node,\n  renderActionsList: ({ className: string }) => React.Node,\n  windowWidth: WidthType,\n  className?: string,\n  leftIndentWidth: number,\n|};\n\nconst styles = {\n  oneColumnContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  twoColumnsContainer: {\n    display: 'flex',\n  },\n};\n\n/**\n * Display the lists of instructions (conditions and actions),\n * next to each other on a big screen (with proper sizing for the conditions column),\n * and stacked on a small one.\n */\nconst ConditionsActionsColumns = (props: Props) => {\n  if (props.windowWidth === 'small') {\n    return (\n      <div style={styles.oneColumnContainer} className={props.className}>\n        {props.renderConditionsList({\n          style: {},\n          className: `${conditionsContainer} ${smallWidthContainer}`,\n        })}\n        {props.renderActionsList({\n          style: {},\n          className: `${actionsContainer} ${smallWidthContainer}`,\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <div style={styles.twoColumnsContainer} className={props.className}>\n      {props.renderConditionsList({\n        style: {\n          width: `calc(35vw - ${props.leftIndentWidth}px)`,\n        },\n        className: conditionsContainer,\n      })}\n      {props.renderActionsList({ className: actionsContainer })}\n    </div>\n  );\n};\n\nexport default ConditionsActionsColumns;\n","// @flow\nimport { t } from '@lingui/macro';\nimport { Trans } from '@lingui/macro';\nimport IconButton from '../../UI/IconButton';\nimport Measure from 'react-measure';\nimport * as React from 'react';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { Column } from '../../UI/Grid';\nimport MiniToolbar from '../../UI/MiniToolbar';\nimport ZoomIn from '@material-ui/icons/ZoomIn';\nimport ZoomOut from '@material-ui/icons/ZoomOut';\nimport ZoomOutMap from '@material-ui/icons/ZoomOutMap';\nimport PlaceholderMessage from '../../UI/PlaceholderMessage';\nimport Text from '../../UI/Text';\nimport { CorsAwareImage } from '../../UI/CorsAwareImage';\n\nconst MARGIN = 50;\nconst MAX_ZOOM_FACTOR = 10;\nconst MIN_ZOOM_FACTOR = 0.1;\n\nconst styles = {\n  imagePreviewContainer: {\n    position: 'relative',\n    display: 'inline-block',\n    width: '100%',\n    border: '#AAAAAA 1px solid',\n    overflow: 'scroll',\n    height: 200,\n    background: 'url(\"res/transparentback.png\") repeat',\n\n    // The container contains the image and the \"overlay\" that can display\n    // points or polygons that can be drag'n'dropped. `touch-action` must\n    // be set to `none`, otherwise the (mobile) browser will claim the\n    // `pointermove` event for \"native\" behavior like panning the page.\n    touchAction: 'none',\n  },\n  spriteThumbnailImage: {\n    position: 'relative',\n    pointerEvents: 'none',\n    margin: MARGIN,\n  },\n  box: {\n    border: '1px solid black',\n  },\n};\n\ntype Props = {|\n  project: gdProject,\n  resourceName: string,\n  resourcePath?: string,\n  resourcesLoader: typeof ResourcesLoader,\n  renderOverlay?: ({|\n    imageWidth: number,\n    imageHeight: number,\n    imageZoomFactor: number,\n  |}) => React.Node,\n  onSize?: (number, number) => void,\n|};\n\ntype State = {|\n  errored: boolean,\n  imageWidth: ?number,\n  imageHeight: ?number,\n  imageSource: ?string,\n  imageZoomFactor: number,\n|};\n\n/**\n * Display the preview for a resource of a project with kind \"image\".\n */\nexport default class ImagePreview extends React.Component<Props, State> {\n  state = {\n    errored: false,\n    imageWidth: null,\n    imageHeight: null,\n    imageZoomFactor: 1,\n    ...this._loadFrom(this.props),\n  };\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      newProps.resourceName !== this.props.resourceName ||\n      newProps.project !== this.props.project ||\n      newProps.resourcesLoader !== this.props.resourcesLoader ||\n      newProps.resourcePath !== this.props.resourcePath\n    ) {\n      this.setState(this._loadFrom(newProps));\n    }\n  }\n\n  _loadFrom(props: Props): {| errored: boolean, imageSource: ?string |} {\n    const { project, resourceName, resourcesLoader } = props;\n    return {\n      errored: false,\n      imageSource: resourcesLoader.getResourceFullUrl(\n        project,\n        resourceName,\n        {}\n      ),\n    };\n  }\n\n  _handleImageError = () => {\n    this.setState({\n      errored: true,\n    });\n  };\n\n  _handleImageLoaded = (e: any) => {\n    const imgElement = e.target;\n\n    const imageWidth = imgElement\n      ? imgElement.naturalWidth || imgElement.clientWidth\n      : 0;\n    const imageHeight = imgElement\n      ? imgElement.naturalHeight || imgElement.clientHeight\n      : 0;\n    this.setState({\n      imageWidth,\n      imageHeight,\n    });\n    if (this.props.onSize) this.props.onSize(imageWidth, imageHeight);\n  };\n\n  _zoomBy = (imageZoomFactorDelta: number) => {\n    this._zoomTo(this.state.imageZoomFactor + imageZoomFactorDelta);\n  };\n\n  _zoomTo = (imageZoomFactor: number) => {\n    this.setState(state => ({\n      imageZoomFactor: Math.min(\n        MAX_ZOOM_FACTOR,\n        Math.max(MIN_ZOOM_FACTOR, imageZoomFactor)\n      ),\n    }));\n  };\n\n  render() {\n    return (\n      <Measure bounds>\n        {({ contentRect, measureRef }) => {\n          const containerWidth = contentRect.bounds.width;\n          const { resourceName, renderOverlay } = this.props;\n          const {\n            imageHeight,\n            imageWidth,\n            imageSource,\n            imageZoomFactor,\n          } = this.state;\n\n          const imageLoaded =\n            !!imageWidth && !!imageHeight && !this.state.errored;\n\n          const imagePositionTop = 0;\n          const imagePositionLeft = Math.max(\n            0,\n            containerWidth / 2 -\n              ((imageWidth || 0) * imageZoomFactor) / 2 -\n              MARGIN\n          );\n\n          const imageStyle = {\n            ...styles.spriteThumbnailImage,\n            top: imagePositionTop,\n            left: imagePositionLeft,\n            width: imageWidth ? imageWidth * imageZoomFactor : undefined,\n            height: imageHeight ? imageHeight * imageZoomFactor : undefined,\n            visibility: imageLoaded ? undefined : 'hidden', // TODO: Loader\n          };\n\n          const overlayStyle = {\n            position: 'absolute',\n            top: imagePositionTop + MARGIN,\n            left: imagePositionLeft + MARGIN,\n            width: imageWidth ? imageWidth * imageZoomFactor : undefined,\n            height: imageHeight ? imageHeight * imageZoomFactor : undefined,\n            visibility: imageLoaded ? undefined : 'hidden', // TODO: Loader\n          };\n\n          return (\n            <Column expand noMargin>\n              <MiniToolbar>\n                <IconButton\n                  onClick={() => this._zoomBy(+0.2)}\n                  tooltip={t`Zoom in (you can also use Ctrl + Mouse wheel)`}\n                >\n                  <ZoomIn />\n                </IconButton>\n                <IconButton\n                  onClick={() => this._zoomBy(-0.2)}\n                  tooltip={t`Zoom out (you can also use Ctrl + Mouse wheel)`}\n                >\n                  <ZoomOut />\n                </IconButton>\n                <IconButton\n                  onClick={() => this._zoomTo(1)}\n                  tooltip={t`Restore original size`}\n                >\n                  <ZoomOutMap />\n                </IconButton>\n              </MiniToolbar>\n              <div\n                dir={\n                  'ltr' /* Force LTR layout to avoid issues with image positioning */\n                }\n                style={styles.imagePreviewContainer}\n                ref={measureRef}\n                onWheel={event => {\n                  const { deltaY } = event;\n                  //TODO: Use KeyboardShortcuts\n                  if (event.metaKey || event.ctrlKey) {\n                    this._zoomBy(-deltaY / 500);\n                    event.preventDefault();\n                    event.stopPropagation();\n                  } else {\n                    // Let the usual, native vertical or horizontal scrolling happen.\n                  }\n                }}\n              >\n                {!!this.state.errored && (\n                  <PlaceholderMessage>\n                    <Text>\n                      <Trans>Unable to load the image</Trans>\n                    </Text>\n                  </PlaceholderMessage>\n                )}\n                {!this.state.errored && (\n                  <CorsAwareImage\n                    style={imageStyle}\n                    alt={resourceName}\n                    src={imageSource}\n                    onError={this._handleImageError}\n                    onLoad={this._handleImageLoaded}\n                  />\n                )}\n                {imageLoaded && renderOverlay && (\n                  <div style={{ ...overlayStyle, ...styles.box }} />\n                )}\n                {imageLoaded && renderOverlay && (\n                  <div style={overlayStyle}>\n                    {renderOverlay({\n                      imageWidth: imageWidth || 0,\n                      imageHeight: imageHeight || 0,\n                      imageZoomFactor,\n                    })}\n                  </div>\n                )}\n              </div>\n            </Column>\n          );\n        }}\n      </Measure>\n    );\n  }\n}\n","import { mapVector, mapFor } from '../../../../Utils/MapFor';\nimport every from 'lodash/every';\nconst gd = global.gd;\n\n/**\n * Return the specified animation, direction and sprite for a SpriteObject.\n * Returns null for these elements if the specified choice is not valid.\n * @param {*} object\n * @param {*} animationIndex\n * @param {*} directionIndex\n * @param {*} spriteIndex\n */\nexport const getCurrentElements = (\n  object,\n  animationIndex,\n  directionIndex,\n  spriteIndex\n) => {\n  const hasValidAnimation = animationIndex < object.getAnimationsCount();\n  const animation = hasValidAnimation\n    ? object.getAnimation(animationIndex)\n    : null;\n  const hasValidDirection =\n    !!animation && directionIndex < animation.getDirectionsCount();\n  const direction = hasValidDirection\n    ? animation.getDirection(directionIndex)\n    : null;\n  const hasValidSprite =\n    !!direction && spriteIndex < direction.getSpritesCount();\n  const sprite = hasValidSprite ? direction.getSprite(spriteIndex) : null;\n\n  return {\n    hasValidAnimation,\n    animation,\n    hasValidDirection,\n    direction,\n    hasValidSprite,\n    sprite,\n  };\n};\n\nexport const copyPoint = (originalPoint, destinationPoint) => {\n  destinationPoint.setX(originalPoint.getX());\n  destinationPoint.setY(originalPoint.getY());\n  destinationPoint.setName(originalPoint.getName());\n};\n\nexport const copySpritePoints = (originalSprite, destinationSprite) => {\n  if (originalSprite.ptr === destinationSprite.ptr) return;\n\n  copyPoint(originalSprite.getCenter(), destinationSprite.getCenter());\n  copyPoint(originalSprite.getOrigin(), destinationSprite.getOrigin());\n  destinationSprite.setDefaultCenterPoint(\n    originalSprite.isDefaultCenterPoint()\n  );\n\n  destinationSprite.getAllNonDefaultPoints().clear();\n  mapVector(originalSprite.getAllNonDefaultPoints(), originalPoint => {\n    destinationSprite.addPoint(originalPoint);\n  });\n};\n\nexport const copyAnimationsSpritePoints = (originalSprite, animation) => {\n  mapFor(0, animation.getDirectionsCount(), i => {\n    const direction = animation.getDirection(i);\n\n    mapFor(0, direction.getSpritesCount(), j => {\n      const sprite = direction.getSprite(j);\n      copySpritePoints(originalSprite, sprite);\n    });\n  });\n};\n\nexport const isSamePoint = (point1, point2) => {\n  return (\n    point1.getX() === point2.getX() &&\n    point1.getY() === point2.getY() &&\n    point1.getName() === point2.getName()\n  );\n};\n\nexport const haveSamePoints = (sprite1, sprite2) => {\n  if (!isSamePoint(sprite1.getCenter(), sprite2.getCenter())) return false;\n  if (!isSamePoint(sprite1.getOrigin(), sprite2.getOrigin())) return false;\n  if (sprite1.isDefaultCenterPoint() !== sprite2.isDefaultCenterPoint())\n    return false;\n\n  if (\n    sprite1.getAllNonDefaultPoints().size() !==\n    sprite2.getAllNonDefaultPoints().size()\n  )\n    return false;\n\n  return every(\n    mapVector(sprite1.getAllNonDefaultPoints(), sprite1Point => {\n      if (!sprite2.hasPoint(sprite1Point.getName())) return false;\n\n      return isSamePoint(\n        sprite1Point,\n        sprite2.getPoint(sprite1Point.getName())\n      );\n    })\n  );\n};\n\nexport const allDirectionSpritesHaveSamePointsAs = (\n  originalSprite,\n  direction\n) => {\n  return every(\n    mapFor(0, direction.getSpritesCount(), j => {\n      const sprite = direction.getSprite(j);\n      return haveSamePoints(sprite, originalSprite);\n    })\n  );\n};\n\nexport const allSpritesHaveSamePointsAs = (originalSprite, animation) => {\n  return every(\n    mapFor(0, animation.getDirectionsCount(), i => {\n      const direction = animation.getDirection(i);\n      return allDirectionSpritesHaveSamePointsAs(originalSprite, direction);\n    })\n  );\n};\n\nexport const copySpritePolygons = (originalSprite, destinationSprite) => {\n  if (originalSprite.ptr === destinationSprite.ptr) return;\n\n  destinationSprite.setCollisionMaskAutomatic(\n    originalSprite.isCollisionMaskAutomatic()\n  );\n\n  destinationSprite.getCustomCollisionMask().clear();\n  mapVector(originalSprite.getCustomCollisionMask(), originalPolygon => {\n    destinationSprite.getCustomCollisionMask().push_back(originalPolygon);\n  });\n};\n\nexport const copyAnimationsSpriteCollisionMasks = (\n  originalSprite,\n  animation\n) => {\n  mapFor(0, animation.getDirectionsCount(), i => {\n    const direction = animation.getDirection(i);\n\n    mapFor(0, direction.getSpritesCount(), j => {\n      const sprite = direction.getSprite(j);\n      copySpritePolygons(originalSprite, sprite);\n    });\n  });\n};\n\nexport const isSamePolygon = (polygon1, polygon2) => {\n  const polygon1Vertices = polygon1.getVertices();\n  const polygon2Vertices = polygon2.getVertices();\n\n  if (polygon1Vertices.size() !== polygon2Vertices.size()) return false;\n\n  return every(\n    mapVector(polygon1Vertices, (point1, index) => {\n      const point2 = polygon2Vertices.at(index);\n      return (\n        point1.get_x() === point2.get_x() && point1.get_y() === point2.get_y()\n      );\n    })\n  );\n};\n\nexport const haveSameCollisionMasks = (sprite1, sprite2) => {\n  if (sprite1.isCollisionMaskAutomatic() !== sprite2.isCollisionMaskAutomatic())\n    return false;\n\n  if (sprite1.isCollisionMaskAutomatic() && sprite2.isCollisionMaskAutomatic())\n    return true;\n\n  const sprite1CollisionMask = sprite1.getCustomCollisionMask();\n  const sprite2CollisionMask = sprite2.getCustomCollisionMask();\n\n  if (sprite1CollisionMask.size() !== sprite2CollisionMask.size()) return false;\n\n  return every(\n    mapVector(sprite1CollisionMask, (sprite1Polygon, index) => {\n      return isSamePolygon(sprite1Polygon, sprite2CollisionMask.at(index));\n    })\n  );\n};\n\nexport const allDirectionSpritesHaveSameCollisionMasksAs = (\n  originalSprite,\n  direction\n) => {\n  return every(\n    mapFor(0, direction.getSpritesCount(), j => {\n      const sprite = direction.getSprite(j);\n      return haveSameCollisionMasks(sprite, originalSprite);\n    })\n  );\n};\n\nexport const allSpritesHaveSameCollisionMasksAs = (\n  originalSprite,\n  animation\n) => {\n  return every(\n    mapFor(0, animation.getDirectionsCount(), i => {\n      const direction = animation.getDirection(i);\n      return allDirectionSpritesHaveSameCollisionMasksAs(\n        originalSprite,\n        direction\n      );\n    })\n  );\n};\n\nexport const deleteSpritesFromAnimation = (animation, spritePtrs) => {\n  mapFor(0, animation.getDirectionsCount(), i => {\n    const direction = animation.getDirection(i);\n\n    const spritesToDelete = mapFor(0, direction.getSpritesCount(), j => {\n      const sprite = direction.getSprite(j);\n\n      return !!spritePtrs[sprite.ptr];\n    });\n\n    // Iterate from the end to the beginning to avoid invalidating indexes.\n    for (\n      let spriteIndex = direction.getSpritesCount() - 1;\n      spriteIndex >= 0;\n      spriteIndex--\n    ) {\n      if (spritesToDelete[spriteIndex]) direction.removeSprite(spriteIndex);\n    }\n  });\n};\n\nexport const duplicateSpritesInAnimation = (animation, spritePtrs) => {\n  mapFor(0, animation.getDirectionsCount(), i => {\n    const direction = animation.getDirection(i);\n\n    const spritesToDuplicate = mapFor(0, direction.getSpritesCount(), j => {\n      const sprite = direction.getSprite(j);\n\n      return !!spritePtrs[sprite.ptr];\n    });\n\n    // Iterate from the end to the beginning to avoid invalidating indexes.\n    for (\n      let spriteIndex = direction.getSpritesCount() - 1;\n      spriteIndex >= 0;\n      spriteIndex--\n    ) {\n      if (spritesToDuplicate[spriteIndex]) {\n        const spriteToDuplicate = direction.getSprite(spriteIndex);\n        const newSprite = new gd.Sprite();\n        newSprite.setImageName(spriteToDuplicate.getImageName());\n        copySpritePoints(spriteToDuplicate, newSprite);\n        copySpritePolygons(spriteToDuplicate, newSprite);\n\n        direction.addSprite(newSprite);\n        direction.moveSprite(direction.getSpritesCount() - 1, spriteIndex);\n      }\n    }\n  });\n};\n","//TODO: Factor with styles.js from LayersList.\nexport default {\n  handleColumn: {\n    width: 24,\n    paddingLeft: 8,\n    paddingRight: 0,\n  },\n  coordinateColumn: {\n    width: 48,\n  },\n  toolColumn: {\n    width: 48,\n  },\n};\n","import optionalRequire from '../../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\n\n/**\n * Wraps an Electron Menu\n */\nexport default class ElectronMenuImplementation {\n  buildFromTemplate(template) {\n    this.menuTemplate = template;\n    return undefined;\n  }\n\n  showMenu(dimensions) {\n    if (!electron) return;\n\n    const { Menu } = electron.remote;\n    const browserWindow = electron.remote.getCurrentWindow();\n    this.menu = Menu.buildFromTemplate(this.menuTemplate);\n    this.menu.popup({\n      window: browserWindow,\n      x: Math.round(dimensions.left),\n      y: Math.round(dimensions.top + dimensions.height),\n      async: true, // Ensure the UI is not blocked on macOS.\n    });\n  }\n\n  getMenuProps() {\n    return {\n      open: false,\n    };\n  }\n}\n","import React, { useState, useRef, useCallback } from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Fade from '@material-ui/core/Fade';\n\nconst SubMenuItem = ({ item, buildFromTemplate }) => {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const anchorElement = useRef(null);\n  const setAnchorElement = useCallback(element => {\n    anchorElement.current = element;\n  }, []);\n\n  return (\n    <React.Fragment>\n      <MenuItem\n        dense\n        key={item.label}\n        disabled={item.enabled === false}\n        onClick={event => {\n          if (item.enabled === false) {\n            return;\n          }\n\n          if (!anchorElement.current) {\n            setAnchorElement(event.currentTarget);\n          }\n\n          setMenuOpen(!menuOpen);\n        }}\n      >\n        {item.label}\n        <ArrowRightIcon />\n      </MenuItem>\n      <Menu\n        open={menuOpen}\n        anchorEl={anchorElement.current}\n        onClose={() => setMenuOpen(false)}\n        TransitionComponent={Fade}\n      >\n        {buildFromTemplate(item.submenu)}\n      </Menu>\n    </React.Fragment>\n  );\n};\n\n/**\n * Construct items for material-ui's Menu, using a template which\n * is partially supporting the Electron Menu API (https://github.com/electron/electron/blob/master/docs/api/menu-item.md).\n *\n * Supported options are:\n *  - click\n *  - visible\n *  - type ('separator' and 'checkbox')\n *  - label\n *  - accelerator\n *  - enabled\n *  - checked (when `type` is 'checkbox')\n *  - submenu\n */\nexport default class MaterialUIMenuImplementation {\n  constructor({ onClose }) {\n    this._onClose = onClose;\n  }\n\n  buildFromTemplate(template) {\n    return template\n      .map((item, id) => {\n        if (item.visible === false) return null;\n\n        // Accelerator is not implemented for Material-UI menus\n        // const accelerator = item.accelerator\n        //   ? adaptAcceleratorString(item.accelerator)\n        //   : undefined;\n\n        if (item.type === 'separator') {\n          return <Divider key={'separator' + id} />;\n          // return null;\n        } else if (item.type === 'checkbox') {\n          return (\n            <MenuItem\n              dense\n              key={'checkbox' + item.label}\n              checked={item.checked}\n              disabled={item.enabled === false}\n              onClick={() => {\n                if (item.enabled === false) {\n                  return;\n                }\n\n                if (item.click) {\n                  item.click();\n                }\n                this._onClose();\n              }}\n            >\n              <ListItemIcon>\n                {item.checked ? <CheckBoxIcon /> : <CheckBoxOutlineBlankIcon />}\n              </ListItemIcon>\n              <ListItemText primary={item.label} />\n            </MenuItem>\n          );\n        } else if (item.submenu) {\n          return (\n            <SubMenuItem\n              key={'submenu' + item.label}\n              item={item}\n              buildFromTemplate={template => this.buildFromTemplate(template)}\n            />\n          );\n        } else {\n          return (\n            <MenuItem\n              dense\n              key={'item' + item.label}\n              disabled={item.enabled === false}\n              onClick={() => {\n                if (item.enabled === false) {\n                  return;\n                }\n\n                if (item.click) {\n                  item.click();\n                  this._onClose();\n                }\n              }}\n            >\n              {item.label}\n            </MenuItem>\n          );\n        }\n      })\n      .filter(Boolean);\n  }\n\n  showMenu() {\n    // Automatically done by IconMenu\n  }\n\n  getMenuProps() {\n    return {};\n  }\n}\n","// TODO: this needs to be flow-typed\nimport React from 'react';\nimport { I18n } from '@lingui/react';\nimport Menu from '@material-ui/core/Menu';\nimport Fade from '@material-ui/core/Fade';\nimport ElectronMenuImplementation from './ElectronMenuImplementation';\nimport MaterialUIMenuImplementation from './MaterialUIMenuImplementation';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\n\nclass MaterialUIContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      anchorX: 0,\n      anchorY: 0,\n    };\n    this.menuImplementation = new MaterialUIMenuImplementation({\n      onClose: this._onClose,\n    });\n  }\n\n  open = (x, y) => {\n    this.setState(\n      {\n        anchorX: x,\n        anchorY: y,\n      },\n      () => {\n        this.setState({\n          open: true,\n        });\n      }\n    );\n  };\n\n  _onClose = () => {\n    this.setState({\n      open: false,\n    });\n  };\n\n  render() {\n    return this.state.open ? (\n      <I18n>\n        {({ i18n }) => (\n          <Menu\n            open={this.state.open}\n            anchorPosition={{\n              left: this.state.anchorX,\n              top: this.state.anchorY,\n            }}\n            anchorReference={'anchorPosition'}\n            onClose={this._onClose}\n            TransitionComponent={Fade}\n            {...this.menuImplementation.getMenuProps()}\n          >\n            {this.menuImplementation.buildFromTemplate(\n              this.props.buildMenuTemplate(i18n)\n            )}\n          </Menu>\n        )}\n      </I18n>\n    ) : // Don't render the menu when it's not opened, as `buildMenuTemplate` could\n    // be running logic to compute some labels or `enabled` flag values - and might\n    // not be prepared to do that when the menu is not opened.\n    null;\n  }\n}\n\nclass ElectronContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.menuImplementation = new ElectronMenuImplementation();\n  }\n\n  open = (x, y) => {\n    this.menuImplementation.buildFromTemplate(\n      this.props.buildMenuTemplate(this.props.i18n)\n    );\n    this.menuImplementation.showMenu({\n      left: x || 0,\n      top: y || 0,\n      width: 0,\n      height: 0,\n    });\n  };\n\n  render() {\n    return null;\n  }\n}\n\nconst ElectronContextMenuWrapper = React.forwardRef((props, ref) => {\n  const electronContextMenu = React.useRef(null);\n  React.useImperativeHandle(ref, () => ({\n    open: (x, y) => {\n      if (electronContextMenu.current) electronContextMenu.current.open(x, y);\n    },\n  }));\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <ElectronContextMenu {...props} i18n={i18n} ref={electronContextMenu} />\n      )}\n    </I18n>\n  );\n});\n\nexport default (electron ? ElectronContextMenuWrapper : MaterialUIContextMenu);\n","// @flow\nimport { darken, lighten } from '@material-ui/core/styles';\n\nexport const closeableTabSizeOverrides = {\n  width: 200,\n  height: 32,\n  closeButtonWidth: 24,\n};\n\nexport function getRootClassNames(theme: string) {\n  return {\n    mosaicRootClassName: theme,\n    eventsSheetRootClassName: theme,\n    tableRootClassName: theme,\n    markdownRootClassName: theme,\n  };\n}\n\nexport function getMuiOverrides(\n  tabTextColor: string,\n  tabBackgroundColor: string,\n  inputBorderBottomColor: string,\n  appBarBackgroundColor: string,\n  iconColor: string\n) {\n  return {\n    MuiTypography: {\n      h6: {\n        // Make h6, used in Drawer title bars, use the same weight as tabs and mosaic windows\n        fontWeight: 400,\n      },\n    },\n    MuiInput: {\n      input: {\n        padding: 0,\n        paddingBottom: 3,\n      },\n      underline: {\n        '&:before': {\n          borderBottom: `1px solid ${inputBorderBottomColor}`,\n        },\n      },\n    },\n    MuiAppBar: {\n      colorPrimary: {\n        backgroundColor: appBarBackgroundColor,\n      },\n    },\n    MuiIconButton: {\n      root: {\n        // Fix color being grey if not set to (almost) black\n        color: iconColor,\n      },\n    },\n    MuiListItemIcon: {\n      root: {\n        // Fix color being grey if not set to (almost) black\n        color: iconColor,\n      },\n    },\n    // Reduce right margins from 16px to 8px in lists:\n    MuiListItem: {\n      secondaryAction: {\n        paddingRight: 40,\n      },\n      gutters: {\n        paddingRight: 8,\n      },\n    },\n    MuiListItemSecondaryAction: {\n      root: {\n        right: 8,\n      },\n    },\n    // Use a more visible color scheme for tabs:\n    MuiTabs: {\n      root: {\n        backgroundColor: tabBackgroundColor,\n        minHeight: 32, // Reduce the height of tabs to 32px\n      },\n    },\n    MuiTab: {\n      textColorPrimary: {\n        color: tabTextColor + ' !important',\n      },\n      root: {\n        // Reduce the height of tabs to 32px\n        paddingTop: 0,\n        paddingBottom: 0,\n        minHeight: 32,\n      },\n    },\n    MuiButtonBase: {\n      // Remove the web-ish \"pointer\" (hand) cursor from buttons\n      root: {\n        cursor: 'default',\n      },\n    },\n    // Reduce default margins on tables:\n    MuiTableCell: {\n      sizeSmall: {\n        paddingTop: 0,\n        paddingBottom: 0,\n      },\n    },\n    // Reduce default margins on Dialogs:\n    MuiDialogTitle: {\n      root: {\n        padding: 8,\n      },\n    },\n    MuiDialogContent: {\n      root: {\n        padding: 8,\n        '&:first-child': {\n          paddingTop: 8,\n        },\n      },\n    },\n    // Remove default margins on form controls (we already use a Grid)\n    MuiFormControl: {\n      marginDense: {\n        marginTop: 0,\n        marginBottom: 0,\n      },\n    },\n    MuiCheckbox: {\n      root: {\n        // Cancel padding around Checkbox\n        marginTop: -9,\n        marginBottom: -9,\n      },\n    },\n    // Use non rounded buttons\n    MuiButton: {\n      root: {\n        borderRadius: 0,\n        fontWeight: 400, // Lower a bit the weight of buttons\n      },\n    },\n  };\n}\n\nexport function getThemeMode(color: string, contrastText: string) {\n  return {\n    light: lighten(color, 0.05),\n    main: color,\n    dark: darken(color, 0.05),\n    contrastText: contrastText,\n  };\n}\n\nexport function createGdevelopTheme(\n  styles: any,\n  rootClassNameIdentifier: string,\n  paletteType: string,\n  gdevelopIconsCSSFilter: string = ''\n) {\n  return {\n    gdevelopTheme: {\n      palette: {\n        canvasColor: styles['ThemeSurfaceCanvasBackgroundColor'],\n      },\n      message: {\n        warning: styles['ThemeMessageWarningColor'],\n        error: styles['ThemeMessageErrorColor'],\n        valid: styles['ThemeMessageValidColor'],\n      },\n      toolbar: {\n        backgroundColor: styles['ThemeSurfaceWindowBackgroundColor'],\n        separatorColor: styles['ThemeToolbarSeparatorColor'],\n      },\n      closableTabs: {\n        fontFamily: styles['GdevelopFontFamily'],\n        containerBackgroundColor: styles['ThemeSurfaceWindowBackgroundColor'],\n        backgroundColor: styles['ThemeClosableTabsDefaultBackgroundColor'],\n        textColor: styles['ThemeClosableTabsDefaultColor'],\n        selectedBackgroundColor:\n          styles['ThemeClosableTabsSelectedBackgroundColor'],\n        selectedTextColor: styles['ThemeClosableTabsSelectedColor'],\n        ...closeableTabSizeOverrides,\n      },\n      imageThumbnail: {\n        selectedBorderColor: styles['ThemeSelectionBackgroundColor'],\n      },\n      list: {\n        itemsBackgroundColor:\n          styles['ThemeSurfaceAlternateCanvasBackgroundColor'],\n      },\n      searchBar: {\n        backgroundColor: styles['ThemeSurfaceAlternateCanvasBackgroundColor'],\n      },\n      listItem: {\n        groupBackgroundColor: styles['ThemeSurfaceWindowBackgroundColor'],\n        groupTextColor: styles['ThemeListItemGroupTextColor'],\n        deprecatedGroupTextColor:\n          styles['ThemeListItemGroupTextDeprecatedColor'],\n        separatorColor: styles['ThemeListItemSeparatorColor'],\n        selectedBackgroundColor: styles['ThemeSelectionBackgroundColor'],\n        selectedTextColor: styles['ThemeSelectionColor'],\n        rightIconColor: styles['ThemeRightIconColor'],\n        selectedRightIconColor: styles['ThemeRightIconColor'],\n        errorTextColor: styles['ThemeListItemErrorColor'],\n        warningTextColor: styles['ThemeListItemWarningColor'],\n        selectedErrorBackgroundColor: styles['ThemeListItemErrorColor'],\n        selectedWarningBackgroundColor: styles['ThemeListItemWarningColor'],\n      },\n      emptyMessage: {\n        shadowColor: styles['ThemeMessageEmptyShadowColor'],\n      },\n      ...getRootClassNames(rootClassNameIdentifier),\n      logo: {\n        src: 'res/GD-logo-big.png',\n      },\n      gdevelopIconsCSSFilter,\n    },\n    muiThemeOptions: {\n      typography: {\n        fontFamily: styles['GdevelopFontFamily'],\n      },\n      palette: {\n        type: paletteType,\n        common: {\n          black: styles['ThemePaletteBlack'],\n          white: styles['ThemePaletteWhite'],\n        },\n        background: {\n          paper: styles['ThemeSurfaceCanvasBackgroundColor'],\n          default: styles['ThemeSurfaceWindowBackgroundColor'],\n        },\n        primary: getThemeMode(\n          styles['ThemePrimaryColor'],\n          styles['ThemePrimaryTextContrastColor']\n        ),\n        secondary: getThemeMode(\n          styles['ThemeSecondaryColor'],\n          styles['ThemeSecondaryTextContrastColor']\n        ),\n        text: {\n          primary: styles['ThemeTextDefaultColor'],\n          secondary: styles['ThemeTextSecondaryColor'],\n          disabled: styles['ThemeTextDisabledColor'],\n          hint: styles['ThemeTextSecondaryColor'],\n        },\n      },\n      overrides: getMuiOverrides(\n        styles['ThemeTextContrastColor'],\n        styles['TabsBackgroundColor'],\n        styles['InputBorderBottomColor'],\n        styles['MosaicToolbarBackgroundColor'],\n        styles['ThemeTextDefaultColor']\n      ),\n    },\n  };\n}\n","// @flow\nimport * as React from 'react';\n\nexport type UnsavedChanges = {|\n  hasUnsavedChanges: boolean,\n  sealUnsavedChanges: () => void,\n  triggerUnsavedChanges: () => void,\n|};\n\nconst initialState: UnsavedChanges = {\n  hasUnsavedChanges: false,\n  sealUnsavedChanges: () => {},\n  triggerUnsavedChanges: () => {},\n};\n\nconst UnsavedChangesContext = React.createContext<UnsavedChanges>(initialState);\n\nexport default UnsavedChangesContext;\n\ntype State = {|\n  hasUnsavedChanges: boolean,\n|};\n\ntype Props = {|\n  children?: React.Node,\n|};\n\nexport class UnsavedChangesContextProvider extends React.Component<\n  Props,\n  State\n> {\n  state = { hasUnsavedChanges: false };\n  triggerUnsavedChanges = (): void => {\n    if (!this.state.hasUnsavedChanges)\n      this.setState({ hasUnsavedChanges: true });\n  };\n\n  sealUnsavedChanges = (): void => {\n    if (this.state.hasUnsavedChanges)\n      this.setState({ hasUnsavedChanges: false });\n  };\n\n  render() {\n    const unsavedChanges: UnsavedChanges = {\n      ...this.state,\n      triggerUnsavedChanges: this.triggerUnsavedChanges,\n      sealUnsavedChanges: this.sealUnsavedChanges,\n    };\n\n    return (\n      <UnsavedChangesContext.Provider value={unsavedChanges}>\n        {this.props.children}\n      </UnsavedChangesContext.Provider>\n    );\n  }\n}\n","import React from 'react';\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\nimport { SortableHandle } from 'react-sortable-hoc';\n\nconst styles = {\n  handle: {\n    cursor: 'move',\n  },\n  disabledHandle: {\n    opacity: 0.4,\n  },\n  handleColor: '#DDD',\n};\n\nconst DragHandle = SortableHandle(props => (\n  <span style={props.disabled ? styles.disabledHandle : styles.handle}>\n    <DragHandleIcon htmlColor={styles.handleColor} />\n  </span>\n));\nexport default DragHandle;\n","// @flow\nimport axios from 'axios';\nimport { GDevelopGameApi } from './ApiConfigs';\nimport { type Filters } from './Types.flow';\n\nexport type Game = {\n  id: string,\n  gameName: string,\n  authorName: string,\n  createdAt: number,\n};\n\nexport type ShowcasedGameLink = {\n  url: string,\n  type:\n    | 'app-store'\n    | 'play-store'\n    | 'play'\n    | 'download'\n    | 'download-win-mac-linux'\n    | 'learn-more',\n};\n\nexport type ShowcasedGame = {\n  title: string,\n  author: string,\n  description: string,\n  genres: Array<string>,\n  platforms: Array<string>,\n  /** Represents the union of genres+platforms. */\n  tags: Array<string>,\n  imageUrls: Array<string>,\n  links: Array<ShowcasedGameLink>,\n  isFeatured: boolean,\n  bannerUrl: string,\n  bannerBackgroundPosition: string,\n  thumbnailUrl: string,\n  editorDescription: string,\n};\n\nexport type AllShowcasedGames = {\n  showcasedGames: Array<ShowcasedGame>,\n  filters: Filters,\n};\n\nexport const listAllShowcasedGames = (): Promise<AllShowcasedGames> => {\n  return axios\n    .get(`${GDevelopGameApi.baseUrl}/showcased-game`)\n    .then(response => response.data)\n    .then(({ gamesShowcaseUrl, filtersUrl }) => {\n      if (!gamesShowcaseUrl || !filtersUrl) {\n        throw new Error('Unexpected response from the resource endpoint.');\n      }\n      return Promise.all([\n        axios.get(gamesShowcaseUrl).then(response => response.data),\n        axios.get(filtersUrl).then(response => response.data),\n      ]).then(([showcasedGames, filters]) => ({\n        showcasedGames,\n        filters,\n      }));\n    });\n};\n\nexport const registerGame = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  {\n    gameId,\n    gameName,\n    authorName,\n  }: {|\n    gameId: string,\n    gameName: string,\n    authorName: string,\n  |}\n): Promise<Game> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.post(\n        `${GDevelopGameApi.baseUrl}/game/${gameId}`,\n        {\n          gameName,\n          authorName,\n        },\n        {\n          params: {\n            userId,\n          },\n          headers: {\n            Authorization: authorizationHeader,\n          },\n        }\n      )\n    )\n    .then(response => response.data);\n};\nexport const updateGame = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  {\n    gameId,\n    gameName,\n    authorName,\n  }: {|\n    gameId: string,\n    gameName: string,\n    authorName: string,\n  |}\n): Promise<Game> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.patch(\n        `${GDevelopGameApi.baseUrl}/game/${gameId}`,\n        {\n          gameName,\n          authorName,\n        },\n        {\n          params: {\n            userId,\n          },\n          headers: {\n            Authorization: authorizationHeader,\n          },\n        }\n      )\n    )\n    .then(response => response.data);\n};\n\nexport const getGame = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  gameId: string\n): Promise<Game> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.get(`${GDevelopGameApi.baseUrl}/game/${gameId}`, {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n\nexport const deleteGame = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  gameId: string\n): Promise<Game> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.delete(`${GDevelopGameApi.baseUrl}/game/${gameId}`, {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n\nexport const getGames = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string\n): Promise<Array<Game>> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.get(`${GDevelopGameApi.baseUrl}/game`, {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n","// @flow\nimport axios from 'axios';\nimport { GDevelopExtensionApi } from './ApiConfigs';\nimport semverSatisfies from 'semver/functions/satisfies';\n\nexport type ExtensionShortHeader = {|\n  shortDescription: string,\n  extensionNamespace: string,\n  fullName: string,\n  name: string,\n  version: string,\n  gdevelopVersion?: string,\n  url: string,\n  headerUrl: string,\n  tags: Array<string>,\n  previewIconUrl: string,\n  eventsBasedBehaviorsCount: number,\n  eventsFunctionsCount: number,\n|};\nexport type ExtensionHeader = {|\n  ...ExtensionShortHeader,\n  description: string,\n  iconUrl: string,\n|};\n\nexport type SerializedExtension = {\n  ...ExtensionHeader,\n};\n\nexport type ExtensionsRegistry = {\n  version: string,\n  allTags: Array<string>,\n  extensionShortHeaders: Array<ExtensionShortHeader>,\n};\n\n/**\n * The ExtensionShortHeader returned by the API, with tags being a string\n * (which is kept in the API for compatibility with older GDevelop versions).\n */\ntype ExtensionShortHeaderWithTagsAsString = {|\n  ...ExtensionShortHeader,\n  tags: string,\n|};\n\n/**\n * The ExtensionHeader returned by the API, with tags being a string\n * (which is kept in the API for compatibility with older GDevelop versions).\n */\ntype ExtensionHeaderWithTagsAsString = {|\n  ...ExtensionHeader,\n  tags: string,\n|};\n\n/**\n * The SerializedExtension returned by the API, with tags being a string\n * (which is kept in the API for compatibility with older GDevelop versions).\n */\ntype SerializedExtensionWithTagsAsString = {\n  ...SerializedExtension,\n  tags: string,\n};\n\n/**\n * The ExtensionsRegistry returned by the API, with tags being a string\n * (which is kept in the API for compatibility with older GDevelop versions).\n */\ntype ExtensionsRegistryWithTagsAsString = {\n  ...ExtensionsRegistry,\n  extensionShortHeaders: Array<ExtensionShortHeaderWithTagsAsString>,\n};\n\n/**\n * Transform the tags from their old representation sent by the API (a string)\n * to their new representation (array of strings).\n */\nconst transformTagsAsStringToTagsAsArray = <T: { tags: string }>(\n  dataWithTags: T\n): $Exact<{ ...T, tags: Array<string> }> => {\n  // Handle potential future update of the API that would\n  // return tags as an array of strings.\n  if (Array.isArray(dataWithTags.tags)) {\n    // $FlowIgnore\n    return dataWithTags;\n  }\n\n  // $FlowIgnore - ignore issue with non exact types\n  return {\n    ...dataWithTags,\n    tags: dataWithTags.tags.split(',').map(tag => tag.trim().toLowerCase()),\n  };\n};\n\n/** Check if the IDE version, passed as argument, satisfiy the version required by the extension. */\nexport const isCompatibleWithExtension = (\n  ideVersion: string,\n  extensionShortHeader: ExtensionShortHeader\n) =>\n  extensionShortHeader.gdevelopVersion\n    ? semverSatisfies(ideVersion, extensionShortHeader.gdevelopVersion, {\n        includePrerelease: true,\n      })\n    : true;\n\n// Handle urls to extension header or file. If the URL is not absolute and HTTPS,\n// it is assumed to be relative to the registry base url.\nconst resolveExtensionUrl = (url: string): string => {\n  const trimmedUrl = url.trim();\n  if (trimmedUrl.indexOf('https://') === 0) {\n    return trimmedUrl;\n  }\n\n  return `${GDevelopExtensionApi.baseUrl}/${trimmedUrl}`;\n};\n\nexport const getExtensionsRegistry = (): Promise<ExtensionsRegistry> => {\n  return axios\n    .get(`${GDevelopExtensionApi.baseUrl}/extensions-registry.json`)\n    .then(response => {\n      const data: ExtensionsRegistryWithTagsAsString = response.data;\n\n      return {\n        ...data,\n        extensionShortHeaders: data.extensionShortHeaders.map(\n          transformTagsAsStringToTagsAsArray\n        ),\n      };\n    });\n};\n\nexport const getExtensionHeader = (\n  extensionShortHeader: ExtensionShortHeader\n): Promise<ExtensionHeader> => {\n  return axios\n    .get(resolveExtensionUrl(extensionShortHeader.headerUrl))\n    .then(response => {\n      const data: ExtensionHeaderWithTagsAsString = response.data;\n      const transformedData: ExtensionHeader = transformTagsAsStringToTagsAsArray(\n        data\n      );\n      return transformedData;\n    });\n};\n\nexport const getExtension = (\n  extensionHeader: ExtensionShortHeader | ExtensionHeader\n): Promise<SerializedExtension> => {\n  return axios.get(resolveExtensionUrl(extensionHeader.url)).then(response => {\n    const data: SerializedExtensionWithTagsAsString = response.data;\n    const transformedData: SerializedExtension = transformTagsAsStringToTagsAsArray(\n      data\n    );\n    return transformedData;\n  });\n};\n","// @flow\nimport * as React from 'react';\nimport { type ChosenCategory } from './FiltersChooser';\nimport shuffle from 'lodash/shuffle';\nimport SearchApi from 'js-worker-search';\n\n/**\n * Filter a list of items according to the chosen category\n * and the chosen filters.\n */\nexport const filterSearchItems = <SearchItem: { tags: Array<string> }>(\n  searchItems: ?Array<SearchItem>,\n  chosenCategory: ?ChosenCategory,\n  chosenFilters: Set<string>\n): ?Array<SearchItem> => {\n  if (!searchItems) return null;\n\n  const startTime = performance.now();\n  const filteredSearchItems = searchItems\n    .filter(({ tags }) => {\n      if (!chosenCategory) return true;\n\n      const hasChosenCategoryTag =\n        // If the chosen category is a container of tags, not a real tag, then\n        // skip checking if the item has it.\n        chosenCategory.node.isTagContainerOnly ||\n        tags.some(tag => tag === chosenCategory.node.name);\n      if (!hasChosenCategoryTag) return false; // Asset is not in the selected category\n      for (const parentNode of chosenCategory.parentNodes) {\n        if (parentNode.isTagContainerOnly) {\n          // The parent is a container of tags, not a real tag. No need\n          // to check if the item has it.\n          return true;\n        }\n\n        const hasParentCategoryTag = tags.some(tag => tag === parentNode.name);\n        if (!hasParentCategoryTag) return false; // Asset is not in the the parent(s) of the selected category\n      }\n\n      return true;\n    })\n    .filter(({ tags }) => {\n      return (\n        chosenFilters.size === 0 || tags.some(tag => chosenFilters.has(tag))\n      );\n    });\n\n  const totalTime = performance.now() - startTime;\n  console.info(\n    `Filtered items by category/filters in ${totalTime.toFixed(3)}ms.`\n  );\n  return filteredSearchItems;\n};\n\n/**\n * Allow to efficiently search and filters items.\n *\n * This instanciates a search API (in a web-worker, if available), index\n * the specified items, then returns the results of the search (according to the\n * search text and the chosen category/filters).\n *\n * Search is done asynchronously within a web-worker when available, so they\n * won't block the main thread.\n */\nexport const useSearchItem = <SearchItem: { tags: Array<string> }>(\n  searchItemsById: ?{ [string]: SearchItem },\n  getItemDescription: SearchItem => string,\n  searchText: string,\n  chosenCategory: ?ChosenCategory,\n  chosenFilters: Set<string>\n): ?Array<SearchItem> => {\n  const searchApiRef = React.useRef<?any>(null);\n  const [searchResults, setSearchResults] = React.useState<?Array<SearchItem>>(\n    null\n  );\n\n  // Keep in memory a list of all the items, shuffled for\n  // easing random discovery of items when no search is done.\n  const suffledSearchItems: ?Array<SearchItem> = React.useMemo(\n    () => {\n      if (!searchItemsById) return null;\n\n      return shuffle(\n        Object.keys(searchItemsById).map(id => searchItemsById[id])\n      );\n    },\n    [searchItemsById]\n  );\n\n  // Index items that have been loaded.\n  React.useEffect(\n    () => {\n      if (!searchItemsById) {\n        // Nothing to index - yet.\n        return;\n      }\n\n      const startTime = performance.now();\n      if (searchApiRef.current) {\n        searchApiRef.current.terminate();\n        searchApiRef.current = null;\n      }\n\n      try {\n        const newSearchApi = new SearchApi();\n        const allIds = Object.keys(searchItemsById);\n\n        allIds.forEach(id => {\n          const assetShortHeader = searchItemsById[id];\n          newSearchApi.indexDocument(id, getItemDescription(assetShortHeader));\n        });\n\n        const totalTime = performance.now() - startTime;\n        console.info(\n          `Indexed ${allIds.length} items in ${totalTime.toFixed(3)}ms.`\n        );\n        searchApiRef.current = newSearchApi;\n      } catch (error) {\n        console.error('Error while indexing items: ', error);\n      }\n    },\n    [searchItemsById, getItemDescription]\n  );\n\n  // Update the search results according to the items, search term\n  // chosen category and chosen filters.\n  const searchApi = searchApiRef.current;\n  React.useEffect(\n    () => {\n      let discardSearch = false;\n      if (!searchText) {\n        setSearchResults(\n          filterSearchItems(suffledSearchItems, chosenCategory, chosenFilters)\n        );\n      } else {\n        if (!searchItemsById || !searchApi) {\n          console.info(\n            'Search for items skipped because items are not ready - will be retried when ready'\n          );\n          return;\n        }\n\n        const startTime = performance.now();\n        searchApi\n          .search(searchText)\n          .then((partialSearchResultIds: Array<string>) => {\n            if (discardSearch) {\n              console.info(\n                'Discarding search results as a new search was launched.'\n              );\n              return;\n            }\n\n            const partialSearchResults = partialSearchResultIds\n              .map(id => searchItemsById[id])\n              .filter(Boolean);\n\n            const totalTime = performance.now() - startTime;\n            console.info(\n              `Found ${\n                partialSearchResults.length\n              } items in ${totalTime.toFixed(3)}ms.`\n            );\n\n            setSearchResults(\n              filterSearchItems(\n                partialSearchResults,\n                chosenCategory,\n                chosenFilters\n              )\n            );\n          });\n      }\n\n      return () => {\n        // Effect is being destroyed - meaning that a new search was launched.\n        // Cancel this one.\n        discardSearch = true;\n      };\n    },\n    [\n      suffledSearchItems,\n      searchItemsById,\n      searchText,\n      chosenCategory,\n      chosenFilters,\n      searchApi,\n    ]\n  );\n\n  return searchResults;\n};\n","// @flow\nimport axios from 'axios';\nimport { GDevelopAssetApi } from './ApiConfigs';\nimport semverSatisfies from 'semver/functions/satisfies';\nimport { type Filters } from './Types.flow';\n\nexport type SerializedParameterMetadata = {|\n  codeOnly: boolean,\n  defaultValue: string,\n  description: string,\n  longDescription: string,\n  name: string,\n  optional: boolean,\n  supplementaryInformation: string,\n  type: string, // See ParameterRenderingService for valid types.\n|};\n\nexport type AssetCustomization =\n  | {|\n      required: boolean,\n      extensionName: string,\n      extensionVersion: string,\n      behaviorName: string,\n      behaviorType: string,\n      properties: Array<SerializedParameterMetadata>,\n    |}\n  | {|\n      required: boolean,\n      events: any /*(serialized gdEventsList)*/,\n      parameters: Array<SerializedParameterMetadata>,\n      extensions: Array<{|\n        extensionName: string,\n        extensionVersion: string,\n      |}>,\n    |};\n\nexport type ObjectAsset = {|\n  object: any /*(serialized gdObject)*/,\n  resources: Array<any /*(serialized gdResource)*/>,\n  customization: Array<AssetCustomization>,\n|};\n\nexport type AssetShortHeader = {|\n  id: string,\n  name: string,\n  shortDescription: string,\n  previewImageUrls: Array<string>,\n  tags: Array<string>,\n|};\n\nexport type AssetHeader = {|\n  ...AssetShortHeader,\n  gdevelopVersion: string,\n  version: string,\n  description: string,\n|};\n\nexport type Asset = {|\n  ...AssetHeader,\n  authors: Array<string>,\n  license: string,\n  objectAssets: Array<ObjectAsset>,\n|};\n\nexport type AllAssets = {|\n  assetShortHeaders: Array<AssetShortHeader>,\n  filters: Filters,\n|};\n\nexport type Resource = {|\n  url: string,\n  name: string,\n  license: string,\n  type: string,\n  tags: Array<string>,\n|};\n\nexport type AllResources = {|\n  resources: Array<Resource>,\n  filters: Filters,\n|};\n\nexport type License = {|\n  name: string,\n  website: string,\n|};\n\nexport type Author = {|\n  name: string,\n  website: string,\n|};\n\n/** Check if the IDE version, passed as argument, satisfy the version required by the asset. */\nexport const isCompatibleWithAsset = (\n  ideVersion: string,\n  assetHeader: AssetHeader\n) =>\n  assetHeader.gdevelopVersion\n    ? semverSatisfies(ideVersion, assetHeader.gdevelopVersion, {\n        includePrerelease: true,\n      })\n    : true;\n\nexport const listAllAssets = (): Promise<AllAssets> => {\n  return axios\n    .get(`${GDevelopAssetApi.baseUrl}/asset`)\n    .then(response => response.data)\n    .then(({ assetShortHeadersUrl, filtersUrl }) => {\n      if (!assetShortHeadersUrl || !filtersUrl) {\n        throw new Error('Unexpected response from the resource endpoint.');\n      }\n      return Promise.all([\n        axios.get(assetShortHeadersUrl).then(response => response.data),\n        axios.get(filtersUrl).then(response => response.data),\n      ]).then(([assetShortHeaders, filters]) => ({\n        assetShortHeaders,\n        filters,\n      }));\n    });\n};\n\nexport const getAsset = (\n  assetShortHeader: AssetShortHeader\n): Promise<Asset> => {\n  return axios\n    .get(`${GDevelopAssetApi.baseUrl}/asset/${assetShortHeader.id}`)\n    .then(response => response.data)\n    .then(({ assetUrl }) => {\n      if (!assetUrl) {\n        throw new Error('Unexpected response from the asset endpoint.');\n      }\n\n      return axios.get(assetUrl);\n    })\n    .then(response => response.data);\n};\n\nexport const listAllResources = (): Promise<AllResources> => {\n  return axios\n    .get(`${GDevelopAssetApi.baseUrl}/resource`)\n    .then(response => response.data)\n    .then(({ resourcesUrl, filtersUrl }) => {\n      if (!resourcesUrl || !filtersUrl) {\n        throw new Error('Unexpected response from the resource endpoint.');\n      }\n      return Promise.all([\n        axios.get(resourcesUrl).then(response => response.data),\n        axios.get(filtersUrl).then(response => response.data),\n      ]).then(([resources, filters]) => ({\n        resources,\n        filters,\n      }));\n    });\n};\n\nexport const listAllAuthors = (): Promise<Array<Author>> => {\n  return axios\n    .get(`${GDevelopAssetApi.baseUrl}/author`)\n    .then(response => response.data)\n    .then(({ authorsUrl }) => {\n      if (!authorsUrl)\n        throw new Error('Unexpected response from author endpoint.');\n      return axios.get(authorsUrl);\n    })\n    .then(response => response.data);\n};\n\nexport const listAllLicenses = (): Promise<Array<License>> => {\n  return axios\n    .get(`${GDevelopAssetApi.baseUrl}/license`)\n    .then(response => response.data)\n    .then(({ licensesUrl }) => {\n      if (!licensesUrl)\n        throw new Error('Unexpected response from license endpoint.');\n      return axios.get(licensesUrl);\n    })\n    .then(response => response.data);\n};\n","// @flow\nimport * as React from 'react';\nimport CommandManager, { CommandManagerInterface } from './CommandManager';\nimport useRefInit from './UseRefInitHook';\n\nconst CommandsContext = React.createContext<CommandManagerInterface>(\n  new CommandManager()\n);\n\ntype Props = {\n  children: React.Node,\n};\n\nexport const CommandsContextProvider = (props: Props) => {\n  const commandManager = useRefInit<CommandManager>(() => new CommandManager());\n\n  return (\n    <CommandsContext.Provider value={commandManager}>\n      {props.children}\n    </CommandsContext.Provider>\n  );\n};\n\nexport default CommandsContext;\n","// @flow\n\nimport values from 'lodash/values';\n\nexport type InstructionsListContext = {|\n  isCondition: boolean,\n  instrsList: gdInstructionsList,\n|};\n\nexport type InstructionContext = {|\n  isCondition: boolean,\n  instrsList: gdInstructionsList,\n  instruction: gdInstruction,\n  indexInList: number,\n|};\n\nexport type ParameterContext = {|\n  isCondition: boolean,\n  instrsList: gdInstructionsList,\n  instruction: gdInstruction,\n  indexInList: number,\n  parameterIndex: number,\n  domEvent?: any,\n|};\n\nexport type EventContext = {|\n  eventsList: gdEventsList,\n  event: gdBaseEvent,\n  indexInList: number,\n|};\n\nexport type SelectionState = {\n  selectedInstructions: { [number]: InstructionContext },\n  selectedInstructionsLists: { [number]: InstructionsListContext },\n  selectedEvents: { [number]: EventContext },\n};\n\nexport const getInitialSelection = () => {\n  return {\n    selectedInstructions: {},\n    selectedEvents: {},\n    selectedInstructionsLists: {},\n  };\n};\n\nexport const getSelectedEvents = (selection: SelectionState): Array<Object> => {\n  return values(selection.selectedEvents).map(\n    (eventContext: EventContext) => eventContext.event\n  );\n};\n\nexport const getSelectedEventContexts = (\n  selection: SelectionState\n): Array<EventContext> => {\n  return values(selection.selectedEvents);\n};\n\nexport const getSelectedInstructions = (\n  selection: SelectionState\n): Array<gdInstruction> => {\n  return values(selection.selectedInstructions).map(\n    (instructionContext: InstructionContext) => instructionContext.instruction\n  );\n};\n\nexport const getSelectedInstructionsContexts = (\n  selection: SelectionState\n): Array<InstructionContext> => {\n  return values(selection.selectedInstructions);\n};\n\nexport const getSelectedInstructionsListsContexts = (\n  selection: SelectionState\n): Array<InstructionContext> => {\n  return values(selection.selectedInstructionsLists);\n};\n\nexport const isEventSelected = (\n  selection: SelectionState,\n  event: Object\n): boolean => {\n  return !!selection.selectedEvents[event.ptr];\n};\n\nexport const isInstructionSelected = (\n  selection: SelectionState,\n  instruction: gdInstruction\n): boolean => {\n  return !!selection.selectedInstructions[instruction.ptr];\n};\n\nexport const isInstructionsListSelected = (\n  selection: SelectionState,\n  instructionsList: gdInstructionsList\n): boolean => {\n  return !!selection.selectedInstructionsLists[instructionsList.ptr];\n};\n\nexport const hasEventSelected = (selection: SelectionState): boolean => {\n  return !!Object.keys(selection.selectedEvents).length;\n};\n\nexport const hasInstructionSelected = (selection: SelectionState): boolean => {\n  return !!Object.keys(selection.selectedInstructions).length;\n};\n\nexport const hasSelectedAtLeastOneCondition = (\n  selection: SelectionState\n): boolean => {\n  for (let instructionContext of getSelectedInstructionsContexts(selection)) {\n    if (instructionContext.isCondition) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const hasInstructionsListSelected = (\n  selection: SelectionState\n): boolean => {\n  return !!Object.keys(selection.selectedInstructionsLists).length;\n};\n\nexport const hasSomethingSelected = (selection: SelectionState): boolean => {\n  return (\n    hasInstructionSelected(selection) ||\n    hasInstructionsListSelected(selection) ||\n    hasEventSelected(selection)\n  );\n};\n\nexport const clearSelection = (): SelectionState => {\n  return getInitialSelection();\n};\n\nexport const selectEvent = (\n  selection: SelectionState,\n  eventContext: EventContext,\n  multiSelection: boolean = false\n): SelectionState => {\n  const event = eventContext.event;\n  if (isEventSelected(selection, event)) return selection;\n\n  const existingSelection = multiSelection ? selection : clearSelection();\n  return {\n    ...existingSelection,\n    selectedEvents: {\n      ...existingSelection.selectedEvents,\n      [event.ptr]: eventContext,\n    },\n  };\n};\n\nexport const selectInstruction = (\n  selection: SelectionState,\n  instructionContext: InstructionContext,\n  multiSelection: boolean = false\n): SelectionState => {\n  const instruction: gdInstruction = instructionContext.instruction;\n  if (isInstructionSelected(selection, instruction)) return selection;\n\n  const existingSelection = multiSelection ? selection : clearSelection();\n  return {\n    ...existingSelection,\n    selectedInstructions: {\n      ...existingSelection.selectedInstructions,\n      [instruction.ptr]: instructionContext,\n    },\n  };\n};\n\nexport const selectInstructionsList = (\n  selection: SelectionState,\n  instructionsListContext: InstructionsListContext,\n  multiSelection: boolean = false\n): SelectionState => {\n  const instructionsList: gdInstructionsList =\n    instructionsListContext.instrsList;\n  if (isInstructionsListSelected(selection, instructionsList)) return selection;\n\n  const existingSelection = multiSelection ? selection : clearSelection();\n  return {\n    ...existingSelection,\n    selectedInstructionsLists: {\n      ...existingSelection.selectedInstructionsLists,\n      [instructionsList.ptr]: instructionsListContext,\n    },\n  };\n};\n","// @flow\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport Popper from '@material-ui/core/Popper';\nimport muiZIndex from '@material-ui/core/styles/zIndex';\nimport Functions from '@material-ui/icons/Functions';\nimport RaisedButton from '../../../UI/RaisedButton';\nimport SemiControlledTextField from '../../../UI/SemiControlledTextField';\nimport { mapVector } from '../../../Utils/MapFor';\nimport ExpressionSelector from '../../InstructionEditor/InstructionOrExpressionSelector/ExpressionSelector';\nimport ExpressionParametersEditorDialog, {\n  type ParameterValues,\n} from './ExpressionParametersEditorDialog';\nimport { formatExpressionCall } from './FormatExpressionCall';\nimport { type EnumeratedExpressionMetadata } from '../../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js';\nimport { type ParameterFieldProps } from '../ParameterFieldCommons';\nimport BackgroundHighlighting, {\n  type Highlight,\n} from './BackgroundHighlighting';\nimport debounce from 'lodash/debounce';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Paper from '@material-ui/core/Paper';\nimport { TextFieldWithButtonLayout } from '../../../UI/Layout';\nimport {\n  type ExpressionAutocompletion,\n  insertAutocompletionInExpression,\n  getAutocompletionsFromDescriptions,\n} from '../../../ExpressionAutocompletion';\nimport {\n  type AutocompletionsState,\n  getAutocompletionsInitialState,\n  setNewAutocompletions,\n  handleAutocompletionsKeyDown,\n  getVisibleAutocompletions,\n  getRemainingCount,\n} from './ExpressionAutocompletionsHandler';\nimport ExpressionAutocompletionsDisplayer from './ExpressionAutocompletionsDisplayer';\nimport { ResponsiveWindowMeasurer } from '../../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport { shouldCloseOrCancel } from '../../../UI/KeyboardShortcuts/InteractionKeys';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'flex-start',\n  },\n  textFieldContainer: {\n    flex: 1,\n    minWidth: 300,\n  },\n  textFieldAndHightlightContainer: {\n    position: 'relative',\n  },\n  expressionSelectorPopoverContentSmall: {\n    display: 'flex',\n    maxHeight: 250,\n  },\n  expressionSelectorPopoverContent: {\n    display: 'flex',\n    maxHeight: 350,\n  },\n  input: {\n    fontFamily: '\"Lucida Console\", Monaco, monospace',\n    lineHeight: 1.4,\n  },\n  backgroundHighlightingWithFloatingLabel: {\n    marginTop: 22, //Properly align with the text field\n    paddingLeft: 12,\n    paddingRight: 12,\n  },\n  backgroundHighlightingInline: {\n    marginTop: 0, //Properly align with the text field\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  backgroundHighlightingInlineWithFloatingLabel: {\n    marginTop: 22, //Properly align with the text field\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n};\n\ntype State = {|\n  popoverOpen: boolean,\n  parametersDialogOpen: boolean,\n  selectedExpressionInfo: ?EnumeratedExpressionMetadata,\n  validatedValue: string,\n  errorText: ?string,\n  errorHighlights: Array<Highlight>,\n  autocompletions: AutocompletionsState,\n|};\n\ntype Props = {|\n  expressionType: 'number' | 'string',\n  renderExtraButton?: ({|\n    style: Object,\n  |}) => React.Node,\n  ...ParameterFieldProps,\n|};\n\nconst MAX_ERRORS_COUNT = 10;\n\nconst extractErrors = (\n  expressionNode: gdExpressionNode\n): {|\n  errorText: ?string,\n  errorHighlights: Array<Highlight>,\n|} => {\n  const expressionValidator = new gd.ExpressionValidator();\n  expressionNode.visit(expressionValidator);\n  const errors = expressionValidator.getErrors();\n\n  const errorHighlights: Array<Highlight> = mapVector(errors, error => ({\n    begin: error.getStartPosition(),\n    end: error.getEndPosition() + 1,\n    message: error.getMessage(),\n    type: 'error',\n  }));\n  const otherErrorsCount = Math.max(\n    0,\n    errorHighlights.length - MAX_ERRORS_COUNT\n  );\n  const hasMultipleErrors = errorHighlights.length > 1;\n\n  const filteredErrorHighlights =\n    otherErrorsCount > 0\n      ? errorHighlights.slice(0, MAX_ERRORS_COUNT)\n      : errorHighlights;\n\n  const errorText = filteredErrorHighlights\n    .map(\n      (highlight, i) =>\n        (hasMultipleErrors ? `[${i + 1}] ` : '') + highlight.message\n    )\n    .join(' ');\n\n  expressionValidator.delete();\n\n  return { errorText, errorHighlights };\n};\n\nexport default class ExpressionField extends React.Component<Props, State> {\n  _field: ?SemiControlledTextField = null;\n  _fieldElement: ?Element = null;\n  _inputElement: ?HTMLInputElement = null;\n\n  state = {\n    popoverOpen: false,\n    parametersDialogOpen: false,\n    selectedExpressionInfo: null,\n\n    validatedValue: this.props.value,\n    errorText: null,\n    errorHighlights: [],\n    autocompletions: getAutocompletionsInitialState(),\n  };\n\n  componentDidMount() {\n    if (this._field) {\n      const node = ReactDOM.findDOMNode(this._field);\n      if (node instanceof Element) {\n        this._fieldElement = node;\n      }\n      this._inputElement = this._field ? this._field.getInputNode() : null;\n    }\n  }\n\n  focus = () => {\n    if (this._field) {\n      this._field.focus();\n      this._enqueueValidation();\n    }\n  };\n\n  _openExpressionPopover = () => {\n    this.setState({\n      popoverOpen: true,\n    });\n  };\n\n  _handleFocus = (event: { preventDefault: () => void }) => {\n    // This prevents ghost click.\n    event.preventDefault();\n  };\n\n  _handleRequestClose = () => {\n    this.setState({\n      popoverOpen: false,\n    });\n  };\n\n  _handleChange = (value: string) => {\n    this.setState(\n      {\n        validatedValue: value,\n      },\n      () => this._enqueueValidation()\n    );\n  };\n\n  _handleBlur = (event: { currentTarget: { value: string } }) => {\n    const value = event.currentTarget.value;\n    if (this.props.onChange) this.props.onChange(value);\n    this.setState({ validatedValue: value }, () => {\n      this._enqueueValidation.cancel();\n      this._doValidation();\n      this.setState({\n        autocompletions: getAutocompletionsInitialState(),\n      });\n    });\n  };\n\n  _handleExpressionChosen = (expressionInfo: EnumeratedExpressionMetadata) => {\n    this.setState({\n      popoverOpen: false,\n      parametersDialogOpen: true,\n      selectedExpressionInfo: expressionInfo,\n    });\n  };\n\n  insertExpression = (\n    expressionInfo: EnumeratedExpressionMetadata,\n    parameterValues: ParameterValues\n  ) => {\n    if (!this._inputElement) return;\n    const cursorPosition = this._inputElement.selectionStart;\n\n    const functionCall = formatExpressionCall(expressionInfo, parameterValues);\n\n    // Generate the expression with the function call\n    const { value } = this.props;\n    const newValue =\n      value.substr(0, cursorPosition) +\n      functionCall +\n      value.substr(cursorPosition);\n\n    // Apply changes\n    if (this.props.onChange) this.props.onChange(newValue);\n    this.setState(\n      {\n        validatedValue: newValue,\n      },\n      () => this._enqueueValidation()\n    );\n\n    // Focus again and select what was just added.\n    setTimeout(() => {\n      if (this._field) this._field.focus();\n\n      setTimeout(() => {\n        if (this._inputElement) {\n          this._inputElement.setSelectionRange(\n            cursorPosition,\n            cursorPosition + functionCall.length\n          );\n        }\n      }, 5);\n    }, 5);\n  };\n\n  _insertAutocompletion = (\n    expressionAutocompletion: ExpressionAutocompletion\n  ) => {\n    // If the completion is exact, it's not a completion but just\n    // shown for informing the user.\n    if (expressionAutocompletion.isExact) return;\n\n    const caretLocation = this._inputElement\n      ? this._inputElement.selectionStart\n      : 0;\n    const expression = this.state.validatedValue;\n\n    const {\n      expression: newExpression,\n      caretLocation: newCaretLocation,\n    } = insertAutocompletionInExpression(\n      { expression, caretLocation },\n      {\n        completion: expressionAutocompletion.completion,\n        addParenthesis: expressionAutocompletion.addParenthesis,\n        addDot: expressionAutocompletion.addDot,\n        addNamespaceSeparator: expressionAutocompletion.addNamespaceSeparator,\n        addClosingParenthesis: expressionAutocompletion.addClosingParenthesis,\n      }\n    );\n\n    if (this._field) {\n      this._field.forceSetValue(newExpression);\n    }\n    if (this.props.onChange) this.props.onChange(newExpression);\n    this.setState(\n      {\n        validatedValue: newExpression,\n      },\n      () => {\n        this._enqueueValidation();\n        if (this._field) {\n          this._field.forceSetSelection(newCaretLocation, newCaretLocation);\n        }\n      }\n    );\n  };\n\n  _enqueueValidation = debounce(() => {\n    this._doValidation();\n  }, 250);\n\n  _doValidation = () => {\n    const {\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      expressionType,\n      scope,\n    } = this.props;\n    if (!project) return null;\n\n    // Parsing can be time consuming (~1ms for simple expression,\n    // a few milliseconds for complex ones).\n\n    const parser = new gd.ExpressionParser2(\n      gd.JsPlatform.get(),\n      globalObjectsContainer,\n      objectsContainer\n    );\n    const expression = this.state.validatedValue;\n    const expressionNode = parser\n      .parseExpression(expressionType, expression)\n      .get();\n\n    const { errorText, errorHighlights } = extractErrors(expressionNode);\n\n    const cursorPosition = this._inputElement\n      ? this._inputElement.selectionStart\n      : 0;\n    const completionDescriptions = gd.ExpressionCompletionFinder.getCompletionDescriptionsFor(\n      expressionNode,\n      cursorPosition - 1\n    );\n    const newAutocompletions = getAutocompletionsFromDescriptions(\n      {\n        gd,\n        globalObjectsContainer,\n        objectsContainer,\n        scope,\n      },\n      completionDescriptions\n    );\n\n    parser.delete();\n\n    this.setState(state => ({\n      errorText,\n      errorHighlights,\n      autocompletions: setNewAutocompletions(\n        state.autocompletions,\n        newAutocompletions\n      ),\n    }));\n  };\n\n  render() {\n    const {\n      value,\n      expressionType,\n      parameterMetadata,\n      project,\n      scope,\n      globalObjectsContainer,\n      objectsContainer,\n      parameterRenderingService,\n    } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : this.props.isInline\n      ? undefined\n      : '-'; // We're using multiline TextField, which does not support having no label.\n    const longDescription = parameterMetadata\n      ? parameterMetadata.getLongDescription()\n      : undefined;\n\n    const popoverStyle = {\n      width: this._fieldElement ? this._fieldElement.clientWidth : 'auto',\n      marginLeft: -5, // Remove the offset that the Popper has for some reason with disablePortal={true}\n      // Ensure the popper is above everything (modal, dialog, snackbar, tooltips, etc).\n      // There will be only one ExpressionSelector opened at a time, so it's fair to put the\n      // highest z index. If this is breaking, check the z-index of material-ui.\n      zIndex: muiZIndex.tooltip + 100,\n    };\n\n    const backgroundHighlightingStyle = this.props.isInline\n      ? // An inline GenericExpressionField is shown with a TextField\n        // with variant \"standard\", and no margins. The label is shown\n        // only if provided (description), so we need to adapt the margins\n        // of the background\n        description\n        ? styles.backgroundHighlightingInlineWithFloatingLabel\n        : styles.backgroundHighlightingInline\n      : // A non-inline GenericExpressionField is shown with a TextField\n        // with variant \"filled\". As we're using a *multiline* field, it\n        // always put space for the label, even if not provided.\n        styles.backgroundHighlightingWithFloatingLabel;\n\n    return (\n      <React.Fragment>\n        <TextFieldWithButtonLayout\n          margin={this.props.isInline ? 'none' : 'dense'}\n          renderTextField={() => (\n            <div style={styles.textFieldContainer}>\n              <div style={styles.textFieldAndHightlightContainer}>\n                <BackgroundHighlighting\n                  value={this.state.validatedValue}\n                  style={{ ...styles.input, ...backgroundHighlightingStyle }}\n                  highlights={this.state.errorHighlights}\n                />\n                <SemiControlledTextField\n                  margin={this.props.isInline ? 'none' : 'dense'}\n                  value={value}\n                  floatingLabelText={description}\n                  helperMarkdownText={longDescription}\n                  hintText={expressionType === 'string' ? '\"\"' : undefined}\n                  inputStyle={styles.input}\n                  onChange={this._handleChange}\n                  onBlur={this._handleBlur}\n                  ref={field => (this._field = field)}\n                  onFocus={this._handleFocus}\n                  errorText={this.state.errorText}\n                  onClick={() => this._enqueueValidation()}\n                  onKeyDown={event => {\n                    const autocompletions = handleAutocompletionsKeyDown(\n                      this.state.autocompletions,\n                      {\n                        event,\n                        onUpdateAutocompletions: this._enqueueValidation,\n                        onInsertAutocompletion: this._insertAutocompletion,\n                      }\n                    );\n                    this.setState({ autocompletions });\n\n                    // If the user pressed the key to close, there is a chance\n                    // that this will trigger the closing of the dialog/popover\n                    // containing the expression field. Apply the changes now\n                    // as otherwise the onBlur handler has a risk not to be called.\n                    if (shouldCloseOrCancel(event)) {\n                      const value = event.currentTarget.value;\n                      if (this.props.onChange) this.props.onChange(value);\n                    }\n                  }}\n                  multiline\n                  fullWidth\n                />\n              </div>\n              {this._inputElement && this.state.popoverOpen && (\n                <ClickAwayListener onClickAway={this._handleRequestClose}>\n                  <Popper\n                    style={popoverStyle}\n                    open={this.state.popoverOpen}\n                    anchorEl={this._inputElement}\n                    placement=\"bottom\"\n                    disablePortal={\n                      true /* Can't use portals as this would put the Popper outside of the Modal, which is keeping the focus in the modal (so the search bar and keyboard browsing won't not work) */\n                    }\n                  >\n                    <ResponsiveWindowMeasurer>\n                      {screenSize => (\n                        <Paper\n                          style={\n                            screenSize === 'small'\n                              ? styles.expressionSelectorPopoverContentSmall\n                              : styles.expressionSelectorPopoverContent\n                          }\n                        >\n                          <ExpressionSelector\n                            selectedType=\"\"\n                            onChoose={(type, expression) => {\n                              this._handleExpressionChosen(expression);\n                            }}\n                            expressionType={expressionType}\n                            focusOnMount\n                            scope={scope}\n                          />\n                        </Paper>\n                      )}\n                    </ResponsiveWindowMeasurer>\n                  </Popper>\n                </ClickAwayListener>\n              )}\n              {this._inputElement &&\n                !this.state.popoverOpen &&\n                parameterRenderingService && (\n                  <ExpressionAutocompletionsDisplayer\n                    project={project}\n                    anchorEl={this._inputElement}\n                    expressionAutocompletions={getVisibleAutocompletions(\n                      this.state.autocompletions\n                    )}\n                    remainingCount={getRemainingCount(\n                      this.state.autocompletions\n                    )}\n                    selectedCompletionIndex={\n                      this.state.autocompletions.selectedCompletionIndex\n                    }\n                    onChoose={expressionAutocompletion => {\n                      this._insertAutocompletion(expressionAutocompletion);\n\n                      setTimeout(\n                        this.focus,\n                        50 /* Give back the focus to the field after a completion is inserted */\n                      );\n                    }}\n                    parameterRenderingService={parameterRenderingService}\n                  />\n                )}\n            </div>\n          )}\n          renderButton={style => (\n            <React.Fragment>\n              {!this.props.isInline &&\n                this.props.renderExtraButton &&\n                this.props.renderExtraButton({\n                  style,\n                })}\n              {!this.props.isInline && (\n                <RaisedButton\n                  icon={<Functions />}\n                  label={\n                    expressionType === 'string'\n                      ? '\"ABC\"'\n                      : expressionType === 'number'\n                      ? '123'\n                      : ''\n                  }\n                  primary\n                  style={style}\n                  onClick={this._openExpressionPopover}\n                />\n              )}\n            </React.Fragment>\n          )}\n        />\n\n        {this.state.parametersDialogOpen && this.state.selectedExpressionInfo && (\n          <ExpressionParametersEditorDialog\n            project={project}\n            scope={scope}\n            globalObjectsContainer={globalObjectsContainer}\n            objectsContainer={objectsContainer}\n            expressionMetadata={this.state.selectedExpressionInfo.metadata}\n            onDone={parameterValues => {\n              if (!this.state.selectedExpressionInfo) return;\n\n              this.insertExpression(\n                this.state.selectedExpressionInfo,\n                parameterValues\n              );\n              this.setState({\n                parametersDialogOpen: false,\n                selectedExpressionInfo: null,\n              });\n            }}\n            onRequestClose={() => {\n              this.setState({\n                parametersDialogOpen: false,\n                selectedExpressionInfo: null,\n              });\n            }}\n            parameterRenderingService={parameterRenderingService}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { List, type ListItemRefType } from '../../../UI/List';\nimport SearchBar, { useShouldAutofocusSearchbar } from '../../../UI/SearchBar';\nimport { type EnumeratedInstructionOrExpressionMetadata } from '../../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js';\nimport {\n  type TreeNode,\n  findInTree,\n} from '../../../InstructionOrExpression/CreateTree';\nimport { filterInstructionsList } from '../../../InstructionOrExpression/EnumerateInstructions';\nimport ThemeConsumer from '../../../UI/Theme/ThemeConsumer';\nimport { renderInstructionOrExpressionListItem } from '../SelectorListItems/SelectorInstructionOrExpressionListItem';\nimport { renderInstructionOrExpressionTree } from '../SelectorListItems/SelectorInstructionsTreeListItem';\nimport EmptyMessage from '../../../UI/EmptyMessage';\nimport ScrollView, { type ScrollViewInterface } from '../../../UI/ScrollView';\nimport { Line } from '../../../UI/Grid';\nimport { getInstructionListItemValue } from '../SelectorListItems/Keys';\n\nconst styles = {\n  searchBar: {\n    backgroundColor: 'transparent',\n    flexShrink: 0,\n    zIndex: 1, // Put the SearchBar in front of the list, to display the shadow\n  },\n};\n\ntype Props<T> = {|\n  focusOnMount?: boolean,\n  instructionsInfo: Array<T>,\n  instructionsInfoTree: TreeNode<T>,\n  selectedType: string,\n  onChoose: (type: string, T) => void,\n  iconSize: number,\n  useSubheaders?: boolean,\n  searchPlaceholderObjectName?: ?string,\n  searchPlaceholderIsCondition?: ?boolean,\n  helpPagePath?: ?string,\n  style?: Object,\n|};\ntype State<T> = {|\n  searchText: string,\n  searchResults: Array<T>,\n|};\n\nexport default class InstructionOrExpressionSelector<\n  T: EnumeratedInstructionOrExpressionMetadata\n> extends React.PureComponent<Props<T>, State<T>> {\n  state: State<T> = {\n    searchText: '',\n    searchResults: [],\n  };\n  _searchBar: ?SearchBar;\n  _scrollView = React.createRef<ScrollViewInterface>();\n  _selectedItem = React.createRef<ListItemRefType>();\n\n  initialInstructionTypePath = findInTree(\n    this.props.instructionsInfoTree,\n    this.props.selectedType\n  );\n\n  componentDidMount() {\n    if (\n      this.props.focusOnMount &&\n      useShouldAutofocusSearchbar() &&\n      this._searchBar\n    ) {\n      this._searchBar.focus();\n    }\n    if (this._selectedItem.current && this._scrollView.current) {\n      this._scrollView.current.scrollTo(this._selectedItem.current);\n    }\n  }\n\n  focus = () => {\n    if (this._searchBar) this._searchBar.focus();\n  };\n\n  render() {\n    const {\n      selectedType,\n      iconSize,\n      instructionsInfoTree,\n      onChoose,\n      searchPlaceholderObjectName,\n      searchPlaceholderIsCondition,\n      useSubheaders,\n      helpPagePath,\n      style,\n    } = this.props;\n    const { searchText } = this.state;\n    const displayedInstructionsList: Array<T> = searchText\n      ? filterInstructionsList(this.props.instructionsInfo, { searchText })\n      : [];\n    const hasResults = !searchText || !!displayedInstructionsList.length;\n\n    const onSubmitSearch = () => {\n      if (!displayedInstructionsList.length) return;\n\n      onChoose(displayedInstructionsList[0].type, displayedInstructionsList[0]);\n    };\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <div\n            style={{\n              backgroundColor: muiTheme.list.itemsBackgroundColor,\n              ...style,\n            }}\n          >\n            <SearchBar\n              value={searchText}\n              onChange={searchText =>\n                this.setState({\n                  searchText,\n                })\n              }\n              onRequestSearch={onSubmitSearch}\n              style={styles.searchBar}\n              placeholder={\n                searchPlaceholderObjectName\n                  ? searchPlaceholderIsCondition\n                    ? t`Search ${searchPlaceholderObjectName} conditions`\n                    : t`Search ${searchPlaceholderObjectName} actions`\n                  : undefined\n              }\n              helpPagePath={helpPagePath}\n              ref={searchBar => (this._searchBar = searchBar)}\n            />\n            <ScrollView\n              ref={\n                // $FlowFixMe - improper typing of ScrollView?\n                this._scrollView\n              }\n            >\n              {hasResults && (\n                <List>\n                  {searchText\n                    ? displayedInstructionsList.map(\n                        enumeratedInstructionOrExpressionMetadata =>\n                          renderInstructionOrExpressionListItem({\n                            instructionOrExpressionMetadata: enumeratedInstructionOrExpressionMetadata,\n                            iconSize: iconSize,\n                            onClick: () =>\n                              onChoose(\n                                enumeratedInstructionOrExpressionMetadata.type,\n                                enumeratedInstructionOrExpressionMetadata\n                              ),\n                            selectedValue: getInstructionListItemValue(\n                              selectedType\n                            ),\n                          })\n                      )\n                    : renderInstructionOrExpressionTree({\n                        instructionTreeNode: instructionsInfoTree,\n                        iconSize,\n                        onChoose,\n                        useSubheaders,\n                        selectedValue: getInstructionListItemValue(\n                          selectedType\n                        ),\n                        initiallyOpenedPath: this.initialInstructionTypePath,\n                        selectedItemRef: this._selectedItem,\n                      })}\n                </List>\n              )}\n              {!hasResults && (\n                <Line>\n                  <EmptyMessage>\n                    <Trans>\n                      Nothing corresponding to your search. Try browsing the\n                      list instead.\n                    </Trans>\n                  </EmptyMessage>\n                </Line>\n              )}\n            </ScrollView>\n          </div>\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n","//@flow\nimport { type EventsScope } from './EventsScope.flow';\nconst gd: libGDevelop = global.gd;\n\nexport type InstructionOrExpressionScope = {|\n  objectMetadata?: ?gdObjectMetadata,\n  behaviorMetadata?: ?gdBehaviorMetadata,\n|};\n\nexport type EnumeratedInstructionMetadata = {|\n  type: string,\n  displayedName: string,\n  fullGroupName: string,\n  iconFilename: string,\n  metadata: gdInstructionMetadata,\n  scope: InstructionOrExpressionScope,\n  isPrivate: boolean,\n|};\n\nexport type EnumeratedExpressionMetadata = {|\n  type: string,\n  displayedName: string,\n  fullGroupName: string,\n  iconFilename: string,\n  metadata: gdExpressionMetadata,\n  scope: InstructionOrExpressionScope,\n  isPrivate: boolean,\n  name: string,\n  parameters: Array<gdParameterMetadata>,\n|};\n\n// An object representing InstructionMetadata or ExpressionMetadata.\n// Allow to use most information without paying the cost to call the\n// InstructionMetadata/ExpressionMetadata methods. In theory,\n// this type and objects are redundant with InstructionMetadata and ExpressionMetadata.\nexport type EnumeratedInstructionOrExpressionMetadata =\n  | EnumeratedInstructionMetadata\n  | EnumeratedExpressionMetadata;\n\nexport const filterEnumeratedInstructionOrExpressionMetadataByScope = <\n  +T: EnumeratedInstructionOrExpressionMetadata\n>(\n  list: Array<T>,\n  scope: EventsScope\n): Array<T> => {\n  // This is copied from gd::WholeProjectRefactorer (see GetBehaviorFullType)\n  // Could be factored into a single C++ function in gd::PlatformExtension?\n  const separator = gd.PlatformExtension.getNamespaceSeparator();\n  const getBehaviorFullType = (extensionName: string, behaviorName: string) => {\n    return extensionName + separator + behaviorName;\n  };\n\n  return list.filter(enumeratedInstructionOrExpressionMetadata => {\n    if (!enumeratedInstructionOrExpressionMetadata.isPrivate) return true;\n\n    const {\n      behaviorMetadata,\n    } = enumeratedInstructionOrExpressionMetadata.scope;\n    const { eventsBasedBehavior, eventsFunctionsExtension } = scope;\n\n    if (\n      behaviorMetadata &&\n      eventsBasedBehavior &&\n      eventsFunctionsExtension &&\n      getBehaviorFullType(\n        eventsFunctionsExtension.getName(),\n        eventsBasedBehavior.getName()\n      ) === behaviorMetadata.getName()\n    ) {\n      return true;\n    }\n\n    return false;\n  });\n};\n","// @flow\n\nexport default function getObjectByName(\n  project: gdProject,\n  layout?: ?gdLayout,\n  associatedObjectName: string\n): ?gdObject {\n  let associatedObject = null;\n  if (layout && layout.hasObjectNamed(associatedObjectName))\n    associatedObject = layout.getObject(associatedObjectName);\n  else if (project.hasObjectNamed(associatedObjectName))\n    associatedObject = project.getObject(associatedObjectName);\n  return associatedObject;\n}\n","// @flow\nimport { I18n } from '@lingui/react';\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport AlertMessage from '../UI/AlertMessage';\nimport Window from '../Utils/Window';\nimport RaisedButton from '../UI/RaisedButton';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport { type TutorialHint } from '.';\n\ntype Props = {|\n  tutorialHint: TutorialHint,\n|};\n\n/**\n * Show a link to a tutorial that can be permanently hidden. Hidden tutorials\n * will be stored in preferences.\n */\nconst DismissableTutorialMessage = ({ tutorialHint }: Props) => {\n  const preferences = React.useContext(PreferencesContext);\n  const { values, showTutorialHint } = preferences;\n\n  if (values.hiddenTutorialHints[tutorialHint.identifier]) return null;\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <AlertMessage\n          kind={'info'}\n          children={i18n._(tutorialHint.message)}\n          renderLeftIcon={() => (\n            <img\n              alt=\"\"\n              style={{\n                maxWidth: 128,\n                maxHeight: 128,\n              }}\n              src={tutorialHint.iconSrc}\n            />\n          )}\n          renderRightButton={() => (\n            <RaisedButton\n              icon={\n                tutorialHint.kind === 'video-tutorial' ? (\n                  <YouTubeIcon />\n                ) : (\n                  <MenuBookIcon />\n                )\n              }\n              label={\n                tutorialHint.kind === 'video-tutorial' ? (\n                  <Trans>Watch the tutorial</Trans>\n                ) : (\n                  <Trans>Read the tutorial</Trans>\n                )\n              }\n              onClick={() => {\n                Window.openExternalURL(tutorialHint.link);\n              }}\n            />\n          )}\n          onHide={() => {\n            showTutorialHint(tutorialHint.identifier, false);\n          }}\n        />\n      )}\n    </I18n>\n  );\n};\n\nexport default DismissableTutorialMessage;\n","// @flow\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\nimport { mapVector } from '../Utils/MapFor';\nimport {\n  enumerateNamedPropertyDescriptorsList,\n  toGdPropertyDescriptor,\n} from './EnumerateProperties';\nconst gd: libGDevelop = global.gd;\n\n// This file contains the logic to declare extension metadata from\n// events functions or events based behaviors.\n// These are basically adapters from EventsFunctionsExtension, and children, to a\n// real extension declaration (like in `JsExtension.js` or `Extension.cpp` files).\n\n/**\n * Declare an extension from an events based extension.\n */\nexport const declareExtension = (\n  extension: gdPlatformExtension,\n  eventsFunctionsExtension: gdEventsFunctionsExtension\n) => {\n  extension\n    .setExtensionInformation(\n      eventsFunctionsExtension.getName(),\n      eventsFunctionsExtension.getFullName() ||\n        eventsFunctionsExtension.getName(),\n      eventsFunctionsExtension.getDescription(),\n      eventsFunctionsExtension.getAuthor(),\n      ''\n    )\n    .setExtensionHelpPath(eventsFunctionsExtension.getHelpPath())\n    .setIconUrl(eventsFunctionsExtension.getIconUrl());\n};\n\nconst getExtensionIconUrl = (extension: gdPlatformExtension) => {\n  return extension.getIconUrl() || 'res/function24.png';\n};\n\n/**\n * Declare the behavior for the given\n * events based behavior.\n */\nexport const declareBehaviorMetadata = (\n  extension: gdPlatformExtension,\n  eventsBasedBehavior: gdEventsBasedBehavior\n): gdBehaviorMetadata => {\n  const generatedBehavior = new gd.BehaviorJsImplementation();\n\n  // We enumerate the properties of the behavior from a list of gdNamedPropertyDescriptor\n  // to an array of JavaScript objects. This is important to ensure that the functions\n  // below are not keeping any reference to eventsBasedBehavior.\n  //\n  // We could in theory keep a reference to eventsBasedBehavior, and avoid using\n  // `enumerateNamedPropertyDescriptorsList` and `toGdPropertyDescriptor`.\n  // This should be safe as if eventsBasedBehavior is deleted (i.e: the behavior\n  // is removed from its extension), then the extension will be re-generated.\n  //\n  // In practice, we don't want to risk keeping this references, because if at some point\n  // we delete the eventsBasedBehavior and forget to remove the extension, then the\n  // extension will use a deleted object and crash the app. Instead, we convert the\n  // properties to an array of JavaScript objects, so that we're guaranteed that the\n  // lifetime of these properties is the same as the lifetime of these functions (i.e:\n  // we use the JS garbage collector).\n  const enumeratedProperties = enumerateNamedPropertyDescriptorsList(\n    eventsBasedBehavior.getPropertyDescriptors()\n  );\n\n  // $FlowExpectedError - we're creating a behavior\n  generatedBehavior.updateProperty = function(\n    behaviorContent: gdSerializerElement,\n    propertyName: string,\n    newValue: string\n  ) {\n    const enumeratedProperty = enumeratedProperties.find(\n      enumeratedProperty => enumeratedProperty.name === propertyName\n    );\n    if (!enumeratedProperty) return false;\n\n    const element = behaviorContent.addChild(propertyName);\n    const propertyType: string = enumeratedProperty.type;\n\n    if (propertyType === 'String' || propertyType === 'Choice') {\n      element.setStringValue(newValue);\n    } else if (propertyType === 'Number') {\n      element.setDoubleValue(parseFloat(newValue));\n    } else if (propertyType === 'Boolean') {\n      element.setBoolValue(newValue === '1');\n    }\n\n    return true;\n  };\n\n  // $FlowExpectedError - we're creating a behavior\n  generatedBehavior.getProperties = function(behaviorContent) {\n    var behaviorProperties = new gd.MapStringPropertyDescriptor();\n\n    enumeratedProperties.forEach(enumeratedProperty => {\n      const propertyName = enumeratedProperty.name;\n      const propertyType = enumeratedProperty.type;\n      const newProperty = toGdPropertyDescriptor(\n        enumeratedProperty,\n        behaviorProperties.getOrCreate(propertyName)\n      );\n\n      if (behaviorContent.hasChild(propertyName)) {\n        if (propertyType === 'String' || propertyType === 'Choice') {\n          newProperty.setValue(\n            behaviorContent.getChild(propertyName).getStringValue()\n          );\n        } else if (propertyType === 'Number') {\n          newProperty.setValue(\n            '' + behaviorContent.getChild(propertyName).getDoubleValue()\n          );\n        } else if (propertyType === 'Boolean') {\n          newProperty.setValue(\n            behaviorContent.getChild(propertyName).getBoolValue()\n              ? 'true'\n              : 'false'\n          );\n        }\n      } else {\n        // No value was serialized for this property. `newProperty`\n        // will have the default value coming from `enumeratedProperty`.\n      }\n    });\n\n    return behaviorProperties;\n  };\n\n  // $FlowExpectedError - we're creating a behavior\n  generatedBehavior.initializeContent = function(behaviorContent) {\n    enumeratedProperties.forEach(enumeratedProperty => {\n      const element = behaviorContent.addChild(enumeratedProperty.name);\n      const propertyType: string = enumeratedProperty.type;\n\n      if (propertyType === 'String' || propertyType === 'Choice') {\n        element.setStringValue(enumeratedProperty.value);\n      } else if (propertyType === 'Number') {\n        element.setDoubleValue(parseFloat(enumeratedProperty.value) || 0);\n      } else if (propertyType === 'Boolean') {\n        element.setBoolValue(enumeratedProperty.value === 'true');\n      }\n    });\n  };\n\n  return extension\n    .addBehavior(\n      eventsBasedBehavior.getName(),\n      eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n      eventsBasedBehavior.getName(), // Default name is the name\n      eventsBasedBehavior.getDescription(),\n      '',\n      getExtensionIconUrl(extension),\n      eventsBasedBehavior.getName(), // Class name is the name, actually unused\n      generatedBehavior,\n      new gd.BehaviorsSharedData()\n    )\n    .setObjectType(eventsBasedBehavior.getObjectType());\n};\n\n/**\n * Check if the name of the function is the name of a lifecycle function (for events-based behaviors),\n * that will be called automatically by the game engine.\n */\nexport const isBehaviorLifecycleEventsFunction = (functionName: string) => {\n  return (\n    [\n      'onCreated',\n      'onActivate',\n      'onDeActivate',\n      'doStepPreEvents',\n      'doStepPostEvents',\n      'onDestroy',\n      // Compatibility with GD <= 5.0 beta 75\n      'onOwnerRemovedFromScene',\n      // end of compatibility code\n    ].indexOf(functionName) !== -1\n  );\n};\n\n/**\n * Check if the name of the function is the name of a lifecycle function (for events-based extensions),\n * that will be called automatically by the game engine.\n */\nexport const isExtensionLifecycleEventsFunction = (functionName: string) => {\n  return gd.EventsFunctionsExtension.isExtensionLifecycleEventsFunction(\n    functionName\n  );\n};\n\n/**\n * Declare the instruction (action/condition) or expression for the given\n * (free) events function.\n */\nexport const declareInstructionOrExpressionMetadata = (\n  extension: gdPlatformExtension,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  eventsFunction: gdEventsFunction\n): gdInstructionMetadata | gdExpressionMetadata => {\n  const functionType = eventsFunction.getFunctionType();\n  if (functionType === gd.EventsFunction.Expression) {\n    return extension.addExpression(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsFunctionsExtension.getFullName() ||\n        eventsFunctionsExtension.getName(),\n      getExtensionIconUrl(extension)\n    );\n  } else if (functionType === gd.EventsFunction.StringExpression) {\n    return extension.addStrExpression(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsFunctionsExtension.getFullName() ||\n        eventsFunctionsExtension.getName(),\n      getExtensionIconUrl(extension)\n    );\n  } else if (functionType === gd.EventsFunction.Condition) {\n    return extension.addCondition(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsFunction.getSentence(),\n      eventsFunctionsExtension.getFullName() ||\n        eventsFunctionsExtension.getName(),\n      getExtensionIconUrl(extension),\n      getExtensionIconUrl(extension)\n    );\n  } else {\n    return extension.addAction(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsFunction.getSentence(),\n      eventsFunctionsExtension.getFullName() ||\n        eventsFunctionsExtension.getName(),\n      getExtensionIconUrl(extension),\n      getExtensionIconUrl(extension)\n    );\n  }\n};\n\n/**\n * Declare the instruction (action/condition) or expression for the given\n * behavior events function.\n */\nexport const declareBehaviorInstructionOrExpressionMetadata = (\n  extension: gdPlatformExtension,\n  behaviorMetadata: gdBehaviorMetadata,\n  eventsBasedBehavior: gdEventsBasedBehavior,\n  eventsFunction: gdEventsFunction\n): gdInstructionMetadata | gdExpressionMetadata => {\n  const functionType = eventsFunction.getFunctionType();\n  if (functionType === gd.EventsFunction.Expression) {\n    return behaviorMetadata.addExpression(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n      getExtensionIconUrl(extension)\n    );\n  } else if (functionType === gd.EventsFunction.StringExpression) {\n    return behaviorMetadata.addStrExpression(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n      getExtensionIconUrl(extension)\n    );\n  } else if (functionType === gd.EventsFunction.Condition) {\n    // Use the new \"scoped\" way to declare an instruction, because\n    // we want to prevent any conflict between free functions and\n    // behaviors (that can totally have functions with the same name).\n    return behaviorMetadata.addScopedCondition(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsFunction.getSentence(),\n      eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n      getExtensionIconUrl(extension),\n      getExtensionIconUrl(extension)\n    );\n  } else {\n    // Use the new \"scoped\" way to declare an instruction, because\n    // we want to prevent any conflict between free functions and\n    // behaviors (that can totally have functions with the same name).\n    return behaviorMetadata.addScopedAction(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsFunction.getSentence(),\n      eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n      getExtensionIconUrl(extension),\n      getExtensionIconUrl(extension)\n    );\n  }\n};\n\ntype gdInstructionOrExpressionMetadata =\n  | gdInstructionMetadata\n  | gdExpressionMetadata;\n\n/**\n * Declare the instructions (actions/conditions) and expressions for the\n * properties of the given events based behavior.\n * This is akin to what would happen by manually declaring a JS extension\n * (see `JsExtension.js` files of extensions).\n */\nexport const declareBehaviorPropertiesInstructionAndExpressions = (\n  i18n: I18nType,\n  extension: gdPlatformExtension,\n  behaviorMetadata: gdBehaviorMetadata,\n  eventsBasedBehavior: gdEventsBasedBehavior\n): void => {\n  const addObjectAndBehaviorParameters = <T: gdInstructionOrExpressionMetadata>(\n    instructionOrExpression: T\n  ): T => {\n    // By convention, first parameter is always the object:\n    instructionOrExpression.addParameter(\n      'object',\n      'Object',\n      '', // See below for adding the extra information\n      false\n    );\n\n    // Manually add the \"extra info\" without relying on addParameter\n    // as this method is prefixing the value passed with the extension namespace (this\n    // was done to ease extension declarations when dealing with object).\n    instructionOrExpression\n      .getParameter(instructionOrExpression.getParametersCount() - 1)\n      .setExtraInfo(eventsBasedBehavior.getObjectType());\n\n    // By convention, second parameter is always the behavior:\n    instructionOrExpression.addParameter(\n      'behavior',\n      'Behavior',\n      eventsBasedBehavior.getName(),\n      false\n    );\n\n    // All property actions/conditions/expressions are private, meaning\n    // they can only be used from the behavior events.\n    instructionOrExpression.setPrivate();\n\n    return instructionOrExpression;\n  };\n\n  mapVector(eventsBasedBehavior.getPropertyDescriptors(), property => {\n    const propertyType = property.getType();\n    const propertyName = property.getName();\n    const getterName = gd.BehaviorCodeGenerator.getBehaviorPropertyGetterName(\n      propertyName\n    );\n    const setterName = gd.BehaviorCodeGenerator.getBehaviorPropertySetterName(\n      propertyName\n    );\n    const propertyLabel =\n      property.getLabel() || i18n._(t`${propertyName} property`);\n\n    if (propertyType === 'String' || propertyType === 'Choice') {\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addStrExpression(\n          gd.EventsBasedBehavior.getPropertyExpressionName(propertyName),\n          propertyLabel,\n          propertyLabel,\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          getExtensionIconUrl(extension)\n        )\n      )\n        .getCodeExtraInformation()\n        .setFunctionName(getterName);\n\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addScopedCondition(\n          gd.EventsBasedBehavior.getPropertyConditionName(propertyName),\n          propertyLabel,\n          i18n._(t`Compare the content of ${propertyLabel}`),\n          i18n._(t`the property ${propertyName}`),\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          getExtensionIconUrl(extension),\n          getExtensionIconUrl(extension)\n        )\n      )\n        .useStandardRelationalOperatorParameters('string')\n        .getCodeExtraInformation()\n        .setFunctionName(getterName);\n\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addScopedAction(\n          gd.EventsBasedBehavior.getPropertyActionName(propertyName),\n          propertyLabel,\n          i18n._(t`Change the content of ${propertyLabel}`),\n          i18n._(t`the property ${propertyName}`),\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          getExtensionIconUrl(extension),\n          getExtensionIconUrl(extension)\n        )\n      )\n        .useStandardOperatorParameters('string')\n        .getCodeExtraInformation()\n        .setFunctionName(setterName)\n        .setManipulatedType('string')\n        .setGetter(getterName);\n    } else if (propertyType === 'Number') {\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addExpression(\n          gd.EventsBasedBehavior.getPropertyExpressionName(propertyName),\n          propertyLabel,\n          propertyLabel,\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          getExtensionIconUrl(extension)\n        )\n      )\n        .getCodeExtraInformation()\n        .setFunctionName(getterName);\n\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addScopedCondition(\n          gd.EventsBasedBehavior.getPropertyConditionName(propertyName),\n          propertyLabel,\n          i18n._(t`Compare the value of ${propertyLabel}`),\n          i18n._(t`the property ${propertyName}`),\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          getExtensionIconUrl(extension),\n          getExtensionIconUrl(extension)\n        )\n      )\n        .useStandardRelationalOperatorParameters('number')\n        .getCodeExtraInformation()\n        .setFunctionName(getterName);\n\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addScopedAction(\n          gd.EventsBasedBehavior.getPropertyActionName(propertyName),\n          propertyLabel,\n          i18n._(t`Change the value of ${propertyLabel}`),\n          i18n._(t`the property ${propertyName}`),\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          getExtensionIconUrl(extension),\n          getExtensionIconUrl(extension)\n        )\n      )\n        .useStandardOperatorParameters('number')\n        .getCodeExtraInformation()\n        .setFunctionName(setterName)\n        .setGetter(getterName);\n    } else if (propertyType === 'Boolean') {\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addScopedCondition(\n          gd.EventsBasedBehavior.getPropertyConditionName(propertyName),\n          propertyLabel,\n          i18n._(t`Check the value of ${propertyLabel}`),\n          i18n._(t`Property ${propertyName} of _PARAM0_ is true`),\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          getExtensionIconUrl(extension),\n          getExtensionIconUrl(extension)\n        )\n      )\n        .getCodeExtraInformation()\n        .setFunctionName(getterName);\n\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addScopedAction(\n          gd.EventsBasedBehavior.getPropertyActionName(propertyName),\n          propertyLabel,\n          i18n._(t`Update the value of ${propertyLabel}`),\n          i18n._(t`Set property ${propertyName} of _PARAM0_ to _PARAM2_`),\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          getExtensionIconUrl(extension),\n          getExtensionIconUrl(extension)\n        )\n      )\n        .addParameter('yesorno', i18n._(t`New value to set`), '', false)\n        .getCodeExtraInformation()\n        .setFunctionName(setterName);\n    }\n  });\n};\n\n/**\n * Add to the instruction (action/condition) or expression the parameters\n * expected by the events function.\n */\nexport const declareEventsFunctionParameters = (\n  eventsFunction: gdEventsFunction,\n  instructionOrExpression: gdInstructionMetadata | gdExpressionMetadata\n) => {\n  mapVector(\n    eventsFunction.getParameters(),\n    (parameter: gdParameterMetadata) => {\n      if (!parameter.isCodeOnly()) {\n        instructionOrExpression.addParameter(\n          parameter.getType(),\n          parameter.getDescription(),\n          '', // See below for adding the extra information\n          parameter.isOptional()\n        );\n        instructionOrExpression.setParameterLongDescription(\n          parameter.getLongDescription()\n        );\n      } else {\n        instructionOrExpression.addCodeOnlyParameter(\n          parameter.getType(),\n          '' // See below for adding the extra information\n        );\n      }\n      // Manually add the \"extra info\" without relying on addParameter (or addCodeOnlyParameter)\n      // as these methods are prefixing the value passed with the extension namespace (this\n      // was done to ease extension declarations when dealing with object).\n      instructionOrExpression\n        .getParameter(instructionOrExpression.getParametersCount() - 1)\n        .setExtraInfo(parameter.getExtraInfo());\n    }\n  );\n\n  // By convention, latest parameter is always the eventsFunctionContext of the calling function\n  // (if any).\n  instructionOrExpression.addCodeOnlyParameter('eventsFunctionContext', '');\n};\n","// @flow\nimport { I18n } from '@lingui/react';\nimport * as React from 'react';\nimport {\n  MosaicWindow as RMMosaicWindow,\n  MosaicWithoutDragDropContext,\n  getLeaves,\n} from 'react-mosaic-component';\nimport CloseButton from './CloseButton';\nimport ThemeConsumer from '../Theme/ThemeConsumer';\nimport { type MessageDescriptor } from '../../Utils/i18n/MessageDescriptor.flow';\nimport debounce from 'lodash/debounce';\n\n// EditorMosaic default styling:\nimport 'react-mosaic-component/react-mosaic-component.css';\nimport './style.css';\n\nexport type Editor = {|\n  type: 'primary' | 'secondary',\n  renderEditor: () => React.Node,\n  noTitleBar?: boolean,\n  title?: MessageDescriptor,\n  toolbarControls?: Array<React.Node>,\n|};\n\nexport type EditorMosaicNode =\n  | {|\n      direction: 'row' | 'column',\n      splitPercentage: number,\n      first: ?EditorMosaicNode,\n      second: ?EditorMosaicNode,\n    |}\n  | string;\n\n// Add a node (an editor) in the mosaic.\nconst addNode = (\n  currentNode: ?EditorMosaicNode,\n  newNode: EditorMosaicNode | string,\n  position: 'start' | 'end',\n  splitPercentage: number,\n  direction: 'row' | 'column'\n): EditorMosaicNode => {\n  if (!currentNode) return newNode;\n\n  // Add the new node inside the current node...\n  if (typeof currentNode !== 'string') {\n    if (\n      position === 'end' &&\n      currentNode.second &&\n      typeof currentNode.second !== 'string'\n    ) {\n      return {\n        ...currentNode,\n        second: addNode(\n          currentNode.second,\n          newNode,\n          position,\n          splitPercentage,\n          direction\n        ),\n      };\n    } else if (\n      position === 'start' &&\n      currentNode.first &&\n      typeof currentNode.first !== 'string'\n    ) {\n      return {\n        ...currentNode,\n        first: addNode(\n          currentNode.first,\n          newNode,\n          position,\n          splitPercentage,\n          direction\n        ),\n      };\n    }\n  }\n\n  // Or add the node here.\n  return {\n    direction:\n      direction === 'row'\n        ? // Direction of split is the opposite of what is requested for the editor\n          'column'\n        : 'row',\n    first: position === 'end' ? currentNode : newNode,\n    second: position === 'end' ? newNode : currentNode,\n    splitPercentage,\n  };\n};\n\n// Replace a node (an editor) by another.\nconst replaceNode = (\n  currentNode: ?EditorMosaicNode,\n  oldNode: ?EditorMosaicNode,\n  newNode: ?EditorMosaicNode\n): ?EditorMosaicNode => {\n  if (!currentNode) {\n    return currentNode;\n  } else if (typeof currentNode === 'string') {\n    if (currentNode === oldNode) return newNode;\n\n    return currentNode;\n  } else {\n    if (currentNode === oldNode) return newNode;\n\n    return {\n      ...currentNode,\n      first: replaceNode(currentNode.first, oldNode, newNode),\n      second: replaceNode(currentNode.second, oldNode, newNode),\n    };\n  }\n};\n\nconst defaultToolbarControls = [<CloseButton key=\"close\" />];\n\nconst renderMosaicWindowPreview = props => (\n  <div className=\"mosaic-preview\">\n    <div className=\"mosaic-window-toolbar\">\n      <div className=\"mosaic-window-title\">{props.title}</div>\n    </div>\n    <div className=\"mosaic-window-body\" />\n  </div>\n);\n\n/**\n * A window that can be used in a EditorMosaic, with a close button\n * by default in the toolbarControls and a preview when the window is\n * dragged.\n */\nconst MosaicWindow = (props: any) => (\n  <RMMosaicWindow\n    {...props}\n    toolbarControls={props.toolbarControls || defaultToolbarControls}\n    renderPreview={renderMosaicWindowPreview}\n  />\n);\n\ntype Props = {|\n  initialNodes: EditorMosaicNode,\n  editors: {\n    [string]: Editor,\n  },\n  limitToOneSecondaryEditor?: boolean,\n  onPersistNodes?: EditorMosaicNode => void,\n|};\n\ntype State = {|\n  mosaicNode: ?EditorMosaicNode,\n|};\n\n/**\n * @class EditorMosaic\n *\n * Can be used to create a mosaic of resizable editors.\n * Must be used inside a component wrapped in a DragDropContext.\n */\nexport default class EditorMosaic extends React.Component<Props, State> {\n  state = {\n    mosaicNode: this.props.initialNodes,\n  };\n\n  openEditor = (\n    editorName: string,\n    position: 'start' | 'end',\n    splitPercentage: number,\n    direction: 'row' | 'column'\n  ) => {\n    const { editors, limitToOneSecondaryEditor } = this.props;\n\n    const editor = this.props.editors[editorName];\n    if (!editor) return false;\n\n    const openedEditorNames = getLeaves(this.state.mosaicNode);\n    if (openedEditorNames.indexOf(editorName) !== -1) {\n      return false;\n    }\n\n    if (limitToOneSecondaryEditor && editor.type === 'secondary') {\n      // Replace the existing secondary editor, if any.\n      const secondaryEditorName = openedEditorNames.find(\n        editorName => editors[editorName].type === 'secondary'\n      );\n      if (secondaryEditorName) {\n        this.setState({\n          mosaicNode: replaceNode(\n            this.state.mosaicNode,\n            secondaryEditorName,\n            editorName\n          ),\n        });\n\n        this._persistNodes();\n        return true;\n      }\n    }\n\n    // Open a new editor at the indicated position\n    this.setState({\n      mosaicNode: addNode(\n        this.state.mosaicNode,\n        editorName,\n        position,\n        splitPercentage,\n        direction\n      ),\n    });\n\n    this._persistNodes();\n    return true;\n  };\n\n  _onChange = (mosaicNode: EditorMosaicNode) => {\n    this.setState({ mosaicNode });\n    this._persistNodes();\n  };\n\n  _persistNodes = debounce(() => {\n    if (this.props.onPersistNodes && this.state.mosaicNode) {\n      this.props.onPersistNodes(this.state.mosaicNode);\n    }\n  }, 2000);\n\n  render() {\n    const { editors } = this.props;\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <MosaicWithoutDragDropContext\n            className={`${\n              muiTheme.mosaicRootClassName\n            } mosaic-blueprint-theme mosaic-gd-theme`}\n            renderTile={(editorName: string, path: string) => {\n              const editor = editors[editorName];\n              if (!editor) {\n                console.error(\n                  'Trying to render un unknown editor: ' + editorName\n                );\n                return null;\n              }\n\n              if (editor.noTitleBar) {\n                return editor.renderEditor();\n              }\n\n              return (\n                <I18n>\n                  {({ i18n }) => (\n                    <MosaicWindow\n                      path={path}\n                      title={i18n._(editor.title)}\n                      toolbarControls={editor.toolbarControls}\n                    >\n                      {editor.renderEditor()}\n                    </MosaicWindow>\n                  )}\n                </I18n>\n              );\n            }}\n            value={this.state.mosaicNode}\n            onChange={this._onChange}\n          />\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n","// @flow\nconst gd: libGDevelop = global.gd;\n\n/**\n * Represents a list of selected instances.\n */\nexport default class InstancesSelection {\n  selection: Array<gdInitialInstance> = [];\n\n  hasSelectedInstances() {\n    return !!this.getSelectedInstances().length;\n  }\n\n  getSelectedInstances() {\n    return this.selection;\n  }\n\n  isInstanceSelected(instance: gdInitialInstance) {\n    for (var i = 0; i < this.selection.length; i++) {\n      if (gd.compare(this.selection[i], instance)) return true;\n    }\n\n    return false;\n  }\n\n  clearSelection() {\n    this.selection.length = 0;\n  }\n\n  selectInstance(\n    instance: gdInitialInstance,\n    multiselect: boolean,\n    layersVisibility: ?{ [string]: boolean } = null\n  ) {\n    if (this.isInstanceSelected(instance)) {\n      if (multiselect) this.unselectInstance(instance);\n\n      return;\n    }\n\n    if (!multiselect) this.clearSelection();\n\n    if (!layersVisibility || layersVisibility[instance.getLayer()]) {\n      this.selection.push(instance);\n    }\n  }\n\n  selectInstances(\n    instances: Array<gdInitialInstance>,\n    multiselect: boolean,\n    layersVisibility: ?{ [string]: boolean } = null\n  ) {\n    if (!multiselect) this.clearSelection();\n\n    instances.forEach(instance =>\n      this.selectInstance(instance, true, layersVisibility)\n    );\n  }\n\n  unselectInstance(instance: gdInitialInstance) {\n    if (this.isInstanceSelected(instance)) {\n      var i = this.selection.length - 1;\n      while (i >= -1 && this.selection[i].ptr !== instance.ptr) {\n        --i;\n      }\n\n      this.selection.splice(i, 1);\n    }\n  }\n}\n","import TextEditor from './Editors/TextEditor';\nimport TiledSpriteEditor from './Editors/TiledSpriteEditor';\nimport PanelSpriteEditor from './Editors/PanelSpriteEditor';\nimport SpriteEditor from './Editors/SpriteEditor';\nimport EmptyEditor from './Editors/EmptyEditor';\nimport ShapePainterEditor from './Editors/ShapePainterEditor';\nimport ParticleEmitterEditor from './Editors/ParticleEmitterEditor';\nimport ObjectPropertiesEditor from './Editors/ObjectPropertiesEditor';\nconst gd /* TODO: add flow in this file */ = global.gd;\n\n/**\n * A service returning editor components for each object type.\n */\nexport default {\n  getEditorConfiguration(objectType: string) {\n    if (!this.editorConfigurations[objectType]) {\n      console.warn(\n        `Object with type ${objectType} has no editor configuration registered. Please use registerEditorConfiguration to register your editor.`\n      );\n    }\n\n    return this.editorConfigurations[objectType];\n  },\n  registerEditorConfiguration: function(objectType, editorConfiguration) {\n    if (!editorConfiguration.component) {\n      console.warn(\n        `Tried to register editor configuration for object \"${objectType}\", but \"component\" property is not defined.`\n      );\n      return;\n    }\n    if (!editorConfiguration.createNewObject) {\n      console.warn(\n        `Tried to register editor configuration for object \"${objectType}\", but \"createNewObject\" property is not defined.`\n      );\n      return;\n    }\n    if (!editorConfiguration.castToObjectType) {\n      console.warn(\n        `Tried to register editor configuration for object \"${objectType}\", but \"castToObjectType\" property is not defined.`\n      );\n      return;\n    }\n\n    if (this.editorConfigurations.hasOwnProperty(objectType)) {\n      console.warn(\n        `Tried to register editor configuration for object \"${objectType}\", but an editor configuration already exists.`\n      );\n      return;\n    }\n\n    console.info(\n      `Properly registered editor configuration for object \"${objectType}\".`\n    );\n    this.editorConfigurations[objectType] = editorConfiguration;\n  },\n  getDefaultObjectJsImplementationPropertiesEditor(options) {\n    return {\n      component: ObjectPropertiesEditor,\n      createNewObject: object =>\n        gd\n          .asObjectJsImplementation(object)\n          .clone()\n          .release(),\n      castToObjectType: object => gd.asObjectJsImplementation(object),\n      helpPagePath: options.helpPagePath,\n    };\n  },\n  editorConfigurations: {\n    Sprite: {\n      component: SpriteEditor,\n      createNewObject: () => new gd.SpriteObject(''),\n      castToObjectType: object => gd.asSpriteObject(object),\n      helpPagePath: '/objects/sprite',\n    },\n    'TiledSpriteObject::TiledSprite': {\n      component: TiledSpriteEditor,\n      createNewObject: () => new gd.TiledSpriteObject(''),\n      castToObjectType: object => gd.asTiledSpriteObject(object),\n      helpPagePath: '/objects/tiled_sprite',\n    },\n    'PanelSpriteObject::PanelSprite': {\n      component: PanelSpriteEditor,\n      createNewObject: () => new gd.PanelSpriteObject(''),\n      castToObjectType: object => gd.asPanelSpriteObject(object),\n      helpPagePath: '/objects/panel_sprite',\n    },\n    'TextObject::Text': {\n      component: TextEditor,\n      createNewObject: () => new gd.TextObject(''),\n      castToObjectType: object => gd.asTextObject(object),\n      helpPagePath: '/objects/text',\n    },\n    'PrimitiveDrawing::Drawer': {\n      component: ShapePainterEditor,\n      createNewObject: () => new gd.ShapePainterObject(''),\n      castToObjectType: object => gd.asShapePainterObject(object),\n      helpPagePath: '/objects/shape_painter',\n    },\n    'TextEntryObject::TextEntry': {\n      component: EmptyEditor,\n      createNewObject: () => new gd.TextEntryObject(''),\n      castToObjectType: object => gd.asTextEntryObject(object),\n      helpPagePath: '/objects/text_entry',\n    },\n    'ParticleSystem::ParticleEmitter': {\n      component: ParticleEmitterEditor,\n      createNewObject: () => new gd.ParticleEmitterObject(''),\n      castToObjectType: object => gd.asParticleEmitterObject(object),\n      helpPagePath: '/objects/particles_emitter',\n    },\n    'SkeletonObject::Skeleton': {\n      component: ObjectPropertiesEditor,\n      createNewObject: () => new gd.SkeletonObject(''),\n      castToObjectType: object => gd.castObject(object, gd.SkeletonObject),\n      helpPagePath: '/objects/skeleton',\n    },\n  },\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport axios from 'axios';\nimport { GDevelopUsageApi } from './ApiConfigs';\nimport { type MessageDescriptor } from '../i18n/MessageDescriptor.flow';\n\nexport type Usage = {\n  id: string,\n  userId: string,\n  type: string,\n  createdAt: number,\n};\nexport type Usages = Array<Usage>;\n\nexport type Subscription = {|\n  userId: string,\n  planId: string | null,\n  createdAt: number,\n  updatedAt: number,\n  stripeSubscriptionId?: string,\n  stripeCustomerId?: string,\n|};\n\nexport type Limit = {|\n  limitReached: boolean,\n  current: number,\n  max: number,\n|};\n\nexport type Limits = {\n  [string]: Limit,\n};\n\nexport type PlanDetails = {\n  planId: string | null,\n  name: string,\n  monthlyPriceInEuros: number,\n  smallDescription?: MessageDescriptor,\n  descriptionBullets: Array<{|\n    isLocalAppOnly?: boolean,\n    message: MessageDescriptor,\n  |}>,\n  extraDescription?: MessageDescriptor,\n};\n\nexport const getSubscriptionPlans = (): Array<PlanDetails> => [\n  {\n    planId: 'gdevelop_pro',\n    name: 'GDevelop Pro',\n    monthlyPriceInEuros: 7,\n    smallDescription: t`Ideal for advanced game makers`,\n    descriptionBullets: [\n      {\n        message: t`Package your game for Android up to 70 times a day (every 24 hours).`,\n      },\n      {\n        message: t`One-click packaging for Windows, macOS and Linux up to 70 times a day (every 24 hours).`,\n      },\n      {\n        message: t`Use Live Preview over Wifi to quickly test your game on mobiles and tablets.`,\n        isLocalAppOnly: true,\n      },\n      {\n        message: t`Use the Debugger to find and solve issues in your games.`,\n        isLocalAppOnly: true,\n      },\n      {\n        message: t`Immerse your players by removing GDevelop logo when the game loads.`,\n      },\n    ],\n    extraDescription: t`You'll also have access to online packaging for iOS or other services when they are released.`,\n  },\n  {\n    planId: 'gdevelop_indie',\n    name: 'GDevelop Indie',\n    monthlyPriceInEuros: 2,\n    smallDescription: t`Ideal for beginners`,\n    descriptionBullets: [\n      {\n        message: t`Package your game for Android up to 10 times a day (every 24 hours).`,\n      },\n      {\n        message: t`One-click packaging for Windows, macOS and Linux up to 10 times a day (every 24 hours).`,\n      },\n      {\n        message: t`Use Live Preview over Wifi to quickly test your game on mobiles and tablets.`,\n        isLocalAppOnly: true,\n      },\n      {\n        message: t`Use the Debugger to find and solve issues in your games.`,\n        isLocalAppOnly: true,\n      },\n      {\n        message: t`Immerse your players by removing GDevelop logo when the game loads`,\n      },\n    ],\n    extraDescription: t`You'll also have access to online packaging for iOS or other services when they are released.`,\n  },\n  {\n    planId: null,\n    name: 'No subscription',\n    monthlyPriceInEuros: 0,\n    descriptionBullets: [\n      {\n        message: t`You can use GDevelop for free! Online packaging for Android, Windows, macOS and Linux is limited to twice a day (every 24 hours) to avoid overloading the services.`,\n      },\n    ],\n  },\n];\n\nexport const getUserUsages = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string\n): Promise<Usages> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.get(`${GDevelopUsageApi.baseUrl}/usage`, {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n\nexport const getUserLimits = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string\n): Promise<Limits> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.get(`${GDevelopUsageApi.baseUrl}/limits`, {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data.limits);\n};\n\nexport const getUserSubscription = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string\n): Promise<Subscription> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.get(`${GDevelopUsageApi.baseUrl}/subscription-v2`, {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n\nexport const changeUserSubscription = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  newSubscriptionDetails: { planId: string | null, stripeToken?: any }\n): Promise<Subscription> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.post(\n        `${GDevelopUsageApi.baseUrl}/subscription-v2`,\n        newSubscriptionDetails,\n        {\n          params: {\n            userId,\n          },\n          headers: {\n            Authorization: authorizationHeader,\n          },\n        }\n      )\n    )\n    .then(response => response.data);\n};\n\ntype UploadType = 'build' | 'preview';\n\nexport const getSignedUrl = (params: {|\n  uploadType: UploadType,\n  key: string,\n  contentType: string,\n|}): Promise<{\n  signedUrl: string,\n}> => {\n  return axios\n    .post(`${GDevelopUsageApi.baseUrl}/upload-options/signed-url`, params)\n    .then(response => response.data);\n};\n\nexport const getRedirectToCheckoutUrl = (\n  planId: string,\n  uid: string,\n  email: string\n): string => {\n  return `${\n    GDevelopUsageApi.baseUrl\n  }/subscription-v2/redirect-to-checkout?planId=${encodeURIComponent(\n    planId\n  )}&clientReferenceId=${encodeURIComponent(\n    uid\n  )}&customerEmail=${encodeURIComponent(email)}`;\n};\n","// @flow\nimport * as React from 'react';\nimport { ListItem } from '../List';\nimport ListIcon from '../ListIcon';\nimport TextField, { noMarginTextFieldInListItemTopOffset } from '../TextField';\nimport ThemeConsumer from '../Theme/ThemeConsumer';\nimport { type MenuItemTemplate } from '../Menu/Menu.flow';\nimport { shouldValidate } from '../KeyboardShortcuts/InteractionKeys';\n\nconst styles = {\n  itemName: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n  },\n  textField: {\n    top: noMarginTextFieldInListItemTopOffset,\n  },\n};\n\nconst LEFT_MOUSE_BUTTON = 0;\n\ntype Props<Item> = {\n  item: Item,\n  itemName: string,\n  isBold: boolean,\n  onRename: string => void,\n  editingName: boolean,\n  getThumbnail?: () => string,\n  selected: boolean,\n  onItemSelected: (?Item) => void,\n  errorStatus: '' | 'error' | 'warning',\n  buildMenuTemplate: () => Array<MenuItemTemplate>,\n  onEdit?: ?(Item) => void,\n  hideMenuButton: boolean,\n  scaleUpItemIconWhenSelected?: boolean,\n  connectIconDragSource?: ?(React.Element<any>) => ?React.Node,\n};\n\nclass ItemRow<Item> extends React.Component<Props<Item>> {\n  textField: ?TextField;\n\n  componentDidUpdate(prevProps: Props<Item>) {\n    if (!prevProps.editingName && this.props.editingName) {\n      setTimeout(() => {\n        if (this.textField) this.textField.focus();\n      }, 100);\n    }\n  }\n\n  render() {\n    const {\n      item,\n      itemName,\n      isBold,\n      selected,\n      getThumbnail,\n      errorStatus,\n      onEdit,\n      onItemSelected,\n      hideMenuButton,\n      scaleUpItemIconWhenSelected,\n      connectIconDragSource,\n    } = this.props;\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => {\n          const label = this.props.editingName ? (\n            <TextField\n              id=\"rename-item-field\"\n              margin=\"none\"\n              ref={textField => (this.textField = textField)}\n              defaultValue={itemName}\n              onBlur={e => this.props.onRename(e.currentTarget.value)}\n              onKeyPress={event => {\n                if (shouldValidate(event)) {\n                  if (this.textField) this.textField.blur();\n                }\n              }}\n              fullWidth\n              style={styles.textField}\n            />\n          ) : (\n            <div\n              style={{\n                ...styles.itemName,\n                color: selected\n                  ? muiTheme.listItem.selectedTextColor\n                  : undefined,\n                fontStyle: isBold ? 'italic' : undefined,\n                fontWeight: isBold ? 'bold' : 'normal',\n              }}\n            >\n              {itemName}\n            </div>\n          );\n\n          const itemStyle = {\n            borderBottom: `1px solid ${muiTheme.listItem.separatorColor}`,\n            backgroundColor: selected\n              ? errorStatus === ''\n                ? muiTheme.listItem.selectedBackgroundColor\n                : errorStatus === 'error'\n                ? muiTheme.listItem.selectedErrorBackgroundColor\n                : muiTheme.listItem.selectedWarningBackgroundColor\n              : undefined,\n            color:\n              errorStatus === ''\n                ? undefined\n                : errorStatus === 'error'\n                ? muiTheme.listItem.errorTextColor\n                : muiTheme.listItem.warningTextColor,\n          };\n\n          const leftIcon = getThumbnail ? (\n            <ListIcon\n              iconSize={24}\n              src={getThumbnail()}\n              cssAnimation={\n                scaleUpItemIconWhenSelected && selected\n                  ? 'scale-and-jiggle 0.8s forwards'\n                  : ''\n              }\n            />\n          ) : null;\n\n          return (\n            <ListItem\n              style={{ ...itemStyle }}\n              primaryText={label}\n              leftIcon={\n                connectIconDragSource && leftIcon\n                  ? connectIconDragSource(<div>{leftIcon}</div>)\n                  : leftIcon\n              }\n              displayMenuButton={!hideMenuButton}\n              rightIconColor={\n                selected\n                  ? muiTheme.listItem.selectedRightIconColor\n                  : muiTheme.listItem.rightIconColor\n              }\n              buildMenuTemplate={this.props.buildMenuTemplate}\n              onClick={() => {\n                if (!onItemSelected) return;\n                if (this.props.editingName) return;\n\n                onItemSelected(selected ? null : item);\n              }}\n              onDoubleClick={event => {\n                if (event.button !== LEFT_MOUSE_BUTTON) return;\n                if (!onEdit) return;\n                if (this.props.editingName) return;\n\n                onItemSelected(null);\n                onEdit(item);\n              }}\n            />\n          );\n        }}\n      </ThemeConsumer>\n    );\n  }\n}\n\nexport default ItemRow;\n","// @flow\nimport * as React from 'react';\nimport ThemeConsumer from '../Theme/ThemeConsumer';\n\nconst styles = {\n  dropIndicator: {\n    borderTop: '2px solid #18dcf2',\n    height: 0,\n    marginTop: '-1px',\n    marginBottom: '-1px',\n    width: '100%',\n    boxSizing: 'border-box',\n  },\n};\n\nexport default function DropIndicator({ canDrop }: {| canDrop: boolean |}) {\n  return (\n    <ThemeConsumer>\n      {gdevelopTheme => (\n        <div\n          style={{\n            ...styles.dropIndicator,\n            borderColor: canDrop\n              ? gdevelopTheme.listItem.selectedBackgroundColor\n              : gdevelopTheme.listItem.selectedErrorBackgroundColor,\n          }}\n        />\n      )}\n    </ThemeConsumer>\n  );\n}\n","// @flow\r\nimport * as React from 'react';\r\nimport { List } from 'react-virtualized';\r\nimport ItemRow from './ItemRow';\r\nimport { AddListItem } from '../ListCommonItem';\r\nimport { listItemWith32PxIconHeight, listItemWithoutIconHeight } from '../List';\r\nimport { makeDragSourceAndDropTarget } from '../DragAndDrop/DragSourceAndDropTarget';\r\nimport DropIndicator from './DropIndicator';\r\nimport { ResponsiveWindowMeasurer } from '../Reponsive/ResponsiveWindowMeasurer';\r\nimport { ScreenTypeMeasurer } from '../Reponsive/ScreenTypeMeasurer';\r\nimport type { WidthType } from '../Reponsive/ResponsiveWindowMeasurer';\r\n\r\ntype Props<Item> = {|\r\n  height: number,\r\n  width: number,\r\n  fullList: Array<Item>,\r\n  selectedItems: Array<Item>,\r\n  onAddNewItem?: () => void,\r\n  addNewItemLabel?: React.Node | string,\r\n  onRename: (Item, string) => void,\r\n  getItemName: Item => string,\r\n  getItemThumbnail?: Item => string,\r\n  isItemBold?: Item => boolean,\r\n  onItemSelected: (?Item) => void,\r\n  onEditItem?: Item => void,\r\n  renamedItem: ?Item,\r\n  erroredItems?: { [string]: '' | 'error' | 'warning' },\r\n  buildMenuTemplate: (Item, index: number) => any,\r\n  onMoveSelectionToItem: (destinationItem: Item) => void,\r\n  canMoveSelectionToItem?: ?(destinationItem: Item) => boolean,\r\n  scaleUpItemIconWhenSelected?: boolean,\r\n  reactDndType: string,\r\n|};\r\n\r\nexport default class SortableVirtualizedItemList<Item> extends React.Component<\r\n  Props<Item>\r\n> {\r\n  _list: ?List;\r\n  DragSourceAndDropTarget = makeDragSourceAndDropTarget<Item>(\r\n    this.props.reactDndType\r\n  );\r\n\r\n  forceUpdateGrid() {\r\n    if (this._list) this._list.forceUpdateGrid();\r\n  }\r\n\r\n  _renderItemRow(\r\n    item: Item,\r\n    index: number,\r\n    windowWidth: WidthType,\r\n    connectIconDragSource?: ?(React.Element<any>) => ?React.Node\r\n  ) {\r\n    const {\r\n      selectedItems,\r\n      getItemThumbnail,\r\n      erroredItems,\r\n      isItemBold,\r\n      onEditItem,\r\n      renamedItem,\r\n      getItemName,\r\n      scaleUpItemIconWhenSelected,\r\n    } = this.props;\r\n\r\n    const nameBeingEdited = renamedItem === item;\r\n    const itemName = getItemName(item);\r\n\r\n    return (\r\n      <ItemRow\r\n        item={item}\r\n        itemName={itemName}\r\n        isBold={isItemBold ? isItemBold(item) : false}\r\n        onRename={newName => this.props.onRename(item, newName)}\r\n        editingName={nameBeingEdited}\r\n        getThumbnail={\r\n          getItemThumbnail ? () => getItemThumbnail(item) : undefined\r\n        }\r\n        selected={selectedItems.indexOf(item) !== -1}\r\n        onItemSelected={this.props.onItemSelected}\r\n        errorStatus={erroredItems ? erroredItems[itemName] || '' : ''}\r\n        buildMenuTemplate={() => this.props.buildMenuTemplate(item, index)}\r\n        onEdit={onEditItem}\r\n        hideMenuButton={windowWidth === 'small'}\r\n        scaleUpItemIconWhenSelected={scaleUpItemIconWhenSelected}\r\n        connectIconDragSource={connectIconDragSource || null}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      height,\r\n      width,\r\n      fullList,\r\n      addNewItemLabel,\r\n      renamedItem,\r\n      getItemThumbnail,\r\n      onAddNewItem,\r\n      onMoveSelectionToItem,\r\n      canMoveSelectionToItem,\r\n      selectedItems,\r\n    } = this.props;\r\n    const { DragSourceAndDropTarget } = this;\r\n\r\n    return (\r\n      <ResponsiveWindowMeasurer>\r\n        {windowWidth => (\r\n          <ScreenTypeMeasurer>\r\n            {screenType => (\r\n              <List\r\n                ref={list => (this._list = list)}\r\n                height={height}\r\n                rowCount={fullList.length + (onAddNewItem ? 1 : 0)}\r\n                rowHeight={\r\n                  getItemThumbnail\r\n                    ? listItemWith32PxIconHeight\r\n                    : listItemWithoutIconHeight\r\n                }\r\n                rowRenderer={({\r\n                  index,\r\n                  key,\r\n                  style,\r\n                }: {|\r\n                  index: number,\r\n                  key: string,\r\n                  style: Object,\r\n                |}) => {\r\n                  if (index >= fullList.length) {\r\n                    return (\r\n                      <div style={style} key={key}>\r\n                        <AddListItem\r\n                          disabled\r\n                          onClick={onAddNewItem}\r\n                          primaryText={addNewItemLabel}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  }\r\n\r\n                  const item = fullList[index];\r\n                  const nameBeingEdited = renamedItem === item;\r\n                  const selected = selectedItems.indexOf(item) !== -1;\r\n\r\n                  return (\r\n                    <div style={style} key={key}>\r\n                      <DragSourceAndDropTarget\r\n                        beginDrag={() => {\r\n                          this.props.onItemSelected(item);\r\n\r\n                          // $FlowFixMe\r\n                          return {};\r\n                        }}\r\n                        canDrag={() => !nameBeingEdited}\r\n                        canDrop={() =>\r\n                          canMoveSelectionToItem\r\n                            ? canMoveSelectionToItem(item)\r\n                            : true\r\n                        }\r\n                        drop={() => {\r\n                          onMoveSelectionToItem(item);\r\n                        }}\r\n                      >\r\n                        {({\r\n                          connectDragSource,\r\n                          connectDropTarget,\r\n                          isOver,\r\n                          canDrop,\r\n                        }) => {\r\n                          // If on a touch screen, setting the whole item to be\r\n                          // draggable would prevent scroll. Set the icon only to be\r\n                          // draggable if the item is not selected. When selected,\r\n                          // set the whole item to be draggable.\r\n                          const canDragOnlyIcon =\r\n                            screenType === 'touch' && !selected;\r\n\r\n                          // Add an extra div because connectDropTarget/connectDragSource can\r\n                          // only be used on native elements\r\n                          const dropTarget = connectDropTarget(\r\n                            <div>\r\n                              {isOver && <DropIndicator canDrop={canDrop} />}\r\n                              {this._renderItemRow(\r\n                                item,\r\n                                index,\r\n                                windowWidth,\r\n                                // Only mark the icon as draggable if needed\r\n                                // (touchscreens).\r\n                                canDragOnlyIcon ? connectDragSource : null\r\n                              )}\r\n                            </div>\r\n                          );\r\n\r\n                          if (!dropTarget) return null;\r\n\r\n                          return canDragOnlyIcon\r\n                            ? dropTarget\r\n                            : connectDragSource(dropTarget);\r\n                        }}\r\n                      </DragSourceAndDropTarget>\r\n                    </div>\r\n                  );\r\n                }}\r\n                width={width}\r\n              />\r\n            )}\r\n          </ScreenTypeMeasurer>\r\n        )}\r\n      </ResponsiveWindowMeasurer>\r\n    );\r\n  }\r\n}\r\n","// @flow\nimport * as React from 'react';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { type ResourceKind } from '../ResourceSource.flow';\nimport ImageThumbnail from './ImageThumbnail';\n\ntype Props = {|\n  project: gdProject,\n  resourceName: string,\n  resourcesLoader: typeof ResourcesLoader,\n  children?: any,\n  style?: Object,\n  onSize?: (number, number) => void,\n  selectable?: boolean,\n  selected?: boolean,\n  onSelect?: boolean => void,\n  onContextMenu?: (number, number) => void,\n|};\n\ntype State = {|\n  resourceKind: ?ResourceKind,\n|};\n\n/**\n * Display the right thumbnail for any given resource of a project\n */\nexport default class ResourceThumbnail extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = this._loadFrom(props);\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      newProps.resourceName !== this.props.resourceName ||\n      newProps.project !== this.props.project\n    ) {\n      this.setState(this._loadFrom(newProps));\n    }\n  }\n\n  _loadFrom(props: Props): State {\n    const { project, resourceName } = props;\n    const resourcesManager = project.getResourcesManager();\n    const resourceKind = resourcesManager.hasResource(resourceName)\n      ? resourcesManager.getResource(resourceName).getKind()\n      : null;\n\n    return {\n      resourceKind,\n    };\n  }\n\n  render() {\n    const { resourceKind } = this.state;\n\n    switch (resourceKind) {\n      case 'image':\n        return (\n          <ImageThumbnail\n            project={this.props.project}\n            resourceName={this.props.resourceName}\n            resourcesLoader={this.props.resourcesLoader}\n            children={this.props.children}\n            style={this.props.style}\n            onSize={this.props.onSize}\n            selectable={this.props.selectable}\n            selected={this.props.selected}\n            onSelect={this.props.onSelect}\n            onContextMenu={this.props.onContextMenu}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ResourcesLoader from '../ResourcesLoader';\nimport ResourceSelector from './ResourceSelector';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n  type ResourceKind,\n} from './ResourceSource.flow';\nimport ResourceThumbnail from './ResourceThumbnail';\nimport { type ResourceExternalEditor } from './ResourceExternalEditor.flow';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\n\ntype Props = {|\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  resourceKind: ResourceKind,\n  resourceName: string,\n  onChange: string => void,\n  floatingLabelText?: React.Node,\n  hintText?: MessageDescriptor,\n|};\n\nconst styles = {\n  container: { flex: 1, display: 'flex', alignItems: 'flex-end' },\n  selectorContainer: { flex: 1 },\n  resourceThumbnail: { marginLeft: 10, marginBottom: 4 },\n};\n\nconst ResourceSelectorWithThumbnail = ({\n  project,\n  resourceSources,\n  onChooseResource,\n  resourceExternalEditors,\n  resourceKind,\n  resourceName,\n  onChange,\n  floatingLabelText,\n  hintText,\n}: Props) => {\n  return (\n    <div style={styles.container}>\n      <div style={styles.selectorContainer}>\n        <ResourceSelector\n          project={project}\n          resourceSources={resourceSources}\n          onChooseResource={onChooseResource}\n          resourceExternalEditors={resourceExternalEditors}\n          resourcesLoader={ResourcesLoader}\n          resourceKind={resourceKind}\n          fullWidth\n          initialResourceName={resourceName}\n          onChange={onChange}\n          floatingLabelText={floatingLabelText}\n          hintText={hintText}\n        />\n      </div>\n      <ResourceThumbnail\n        resourceName={resourceName}\n        resourcesLoader={ResourcesLoader}\n        project={project}\n        style={styles.resourceThumbnail}\n      />\n    </div>\n  );\n};\n\nexport default ResourceSelectorWithThumbnail;\n","import { createGdevelopTheme } from '../CreateTheme';\nimport defaultStyles from './DefaultThemeVariables.json';\nimport './DefaultThemeVariables.css';\n\nexport default createGdevelopTheme(defaultStyles, 'DefaultTheme', 'light');\n","// @flow\nimport { type CommandName } from '../CommandPalette/CommandsList';\n\nexport type ShortcutMap = { [CommandName]: string };\n\nconst defaultShortcuts: ShortcutMap = {\n  QUIT_APP: 'CmdOrCtrl+Shift+KeyQ',\n  OPEN_PROJECT_MANAGER: 'CmdOrCtrl+Alt+KeyE',\n  LAUNCH_NEW_PREVIEW: 'F4',\n  LAUNCH_DEBUG_PREVIEW: 'F6',\n  HOT_RELOAD_PREVIEW: 'F5',\n  LAUNCH_NETWORK_PREVIEW: 'F8',\n  OPEN_START_PAGE: '',\n  CREATE_NEW_PROJECT: 'CmdOrCtrl+Alt+KeyN',\n  OPEN_PROJECT: 'CmdOrCtrl+KeyO',\n  SAVE_PROJECT: 'CmdOrCtrl+KeyS',\n  SAVE_PROJECT_AS: 'CmdOrCtrl+Shift+KeyS',\n  CLOSE_PROJECT: 'CmdOrCtrl+KeyQ',\n  EXPORT_GAME: 'CmdOrCtrl+Shift+KeyE',\n  OPEN_RECENT_PROJECT: '',\n  OPEN_COMMAND_PALETTE: 'CmdOrCtrl+KeyP',\n\n  OPEN_PROJECT_PROPERTIES: '',\n  OPEN_PROJECT_VARIABLES: '',\n  OPEN_PLATFORM_SPECIFIC_ASSETS_DIALOG: '',\n  OPEN_PROJECT_RESOURCES: '',\n\n  OPEN_LAYOUT: 'Alt+KeyS',\n  OPEN_EXTERNAL_EVENTS: 'Alt+KeyV',\n  OPEN_EXTERNAL_LAYOUT: 'Alt+KeyW',\n  OPEN_EXTENSION: 'Alt+KeyE',\n\n  OPEN_SCENE_PROPERTIES: 'KeyS',\n  OPEN_SCENE_VARIABLES: 'KeyV',\n\n  OPEN_OBJECTS_PANEL: 'KeyO',\n  OPEN_OBJECT_GROUPS_PANEL: 'KeyG',\n  OPEN_PROPERTIES_PANEL: 'KeyP',\n  TOGGLE_INSTANCES_PANEL: 'KeyI',\n  TOGGLE_LAYERS_PANEL: 'KeyL',\n  TOGGLE_WINDOW_MASK: 'KeyM',\n  TOGGLE_GRID: 'Alt+KeyG',\n  OPEN_SETUP_GRID: 'CmdOrCtrl+Shift+KeyG',\n  EDIT_LAYER_EFFECTS: 'KeyE',\n  EDIT_LAYER: 'KeyT',\n  EDIT_OBJECT: 'Shift+KeyE',\n  EDIT_OBJECT_VARIABLES: 'Shift+KeyV',\n  EDIT_OBJECT_GROUP: 'Shift+KeyG',\n\n  ADD_STANDARD_EVENT: 'Shift+KeyA',\n  ADD_SUBEVENT: 'Shift+KeyD',\n  ADD_COMMENT_EVENT: '',\n  CHOOSE_AND_ADD_EVENT: 'Shift+KeyW',\n  OPEN_EXTENSION_SETTINGS: '',\n};\n\nexport default defaultShortcuts;\n","import React from 'react';\nimport { ListItem } from './List';\nimport BackgroundText from './BackgroundText';\n// No i18n in this file\n\ntype Props = {|\n  onClick?: () => void,\n  primaryText: React.Node,\n|};\n\nexport const AddListItem = (props: Props) => {\n  return (\n    <ListItem\n      onClick={props.onClick}\n      primaryText={<BackgroundText>{props.primaryText}</BackgroundText>}\n      displayAddIcon\n    />\n  );\n};\n\nexport const SearchListItem = (props: Props) => {\n  return (\n    <ListItem\n      onClick={props.onClick}\n      primaryText={<BackgroundText>{props.primaryText}</BackgroundText>}\n      displaySearchIcon\n    />\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport GDevelopThemeContext from '../Theme/ThemeContext';\n\nconst styles = {\n  row: {\n    display: 'flex',\n  },\n  cell: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: 4,\n    paddingRight: 4,\n  },\n};\n\ntype TreeTableRowProps = {|\n  children: React.Node,\n|};\n\nexport const TreeTableRow = (props: TreeTableRowProps) => {\n  const gdevelopTheme = React.useContext(GDevelopThemeContext);\n\n  return (\n    <div\n      style={{\n        ...styles.row,\n        backgroundColor: gdevelopTheme.list.itemsBackgroundColor,\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\ntype TreeTableCellProps = {|\n  style?: Object,\n  expand?: boolean,\n  children?: React.Node,\n|};\n\nexport const TreeTableCell = (props: TreeTableCellProps) => (\n  <div\n    style={{\n      ...styles.cell,\n      flex: props.expand ? 1 : undefined,\n      ...props.style,\n    }}\n  >\n    {props.children}\n  </div>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport OfflineBoltIcon from '@material-ui/icons/OfflineBolt';\n\nexport type HotReloadPreviewButtonProps = {|\n  hasPreviewsRunning: boolean,\n  launchProjectDataOnlyPreview: () => void,\n|};\n\nexport default function HotReloadPreviewButton({\n  launchProjectDataOnlyPreview,\n  hasPreviewsRunning,\n}: HotReloadPreviewButtonProps) {\n  return (\n    <FlatButton\n      icon={hasPreviewsRunning ? <OfflineBoltIcon /> : <PlayCircleFilledIcon />}\n      label={\n        hasPreviewsRunning ? (\n          <Trans>Apply changes to preview</Trans>\n        ) : (\n          <Trans>Run a preview</Trans>\n        )\n      }\n      onClick={() => launchProjectDataOnlyPreview()}\n    />\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport RaisedButton from '../UI/RaisedButton';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport Star from '@material-ui/icons/Star';\nimport Favorite from '@material-ui/icons/Favorite';\nimport UserProfileContext, { type UserProfile } from './UserProfileContext';\nimport { Column, Line, Spacer } from '../UI/Grid';\nimport {\n  sendSubscriptionCheckDialogShown,\n  sendSubscriptionCheckDismiss,\n} from '../Utils/Analytics/EventSender';\nimport { Trans } from '@lingui/macro';\nimport Text from '../UI/Text';\n\ntype Props = {|\n  title: React.Node,\n  id: string,\n  onChangeSubscription?: () => void,\n  mode: 'try' | 'mandatory',\n|};\n\ntype DialogProps = {|\n  userProfile: UserProfile,\n  ...$Exact<Props>,\n|};\n\ntype DialogState = {|\n  open: boolean,\n|};\n\nconst styles = {\n  icon: { width: 40, height: 40, marginRight: 20 },\n  iconText: { flex: 1 },\n};\n\nexport class SubscriptionCheckDialog extends React.Component<\n  DialogProps,\n  DialogState\n> {\n  state = { open: false };\n\n  checkHasSubscription() {\n    const { userProfile, mode, id } = this.props;\n    if (userProfile.subscription) {\n      const hasPlan = !!userProfile.subscription.planId;\n      if (hasPlan) {\n        this.setState({\n          open: false,\n        });\n        return true;\n      }\n    }\n\n    this.setState({\n      open: true,\n    });\n    sendSubscriptionCheckDialogShown({ mode, id });\n\n    return false;\n  }\n\n  _closeDialog = () => {\n    sendSubscriptionCheckDismiss();\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { open } = this.state;\n    const { onChangeSubscription, mode } = this.props;\n    if (!open) return null;\n\n    return (\n      <Dialog\n        actions={[\n          onChangeSubscription && (\n            <RaisedButton\n              label={<Trans>Get a subscription or login</Trans>}\n              key=\"subscribe\"\n              primary\n              onClick={() => {\n                this.setState({ open: false });\n                onChangeSubscription();\n              }}\n            />\n          ),\n        ]}\n        secondaryActions={[\n          <FlatButton\n            label={\n              mode === 'try' ? (\n                <Trans>Continue anyway</Trans>\n              ) : (\n                <Trans>Not now, thanks!</Trans>\n              )\n            }\n            key=\"close\"\n            primary={false}\n            onClick={this._closeDialog}\n          />,\n        ]}\n        cannotBeDismissed={false}\n        onRequestClose={this._closeDialog}\n        open={open}\n        title={this.props.title}\n      >\n        <Column noMargin>\n          <Line noMargin alignItems=\"center\">\n            {mode === 'try' ? (\n              <Text>\n                <Trans>\n                  You can try this feature, but if you're using it regularly, we\n                  ask you to get a subscription to GDevelop.\n                </Trans>\n              </Text>\n            ) : (\n              <Text>\n                <Trans>\n                  To use this feature, we ask you to get a subscription to\n                  GDevelop.\n                </Trans>\n              </Text>\n            )}\n          </Line>\n          <Line noMargin alignItems=\"center\">\n            <Star style={styles.icon} />\n            <Text style={styles.iconText}>\n              <Trans>\n                Having a subscription allows you to use the one-click export for\n                Android, Windows, macOS and Linux, launch live previews over\n                wifi, disable the GDevelop splashscreen during loading and more!\n              </Trans>\n            </Text>\n          </Line>\n          <Line noMargin alignItems=\"center\">\n            <Favorite style={styles.icon} />\n            <Text style={styles.iconText}>\n              <Trans>\n                You're also supporting the development of GDevelop, an\n                open-source software! In the future, more online services will\n                be available for users with a subscription.\n              </Trans>\n            </Text>\n          </Line>\n          <Spacer />\n          <Spacer />\n          <Spacer />\n          <Spacer />\n          <Text align=\"right\">\n            <b>\n              <Trans>Thanks!</Trans>\n            </b>\n          </Text>\n        </Column>\n      </Dialog>\n    );\n  }\n}\n\nclass SubscriptionChecker extends React.Component<Props, {}> {\n  _dialog: ?SubscriptionCheckDialog = null;\n\n  checkHasSubscription() {\n    if (this._dialog) {\n      return this._dialog.checkHasSubscription();\n    }\n\n    return false;\n  }\n\n  render() {\n    return (\n      <UserProfileContext.Consumer>\n        {(userProfile: UserProfile) => (\n          <SubscriptionCheckDialog\n            userProfile={userProfile}\n            ref={dialog => (this._dialog = dialog)}\n            onChangeSubscription={this.props.onChangeSubscription}\n            id={this.props.id}\n            title={this.props.title}\n            mode={this.props.mode}\n          />\n        )}\n      </UserProfileContext.Consumer>\n    );\n  }\n}\n\nexport default SubscriptionChecker;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport CreateProfile from '../Profile/CreateProfile';\nimport UserProfileContext from '../Profile/UserProfileContext';\nimport AlertMessage from '../UI/AlertMessage';\nimport { Line, Spacer } from '../UI/Grid';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport PlaceholderError from '../UI/PlaceholderError';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport RaisedButton from '../UI/RaisedButton';\nimport Text from '../UI/Text';\nimport {\n  type Game,\n  getGame,\n  registerGame,\n} from '../Utils/GDevelopServices/Game';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport { GameDetailsDialog } from './GameDetailsDialog';\n\ntype Props = {|\n  project: ?gdProject,\n  hideIfRegistered?: boolean,\n  hideLoader?: boolean,\n  onGameRegistered?: () => void,\n|};\n\nexport const GameRegistration = ({\n  project,\n  hideIfRegistered,\n  hideLoader,\n  onGameRegistered,\n}: Props) => {\n  const {\n    authenticated,\n    onLogin,\n    onCreateAccount,\n    getAuthorizationHeader,\n    profile,\n  } = React.useContext(UserProfileContext);\n  const [error, setError] = React.useState<Error | null>(null);\n  const [unavailableReason, setUnavailableReason] = React.useState<\n    'unauthorized' | 'not-existing' | null\n  >(null);\n  const [game, setGame] = React.useState<Game | null>(null);\n  const [registrationInProgress, setRegistrationInProgress] = React.useState(\n    false\n  );\n  const [detailsOpened, setDetailsOpened] = React.useState(false);\n  const [detailsInitialTab, setDetailsInitialTab] = React.useState<\n    'details' | 'analytics' | 'monetization'\n  >('details');\n\n  const loadGame = React.useCallback(\n    async () => {\n      if (!profile || !project) return;\n\n      const { uid } = profile;\n      setError(null);\n      setUnavailableReason(null);\n      try {\n        const game = await getGame(\n          getAuthorizationHeader,\n          uid,\n          project.getProjectUuid()\n        );\n        setGame(game);\n      } catch (err) {\n        console.log(err);\n        if (err.response) {\n          if (err.response.status === 403) {\n            setUnavailableReason('unauthorized');\n            return;\n          } else if (err.response.status === 404) {\n            setUnavailableReason('not-existing');\n            return;\n          }\n        }\n\n        setError(err);\n      }\n    },\n    [project, getAuthorizationHeader, profile]\n  );\n\n  const onRegisterGame = React.useCallback(\n    async () => {\n      if (!profile || !project) return;\n\n      const { uid } = profile;\n      setRegistrationInProgress(true);\n      try {\n        await registerGame(getAuthorizationHeader, uid, {\n          gameId: project.getProjectUuid(),\n          authorName: project.getAuthor() || 'Unspecified author',\n          gameName: project.getName() || 'Untitled game',\n        });\n        loadGame();\n        if (onGameRegistered) onGameRegistered();\n      } catch (error) {\n        console.error('Unable to register the game', error);\n        showErrorBox({\n          rawError: error,\n          errorId: 'register-game-error',\n          // TODO: i18n\n          message:\n            'Unable to register the game. ' +\n            ' ' +\n            'Verify your internet connection or try again later.',\n        });\n      }\n      setRegistrationInProgress(false);\n    },\n    [getAuthorizationHeader, profile, project, loadGame, onGameRegistered]\n  );\n\n  React.useEffect(\n    () => {\n      loadGame();\n    },\n    [loadGame]\n  );\n\n  if (!authenticated) {\n    return (\n      <CreateProfile onLogin={onLogin} onCreateAccount={onCreateAccount} />\n    );\n  } else if (!project) {\n    return null;\n  } else if (game) {\n    if (hideIfRegistered) return null;\n\n    return (\n      <ColumnStackLayout noMargin>\n        <Text>\n          <Trans>\n            Your project is registered online. This allows you to get access to\n            metrics collected anonymously, like the number of daily players and\n            retention of the players after a few days.\n          </Trans>\n        </Text>\n        <Line justifyContent=\"center\">\n          <RaisedButton\n            primary\n            icon={<TimelineIcon />}\n            label={<Trans>Analytics</Trans>}\n            onClick={() => {\n              setDetailsInitialTab('analytics');\n              setDetailsOpened(true);\n            }}\n          />\n          <Spacer />\n          <RaisedButton\n            primary\n            icon={<MonetizationOnIcon />}\n            label={<Trans>Monetization</Trans>}\n            onClick={() => {\n              setDetailsInitialTab('monetization');\n              setDetailsOpened(true);\n            }}\n          />\n        </Line>\n        {detailsOpened && (\n          <GameDetailsDialog\n            game={game}\n            project={project}\n            initialTab={detailsInitialTab}\n            onClose={() => {\n              setDetailsOpened(false);\n            }}\n            onGameUpdated={updatedGame => {\n              setGame(updatedGame);\n            }}\n            onGameDeleted={() => {\n              setDetailsOpened(false);\n              loadGame();\n            }}\n          />\n        )}\n      </ColumnStackLayout>\n    );\n  } else if (unavailableReason === 'unauthorized') {\n    return (\n      <AlertMessage kind=\"error\">\n        <Trans>\n          This project is registered online but you don't have access to it. Ask\n          the original owner of the game to share it with you to get access to\n          the game metrics.\n        </Trans>\n      </AlertMessage>\n    );\n  } else if (unavailableReason === 'not-existing') {\n    return (\n      <AlertMessage\n        kind=\"info\"\n        renderRightButton={() => (\n          <RaisedButton\n            label={<Trans>Register the project</Trans>}\n            disabled={registrationInProgress}\n            primary\n            onClick={() => {\n              onRegisterGame();\n            }}\n          />\n        )}\n      >\n        <Trans>\n          This project is not registered online. Register it now to get access\n          to metrics collected anonymously, like the number of daily players and\n          retention of the players after a few days.\n        </Trans>\n      </AlertMessage>\n    );\n  } else if (error) {\n    return (\n      <PlaceholderError\n        onRetry={() => {\n          loadGame();\n        }}\n      >\n        <Trans>Can't check if the game is registered online.</Trans>{' '}\n        <Trans>Verify your internet connection or try again later.</Trans>\n      </PlaceholderError>\n    );\n  }\n\n  return hideLoader ? null : <PlaceholderLoader />;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Column, Line, Spacer } from '../UI/Grid';\nimport Text from '../UI/Text';\nimport BackgroundText from '../UI/BackgroundText';\n\ntype Props = {\n  message?: React.Node,\n  onLogin: () => void,\n  onCreateAccount: () => void,\n};\n\nexport default ({ message, onLogin, onCreateAccount }: Props) => (\n  <Column noMargin>\n    <Line>\n      <Text>\n        {message || (\n          <Trans>\n            You are not connected. Create an account to build your game for\n            Android, Windows, macOS and Linux in one click, and get access to\n            metrics for your game.\n          </Trans>\n        )}\n      </Text>\n    </Line>\n    <Line justifyContent=\"center\" alignItems=\"baseline\">\n      <RaisedButton\n        label={<Trans>Create my account</Trans>}\n        onClick={onCreateAccount}\n        primary\n      />\n      <Spacer />\n      <Spacer />\n      <BackgroundText>or</BackgroundText>\n      <Spacer />\n      <FlatButton label={<Trans>Login</Trans>} onClick={onLogin} />\n    </Line>\n  </Column>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport ReactErrorBoundary from 'react-error-boundary';\nimport BugReport from '@material-ui/icons/BugReport';\nimport PlaceholderMessage from './PlaceholderMessage';\nimport Divider from '@material-ui/core/Divider';\nimport RaisedButton from './RaisedButton';\nimport { sendErrorMessage } from '../Utils/Analytics/EventSender';\nimport Window from '../Utils/Window';\nimport Text from './Text';\nimport { Line, Spacer } from './Grid';\nimport { getIDEVersionWithHash } from '../Version';\nimport {\n  getArch,\n  getPlatformName,\n  getSystemVersion,\n  getUserAgent,\n} from '../Utils/Platform';\n\nconst errorHandler = (error: Error, componentStack: string) => {\n  console.error('Error catched by Boundary:', error, componentStack);\n  sendErrorMessage(\n    'Error catched by error boundary',\n    'error-boundary',\n    {\n      error,\n      componentStack,\n    },\n    'error-boundary-error'\n  );\n};\n\nexport const ErrorFallbackComponent = ({\n  componentStack,\n  error,\n}: {\n  componentStack: string,\n  error: Error,\n}) => (\n  <PlaceholderMessage>\n    <Line>\n      <BugReport fontSize=\"large\" />\n      <Spacer />\n      <Text size=\"title\">This editor encountered a problem.</Text>\n    </Line>\n    <Divider />\n    <Text>\n      Something wrong happened :(\n      <br />\n      Please <b>backup your game file</b> and save your game to ensure that you\n      don't lose anything.\n    </Text>\n    <Text>\n      The error was automatically reported.\n      <br />\n      To make sure it's fixed, you may report it on GitHub, the platform where\n      GDevelop is developed:\n    </Text>\n    <RaisedButton\n      label={<Trans>Report the issue on GitHub</Trans>}\n      onClick={() => {\n        const body = `\n=> Please write here a short description of when the error occured and how to reproduce it.\nYou also may have to create an account on GitHub before posting.\n\nWhen you're ready, click on \"Submit new issue\". Don't change the rest of the message. Thanks!\n\n## Error stack (don't write anything here)\n\\`\\`\\`\n${error ? error.stack : 'No error found'}\n\\`\\`\\`\n\n## Component stack (don't write anything here)\n\\`\\`\\`\n${componentStack || 'No component stack found'}\n\\`\\`\\`\n\n## Other details\n* IDE version: ${getIDEVersionWithHash()}\n* Arch: ${getArch()},\n* Platform Name: ${getPlatformName()},\n* System Version: ${getSystemVersion()},\n* User Agent: ${getUserAgent()},\n        `;\n        Window.openExternalURL(\n          `https://github.com/4ian/GDevelop/issues/new?body=${encodeURIComponent(\n            body\n          )}&title=Crash%20while%20using%20an%20editor`\n        );\n      }}\n    />\n  </PlaceholderMessage>\n);\n\ntype Props = {|\n  children: React.Node,\n|};\n\nconst ErrorBoundary = (props: Props) => (\n  <ReactErrorBoundary\n    FallbackComponent={ErrorFallbackComponent}\n    onError={errorHandler}\n  >\n    {props.children}\n  </ReactErrorBoundary>\n);\n\nexport default ErrorBoundary;\n","// @flow\nexport const isNullPtr = (\n  gd: libGDevelop,\n  object: gdEmscriptenObject\n): boolean => gd.getPointer(object) === 0;\n","//@flow\nimport optionalRequire from './OptionalRequire';\n\n/**\n * Return a function that will load, only when called, the specified module name.\n *\n * As `optionalRequire`, this allows to require a Node.js/npm module without having it bundled by webpack.\n * This means that this module will only be available when running on Electron or Node.js.\n * When running without Electron or Node.js, `null` will be returned.\n */\nexport default function optionalLazyRequire(moduleName: string) {\n  let moduleLoaded = false;\n  let module = undefined;\n  return (): ?any => {\n    if (moduleLoaded) {\n      return module;\n    }\n\n    console.info(`Lazy loading ${moduleName}...`);\n    module = optionalRequire(moduleName);\n    moduleLoaded = true;\n    return module;\n  };\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport * as React from 'react';\nimport EventsTree from './EventsTree';\nimport NewInstructionEditorDialog from './InstructionEditor/NewInstructionEditorDialog';\nimport InstructionEditorDialog from './InstructionEditor/InstructionEditorDialog';\nimport NewInstructionEditorMenu from './InstructionEditor/NewInstructionEditorMenu';\nimport EventTextDialog, {\n  filterEditableWithEventTextDialog,\n} from './InstructionEditor/EventTextDialog';\nimport Toolbar from './Toolbar';\nimport KeyboardShortcuts from '../UI/KeyboardShortcuts';\nimport InlineParameterEditor from './InlineParameterEditor';\nimport ContextMenu from '../UI/Menu/ContextMenu';\nimport { serializeToJSObject } from '../Utils/Serializer';\nimport {\n  type HistoryState,\n  undo,\n  redo,\n  canUndo,\n  canRedo,\n  getHistoryInitialState,\n  saveToHistory,\n} from '../Utils/History';\nimport {\n  type SelectionState,\n  type EventContext,\n  type InstructionsListContext,\n  type InstructionContext,\n  type ParameterContext,\n  getInitialSelection,\n  selectEvent,\n  selectInstruction,\n  hasSomethingSelected,\n  hasEventSelected,\n  hasInstructionSelected,\n  hasSelectedAtLeastOneCondition,\n  hasInstructionsListSelected,\n  getSelectedEvents,\n  getSelectedInstructions,\n  clearSelection,\n  getSelectedEventContexts,\n  getSelectedInstructionsContexts,\n} from './SelectionHandler';\nimport { ensureSingleOnceInstructions } from './OnceInstructionSanitizer';\nimport EventsContextAnalyzerDialog, {\n  type EventsContextResult,\n  toEventsContextResult,\n} from './EventsContextAnalyzerDialog';\nimport SearchPanel from './SearchPanel';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport EventsSearcher, {\n  type ReplaceInEventsInputs,\n  type SearchInEventsInputs,\n} from './EventsSearcher';\nimport { containsSubInstructions } from './ContainsSubInstruction';\nimport {\n  enumerateEventsMetadata,\n  type EventMetadata,\n} from './EnumerateEventsMetadata';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport EventsFunctionExtractorDialog from './EventsFunctionExtractor/EventsFunctionExtractorDialog';\nimport { createNewInstructionForEventsFunction } from './EventsFunctionExtractor';\nimport { type EventsScope } from '../InstructionOrExpression/EventsScope.flow';\nimport {\n  pasteEventsFromClipboardInSelection,\n  copySelectionToClipboard,\n  pasteInstructionsFromClipboardInSelection,\n  hasClipboardEvents,\n  hasClipboardActions,\n  hasClipboardConditions,\n  pasteInstructionsFromClipboardInInstructionsList,\n} from './ClipboardKind';\nimport InfoBar from '../UI/Messages/InfoBar';\nimport { ScreenTypeMeasurer } from '../UI/Reponsive/ScreenTypeMeasurer';\nimport { ResponsiveWindowMeasurer } from '../UI/Reponsive/ResponsiveWindowMeasurer';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  events: gdEventsList,\n  setToolbar: (?React.Node) => void,\n  onOpenSettings?: ?() => void,\n  onOpenExternalEvents: string => void,\n  onOpenLayout: string => void,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  openInstructionOrExpression: (\n    extension: gdPlatformExtension,\n    type: string\n  ) => void,\n  onCreateEventsFunction: (\n    extensionName: string,\n    eventsFunction: gdEventsFunction\n  ) => void,\n  unsavedChanges?: ?UnsavedChanges,\n|};\n\ntype State = {|\n  history: HistoryState,\n\n  editedInstruction: {\n    //TODO: This could be adapted to be a InstructionContext\n    isCondition: boolean,\n    instruction: ?gdInstruction,\n    instrsList: ?gdInstructionsList,\n    indexInList: ?number,\n  },\n  editedParameter: {\n    // TODO: This could be adapted to be a ParameterContext\n    isCondition: boolean,\n    instruction: ?gdInstruction,\n    instrsList: ?gdInstructionsList,\n    parameterIndex: number,\n  },\n\n  selection: SelectionState,\n\n  inlineEditing: boolean,\n  inlineEditingAnchorEl: ?HTMLElement,\n  inlineInstructionEditorAnchorEl: ?HTMLElement,\n  inlineEditingChangesMade: boolean,\n\n  analyzedEventsContextResult: ?EventsContextResult,\n\n  serializedEventsToExtract: ?Object,\n\n  textEditedEvent: ?gdBaseEvent,\n\n  showSearchPanel: boolean,\n  searchResults: ?Array<gdBaseEvent>,\n  searchFocusOffset: ?number,\n\n  allEventsMetadata: Array<EventMetadata>,\n|};\n\ntype EventInsertionContext = {|\n  eventsList: gdEventsList,\n  indexInList: number,\n|};\n\nconst styles = {\n  container: {\n    display: 'flex',\n    width: '100%',\n    flexDirection: 'column',\n    flex: 1,\n    position: 'relative', // To be sure that absolutely positioned PlaceholderMessage won't go outside of the EventsSheet\n  },\n};\n\nexport default class EventsSheet extends React.Component<Props, State> {\n  _eventsTree: ?EventsTree;\n  _eventSearcher: ?EventsSearcher;\n  _searchPanel: ?SearchPanel;\n  _containerDiv = React.createRef<HTMLDivElement>();\n  _keyboardShortcuts = new KeyboardShortcuts({\n    isActive: () =>\n      !this.state.inlineEditing &&\n      !this.state.editedInstruction.instruction &&\n      !this.state.analyzedEventsContextResult &&\n      !this.state.serializedEventsToExtract,\n    shortcutCallbacks: {\n      onDelete: () => this.deleteSelection(),\n      onCopy: () => this.copySelection(),\n      onCut: () => this.cutSelection(),\n      onPaste: () => this.pasteEventsOrInstructions(),\n      onSearch: () => this._toggleSearchPanel(),\n      onEscape: () => this._closeSearchPanel(),\n      onUndo: () => this.undo(),\n      onRedo: () => this.redo(),\n    },\n  });\n\n  eventContextMenu: ContextMenu;\n  instructionContextMenu: ContextMenu;\n\n  state = {\n    history: getHistoryInitialState(this.props.events, { historyMaxSize: 50 }),\n\n    editedInstruction: {\n      isCondition: true,\n      instruction: null,\n      instrsList: null,\n      indexInList: 0,\n    },\n    editedParameter: {\n      isCondition: true,\n      instruction: null,\n      instrsList: null,\n      parameterIndex: 0,\n    },\n\n    selection: getInitialSelection(),\n\n    inlineEditing: false,\n    inlineEditingAnchorEl: null,\n    inlineInstructionEditorAnchorEl: null,\n    inlineEditingChangesMade: false,\n\n    analyzedEventsContextResult: null,\n\n    serializedEventsToExtract: null,\n\n    showSearchPanel: false,\n    searchResults: null,\n    searchFocusOffset: null,\n\n    allEventsMetadata: [],\n\n    textEditedEvent: null,\n  };\n\n  componentDidMount() {\n    this.setState({ allEventsMetadata: enumerateEventsMetadata() });\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (this.state.history !== prevState.history)\n      if (this.props.unsavedChanges)\n        this.props.unsavedChanges.triggerUnsavedChanges();\n  }\n\n  updateToolbar() {\n    if (!this.props.setToolbar) return;\n\n    this.props.setToolbar(\n      <Toolbar\n        allEventsMetadata={this.state.allEventsMetadata}\n        onAddStandardEvent={this._addStandardEvent}\n        onAddSubEvent={this.addSubEvents}\n        canAddSubEvent={hasEventSelected(this.state.selection)}\n        onAddCommentEvent={this._addCommentEvent}\n        onAddEvent={this.addNewEvent}\n        canRemove={hasSomethingSelected(this.state.selection)}\n        onRemove={this.deleteSelection}\n        canUndo={canUndo(this.state.history)}\n        canRedo={canRedo(this.state.history)}\n        undo={this.undo}\n        redo={this.redo}\n        onOpenSettings={this.props.onOpenSettings}\n        onToggleSearchPanel={this._toggleSearchPanel}\n      />\n    );\n  }\n\n  _addStandardEvent = () => {\n    this.addNewEvent('BuiltinCommonInstructions::Standard');\n  };\n\n  _addCommentEvent = () => {\n    this.addNewEvent('BuiltinCommonInstructions::Comment');\n  };\n\n  _toggleSearchPanel = () => {\n    this.setState(\n      state => {\n        const show = !state.showSearchPanel;\n        if (!show) {\n          if (this._eventSearcher) this._eventSearcher.reset();\n        }\n\n        return {\n          showSearchPanel: show,\n        };\n      },\n      () => {\n        if (this.state.showSearchPanel && this._searchPanel) {\n          this._searchPanel.focus();\n        }\n      }\n    );\n  };\n\n  _closeSearchPanel = () => {\n    this.setState({ showSearchPanel: false });\n  };\n\n  addSubEvents = () => {\n    const { project } = this.props;\n\n    getSelectedEvents(this.state.selection).forEach(event => {\n      if (event.canHaveSubEvents()) {\n        event\n          .getSubEvents()\n          .insertNewEvent(\n            project,\n            'BuiltinCommonInstructions::Standard',\n            event.getSubEvents().getEventsCount()\n          );\n      }\n    });\n\n    this._saveChangesToHistory(() => {\n      if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n    });\n  };\n\n  _selectionCanHaveSubEvents = () => {\n    return getSelectedEvents(this.state.selection).some(event => {\n      return event.canHaveSubEvents();\n    });\n  };\n\n  _selectionCanToggleDisabled = () => {\n    return getSelectedEvents(this.state.selection).some(event => {\n      return event.isExecutable();\n    });\n  };\n\n  addNewEvent = (\n    type: string,\n    context: ?EventInsertionContext\n  ): Array<gdBaseEvent> => {\n    const { project } = this.props;\n    const hasEventsSelected = hasEventSelected(this.state.selection);\n    let insertTopOfSelection = false;\n\n    let insertions: Array<EventInsertionContext> = [];\n    if (context) {\n      insertions = [context];\n    } else if (hasEventsSelected) {\n      if (\n        type === 'BuiltinCommonInstructions::Comment' ||\n        type === 'BuiltinCommonInstructions::Group'\n      ) {\n        insertTopOfSelection = true;\n      }\n\n      insertions = getSelectedEventContexts(this.state.selection).map(\n        selectedEvent => ({\n          eventsList: selectedEvent.eventsList,\n          indexInList: insertTopOfSelection\n            ? selectedEvent.indexInList - 1\n            : selectedEvent.indexInList,\n        })\n      );\n    } else {\n      insertions = [\n        {\n          eventsList: this.props.events,\n          indexInList: this.props.events.getEventsCount(),\n        },\n      ];\n    }\n\n    const newEvents = insertions.map(\n      (context: { eventsList: gdEventsList, indexInList: number }) => {\n        return context.eventsList.insertNewEvent(\n          project,\n          type,\n          context.indexInList + 1\n        );\n      }\n    );\n\n    this._saveChangesToHistory(() => {\n      const eventsTree = this._eventsTree;\n      if (!eventsTree) return;\n\n      eventsTree.forceEventsUpdate(() => {\n        if (!context && !hasEventsSelected) {\n          eventsTree.scrollToEvent(newEvents[0]);\n        }\n      });\n    });\n\n    return newEvents;\n  };\n\n  openEventTextDialog = () => {\n    const editableEvents = filterEditableWithEventTextDialog(\n      getSelectedEvents(this.state.selection)\n    );\n    if (!editableEvents.length) return;\n\n    const event = editableEvents[editableEvents.length - 1]; // Get the last selected event.\n    this.setState({\n      textEditedEvent: event,\n    });\n  };\n\n  closeEventTextDialog = () => {\n    this.setState({\n      textEditedEvent: null,\n    });\n  };\n\n  openAddInstructionContextMenu = (\n    button: HTMLButtonElement,\n    instructionsListContext: InstructionsListContext\n  ) => {\n    this.openInstructionEditor(instructionsListContext, button);\n  };\n\n  openInstructionEditor = (\n    instructionContext: InstructionContext | InstructionsListContext,\n    inlineInstructionEditorAnchorEl?: ?HTMLButtonElement = null\n  ) => {\n    if (this.state.editedInstruction.instruction) {\n      this.state.editedInstruction.instruction.delete();\n      console.warn(\n        'state.editedInstruction.instruction was containing an instruction - deleting it. Verify the logic handling the state in EventsSheet because that should not happen.'\n      );\n    }\n\n    this.setState({\n      inlineInstructionEditorAnchorEl,\n      editedInstruction: {\n        instrsList: instructionContext.instrsList,\n        isCondition: instructionContext.isCondition,\n        instruction: instructionContext.instruction\n          ? instructionContext.instruction.clone()\n          : new gd.Instruction(),\n        indexInList:\n          instructionContext.indexInList !== undefined\n            ? instructionContext.indexInList\n            : undefined,\n      },\n    });\n  };\n\n  closeInstructionEditor(saveChanges: boolean = false) {\n    const { instruction } = this.state.editedInstruction;\n    this.setState(\n      {\n        editedInstruction: {\n          isCondition: true,\n          instruction: null,\n          instrsList: null,\n          indexInList: 0,\n        },\n      },\n      () => {\n        // Delete from memory the instruction being edited, *after* resetting\n        // editedInstruction and after the re-rendering, in an effort to be\n        // sure that instruction is not used after deletion.\n        if (instruction) {\n          instruction.delete();\n        }\n        if (saveChanges) {\n          this._saveChangesToHistory();\n        }\n      }\n    );\n  }\n\n  moveSelectionToInstruction = (destinationContext: InstructionContext) => {\n    this.moveSelectionToInstructionsList(\n      {\n        instrsList: destinationContext.instrsList,\n        isCondition: destinationContext.isCondition,\n      },\n      destinationContext.indexInList\n    );\n  };\n\n  moveSelectionToInstructionsList = (\n    destinationContext: InstructionsListContext,\n    indexInList: ?number = undefined\n  ) => {\n    const selectedInstructions = getSelectedInstructions(this.state.selection);\n    const destinationIndex =\n      indexInList === undefined || indexInList === null\n        ? destinationContext.instrsList.size()\n        : indexInList;\n\n    const isTryingToDragAnInstructionIntoItsOwnNestedInstructions = !!selectedInstructions.filter(\n      instruction =>\n        containsSubInstructions(instruction, destinationContext.instrsList)\n    ).length;\n\n    if (isTryingToDragAnInstructionIntoItsOwnNestedInstructions) return;\n\n    selectedInstructions.forEach(instruction =>\n      destinationContext.instrsList.insert(instruction, destinationIndex)\n    );\n\n    if (!this._keyboardShortcuts.shouldCloneInstances()) {\n      this.deleteSelection({ deleteEvents: false });\n    } else {\n      this._saveChangesToHistory();\n    }\n  };\n\n  selectEvent = (eventContext: EventContext) => {\n    const multiSelect = this._keyboardShortcuts.shouldMultiSelect();\n    this.setState(\n      {\n        selection: selectEvent(this.state.selection, eventContext, multiSelect),\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  openEventContextMenu = (x: number, y: number, eventContext: EventContext) => {\n    const multiSelect = this._keyboardShortcuts.shouldMultiSelect();\n    this.setState(\n      {\n        selection: selectEvent(this.state.selection, eventContext, multiSelect),\n      },\n      () => {\n        this.updateToolbar();\n        this.eventContextMenu.open(x, y);\n      }\n    );\n  };\n\n  openInstructionContextMenu = (\n    x: number,\n    y: number,\n    instructionContext: InstructionContext\n  ) => {\n    const multiSelect = this._keyboardShortcuts.shouldMultiSelect();\n    this.setState(\n      {\n        selection: selectInstruction(\n          this.state.selection,\n          instructionContext,\n          multiSelect\n        ),\n      },\n      () => {\n        this.updateToolbar();\n        this.instructionContextMenu.open(x, y);\n      }\n    );\n  };\n\n  selectInstruction = (instructionContext: InstructionContext) => {\n    const multiSelect = this._keyboardShortcuts.shouldMultiSelect();\n    this.setState(\n      {\n        selection: selectInstruction(\n          this.state.selection,\n          instructionContext,\n          multiSelect\n        ),\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  openParameterEditor = (parameterContext: ParameterContext) => {\n    // $FlowFixMe\n    this.setState({\n      editedParameter: parameterContext,\n      inlineEditing: true,\n      inlineEditingAnchorEl: parameterContext.domEvent\n        ? parameterContext.domEvent.currentTarget\n        : null,\n      inlineEditingChangesMade: false,\n    });\n  };\n\n  closeParameterEditor = () => {\n    if (this.state.inlineEditingChangesMade) {\n      this._saveChangesToHistory();\n    }\n\n    if (this.state.inlineEditingAnchorEl) {\n      // Focus back the parameter - especially useful when editing\n      // with the keyboard only.\n      this.state.inlineEditingAnchorEl.focus();\n    }\n\n    this.setState({\n      inlineEditing: false,\n      inlineEditingAnchorEl: null,\n      inlineEditingChangesMade: false,\n    });\n  };\n\n  toggleDisabled = () => {\n    getSelectedEvents(this.state.selection).forEach(event =>\n      event.setDisabled(!event.isDisabled())\n    );\n    this._saveChangesToHistory(() => {\n      if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n    });\n  };\n\n  deleteSelection = ({\n    deleteInstructions = true,\n    deleteEvents = true,\n  }: { deleteInstructions?: boolean, deleteEvents?: boolean } = {}) => {\n    const { events } = this.props;\n    const eventsRemover = new gd.EventsRemover();\n    if (deleteEvents) {\n      getSelectedEvents(this.state.selection).forEach(event =>\n        eventsRemover.addEventToRemove(event)\n      );\n    }\n    if (deleteInstructions) {\n      getSelectedInstructions(this.state.selection).forEach(instruction =>\n        eventsRemover.addInstructionToRemove(instruction)\n      );\n    }\n\n    eventsRemover.launch(events);\n\n    // /!\\ Events were changed, so any reference to an existing event can now\n    // be invalid. Make sure to immediately trigger a forced update before\n    // any re-render that could use a deleted/invalid event.\n    if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n\n    this.setState(\n      {\n        selection: clearSelection(),\n        inlineEditing: false,\n        inlineEditingAnchorEl: null,\n      },\n      () => {\n        this._saveChangesToHistory();\n\n        // Deletion of an event/instruction will remove it from the DOM,\n        // potentially losing the focus on the associated DOM elements. Ensure\n        // we keep the focus on the EventsSheet.\n        this._ensureFocused();\n      }\n    );\n  };\n\n  copySelection = () => {\n    copySelectionToClipboard(this.state.selection);\n  };\n\n  cutSelection = () => {\n    this.copySelection();\n    this.deleteSelection();\n  };\n\n  pasteEvents = () => {\n    if (\n      !pasteEventsFromClipboardInSelection(\n        this.props.project,\n        this.state.selection\n      )\n    ) {\n      return;\n    }\n\n    this._saveChangesToHistory(() => {\n      if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n    });\n  };\n\n  pasteInstructions = () => {\n    if (\n      !pasteInstructionsFromClipboardInSelection(\n        this.props.project,\n        this.state.selection\n      )\n    ) {\n      return;\n    }\n\n    this._saveChangesToHistory(() => {\n      if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n    });\n  };\n\n  pasteEventsOrInstructions = () => {\n    if (hasEventSelected(this.state.selection)) this.pasteEvents();\n    else if (hasInstructionSelected(this.state.selection))\n      this.pasteInstructions();\n    else if (hasInstructionsListSelected(this.state.selection))\n      this.pasteInstructions();\n  };\n\n  pasteInstructionsInInstructionsList = (\n    instructionsListContext: InstructionsListContext\n  ) => {\n    if (\n      !pasteInstructionsFromClipboardInInstructionsList(\n        this.props.project,\n        instructionsListContext\n      )\n    ) {\n      return;\n    }\n\n    this._saveChangesToHistory(() => {\n      if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n    });\n  };\n\n  _invertSelectedConditions = () => {\n    getSelectedInstructionsContexts(this.state.selection).forEach(\n      instructionContext => {\n        if (instructionContext.isCondition) {\n          instructionContext.instruction.setInverted(\n            !instructionContext.instruction.isInverted()\n          );\n        }\n      }\n    );\n\n    this._saveChangesToHistory(() => {\n      if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n    });\n  };\n\n  _saveChangesToHistory = (cb: ?Function) => {\n    this.setState(\n      {\n        history: saveToHistory(this.state.history, this.props.events),\n      },\n      () => {\n        this.updateToolbar();\n        if (cb) cb();\n      }\n    );\n    if (this._searchPanel) this._searchPanel.markSearchResultsDirty();\n  };\n\n  undo = () => {\n    if (!canUndo(this.state.history)) return;\n\n    const { events, project } = this.props;\n    const newHistory = undo(this.state.history, events, project);\n\n    // /!\\ Events were changed, so any reference to an existing event can now\n    // be invalid. Make sure to immediately trigger a forced update before\n    // any re-render that could use a deleted/invalid event.\n    if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n\n    // /!\\ Also clear selection, that can contain reference to invalid events or\n    // events not shown on screen.\n    this.setState({ history: newHistory, selection: clearSelection() }, () =>\n      this.updateToolbar()\n    );\n  };\n\n  redo = () => {\n    if (!canRedo(this.state.history)) return;\n\n    const { events, project } = this.props;\n    const newHistory = redo(this.state.history, events, project);\n\n    // /!\\ Events were changed, so any reference to an existing event can now\n    // be invalid. Make sure to immediately trigger a forced update before\n    // any re-render that could use a deleted/invalid event.\n    if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n\n    // /!\\ Also clear selection, that can contain reference to invalid events or\n    // events not shown on screen.\n    this.setState({ history: newHistory, selection: clearSelection() }, () =>\n      this.updateToolbar()\n    );\n  };\n\n  _openEventsContextAnalyzer = () => {\n    const { globalObjectsContainer, objectsContainer } = this.props;\n    const eventsContextAnalyzer = new gd.EventsContextAnalyzer(\n      gd.JsPlatform.get(),\n      globalObjectsContainer,\n      objectsContainer\n    );\n\n    const eventsList = new gd.EventsList();\n    getSelectedEvents(this.state.selection).forEach(event =>\n      eventsList.insertEvent(event, eventsList.getEventsCount())\n    );\n\n    eventsContextAnalyzer.launch(eventsList);\n    eventsList.delete();\n\n    this.setState({\n      analyzedEventsContextResult: toEventsContextResult(\n        eventsContextAnalyzer.getEventsContext()\n      ),\n    });\n    eventsContextAnalyzer.delete();\n  };\n\n  _closeEventsContextAnalyzer = () => {\n    this.setState({\n      analyzedEventsContextResult: null,\n    });\n  };\n\n  extractEventsToFunction = () => {\n    const eventsList = new gd.EventsList();\n\n    getSelectedEvents(this.state.selection).forEach(event =>\n      eventsList.insertEvent(event, eventsList.getEventsCount())\n    );\n\n    this.setState({\n      serializedEventsToExtract: serializeToJSObject(eventsList),\n    });\n\n    eventsList.delete();\n  };\n\n  moveEventsIntoNewGroup = () => {\n    const eventsList = new gd.EventsList();\n\n    getSelectedEvents(this.state.selection).forEach(event =>\n      eventsList.insertEvent(event, eventsList.getEventsCount())\n    );\n\n    this._replaceSelectionByGroupOfEvents(eventsList);\n    eventsList.delete();\n  };\n\n  _replaceSelectionByEventsFunction = (\n    extensionName: string,\n    eventsFunction: gdEventsFunction\n  ) => {\n    const contexts = getSelectedEventContexts(this.state.selection);\n    if (!contexts.length) return;\n\n    const newEvents = this.addNewEvent('BuiltinCommonInstructions::Standard', {\n      eventsList: contexts[0].eventsList,\n      indexInList: contexts[0].indexInList,\n    });\n    if (!newEvents.length) {\n      console.error('A new event should have been created');\n      return;\n    }\n\n    const action = createNewInstructionForEventsFunction(\n      extensionName,\n      eventsFunction\n    );\n    const standardEvt = gd.asStandardEvent(newEvents[0]);\n    standardEvt.getActions().push_back(action);\n    action.delete();\n\n    this.deleteSelection({ deleteInstructions: false });\n  };\n\n  _replaceSelectionByGroupOfEvents = (eventsList: gdEventsList) => {\n    const contexts = getSelectedEventContexts(this.state.selection);\n    if (!contexts.length) return;\n\n    const newEvents = this.addNewEvent('BuiltinCommonInstructions::Group', {\n      eventsList: contexts[0].eventsList,\n      indexInList: contexts[0].indexInList,\n    });\n    if (!newEvents.length) {\n      console.error('A new event should have been created');\n      return;\n    }\n\n    const groupEvent = gd.asGroupEvent(newEvents[0]);\n\n    groupEvent.setName('Grouped events');\n    groupEvent.setFolded(true);\n    groupEvent\n      .getSubEvents()\n      .insertEvents(eventsList, 0, eventsList.getEventsCount(), 0);\n\n    this.deleteSelection({ deleteInstructions: false });\n  };\n\n  _ensureEventUnfolded = (cb: () => ?gdBaseEvent) => {\n    const event = cb();\n    if (event && this._eventsTree) {\n      this._eventsTree.unfoldForEvent(event);\n    }\n  };\n\n  _replaceInEvents = (\n    doReplaceInEvents: (inputs: ReplaceInEventsInputs) => void,\n    inputs: ReplaceInEventsInputs\n  ) => {\n    doReplaceInEvents(inputs);\n    this._saveChangesToHistory(() => {\n      if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n    });\n  };\n\n  _searchInEvents = (\n    doSearchInEvents: (inputs: SearchInEventsInputs, cb: () => void) => void,\n    inputs: SearchInEventsInputs\n  ) => {\n    doSearchInEvents(inputs, () => {\n      this.forceUpdate(() => {\n        if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n      });\n    });\n  };\n\n  _onEventMoved = () => {\n    // Move of the event in the list is handled by EventsTree.\n    // This could be refactored and put here if the drag'n'drop of events\n    // is reworked at some point.\n    this._saveChangesToHistory();\n  };\n\n  _renderInstructionEditorDialog = (newInstructionEditorDialog: boolean) => {\n    const {\n      project,\n      scope,\n      globalObjectsContainer,\n      objectsContainer,\n    } = this.props;\n\n    // Choose the dialog to use\n    const Dialog = this.state.inlineInstructionEditorAnchorEl\n      ? NewInstructionEditorMenu\n      : newInstructionEditorDialog\n      ? NewInstructionEditorDialog\n      : InstructionEditorDialog;\n\n    return this.state.editedInstruction.instruction ? (\n      <Dialog\n        project={project}\n        scope={scope}\n        globalObjectsContainer={globalObjectsContainer}\n        objectsContainer={objectsContainer}\n        instruction={this.state.editedInstruction.instruction}\n        isCondition={this.state.editedInstruction.isCondition}\n        isNewInstruction={\n          this.state.editedInstruction.indexInList === undefined\n        }\n        anchorEl={this.state.inlineInstructionEditorAnchorEl}\n        open={true}\n        onCancel={() => this.closeInstructionEditor()}\n        onSubmit={() => {\n          const {\n            instrsList,\n            instruction,\n            indexInList,\n          } = this.state.editedInstruction;\n          if (!instrsList || !instruction) return;\n\n          if (indexInList !== undefined && indexInList !== null) {\n            // Replace an existing instruction\n            instrsList.set(indexInList, instruction);\n          } else {\n            // Add a new instruction\n            instrsList.insert(instruction, instrsList.size());\n          }\n\n          this.closeInstructionEditor(true);\n          ensureSingleOnceInstructions(instrsList);\n          if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n        }}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        openInstructionOrExpression={(extension, type) => {\n          this.closeInstructionEditor();\n          this.props.openInstructionOrExpression(extension, type);\n        }}\n        canPasteInstructions={\n          this.state.editedInstruction.isCondition\n            ? hasClipboardConditions()\n            : hasClipboardActions()\n        }\n        onPasteInstructions={() => {\n          const { instrsList, isCondition } = this.state.editedInstruction;\n          if (!instrsList) return;\n\n          this.pasteInstructionsInInstructionsList({\n            instrsList,\n            isCondition,\n          });\n        }}\n      />\n    ) : (\n      undefined\n    );\n  };\n\n  /**\n   * Call this to ensure that the events sheet stays focused after a potential\n   * lost of focus (for example, after a scroll, the focused element might have\n   * been scrolled out of the view and so removed from the DOM)\n   */\n  _ensureFocused = () => {\n    if (!this._containerDiv || !document) return;\n\n    const containerDivElement = this._containerDiv.current;\n    if (document.activeElement === containerDivElement) {\n      // Focus is already on the container\n      return;\n    }\n    if (containerDivElement) {\n      if (\n        document.activeElement !== document.body &&\n        containerDivElement.contains(document.activeElement)\n      ) {\n        // Focus is already on an element of the container\n        return;\n      }\n\n      // Focus is not on an element of the container, we probably lost the focus\n      // after scrolling or removing an element. Give back the focus to the container.\n      containerDivElement.focus();\n    }\n  };\n\n  render() {\n    const {\n      project,\n      scope,\n      events,\n      onOpenExternalEvents,\n      onOpenLayout,\n      globalObjectsContainer,\n      objectsContainer,\n    } = this.props;\n    if (!project) return null;\n\n    return (\n      <ScreenTypeMeasurer>\n        {screenType => (\n          <ResponsiveWindowMeasurer>\n            {windowWidth => (\n              <PreferencesContext.Consumer>\n                {({ values }) => (\n                  <EventsSearcher\n                    key={events.ptr}\n                    ref={eventSearcher => (this._eventSearcher = eventSearcher)}\n                    events={events}\n                    globalObjectsContainer={globalObjectsContainer}\n                    objectsContainer={objectsContainer}\n                    selection={this.state.selection}\n                  >\n                    {({\n                      eventsSearchResultEvents,\n                      searchFocusOffset,\n                      searchInEvents,\n                      replaceInEvents,\n                      goToPreviousSearchResult,\n                      goToNextSearchResult,\n                    }) => (\n                      <div\n                        className=\"gd-events-sheet\"\n                        style={styles.container}\n                        onKeyDown={this._keyboardShortcuts.onKeyDown}\n                        onKeyUp={this._keyboardShortcuts.onKeyUp}\n                        onDragOver={this._keyboardShortcuts.onDragOver}\n                        ref={this._containerDiv}\n                        tabIndex={0}\n                      >\n                        <EventsTree\n                          ref={eventsTree => (this._eventsTree = eventsTree)}\n                          key={events.ptr}\n                          onScroll={this._ensureFocused}\n                          events={events}\n                          project={project}\n                          scope={scope}\n                          globalObjectsContainer={globalObjectsContainer}\n                          objectsContainer={objectsContainer}\n                          selection={this.state.selection}\n                          onInstructionClick={this.selectInstruction}\n                          onInstructionDoubleClick={this.openInstructionEditor}\n                          onInstructionContextMenu={\n                            this.openInstructionContextMenu\n                          }\n                          onAddInstructionContextMenu={\n                            this.openAddInstructionContextMenu\n                          }\n                          onAddNewInstruction={this.openInstructionEditor}\n                          onPasteInstructions={\n                            this.pasteInstructionsInInstructionsList\n                          }\n                          onMoveToInstruction={this.moveSelectionToInstruction}\n                          onMoveToInstructionsList={\n                            this.moveSelectionToInstructionsList\n                          }\n                          onParameterClick={this.openParameterEditor}\n                          onEventClick={this.selectEvent}\n                          onEventContextMenu={this.openEventContextMenu}\n                          onAddNewEvent={(\n                            eventType: string,\n                            eventsList: gdEventsList\n                          ) => {\n                            this.addNewEvent(eventType, {\n                              eventsList,\n                              indexInList: eventsList.getEventsCount(),\n                            });\n                          }}\n                          onOpenExternalEvents={onOpenExternalEvents}\n                          onOpenLayout={onOpenLayout}\n                          searchResults={eventsSearchResultEvents}\n                          searchFocusOffset={searchFocusOffset}\n                          onEventMoved={this._onEventMoved}\n                          showObjectThumbnails={\n                            values.eventsSheetShowObjectThumbnails\n                          }\n                          screenType={screenType}\n                          windowWidth={windowWidth}\n                          eventsSheetHeight={\n                            this._containerDiv.current\n                              ? this._containerDiv.current.clientHeight\n                              : 0\n                          }\n                        />\n                        {this.state.showSearchPanel && (\n                          <SearchPanel\n                            ref={searchPanel =>\n                              (this._searchPanel = searchPanel)\n                            }\n                            onSearchInEvents={inputs =>\n                              this._searchInEvents(searchInEvents, inputs)\n                            }\n                            onReplaceInEvents={inputs =>\n                              this._replaceInEvents(replaceInEvents, inputs)\n                            }\n                            resultsCount={\n                              eventsSearchResultEvents\n                                ? eventsSearchResultEvents.length\n                                : null\n                            }\n                            hasEventSelected={hasEventSelected(\n                              this.state.selection\n                            )}\n                            onGoToPreviousSearchResult={() =>\n                              this._ensureEventUnfolded(\n                                goToPreviousSearchResult\n                              )\n                            }\n                            onCloseSearchPanel={this._closeSearchPanel}\n                            onGoToNextSearchResult={() =>\n                              this._ensureEventUnfolded(goToNextSearchResult)\n                            }\n                          />\n                        )}\n                        <InlineParameterEditor\n                          open={this.state.inlineEditing}\n                          anchorEl={this.state.inlineEditingAnchorEl}\n                          onRequestClose={this.closeParameterEditor}\n                          project={project}\n                          scope={scope}\n                          globalObjectsContainer={globalObjectsContainer}\n                          objectsContainer={objectsContainer}\n                          isCondition={this.state.editedParameter.isCondition}\n                          instruction={this.state.editedParameter.instruction}\n                          parameterIndex={\n                            this.state.editedParameter.parameterIndex\n                          }\n                          onChange={value => {\n                            const {\n                              instruction,\n                              parameterIndex,\n                            } = this.state.editedParameter;\n                            if (!instruction) return;\n                            instruction.setParameter(parameterIndex, value);\n                            this.setState({\n                              inlineEditingChangesMade: true,\n                            });\n                            if (this._searchPanel)\n                              this._searchPanel.markSearchResultsDirty();\n                          }}\n                          resourceSources={this.props.resourceSources}\n                          onChooseResource={this.props.onChooseResource}\n                          resourceExternalEditors={\n                            this.props.resourceExternalEditors\n                          }\n                        />\n                        <ContextMenu\n                          ref={eventContextMenu =>\n                            (this.eventContextMenu = eventContextMenu)\n                          }\n                          buildMenuTemplate={(i18n: I18nType) => [\n                            {\n                              label: i18n._(t`Edit`),\n                              click: () => this.openEventTextDialog(),\n                              visible:\n                                filterEditableWithEventTextDialog(\n                                  getSelectedEvents(this.state.selection)\n                                ).length > 0,\n                            },\n                            {\n                              label: i18n._(t`Copy`),\n                              click: () => this.copySelection(),\n                              accelerator: 'CmdOrCtrl+C',\n                            },\n                            {\n                              label: i18n._(t`Cut`),\n                              click: () => this.cutSelection(),\n                              accelerator: 'CmdOrCtrl+X',\n                            },\n                            {\n                              label: i18n._(t`Paste`),\n                              click: () => this.pasteEvents(),\n                              enabled: hasClipboardEvents(),\n                              accelerator: 'CmdOrCtrl+V',\n                            },\n                            {\n                              label: i18n._(t`Delete`),\n                              click: () => this.deleteSelection(),\n                              accelerator: 'Delete',\n                            },\n                            {\n                              label: i18n._(t`Toggle disabled`),\n                              click: () => this.toggleDisabled(),\n                              enabled: this._selectionCanToggleDisabled(),\n                            },\n                            { type: 'separator' },\n                            {\n                              label: i18n._(t`Add New Event Below`),\n                              click: () =>\n                                this.addNewEvent(\n                                  'BuiltinCommonInstructions::Standard'\n                                ),\n                            },\n                            {\n                              label: i18n._(t`Add Sub Event`),\n                              click: () => this.addSubEvents(),\n                              enabled: this._selectionCanHaveSubEvents(),\n                            },\n                            {\n                              label: i18n._(t`Add Other`),\n                              submenu: this.state.allEventsMetadata.map(\n                                metadata => {\n                                  return {\n                                    label: metadata.fullName,\n                                    click: () =>\n                                      this.addNewEvent(metadata.type),\n                                  };\n                                }\n                              ),\n                            },\n                            { type: 'separator' },\n                            {\n                              label: i18n._(t`Undo`),\n                              click: this.undo,\n                              enabled: canUndo(this.state.history),\n                              accelerator: 'CmdOrCtrl+Z',\n                            },\n                            {\n                              label: i18n._(t`Redo`),\n                              click: this.redo,\n                              enabled: canRedo(this.state.history),\n                              accelerator: 'CmdOrCtrl+Shift+Z',\n                            },\n                            { type: 'separator' },\n                            {\n                              label: i18n._(t`Extract Events to a Function`),\n                              click: () => this.extractEventsToFunction(),\n                            },\n                            {\n                              label: i18n._(t`Move Events into a Group`),\n                              click: () => this.moveEventsIntoNewGroup(),\n                            },\n                            {\n                              label: i18n._(\n                                t`Analyze Objects Used in this Event`\n                              ),\n                              click: this._openEventsContextAnalyzer,\n                            },\n                          ]}\n                        />\n                        <ContextMenu\n                          ref={instructionContextMenu =>\n                            (this.instructionContextMenu = instructionContextMenu)\n                          }\n                          buildMenuTemplate={(i18n: I18nType) => [\n                            {\n                              label: i18n._(t`Copy`),\n                              click: () => this.copySelection(),\n                              accelerator: 'CmdOrCtrl+C',\n                            },\n                            {\n                              label: i18n._(t`Cut`),\n                              click: () => this.cutSelection(),\n                              accelerator: 'CmdOrCtrl+X',\n                            },\n                            {\n                              label: i18n._(t`Paste`),\n                              click: () => this.pasteInstructions(),\n                              enabled:\n                                hasClipboardConditions() ||\n                                hasClipboardActions(),\n                              accelerator: 'CmdOrCtrl+V',\n                            },\n                            { type: 'separator' },\n                            {\n                              label: i18n._(t`Delete`),\n                              click: () => this.deleteSelection(),\n                              accelerator: 'Delete',\n                            },\n                            { type: 'separator' },\n                            {\n                              label: i18n._(t`Undo`),\n                              click: this.undo,\n                              enabled: canUndo(this.state.history),\n                              accelerator: 'CmdOrCtrl+Z',\n                            },\n                            {\n                              label: i18n._(t`Redo`),\n                              click: this.redo,\n                              enabled: canRedo(this.state.history),\n                              accelerator: 'CmdOrCtrl+Shift+Z',\n                            },\n                            {\n                              label: i18n._(t`Invert Condition`),\n                              click: () => this._invertSelectedConditions(),\n                              visible: hasSelectedAtLeastOneCondition(\n                                this.state.selection\n                              ),\n                            },\n                          ]}\n                        />\n                        {this._renderInstructionEditorDialog(\n                          // Force using the new instruction editor on touch screens.\n                          values.useNewInstructionEditorDialog ||\n                            screenType === 'touch'\n                        )}\n                        {this.state.analyzedEventsContextResult && (\n                          <EventsContextAnalyzerDialog\n                            onClose={this._closeEventsContextAnalyzer}\n                            eventsContextResult={\n                              this.state.analyzedEventsContextResult\n                            }\n                          />\n                        )}\n                        {this.state.serializedEventsToExtract && (\n                          <EventsFunctionExtractorDialog\n                            project={project}\n                            globalObjectsContainer={globalObjectsContainer}\n                            objectsContainer={objectsContainer}\n                            onClose={() =>\n                              this.setState({\n                                serializedEventsToExtract: null,\n                              })\n                            }\n                            serializedEvents={\n                              this.state.serializedEventsToExtract\n                            }\n                            onCreate={(extensionName, eventsFunction) => {\n                              this.props.onCreateEventsFunction(\n                                extensionName,\n                                eventsFunction\n                              );\n                              this._replaceSelectionByEventsFunction(\n                                extensionName,\n                                eventsFunction\n                              );\n                              this.setState({\n                                serializedEventsToExtract: null,\n                              });\n                            }}\n                          />\n                        )}\n                        {this.state.textEditedEvent && (\n                          <EventTextDialog\n                            event={this.state.textEditedEvent}\n                            onApply={() => {\n                              this.closeEventTextDialog();\n                              this._saveChangesToHistory();\n                            }}\n                            onClose={this.closeEventTextDialog}\n                          />\n                        )}\n                        <InfoBar\n                          identifier=\"edit-instruction-explanation\"\n                          message={\n                            <Trans>\n                              Double click on a condition or action to edit it.\n                            </Trans>\n                          }\n                          touchScreenMessage={\n                            <Trans>\n                              Double tap a condition or action to edit it. Long\n                              press to show more options.\n                            </Trans>\n                          }\n                          show={hasInstructionSelected(this.state.selection)}\n                        />\n                      </div>\n                    )}\n                  </EventsSearcher>\n                )}\n              </PreferencesContext.Consumer>\n            )}\n          </ResponsiveWindowMeasurer>\n        )}\n      </ScreenTypeMeasurer>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport {\n  type ParameterInlineRenderer,\n  type ParameterInlineRendererProps,\n} from './ParameterFields/ParameterInlineRenderer.flow';\nimport DefaultField, {\n  renderInlineDefaultField,\n} from './ParameterFields/DefaultField';\nimport RelationalOperatorField, {\n  renderInlineRelationalOperator,\n} from './ParameterFields/RelationalOperatorField';\nimport OperatorField, {\n  renderInlineOperator,\n} from './ParameterFields/OperatorField';\nimport MouseField, { renderInlineMouse } from './ParameterFields/MouseField';\nimport KeyField, { renderInlineKey } from './ParameterFields/KeyField';\nimport ObjectField, {\n  renderInlineObjectWithThumbnail,\n} from './ParameterFields/ObjectField';\nimport YesNoField, { renderInlineYesNo } from './ParameterFields/YesNoField';\nimport TrueFalseField, {\n  renderInlineTrueFalse,\n} from './ParameterFields/TrueFalseField';\nimport ExpressionField from './ParameterFields/ExpressionField';\nimport StringField from './ParameterFields/StringField';\nimport StringWithSelectorField from './ParameterFields/StringWithSelectorField';\nimport BehaviorField from './ParameterFields/BehaviorField';\nimport SceneVariableField, {\n  renderInlineSceneVariable,\n} from './ParameterFields/SceneVariableField';\nimport GlobalVariableField, {\n  renderInlineGlobalVariable,\n} from './ParameterFields/GlobalVariableField';\nimport ObjectVariableField, {\n  renderInlineObjectVariable,\n} from './ParameterFields/ObjectVariableField';\nimport LayerField from './ParameterFields/LayerField';\nimport AudioResourceField from './ParameterFields/AudioResourceField';\nimport VideoResourceField from './ParameterFields/VideoResourceField';\nimport JsonResourceField from './ParameterFields/JsonResourceField';\nimport ColorExpressionField from './ParameterFields/ColorExpressionField';\nimport ForceMultiplierField, {\n  renderInlineForceMultiplier,\n} from './ParameterFields/ForceMultiplierField';\nimport SceneNameField from './ParameterFields/SceneNameField';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nconst gd: libGDevelop = global.gd;\n\nconst components = {\n  default: DefaultField,\n  mouse: MouseField,\n  object: ObjectField,\n  relationalOperator: RelationalOperatorField,\n  operator: OperatorField,\n  yesorno: YesNoField,\n  trueorfalse: TrueFalseField,\n  expression: ExpressionField,\n  string: StringField,\n  stringWithSelector: StringWithSelectorField,\n  behavior: BehaviorField,\n  scenevar: SceneVariableField,\n  globalvar: GlobalVariableField,\n  objectvar: ObjectVariableField,\n  layer: LayerField,\n  key: KeyField,\n  file: DefaultField, //TODO\n  musicfile: AudioResourceField,\n  soundfile: AudioResourceField,\n  videoResource: VideoResourceField,\n  jsonResource: JsonResourceField,\n  color: ColorExpressionField,\n  police: DefaultField, //TODO\n  joyaxis: DefaultField, //TODO\n  forceMultiplier: ForceMultiplierField,\n  sceneName: SceneNameField,\n};\nconst inlineRenderers: { [string]: ParameterInlineRenderer } = {\n  default: renderInlineDefaultField,\n  forceMultiplier: renderInlineForceMultiplier,\n  globalvar: renderInlineGlobalVariable,\n  scenevar: renderInlineSceneVariable,\n  objectvar: renderInlineObjectVariable,\n  key: renderInlineKey,\n  mouse: renderInlineMouse,\n  object: renderInlineObjectWithThumbnail,\n  yesorno: renderInlineYesNo,\n  trueorfalse: renderInlineTrueFalse,\n  operator: renderInlineOperator,\n  relationalOperator: renderInlineRelationalOperator,\n};\nconst userFriendlyTypeName: { [string]: MessageDescriptor } = {\n  mouse: t`Mouse button`,\n  object: t`Object`,\n  relationalOperator: t`Relational operator`,\n  operator: t`Operator`,\n  yesorno: t`Yes or No`,\n  trueorfalse: t`True or False`,\n  expression: t`Number`,\n  string: t`String`,\n  stringWithSelector: t`String`,\n  behavior: t`Behavior`,\n  scenevar: t`Scene variable`,\n  globalvar: t`Global variable`,\n  objectvar: t`Object variable`,\n  layer: t`Layer`,\n  key: t`Keyboard key`,\n  musicfile: t`Audio resource`,\n  soundfile: t`Audio resource`,\n  videoResource: t`Video resource`,\n  jsonResource: t`JSON resource`,\n  color: t`Color`,\n  forceMultiplier: t`Instant or permanent force`,\n  sceneName: t`Scene name`,\n};\n\nexport default {\n  components,\n  getParameterComponent: (rawType: string) => {\n    const fieldType = gd.ParameterMetadata.isObject(rawType)\n      ? 'object'\n      : rawType;\n\n    if (components.hasOwnProperty(fieldType)) return components[fieldType];\n    else return components.default;\n  },\n  renderInlineParameter: (props: ParameterInlineRendererProps): React.Node => {\n    const rawType = props.parameterMetadata.getType();\n    const fieldType = gd.ParameterMetadata.isObject(rawType)\n      ? 'object'\n      : rawType;\n\n    const inlineRenderer =\n      inlineRenderers[fieldType] || inlineRenderers.default;\n    return inlineRenderer(props);\n  },\n  getUserFriendlyTypeName: (rawType: string): ?MessageDescriptor => {\n    const fieldType = gd.ParameterMetadata.isObject(rawType)\n      ? 'object'\n      : rawType;\n\n    return userFriendlyTypeName[fieldType] || null;\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport ObjectSelector from '../../ObjectsList/ObjectSelector';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport { Trans } from '@lingui/macro';\nimport { nameAndIconContainer } from '../EventsTree/ClassNames';\n\nexport default class ObjectField extends React.Component<\n  ParameterFieldProps,\n  {||}\n> {\n  _description: ?string;\n  _longDescription: ?string;\n  _allowedObjectType: ?string;\n  _field: ?ObjectSelector;\n\n  constructor(props: ParameterFieldProps) {\n    super(props);\n\n    const { parameterMetadata } = this.props;\n\n    this._description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    this._longDescription = parameterMetadata\n      ? parameterMetadata.getLongDescription()\n      : undefined;\n\n    this._allowedObjectType = parameterMetadata\n      ? parameterMetadata.getExtraInfo()\n      : undefined;\n  }\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    return (\n      <ObjectSelector\n        margin={this.props.isInline ? 'none' : 'dense'}\n        project={this.props.project}\n        value={this.props.value}\n        onChange={this.props.onChange}\n        onRequestClose={this.props.onRequestClose}\n        allowedObjectType={this._allowedObjectType}\n        globalObjectsContainer={this.props.globalObjectsContainer}\n        objectsContainer={this.props.objectsContainer}\n        floatingLabelText={this._description}\n        helperMarkdownText={this._longDescription}\n        fullWidth\n        errorTextIfInvalid={\n          this._allowedObjectType ? (\n            <Trans>The object does not exist or can't be used here.</Trans>\n          ) : (\n            <Trans>Enter the name of an object.</Trans>\n          )\n        }\n        openOnFocus={\n          !this.props\n            .value /* Only force showing the list if no object is entered, see https://github.com/4ian/GDevelop/issues/859 */\n        }\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n\nexport const renderInlineObjectWithThumbnail = ({\n  value,\n  parameterMetadata,\n  renderObjectThumbnail,\n  MissingParameterValue,\n}: ParameterInlineRendererProps) => {\n  if (!value && !parameterMetadata.isOptional()) {\n    return <MissingParameterValue />;\n  }\n\n  return (\n    <span\n      title={value}\n      className={classNames({\n        [nameAndIconContainer]: true,\n      })}\n    >\n      {renderObjectThumbnail(value)}\n      {value}\n    </span>\n  );\n};\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js-legacy';\n\n/**\n * Create a renderer for an type of object displayed as an icon\n *\n * @extends RenderedInstance\n * @class RenderedIconInstance\n * @constructor\n */\nexport default function makeRenderer(iconPath) {\n  class RenderedIconInstance extends RenderedInstance {\n    constructor(\n      project,\n      layout,\n      instance,\n      associatedObject,\n      pixiContainer,\n      pixiResourcesLoader\n    ) {\n      super(\n        project,\n        layout,\n        instance,\n        associatedObject,\n        pixiContainer,\n        pixiResourcesLoader\n      );\n\n      this._pixiObject = new PIXI.Sprite(PIXI.Texture.from(iconPath));\n      this._pixiContainer.addChild(this._pixiObject);\n    }\n\n    update() {\n      this._pixiObject.position.x = this._instance.getX();\n      this._pixiObject.position.y = this._instance.getY();\n      this._pixiObject.rotation = (this._instance.getAngle() * Math.PI) / 180.0;\n    }\n\n    static getThumbnail(project, resourcesLoader, object) {\n      return iconPath;\n    }\n  }\n\n  return RenderedIconInstance;\n}\n","// @flow\nimport ReactDOM from 'react-dom';\nimport RaisedButton from './RaisedButton';\n\n// If you're searching for button components,\n// take a look at FlatButton or RaisedButton.\n\n/**\n * Focus a button. This won't display the material-ui Ripple effect\n * but is still better than nothing.\n */\nexport const focusButton = (buttonRef: { current: null | RaisedButton }) => {\n  if (buttonRef && buttonRef.current) {\n    const element = ReactDOM.findDOMNode(buttonRef.current);\n    if (element instanceof HTMLButtonElement) {\n      element.focus();\n    } else if (element instanceof HTMLElement) {\n      const children = element.getElementsByTagName('button');\n      if (\n        children &&\n        children.length &&\n        children[0] instanceof HTMLButtonElement\n      ) {\n        children[0].focus();\n      }\n    }\n  }\n};\n","//@flow\nimport { type EnumeratedInstructionOrExpressionMetadata } from '../../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js';\nimport { type ParameterValues } from './ExpressionParametersEditorDialog';\nimport { mapVector } from '../../../Utils/MapFor';\n\nconst filterOutCodeOnlyParameters = (\n  array: Array<string>,\n  expressionMetadata: gdExpressionMetadata | gdInstructionMetadata,\n  firstParameterIndex: number\n) => {\n  const parametersCount = expressionMetadata.getParametersCount();\n\n  return array.filter((parameter, index) => {\n    if (index < firstParameterIndex) return false;\n\n    return (\n      index < parametersCount &&\n      !expressionMetadata.getParameter(index).isCodeOnly()\n    );\n  });\n};\n\nconst filterVisibleParameters = (\n  array: Array<string>,\n  expressionMetadata: gdExpressionMetadata | gdInstructionMetadata,\n  firstParameterIndex: number\n) => {\n  let lastRequiredIndex = -1;\n  let lastProvidedIndex = -1;\n\n  const arrayWithDefaults = array.map((parameter, index) => {\n    const metadata = expressionMetadata.getParameter(index);\n\n    if (!metadata.isOptional()) {\n      lastRequiredIndex = index;\n    }\n\n    if (parameter.length > 0) {\n      lastProvidedIndex = index;\n      return parameter;\n    } else {\n      // Fill default values for intermediate parameters so that the user doesn't have to.\n      return metadata.getDefaultValue();\n    }\n  });\n\n  const lastParameterIndex = Math.max(lastRequiredIndex, lastProvidedIndex, 0);\n\n  return arrayWithDefaults.filter(\n    (parameter, index) =>\n      firstParameterIndex <= index &&\n      index <= lastParameterIndex &&\n      !expressionMetadata.getParameter(index).isCodeOnly()\n  );\n};\n\nexport const getVisibleParameterTypes = (\n  expressionMetadata: EnumeratedInstructionOrExpressionMetadata\n): Array<string> => {\n  const parameterTypes: Array<string> = mapVector(\n    expressionMetadata.metadata.getParameters(),\n    parameterMetadata => parameterMetadata.getType()\n  );\n\n  if (expressionMetadata.scope.objectMetadata) {\n    return filterOutCodeOnlyParameters(\n      parameterTypes,\n      expressionMetadata.metadata,\n      1\n    );\n  } else if (expressionMetadata.scope.behaviorMetadata) {\n    return filterOutCodeOnlyParameters(\n      parameterTypes,\n      expressionMetadata.metadata,\n      2\n    );\n  } else {\n    return filterOutCodeOnlyParameters(\n      parameterTypes,\n      expressionMetadata.metadata,\n      0\n    );\n  }\n};\n\nexport const formatExpressionCall = (\n  expressionInfo: EnumeratedInstructionOrExpressionMetadata,\n  parameterValues: ParameterValues\n): string => {\n  const functionName = expressionInfo.name || '';\n\n  if (expressionInfo.scope.objectMetadata) {\n    const objectName = parameterValues[0];\n\n    const functionArgs = filterVisibleParameters(\n      parameterValues,\n      expressionInfo.metadata,\n      1\n    ).join(', ');\n    return `${objectName}.${functionName}(${functionArgs})`;\n  } else if (expressionInfo.scope.behaviorMetadata) {\n    const objectName = parameterValues[0];\n    const behaviorName = parameterValues[1];\n\n    const functionArgs = filterVisibleParameters(\n      parameterValues,\n      expressionInfo.metadata,\n      2\n    ).join(', ');\n    return `${objectName}.${behaviorName}::${functionName}(${functionArgs})`;\n  } else {\n    const functionArgs = filterVisibleParameters(\n      parameterValues,\n      expressionInfo.metadata,\n      0\n    ).join(', ');\n    return `${functionName}(${functionArgs})`;\n  }\n};\n","// @flow\nimport { type ExpressionParameters } from './ParameterFieldCommons';\nconst gd: libGDevelop = global.gd;\n\n/**\n * Given an instruction or an expression and a parameter number,\n * return the name of the object that this parameter (usually, a \"behavior\" or a \"objectvar\") should use.\n *\n * This is an extension to ParameterMetadataTools.cpp and ParameterMetadataTools.h.\n * It's only here to ease to search of the object name in fields like BehaviorField or\n * ObjectVariableField.\n */\nexport const getLastObjectParameterValue = ({\n  instructionMetadata,\n  instruction,\n  expressionMetadata,\n  expression,\n  parameterIndex,\n}: {|\n  instructionMetadata: ?gdInstructionMetadata,\n  instruction: ?gdInstruction,\n  expressionMetadata: ?gdExpressionMetadata,\n  expression: ?ExpressionParameters,\n  parameterIndex: ?number,\n|}): ?string => {\n  if (parameterIndex === undefined || parameterIndex == null) {\n    // No parameter index given: the parameter is not even in a list of parameters\n    return null;\n  }\n\n  let objectName = null;\n  if (instructionMetadata && instruction) {\n    const objectParameterIndex = gd.ParameterMetadataTools.getObjectParameterIndexFor(\n      instructionMetadata.getParameters(),\n      parameterIndex\n    );\n    if (\n      objectParameterIndex >= 0 &&\n      objectParameterIndex < instruction.getParametersCount()\n    ) {\n      objectName = instruction.getParameter(objectParameterIndex);\n    }\n  } else if (expressionMetadata && expression) {\n    const objectParameterIndex = gd.ParameterMetadataTools.getObjectParameterIndexFor(\n      expressionMetadata.getParameters(),\n      parameterIndex\n    );\n    if (\n      objectParameterIndex >= 0 &&\n      objectParameterIndex < expression.getParametersCount()\n    ) {\n      objectName = expression.getParameter(objectParameterIndex);\n    }\n  }\n\n  return objectName;\n};\n\nexport const getLastObjectParameterObjectType = (\n  parameters: gdVectorParameterMetadata,\n  parameterIndex: number\n) => {\n  const objectParameterIndex = gd.ParameterMetadataTools.getObjectParameterIndexFor(\n    parameters,\n    parameterIndex\n  );\n  if (objectParameterIndex < 0 || objectParameterIndex >= parameters.size()) {\n    return '';\n  }\n\n  return parameters.at(objectParameterIndex).getExtraInfo();\n};\n","// @flow\nimport * as React from 'react';\nimport {\n  enumerateObjectAndBehaviorsInstructions,\n  enumerateAllInstructions,\n  getObjectParameterIndex,\n} from '../../InstructionOrExpression/EnumerateInstructions';\nimport {\n  createTree,\n  type InstructionTreeNode,\n} from '../../InstructionOrExpression/CreateTree';\nimport {\n  type EnumeratedInstructionMetadata,\n  filterEnumeratedInstructionOrExpressionMetadataByScope,\n} from '../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js';\nimport { type EventsScope } from '../../InstructionOrExpression/EventsScope.flow';\nconst gd: libGDevelop = global.gd;\n\n/** Helper to get the gdInstructionMetadata of an instruction. */\nexport const getInstructionMetadata = ({\n  instructionType,\n  isCondition,\n  project,\n}: {|\n  instructionType: string,\n  isCondition: boolean,\n  project: gdProject,\n|}): ?gdInstructionMetadata => {\n  if (!instructionType) return null;\n\n  return isCondition\n    ? gd.MetadataProvider.getConditionMetadata(\n        project.getCurrentPlatform(),\n        instructionType\n      )\n    : gd.MetadataProvider.getActionMetadata(\n        project.getCurrentPlatform(),\n        instructionType\n      );\n};\n\ntype Parameters = {|\n  project: gdProject,\n  instruction: gdInstruction,\n  isCondition: boolean,\n  isNewInstruction: boolean,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n|};\n\ntype NewInstructionEditorState = {|\n  chosenObjectName: ?string,\n  chosenObjectInstructionsInfo: ?Array<EnumeratedInstructionMetadata>,\n  chosenObjectInstructionsInfoTree: ?InstructionTreeNode,\n|};\n\ntype NewInstructionEditorSetters = {|\n  /** Select an instruction - which can be a free or an object instruction. */\n  chooseInstruction: (\n    type: string\n  ) => {| ...NewInstructionEditorState, instruction: gdInstruction |},\n  /** Select an object, so that then this object specific instructions can be searched and selected. */\n  chooseObject: (\n    objectName: string\n  ) => {| ...NewInstructionEditorState, instruction: gdInstruction |},\n  /** Select an instruction for the currently selected object. */\n  chooseObjectInstruction: (\n    type: string\n  ) => {| ...NewInstructionEditorState, instruction: gdInstruction |},\n|};\n\nconst findInstruction = (\n  list: Array<EnumeratedInstructionMetadata>,\n  instructionType: string\n): ?EnumeratedInstructionMetadata => {\n  return list.find(({ type }) => type === instructionType);\n};\n\n/** React Hook handling the state of an instruction editor. */\nexport const useNewInstructionEditor = ({\n  instruction,\n  isCondition,\n  project,\n  isNewInstruction,\n  scope,\n  globalObjectsContainer,\n  objectsContainer,\n}: Parameters): [NewInstructionEditorState, NewInstructionEditorSetters] => {\n  const getChosenObjectState = (\n    objectName: string,\n    discardInstructionTypeIfNotInObjectInstructions: boolean\n  ): NewInstructionEditorState => {\n    const chosenObjectInstructionsInfo = filterEnumeratedInstructionOrExpressionMetadataByScope(\n      enumerateObjectAndBehaviorsInstructions(\n        isCondition,\n        globalObjectsContainer,\n        objectsContainer,\n        objectName\n      ),\n      scope\n    );\n\n    // As we changed to a new object, verify if the instruction is still valid for this object. If not,\n    // discard the chosen instruction - this is to avoid the user creating invalid instructions.\n    if (\n      instruction.getType() &&\n      discardInstructionTypeIfNotInObjectInstructions\n    ) {\n      const instructionMetadata = findInstruction(\n        chosenObjectInstructionsInfo,\n        instruction.getType()\n      );\n      if (!instructionMetadata) {\n        instruction.setType('');\n      }\n    }\n\n    return {\n      chosenObjectName: objectName,\n      chosenObjectInstructionsInfo,\n      chosenObjectInstructionsInfoTree: createTree(\n        chosenObjectInstructionsInfo\n      ),\n    };\n  };\n\n  const getInitialState = (): NewInstructionEditorState => {\n    if (!isNewInstruction) {\n      // Check if the instruction is an object/behavior instruction. If yes\n      // select the object, which is the first parameter of the instruction.\n      const allInstructions = enumerateAllInstructions(isCondition);\n      const instructionType: string = instruction.getType();\n      const enumeratedInstructionMetadata = findInstruction(\n        allInstructions,\n        instructionType\n      );\n      if (\n        enumeratedInstructionMetadata &&\n        (enumeratedInstructionMetadata.scope.objectMetadata ||\n          enumeratedInstructionMetadata.scope.behaviorMetadata)\n      ) {\n        const objectParameterIndex = getObjectParameterIndex(\n          enumeratedInstructionMetadata.metadata\n        );\n        if (objectParameterIndex !== -1) {\n          return getChosenObjectState(\n            instruction.getParameter(objectParameterIndex),\n            false /* Even if the instruction is invalid for the object, show it as it's what we have already */\n          );\n        }\n      }\n    }\n\n    // We're either making a new instruction or editing a free instruction.\n    return {\n      chosenObjectName: null,\n      chosenObjectInstructionsInfo: null,\n      chosenObjectInstructionsInfoTree: null,\n    };\n  };\n\n  const [state, setState] = React.useState(getInitialState);\n\n  const chooseObject = (objectName: string) => {\n    const newState = getChosenObjectState(objectName, true);\n    setState(newState);\n    return {\n      instruction,\n      ...newState,\n    };\n  };\n\n  const chooseObjectInstruction = (type: string) => {\n    instruction.setType(type);\n    if (state.chosenObjectName) {\n      const newState = getChosenObjectState(state.chosenObjectName, true);\n      setState(newState);\n      return {\n        instruction,\n        ...newState,\n      };\n    }\n\n    return {\n      instruction,\n      ...state,\n    };\n  };\n\n  const chooseInstruction = (type: string) => {\n    instruction.setType(type);\n    const newState = {\n      chosenObjectName: null,\n      chosenObjectInstructionsInfo: null,\n      chosenObjectInstructionsInfoTree: null,\n    };\n    setState({\n      chosenObjectName: null,\n      chosenObjectInstructionsInfo: null,\n      chosenObjectInstructionsInfoTree: null,\n    });\n\n    return {\n      instruction,\n      ...newState,\n    };\n  };\n\n  return [\n    state,\n    {\n      chooseInstruction,\n      chooseObject,\n      chooseObjectInstruction,\n    },\n  ];\n};\n","// @flow\nimport React from 'react';\nimport { type Tags, removeTag } from '../Utils/TagsHelper';\nimport Chip from '@material-ui/core/Chip';\n\nconst styles = {\n  chipContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    overflowX: 'auto',\n    marginTop: 4,\n  },\n  chip: {\n    marginRight: 4,\n    marginBottom: 4,\n  },\n};\n\ntype Props = {|\n  tags: Tags,\n  onChange?: Tags => void,\n|};\n\nexport default ({ tags, onChange }: Props) => {\n  if (!tags.length) return null;\n\n  return (\n    <div style={styles.chipContainer}>\n      {tags.map(tag => (\n        <Chip\n          key={tag}\n          size=\"small\"\n          style={styles.chip}\n          onDelete={onChange ? () => onChange(removeTag(tags, tag)) : undefined}\n          label={tag}\n        />\n      ))}\n    </div>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport {\n  type Filters,\n  type TagsTreeNode,\n} from '../../Utils/GDevelopServices/Types.flow';\nimport TreeView from '@material-ui/lab/TreeView';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport PlaceholderLoader from '../PlaceholderLoader';\nimport { type FiltersState, type ChosenCategory } from './FiltersChooser';\n\nconst nodeIdSeparator = ';-/>'; // A seemingly random string to ensure no clashes with tag names.\nconst toNodeId = (nodes: Array<TagsTreeNode>) =>\n  nodes.map(node => node.name).join(nodeIdSeparator);\n\nconst TagsTreeItems = ({\n  tagsTreeNodes,\n  onChoose,\n  parentNodes,\n}: {|\n  parentNodes: Array<TagsTreeNode>,\n  tagsTreeNodes: Array<TagsTreeNode>,\n  onChoose: ChosenCategory => void,\n|}) => {\n  if (!tagsTreeNodes.length) return null;\n\n  return tagsTreeNodes.map(node => {\n    const newParentNodes = [...parentNodes, node];\n    return (\n      <TreeItem\n        nodeId={toNodeId(newParentNodes)}\n        label={node.name}\n        key={node.name}\n        onLabelClick={() => onChoose({ node, parentNodes })}\n        collapseIcon={node.children.length ? <ExpandMoreIcon /> : null}\n        expandIcon={node.children.length ? <ChevronRightIcon /> : null}\n      >\n        <TagsTreeItems\n          tagsTreeNodes={node.children}\n          parentNodes={newParentNodes}\n          onChoose={onChoose}\n        />\n      </TreeItem>\n    );\n  });\n};\n\ntype MemoizedTagsTreeProps = {|\n  allItemsLabel: React.Node,\n  chosenCategory: ?ChosenCategory,\n  setChosenCategory: (?ChosenCategory) => void,\n  allFilters: Filters,\n|};\n\nconst MemoizedTagsTree = React.memo<MemoizedTagsTreeProps>(function TagsTree({\n  allItemsLabel,\n  chosenCategory,\n  setChosenCategory,\n  allFilters,\n}: MemoizedTagsTreeProps) {\n  return (\n    <TreeView\n      selected={\n        chosenCategory\n          ? toNodeId([...chosenCategory.parentNodes, chosenCategory.node])\n          : ''\n      }\n      defaultExpanded={allFilters.tagsTree.map(node => toNodeId([node]))}\n      onNodeSelect={() => {}}\n    >\n      <TreeItem\n        nodeId=\"\"\n        label={allItemsLabel}\n        onLabelClick={() => setChosenCategory(null)}\n      />\n      <TagsTreeItems\n        tagsTreeNodes={allFilters.tagsTree}\n        onChoose={setChosenCategory}\n        parentNodes={[]}\n      />\n    </TreeView>\n  );\n});\n\ntype Props = {|\n  allItemsLabel: React.Node,\n  filtersState: FiltersState,\n  allFilters: ?Filters,\n  error: ?Error,\n|};\n\nexport const CategoryChooser = ({\n  filtersState,\n  allFilters,\n  error,\n  allItemsLabel,\n}: Props) => {\n  if (!allFilters) {\n    return <PlaceholderLoader />;\n  }\n  if (error) {\n    // Error and retry button shown somewhere else in the UI\n    return null;\n  }\n\n  return (\n    <MemoizedTagsTree\n      allItemsLabel={allItemsLabel}\n      chosenCategory={filtersState.chosenCategory}\n      setChosenCategory={filtersState.setChosenCategory}\n      allFilters={allFilters}\n    />\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { type FiltersState, useFilters } from '../UI/Search/FiltersChooser';\nimport { type Filters } from '../Utils/GDevelopServices/Types.flow';\nimport {\n  type AssetShortHeader,\n  type Author,\n  type License,\n  listAllAssets,\n  listAllAuthors,\n  listAllLicenses,\n} from '../Utils/GDevelopServices/Asset';\nimport { useSearchItem } from '../UI/Search/UseSearchItem';\n\nconst defaultSearchText = '';\n\ntype AssetStoreState = {|\n  filters: ?Filters,\n  authors: ?Array<Author>,\n  licenses: ?Array<License>,\n  searchResults: ?Array<AssetShortHeader>,\n  fetchAssetsAndFilters: () => void,\n  error: ?Error,\n  searchText: string,\n  setSearchText: string => void,\n  filtersState: FiltersState,\n|};\n\nexport const AssetStoreContext = React.createContext<AssetStoreState>({\n  filters: null,\n  authors: null,\n  licenses: null,\n  searchResults: null,\n  fetchAssetsAndFilters: () => {},\n  error: null,\n  searchText: '',\n  setSearchText: () => {},\n  filtersState: {\n    chosenFilters: new Set(),\n    addFilter: () => {},\n    removeFilter: () => {},\n    chosenCategory: null,\n    setChosenCategory: () => {},\n  },\n});\n\ntype AssetStoreStateProviderProps = {|\n  children: React.Node,\n|};\n\nconst getAssetShortHeaderSearchTerms = (assetShortHeader: AssetShortHeader) => {\n  return (\n    assetShortHeader.name +\n    '\\n' +\n    assetShortHeader.shortDescription +\n    '\\n' +\n    assetShortHeader.tags.join(', ')\n  );\n};\n\nexport const AssetStoreStateProvider = ({\n  children,\n}: AssetStoreStateProviderProps) => {\n  const [assetShortHeadersById, setAssetShortHeadersById] = React.useState<?{\n    [string]: AssetShortHeader,\n  }>(null);\n  const [filters, setFilters] = React.useState<?Filters>(null);\n  const [authors, setAuthors] = React.useState<?Array<Author>>(null);\n  const [licenses, setLicenses] = React.useState<?Array<License>>(null);\n  const [error, setError] = React.useState<?Error>(null);\n  const isLoading = React.useRef<boolean>(false);\n\n  const [searchText, setSearchText] = React.useState(defaultSearchText);\n  const filtersState = useFilters();\n\n  const fetchAssetsAndFilters = React.useCallback(\n    () => {\n      // Don't attempt to load again assets and filters if they\n      // were loaded already.\n      if (assetShortHeadersById || isLoading.current) return;\n\n      (async () => {\n        setError(null);\n        isLoading.current = true;\n\n        try {\n          const { assetShortHeaders, filters } = await listAllAssets();\n          const authors = await listAllAuthors();\n          const licenses = await listAllLicenses();\n\n          const assetShortHeadersById = {};\n          assetShortHeaders.forEach(assetShortHeader => {\n            assetShortHeadersById[assetShortHeader.id] = assetShortHeader;\n          });\n\n          console.info(\n            `Loaded ${assetShortHeaders.length} assets from the asset store.`\n          );\n          setAssetShortHeadersById(assetShortHeadersById);\n          setFilters(filters);\n          setAuthors(authors);\n          setLicenses(licenses);\n        } catch (error) {\n          console.error(\n            `Unable to load the assets from the asset store:`,\n            error\n          );\n          setError(error);\n        }\n\n        isLoading.current = false;\n      })();\n    },\n    [assetShortHeadersById, isLoading]\n  );\n\n  React.useEffect(\n    () => {\n      // Don't attempt to load again assets and filters if they\n      // were loaded already.\n      if (assetShortHeadersById || isLoading.current) return;\n\n      const timeoutId = setTimeout(() => {\n        console.info('Pre-fetching assets from asset store...');\n        fetchAssetsAndFilters();\n      }, 6000);\n      return () => clearTimeout(timeoutId);\n    },\n    [fetchAssetsAndFilters, assetShortHeadersById, isLoading]\n  );\n\n  const { chosenCategory, chosenFilters } = filtersState;\n  const searchResults: ?Array<AssetShortHeader> = useSearchItem(\n    assetShortHeadersById,\n    getAssetShortHeaderSearchTerms,\n    searchText,\n    chosenCategory,\n    chosenFilters\n  );\n\n  const assetStoreState = React.useMemo(\n    () => ({\n      searchResults,\n      fetchAssetsAndFilters,\n      filters,\n      authors,\n      licenses,\n      error,\n      searchText,\n      setSearchText,\n      filtersState,\n    }),\n    [\n      searchResults,\n      error,\n      filters,\n      authors,\n      licenses,\n      searchText,\n      filtersState,\n      fetchAssetsAndFilters,\n    ]\n  );\n\n  return (\n    <AssetStoreContext.Provider value={assetStoreState}>\n      {children}\n    </AssetStoreContext.Provider>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport { Line } from '../../UI/Grid';\nimport Text from '../../UI/Text';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableHeaderColumn,\n  TableRow,\n  TableRowColumn,\n} from '../../UI/Table';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { ColumnStackLayout } from '../../UI/Layout';\n\nexport type FetchedResources = {|\n  erroredResources: Array<{|\n    resourceName: string,\n    error: Error,\n  |}>,\n  fetchedResources: Array<{|\n    resourceName: string,\n  |}>,\n|};\n\nexport type FetchResourcesArgs = {|\n  project: gdProject,\n  resourceNames: Array<string>,\n  onProgress: (count: number, total: number) => void,\n|};\n\n/**\n * Describe a way to fetch resources so that they can be used in the editor\n * and in previews. For the local editor, this means downloading the resources\n * that have URLs.\n */\nexport type ResourceFetcher = {|\n  getResourcesToFetch: (project: gdProject) => Array<string>,\n  fetchResources: FetchResourcesArgs => Promise<FetchedResources>,\n|};\n\nexport const ResourceFetcherContext = React.createContext<?ResourceFetcher>(\n  null\n);\n\ntype ResourceFetcherDialogProps = {|\n  progress: number,\n  fetchedResources: ?FetchedResources,\n  onAbandon: ?() => void,\n  onRetry: ?() => void,\n|};\n\nexport const ResourceFetcherDialog = ({\n  progress,\n  fetchedResources,\n  onAbandon,\n  onRetry,\n}: ResourceFetcherDialogProps) => {\n  const hasErrors =\n    fetchedResources && fetchedResources.erroredResources.length > 0;\n\n  return (\n    <Dialog\n      actions={[\n        onRetry ? (\n          <RaisedButton\n            label={<Trans>Retry</Trans>}\n            primary\n            onClick={onRetry}\n            key=\"retry\"\n          />\n        ) : null,\n        <FlatButton\n          label={\n            onAbandon ? <Trans>Abandon</Trans> : <Trans>Please wait...</Trans>\n          }\n          disabled={!onAbandon}\n          onClick={onAbandon}\n          key=\"close\"\n        />,\n      ]}\n      cannotBeDismissed={true}\n      noMargin\n      open\n      maxWidth=\"sm\"\n    >\n      <Line>\n        <ColumnStackLayout expand>\n          <Text>\n            {hasErrors ? (\n              <Trans>\n                There were errors when fetching resources for the project.\n              </Trans>\n            ) : (\n              <Trans>Resources needed for the project are downloaded...</Trans>\n            )}\n          </Text>\n          <LinearProgress variant=\"determinate\" value={progress} />\n          {hasErrors && fetchedResources ? (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHeaderColumn>Resource name</TableHeaderColumn>\n                  <TableHeaderColumn>Error</TableHeaderColumn>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {fetchedResources.erroredResources.map(\n                  ({ resourceName, error }) => (\n                    <TableRow key={resourceName}>\n                      <TableRowColumn>{resourceName}</TableRowColumn>\n                      <TableRowColumn>{error.toString()}</TableRowColumn>\n                    </TableRow>\n                  )\n                )}\n              </TableBody>\n            </Table>\n          ) : null}\n        </ColumnStackLayout>\n      </Line>\n    </Dialog>\n  );\n};\n\ntype RetryOrAbandonCallback = () => void;\n\ntype UseResourceFetcherOutput = {\n  /**\n   * Launch the fetching of the resources, if needed. For example, for the desktop\n   * app, this means downloading the resources that have URLs.\n   */\n  ensureResourcesAreFetched: (\n    project: gdProject\n  ) => Promise<{|\n    someResourcesWereFetched: boolean,\n  |}>,\n  /**\n   * Render, if needed, the dialog that will show the progress of resources fetching.\n   */\n  renderResourceFetcherDialog: () => React.Node,\n};\n\n/**\n * Hook allowing to launch the fetching of resources, useful after opening a project\n * or adding assets from the asset store (as they must be downloaded on the desktop app).\n */\nexport const useResourceFetcher = (): UseResourceFetcherOutput => {\n  const resourceFetcher = React.useContext(ResourceFetcherContext);\n  const [progress, setProgress] = React.useState(0);\n  const [isFetching, setIsFetching] = React.useState(false);\n  const [\n    fetchedResources,\n    setFetchedResources,\n  ] = React.useState<?FetchedResources>(null);\n  const [onRetry, setOnRetry] = React.useState<?RetryOrAbandonCallback>(null);\n  const [onAbandon, setOnAbandon] = React.useState<?RetryOrAbandonCallback>(\n    null\n  );\n\n  const ensureResourcesAreFetched = React.useCallback(\n    async (project: gdProject) => {\n      if (!resourceFetcher) throw new Error('No resourceFetcher was defined');\n\n      const resourceNames = resourceFetcher.getResourcesToFetch(project);\n      if (resourceNames.length === 0)\n        return { someResourcesWereFetched: false };\n\n      setProgress(0);\n      setOnRetry(null);\n      setOnAbandon(null);\n      setFetchedResources(null);\n      setIsFetching(true);\n\n      // TODO: handle error?\n      const fetchedResources = await resourceFetcher.fetchResources({\n        project,\n        resourceNames,\n        onProgress: (count, total) => {\n          setProgress((count / total) * 100);\n        },\n      });\n\n      setProgress(100);\n      if (fetchedResources.erroredResources.length === 0) {\n        // No error happened: finish normally, closing the dialog.\n        setIsFetching(false);\n        setFetchedResources(null);\n        return { someResourcesWereFetched: true };\n      }\n\n      // An error happened. Store the errors and offer a way to\n      // retry.\n      return new Promise(resolve => {\n        setOnRetry(\n          (): RetryOrAbandonCallback => () => {\n            // Launch the fetch again, and solve the promise once\n            // this new fetch resolve itself.\n            resolve(ensureResourcesAreFetched(project));\n          }\n        );\n        setOnAbandon(\n          (): RetryOrAbandonCallback => () => {\n            // Abandon: resolve immediately, closing the dialog\n            setIsFetching(false);\n            setFetchedResources(null);\n            resolve({ someResourcesWereFetched: true });\n          }\n        );\n\n        // Display the errors to the user:\n        setFetchedResources(fetchedResources);\n        setIsFetching(false);\n      });\n    },\n    [resourceFetcher]\n  );\n\n  const renderResourceFetcherDialog = () => {\n    const hasErrors =\n      fetchedResources && fetchedResources.erroredResources.length >= 0;\n    if (!isFetching && !hasErrors) return null;\n\n    return (\n      <ResourceFetcherDialog\n        progress={progress}\n        fetchedResources={fetchedResources}\n        onAbandon={onAbandon}\n        onRetry={onRetry}\n      />\n    );\n  };\n\n  return {\n    ensureResourcesAreFetched,\n    renderResourceFetcherDialog,\n  };\n};\n","// @flow\nimport * as PIXI from 'pixi.js-legacy';\n\ntype Props = {|\n  initialViewX: number,\n  initialViewY: number,\n  width: number,\n  height: number,\n  options: any,\n|};\n\nexport default class ViewPosition {\n  viewX: number = 0;\n  viewY: number = 0;\n  _width: number;\n  _height: number;\n  options: any;\n  _pixiContainer = new PIXI.Container();\n\n  constructor({ initialViewX, initialViewY, width, height, options }: Props) {\n    this.viewX = initialViewX;\n    this.viewY = initialViewY;\n    this.options = options;\n    this.resize(width, height);\n  }\n\n  setOptions(options: any) {\n    this.options = options;\n  }\n\n  resize(width: number, height: number) {\n    this._width = width;\n    this._height = height;\n  }\n\n  getWidth() {\n    return this._width;\n  }\n\n  getHeight() {\n    return this._height;\n  }\n\n  /**\n   * Convert a point from the canvas coordinates (for example, the mouse position) to the\n   * \"world\" coordinates.\n   */\n  toSceneCoordinates = (x: number, y: number): [number, number] => {\n    x -= this._width / 2;\n    y -= this._height / 2;\n    x /= Math.abs(this._pixiContainer.scale.x);\n    y /= Math.abs(this._pixiContainer.scale.y);\n\n    var viewRotation = 0;\n    var tmp = x;\n    x =\n      Math.cos((viewRotation / 180) * Math.PI) * x -\n      Math.sin((viewRotation / 180) * Math.PI) * y;\n    y =\n      Math.sin((viewRotation / 180) * Math.PI) * tmp +\n      Math.cos((viewRotation / 180) * Math.PI) * y;\n\n    return [x + this.viewX, y + this.viewY];\n  };\n\n  /**\n   * Convert a point from the \"world\" coordinates (for example, an object position) to the\n   * canvas coordinates.\n   */\n  toCanvasCoordinates = (x: number, y: number): [number, number] => {\n    x -= this.viewX;\n    y -= this.viewY;\n\n    var viewRotation = -0;\n    var tmp = x;\n    x =\n      Math.cos((viewRotation / 180) * Math.PI) * x -\n      Math.sin((viewRotation / 180) * Math.PI) * y;\n    y =\n      Math.sin((viewRotation / 180) * Math.PI) * tmp +\n      Math.cos((viewRotation / 180) * Math.PI) * y;\n\n    x *= Math.abs(this._pixiContainer.scale.x);\n    y *= Math.abs(this._pixiContainer.scale.y);\n\n    return [x + this._width / 2, y + this._height / 2];\n  };\n\n  scrollBy(x: number, y: number) {\n    this.viewX += x;\n    this.viewY += y;\n  }\n\n  scrollTo(x: number, y: number) {\n    this.viewX = x;\n    this.viewY = y;\n  }\n\n  scrollToInstance(instance: gdInitialInstance) {\n    this.viewX = instance.getX();\n    this.viewY = instance.getY();\n  }\n\n  getViewX() {\n    return this.viewX;\n  }\n\n  getViewY() {\n    return this.viewY;\n  }\n\n  getPixiContainer() {\n    return this._pixiContainer;\n  }\n\n  render() {\n    this._pixiContainer.position.x = -this.viewX * this.options.zoomFactor;\n    this._pixiContainer.position.y = -this.viewY * this.options.zoomFactor;\n    this._pixiContainer.position.x += this._width / 2;\n    this._pixiContainer.position.y += this._height / 2;\n    this._pixiContainer.scale.x = this.options.zoomFactor;\n    this._pixiContainer.scale.y = this.options.zoomFactor;\n  }\n}\n","//TODO: Factor with styles.js from LayersList.\nexport default {\n  handleColumn: {\n    width: 24,\n    paddingLeft: 8,\n    paddingRight: 0,\n  },\n  coordinateColumn: {\n    width: 48,\n  },\n  toolColumn: {\n    width: 48,\n  },\n};\n","// @flow\n\nexport const makeTimestampedId = () =>\n  '' + Date.now() + '-' + Math.floor(Math.random() * 1000000);\n","// @flow\nimport flatten from 'lodash/flatten';\nimport { mapFor } from '../../Utils/MapFor';\n\nexport const enumerateVariables = (\n  variablesContainer: ?gdVariablesContainer\n): Array<string> => {\n  if (!variablesContainer) {\n    return [];\n  }\n\n  const enumerateVariableAndChildrenNames = (\n    fullName: string,\n    variable: gdVariable\n  ): Array<string> => {\n    const names = [fullName];\n    if (!variable.isStructure()) return names;\n\n    variable\n      .getAllChildrenNames()\n      .toJSArray()\n      .forEach(childName => {\n        enumerateVariableAndChildrenNames(\n          `${fullName}.${childName}`,\n          variable.getChild(childName)\n        ).forEach(name => {\n          names.push(name);\n        });\n      });\n\n    return names;\n  };\n\n  return flatten(\n    mapFor(0, variablesContainer.count(), i => {\n      if (!variablesContainer) return [];\n\n      return enumerateVariableAndChildrenNames(\n        variablesContainer.getNameAt(i),\n        variablesContainer.getAt(i)\n      );\n    })\n  );\n};\n","// @flow\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport React, { Component } from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { enumerateVariables } from './EnumerateVariables';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport classNames from 'classnames';\nimport { icon, nameAndIconContainer } from '../EventsTree/ClassNames';\nimport SemiControlledAutoComplete, {\n  type SemiControlledAutoCompleteInterface,\n} from '../../UI/SemiControlledAutoComplete';\nimport { TextFieldWithButtonLayout } from '../../UI/Layout';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\n\ntype Props = {\n  ...ParameterFieldProps,\n  variablesContainer: ?gdVariablesContainer,\n  onOpenDialog: ?() => void,\n};\n\nexport default class VariableField extends Component<Props, {||}> {\n  _field: ?SemiControlledAutoCompleteInterface;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const {\n      value,\n      onChange,\n      isInline,\n      onOpenDialog,\n      parameterMetadata,\n      variablesContainer,\n      onRequestClose,\n    } = this.props;\n\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    return (\n      <TextFieldWithButtonLayout\n        renderTextField={() => (\n          <SemiControlledAutoComplete\n            margin={this.props.isInline ? 'none' : 'dense'}\n            floatingLabelText={description}\n            helperMarkdownText={\n              parameterMetadata\n                ? parameterMetadata.getLongDescription()\n                : undefined\n            }\n            fullWidth\n            value={value}\n            onChange={onChange}\n            onRequestClose={onRequestClose}\n            dataSource={enumerateVariables(variablesContainer).map(\n              variableName => ({\n                text: variableName,\n                value: variableName,\n              })\n            )}\n            openOnFocus={!isInline}\n            ref={field => (this._field = field)}\n          />\n        )}\n        renderButton={style =>\n          onOpenDialog && !isInline ? (\n            <RaisedButton\n              icon={<OpenInNew />}\n              disabled={!this.props.variablesContainer}\n              primary\n              style={style}\n              onClick={onOpenDialog}\n            />\n          ) : null\n        }\n      />\n    );\n  }\n}\n\nexport const renderVariableWithIcon = (\n  {\n    value,\n    parameterMetadata,\n    MissingParameterValue,\n  }: ParameterInlineRendererProps,\n  iconPath: string,\n  tooltip: string\n) => {\n  if (!value && !parameterMetadata.isOptional()) {\n    return <MissingParameterValue />;\n  }\n\n  return (\n    <span\n      title={tooltip}\n      className={classNames({\n        [nameAndIconContainer]: true,\n      })}\n    >\n      <img\n        className={classNames({\n          [icon]: true,\n        })}\n        src={iconPath}\n        alt=\"\"\n      />\n      {value}\n    </span>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport './MainFrame.css';\nimport Drawer from '@material-ui/core/Drawer';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Toolbar from './Toolbar';\nimport ProjectTitlebar from './ProjectTitlebar';\nimport PreferencesDialog from './Preferences/PreferencesDialog';\nimport AboutDialog from './AboutDialog';\nimport ProjectManager from '../ProjectManager';\nimport PlatformSpecificAssetsDialog from '../PlatformSpecificAssetsEditor/PlatformSpecificAssetsDialog';\nimport LoaderModal from '../UI/LoaderModal';\nimport DrawerTopBar from '../UI/DrawerTopBar';\nimport CloseConfirmDialog from '../UI/CloseConfirmDialog';\nimport ProfileDialog from '../Profile/ProfileDialog';\nimport Window from '../Utils/Window';\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport {\n  ClosableTabs,\n  ClosableTab,\n  TabContentContainer,\n} from '../UI/ClosableTabs';\nimport {\n  getEditorTabsInitialState,\n  openEditorTab,\n  closeEditorTab,\n  closeOtherEditorTabs,\n  closeAllEditorTabs,\n  changeCurrentTab,\n  getEditors,\n  getCurrentTabIndex,\n  getCurrentTab,\n  closeProjectTabs,\n  closeLayoutTabs,\n  closeExternalLayoutTabs,\n  closeExternalEventsTabs,\n  closeEventsFunctionsExtensionTabs,\n  saveUiSettings,\n  type EditorTabsState,\n  type EditorTab,\n  getEventsFunctionsExtensionEditor,\n  notifyPreviewWillStart,\n} from './EditorTabsHandler';\nimport { timePromise } from '../Utils/TimeFunction';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport HelpFinder from '../HelpFinder';\nimport { renderDebuggerEditorContainer } from './EditorContainers/DebuggerEditorContainer';\nimport { renderEventsEditorContainer } from './EditorContainers/EventsEditorContainer';\nimport { renderExternalEventsEditorContainer } from './EditorContainers/ExternalEventsEditorContainer';\nimport { renderSceneEditorContainer } from './EditorContainers/SceneEditorContainer';\nimport { renderExternalLayoutEditorContainer } from './EditorContainers/ExternalLayoutEditorContainer';\nimport { renderEventsFunctionsExtensionEditorContainer } from './EditorContainers/EventsFunctionsExtensionEditorContainer';\nimport { renderStartPageContainer } from './EditorContainers/StartPage';\nimport { renderResourcesEditorContainer } from './EditorContainers/ResourcesEditorContainer';\nimport ErrorBoundary from '../UI/ErrorBoundary';\nimport SubscriptionDialog from '../Profile/SubscriptionDialog';\nimport ResourcesLoader from '../ResourcesLoader/index';\nimport {\n  type PreviewLauncherInterface,\n  type PreviewLauncherProps,\n  type PreviewLauncherComponent,\n} from '../Export/PreviewLauncher.flow';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport { type JsExtensionsLoader } from '../JsExtensionsLoader';\nimport EventsFunctionsExtensionsContext from '../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext';\nimport {\n  getUpdateNotificationTitle,\n  getUpdateNotificationBody,\n  type UpdateStatus,\n} from './UpdaterTools';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport ChangelogDialogContainer from './Changelog/ChangelogDialogContainer';\nimport { getNotNullTranslationFunction } from '../Utils/i18n/getTranslationFunction';\nimport { type I18n } from '@lingui/core';\nimport { t } from '@lingui/macro';\nimport LanguageDialog from './Preferences/LanguageDialog';\nimport PreferencesContext from './Preferences/PreferencesContext';\nimport { getFunctionNameFromType } from '../EventsFunctionsExtensionsLoader';\nimport { type ExportDialogWithoutExportsProps } from '../Export/ExportDialog';\nimport { type CreateProjectDialogWithComponentsProps } from '../ProjectCreation/CreateProjectDialog';\nimport { getStartupTimesSummary } from '../Utils/StartupTimes';\nimport {\n  type StorageProvider,\n  type StorageProviderOperations,\n  type FileMetadata,\n  type FileMetadataAndStorageProviderName,\n} from '../ProjectsStorage';\nimport OpenFromStorageProviderDialog from '../ProjectsStorage/OpenFromStorageProviderDialog';\nimport SaveToStorageProviderDialog from '../ProjectsStorage/SaveToStorageProviderDialog';\nimport { useOpenConfirmDialog } from '../ProjectsStorage/OpenConfirmDialog';\nimport verifyProjectContent from '../ProjectsStorage/ProjectContentChecker';\nimport UnsavedChangesContext from './UnsavedChangesContext';\nimport { type MainMenuProps } from './MainMenu.flow';\nimport useForceUpdate from '../Utils/UseForceUpdate';\nimport useStateWithCallback from '../Utils/UseSetStateWithCallback';\nimport { useKeyboardShortcuts } from '../KeyboardShortcuts';\nimport useMainFrameCommands from './MainFrameCommands';\nimport CommandPalette, {\n  type CommandPaletteInterface,\n} from '../CommandPalette/CommandPalette';\nimport CommandsContextScopedProvider from '../CommandPalette/CommandsScopedContext';\nimport { isExtensionNameTaken } from '../ProjectManager/EventFunctionExtensionNameVerifier';\nimport {\n  type PreviewState,\n  usePreviewDebuggerServerWatcher,\n} from './PreviewState';\nimport { type HotReloadPreviewButtonProps } from '../HotReload/HotReloadPreviewButton';\nimport HotReloadLogsDialog from '../HotReload/HotReloadLogsDialog';\nimport { useDiscordRichPresence } from '../Utils/UpdateDiscordRichPresence';\nimport { useResourceFetcher } from '../ProjectsStorage/ResourceFetcher';\nimport { delay } from '../Utils/Delay';\nimport { type ExtensionShortHeader } from '../Utils/GDevelopServices/Extension';\n\nconst GD_STARTUP_TIMES = global.GD_STARTUP_TIMES || [];\n\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  drawerContent: {\n    width: 320,\n    overflowX: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n};\n\nconst findStorageProviderFor = (\n  i18n: I18n,\n  storageProviders: Array<StorageProvider>,\n  fileMetadataAndStorageProviderName: FileMetadataAndStorageProviderName\n): ?StorageProvider => {\n  const { storageProviderName } = fileMetadataAndStorageProviderName;\n  const storageProvider = storageProviders.filter(\n    storageProvider => storageProvider.internalName === storageProviderName\n  )[0];\n\n  if (!storageProvider) {\n    const { storageProviderName } = fileMetadataAndStorageProviderName;\n    showErrorBox({\n      message: i18n._(\n        t`Unable to open the project because this provider is unknown: ${storageProviderName}. Try to open the project again from another location.`\n      ),\n      rawError: new Error(\n        `Can't find storage provider called \"${storageProviderName}\"`\n      ),\n      errorId: 'unknown-storage-provider',\n    });\n    return;\n  }\n\n  return storageProvider;\n};\n\nexport type State = {|\n  createDialogOpen: boolean,\n  currentProject: ?gdProject,\n  currentFileMetadata: ?FileMetadata,\n  editorTabs: EditorTabsState,\n  snackMessage: string,\n  snackMessageOpen: boolean,\n  updateStatus: UpdateStatus,\n  openFromStorageProviderDialogOpen: boolean,\n  saveToStorageProviderDialogOpen: boolean,\n  eventsFunctionsExtensionsError: ?Error,\n  gdjsDevelopmentWatcherEnabled: boolean,\n|};\n\nconst initialPreviewState: PreviewState = {\n  previewLayoutName: null,\n  previewExternalLayoutName: null,\n  isPreviewOverriden: false,\n  overridenPreviewLayoutName: null,\n  overridenPreviewExternalLayoutName: null,\n};\n\ntype LaunchPreviewOptions = {\n  networkPreview?: boolean,\n  hotReload?: boolean,\n  projectDataOnlyExport?: boolean,\n};\n\nexport type Props = {\n  integratedEditor?: boolean,\n  introDialog?: React.Element<*>,\n  renderMainMenu?: MainMenuProps => React.Node,\n  renderPreviewLauncher?: (\n    props: PreviewLauncherProps,\n    ref: (previewLauncher: ?PreviewLauncherInterface) => void\n  ) => React.Element<PreviewLauncherComponent>,\n  onEditObject?: gdObject => void,\n  storageProviders: Array<StorageProvider>,\n  getStorageProviderOperations: (\n    ?StorageProvider\n  ) => Promise<StorageProviderOperations>,\n  getStorageProvider: () => StorageProvider,\n  resourceSources: Array<ResourceSource>,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  requestUpdate?: () => void,\n  renderExportDialog?: ExportDialogWithoutExportsProps => React.Node,\n  renderCreateDialog?: CreateProjectDialogWithComponentsProps => React.Node,\n  renderGDJSDevelopmentWatcher?: ?() => React.Node,\n  extensionsLoader?: JsExtensionsLoader,\n  initialFileMetadataToOpen: ?FileMetadata,\n  i18n: I18n,\n};\n\nconst MainFrame = (props: Props) => {\n  const [state, setState]: [\n    State,\n    ((State => State) | State) => Promise<State>,\n  ] = useStateWithCallback(\n    ({\n      createDialogOpen: false,\n      currentProject: null,\n      currentFileMetadata: null,\n      editorTabs: getEditorTabsInitialState(),\n      snackMessage: '',\n      snackMessageOpen: false,\n      updateStatus: { message: '', status: 'unknown' },\n      openFromStorageProviderDialogOpen: false,\n      saveToStorageProviderDialogOpen: false,\n      eventsFunctionsExtensionsError: null,\n      gdjsDevelopmentWatcherEnabled: false,\n    }: State)\n  );\n  const toolbar = React.useRef<?Toolbar>(null);\n  const _resourceSourceDialogs = React.useRef({});\n  const _previewLauncher = React.useRef((null: ?PreviewLauncherInterface));\n  const forceUpdate = useForceUpdate();\n  const [isLoadingProject, setIsLoadingProject] = React.useState<boolean>(\n    false\n  );\n  const [isSavingProject, setIsSavingProject] = React.useState<boolean>(false);\n  const [projectManagerOpen, openProjectManager] = React.useState<boolean>(\n    false\n  );\n  const [introDialogOpen, openIntroDialog] = React.useState<boolean>(false);\n  const [languageDialogOpen, openLanguageDialog] = React.useState<boolean>(\n    false\n  );\n  const [helpFinderDialogOpen, openHelpFinderDialog] = React.useState<boolean>(\n    false\n  );\n  const [\n    platformSpecificAssetsDialogOpen,\n    openPlatformSpecificAssetsDialog,\n  ] = React.useState<boolean>(false);\n  const [aboutDialogOpen, openAboutDialog] = React.useState<boolean>(false);\n  const [profileDialogInitialTab, setProfileDialogInitialTab] = React.useState<\n    'profile' | 'games-dashboard'\n  >('profile');\n  const [profileDialogOpen, openProfileDialog] = React.useState<boolean>(false);\n  const [\n    preferencesDialogOpen,\n    openPreferencesDialog,\n  ] = React.useState<boolean>(false);\n  const [\n    subscriptionDialogOpen,\n    openSubscriptionDialog,\n  ] = React.useState<boolean>(false);\n  const [exportDialogOpen, openExportDialog] = React.useState<boolean>(false);\n  const preferences = React.useContext(PreferencesContext);\n  const [previewLoading, setPreviewLoading] = React.useState<boolean>(false);\n  const [previewState, setPreviewState] = React.useState(initialPreviewState);\n  const commandPaletteRef = React.useRef((null: ?CommandPaletteInterface));\n  const eventsFunctionsExtensionsContext = React.useContext(\n    EventsFunctionsExtensionsContext\n  );\n  const previewDebuggerServer =\n    _previewLauncher.current &&\n    _previewLauncher.current.getPreviewDebuggerServer();\n  const {\n    previewDebuggerIds,\n    hotReloadLogs,\n    clearHotReloadLogs,\n  } = usePreviewDebuggerServerWatcher(previewDebuggerServer);\n  const hasPreviewsRunning = !!previewDebuggerIds.length;\n  const {\n    ensureInteractionHappened,\n    renderOpenConfirmDialog,\n  } = useOpenConfirmDialog();\n  const {\n    ensureResourcesAreFetched,\n    renderResourceFetcherDialog,\n  } = useResourceFetcher();\n  const eventsFunctionsExtensionsState = React.useContext(\n    EventsFunctionsExtensionsContext\n  );\n  const unsavedChanges = React.useContext(UnsavedChangesContext);\n  const [createDialogInitialTab, setCreateDialogInitialTab] = React.useState<\n    'starters' | 'games-showcase'\n  >('starters');\n\n  // This is just for testing, to check if we're getting the right state\n  // and gives us an idea about the number of re-renders.\n  // React.useEffect(() => {\n  //   console.log(state);\n  // });\n\n  const {\n    currentProject,\n    currentFileMetadata,\n    updateStatus,\n    eventsFunctionsExtensionsError,\n  } = state;\n  const {\n    renderExportDialog,\n    renderCreateDialog,\n    resourceSources,\n    renderPreviewLauncher,\n    resourceExternalEditors,\n    getStorageProviderOperations,\n    getStorageProvider,\n    integratedEditor,\n    initialFileMetadataToOpen,\n    introDialog,\n    i18n,\n    renderGDJSDevelopmentWatcher,\n    renderMainMenu,\n  } = props;\n\n  React.useEffect(\n    () => {\n      if (!integratedEditor) openStartPage();\n      GD_STARTUP_TIMES.push(['MainFrameComponentDidMount', performance.now()]);\n      _loadExtensions()\n        .then(() =>\n          // Enable the GDJS development watcher *after* the extensions are loaded,\n          // to avoid the watcher interfering with the extension loading (by updating GDJS,\n          // which could lead in the extension loading failing for some extensions as file\n          // are removed/copied).\n          setState(state => ({\n            ...state,\n            gdjsDevelopmentWatcherEnabled: true,\n          }))\n        )\n        .then(async state => {\n          GD_STARTUP_TIMES.push([\n            'MainFrameComponentDidMountFinished',\n            performance.now(),\n          ]);\n\n          console.info('Startup times:', getStartupTimesSummary());\n\n          const {\n            getAutoOpenMostRecentProject,\n            getRecentProjectFiles,\n            hadProjectOpenedDuringLastSession,\n          } = preferences;\n\n          if (initialFileMetadataToOpen) {\n            // Open the initial file metadata (i.e: the file that was passed\n            // as argument and recognized by a storage provider). Note that the storage\n            // provider is assumed to be already set to the proper one.\n            const storageProviderOperations = await getStorageProviderOperations();\n            const proceed = await ensureInteractionHappened(\n              storageProviderOperations\n            );\n            if (proceed) openInitialFileMetadata();\n          } else if (\n            getAutoOpenMostRecentProject() &&\n            hadProjectOpenedDuringLastSession() &&\n            getRecentProjectFiles()[0]\n          ) {\n            // Re-open the last opened project, if any and if asked to.\n            const fileMetadataAndStorageProviderName = getRecentProjectFiles()[0];\n            const storageProvider = findStorageProviderFor(\n              i18n,\n              props.storageProviders,\n              fileMetadataAndStorageProviderName\n            );\n            if (!storageProvider) return;\n\n            const storageProviderOperations = await getStorageProviderOperations(\n              storageProvider\n            );\n            const proceed = await ensureInteractionHappened(\n              storageProviderOperations\n            );\n            if (proceed)\n              openFromFileMetadataWithStorageProvider(\n                fileMetadataAndStorageProviderName\n              );\n          } else {\n            // Open the intro dialog if not opening any project.\n            if (introDialog && !Window.isDev()) openIntroDialog(true);\n          }\n        })\n        .catch(() => {\n          /* Ignore errors */\n        });\n    },\n    // eslint-disable-next-line\n    []\n  );\n\n  const openProfileDialogWithTab = (\n    profileDialogInitialTab: 'profile' | 'games-dashboard'\n  ) => {\n    setProfileDialogInitialTab(profileDialogInitialTab);\n    openProfileDialog(true);\n  };\n\n  const _showSnackMessage = React.useCallback(\n    (snackMessage: string) => {\n      setState(state => ({\n        ...state,\n        snackMessage,\n        snackMessageOpen: true,\n      }));\n    },\n    [setState]\n  );\n  const _closeSnackMessage = React.useCallback(\n    () => {\n      setState(state => ({\n        ...state,\n        snackMessageOpen: false,\n      }));\n    },\n    [setState]\n  );\n\n  const openInitialFileMetadata = async () => {\n    if (!initialFileMetadataToOpen) return;\n\n    // We use the current storage provider, as it's supposed to be able to open\n    // the initial file metadata. Indeed, it's the responsibility of the `ProjectStorageProviders`\n    // to set the initial storage provider if an initial file metadata is set.\n    const state = await openFromFileMetadata(initialFileMetadataToOpen);\n    if (state)\n      openSceneOrProjectManager({\n        currentProject: state.currentProject,\n        editorTabs: state.editorTabs,\n      });\n  };\n\n  const updateToolbar = React.useCallback(\n    (newEditorTabs = state.editorTabs) => {\n      const editorTab = getCurrentTab(newEditorTabs);\n      if (!editorTab || !editorTab.editorRef) {\n        setEditorToolbar(null);\n        return;\n      }\n\n      editorTab.editorRef.updateToolbar();\n    },\n    [state.editorTabs]\n  );\n\n  React.useEffect(\n    () => {\n      updateToolbar();\n    },\n    [updateToolbar]\n  );\n\n  const _languageDidChange = () => {\n    // A change in the language will automatically be applied\n    // on all React components, as it's handled by GDI18nProvider.\n    // We still have this method that will be called when the language\n    // dialog is closed after a language change. We then reload GDevelop\n    // extensions so that they declare all objects/actions/condition/etc...\n    // using the new language.\n    gd.JsPlatform.get().reloadBuiltinExtensions();\n    _loadExtensions().catch(() => {});\n  };\n\n  const _loadExtensions = (): Promise<void> => {\n    const { extensionsLoader, i18n } = props;\n    if (!extensionsLoader) {\n      console.info(\n        'No extensions loader specified, skipping extensions loading.'\n      );\n      return Promise.reject(new Error('No extension loader specified.'));\n    }\n\n    return extensionsLoader\n      .loadAllExtensions(getNotNullTranslationFunction(i18n))\n      .then(loadingResults => {\n        const successLoadingResults = loadingResults.filter(\n          loadingResult => !loadingResult.result.error\n        );\n        const failLoadingResults = loadingResults.filter(\n          loadingResult =>\n            loadingResult.result.error && !loadingResult.result.dangerous\n        );\n        const dangerousLoadingResults = loadingResults.filter(\n          loadingResult =>\n            loadingResult.result.error && loadingResult.result.dangerous\n        );\n        console.info(`Loaded ${successLoadingResults.length} JS extensions.`);\n        if (failLoadingResults.length) {\n          console.error(\n            `⚠️ Unable to load ${\n              failLoadingResults.length\n            } JS extensions. Please check these errors:`,\n            failLoadingResults\n          );\n        }\n        if (dangerousLoadingResults.length) {\n          console.error(\n            `💣 Dangerous exceptions while loading ${\n              dangerousLoadingResults.length\n            } JS extensions. 🔥 Please check these errors as they will CRASH GDevelop:`,\n            dangerousLoadingResults\n          );\n        }\n      });\n  };\n\n  useDiscordRichPresence(currentProject);\n\n  const closeProject = React.useCallback(\n    (): Promise<void> => {\n      preferences.setHasProjectOpened(false);\n      setPreviewState(initialPreviewState);\n      return setState(state => {\n        if (!currentProject) {\n          // It's important to return a new object to ensure that the promise\n          // will be fired.\n          return { ...state };\n        }\n\n        if (currentProject) {\n          eventsFunctionsExtensionsState.unloadProjectEventsFunctionsExtensions(\n            currentProject\n          );\n          currentProject.delete();\n        }\n\n        return {\n          ...state,\n          currentProject: null,\n          currentFileMetadata: null,\n          editorTabs: closeProjectTabs(state.editorTabs, currentProject),\n        };\n      }).then(() => {});\n    },\n    [currentProject, eventsFunctionsExtensionsState, preferences, setState]\n  );\n\n  const loadFromProject = React.useCallback(\n    async (project: gdProject, fileMetadata: ?FileMetadata): Promise<State> => {\n      if (fileMetadata)\n        preferences.insertRecentProjectFile({\n          fileMetadata,\n          storageProviderName: getStorageProvider().internalName,\n        });\n\n      await closeProject();\n\n      // Make sure that the ResourcesLoader cache is emptied, so that\n      // the URL to a resource with a name in the old project is not re-used\n      // for another resource with the same name in the new project.\n      ResourcesLoader.burstAllUrlsCache();\n      // TODO: Pixi cache should also be burst\n\n      preferences.setHasProjectOpened(true);\n\n      const state = await setState(state => ({\n        ...state,\n        currentProject: project,\n        currentFileMetadata: fileMetadata,\n        createDialogOpen: false,\n      }));\n\n      // Load all the EventsFunctionsExtension when the game is loaded. If they are modified,\n      // their editor will take care of reloading them.\n      eventsFunctionsExtensionsState.loadProjectEventsFunctionsExtensions(\n        project\n      );\n\n      if (fileMetadata) {\n        project.setProjectFile(fileMetadata.fileIdentifier);\n      }\n\n      // Fetch the resources if needed, for example if opening on the desktop app\n      // a project made on the web-app.\n      const { someResourcesWereFetched } = await ensureResourcesAreFetched(\n        project\n      );\n      if (someResourcesWereFetched) {\n        if (unsavedChanges) unsavedChanges.triggerUnsavedChanges();\n      }\n\n      return state;\n    },\n    [\n      unsavedChanges,\n      setState,\n      closeProject,\n      preferences,\n      eventsFunctionsExtensionsState,\n      getStorageProvider,\n      ensureResourcesAreFetched,\n    ]\n  );\n\n  const loadFromSerializedProject = React.useCallback(\n    (\n      serializedProject: gdSerializerElement,\n      fileMetadata: ?FileMetadata\n    ): Promise<State> => {\n      return timePromise(\n        () => {\n          const newProject = gd.ProjectHelper.createNewGDJSProject();\n          newProject.unserializeFrom(serializedProject);\n\n          return loadFromProject(newProject, fileMetadata);\n        },\n        time => console.info(`Unserialization took ${time} ms`)\n      );\n    },\n    [loadFromProject]\n  );\n\n  const openFromFileMetadata = React.useCallback(\n    (fileMetadata: FileMetadata): Promise<?State> => {\n      return getStorageProviderOperations().then(storageProviderOperations => {\n        const {\n          hasAutoSave,\n          onGetAutoSave,\n          onOpen,\n          getOpenErrorMessage,\n        } = storageProviderOperations;\n\n        if (!onOpen) {\n          console.error(\n            'Tried to open a file for a storage without onOpen support:',\n            fileMetadata,\n            storageProviderOperations\n          );\n          return Promise.resolve();\n        }\n\n        const checkForAutosave = (): Promise<FileMetadata> => {\n          if (!hasAutoSave || !onGetAutoSave) {\n            return Promise.resolve(fileMetadata);\n          }\n\n          return hasAutoSave(fileMetadata, true).then(canOpenAutosave => {\n            if (!canOpenAutosave) return fileMetadata;\n\n            const answer = Window.showConfirmDialog(\n              i18n._(\n                t`An autosave file (backup made automatically by GDevelop) that is newer than the project file exists. Would you like to load it instead?`\n              )\n            );\n            if (!answer) return fileMetadata;\n\n            return onGetAutoSave(fileMetadata);\n          });\n        };\n\n        const checkForAutosaveAfterFailure = (): Promise<?FileMetadata> => {\n          if (!hasAutoSave || !onGetAutoSave) {\n            return Promise.resolve(null);\n          }\n\n          return hasAutoSave(fileMetadata, false).then(canOpenAutosave => {\n            if (!canOpenAutosave) return null;\n\n            const answer = Window.showConfirmDialog(\n              i18n._(\n                t`The project file appears to be malformed, but an autosave file exists (backup made automatically by GDevelop). Would you like to try to load it instead?`\n              )\n            );\n            if (!answer) return null;\n\n            return onGetAutoSave(fileMetadata);\n          });\n        };\n\n        setIsLoadingProject(true);\n\n        // Try to find an autosave (and ask user if found)\n        return delay(150)\n          .then(() => checkForAutosave())\n          .then(fileMetadata => onOpen(fileMetadata))\n          .catch(err => {\n            // onOpen failed, tried to find again an autosave\n            return checkForAutosaveAfterFailure().then(fileMetadata => {\n              if (fileMetadata) {\n                return onOpen(fileMetadata);\n              }\n\n              throw err;\n            });\n          })\n          .then(({ content }) => {\n            if (!verifyProjectContent(i18n, content)) {\n              // The content is not recognized and the user was warned. Abort the opening.\n              setIsLoadingProject(false);\n              return;\n            }\n\n            const serializedProject = gd.Serializer.fromJSObject(content);\n            return loadFromSerializedProject(\n              serializedProject,\n              // Note that fileMetadata is the original, unchanged one, even if we're loading\n              // an autosave. If we're for some reason loading an autosave, we still consider\n              // that we're opening the file that was originally requested by the user.\n              fileMetadata\n            ).then(\n              state => {\n                serializedProject.delete();\n                return Promise.resolve(state);\n              },\n              err => {\n                serializedProject.delete();\n                throw err;\n              }\n            );\n          })\n          .catch(error => {\n            const errorMessage = getOpenErrorMessage\n              ? getOpenErrorMessage(error)\n              : t`Check that the path/URL is correct, that you selected a file that is a game file created with GDevelop and that is was not removed.`;\n            showErrorBox({\n              message: [\n                i18n._(t`Unable to open the project.`),\n                i18n._(errorMessage),\n              ].join('\\n'),\n              errorId: 'project-open-error',\n              rawError: error,\n            });\n            setIsLoadingProject(false);\n            return Promise.reject(error);\n          });\n      });\n    },\n    [i18n, getStorageProviderOperations, loadFromSerializedProject]\n  );\n\n  const closeApp = React.useCallback((): void => {\n    return Window.quit();\n  }, []);\n\n  const toggleProjectManager = React.useCallback(\n    () => {\n      if (toolbar.current)\n        openProjectManager(projectManagerOpen => !projectManagerOpen);\n    },\n    [openProjectManager]\n  );\n\n  const setEditorToolbar = (editorToolbar: any) => {\n    if (!toolbar.current) return;\n\n    toolbar.current.setEditorToolbar(editorToolbar);\n  };\n\n  const addLayout = () => {\n    const { currentProject } = state;\n    if (!currentProject) return;\n\n    const name = newNameGenerator('New scene', name =>\n      currentProject.hasLayoutNamed(name)\n    );\n    const newLayout = currentProject.insertNewLayout(\n      name,\n      currentProject.getLayoutsCount()\n    );\n    newLayout.updateBehaviorsSharedData(currentProject);\n    _onProjectItemModified();\n  };\n\n  const addExternalLayout = () => {\n    const { currentProject } = state;\n    if (!currentProject) return;\n\n    const name = newNameGenerator('NewExternalLayout', name =>\n      currentProject.hasExternalLayoutNamed(name)\n    );\n    currentProject.insertNewExternalLayout(\n      name,\n      currentProject.getExternalLayoutsCount()\n    );\n    _onProjectItemModified();\n  };\n\n  const addExternalEvents = () => {\n    const { currentProject } = state;\n    if (!currentProject) return;\n\n    const name = newNameGenerator('NewExternalEvents', name =>\n      currentProject.hasExternalEventsNamed(name)\n    );\n    currentProject.insertNewExternalEvents(\n      name,\n      currentProject.getExternalEventsCount()\n    );\n    _onProjectItemModified();\n  };\n\n  const addEventsFunctionsExtension = () => {\n    const { currentProject } = state;\n    if (!currentProject) return;\n\n    const name = newNameGenerator('NewExtension', name =>\n      currentProject.hasEventsFunctionsExtensionNamed(name)\n    );\n    currentProject.insertNewEventsFunctionsExtension(\n      name,\n      currentProject.getEventsFunctionsExtensionsCount()\n    );\n    _onProjectItemModified();\n  };\n\n  const onInstallExtension = (extensionShortHeader: ExtensionShortHeader) => {\n    const { currentProject } = state;\n    if (!currentProject) return;\n\n    // Close the extension tab before updating/reinstalling the extension.\n    const eventsFunctionsExtensionName = extensionShortHeader.name;\n\n    if (\n      currentProject.hasEventsFunctionsExtensionNamed(\n        eventsFunctionsExtensionName\n      )\n    ) {\n      const eventsFunctionsExtension = currentProject.getEventsFunctionsExtension(\n        eventsFunctionsExtensionName\n      );\n\n      setState(state => ({\n        ...state,\n        editorTabs: closeEventsFunctionsExtensionTabs(\n          state.editorTabs,\n          eventsFunctionsExtension\n        ),\n      }));\n    }\n  };\n\n  const deleteLayout = (layout: gdLayout) => {\n    const { i18n } = props;\n    if (!state.currentProject) return;\n\n    const answer = Window.showConfirmDialog(\n      i18n._(\n        t`Are you sure you want to remove this scene? This can't be undone.`\n      )\n    );\n    if (!answer) return;\n\n    setState(state => ({\n      ...state,\n      editorTabs: closeLayoutTabs(state.editorTabs, layout),\n    })).then(state => {\n      if (state.currentProject)\n        state.currentProject.removeLayout(layout.getName());\n      _onProjectItemModified();\n    });\n  };\n\n  const deleteExternalLayout = (externalLayout: gdExternalLayout) => {\n    const { currentProject } = state;\n    const { i18n } = props;\n    if (!currentProject) return;\n\n    const answer = Window.showConfirmDialog(\n      i18n._(\n        t`Are you sure you want to remove this external layout? This can't be undone.`\n      )\n    );\n    if (!answer) return;\n\n    setState(state => ({\n      ...state,\n      editorTabs: closeExternalLayoutTabs(state.editorTabs, externalLayout),\n    })).then(state => {\n      if (state.currentProject)\n        state.currentProject.removeExternalLayout(externalLayout.getName());\n      _onProjectItemModified();\n    });\n  };\n\n  const deleteExternalEvents = (externalEvents: gdExternalEvents) => {\n    const { i18n } = props;\n    if (!state.currentProject) return;\n\n    const answer = Window.showConfirmDialog(\n      i18n._(\n        t`Are you sure you want to remove these external events? This can't be undone.`\n      )\n    );\n    if (!answer) return;\n\n    setState(state => ({\n      ...state,\n      editorTabs: closeExternalEventsTabs(state.editorTabs, externalEvents),\n    })).then(state => {\n      if (state.currentProject)\n        state.currentProject.removeExternalEvents(externalEvents.getName());\n      _onProjectItemModified();\n    });\n  };\n\n  const deleteEventsFunctionsExtension = (\n    eventsFunctionsExtension: gdEventsFunctionsExtension\n  ) => {\n    const { currentProject } = state;\n    const { i18n } = props;\n    if (!currentProject) return;\n\n    const answer = Window.showConfirmDialog(\n      i18n._(\n        t`Are you sure you want to remove this extension? This can't be undone.`\n      )\n    );\n    if (!answer) return;\n\n    setState(state => ({\n      ...state,\n      editorTabs: closeEventsFunctionsExtensionTabs(\n        state.editorTabs,\n        eventsFunctionsExtension\n      ),\n    })).then(state => {\n      // Unload the Platform extension that was generated from the events\n      // functions extension.\n      const extensionName = eventsFunctionsExtension.getName();\n      eventsFunctionsExtensionsState.unloadProjectEventsFunctionsExtension(\n        currentProject,\n        extensionName\n      );\n\n      currentProject.removeEventsFunctionsExtension(extensionName);\n      _onProjectItemModified();\n\n      // Reload extensions to make sure any extension that would have been relying\n      // on the unloaded extension is updated.\n      eventsFunctionsExtensionsState.reloadProjectEventsFunctionsExtensions(\n        currentProject\n      );\n    });\n  };\n\n  const renameLayout = (oldName: string, newName: string) => {\n    const { currentProject } = state;\n    const { i18n } = props;\n    if (!currentProject) return;\n\n    if (!currentProject.hasLayoutNamed(oldName) || newName === oldName) return;\n\n    if (newName === '') {\n      showWarningBox(\n        i18n._(t`This name cannot be empty, please enter a new name.`),\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    if (currentProject.hasLayoutNamed(newName)) {\n      showWarningBox(i18n._(t`Another scene with this name already exists.`), {\n        delayToNextTick: true,\n      });\n      return;\n    }\n\n    const layout = currentProject.getLayout(oldName);\n    setState(state => ({\n      ...state,\n      editorTabs: closeLayoutTabs(state.editorTabs, layout),\n    })).then(state => {\n      layout.setName(newName);\n      _onProjectItemModified();\n    });\n  };\n\n  const renameExternalLayout = (oldName: string, newName: string) => {\n    const { currentProject } = state;\n    const { i18n } = props;\n    if (!currentProject) return;\n\n    if (!currentProject.hasExternalLayoutNamed(oldName) || newName === oldName)\n      return;\n\n    if (newName === '') {\n      showWarningBox(\n        i18n._(t`This name cannot be empty, please enter a new name.`),\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    if (currentProject.hasExternalLayoutNamed(newName)) {\n      showWarningBox(\n        i18n._(t`Another external layout with this name already exists.`),\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    const externalLayout = currentProject.getExternalLayout(oldName);\n    setState(state => ({\n      ...state,\n      editorTabs: closeExternalLayoutTabs(state.editorTabs, externalLayout),\n    })).then(state => {\n      externalLayout.setName(newName);\n      _onProjectItemModified();\n    });\n  };\n\n  const renameExternalEvents = (oldName: string, newName: string) => {\n    const { currentProject } = state;\n    const { i18n } = props;\n    if (!currentProject) return;\n\n    if (!currentProject.hasExternalEventsNamed(oldName) || newName === oldName)\n      return;\n\n    if (newName === '') {\n      showWarningBox(\n        i18n._(t`This name cannot be empty, please enter a new name.`),\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    if (currentProject.hasExternalEventsNamed(newName)) {\n      showWarningBox(\n        i18n._(t`Other external events with this name already exist.`),\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    const externalEvents = currentProject.getExternalEvents(oldName);\n    setState(state => ({\n      ...state,\n      editorTabs: closeExternalEventsTabs(state.editorTabs, externalEvents),\n    })).then(state => {\n      externalEvents.setName(newName);\n      _onProjectItemModified();\n    });\n  };\n\n  const renameEventsFunctionsExtension = (oldName: string, newName: string) => {\n    const { currentProject } = state;\n    const { i18n } = props;\n    if (!currentProject) return;\n\n    if (\n      !currentProject.hasEventsFunctionsExtensionNamed(oldName) ||\n      newName === oldName\n    )\n      return;\n\n    if (newName === '') {\n      showWarningBox(\n        i18n._(t`This name cannot be empty, please enter a new name.`),\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    if (isExtensionNameTaken(newName, currentProject)) {\n      showWarningBox(\n        i18n._(\n          t`Another extension with this name already exists (or you used a reserved extension name). Please choose another name.`\n        ),\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    if (!gd.Project.validateName(newName)) {\n      showWarningBox(\n        i18n._(\n          t`This name is invalid. Only use alphanumeric characters (0-9, a-z) and underscores. Digits are not allowed as the first character.`\n        ),\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    const eventsFunctionsExtension = currentProject.getEventsFunctionsExtension(\n      oldName\n    );\n    setState(state => ({\n      ...state,\n      editorTabs: closeEventsFunctionsExtensionTabs(\n        state.editorTabs,\n        eventsFunctionsExtension\n      ),\n    })).then(state => {\n      // Refactor the project to update the instructions (and later expressions)\n      // of this extension:\n      gd.WholeProjectRefactorer.renameEventsFunctionsExtension(\n        currentProject,\n        eventsFunctionsExtension,\n        oldName,\n        newName\n      );\n      eventsFunctionsExtension.setName(newName);\n      eventsFunctionsExtensionsState.reloadProjectEventsFunctionsExtensions(\n        currentProject\n      );\n      _onProjectItemModified();\n    });\n  };\n\n  const setPreviewedLayout = (\n    previewLayoutName: ?string,\n    previewExternalLayoutName?: ?string\n  ) => {\n    setPreviewState(\n      previewState =>\n        ({\n          ...previewState,\n          previewLayoutName,\n          previewExternalLayoutName,\n        }: PreviewState)\n    );\n  };\n\n  const setPreviewOverride = ({\n    isPreviewOverriden,\n    overridenPreviewLayoutName,\n    overridenPreviewExternalLayoutName,\n  }) => {\n    setPreviewState(previewState => ({\n      ...previewState,\n      isPreviewOverriden,\n      overridenPreviewLayoutName,\n      overridenPreviewExternalLayoutName,\n    }));\n  };\n\n  const autosaveProjectIfNeeded = React.useCallback(\n    () => {\n      if (!currentProject) return;\n\n      getStorageProviderOperations().then(storageProviderOperations => {\n        if (\n          preferences.values.autosaveOnPreview &&\n          storageProviderOperations.onAutoSaveProject &&\n          currentFileMetadata\n        ) {\n          storageProviderOperations\n            .onAutoSaveProject(currentProject, currentFileMetadata)\n            .catch(err => {\n              console.error('Error while auto-saving the project: ', err);\n              _showSnackMessage(\n                i18n._(\n                  t`There was an error while making an auto-save of the project. Verify that you have permissions to write in the project folder.`\n                )\n              );\n            });\n        }\n      });\n    },\n    [\n      i18n,\n      _showSnackMessage,\n      currentProject,\n      currentFileMetadata,\n      getStorageProviderOperations,\n      preferences.values.autosaveOnPreview,\n    ]\n  );\n\n  const launchPreview = React.useCallback(\n    ({\n      networkPreview,\n      hotReload,\n      projectDataOnlyExport,\n    }: LaunchPreviewOptions) => {\n      if (!currentProject) return;\n      if (currentProject.getLayoutsCount() === 0) return;\n\n      const previewLauncher = _previewLauncher.current;\n      if (!previewLauncher) return;\n\n      setPreviewLoading(true);\n      notifyPreviewWillStart(state.editorTabs);\n\n      const layoutName = previewState.isPreviewOverriden\n        ? previewState.overridenPreviewLayoutName\n        : previewState.previewLayoutName;\n      const externalLayoutName = previewState.isPreviewOverriden\n        ? previewState.overridenPreviewExternalLayoutName\n        : previewState.previewExternalLayoutName;\n\n      const layout =\n        layoutName && currentProject.hasLayoutNamed(layoutName)\n          ? currentProject.getLayout(layoutName)\n          : currentProject.getLayoutAt(0);\n      const externalLayout =\n        externalLayoutName &&\n        currentProject.hasExternalLayoutNamed(externalLayoutName)\n          ? currentProject.getExternalLayout(externalLayoutName)\n          : null;\n\n      autosaveProjectIfNeeded();\n\n      eventsFunctionsExtensionsState\n        .ensureLoadFinished()\n        .then(() =>\n          previewLauncher.launchPreview({\n            project: currentProject,\n            layout,\n            externalLayout,\n            networkPreview: !!networkPreview,\n            hotReload: !!hotReload,\n            projectDataOnlyExport: !!projectDataOnlyExport,\n            getIsMenuBarHiddenInPreview:\n              preferences.getIsMenuBarHiddenInPreview,\n          })\n        )\n        .catch(error => {\n          console.error(\n            'Error caught while launching preview, this should never happen.',\n            error\n          );\n        })\n        .then(() => {\n          setPreviewLoading(false);\n        });\n    },\n    [\n      autosaveProjectIfNeeded,\n      currentProject,\n      eventsFunctionsExtensionsState,\n      previewState,\n      state.editorTabs,\n      preferences.getIsMenuBarHiddenInPreview,\n    ]\n  );\n\n  const launchNewPreview = React.useCallback(\n    () => launchPreview({ networkPreview: false }),\n    [launchPreview]\n  );\n\n  const launchHotReloadPreview = React.useCallback(\n    () => launchPreview({ networkPreview: false, hotReload: true }),\n    [launchPreview]\n  );\n\n  const launchNetworkPreview = React.useCallback(\n    () => launchPreview({ networkPreview: true, hotReload: false }),\n    [launchPreview]\n  );\n\n  const hotReloadPreviewButtonProps: HotReloadPreviewButtonProps = React.useMemo(\n    () => ({\n      hasPreviewsRunning,\n      launchProjectDataOnlyPreview: () =>\n        launchPreview({ hotReload: true, projectDataOnlyExport: true }),\n    }),\n    [hasPreviewsRunning, launchPreview]\n  );\n\n  const openLayout = React.useCallback(\n    (\n      name: string,\n      {\n        openEventsEditor = true,\n        openSceneEditor = true,\n      }: { openEventsEditor: boolean, openSceneEditor: boolean } = {},\n      editorTabs = state.editorTabs\n    ) => {\n      const sceneEditorOptions = {\n        label: name,\n        projectItemName: name,\n        renderEditorContainer: renderSceneEditorContainer,\n        key: 'layout ' + name,\n      };\n      const eventsEditorOptions = {\n        label: name + ' ' + i18n._(t`(Events)`),\n        projectItemName: name,\n        renderEditorContainer: renderEventsEditorContainer,\n        key: 'layout events ' + name,\n        dontFocusTab: openSceneEditor,\n      };\n\n      const tabsWithSceneEditor = openSceneEditor\n        ? openEditorTab(editorTabs, sceneEditorOptions)\n        : editorTabs;\n      const tabsWithSceneAndEventsEditors = openEventsEditor\n        ? openEditorTab(tabsWithSceneEditor, eventsEditorOptions)\n        : tabsWithSceneEditor;\n\n      setState(state => ({\n        ...state,\n        editorTabs: tabsWithSceneAndEventsEditors,\n      }));\n      setIsLoadingProject(false);\n      openProjectManager(false);\n    },\n    [i18n, setState, state.editorTabs]\n  );\n\n  const openExternalEvents = React.useCallback(\n    (name: string) => {\n      setState(state => ({\n        ...state,\n        editorTabs: openEditorTab(state.editorTabs, {\n          label: name,\n          projectItemName: name,\n          renderEditorContainer: renderExternalEventsEditorContainer,\n          key: 'external events ' + name,\n        }),\n      }));\n      openProjectManager(false);\n    },\n    [setState]\n  );\n\n  const openExternalLayout = React.useCallback(\n    (name: string) => {\n      setState(state => ({\n        ...state,\n        editorTabs: openEditorTab(state.editorTabs, {\n          label: name,\n          projectItemName: name,\n          renderEditorContainer: renderExternalLayoutEditorContainer,\n          key: 'external layout ' + name,\n        }),\n      }));\n      openProjectManager(false);\n    },\n    [setState, openProjectManager]\n  );\n\n  const openEventsFunctionsExtension = React.useCallback(\n    (\n      name: string,\n      initiallyFocusedFunctionName?: string,\n      initiallyFocusedBehaviorName?: ?string\n    ) => {\n      setState(state => ({\n        ...state,\n        editorTabs: openEditorTab(state.editorTabs, {\n          label: name + ' ' + i18n._(t`(Extension)`),\n          projectItemName: name,\n          extraEditorProps: {\n            initiallyFocusedFunctionName,\n            initiallyFocusedBehaviorName,\n          },\n          renderEditorContainer: renderEventsFunctionsExtensionEditorContainer,\n          key: 'events functions extension ' + name,\n        }),\n      }));\n      openProjectManager(false);\n    },\n    [setState, openProjectManager, i18n]\n  );\n\n  const openResources = () => {\n    const { i18n } = props;\n    setState(state => ({\n      ...state,\n      editorTabs: openEditorTab(state.editorTabs, {\n        label: i18n._(t`Resources`),\n        projectItemName: null,\n        renderEditorContainer: renderResourcesEditorContainer,\n        key: 'resources',\n      }),\n    }));\n  };\n\n  const openStartPage = React.useCallback(\n    () => {\n      setState(state => ({\n        ...state,\n        editorTabs: openEditorTab(state.editorTabs, {\n          label: i18n._(t`Start Page`),\n          projectItemName: null,\n          renderEditorContainer: renderStartPageContainer,\n          key: 'start page',\n          closable: false,\n        }),\n      }));\n    },\n    [i18n, setState]\n  );\n\n  const openDebugger = React.useCallback(\n    () => {\n      setState(state => ({\n        ...state,\n        editorTabs: openEditorTab(state.editorTabs, {\n          label: i18n._(t`Debugger`),\n          projectItemName: null,\n          renderEditorContainer: renderDebuggerEditorContainer,\n          key: 'debugger',\n        }),\n      }));\n    },\n    [i18n, setState]\n  );\n\n  const launchDebuggerAndPreview = React.useCallback(\n    () => {\n      openDebugger();\n      launchHotReloadPreview();\n    },\n    [openDebugger, launchHotReloadPreview]\n  );\n\n  const openInstructionOrExpression = (\n    extension: gdPlatformExtension,\n    type: string\n  ) => {\n    const { currentProject, editorTabs } = state;\n    if (!currentProject) return;\n\n    const extensionName = extension.getName();\n    if (currentProject.hasEventsFunctionsExtensionNamed(extensionName)) {\n      // It's an events functions extension, open the editor for it.\n      const eventsFunctionsExtension = currentProject.getEventsFunctionsExtension(\n        extensionName\n      );\n      const functionName = getFunctionNameFromType(type);\n\n      const foundTab = getEventsFunctionsExtensionEditor(\n        editorTabs,\n        eventsFunctionsExtension\n      );\n      if (foundTab) {\n        // Open the given function and focus the tab\n        foundTab.editor.selectEventsFunctionByName(\n          functionName.name,\n          functionName.behaviorName\n        );\n        setState(state => ({\n          ...state,\n          editorTabs: changeCurrentTab(editorTabs, foundTab.tabIndex),\n        }));\n      } else {\n        // Open a new editor for the extension and the given function\n        openEventsFunctionsExtension(\n          extensionName,\n          functionName.name,\n          functionName.behaviorName\n        );\n      }\n    } else {\n      // It's not an events functions extension, we should not be here.\n      console.warn(\n        `Extension with name=${extensionName} can not be opened (no editor for this)`\n      );\n    }\n  };\n\n  const _onProjectItemModified = () => {\n    if (unsavedChanges) unsavedChanges.triggerUnsavedChanges();\n    forceUpdate();\n  };\n\n  const onCreateEventsFunction = (\n    extensionName: string,\n    eventsFunction: gdEventsFunction\n  ) => {\n    const { currentProject } = state;\n    if (!currentProject) return;\n\n    // Names are assumed to be already validated\n    const createNewExtension = !currentProject.hasEventsFunctionsExtensionNamed(\n      extensionName\n    );\n    const extension = createNewExtension\n      ? currentProject.insertNewEventsFunctionsExtension(extensionName, 0)\n      : currentProject.getEventsFunctionsExtension(extensionName);\n\n    if (createNewExtension) {\n      extension.setFullName(extensionName);\n      extension.setDescription(\n        'Originally automatically extracted from events of the project'\n      );\n    }\n\n    extension.insertEventsFunction(eventsFunction, 0);\n    eventsFunctionsExtensionsState.loadProjectEventsFunctionsExtensions(\n      currentProject\n    );\n  };\n\n  const openCreateDialog = React.useCallback(\n    (open: boolean = true) => {\n      setCreateDialogInitialTab('starters');\n      setState(state => ({ ...state, createDialogOpen: open }));\n    },\n    [setState]\n  );\n\n  const onOpenGamesShowcase = React.useCallback(\n    (open: boolean = true) => {\n      setCreateDialogInitialTab('games-showcase');\n      setState(state => ({ ...state, createDialogOpen: open }));\n    },\n    [setState]\n  );\n\n  const openOpenFromStorageProviderDialog = React.useCallback(\n    (open: boolean = true) => {\n      setState(state => ({\n        ...state,\n        openFromStorageProviderDialogOpen: open,\n      }));\n    },\n    [setState]\n  );\n\n  const openSceneOrProjectManager = React.useCallback(\n    (newState: {|\n      currentProject: ?gdProject,\n      editorTabs: EditorTabsState,\n    |}) => {\n      const { currentProject, editorTabs } = newState;\n      if (!currentProject) return;\n\n      if (currentProject.getLayoutsCount() === 1) {\n        openLayout(\n          currentProject.getLayoutAt(0).getName(),\n          {\n            openSceneEditor: true,\n            openEventsEditor: true,\n          },\n          editorTabs\n        );\n      } else {\n        setState(state => ({\n          ...state,\n          currentProject,\n          editorTabs,\n        })).then(() => {\n          setIsLoadingProject(false);\n          openProjectManager(true);\n        });\n      }\n    },\n    [openLayout, setState]\n  );\n\n  const chooseProjectWithStorageProviderPicker = React.useCallback(\n    () => {\n      getStorageProviderOperations().then(storageProviderOperations => {\n        if (!storageProviderOperations.onOpenWithPicker) return;\n\n        return storageProviderOperations\n          .onOpenWithPicker()\n          .then(fileMetadata => {\n            if (!fileMetadata) return;\n\n            return openFromFileMetadata(fileMetadata).then(state => {\n              if (state)\n                openSceneOrProjectManager({\n                  currentProject: state.currentProject,\n                  editorTabs: state.editorTabs,\n                });\n              //addRecentFile(fileMetadata);\n            });\n          })\n          .catch(error => {\n            const errorMessage = storageProviderOperations.getOpenErrorMessage\n              ? storageProviderOperations.getOpenErrorMessage(error)\n              : t`Verify that you have the authorizations for reading the file you're trying to access.`;\n            showErrorBox({\n              message: [\n                i18n._(t`Unable to open the project.`),\n                i18n._(errorMessage),\n              ].join('\\n'),\n              errorId: 'project-open-with-picker-error',\n              rawError: error,\n            });\n          });\n      });\n    },\n    [\n      i18n,\n      getStorageProviderOperations,\n      openFromFileMetadata,\n      openSceneOrProjectManager,\n    ]\n  );\n\n  const chooseProject = React.useCallback(\n    () => {\n      if (\n        props.storageProviders.filter(\n          ({ hiddenInOpenDialog }) => !hiddenInOpenDialog\n        ).length > 1\n      ) {\n        openOpenFromStorageProviderDialog();\n      } else {\n        chooseProjectWithStorageProviderPicker();\n      }\n    },\n    [\n      props.storageProviders,\n      openOpenFromStorageProviderDialog,\n      chooseProjectWithStorageProviderPicker,\n    ]\n  );\n\n  const openFromFileMetadataWithStorageProvider = React.useCallback(\n    (\n      fileMetadataAndStorageProviderName: FileMetadataAndStorageProviderName\n    ) => {\n      const { fileMetadata } = fileMetadataAndStorageProviderName;\n      const storageProvider = findStorageProviderFor(\n        i18n,\n        props.storageProviders,\n        fileMetadataAndStorageProviderName\n      );\n\n      if (!storageProvider) return;\n\n      getStorageProviderOperations(storageProvider).then(() => {\n        openFromFileMetadata(fileMetadata)\n          .then(state => {\n            if (state)\n              openSceneOrProjectManager({\n                currentProject: state.currentProject,\n                editorTabs: state.editorTabs,\n              });\n          })\n          .catch(error => {\n            /* Ignore error, it was already surfaced to the user. */\n          });\n      });\n    },\n    [\n      i18n,\n      openFromFileMetadata,\n      openSceneOrProjectManager,\n      props.storageProviders,\n      getStorageProviderOperations,\n    ]\n  );\n\n  const openSaveToStorageProviderDialog = React.useCallback(\n    (open: boolean = true) => {\n      if (open) {\n        // Ensure the project manager is closed as Google Drive storage provider\n        // display a picker that does not play nice with material-ui's overlays.\n        openProjectManager(false);\n      }\n      setState(state => ({ ...state, saveToStorageProviderDialogOpen: open }));\n    },\n    [setState]\n  );\n\n  const saveProjectAsWithStorageProvider = React.useCallback(\n    () => {\n      if (!currentProject) return;\n\n      saveUiSettings(state.editorTabs);\n\n      getStorageProviderOperations().then(storageProviderOperations => {\n        const { onSaveProjectAs } = storageProviderOperations;\n        if (!onSaveProjectAs) {\n          return;\n        }\n\n        // Protect against concurrent saves, which can trigger issues with the\n        // file system.\n        if (isSavingProject) {\n          console.info('Project is already being saved, not triggering save.');\n          return;\n        }\n        setIsSavingProject(true);\n\n        onSaveProjectAs(currentProject, currentFileMetadata)\n          .then(\n            ({ wasSaved, fileMetadata }) => {\n              if (wasSaved) {\n                if (unsavedChanges) unsavedChanges.sealUnsavedChanges();\n                _showSnackMessage(i18n._(t`Project properly saved`));\n\n                if (fileMetadata) {\n                  preferences.insertRecentProjectFile({\n                    fileMetadata,\n                    storageProviderName: getStorageProvider().internalName,\n                  });\n\n                  setState(state => ({\n                    ...state,\n                    currentFileMetadata: fileMetadata,\n                  }));\n                }\n              }\n            },\n            rawError => {\n              showErrorBox({\n                message: i18n._(\n                  t`Unable to save as the project! Please try again by choosing another location.`\n                ),\n                rawError,\n                errorId: 'project-save-as-error',\n              });\n            }\n          )\n          .catch(() => {})\n          .then(() => setIsSavingProject(false));\n      });\n    },\n    [\n      i18n,\n      isSavingProject,\n      currentProject,\n      currentFileMetadata,\n      getStorageProviderOperations,\n      unsavedChanges,\n      setState,\n      state.editorTabs,\n      _showSnackMessage,\n      getStorageProvider,\n      preferences,\n    ]\n  );\n\n  const saveProjectAs = React.useCallback(\n    () => {\n      if (!currentProject) return;\n\n      getStorageProviderOperations().then(storageProviderOperations => {\n        if (\n          props.storageProviders.filter(\n            ({ hiddenInSaveDialog }) => !hiddenInSaveDialog\n          ).length > 1 ||\n          !storageProviderOperations.onSaveProjectAs\n        ) {\n          openSaveToStorageProviderDialog();\n        } else {\n          saveProjectAsWithStorageProvider();\n        }\n      });\n    },\n    [\n      currentProject,\n      getStorageProviderOperations,\n      openSaveToStorageProviderDialog,\n      props.storageProviders,\n      saveProjectAsWithStorageProvider,\n    ]\n  );\n\n  const saveProject = React.useCallback(\n    () => {\n      if (!currentProject) return;\n      if (!currentFileMetadata) {\n        return saveProjectAs();\n      }\n\n      getStorageProviderOperations().then(storageProviderOperations => {\n        const { onSaveProject } = storageProviderOperations;\n        if (!onSaveProject) {\n          return saveProjectAs();\n        }\n\n        saveUiSettings(state.editorTabs);\n        _showSnackMessage(i18n._(t`Saving...`));\n\n        // Protect against concurrent saves, which can trigger issues with the\n        // file system.\n        if (isSavingProject) {\n          console.info('Project is already being saved, not triggering save.');\n          return;\n        }\n        setIsSavingProject(true);\n\n        onSaveProject(currentProject, currentFileMetadata)\n          .then(\n            ({ wasSaved }) => {\n              if (wasSaved) {\n                if (unsavedChanges) unsavedChanges.sealUnsavedChanges();\n                _showSnackMessage(i18n._(t`Project properly saved`));\n              }\n            },\n            rawError => {\n              showErrorBox({\n                message: i18n._(\n                  t`Unable to save as the project! Please try again by choosing another location.`\n                ),\n                rawError,\n                errorId: 'project-save-error',\n              });\n            }\n          )\n          .catch(() => {})\n          .then(() => setIsSavingProject(false));\n      });\n    },\n    [\n      isSavingProject,\n      currentProject,\n      currentFileMetadata,\n      getStorageProviderOperations,\n      _showSnackMessage,\n      i18n,\n      unsavedChanges,\n      saveProjectAs,\n      state.editorTabs,\n    ]\n  );\n\n  const askToCloseProject = React.useCallback(\n    (): Promise<void> => {\n      if (unsavedChanges && unsavedChanges.hasUnsavedChanges) {\n        if (!currentProject) return Promise.resolve();\n\n        const answer = Window.showConfirmDialog(\n          i18n._(\n            t`Close the project? Any changes that have not been saved will be lost.`\n          )\n        );\n        if (!answer) return Promise.resolve();\n      }\n      return closeProject();\n    },\n    [currentProject, unsavedChanges, i18n, closeProject]\n  );\n\n  const _onChangeEditorTab = (value: number) => {\n    setState(state => ({\n      ...state,\n      editorTabs: changeCurrentTab(state.editorTabs, value),\n    })).then(state =>\n      _onEditorTabActive(getCurrentTab(state.editorTabs), state)\n    );\n  };\n\n  const _onEditorTabActive = (\n    editorTab: EditorTab,\n    newState: State = state\n  ) => {\n    updateToolbar(newState.editorTabs);\n    // Ensure the editors shown on the screen are updated. This is for\n    // example useful if global objects have been updated in another editor.\n    if (editorTab.editorRef) {\n      editorTab.editorRef.forceUpdateEditor();\n    }\n  };\n\n  const _onCloseEditorTab = (editorTab: EditorTab) => {\n    saveUiSettings(state.editorTabs);\n    setState(state => ({\n      ...state,\n      editorTabs: closeEditorTab(state.editorTabs, editorTab),\n    }));\n  };\n\n  const _onCloseOtherEditorTabs = (editorTab: EditorTab) => {\n    saveUiSettings(state.editorTabs);\n    setState(state => ({\n      ...state,\n      editorTabs: closeOtherEditorTabs(state.editorTabs, editorTab),\n    }));\n  };\n\n  const _onCloseAllEditorTabs = () => {\n    saveUiSettings(state.editorTabs);\n    setState(state => ({\n      ...state,\n      editorTabs: closeAllEditorTabs(state.editorTabs),\n    }));\n  };\n\n  const onChooseResource: ChooseResourceFunction = (\n    sourceName: string,\n    multiSelection: boolean = true\n  ) => {\n    const { currentProject } = state;\n    const resourceSourceDialog = _resourceSourceDialogs.current[sourceName];\n    if (!resourceSourceDialog) return Promise.resolve([]);\n\n    return resourceSourceDialog.chooseResources(currentProject, multiSelection);\n  };\n\n  const setUpdateStatus = (updateStatus: UpdateStatus) => {\n    setState(state => ({ ...state, updateStatus }));\n\n    const notificationTitle = getUpdateNotificationTitle(updateStatus);\n    const notificationBody = getUpdateNotificationBody(updateStatus);\n    if (notificationTitle) {\n      const notification = new window.Notification(notificationTitle, {\n        body: notificationBody,\n      });\n      notification.onclick = () => openAboutDialog(true);\n    }\n  };\n\n  const simulateUpdateDownloaded = () =>\n    setUpdateStatus({\n      status: 'update-downloaded',\n      message: 'update-downloaded',\n      info: {\n        releaseName: 'Fake update',\n      },\n    });\n\n  const simulateUpdateAvailable = () =>\n    setUpdateStatus({\n      status: 'update-available',\n      message: 'Update available',\n    });\n\n  useKeyboardShortcuts(\n    commandPaletteRef.current\n      ? commandPaletteRef.current.launchCommand\n      : () => {}\n  );\n\n  useMainFrameCommands({\n    i18n,\n    project: state.currentProject,\n    previewEnabled:\n      !!state.currentProject && state.currentProject.getLayoutsCount() > 0,\n    onOpenProjectManager: toggleProjectManager,\n    hasPreviewsRunning,\n    allowNetworkPreview:\n      !!_previewLauncher.current &&\n      _previewLauncher.current.canDoNetworkPreview(),\n    onLaunchPreview: launchNewPreview,\n    onHotReloadPreview: launchHotReloadPreview,\n    onLaunchDebugPreview: launchDebuggerAndPreview,\n    onLaunchNetworkPreview: launchNetworkPreview,\n    onOpenStartPage: openStartPage,\n    onCreateProject: openCreateDialog,\n    onOpenProject: chooseProject,\n    onSaveProject: saveProject,\n    onSaveProjectAs: saveProjectAs,\n    onCloseApp: closeApp,\n    onCloseProject: askToCloseProject,\n    onExportGame: React.useCallback(() => openExportDialog(true), []),\n    onOpenLayout: openLayout,\n    onOpenExternalEvents: openExternalEvents,\n    onOpenExternalLayout: openExternalLayout,\n    onOpenEventsFunctionsExtension: openEventsFunctionsExtension,\n    onOpenCommandPalette: commandPaletteRef.current\n      ? commandPaletteRef.current.open\n      : () => {},\n    onOpenProfile: React.useCallback(\n      () => openProfileDialogWithTab('profile'),\n      []\n    ),\n    onOpenGamesDashboard: React.useCallback(\n      () => openProfileDialogWithTab('games-dashboard'),\n      []\n    ),\n  });\n\n  const showLoader = isLoadingProject || previewLoading;\n\n  return (\n    <div className=\"main-frame\">\n      {!!renderMainMenu &&\n        renderMainMenu({\n          i18n: i18n,\n          project: state.currentProject,\n          onChooseProject: chooseProject,\n          onOpenRecentFile: openFromFileMetadataWithStorageProvider,\n          onSaveProject: saveProject,\n          onSaveProjectAs: saveProjectAs,\n          onCloseProject: askToCloseProject,\n          onCloseApp: closeApp,\n          onExportProject: () => openExportDialog(true),\n          onCreateProject: openCreateDialog,\n          onOpenProjectManager: () => openProjectManager(true),\n          onOpenStartPage: openStartPage,\n          onOpenDebugger: openDebugger,\n          onOpenAbout: () => openAboutDialog(true),\n          onOpenPreferences: () => openPreferencesDialog(true),\n          onOpenLanguage: () => openLanguageDialog(true),\n          onOpenProfile: () => openProfileDialogWithTab('profile'),\n          onOpenGamesDashboard: () =>\n            openProfileDialogWithTab('games-dashboard'),\n          setUpdateStatus: setUpdateStatus,\n          recentProjectFiles: preferences.getRecentProjectFiles(),\n        })}\n      <ProjectTitlebar fileMetadata={currentFileMetadata} />\n      <Drawer\n        open={projectManagerOpen}\n        PaperProps={{\n          style: styles.drawerContent,\n          className: 'safe-area-aware-left-container',\n        }}\n        ModalProps={{\n          keepMounted: true,\n        }}\n        onClose={toggleProjectManager}\n      >\n        <DrawerTopBar\n          title={\n            state.currentProject ? state.currentProject.getName() : 'No project'\n          }\n          displayRightCloseButton\n          onClose={toggleProjectManager}\n        />\n        {currentProject && (\n          <ProjectManager\n            project={currentProject}\n            onOpenExternalEvents={openExternalEvents}\n            onOpenLayout={openLayout}\n            onOpenExternalLayout={openExternalLayout}\n            onOpenEventsFunctionsExtension={openEventsFunctionsExtension}\n            onAddLayout={addLayout}\n            onAddExternalLayout={addExternalLayout}\n            onAddEventsFunctionsExtension={addEventsFunctionsExtension}\n            onAddExternalEvents={addExternalEvents}\n            onInstallExtension={onInstallExtension}\n            onDeleteLayout={deleteLayout}\n            onDeleteExternalLayout={deleteExternalLayout}\n            onDeleteEventsFunctionsExtension={deleteEventsFunctionsExtension}\n            onDeleteExternalEvents={deleteExternalEvents}\n            onRenameLayout={renameLayout}\n            onRenameExternalLayout={renameExternalLayout}\n            onRenameEventsFunctionsExtension={renameEventsFunctionsExtension}\n            onRenameExternalEvents={renameExternalEvents}\n            onSaveProject={saveProject}\n            onSaveProjectAs={saveProjectAs}\n            onCloseProject={() => {\n              askToCloseProject();\n            }}\n            onExportProject={() => openExportDialog(true)}\n            onOpenPreferences={() => openPreferencesDialog(true)}\n            onOpenProfile={() => openProfileDialogWithTab('profile')}\n            onOpenGamesDashboard={() =>\n              openProfileDialogWithTab('games-dashboard')\n            }\n            onOpenResources={() => {\n              openResources();\n              openProjectManager(false);\n            }}\n            onOpenPlatformSpecificAssets={() =>\n              openPlatformSpecificAssetsDialog(true)\n            }\n            onChangeSubscription={() => openSubscriptionDialog(true)}\n            eventsFunctionsExtensionsError={eventsFunctionsExtensionsError}\n            onReloadEventsFunctionsExtensions={() => {\n              // Check if load is sufficient\n              eventsFunctionsExtensionsState.reloadProjectEventsFunctionsExtensions(\n                currentProject\n              );\n            }}\n            freezeUpdate={!projectManagerOpen}\n            unsavedChanges={unsavedChanges}\n            hotReloadPreviewButtonProps={hotReloadPreviewButtonProps}\n          />\n        )}\n        {!state.currentProject && (\n          <EmptyMessage>\n            <Trans>To begin, open or create a new project.</Trans>\n          </EmptyMessage>\n        )}\n      </Drawer>\n      <Toolbar\n        ref={toolbar}\n        showProjectIcons={!props.integratedEditor}\n        hasProject={!!currentProject}\n        toggleProjectManager={toggleProjectManager}\n        exportProject={() => openExportDialog(true)}\n        requestUpdate={props.requestUpdate}\n        simulateUpdateDownloaded={simulateUpdateDownloaded}\n        simulateUpdateAvailable={simulateUpdateAvailable}\n        onOpenDebugger={launchDebuggerAndPreview}\n        hasPreviewsRunning={hasPreviewsRunning}\n        onPreviewWithoutHotReload={launchNewPreview}\n        onNetworkPreview={launchNetworkPreview}\n        onHotReloadPreview={launchHotReloadPreview}\n        showNetworkPreviewButton={\n          !!_previewLauncher.current &&\n          _previewLauncher.current.canDoNetworkPreview()\n        }\n        setPreviewOverride={setPreviewOverride}\n        isPreviewEnabled={\n          !!currentProject && currentProject.getLayoutsCount() > 0\n        }\n        previewState={previewState}\n      />\n      <ClosableTabs hideLabels={!!props.integratedEditor}>\n        {getEditors(state.editorTabs).map((editorTab, id) => {\n          const isCurrentTab = getCurrentTabIndex(state.editorTabs) === id;\n          return (\n            <ClosableTab\n              label={editorTab.label}\n              key={editorTab.key}\n              active={isCurrentTab}\n              onClick={() => _onChangeEditorTab(id)}\n              onClose={() => _onCloseEditorTab(editorTab)}\n              onCloseOthers={() => _onCloseOtherEditorTabs(editorTab)}\n              onCloseAll={_onCloseAllEditorTabs}\n              onActivated={() => _onEditorTabActive(editorTab)}\n              closable={editorTab.closable}\n            />\n          );\n        })}\n      </ClosableTabs>\n      {getEditors(state.editorTabs).map((editorTab, id) => {\n        const isCurrentTab = getCurrentTabIndex(state.editorTabs) === id;\n        return (\n          <TabContentContainer key={editorTab.key} active={isCurrentTab}>\n            <CommandsContextScopedProvider active={isCurrentTab}>\n              <ErrorBoundary>\n                {editorTab.renderEditorContainer({\n                  isActive: isCurrentTab,\n                  extraEditorProps: editorTab.extraEditorProps,\n                  project: currentProject,\n                  ref: editorRef => (editorTab.editorRef = editorRef),\n                  setToolbar: setEditorToolbar,\n                  onChangeSubscription: () => openSubscriptionDialog(true),\n                  projectItemName: editorTab.projectItemName,\n                  setPreviewedLayout,\n                  onOpenExternalEvents: openExternalEvents,\n                  previewDebuggerServer,\n                  hotReloadPreviewButtonProps,\n                  onOpenLayout: name =>\n                    openLayout(name, {\n                      openEventsEditor: true,\n                      openSceneEditor: false,\n                    }),\n                  resourceSources: props.resourceSources,\n                  onChooseResource,\n                  resourceExternalEditors,\n                  onCreateEventsFunction,\n                  openInstructionOrExpression,\n                  unsavedChanges: unsavedChanges,\n                  canOpen: !!props.storageProviders.filter(\n                    ({ hiddenInOpenDialog }) => !hiddenInOpenDialog\n                  ).length,\n                  onOpen: () => chooseProject(),\n                  onCreate: () => openCreateDialog(),\n                  onOpenProjectManager: () => openProjectManager(true),\n                  onCloseProject: () => askToCloseProject(),\n                  onOpenGamesShowcase: () => onOpenGamesShowcase(),\n                  onOpenHelpFinder: () => openHelpFinderDialog(true),\n                  onOpenLanguageDialog: () => openLanguageDialog(true),\n                  onLoadEventsFunctionsExtensions: () => {\n                    eventsFunctionsExtensionsState.loadProjectEventsFunctionsExtensions(\n                      currentProject\n                    );\n                  },\n                  onDeleteResource: (\n                    resource: gdResource,\n                    cb: boolean => void\n                  ) => {\n                    // TODO: Project wide refactoring of objects/events using the resource\n                    cb(true);\n                  },\n                  onRenameResource: (\n                    resource: gdResource,\n                    newName: string,\n                    cb: boolean => void\n                  ) => {\n                    // TODO: Project wide refactoring of objects/events using the resource\n                    cb(true);\n                  },\n                })}\n              </ErrorBoundary>\n            </CommandsContextScopedProvider>\n          </TabContentContainer>\n        );\n      })}\n      <CommandPalette ref={commandPaletteRef} />\n      <LoaderModal show={showLoader} />\n      <HelpFinder\n        open={helpFinderDialogOpen}\n        onClose={() => openHelpFinderDialog(false)}\n      />\n      <Snackbar\n        open={state.snackMessageOpen}\n        autoHideDuration={3000}\n        onClose={_closeSnackMessage}\n        ContentProps={{\n          'aria-describedby': 'snackbar-message',\n        }}\n        message={<span id=\"snackbar-message\">{state.snackMessage}</span>}\n      />\n      {!!renderExportDialog &&\n        exportDialogOpen &&\n        renderExportDialog({\n          onClose: () => openExportDialog(false),\n          onChangeSubscription: () => {\n            openExportDialog(false);\n            openSubscriptionDialog(true);\n          },\n          project: state.currentProject,\n        })}\n      {!!renderCreateDialog &&\n        state.createDialogOpen &&\n        renderCreateDialog({\n          open: state.createDialogOpen,\n          initialTab: createDialogInitialTab,\n          onClose: () => openCreateDialog(false),\n          onOpen: async (storageProvider, fileMetadata) => {\n            await setState(state => ({ ...state, createDialogOpen: false }));\n            await getStorageProviderOperations(storageProvider);\n            const state = await openFromFileMetadata(fileMetadata);\n\n            if (state) {\n              if (state.currentProject) state.currentProject.resetProjectUuid();\n              openSceneOrProjectManager({\n                currentProject: state.currentProject,\n                editorTabs: state.editorTabs,\n              });\n            }\n          },\n          onCreate: async (project, storageProvider, fileMetadata) => {\n            await setState(state => ({ ...state, createDialogOpen: false }));\n            await getStorageProviderOperations(storageProvider);\n            const state = await loadFromProject(project, fileMetadata);\n\n            if (state.currentProject) state.currentProject.resetProjectUuid();\n            openSceneOrProjectManager({\n              currentProject: state.currentProject,\n              editorTabs: state.editorTabs,\n            });\n          },\n        })}\n      {!!introDialog &&\n        introDialogOpen &&\n        React.cloneElement(introDialog, {\n          open: true,\n          onClose: () => openIntroDialog(false),\n        })}\n      {!!currentProject && platformSpecificAssetsDialogOpen && (\n        <PlatformSpecificAssetsDialog\n          project={currentProject}\n          open\n          onApply={() => openPlatformSpecificAssetsDialog(false)}\n          onClose={() => openPlatformSpecificAssetsDialog(false)}\n          resourceSources={resourceSources}\n          onChooseResource={onChooseResource}\n          resourceExternalEditors={resourceExternalEditors}\n        />\n      )}\n      {!!renderPreviewLauncher &&\n        renderPreviewLauncher(\n          {\n            getIncludeFileHashs:\n              eventsFunctionsExtensionsContext.getIncludeFileHashs,\n            onExport: () => openExportDialog(true),\n            onChangeSubscription: () => openSubscriptionDialog(true),\n          },\n          (previewLauncher: ?PreviewLauncherInterface) => {\n            _previewLauncher.current = previewLauncher;\n          }\n        )}\n      {resourceSources.map(\n        (resourceSource, index): React.Node => {\n          const Component = resourceSource.component;\n          return (\n            <Component\n              key={resourceSource.name}\n              ref={dialog =>\n                (_resourceSourceDialogs.current[resourceSource.name] = dialog)\n              }\n              i18n={i18n}\n              getLastUsedPath={preferences.getLastUsedPath}\n              setLastUsedPath={preferences.setLastUsedPath}\n            />\n          );\n        }\n      )}\n      {profileDialogOpen && (\n        <ProfileDialog\n          currentProject={currentProject}\n          initialTab={profileDialogInitialTab}\n          open\n          onClose={() => openProfileDialog(false)}\n          onChangeSubscription={() => openSubscriptionDialog(true)}\n        />\n      )}\n      {subscriptionDialogOpen && (\n        <SubscriptionDialog\n          onClose={() => {\n            openSubscriptionDialog(false);\n          }}\n          open\n        />\n      )}\n      {preferencesDialogOpen && (\n        <PreferencesDialog\n          i18n={props.i18n}\n          onClose={() => openPreferencesDialog(false)}\n        />\n      )}\n      {languageDialogOpen && (\n        <LanguageDialog\n          open\n          onClose={languageChanged => {\n            openLanguageDialog(false);\n            if (languageChanged) {\n              _languageDidChange();\n            }\n          }}\n        />\n      )}\n      {aboutDialogOpen && (\n        <AboutDialog\n          open\n          onClose={() => openAboutDialog(false)}\n          updateStatus={updateStatus}\n        />\n      )}\n      {state.openFromStorageProviderDialogOpen && (\n        <OpenFromStorageProviderDialog\n          onClose={() => openOpenFromStorageProviderDialog(false)}\n          storageProviders={props.storageProviders}\n          onChooseProvider={storageProvider => {\n            openOpenFromStorageProviderDialog(false);\n            props.getStorageProviderOperations(storageProvider).then(() => {\n              chooseProjectWithStorageProviderPicker();\n            });\n          }}\n          onCreateNewProject={() => {\n            openOpenFromStorageProviderDialog(false);\n            openCreateDialog(true);\n          }}\n        />\n      )}\n      {state.saveToStorageProviderDialogOpen && (\n        <SaveToStorageProviderDialog\n          onClose={() => openSaveToStorageProviderDialog(false)}\n          storageProviders={props.storageProviders}\n          onChooseProvider={storageProvider => {\n            openSaveToStorageProviderDialog(false);\n            props.getStorageProviderOperations(storageProvider).then(() => {\n              saveProjectAsWithStorageProvider();\n            });\n          }}\n        />\n      )}\n      {renderOpenConfirmDialog()}\n      {renderResourceFetcherDialog()}\n      <CloseConfirmDialog\n        shouldPrompt={!!state.currentProject}\n        i18n={props.i18n}\n        language={props.i18n.language}\n        hasUnsavedChanges={!!unsavedChanges && unsavedChanges.hasUnsavedChanges}\n      />\n      <ChangelogDialogContainer />\n      {state.gdjsDevelopmentWatcherEnabled &&\n        renderGDJSDevelopmentWatcher &&\n        renderGDJSDevelopmentWatcher()}\n      {!!hotReloadLogs.length && (\n        <HotReloadLogsDialog\n          logs={hotReloadLogs}\n          onClose={clearHotReloadLogs}\n          onLaunchNewPreview={() => {\n            clearHotReloadLogs();\n            launchNewPreview();\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default MainFrame;\n","// @flow\n// See ElectronEventsBridge, AboutDialog and electron-app/main.js for handling the updates.\n\nexport type UpdateStatus = {\n  message: string,\n  status:\n    | 'checking-for-update'\n    | 'update-available'\n    | 'update-not-available'\n    | 'error'\n    | 'download-progress'\n    | 'update-downloaded'\n    | 'unknown',\n};\n\nexport const getUpdateNotificationTitle = (updateStatus: UpdateStatus) => {\n  if (updateStatus.status === 'update-available')\n    return 'A new update is available!';\n\n  return '';\n};\n\nexport const getUpdateNotificationBody = (updateStatus: UpdateStatus) => {\n  if (updateStatus.status === 'update-available')\n    return 'It will be downloaded and installed automatically (unless you deactivated this in preferences)';\n\n  return '';\n};\n\nexport const getUpdateStatusLabel = (status: string) => {\n  if (status === 'checking-for-update') return 'Checking for update...';\n  if (status === 'update-available') return 'A new update is available!';\n  if (status === 'update-not-available')\n    return \"No update available. You're using the latest version!\";\n  if (status === 'error') return 'Error while checking update';\n  if (status === 'download-progress')\n    return 'A new update is being downloaded...';\n  if (status === 'update-downloaded')\n    return 'A new update will be installed after you quit and relaunch GDevelop';\n  return '';\n};\n\nexport const getUpdateButtonLabel = (status: string) => {\n  if (status === 'update-available') return 'Update GDevelop to latest version';\n  return 'Check again for new updates';\n};\n\nexport const canDownloadUpdate = (status: string) => {\n  return status === 'update-available';\n};\n","// @flow\nimport React from 'react';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport IconButton from '../IconButton';\nimport { getHelpLink } from '../../Utils/HelpLink';\nimport Window from '../../Utils/Window';\n\ntype PropsType = {|\n  helpPagePath: ?string,\n  disabled?: boolean,\n  style?: {|\n    padding?: number,\n    width?: number,\n    height?: number,\n    transform?: string,\n    transition?: string,\n    opacity?: number,\n    margin?: number,\n    marginRight?: number,\n    marginLeft?: number,\n    marginTop?: number,\n    marginBottom?: number,\n  |},\n  size?: 'small',\n|};\n\n/**\n * The icon that can be used in any dialog to open a help page\n */\nexport default (props: PropsType) => {\n  const { helpPagePath } = props;\n  if (!helpPagePath) return null;\n\n  return (\n    <IconButton\n      onClick={() => Window.openExternalURL(getHelpLink(helpPagePath))}\n      disabled={props.disabled}\n      style={props.style}\n      size={props.size}\n    >\n      <HelpOutline />\n    </IconButton>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport flatten from 'lodash/flatten';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport { mapFor } from '../Utils/MapFor';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport VariableRow from './VariableRow';\nimport EditVariableRow from './EditVariableRow';\nimport styles from './styles';\nimport {\n  getInitialSelection,\n  hasSelection,\n  addToSelection,\n  getSelection,\n} from '../Utils/SelectionHandler';\nimport { CLIPBOARD_KIND } from './ClipboardKind';\nimport Clipboard, { SafeExtractor } from '../Utils/Clipboard';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\nimport { type VariableOrigin } from './VariablesList.flow';\n\nconst gd: libGDevelop = global.gd;\n\nconst SortableVariableRow = SortableElement(VariableRow);\nconst SortableAddVariableRow = SortableElement(EditVariableRow);\n\nclass VariablesListBody extends React.Component<*, *> {\n  render() {\n    return <div>{this.props.children}</div>;\n  }\n}\n\nconst SortableVariablesListBody = SortableContainer(VariablesListBody);\nSortableVariablesListBody.muiName = 'TableBody';\n\ntype VariableAndName = {| name: string, ptr: number, variable: gdVariable |};\n\ntype Props = {|\n  variablesContainer: gdVariablesContainer,\n  inheritedVariablesContainer?: ?gdVariablesContainer,\n  emptyExplanationMessage?: React.Node,\n  emptyExplanationSecondMessage?: React.Node,\n  onSizeUpdated?: () => void,\n  commitVariableValueOnBlur?: boolean,\n|};\ntype State = {|\n  nameErrors: { [string]: string },\n  selectedVariables: { [number]: ?VariableAndName },\n  mode: 'select' | 'move',\n|};\n\nexport default class VariablesList extends React.Component<Props, State> {\n  state = {\n    nameErrors: {},\n    selectedVariables: getInitialSelection(),\n    mode: 'select',\n  };\n\n  _selectVariable = (variableAndName: VariableAndName, select: boolean) => {\n    this.setState({\n      selectedVariables: addToSelection(\n        this.state.selectedVariables,\n        variableAndName,\n        select\n      ),\n    });\n  };\n\n  copySelection = () => {\n    Clipboard.set(\n      CLIPBOARD_KIND,\n      getSelection(this.state.selectedVariables).map(({ name, variable }) => ({\n        name,\n        serializedVariable: serializeToJSObject(variable),\n      }))\n    );\n  };\n\n  paste = () => {\n    const { variablesContainer, inheritedVariablesContainer } = this.props;\n    if (!Clipboard.has(CLIPBOARD_KIND)) return;\n\n    const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n    const variablesContent = SafeExtractor.extractArray(clipboardContent);\n    if (!variablesContent) return;\n\n    variablesContent.forEach(variableContent => {\n      const name = SafeExtractor.extractStringProperty(variableContent, 'name');\n      const serializedVariable = SafeExtractor.extractObjectProperty(\n        variableContent,\n        'serializedVariable'\n      );\n      if (!name || !serializedVariable) return;\n\n      const newName = newNameGenerator(\n        name,\n        name =>\n          inheritedVariablesContainer\n            ? inheritedVariablesContainer.has(name) ||\n              variablesContainer.has(name)\n            : variablesContainer.has(name),\n        'CopyOf'\n      );\n      const newVariable = new gd.Variable();\n      unserializeFromJSObject(newVariable, serializedVariable);\n      variablesContainer.insert(\n        newName,\n        newVariable,\n        variablesContainer.count()\n      );\n      newVariable.delete();\n    });\n    this.forceUpdate();\n  };\n\n  deleteSelection = () => {\n    const { variablesContainer } = this.props;\n    const selection: Array<VariableAndName> = getSelection(\n      this.state.selectedVariables\n    );\n\n    // Only delete ancestor variables, as selection can be composed of variables\n    // that are contained inside others.\n    const ancestorOnlyVariables = selection.filter(variableAndName => {\n      // Make sure that the variable has no ancestor containing it\n      return !selection.find(\n        otherVariableAndName =>\n          variableAndName !== otherVariableAndName &&\n          otherVariableAndName.variable.contains(\n            variableAndName.variable,\n            /*recursive=*/ true\n          )\n      );\n    });\n\n    // We don't want to ever manipulate/access to variables that have been deleted (by removeRecursively):\n    // that's why it's important to only delete ancestor variables.\n    ancestorOnlyVariables.forEach(({ variable }: VariableAndName) =>\n      variablesContainer.removeRecursively(variable)\n    );\n    this.clearSelection();\n  };\n\n  clearSelection = () => {\n    this.setState({\n      selectedVariables: getInitialSelection(),\n    });\n  };\n\n  _updateOrDefineVariable = (\n    name: string,\n    variable: gdVariable,\n    newValue: string,\n    index: number,\n    origin: ?VariableOrigin\n  ) => {\n    const { variablesContainer, inheritedVariablesContainer } = this.props;\n\n    if (inheritedVariablesContainer && origin === 'parent') {\n      const serializedVariable = serializeToJSObject(\n        inheritedVariablesContainer.get(name)\n      );\n      const newVariable = new gd.Variable();\n      unserializeFromJSObject(newVariable, serializedVariable);\n      variablesContainer.insert(name, newVariable, index);\n      newVariable.delete();\n\n      variablesContainer.get(name).setString(newValue);\n    } else {\n      variable.setString(newValue);\n    }\n  };\n\n  _renderVariableChildren(\n    name: string,\n    parentVariable: gdVariable,\n    depth: number,\n    origin: VariableOrigin\n  ): Array<React.Node> {\n    const names = parentVariable.getAllChildrenNames().toJSArray();\n\n    return flatten(\n      names.map((name, index) => {\n        const variable = parentVariable.getChild(name);\n        return this._renderVariableAndChildrenRows(\n          name,\n          variable,\n          depth + 1,\n          index,\n          parentVariable,\n          origin\n        );\n      })\n    );\n  }\n\n  _getVariableOrigin = (name: string) => {\n    const { variablesContainer, inheritedVariablesContainer } = this.props;\n\n    if (!inheritedVariablesContainer || !inheritedVariablesContainer.has(name))\n      return '';\n    return variablesContainer.has(name) ? 'inherited' : 'parent';\n  };\n\n  _renderVariableAndChildrenRows(\n    name: string,\n    variable: gdVariable,\n    depth: number,\n    index: number,\n    parentVariable: ?gdVariable,\n    parentOrigin: ?VariableOrigin = null\n  ) {\n    const { variablesContainer, commitVariableValueOnBlur } = this.props;\n    const isStructure = variable.isStructure();\n\n    const origin = parentOrigin ? parentOrigin : this._getVariableOrigin(name);\n\n    return (\n      <SortableVariableRow\n        name={name}\n        index={index}\n        key={'variable-' + name}\n        variable={variable}\n        disabled={depth !== 0}\n        depth={depth}\n        origin={origin}\n        commitVariableValueOnBlur={commitVariableValueOnBlur}\n        errorText={\n          this.state.nameErrors[variable.ptr.toString()]\n            ? 'This name is already taken'\n            : undefined\n        }\n        onChangeValue={text => {\n          this._updateOrDefineVariable(name, variable, text, index, origin);\n\n          this.forceUpdate();\n          if (this.props.onSizeUpdated) this.props.onSizeUpdated();\n        }}\n        onResetToDefaultValue={() => {\n          variablesContainer.removeRecursively(variable);\n          this.forceUpdate();\n          if (this.props.onSizeUpdated) this.props.onSizeUpdated();\n        }}\n        onBlur={event => {\n          const text = event.target.value;\n          if (name === text) return;\n\n          let success = true;\n          if (!parentVariable) {\n            success = variablesContainer.rename(name, text);\n          } else {\n            success = parentVariable.renameChild(name, text);\n          }\n\n          this.setState({\n            nameErrors: {\n              ...this.state.nameErrors,\n              [variable.ptr]: !success,\n            },\n          });\n        }}\n        onRemove={() => {\n          if (!parentVariable) {\n            variablesContainer.remove(name);\n          } else {\n            parentVariable.removeChild(name);\n          }\n\n          this.forceUpdate();\n          if (this.props.onSizeUpdated) this.props.onSizeUpdated();\n        }}\n        onAddChild={() => {\n          const name = newNameGenerator('ChildVariable', name =>\n            variable.hasChild(name)\n          );\n          variable.getChild(name).setString('');\n\n          this.forceUpdate();\n          if (this.props.onSizeUpdated) this.props.onSizeUpdated();\n        }}\n        children={\n          isStructure\n            ? this._renderVariableChildren(name, variable, depth, origin)\n            : null\n        }\n        showHandle={this.state.mode === 'move'}\n        showSelectionCheckbox={this.state.mode === 'select'}\n        isSelected={!!this.state.selectedVariables[variable.ptr]}\n        onSelect={select =>\n          this._selectVariable({ name, ptr: variable.ptr, variable }, select)\n        }\n      />\n    );\n  }\n\n  _renderEmpty() {\n    return (\n      !!this.props.emptyExplanationMessage && (\n        <div>\n          <EmptyMessage\n            style={styles.emptyExplanation}\n            messageStyle={styles.emptyExplanationMessage}\n          >\n            {this.props.emptyExplanationMessage}\n          </EmptyMessage>\n          <EmptyMessage\n            style={styles.emptyExplanation}\n            messageStyle={styles.emptyExplanationMessage}\n          >\n            {this.props.emptyExplanationSecondMessage}\n          </EmptyMessage>\n        </div>\n      )\n    );\n  }\n\n  render() {\n    const { variablesContainer, inheritedVariablesContainer } = this.props;\n    if (!variablesContainer) return null;\n\n    // Display inherited variables, if any\n    const containerInheritedVariablesTree = inheritedVariablesContainer\n      ? mapFor(0, inheritedVariablesContainer.count(), index => {\n          const name = inheritedVariablesContainer.getNameAt(index);\n          if (!variablesContainer.has(name)) {\n            // Show only variables from parent container that are not redefined\n            const variable = inheritedVariablesContainer.getAt(index);\n            return this._renderVariableAndChildrenRows(\n              name,\n              variable,\n              0,\n              index,\n              undefined,\n              'parent'\n            );\n          }\n        })\n      : [];\n\n    const containerVariablesTree = mapFor(\n      0,\n      variablesContainer.count(),\n      index => {\n        const variable = variablesContainer.getAt(index);\n        const name = variablesContainer.getNameAt(index);\n\n        return this._renderVariableAndChildrenRows(\n          name,\n          variable,\n          0,\n          index,\n          undefined\n        );\n      }\n    );\n\n    const editRow = (\n      <SortableAddVariableRow\n        index={0}\n        key={'add-variable-row'}\n        disabled\n        onAdd={() => {\n          const variable = new gd.Variable();\n          variable.setString('');\n          const name = newNameGenerator('Variable', name =>\n            inheritedVariablesContainer\n              ? inheritedVariablesContainer.has(name) ||\n                variablesContainer.has(name)\n              : variablesContainer.has(name)\n          );\n          variablesContainer.insert(name, variable, variablesContainer.count());\n          this.forceUpdate();\n          if (this.props.onSizeUpdated) this.props.onSizeUpdated();\n        }}\n        onCopy={this.copySelection}\n        onPaste={this.paste}\n        onDeleteSelection={this.deleteSelection}\n        hasSelection={hasSelection(this.state.selectedVariables)}\n        hasClipboard={Clipboard.has(CLIPBOARD_KIND)}\n      />\n    );\n\n    // Put all variables in the **same** array so that if a variable that was shown\n    // as inherited is redefined by the user, React can reconcile the variable rows\n    // (VariableRow going from containerInheritedVariablesTree array to\n    // containerVariablesTree array) and the **focus** won't be lost.\n    const allVariables = [\n      ...containerInheritedVariablesTree,\n      ...containerVariablesTree,\n    ];\n\n    return (\n      <SortableVariablesListBody\n        variablesContainer={this.props.variablesContainer}\n        onSortEnd={({ oldIndex, newIndex }) => {\n          this.props.variablesContainer.move(oldIndex, newIndex);\n          this.forceUpdate();\n        }}\n        helperClass=\"sortable-helper\"\n        useDragHandle\n        lockToContainerEdges\n      >\n        {allVariables}\n        {!allVariables.length && this._renderEmpty()}\n        {editRow}\n      </SortableVariablesListBody>\n    );\n  }\n}\n","export default {\n  toolColumnHeader: {\n    textAlign: 'left',\n    paddingRight: 4,\n  },\n  toolColumn: {\n    minWidth: 48,\n    flex: 0,\n    justifyContent: 'flex-end',\n  },\n  tableChildIndentation: 24,\n  indent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n  },\n  indentIconColor: '#DDD', //TODO: Use theme color instead\n  emptyExplanation: {\n    justifyContent: 'flex-start',\n  },\n  emptyExplanationMessage: {\n    textAlign: 'left',\n  },\n  fadedButton: {\n    opacity: 0.7,\n  },\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M19 2h-4.18C14.4.84 13.3 0 12 0c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm7 18H5V4h2v3h10V4h2v16z\" />\n  </SvgIcon>\n));\n","// @flow\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport values from 'lodash/values';\n\nexport type ProjectError = {\n  type: 'error' | 'warning',\n  message: string,\n  extraExplanation: string,\n};\n\nexport type ProjectErrors = {\n  [string]: Array<ProjectError>,\n};\n\nexport const validatePackageName = (packageName: string) => {\n  const pattern = /^([A-Za-z]{1}[A-Za-z\\d_]*\\.)+[A-Za-z][A-Za-z\\d_]*$/i;\n\n  return pattern.test(packageName);\n};\n\ntype TFunction = string => string; //TODO\n\nexport const getErrors = (t: TFunction, project: gdProject): ProjectErrors => {\n  const errors: ProjectErrors = {};\n\n  const addError = (\n    propertyName: string,\n    type: 'error' | 'warning',\n    message: string,\n    extraExplanation: string = ''\n  ) => {\n    if (!errors[propertyName]) errors[propertyName] = [];\n\n    errors[propertyName].push({\n      type,\n      message,\n      extraExplanation,\n    });\n  };\n\n  if (!project.getPackageName()) {\n    addError(\n      'packageName',\n      'error',\n      t('The package name is empty.'),\n      t('Choose and enter a package name in the game properties.')\n    );\n  } else if (project.getPackageName().length >= 255) {\n    addError(\n      'packageName',\n      'error',\n      t('The package name is too long.'),\n      t('Change the package name in the game properties.')\n    );\n  } else if (!validatePackageName(project.getPackageName())) {\n    addError(\n      'packageName',\n      'error',\n      t(\n        'The package name is containing invalid characters or not following the convention \"xxx.yyy.zzz\" (numbers allowed after a letter only).'\n      ),\n      t('Change the package name in the game properties.')\n    );\n  }\n\n  if (!project.getName()) {\n    addError(\n      'name',\n      'error',\n      t('The name of your game is too long.'),\n      t('Change the name in the game properties.')\n    );\n  }\n\n  if (!project.getVersion() || project.getVersion().split('.').length < 3) {\n    addError(\n      'packageName',\n      'error',\n      t(\"The version that you've set for the game is invalid.\"),\n      t('Enter a version in the game properties.')\n    );\n  }\n\n  return errors;\n};\n\nexport const displayProjectErrorsBox = (\n  t: TFunction,\n  errors: ProjectErrors\n): boolean => {\n  if (!Object.keys(errors).length) return true;\n\n  showErrorBox({\n    message:\n      t(\n        'Your game has some invalid elements, please fix these before continuing:'\n      ) +\n      '\\n\\n' +\n      values(errors)\n        .map(errors =>\n          errors.map((error: ProjectError) => `- ${error.message}`).join('\\n')\n        )\n        .join('\\n'),\n    rawError: undefined,\n    errorId: 'project-invalid-settings-error',\n    doNotReport: true,\n  });\n\n  return false;\n};\n\nexport const validateJSON = (jsonString: string): boolean => {\n  try {\n    JSON.parse(jsonString);\n    return true;\n  } catch {\n    return false;\n  }\n};\n","// @flow\nimport * as React from 'react';\nimport { type FiltersState, useFilters } from '../../UI/Search/FiltersChooser';\nimport {\n  getExtensionsRegistry,\n  type ExtensionsRegistry,\n  type ExtensionShortHeader,\n} from '../../Utils/GDevelopServices/Extension';\nimport { type Filters } from '../../Utils/GDevelopServices/Types.flow';\nimport { useSearchItem } from '../../UI/Search/UseSearchItem';\n\nconst defaultSearchText = '';\n\ntype ExtensionStoreState = {|\n  filters: ?Filters,\n  searchResults: ?Array<ExtensionShortHeader>,\n  fetchExtensionsAndFilters: () => void,\n  error: ?Error,\n  searchText: string,\n  setSearchText: string => void,\n  filtersState: FiltersState,\n|};\n\nexport const ExtensionStoreContext = React.createContext<ExtensionStoreState>({\n  filters: null,\n  searchResults: null,\n  fetchExtensionsAndFilters: () => {},\n  error: null,\n  searchText: '',\n  setSearchText: () => {},\n  filtersState: {\n    chosenFilters: new Set(),\n    addFilter: () => {},\n    removeFilter: () => {},\n    chosenCategory: null,\n    setChosenCategory: () => {},\n  },\n});\n\ntype ExtensionStoreStateProviderProps = {|\n  children: React.Node,\n|};\n\nconst getExtensionSearchTerms = (extension: ExtensionShortHeader) => {\n  return (\n    extension.name +\n    '\\n' +\n    extension.shortDescription +\n    '\\n' +\n    extension.tags.join(',')\n  );\n};\n\nexport const ExtensionStoreStateProvider = ({\n  children,\n}: ExtensionStoreStateProviderProps) => {\n  const [\n    extensionShortHeadersByName,\n    setExtensionShortHeadersByName,\n  ] = React.useState<?{\n    [string]: ExtensionShortHeader,\n  }>(null);\n  const [filters, setFilters] = React.useState<?Filters>(null);\n  const [error, setError] = React.useState<?Error>(null);\n  const isLoading = React.useRef<boolean>(false);\n\n  const [searchText, setSearchText] = React.useState(defaultSearchText);\n  const filtersState = useFilters();\n\n  const fetchExtensionsAndFilters = React.useCallback(\n    () => {\n      // Don't attempt to load again resources and filters if they\n      // were loaded already.\n      if (extensionShortHeadersByName || isLoading.current) return;\n\n      (async () => {\n        setError(null);\n        isLoading.current = true;\n\n        try {\n          const extensionRegistry: ExtensionsRegistry = await getExtensionsRegistry();\n          const { extensionShortHeaders, allTags } = extensionRegistry;\n\n          const sortedTags = allTags\n            .slice()\n            .sort((tag1, tag2) =>\n              tag1.toLowerCase().localeCompare(tag2.toLowerCase())\n            );\n\n          const extensionShortHeadersByName = {};\n          extensionShortHeaders.forEach(extension => {\n            extensionShortHeadersByName[extension.name] = extension;\n          });\n\n          console.info(\n            `Loaded ${\n              extensionShortHeaders.length\n            } extensions from the extension store.`\n          );\n          setExtensionShortHeadersByName(extensionShortHeadersByName);\n          setFilters({\n            allTags: sortedTags,\n            defaultTags: sortedTags,\n            tagsTree: [],\n          });\n        } catch (error) {\n          console.error(\n            `Unable to load the extensions from the extension store:`,\n            error\n          );\n          setError(error);\n        }\n\n        isLoading.current = false;\n      })();\n    },\n    [extensionShortHeadersByName, isLoading]\n  );\n\n  React.useEffect(\n    () => {\n      // Don't attempt to load again extensions and filters if they\n      // were loaded already.\n      if (extensionShortHeadersByName || isLoading.current) return;\n\n      const timeoutId = setTimeout(() => {\n        console.info('Pre-fetching extensions from extension store...');\n        fetchExtensionsAndFilters();\n      }, 5000);\n      return () => clearTimeout(timeoutId);\n    },\n    [fetchExtensionsAndFilters, extensionShortHeadersByName, isLoading]\n  );\n\n  const { chosenCategory, chosenFilters } = filtersState;\n  const searchResults: ?Array<ExtensionShortHeader> = useSearchItem(\n    extensionShortHeadersByName,\n    getExtensionSearchTerms,\n    searchText,\n    chosenCategory,\n    chosenFilters\n  );\n\n  const extensionStoreState = React.useMemo(\n    () => ({\n      searchResults,\n      fetchExtensionsAndFilters,\n      filters,\n      error,\n      searchText,\n      setSearchText,\n      filtersState,\n    }),\n    [\n      searchResults,\n      error,\n      filters,\n      searchText,\n      filtersState,\n      fetchExtensionsAndFilters,\n    ]\n  );\n\n  return (\n    <ExtensionStoreContext.Provider value={extensionStoreState}>\n      {children}\n    </ExtensionStoreContext.Provider>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport PlaceholderLoader from '../PlaceholderLoader';\nimport PlaceholderError from '../PlaceholderError';\nimport ErrorBoundary from '../ErrorBoundary';\nimport { AutoSizer, Grid } from 'react-virtualized';\nimport EmptyMessage from '../EmptyMessage';\n\ntype Props<SearchItem> = {|\n  searchItems: ?Array<SearchItem>,\n  getSearchItemUniqueId: (item: SearchItem) => string,\n  renderSearchItem: (\n    item: SearchItem,\n    onHeightComputed: (number) => void\n  ) => React.Node,\n  error: ?Error,\n  onRetry: () => void,\n|};\n\nconst styles = {\n  container: { flex: 1 },\n  grid: { overflowX: 'hidden' },\n};\n\nconst ESTIMATED_ROW_HEIGHT = 90;\n\n/** A virtualized list of search results, caching the searched item heights. */\nexport const ListSearchResults = <SearchItem>({\n  searchItems,\n  getSearchItemUniqueId,\n  renderSearchItem,\n  error,\n  onRetry,\n}: Props<SearchItem>) => {\n  const grid = React.useRef<?Grid>(null);\n\n  // Height of each item is initially unknown. When rendered, the items\n  // are reporting their heights and we cache these values.\n  const cachedHeightsForWidth = React.useRef(0);\n  const cachedHeights = React.useRef({});\n  const onItemHeightComputed = React.useCallback(\n    (searchItem, height) => {\n      if (cachedHeights.current[getSearchItemUniqueId(searchItem)] === height)\n        return false;\n\n      cachedHeights.current[getSearchItemUniqueId(searchItem)] = height;\n      return true;\n    },\n    [getSearchItemUniqueId]\n  );\n  const getRowHeight = React.useCallback(\n    ({ index }) => {\n      if (!searchItems || !searchItems[index]) return ESTIMATED_ROW_HEIGHT;\n\n      const searchItem = searchItems[index];\n      return (\n        cachedHeights.current[getSearchItemUniqueId(searchItem)] ||\n        ESTIMATED_ROW_HEIGHT\n      );\n    },\n    [searchItems, getSearchItemUniqueId]\n  );\n\n  // Render an item, and update the cached height when it's reported\n  const renderRow = React.useCallback(\n    ({ key, rowIndex, style }) => {\n      if (!searchItems) return null;\n\n      const searchItem = searchItems[rowIndex];\n      if (!searchItem) return null;\n\n      return (\n        <div key={key} style={style}>\n          {renderSearchItem(searchItem, height => {\n            const heightWasUpdated = onItemHeightComputed(searchItem, height);\n            if (heightWasUpdated && grid.current) {\n              grid.current.recomputeGridSize(0, rowIndex);\n            }\n          })}\n        </div>\n      );\n    },\n    [searchItems, onItemHeightComputed, renderSearchItem]\n  );\n\n  if (!searchItems) {\n    if (!error) return <PlaceholderLoader />;\n    else {\n      return (\n        <PlaceholderError onRetry={onRetry}>\n          <Trans>\n            Can't load the results. Verify your internet connection or retry\n            later.\n          </Trans>\n        </PlaceholderError>\n      );\n    }\n  } else if (searchItems.length === 0) {\n    return (\n      <EmptyMessage>\n        <Trans>\n          No results returned for your search. Try something else or browse the\n          categories.\n        </Trans>\n      </EmptyMessage>\n    );\n  }\n\n  return (\n    <ErrorBoundary>\n      <div style={styles.container}>\n        <AutoSizer>\n          {({ width, height }) => {\n            if (!width || !height) return null;\n\n            // Reset the cached heights in case the width changed.\n            if (cachedHeightsForWidth.current !== width) {\n              cachedHeights.current = {};\n              cachedHeightsForWidth.current = width;\n            }\n\n            return (\n              <Grid\n                ref={grid}\n                width={width}\n                height={height}\n                columnCount={1}\n                columnWidth={width}\n                rowHeight={getRowHeight}\n                rowCount={searchItems.length}\n                cellRenderer={renderRow}\n                style={styles.grid}\n              />\n            );\n          }}\n        </AutoSizer>\n      </div>\n    </ErrorBoundary>\n  );\n};\n","// @flow\nimport { type I18n as I18nType } from '@lingui/core';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport {\n  getExtension,\n  type ExtensionShortHeader,\n} from '../../Utils/GDevelopServices/Extension';\nimport { addSerializedExtensionsToProject } from '../InstallAsset';\nimport { type EventsFunctionsExtensionsState } from '../../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext';\nimport { t } from '@lingui/macro';\nimport Window from '../../Utils/Window';\n\n/**\n * Download and add the extension in the project.\n */\nexport const installExtension = async (\n  i18n: I18nType,\n  project: gdProject,\n  eventsFunctionsExtensionsState: EventsFunctionsExtensionsState,\n  extensionShortHeader: ExtensionShortHeader\n): Promise<boolean> => {\n  try {\n    const serializedExtension = await getExtension(extensionShortHeader);\n    await addSerializedExtensionsToProject(\n      eventsFunctionsExtensionsState,\n      project,\n      [serializedExtension]\n    );\n\n    return true;\n  } catch (rawError) {\n    showErrorBox({\n      message: i18n._(\n        t`Unable to download and install the extension. Verify that your internet connection is working or try again later.`\n      ),\n      rawError,\n      errorId: 'download-extension-error',\n    });\n    return false;\n  }\n};\n\n/**\n * Open a dialog to choose an extension and install it in the project.\n */\nexport const importExtension = async (\n  i18n: I18nType,\n  eventsFunctionsExtensionsState: EventsFunctionsExtensionsState,\n  project: gdProject\n): Promise<boolean> => {\n  const eventsFunctionsExtensionOpener = eventsFunctionsExtensionsState.getEventsFunctionsExtensionOpener();\n  if (!eventsFunctionsExtensionOpener) return false;\n\n  try {\n    const pathOrUrl = await eventsFunctionsExtensionOpener.chooseEventsFunctionExtensionFile();\n    if (!pathOrUrl) return false;\n\n    const serializedExtension = await eventsFunctionsExtensionOpener.readEventsFunctionExtensionFile(\n      pathOrUrl\n    );\n\n    if (project.hasEventsFunctionsExtensionNamed(serializedExtension.name)) {\n      const answer = Window.showConfirmDialog(\n        i18n._(\n          t`An extension with this name already exists in the project. Importing this extension will replace it: are you sure you want to continue?`\n        )\n      );\n      if (!answer) return false;\n    }\n\n    await addSerializedExtensionsToProject(\n      eventsFunctionsExtensionsState,\n      project,\n      [serializedExtension]\n    );\n    return true;\n  } catch (rawError) {\n    showErrorBox({\n      message: i18n._(\n        t`An error happened while loading this extension. Please check that it is a proper extension file and compatible with this version of GDevelop`\n      ),\n      rawError,\n      errorId: 'extension-loading-error',\n    });\n    return false;\n  }\n};\n","// @flow\nimport {\n  type Asset,\n  type AssetShortHeader,\n  getAsset,\n} from '../Utils/GDevelopServices/Asset';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport { isNullPtr } from '../Utils/IsNullPtr';\nimport { unserializeFromJSObject } from '../Utils/Serializer';\nimport flatten from 'lodash/flatten';\nimport uniqBy from 'lodash/uniqBy';\nimport uniq from 'lodash/uniq';\nimport {\n  getExtensionsRegistry,\n  getExtension,\n  type SerializedExtension,\n} from '../Utils/GDevelopServices/Extension';\nimport { type EventsFunctionsExtensionsState } from '../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext';\nimport { mapVector } from '../Utils/MapFor';\nconst gd: libGDevelop = global.gd;\n\nconst toNewGdMapStringString = (object: {\n  [string]: string,\n}): gdMapStringString => {\n  const map = new gd.MapStringString();\n  for (var key in object) {\n    map.set(key, object[key]);\n  }\n\n  return map;\n};\n\nconst toPascalCase = (str: string) => {\n  if (!str) return '';\n  return str\n    .replace(/^[^A-Za-z0-9]*|[^A-Za-z0-9]*$/g, '$')\n    .replace(/[^A-Za-z0-9]+/g, '$')\n    .replace(/([a-z])([A-Z])/g, function(m, a, b) {\n      return a + '$' + b;\n    })\n    .toLowerCase()\n    .replace(/(\\$)(\\w?)/g, function(m, a, b) {\n      return b.toUpperCase();\n    });\n};\n\nexport const sanitizeObjectName = (objectName: string) => {\n  const trimmedObjectName = objectName.trim();\n  if (!trimmedObjectName) return 'UnnamedObject';\n\n  const pascalCaseName = toPascalCase(trimmedObjectName);\n\n  let prefixedObjectName = pascalCaseName;\n  if (prefixedObjectName[0] >= '0' && prefixedObjectName[0] <= '9') {\n    prefixedObjectName = '_' + prefixedObjectName;\n  }\n\n  return prefixedObjectName;\n};\n\n/**\n * Adds the specified resource to the resources manager, avoiding to duplicate\n * if it was already added.\n */\nexport const installResource = (\n  resourcesManager: gdResourcesManager,\n  serializedResource: any,\n  resourceNewNames: { [string]: string }\n) => {\n  const originalResourceName: string = serializedResource.name;\n\n  if (resourceNewNames[originalResourceName]) {\n    // The resource was already added previously - don't\n    // bother adding it again.\n    return;\n  }\n\n  // Check if the resource that must be installed is already present. Use the \"origin\"\n  // of the resource (if present), otherwise for compatibility we use the URL.\n  const resourceFileUrl: string = serializedResource.file;\n  const resourceOriginName: string = serializedResource.origin\n    ? serializedResource.origin.name\n    : '';\n  const resourceOriginIdentifier: string = serializedResource.origin\n    ? serializedResource.origin.identifier\n    : '';\n  const existingResourceNameFromSameOrigin =\n    resourceOriginName && resourceOriginIdentifier\n      ? resourcesManager.getResourceNameWithOrigin(\n          resourceOriginName,\n          resourceOriginIdentifier\n        )\n      : '';\n  const existingResourceNameWithSameFile = resourcesManager.getResourceNameWithFile(\n    resourceFileUrl\n  );\n\n  if (existingResourceNameFromSameOrigin) {\n    // There is a resource with the same origin, use it.\n    resourceNewNames[originalResourceName] = existingResourceNameFromSameOrigin;\n    return;\n  } else if (existingResourceNameWithSameFile) {\n    // For compatibility with resources without origins, also check the file directly.\n    resourceNewNames[originalResourceName] = existingResourceNameWithSameFile;\n    return;\n  }\n\n  // The resource does not exist yet, add it. Note that the \"origin\" will be preserved.\n  let newResource = null;\n  if (serializedResource.kind === 'image') {\n    newResource = new gd.ImageResource();\n  } else {\n    throw new Error(\n      `Resource of kind \"${serializedResource.kind}\" is not supported.`\n    );\n  }\n\n  unserializeFromJSObject(newResource, serializedResource);\n\n  const newName = newNameGenerator(originalResourceName, name =>\n    resourcesManager.hasResource(name)\n  );\n  newResource.setName(newName);\n  newResource.setOrigin(resourceOriginName, resourceOriginIdentifier);\n  resourcesManager.addResource(newResource);\n  newResource.delete();\n\n  resourceNewNames[originalResourceName] = newName;\n};\n\nexport const addAssetToProject = async ({\n  asset,\n  project,\n  events,\n  objectsContainer,\n}: {|\n  asset: Asset,\n  project: gdProject,\n  events: gdEventsList,\n  objectsContainer: gdObjectsContainer,\n|}) => {\n  const objectNewNames = {};\n  const resourceNewNames = {};\n  const createdObjects: Array<gdObject> = [];\n\n  asset.objectAssets.forEach(objectAsset => {\n    objectAsset.resources.forEach(serializedResource => {});\n  });\n\n  // Create objects (and their behaviors)\n  asset.objectAssets.forEach(objectAsset => {\n    const type: ?string = objectAsset.object.type;\n    if (!type) throw new Error('An object has no type specified');\n\n    // Insert the object\n    const originalName = sanitizeObjectName(objectAsset.object.name);\n    const newName = newNameGenerator(originalName, name =>\n      objectsContainer.hasObjectNamed(name)\n    );\n    const object = objectsContainer.insertNewObject(\n      project,\n      type,\n      newName,\n      objectsContainer.getObjectsCount()\n    );\n    objectNewNames[originalName] = newName;\n\n    unserializeFromJSObject(\n      object,\n      objectAsset.object,\n      'unserializeFrom',\n      project\n    );\n\n    // The name was overwritten after unserialization.\n    object.setName(newName);\n\n    // Add resources used by the object\n    objectAsset.resources.forEach(serializedResource => {\n      installResource(\n        project.getResourcesManager(),\n        serializedResource,\n        resourceNewNames\n      );\n    });\n\n    // TODO: Check how multiple objects are handled\n\n    // Resources may have been renamed to be added to the project.\n    // In this case, rename them in the object.\n    const renamedResourcesMap = toNewGdMapStringString(resourceNewNames);\n    const resourcesRenamer = new gd.ResourcesRenamer(renamedResourcesMap);\n    renamedResourcesMap.delete();\n    object.exposeResources(resourcesRenamer);\n    resourcesRenamer.delete();\n\n    objectAsset.customization.forEach(customization => {\n      if (customization.behaviorName) {\n        const { behaviorName, behaviorType } = customization;\n        const behavior = gd.JsPlatform.get().getBehavior(behaviorType);\n        if (isNullPtr(gd, behavior)) {\n          throw new Error(\n            'Behavior with type ' + behaviorType + ' could not be found.'\n          );\n        }\n\n        const behaviorContent = object.addNewBehavior(\n          project,\n          behaviorType,\n          behaviorName\n        );\n        customization.properties.forEach(property => {\n          behavior.updateProperty(\n            behaviorContent.getContent(),\n            property.name,\n            property.defaultValue\n          );\n        });\n      }\n    });\n\n    createdObjects.push(object);\n  });\n\n  // Add the events after adding all objects, as we need to potentially\n  // rename the objects in the inserted events.\n  asset.objectAssets.forEach(objectAsset => {\n    const originalName = objectAsset.object.name;\n    const newName = objectNewNames[originalName];\n\n    objectAsset.customization.forEach(customization => {\n      if (customization.events) {\n        const groupEvent = new gd.GroupEvent();\n        groupEvent.setName(newName);\n\n        unserializeFromJSObject(\n          groupEvent.getSubEvents(),\n          customization.events,\n          'unserializeFrom',\n          project\n        );\n\n        // Find/replace the customization parameters in the events.\n        customization.parameters.forEach(parameter => {\n          gd.EventsRefactorer.replaceStringInEvents(\n            project,\n            objectsContainer,\n            groupEvent.getSubEvents(),\n            parameter.name,\n            parameter.defaultValue,\n            true,\n            true,\n            true\n          );\n        });\n\n        // Rename any object that was renamed when inserted.\n        // Do this **after** replacing the customization parameters,\n        // as some expressions can be invalid before customization\n        // parameters replacements.\n        for (const originalName in objectNewNames) {\n          const newName = objectNewNames[originalName];\n          if (originalName !== newName) {\n            gd.EventsRefactorer.renameObjectInEvents(\n              project.getCurrentPlatform(),\n              project,\n              objectsContainer,\n              groupEvent.getSubEvents(),\n              originalName,\n              newName\n            );\n          }\n        }\n\n        events.insertEvent(groupEvent, events.getEventsCount());\n      }\n    });\n  });\n\n  return {\n    createdObjects,\n  };\n};\n\ntype RequiredBehavior = {|\n  extensionName: string,\n  extensionVersion: string,\n  behaviorType: string,\n|};\n\nexport const getRequiredBehaviorsFromAsset = (\n  asset: Asset\n): Array<RequiredBehavior> => {\n  return uniqBy(\n    flatten(\n      asset.objectAssets.map(objectAsset => {\n        return objectAsset.customization\n          .map(customization => {\n            if (customization.behaviorName) {\n              const {\n                behaviorType,\n                extensionName,\n                extensionVersion,\n              } = customization;\n              return { behaviorType, extensionName, extensionVersion };\n            }\n\n            return null;\n          })\n          .filter(Boolean);\n      })\n    ),\n    ({ behaviorType }) => behaviorType // TODO: Verify if we could use the extension name instead?\n  );\n};\n\ntype RequiredExtension = {|\n  extensionName: string,\n  extensionVersion: string,\n|};\n\nexport const filterMissingExtensions = (\n  gd: libGDevelop,\n  requiredExtensions: Array<RequiredExtension>\n): Array<RequiredExtension> => {\n  const loadedExtensionNames = mapVector(\n    gd.asPlatform(gd.JsPlatform.get()).getAllPlatformExtensions(),\n    extension => {\n      return extension.getName();\n    }\n  );\n\n  return requiredExtensions.filter(({ extensionName }) => {\n    return !loadedExtensionNames.includes(extensionName);\n  });\n};\n\nexport const getRequiredExtensionsForEventsFromAsset = (\n  asset: Asset\n): Array<RequiredExtension> => {\n  return uniqBy(\n    flatten(\n      asset.objectAssets.map(objectAsset => {\n        return flatten(\n          objectAsset.customization\n            .map(customization => {\n              if (customization.events) {\n                return customization.extensions;\n              }\n\n              return null;\n            })\n            .filter(Boolean)\n        );\n      })\n    ),\n    ({ extensionName }) => extensionName\n  );\n};\n\nexport const filterMissingBehaviors = (\n  gd: libGDevelop,\n  requiredBehaviors: Array<RequiredBehavior>\n): Array<RequiredBehavior> => {\n  return requiredBehaviors.filter(({ behaviorType }) => {\n    const behavior = gd.JsPlatform.get().getBehavior(behaviorType);\n    return isNullPtr(gd, behavior);\n  });\n};\n\nexport const downloadExtensions = async (\n  extensionNames: Array<string>\n): Promise<Array<SerializedExtension>> => {\n  if (!extensionNames.length) return Promise.resolve([]);\n\n  const extensionsRegistry = await getExtensionsRegistry();\n\n  const serializedExtensions = await Promise.all(\n    uniq(extensionNames).map(extensionName => {\n      const extensionShortHeader = extensionsRegistry.extensionShortHeaders.find(\n        extensionShortHeader => {\n          return extensionShortHeader.name === extensionName;\n        }\n      );\n      if (!extensionShortHeader) {\n        throw new Error(\n          'Unable to find extension ' + extensionName + ' in the registry.'\n        );\n      }\n\n      return getExtension(extensionShortHeader);\n    })\n  );\n\n  return serializedExtensions;\n};\n\n/**\n * Add a serialized (JS object) events function extension to the project,\n * triggering reload of extensions.\n */\nexport const addSerializedExtensionsToProject = (\n  eventsFunctionsExtensionsState: EventsFunctionsExtensionsState,\n  project: gdProject,\n  serializedExtensions: Array<SerializedExtension>\n): Promise<void> => {\n  serializedExtensions.forEach(serializedExtension => {\n    const { name } = serializedExtension;\n    if (!name)\n      return Promise.reject(new Error('Malformed extension (missing name).'));\n\n    const newEventsFunctionsExtension = project.hasEventsFunctionsExtensionNamed(\n      name\n    )\n      ? project.getEventsFunctionsExtension(name)\n      : project.insertNewEventsFunctionsExtension(name, 0);\n\n    unserializeFromJSObject(\n      newEventsFunctionsExtension,\n      serializedExtension,\n      'unserializeFrom',\n      project\n    );\n  });\n\n  return eventsFunctionsExtensionsState.loadProjectEventsFunctionsExtensions(\n    project\n  );\n};\n\ntype InstallAssetArgs = {|\n  assetShortHeader: AssetShortHeader,\n  eventsFunctionsExtensionsState: EventsFunctionsExtensionsState,\n  project: gdProject,\n  events: gdEventsList,\n  objectsContainer: gdObjectsContainer,\n|};\n\ntype InstallAssetOutput = {|\n  createdObjects: Array<gdObject>,\n|};\n\nexport const installAsset = async ({\n  assetShortHeader,\n  eventsFunctionsExtensionsState,\n  project,\n  events,\n  objectsContainer,\n}: InstallAssetArgs): Promise<InstallAssetOutput> => {\n  const asset = await getAsset(assetShortHeader);\n  const requiredBehaviors = getRequiredBehaviorsFromAsset(asset);\n  const requiredExtensions = getRequiredExtensionsForEventsFromAsset(asset);\n  const missingBehaviors = filterMissingBehaviors(gd, requiredBehaviors);\n  const missingExtensions = filterMissingExtensions(gd, requiredExtensions);\n  const serializedExtensions = await downloadExtensions([\n    ...missingBehaviors.map(({ extensionName }) => extensionName),\n    ...missingExtensions.map(({ extensionName }) => extensionName),\n  ]);\n  await addSerializedExtensionsToProject(\n    eventsFunctionsExtensionsState,\n    project,\n    serializedExtensions\n  );\n\n  const stillMissingBehaviors = filterMissingBehaviors(gd, requiredBehaviors);\n  if (stillMissingBehaviors.length) {\n    throw new Error(\n      'These behaviors could not be installed: ' +\n        missingBehaviors\n          .map(\n            ({ extensionName, behaviorType }) =>\n              `${behaviorType} (${extensionName})`\n          )\n          .join(', ')\n    );\n  }\n\n  const stillMissingExtensions = filterMissingExtensions(\n    gd,\n    requiredExtensions\n  );\n  if (stillMissingExtensions.length) {\n    throw new Error(\n      'These extensions could not be installed: ' +\n        missingExtensions.map(({ extensionName }) => extensionName).join(', ')\n    );\n  }\n\n  const output = await addAssetToProject({\n    project,\n    asset,\n    events,\n    objectsContainer,\n  });\n  return output;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport TextField from '../UI/TextField';\nimport RaisedButton from '../UI/RaisedButton';\nimport Dialog from '../UI/Dialog';\nimport ColorField from '../UI/ColorField';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport PropertiesEditor from '../PropertiesEditor';\nimport propertiesMapToSchema from '../PropertiesEditor/PropertiesMapToSchema';\nimport some from 'lodash/some';\nimport Checkbox from '../UI/Checkbox';\nimport { isNullPtr } from '../Utils/IsNullPtr';\nimport { ColumnStackLayout } from '../UI/Layout';\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  open: boolean,\n  layout: gdLayout,\n  project: gdProject,\n  onApply: () => void,\n  onClose: () => void,\n  onOpenMoreSettings?: ?() => void,\n  onEditVariables: () => void,\n|};\n\ntype State = {|\n  windowTitle: string,\n  shouldStopSoundsOnStartup: boolean,\n  backgroundColor: {\n    r: number,\n    g: number,\n    b: number,\n    a: number,\n  },\n|};\n\nexport default class ScenePropertiesDialog extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = this._loadFrom(props.layout);\n  }\n\n  _loadFrom(layout: gdLayout): State {\n    return {\n      windowTitle: layout.getWindowDefaultTitle(),\n      shouldStopSoundsOnStartup: layout.stopSoundsOnStartup(),\n      backgroundColor: {\n        r: layout.getBackgroundColorRed(),\n        g: layout.getBackgroundColorGreen(),\n        b: layout.getBackgroundColorBlue(),\n        a: 1,\n      },\n    };\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      (!this.props.open && newProps.open) ||\n      (newProps.open && this.props.layout !== newProps.layout)\n    ) {\n      this.setState(this._loadFrom(newProps.layout));\n    }\n  }\n\n  _onApply = () => {\n    this.props.layout.setWindowDefaultTitle(this.state.windowTitle);\n    this.props.layout.setStopSoundsOnStartup(\n      this.state.shouldStopSoundsOnStartup\n    );\n    this.props.layout.setBackgroundColor(\n      this.state.backgroundColor.r,\n      this.state.backgroundColor.g,\n      this.state.backgroundColor.b\n    );\n    this.props.onApply();\n  };\n\n  render() {\n    const { layout } = this.props;\n    const actions = [\n      // TODO: Add support for cancelling modifications made to BehaviorSharedData\n      // (either by enhancing a function like propertiesMapToSchema or using copies)\n      // and then re-enable cancel button.\n      // <FlatButton\n      //   label={<Trans>Cancel</Trans>}\n      //   primary={false}\n      //   onClick={this.props.onClose}\n      // />,\n      <FlatButton\n        label={<Trans>Ok</Trans>}\n        key=\"ok\"\n        primary={true}\n        keyboardFocused={true}\n        onClick={this._onApply}\n      />,\n    ];\n\n    const allBehaviorSharedDataNames = layout\n      .getAllBehaviorSharedDataNames()\n      .toJSArray();\n\n    const propertiesEditors = allBehaviorSharedDataNames\n      .map(name => {\n        const sharedDataContent = layout.getBehaviorSharedData(name);\n        const type = sharedDataContent.getTypeName();\n\n        const behaviorSharedData = gd.JsPlatform.get().getBehaviorSharedDatas(\n          type\n        );\n        if (isNullPtr(gd, behaviorSharedData)) return null;\n\n        const properties = behaviorSharedData.getProperties(\n          sharedDataContent.getContent()\n        );\n        const propertiesSchema = propertiesMapToSchema(\n          properties,\n          sharedDataContent =>\n            behaviorSharedData.getProperties(sharedDataContent.getContent()),\n          (sharedDataContent, name, value) => {\n            behaviorSharedData.updateProperty(\n              sharedDataContent.getContent(),\n              name,\n              value\n            );\n          }\n        );\n\n        return (\n          !!propertiesSchema.length && (\n            <PropertiesEditor\n              key={name}\n              schema={propertiesSchema}\n              instances={[sharedDataContent]}\n            />\n          )\n        );\n      })\n      .filter(Boolean);\n\n    return (\n      <Dialog\n        title={<Trans>Scene properties</Trans>}\n        actions={actions}\n        secondaryActions={\n          <RaisedButton\n            label={<Trans>Edit scene variables</Trans>}\n            fullWidth\n            onClick={() => {\n              this.props.onEditVariables();\n              this.props.onClose();\n            }}\n          />\n        }\n        open={this.props.open}\n        cannotBeDismissed={true}\n        onRequestClose={this.props.onClose}\n        maxWidth=\"sm\"\n      >\n        <ColumnStackLayout expand noMargin>\n          <TextField\n            floatingLabelText={<Trans>Window title</Trans>}\n            fullWidth\n            type=\"text\"\n            value={this.state.windowTitle}\n            onChange={(e, value) => this.setState({ windowTitle: value })}\n          />\n          <Checkbox\n            checked={this.state.shouldStopSoundsOnStartup}\n            label={<Trans>Stop music and sounds on startup</Trans>}\n            onCheck={(e, check) =>\n              this.setState({\n                shouldStopSoundsOnStartup: check,\n              })\n            }\n          />\n          <ColorField\n            floatingLabelText={<Trans>Scene background color</Trans>}\n            fullWidth\n            disableAlpha\n            color={this.state.backgroundColor}\n            onChangeComplete={color =>\n              this.setState({ backgroundColor: color.rgb })\n            }\n          />\n          {!some(propertiesEditors) && (\n            <EmptyMessage>\n              <Trans>\n                Any additional properties will appear here if you add behaviors\n                to objects, like Physics behavior.\n              </Trans>\n            </EmptyMessage>\n          )}\n          {propertiesEditors}\n          {this.props.onOpenMoreSettings && (\n            <RaisedButton\n              label={<Trans>Open advanced settings</Trans>}\n              fullWidth\n              onClick={() => {\n                if (this.props.onOpenMoreSettings)\n                  this.props.onOpenMoreSettings();\n                this.props.onClose();\n              }}\n            />\n          )}\n        </ColumnStackLayout>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport VariablesEditorDialog from '../VariablesList/VariablesEditorDialog';\nimport { type HotReloadPreviewButtonProps } from '../HotReload/HotReloadPreviewButton';\n\ntype Props = {|\n  open: boolean,\n  layout: gdLayout,\n  onApply: () => void,\n  onClose: () => void,\n  hotReloadPreviewButtonProps: HotReloadPreviewButtonProps,\n|};\n\nexport default (props: Props) => {\n  return (\n    <VariablesEditorDialog\n      open={props.open}\n      variablesContainer={props.layout.getVariables()}\n      onCancel={props.onClose}\n      onApply={props.onApply}\n      title={<Trans>Scene Variables</Trans>}\n      emptyExplanationMessage={\n        <Trans>\n          Scene variables can be used to store any value or text during the\n          game.\n        </Trans>\n      }\n      emptyExplanationSecondMessage={\n        <Trans>\n          For example, you can have a variable called Score representing the\n          current score of the player.\n        </Trans>\n      }\n      hotReloadPreviewButtonProps={props.hotReloadPreviewButtonProps}\n    />\n  );\n};\n","//@flow\nexport function isExtensionNameTaken(\n  name: string,\n  project: gdProject\n): boolean {\n  const allExtensions = project.getCurrentPlatform().getAllPlatformExtensions();\n  for (let i = 0; i < allExtensions.size(); i++) {\n    if (allExtensions.at(i).getName() === name) return true;\n  }\n  return project.hasEventsFunctionsExtensionNamed(name);\n}\n","// @flow\nimport { type CommandName } from './CommandsList';\n\ntype CommandHandler = () => void | Promise<void>;\n\nexport type SimpleCommand = {|\n  handler: CommandHandler,\n|};\n\nexport type CommandOption = {|\n  handler: CommandHandler,\n  text: string,\n  iconSrc?: string,\n|};\n\nexport type CommandWithOptions = {|\n  generateOptions: () => Array<CommandOption>,\n|};\n\nexport type Command = SimpleCommand | CommandWithOptions;\n\nexport type NamedCommand = {|\n  name: CommandName,\n  ...Command,\n|};\n\nexport type NamedCommandWithOptions = {|\n  name: CommandName,\n  ...CommandWithOptions,\n|};\n\nexport interface CommandManagerInterface {\n  registerCommand: (commandName: CommandName, command: Command) => void;\n  deregisterCommand: (commandName: CommandName) => void;\n  getNamedCommand: (commandName: CommandName) => ?NamedCommand;\n  getAllNamedCommands: () => Array<NamedCommand>;\n}\n\nexport default class CommandManager implements CommandManagerInterface {\n  _commands: { [CommandName]: Command };\n\n  constructor() {\n    this._commands = {};\n  }\n\n  registerCommand = (commandName: CommandName, command: Command) => {\n    if (this._commands[commandName])\n      return console.warn(\n        `Tried to register command ${commandName}, but it is already registered.`\n      );\n    this._commands[commandName] = command;\n  };\n\n  deregisterCommand = (commandName: CommandName) => {\n    if (!this._commands[commandName])\n      return console.warn(\n        `Tried to deregister command ${commandName}, but it is not registered.`\n      );\n    delete this._commands[commandName];\n  };\n\n  getNamedCommand = (commandName: CommandName) => {\n    const command = this._commands[commandName];\n    if (command) return { name: commandName, ...(command: Command) };\n    return null;\n  };\n\n  getAllNamedCommands = () => {\n    return Object.keys(this._commands).map<NamedCommand>(commandName => {\n      const cmd = this._commands[commandName];\n      return { ...cmd, name: commandName };\n    });\n  };\n}\n","// @flow\nimport { useRef } from 'react';\n\nconst useRefInit = <T>(init: () => T): T => {\n  const instanceRef = useRef(null);\n\n  let instance = instanceRef.current;\n  if (instance !== null) return instance;\n  // Lazily create the ref object\n  let newInstance = init();\n  instanceRef.current = newInstance;\n  return newInstance;\n};\n\nexport default useRefInit;\n","import React from 'react';\nimport Checkbox from '../../UI/Checkbox';\nimport { CorsAwareImage } from '../../UI/CorsAwareImage';\nimport ThemeConsumer from '../../UI/Theme/ThemeConsumer';\nimport { useLongTouch } from '../../Utils/UseLongTouch';\n\nconst SPRITE_SIZE = 100;\nexport const thumbnailContainerStyle = {\n  position: 'relative',\n  display: 'inline-block',\n  width: SPRITE_SIZE,\n  height: SPRITE_SIZE,\n  justifyContent: 'center',\n  alignItems: 'center',\n  lineHeight: SPRITE_SIZE + 'px',\n  textAlign: 'center',\n  border: '#AAAAAA 1px solid',\n  borderColor: '#AAAAAA',\n};\n\nconst styles = {\n  spriteThumbnail: {\n    ...thumbnailContainerStyle,\n    background: 'url(\"res/transparentback.png\") repeat',\n  },\n  spriteThumbnailImage: {\n    maxWidth: SPRITE_SIZE,\n    maxHeight: SPRITE_SIZE,\n    verticalAlign: 'middle',\n    pointerEvents: 'none',\n  },\n  checkboxContainer: {\n    textAlign: 'initial',\n    position: 'absolute',\n    width: 34, // Used to position the checkbox near the right border with a proper margin\n    height: 64,\n    bottom: 0,\n    right: 0,\n  },\n};\n\nconst ImageThumbnail = ({\n  project,\n  resourceName,\n  resourcesLoader,\n  style,\n  selectable,\n  selected,\n  onSelect,\n  onContextMenu,\n  muiTheme,\n}) => {\n  // Allow a long press to show the context menu\n  const longTouchForContextMenuProps = useLongTouch(\n    React.useCallback(\n      event => {\n        if (onContextMenu) onContextMenu(event.clientX, event.clientY);\n      },\n      [onContextMenu]\n    )\n  );\n\n  return (\n    <ThemeConsumer>\n      {muiTheme => (\n        <div\n          title={resourceName}\n          style={{\n            ...styles.spriteThumbnail,\n            borderColor: selected\n              ? muiTheme.imageThumbnail.selectedBorderColor\n              : undefined,\n            ...style,\n          }}\n          onContextMenu={e => {\n            e.stopPropagation();\n            if (onContextMenu) onContextMenu(e.clientX, e.clientY);\n          }}\n          {...longTouchForContextMenuProps}\n        >\n          <CorsAwareImage\n            style={styles.spriteThumbnailImage}\n            alt={resourceName}\n            src={resourcesLoader.getResourceFullUrl(project, resourceName, {})}\n          />\n          {selectable && (\n            <div style={styles.checkboxContainer}>\n              <Checkbox\n                checked={selected}\n                onCheck={(e, check) => onSelect(check)}\n              />\n            </div>\n          )}\n        </div>\n      )}\n    </ThemeConsumer>\n  );\n};\n\nexport default ImageThumbnail;\n","// @flow\nimport * as React from 'react';\nimport EventsSheet from '../../EventsSheet';\nimport {\n  type RenderEditorContainerProps,\n  type RenderEditorContainerPropsWithRef,\n} from './BaseEditor';\n\nexport class EventsEditorContainer extends React.Component<RenderEditorContainerProps> {\n  editor: ?EventsSheet;\n\n  shouldComponentUpdate(nextProps: RenderEditorContainerProps) {\n    // Prevent any update to the editor if the editor is not active,\n    // and so not visible to the user.\n    return nextProps.isActive;\n  }\n\n  componentDidMount() {\n    if (this.props.isActive) {\n      const layout = this.getLayout();\n      this.props.setPreviewedLayout(layout ? layout.getName() : null);\n    }\n  }\n\n  componentDidUpdate(prevProps: RenderEditorContainerProps) {\n    if (!prevProps.isActive && this.props.isActive) {\n      const layout = this.getLayout();\n      this.props.setPreviewedLayout(layout ? layout.getName() : null);\n    }\n  }\n\n  getProject(): ?gdProject {\n    return this.props.project;\n  }\n\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  forceUpdateEditor() {\n    // No updates to be done.\n  }\n\n  getLayout(): ?gdLayout {\n    const { project, projectItemName } = this.props;\n    if (\n      !project ||\n      !projectItemName ||\n      !project.hasLayoutNamed(projectItemName)\n    )\n      return null;\n\n    return project.getLayout(projectItemName);\n  }\n\n  render() {\n    const { project, projectItemName } = this.props;\n    const layout = this.getLayout();\n    if (!layout || !project) {\n      //TODO: Error component\n      return <div>No layout called {projectItemName} found!</div>;\n    }\n\n    return (\n      <EventsSheet\n        ref={editor => (this.editor = editor)}\n        setToolbar={this.props.setToolbar}\n        onOpenLayout={this.props.onOpenLayout}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        openInstructionOrExpression={this.props.openInstructionOrExpression}\n        onCreateEventsFunction={this.props.onCreateEventsFunction}\n        unsavedChanges={this.props.unsavedChanges}\n        project={project}\n        scope={{\n          layout,\n        }}\n        globalObjectsContainer={project}\n        objectsContainer={layout}\n        events={layout.getEvents()}\n        onOpenExternalEvents={this.props.onOpenExternalEvents}\n      />\n    );\n  }\n}\n\nexport const renderEventsEditorContainer = (\n  props: RenderEditorContainerPropsWithRef\n) => <EventsEditorContainer {...props} />;\n","import React from 'react';\nconst marginsSize = 4;\n\n/**\n * A Line in the standard GDevelop grid to position components.\n * Check `Layout` first to see if there is already a layout made\n * specifically for your components (like `TextFieldWithButton`).\n */\nexport const Line = props => (\n  <div\n    style={{\n      display: 'flex',\n      marginTop: props.noMargin ? 0 : marginsSize,\n      marginBottom: props.noMargin ? 0 : marginsSize,\n      alignItems: props.alignItems,\n      justifyContent: props.justifyContent,\n      flex: props.expand ? 1 : undefined,\n      overflow: props.overflow,\n    }}\n  >\n    {props.children}\n  </div>\n);\n\n/**\n * A Column in the standard GDevelop grid to position components.\n * Check `Layout` first to see if there is already a layout made\n * specifically for your components (like `TextFieldWithButton`).\n */\nexport const Column = props => (\n  <div\n    style={{\n      display: 'flex',\n      marginLeft: props.noMargin ? 0 : marginsSize * 2,\n      marginRight: props.noMargin ? 0 : marginsSize * 2,\n      flexDirection: 'column',\n      alignItems: props.alignItems || 'stretch',\n      justifyContent: props.justifyContent,\n      flex: props.expand ? 1 : undefined,\n      // Setting the min-height to 0 forces the flex to use\n      // all the height (if set to flex: 1) and to *not* grow\n      // larger than the parent.\n      minHeight: props.useFullHeight ? '0' : undefined,\n    }}\n  >\n    {props.children}\n  </div>\n);\n\n/**\n * A Spacer in the standard GDevelop grid to position components.\n * Check `Layout` first to see if there is already a layout made\n * specifically for your components (like `TextFieldWithButton`).\n */\nexport const Spacer = props => (\n  <span\n    style={{\n      width: marginsSize,\n      height: marginsSize,\n      flexShrink: 0, // Ensure the spacer is not shrinked when in a flex container\n    }}\n  />\n);\n","// @flow\nimport * as React from 'react';\nimport { dropIndicator, cantDropIndicator } from './ClassNames';\n\n/**\n * A Drop indicator line for the events sheet\n */\nexport default function DropIndicator({ canDrop }: {| canDrop: boolean |}) {\n  return <div className={canDrop ? dropIndicator : cantDropIndicator} />;\n}\n","// @flow\nimport * as React from 'react';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\n\nexport default class DefaultField extends React.Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?any = null;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const { parameterMetadata } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    return (\n      <SemiControlledTextField\n        margin={this.props.isInline ? 'none' : 'dense'}\n        commitOnBlur\n        value={this.props.value}\n        floatingLabelText={description}\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        onChange={(text: string) => this.props.onChange(text)}\n        ref={field => (this._field = field)}\n        fullWidth\n      />\n    );\n  }\n}\n\nexport const renderInlineDefaultField = ({\n  value,\n  parameterMetadata,\n  MissingParameterValue,\n}: ParameterInlineRendererProps) => {\n  if (!value && !parameterMetadata.isOptional()) {\n    return <MissingParameterValue />;\n  }\n\n  return value;\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { enumerateObjectsAndGroups } from './EnumerateObjects';\nimport SemiControlledAutoComplete, {\n  type DataSource,\n  type SemiControlledAutoCompleteInterface,\n} from '../UI/SemiControlledAutoComplete';\nimport ListIcon from '../UI/ListIcon';\nimport ObjectsRenderingService from '../ObjectsRendering/ObjectsRenderingService';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\n\ntype Props = {|\n  project: ?gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  allowedObjectType?: ?string,\n  noGroups?: boolean,\n\n  onChoose?: string => void,\n  onChange: string => void,\n  onRequestClose?: () => void,\n  value: string,\n  errorTextIfInvalid?: React.Node,\n\n  fullWidth?: boolean,\n  floatingLabelText?: React.Node,\n  helperMarkdownText?: ?string,\n  hintText?: MessageDescriptor | string,\n  openOnFocus?: boolean,\n  margin?: 'none' | 'dense',\n|};\n\nconst iconSize = 24;\n\nconst getObjectsAndGroupsDataSource = ({\n  project,\n  globalObjectsContainer,\n  objectsContainer,\n  noGroups,\n  allowedObjectType,\n}: {|\n  project: ?gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  noGroups: ?boolean,\n  allowedObjectType: ?string,\n|}): DataSource => {\n  const list = enumerateObjectsAndGroups(\n    globalObjectsContainer,\n    objectsContainer,\n    allowedObjectType || undefined\n  );\n  const objects = list.allObjectsList.map(({ object }) => {\n    return {\n      text: object.getName(),\n      value: object.getName(),\n      renderIcon: project\n        ? () => (\n            // TODO: This is broken since the changes to ListIcon\n            <ListIcon\n              iconSize={iconSize}\n              src={ObjectsRenderingService.getThumbnail(project, object)}\n            />\n          )\n        : undefined,\n    };\n  });\n  const groups = noGroups\n    ? []\n    : list.allGroupsList.map(({ group }) => {\n        return {\n          text: group.getName(),\n          value: group.getName(),\n        };\n      });\n\n  return [...objects, { type: 'separator' }, ...groups];\n};\n\nexport default class ObjectSelector extends React.Component<Props, {||}> {\n  _field: ?SemiControlledAutoCompleteInterface;\n\n  // Don't add a componentWillUnmount that would call onChange. This can lead to\n  // calling callbacks that would then update a deleted instruction parameters.\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const {\n      value,\n      onChange,\n      onChoose,\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      allowedObjectType,\n      noGroups,\n      errorTextIfInvalid,\n      margin,\n      onRequestClose,\n      ...rest\n    } = this.props;\n\n    const objectAndGroups = getObjectsAndGroupsDataSource({\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      noGroups,\n      allowedObjectType,\n    });\n    const hasValidChoice =\n      objectAndGroups.filter(\n        choice => choice.text !== undefined && value === choice.text\n      ).length !== 0;\n\n    return (\n      <SemiControlledAutoComplete\n        margin={margin}\n        hintText={t`Choose an object`}\n        value={value}\n        onChange={onChange}\n        onChoose={onChoose}\n        onRequestClose={onRequestClose}\n        dataSource={objectAndGroups}\n        errorText={hasValidChoice ? undefined : errorTextIfInvalid}\n        ref={field => (this._field = field)}\n        {...rest}\n      />\n    );\n  }\n}\n","// @flow\nimport slugs from 'slugs';\nimport axios from 'axios';\nimport * as PIXI from 'pixi.js-legacy';\nimport ResourcesLoader from '../ResourcesLoader';\nimport { loadFontFace } from '../Utils/FontFaceLoader';\nconst gd: libGDevelop = global.gd;\n\nconst loadedFontFamilies = {};\nconst loadedTextures = {};\nconst invalidTexture = PIXI.Texture.from('res/error48.png');\n\n/**\n * Expose functions to load PIXI textures or fonts, given the names of\n * resources and a gd.Project.\n *\n * This internally uses ResourcesLoader to get the URL of the resources.\n */\nexport default class PixiResourcesLoader {\n  static _initializeTexture(resource: gdResource, texture: any) {\n    if (resource.getKind() !== 'image') return;\n\n    const imageResource = gd.asImageResource(resource);\n    if (!imageResource.isSmooth()) {\n      texture.baseTexture.scaleMode = PIXI.SCALE_MODES.NEAREST;\n    }\n  }\n\n  /**\n   * (Re)load the PIXI texture represented by the given resources.\n   */\n  static loadTextures(\n    project: gdProject,\n    resourceNames: Array<string>,\n    onProgress: (number, number) => void,\n    onComplete: () => void\n  ) {\n    const resourcesManager = project.getResourcesManager();\n    const loader = PIXI.Loader.shared;\n    loader.reset();\n\n    const allResources = {};\n    resourceNames.forEach(resourceName => {\n      if (!resourcesManager.hasResource(resourceName)) return;\n\n      const resource = resourcesManager.getResource(resourceName);\n      const filename = ResourcesLoader.getResourceFullUrl(\n        project,\n        resourceName,\n        {\n          isResourceForPixi: true,\n        }\n      );\n      loader.add(resourceName, filename);\n      allResources[resourceName] = resource;\n    });\n\n    const totalCount = Object.keys(allResources).length;\n    if (!totalCount) {\n      onComplete();\n      return;\n    }\n\n    let loadingCount = 0;\n    const progressCallbackId = loader.onProgress.add(function() {\n      loadingCount++;\n      onProgress(loadingCount, totalCount);\n    });\n\n    loader.load((loader, loadedResources) => {\n      loader.onProgress.detach(progressCallbackId);\n\n      //Store the loaded textures so that they are ready to use.\n      for (const resourceName in loadedResources) {\n        if (loadedResources.hasOwnProperty(resourceName)) {\n          const resource = resourcesManager.getResource(resourceName);\n          if (resource.getKind() !== 'image') continue;\n\n          loadedTextures[resourceName] = loadedResources[resourceName].texture;\n          PixiResourcesLoader._initializeTexture(\n            resource,\n            loadedTextures[resourceName]\n          );\n        }\n      }\n\n      onComplete();\n    });\n  }\n\n  /**\n   * Return the PIXI texture represented by the given resource.\n   * If not loaded, it will load it.\n   * @returns The PIXI.Texture to be used. It can be loading, so you\n   * should listen to PIXI.Texture `update` event, and refresh your object\n   * if this event is triggered.\n   */\n  static getPIXITexture(project: gdProject, resourceName: string) {\n    if (loadedTextures[resourceName]) {\n      return loadedTextures[resourceName];\n    }\n\n    if (!project.getResourcesManager().hasResource(resourceName))\n      return invalidTexture;\n\n    const resource = project.getResourcesManager().getResource(resourceName);\n    if (resource.getKind() !== 'image') return invalidTexture;\n\n    loadedTextures[resourceName] = PIXI.Texture.from(\n      ResourcesLoader.getResourceFullUrl(project, resourceName, {\n        isResourceForPixi: true,\n      })\n    );\n\n    PixiResourcesLoader._initializeTexture(\n      resource,\n      loadedTextures[resourceName]\n    );\n    return loadedTextures[resourceName];\n  }\n\n  /**\n   * Return the PIXI video texture represented by the given resource.\n   * If not loaded, it will load it.\n   * @returns The PIXI.Texture to be used. It can be loading, so you\n   * should listen to PIXI.Texture `update` event, and refresh your object\n   * if this event is triggered.\n   */\n  static getPIXIVideoTexture(project: gdProject, resourceName: string) {\n    if (loadedTextures[resourceName]) {\n      return loadedTextures[resourceName];\n    }\n\n    if (!project.getResourcesManager().hasResource(resourceName))\n      return invalidTexture;\n\n    const resource = project.getResourcesManager().getResource(resourceName);\n    if (resource.getKind() !== 'video') return invalidTexture;\n\n    loadedTextures[resourceName] = PIXI.Texture.from(\n      ResourcesLoader.getResourceFullUrl(project, resourceName, {\n        disableCacheBurst: true, // Disable cache bursting for video because it prevent the video to be recognized as such (for a local file)\n        isResourceForPixi: true,\n      }),\n      {\n        scaleMode: PIXI.SCALE_MODES.LINEAR,\n        resourceOptions: {\n          autoPlay: false,\n        },\n      }\n    );\n\n    return loadedTextures[resourceName];\n  }\n\n  /**\n   * Load the given font from its url/filename.\n   * @returns a Promise that resolves with the font-family to be used\n   * to render a text with the font.\n   */\n  static loadFontFamily(\n    project: gdProject,\n    resourceName: string\n  ): Promise<string> {\n    // Avoid reloading a font if it's already cached\n    if (loadedFontFamilies[resourceName]) {\n      return Promise.resolve(loadedFontFamilies[resourceName]);\n    }\n\n    const fontFamily = slugs(resourceName);\n    let fullFilename = null;\n    if (project.getResourcesManager().hasResource(resourceName)) {\n      const resource = project.getResourcesManager().getResource(resourceName);\n      if (resource.getKind() === 'font') {\n        fullFilename = ResourcesLoader.getResourceFullUrl(\n          project,\n          resourceName,\n          {\n            isResourceForPixi: true,\n          }\n        );\n      }\n    } else {\n      // Compatibility with GD <= 5.0-beta56\n      // Assume resourceName is just the filename to the font\n      fullFilename = ResourcesLoader.getFullUrl(project, resourceName, {\n        isResourceForPixi: true,\n      });\n      // end of compatibility code\n    }\n\n    if (!fullFilename) {\n      // If no resource is found/resource is not a font, default to Arial,\n      // as done by the game engine too.\n      return Promise.resolve('Arial');\n    }\n\n    return loadFontFace(fontFamily, `url(\"${fullFilename}\")`, {}).then(\n      loadedFace => {\n        loadedFontFamilies[resourceName] = fontFamily;\n\n        return fontFamily;\n      }\n    );\n  }\n\n  /**\n   * Get the font family name for the given font resource.\n   * The font won't be loaded.\n   * @returns The font-family to be used to render a text with the font.\n   */\n  static getFontFamily(project: gdProject, resourceName: string) {\n    if (loadedFontFamilies[resourceName]) {\n      return loadedFontFamilies[resourceName];\n    }\n\n    const fontFamily = slugs(resourceName);\n    return fontFamily;\n  }\n\n  static getInvalidPIXITexture() {\n    return invalidTexture;\n  }\n\n  /**\n   * Get the the data from a json resource in the IDE.\n   */\n  static getResourceJsonData(\n    project: gdProject,\n    resourceName: string\n  ): Promise<any> {\n    if (!project.getResourcesManager().hasResource(resourceName))\n      return Promise.reject(\n        new Error(`Can't find resource called ${resourceName}.`)\n      );\n\n    const resource = project.getResourcesManager().getResource(resourceName);\n    if (resource.getKind() !== 'json')\n      return Promise.reject(\n        new Error(`The resource called ${resourceName} is not a json file.`)\n      );\n\n    const fullUrl = ResourcesLoader.getResourceFullUrl(project, resourceName, {\n      isResourceForPixi: true,\n    });\n    return axios.get(fullUrl).then(response => response.data);\n  }\n}\n","// @flow\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../../ResourcesList/ResourceExternalEditor.flow';\nimport { type EventsScope } from '../../InstructionOrExpression/EventsScope.flow';\nimport { type MessageDescriptor } from '../../Utils/i18n/MessageDescriptor.flow';\n\nexport type ParameterRenderingServiceType = {\n  components: any,\n  getParameterComponent: (type: string) => any,\n  getUserFriendlyTypeName: (rawType: string) => ?MessageDescriptor,\n};\n\ntype CommonProps = {|\n  // The parameter\n  parameterMetadata?: gdParameterMetadata,\n  onChange: string => void,\n  value: string,\n\n  // Context\n  project?: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  isInline?: boolean,\n  onRequestClose?: () => void,\n  resourceSources?: Array<ResourceSource>,\n  onChooseResource?: ChooseResourceFunction,\n  resourceExternalEditors?: Array<ResourceExternalEditor>,\n\n  // Pass the ParameterRenderingService to allow to render nested parameters\n  parameterRenderingService?: ParameterRenderingServiceType,\n|};\n\nexport type ExpressionParameters = {|\n  getParametersCount: () => number,\n  getParameter: (index: number) => string,\n|};\n\nexport type ParameterFieldProps = {|\n  ...CommonProps,\n\n  // Instruction in which the parameter is.\n  instruction?: gdInstruction,\n  // Metadata of the instruction in which the parameter is.\n  instructionMetadata?: gdInstructionMetadata,\n  // Expression in which the parameter is.\n  expression?: ExpressionParameters,\n  // Metadata of the instruction in which the parameter is.\n  expressionMetadata?: gdExpressionMetadata,\n\n  // The index of the parameter in the instruction or expression.\n  parameterIndex?: number,\n|};\n\nexport const getParameterValueOrDefault = (\n  value: string,\n  parameterMetadata: ?gdParameterMetadata\n) => {\n  if (value) return value;\n\n  const defaultValue =\n    parameterMetadata && parameterMetadata.isOptional()\n      ? parameterMetadata.getDefaultValue()\n      : '';\n  return defaultValue;\n};\n","// @flow\nimport {\n  type EnumeratedExpressionMetadata,\n  type InstructionOrExpressionScope,\n} from './EnumeratedInstructionOrExpressionMetadata.js';\nimport { mapVector } from '../Utils/MapFor';\nimport flatten from 'lodash/flatten';\nconst gd: libGDevelop = global.gd;\n\nconst GROUP_DELIMITER = '/';\n\nconst getExtensionPrefix = (extension: gdPlatformExtension): string => {\n  const allObjectsTypes = extension.getExtensionObjectsTypes();\n  const allBehaviorsTypes = extension.getBehaviorsTypes();\n\n  if (allObjectsTypes.size() > 0 || allBehaviorsTypes.size() > 0) {\n    return (\n      (extension.getName() === 'BuiltinObject'\n        ? 'Common expressions for all objects'\n        : extension.getFullName()) + GROUP_DELIMITER\n    );\n  }\n\n  return '';\n};\n\nconst enumerateExpressionMetadataMap = (\n  prefix: string,\n  expressions: gdMapStringExpressionMetadata,\n  scope: InstructionOrExpressionScope\n): Array<EnumeratedExpressionMetadata> => {\n  return mapVector(expressions.keys(), expressionType => {\n    const exprMetadata = expressions.get(expressionType);\n    if (!exprMetadata.isShown()) {\n      return null; // Skip hidden expressions\n    }\n\n    var parameters = [];\n    for (var i = 0; i < exprMetadata.getParametersCount(); i++) {\n      if (scope.objectMetadata && i === 0) continue;\n      if (scope.behaviorMetadata && i <= 1) continue; //Skip object and behavior parameters\n      if (exprMetadata.getParameter(i).isCodeOnly()) continue;\n\n      parameters.push(exprMetadata.getParameter(i));\n    }\n\n    return {\n      type: expressionType,\n      name: expressionType,\n      displayedName: exprMetadata.getFullName(),\n      fullGroupName: prefix + exprMetadata.getGroup(),\n      iconFilename: exprMetadata.getSmallIconFilename(),\n      metadata: exprMetadata,\n      parameters: parameters,\n      scope,\n      isPrivate: exprMetadata.isPrivate(),\n    };\n  }).filter(Boolean);\n};\n\n/** Enumerate all the free expressions available. */\nexport const enumerateFreeExpressions = (\n  type: string\n): Array<EnumeratedExpressionMetadata> => {\n  const allExtensions = gd\n    .asPlatform(gd.JsPlatform.get())\n    .getAllPlatformExtensions();\n\n  return flatten(\n    mapVector(allExtensions, extension => {\n      const prefix = getExtensionPrefix(extension);\n      return enumerateExpressionMetadataMap(\n        prefix,\n        type === 'string'\n          ? extension.getAllStrExpressions()\n          : extension.getAllExpressions(),\n        {\n          objectMetadata: undefined,\n          behaviorMetadata: undefined,\n        }\n      );\n    })\n  );\n};\n\n/** Enumerate the expressions available for the given object type. */\nexport const enumerateObjectExpressions = (\n  type: string,\n  objectType: string\n): Array<EnumeratedExpressionMetadata> => {\n  const extensionAndObjectMetadata = gd.MetadataProvider.getExtensionAndObjectMetadata(\n    gd.JsPlatform.get(),\n    objectType\n  );\n  const extension = extensionAndObjectMetadata.getExtension();\n  const objectMetadata = extensionAndObjectMetadata.getMetadata();\n  const scope = { objectMetadata };\n\n  let objectsExpressions = enumerateExpressionMetadataMap(\n    '',\n    type === 'string'\n      ? extension.getAllStrExpressionsForObject(objectType)\n      : extension.getAllExpressionsForObject(objectType),\n    scope\n  );\n\n  const baseObjectType = ''; /* An empty string means the base object */\n  if (objectType !== baseObjectType) {\n    const extensionAndObjectMetadata = gd.MetadataProvider.getExtensionAndObjectMetadata(\n      gd.JsPlatform.get(),\n      baseObjectType\n    );\n    const extension = extensionAndObjectMetadata.getExtension();\n\n    objectsExpressions = [\n      ...objectsExpressions,\n      ...enumerateExpressionMetadataMap(\n        '',\n        type === 'string'\n          ? extension.getAllStrExpressionsForObject(baseObjectType)\n          : extension.getAllExpressionsForObject(baseObjectType),\n        scope\n      ),\n    ];\n  }\n\n  return objectsExpressions;\n};\n\n/** Enumerate the expressions available for the given behavior type. */\nexport const enumerateBehaviorExpressions = (\n  type: string,\n  behaviorType: string\n): Array<EnumeratedExpressionMetadata> => {\n  const extensionAndBehaviorMetadata = gd.MetadataProvider.getExtensionAndBehaviorMetadata(\n    gd.JsPlatform.get(),\n    behaviorType\n  );\n  const extension = extensionAndBehaviorMetadata.getExtension();\n  const behaviorMetadata = extensionAndBehaviorMetadata.getMetadata();\n  const scope = { behaviorMetadata };\n\n  return enumerateExpressionMetadataMap(\n    '',\n    type === 'string'\n      ? extension.getAllStrExpressionsForBehavior(behaviorType)\n      : extension.getAllExpressionsForBehavior(behaviorType),\n    scope\n  );\n};\n\n/** Enumerate all the expressions available. */\nexport const enumerateAllExpressions = (\n  type: string\n): Array<EnumeratedExpressionMetadata> => {\n  const freeExpressions = enumerateFreeExpressions(type);\n  const objectsExpressions = [];\n  const behaviorsExpressions = [];\n\n  const allExtensions = gd\n    .asPlatform(gd.JsPlatform.get())\n    .getAllPlatformExtensions();\n  mapVector(allExtensions, extension => {\n    const prefix = getExtensionPrefix(extension);\n\n    //Objects expressions:\n    mapVector(extension.getExtensionObjectsTypes(), objectType => {\n      const objectMetadata = extension.getObjectMetadata(objectType);\n      objectsExpressions.push.apply(\n        objectsExpressions,\n        enumerateExpressionMetadataMap(\n          prefix,\n          type === 'string'\n            ? extension.getAllStrExpressionsForObject(objectType)\n            : extension.getAllExpressionsForObject(objectType),\n          { objectMetadata }\n        )\n      );\n    });\n\n    //Behaviors expressions:\n    mapVector(extension.getBehaviorsTypes(), behaviorType => {\n      const behaviorMetadata = extension.getBehaviorMetadata(behaviorType);\n      behaviorsExpressions.push.apply(\n        behaviorsExpressions,\n        enumerateExpressionMetadataMap(\n          prefix,\n          type === 'string'\n            ? extension.getAllStrExpressionsForBehavior(behaviorType)\n            : extension.getAllExpressionsForBehavior(behaviorType),\n          { behaviorMetadata }\n        )\n      );\n    });\n  });\n\n  return [...freeExpressions, ...objectsExpressions, ...behaviorsExpressions];\n};\n\nexport const filterExpressions = (\n  list: Array<EnumeratedExpressionMetadata>,\n  searchText: string\n): Array<EnumeratedExpressionMetadata> => {\n  if (!searchText) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  const matchCritera = (enumeratedExpression: EnumeratedExpressionMetadata) => {\n    return (\n      enumeratedExpression.type.toLowerCase().indexOf(lowercaseSearchText) !==\n      -1\n    );\n  };\n\n  const favorExactMatch = (\n    list: Array<EnumeratedExpressionMetadata>\n  ): Array<EnumeratedExpressionMetadata> => {\n    if (!searchText) {\n      return list;\n    }\n\n    for (var i = 0; i < list.length; ++i) {\n      if (list[i].type.toLowerCase() === lowercaseSearchText) {\n        const exactMatch = list[i];\n        list.splice(i, 1);\n        list.unshift(exactMatch);\n      }\n    }\n\n    return list;\n  };\n\n  // See EnumerateInstructions for a similar logic for instructions\n  return favorExactMatch(list.filter(matchCritera));\n};\n","// @flow\nimport * as React from 'react';\nimport { ListItem } from '../../../UI/List';\nimport ListIcon from '../../../UI/ListIcon';\nimport { type EnumeratedInstructionOrExpressionMetadata } from '../../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js';\nimport { getInstructionListItemValue, getInstructionListItemKey } from './Keys';\n\ntype Props = {|\n  instructionOrExpressionMetadata: EnumeratedInstructionOrExpressionMetadata,\n  iconSize: number,\n  onClick: () => void,\n  selectedValue: ?string,\n|};\n\nexport const renderInstructionOrExpressionListItem = ({\n  instructionOrExpressionMetadata,\n  iconSize,\n  onClick,\n  selectedValue,\n}: Props) => {\n  return (\n    <ListItem\n      key={getInstructionListItemKey(instructionOrExpressionMetadata)}\n      selected={\n        selectedValue ===\n        getInstructionListItemValue(instructionOrExpressionMetadata.type)\n      }\n      primaryText={instructionOrExpressionMetadata.displayedName}\n      secondaryText={instructionOrExpressionMetadata.fullGroupName}\n      leftIcon={\n        <ListIcon\n          iconSize={iconSize}\n          src={instructionOrExpressionMetadata.iconFilename}\n        />\n      }\n      onClick={onClick}\n    />\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { ListItem, type ListItemRefType } from '../../../UI/List';\nimport ListIcon from '../../../UI/ListIcon';\nimport { type InstructionOrExpressionTreeNode } from '../../../InstructionOrExpression/CreateTree';\nimport { type EnumeratedInstructionOrExpressionMetadata } from '../../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js';\nimport Subheader from '../../../UI/Subheader';\nimport flatten from 'lodash/flatten';\nimport { getSubheaderListItemKey, getInstructionListItemValue } from './Keys';\n\ntype Props<T> = {|\n  instructionTreeNode: InstructionOrExpressionTreeNode,\n  onChoose: (type: string, T) => void,\n  iconSize: number,\n  useSubheaders?: boolean,\n  selectedValue: ?string,\n  initiallyOpenedPath?: ?Array<string>,\n\n  // Optional ref that will be filled with the selected ListItem\n  selectedItemRef?: { current: null | ListItemRefType },\n|};\n\nexport const renderInstructionOrExpressionTree = <\n  T: EnumeratedInstructionOrExpressionMetadata\n>({\n  instructionTreeNode,\n  onChoose,\n  iconSize,\n  useSubheaders,\n  selectedValue,\n  selectedItemRef,\n  initiallyOpenedPath,\n}: Props<T>): Array<React$Element<any> | null> => {\n  const [initiallyOpenedKey, ...restOfInitiallyOpenedPath] =\n    initiallyOpenedPath || [];\n\n  return flatten(\n    Object.keys(instructionTreeNode).map(key => {\n      // In theory, we should have a way to distinguish\n      // between instruction (leaf nodes) and group (nodes). We use\n      // the \"type\" properties, but this will fail if a group is called \"type\"\n      // (hence the flow errors, which are valid warnings)\n      // $FlowFixMe\n      const instructionOrGroup = instructionTreeNode[key];\n      if (!instructionOrGroup) return null;\n\n      if (typeof instructionOrGroup.type === 'string') {\n        // $FlowFixMe - see above\n        const instructionInformation: T = instructionOrGroup;\n        const value = getInstructionListItemValue(instructionOrGroup.type);\n        const selected = selectedValue === value;\n        return (\n          <ListItem\n            key={value}\n            primaryText={key}\n            selected={selected}\n            leftIcon={\n              <ListIcon\n                iconSize={iconSize}\n                src={instructionInformation.iconFilename}\n              />\n            }\n            onClick={() => {\n              onChoose(instructionInformation.type, instructionInformation);\n            }}\n            ref={selected ? selectedItemRef : undefined}\n          />\n        );\n      } else {\n        // $FlowFixMe - see above\n        const groupOfInstructionInformation: InstructionOrExpressionTreeNode = instructionOrGroup;\n        if (useSubheaders) {\n          return [\n            <Subheader key={getSubheaderListItemKey(key)}>{key}</Subheader>,\n          ].concat(\n            renderInstructionOrExpressionTree({\n              instructionTreeNode: groupOfInstructionInformation,\n              onChoose,\n              iconSize,\n              useSubheaders: false,\n              selectedValue,\n              selectedItemRef,\n              initiallyOpenedPath: restOfInitiallyOpenedPath,\n            })\n          );\n        } else {\n          const initiallyOpen = initiallyOpenedKey === key;\n          return (\n            <ListItem\n              key={key}\n              primaryText={key}\n              autoGenerateNestedIndicator={true}\n              initiallyOpen={initiallyOpen}\n              renderNestedItems={() =>\n                renderInstructionOrExpressionTree({\n                  instructionTreeNode: groupOfInstructionInformation,\n                  onChoose,\n                  iconSize,\n                  selectedValue,\n                  selectedItemRef,\n                  initiallyOpenedPath: initiallyOpen\n                    ? restOfInitiallyOpenedPath\n                    : undefined,\n                })\n              }\n            />\n          );\n        }\n      }\n    })\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport VariableField, { renderVariableWithIcon } from './VariableField';\nimport VariablesEditorDialog from '../../VariablesList/VariablesEditorDialog';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\ntype State = {|\n  editorOpen: boolean,\n|};\n\nexport default class SceneVariableField extends React.Component<\n  ParameterFieldProps,\n  State\n> {\n  _field: ?VariableField;\n  state = {\n    editorOpen: false,\n  };\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const { scope } = this.props;\n    const { layout } = scope;\n\n    return (\n      <React.Fragment>\n        <VariableField\n          variablesContainer={layout ? layout.getVariables() : null}\n          parameterMetadata={this.props.parameterMetadata}\n          value={this.props.value}\n          onChange={this.props.onChange}\n          isInline={this.props.isInline}\n          onRequestClose={this.props.onRequestClose}\n          ref={field => (this._field = field)}\n          onOpenDialog={() => this.setState({ editorOpen: true })}\n          globalObjectsContainer={this.props.globalObjectsContainer}\n          objectsContainer={this.props.objectsContainer}\n          scope={scope}\n        />\n        {this.state.editorOpen && layout && (\n          <VariablesEditorDialog\n            title={<Trans>Scene Variables</Trans>}\n            open\n            variablesContainer={layout.getVariables()}\n            onCancel={() => this.setState({ editorOpen: false })}\n            onApply={() => {\n              this.setState({ editorOpen: false });\n            }}\n            emptyExplanationMessage={\n              <Trans>\n                Scene variables can be used to store any value or text during\n                the game.\n              </Trans>\n            }\n            emptyExplanationSecondMessage={\n              <Trans>\n                For example, you can have a variable called Score representing\n                the current score of the player.\n              </Trans>\n            }\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport const renderInlineSceneVariable = (\n  props: ParameterInlineRendererProps\n) => {\n  return renderVariableWithIcon(\n    props,\n    'res/types/scenevar.png',\n    'scene variable'\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport {\n  DragSource,\n  type DragSourceMonitor,\n  type DragSourceConnector,\n  type ConnectDragSource,\n  DropTarget,\n  type DropTargetMonitor,\n  type DropTargetConnector,\n  type ConnectDropTarget,\n} from 'react-dnd';\n\ntype Props<DraggedItemType> = {|\n  children: ({\n    connectDragSource: ConnectDragSource,\n    connectDropTarget: ConnectDropTarget,\n    isOver: boolean,\n    canDrop: boolean,\n  }) => ?React.Node,\n  beginDrag: () => DraggedItemType,\n  canDrag?: (item: DraggedItemType) => boolean,\n  canDrop: (item: DraggedItemType) => boolean,\n  drop: () => void,\n|};\n\ntype DragSourceProps = {|\n  connectDragSource: ConnectDragSource,\n|};\n\ntype DropTargetProps = {|\n  connectDropTarget: ConnectDropTarget,\n  isOver: boolean,\n  canDrop: boolean,\n|};\n\ntype InnerDragSourceAndDropTargetProps<DraggedItemType> = {|\n  ...Props<DraggedItemType>,\n  ...DragSourceProps,\n  ...DropTargetProps,\n|};\n\nexport const makeDragSourceAndDropTarget = <DraggedItemType>(\n  reactDndType: string\n): ((Props<DraggedItemType>) => React.Node) => {\n  const sourceSpec = {\n    canDrag(props: Props<DraggedItemType>, monitor: DragSourceMonitor) {\n      const item = monitor.getItem();\n      const canDrag = props.canDrag || null;\n      if (canDrag) return canDrag(item);\n      return true;\n    },\n    beginDrag(props: InnerDragSourceAndDropTargetProps<DraggedItemType>) {\n      return props.beginDrag();\n    },\n  };\n\n  function sourceCollect(\n    connect: DragSourceConnector,\n    monitor: DragSourceMonitor\n  ): DragSourceProps {\n    return {\n      connectDragSource: connect.dragSource(),\n    };\n  }\n\n  const targetSpec = {\n    canDrop(props: Props<DraggedItemType>, monitor: DropTargetMonitor) {\n      const item = monitor.getItem();\n      return item && props.canDrop(item);\n    },\n    drop(props: Props<DraggedItemType>, monitor: DropTargetMonitor) {\n      if (monitor.didDrop()) {\n        return; // Drop already handled by another target\n      }\n      props.drop();\n    },\n  };\n\n  function targetCollect(\n    connect: DropTargetConnector,\n    monitor: DropTargetMonitor\n  ): DropTargetProps {\n    return {\n      connectDropTarget: connect.dropTarget(),\n      isOver: monitor.isOver({ shallow: true }),\n      canDrop: monitor.canDrop(),\n    };\n  }\n\n  const InnerDragSourceAndDropTarget = DragSource(\n    reactDndType,\n    sourceSpec,\n    sourceCollect\n  )(\n    DropTarget(reactDndType, targetSpec, targetCollect)(\n      ({ children, connectDragSource, connectDropTarget, isOver, canDrop }) => {\n        return children({\n          connectDragSource,\n          connectDropTarget,\n          isOver,\n          canDrop,\n        });\n      }\n    )\n  );\n\n  return (props: Props<DraggedItemType>) => (\n    <InnerDragSourceAndDropTarget {...props} />\n  );\n};\n","// @flow\nimport Clipboard, { SafeExtractor } from '../Utils/Clipboard';\nimport {\n  type SelectionState,\n  getSelectedEvents,\n  hasEventSelected,\n  getSelectedEventContexts,\n  hasInstructionSelected,\n  hasInstructionsListSelected,\n  getSelectedInstructionsContexts,\n  getSelectedInstructionsListsContexts,\n  type InstructionsListContext,\n} from './SelectionHandler';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\nconst gd: libGDevelop = global.gd;\n\nexport const CLIPBOARD_KIND = 'EventsAndInstructions';\n\nexport const hasClipboardEvents = () => {\n  if (!Clipboard.has(CLIPBOARD_KIND)) return false;\n  const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n  const eventsCount = SafeExtractor.extractNumberProperty(\n    clipboardContent,\n    'eventsCount'\n  );\n  if (eventsCount === null) return false;\n\n  return eventsCount > 0;\n};\n\nexport const hasClipboardConditions = () => {\n  if (!Clipboard.has(CLIPBOARD_KIND)) return false;\n  const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n  const conditionsCount = SafeExtractor.extractNumberProperty(\n    clipboardContent,\n    'conditionsCount'\n  );\n  if (conditionsCount === null) return false;\n\n  return conditionsCount > 0;\n};\n\nexport const hasClipboardActions = () => {\n  if (!Clipboard.has(CLIPBOARD_KIND)) return false;\n  const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n  const actionsCount = SafeExtractor.extractNumberProperty(\n    clipboardContent,\n    'actionsCount'\n  );\n  if (actionsCount === null) return false;\n\n  return actionsCount > 0;\n};\n\nexport const copySelectionToClipboard = (selection: SelectionState) => {\n  const eventsList = new gd.EventsList();\n  const actionsList = new gd.InstructionsList();\n  const conditionsList = new gd.InstructionsList();\n\n  getSelectedEvents(selection).forEach(event =>\n    eventsList.insertEvent(event, eventsList.getEventsCount())\n  );\n  getSelectedInstructionsContexts(selection).forEach(instructionContext => {\n    if (instructionContext.isCondition) {\n      conditionsList.insert(\n        instructionContext.instruction,\n        conditionsList.size()\n      );\n    } else {\n      actionsList.insert(instructionContext.instruction, actionsList.size());\n    }\n  });\n\n  Clipboard.set(CLIPBOARD_KIND, {\n    eventsList: serializeToJSObject(eventsList),\n    eventsCount: eventsList.getEventsCount(),\n    actionsList: serializeToJSObject(actionsList),\n    actionsCount: actionsList.size(),\n    conditionsList: serializeToJSObject(conditionsList),\n    conditionsCount: conditionsList.size(),\n  });\n\n  eventsList.delete();\n  actionsList.delete();\n  conditionsList.delete();\n};\n\nexport const pasteEventsFromClipboardInSelection = (\n  project: gdProject,\n  selection: SelectionState\n): boolean => {\n  if (!hasEventSelected(selection) || !hasClipboardEvents()) return false;\n\n  const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n  const eventsListContent = SafeExtractor.extractArrayProperty(\n    clipboardContent,\n    'eventsList'\n  );\n  if (!eventsListContent) return false;\n\n  const eventsList = new gd.EventsList();\n  unserializeFromJSObject(\n    eventsList,\n    eventsListContent,\n    'unserializeFrom',\n    project\n  );\n  getSelectedEventContexts(selection).forEach(eventContext => {\n    eventContext.eventsList.insertEvents(\n      eventsList,\n      0,\n      eventsList.getEventsCount(),\n      eventContext.indexInList\n    );\n  });\n  eventsList.delete();\n\n  return true;\n};\n\nexport const pasteInstructionsFromClipboardInSelection = (\n  project: gdProject,\n  selection: SelectionState\n): boolean => {\n  if (\n    (!hasInstructionSelected(selection) &&\n      !hasInstructionsListSelected(selection)) ||\n    (!hasClipboardConditions() && !hasClipboardActions())\n  )\n    return false;\n\n  const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n  const actionsListContent = SafeExtractor.extractArrayProperty(\n    clipboardContent,\n    'actionsList'\n  );\n  const conditionsListContent = SafeExtractor.extractArrayProperty(\n    clipboardContent,\n    'conditionsList'\n  );\n  if (!actionsListContent || !conditionsListContent) return false;\n\n  const actionsList = new gd.InstructionsList();\n  const conditionsList = new gd.InstructionsList();\n  unserializeFromJSObject(\n    actionsList,\n    actionsListContent,\n    'unserializeFrom',\n    project\n  );\n  unserializeFromJSObject(\n    conditionsList,\n    conditionsListContent,\n    'unserializeFrom',\n    project\n  );\n  getSelectedInstructionsContexts(selection).forEach(instructionContext => {\n    if (instructionContext.isCondition) {\n      instructionContext.instrsList.insertInstructions(\n        conditionsList,\n        0,\n        conditionsList.size(),\n        instructionContext.indexInList\n      );\n    } else {\n      instructionContext.instrsList.insertInstructions(\n        actionsList,\n        0,\n        actionsList.size(),\n        instructionContext.indexInList\n      );\n    }\n  });\n  getSelectedInstructionsListsContexts(selection).forEach(\n    instructionsListContext => {\n      if (instructionsListContext.isCondition) {\n        instructionsListContext.instrsList.insertInstructions(\n          conditionsList,\n          0,\n          conditionsList.size(),\n          instructionsListContext.instrsList.size()\n        );\n      } else {\n        instructionsListContext.instrsList.insertInstructions(\n          actionsList,\n          0,\n          actionsList.size(),\n          instructionsListContext.instrsList.size()\n        );\n      }\n    }\n  );\n  conditionsList.delete();\n  actionsList.delete();\n\n  return true;\n};\n\nexport const pasteInstructionsFromClipboardInInstructionsList = (\n  project: gdProject,\n  instructionsListContext: InstructionsListContext\n) => {\n  if (!hasClipboardConditions() && !hasClipboardActions()) return false;\n\n  const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n  const actionsListContent = SafeExtractor.extractArrayProperty(\n    clipboardContent,\n    'actionsList'\n  );\n  const conditionsListContent = SafeExtractor.extractArrayProperty(\n    clipboardContent,\n    'conditionsList'\n  );\n  if (!actionsListContent || !conditionsListContent) return;\n\n  const actionsList = new gd.InstructionsList();\n  const conditionsList = new gd.InstructionsList();\n  unserializeFromJSObject(\n    actionsList,\n    actionsListContent,\n    'unserializeFrom',\n    project\n  );\n  unserializeFromJSObject(\n    conditionsList,\n    conditionsListContent,\n    'unserializeFrom',\n    project\n  );\n\n  if (instructionsListContext.isCondition) {\n    instructionsListContext.instrsList.insertInstructions(\n      conditionsList,\n      0,\n      conditionsList.size(),\n      instructionsListContext.instrsList.size()\n    );\n  } else {\n    instructionsListContext.instrsList.insertInstructions(\n      actionsList,\n      0,\n      actionsList.size(),\n      instructionsListContext.instrsList.size()\n    );\n  }\n  conditionsList.delete();\n  actionsList.delete();\n\n  return true;\n};\n","// @flow\nimport * as React from 'react';\nimport {\n  DropTarget,\n  type DropTargetMonitor,\n  type DropTargetConnector,\n  type ConnectDropTarget,\n} from 'react-dnd';\n\ntype Props<DraggedItemType> = {|\n  children: ({\n    connectDropTarget: ConnectDropTarget,\n    isOver: boolean,\n    canDrop: boolean,\n  }) => ?React.Node,\n  canDrop: (item: DraggedItemType) => boolean,\n  hover?: (monitor: DropTargetMonitor) => void,\n  drop: (monitor: DropTargetMonitor) => void,\n|};\n\ntype DropTargetProps = {|\n  connectDropTarget: ConnectDropTarget,\n  isOver: boolean,\n  canDrop: boolean,\n|};\n\nexport const makeDropTarget = <DraggedItemType>(\n  reactDndType: string\n): ((Props<DraggedItemType>) => React.Node) => {\n  const targetSpec = {\n    canDrop(props: Props<DraggedItemType>, monitor: DropTargetMonitor) {\n      const item = monitor.getItem();\n      return item && props.canDrop(item);\n    },\n    hover(props: Props<DraggedItemType>, monitor: DropTargetMonitor) {\n      if (props.hover) props.hover(monitor);\n    },\n    drop(props: Props<DraggedItemType>, monitor: DropTargetMonitor) {\n      if (monitor.didDrop()) {\n        return; // Drop already handled by another target\n      }\n      props.drop(monitor);\n    },\n  };\n\n  function targetCollect(\n    connect: DropTargetConnector,\n    monitor: DropTargetMonitor\n  ): DropTargetProps {\n    return {\n      connectDropTarget: connect.dropTarget(),\n      isOver: monitor.isOver({ shallow: true }),\n      canDrop: monitor.canDrop(),\n    };\n  }\n\n  const InnerDropTarget = DropTarget(reactDndType, targetSpec, targetCollect)(\n    ({ children, connectDropTarget, isOver, canDrop }) => {\n      return children({\n        connectDropTarget,\n        isOver,\n        canDrop,\n      });\n    }\n  );\n\n  return (props: Props<DraggedItemType>) => <InnerDropTarget {...props} />;\n};\n","// @flow\n\nimport flatten from 'lodash/flatten';\nimport { mapFor } from '../Utils/MapFor';\nconst gd: libGDevelop = global.gd;\n\nexport type EventMetadata = {|\n  type: string,\n  fullName: string,\n  description: string,\n|};\n\nexport const enumerateEventsMetadata = (): Array<EventMetadata> => {\n  const allExtensions = gd\n    .asPlatform(gd.JsPlatform.get())\n    .getAllPlatformExtensions();\n\n  return flatten(\n    mapFor(0, allExtensions.size(), i => {\n      const extension = allExtensions.at(i);\n      const extensionEvents = extension.getAllEvents();\n\n      return extensionEvents\n        .keys()\n        .toJSArray()\n        .map(type => {\n          const metadata = extensionEvents.get(type);\n          return {\n            type,\n            fullName: metadata.getFullName(),\n            description: metadata.getDescription(),\n          };\n        });\n    })\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport * as React from 'react';\nimport Toggle from '../../UI/Toggle';\nimport { mapFor } from '../../Utils/MapFor';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport ParameterRenderingService from '../ParameterRenderingService';\nimport HelpButton from '../../UI/HelpButton';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../../ResourcesList/ResourceExternalEditor.flow';\nimport { Line, Spacer } from '../../UI/Grid';\nimport AlertMessage from '../../UI/AlertMessage';\nimport DismissableAlertMessage from '../../UI/DismissableAlertMessage';\nimport Window from '../../Utils/Window';\nimport {\n  getExtraInstructionInformation,\n  getInstructionTutorialHints,\n} from '../../Hints';\nimport DismissableTutorialMessage from '../../Hints/DismissableTutorialMessage';\nimport { isAnEventFunctionMetadata } from '../../EventsFunctionsExtensionsLoader';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport IconButton from '../../UI/IconButton';\nimport { type EventsScope } from '../../InstructionOrExpression/EventsScope.flow';\nimport { getObjectParameterIndex } from '../../InstructionOrExpression/EnumerateInstructions';\nimport Text from '../../UI/Text';\nimport { getInstructionMetadata } from './NewInstructionEditor';\nimport { ColumnStackLayout } from '../../UI/Layout';\nimport { setupInstructionParameters } from '../../InstructionOrExpression/SetupInstructionParameters';\nconst gd: libGDevelop = global.gd;\n\nconst styles = {\n  // When displaying parameters, take all the height:\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n  },\n  // When displaying the empty message, center the message:\n  emptyContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  parametersContainer: {\n    flex: 1,\n    overflowY: 'auto',\n  },\n  icon: {\n    width: 24,\n    height: 24,\n    marginRight: 8,\n    paddingTop: 12,\n    flexShrink: 0,\n  },\n  invertToggle: {\n    marginTop: 8,\n  },\n  description: {\n    whiteSpace: 'pre-wrap',\n  },\n};\n\ntype Props = {|\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  objectName?: ?string,\n  instruction: gdInstruction,\n  isCondition: boolean,\n  focusOnMount?: boolean,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  style?: Object,\n  openInstructionOrExpression: (\n    extension: gdPlatformExtension,\n    type: string\n  ) => void,\n  noHelpButton?: boolean,\n|};\ntype State = {|\n  isDirty: boolean,\n|};\n\nconst isParameterVisible = (\n  parameterMetadata: gdParameterMetadata,\n  parameterIndex: number,\n  objectParameterIndex: ?number\n) => {\n  // Hide parameters that are used only for code generation\n  if (parameterMetadata.isCodeOnly()) return false;\n\n  // For objects, hide the first object parameter, which is by convention the object name.\n  if (parameterIndex === objectParameterIndex) return false;\n\n  return true;\n};\n\nexport default class InstructionParametersEditor extends React.Component<\n  Props,\n  State\n> {\n  _firstVisibleField: ?any = {};\n  state = {\n    isDirty: false,\n  };\n\n  componentDidMount() {\n    if (this.props.focusOnMount) {\n      setTimeout(() => {\n        this.focus();\n      }, 300); // Let the time to the dialog that is potentially containing the InstructionParametersEditor to finish its transition.\n    }\n  }\n\n  focus() {\n    const { instruction, isCondition, project } = this.props;\n\n    // Verify that there is a field to focus.\n    if (\n      this._getVisibleParametersCount(\n        getInstructionMetadata({\n          instructionType: instruction.getType(),\n          isCondition,\n          project,\n        }),\n        this.props.objectName\n      ) !== 0\n    ) {\n      if (this._firstVisibleField && this._firstVisibleField.focus) {\n        this._firstVisibleField.focus();\n      }\n    }\n  }\n\n  _getVisibleParametersCount(\n    instructionMetadata: ?gdInstructionMetadata,\n    objectName: ?string\n  ) {\n    if (!instructionMetadata) return 0;\n\n    const objectParameterIndex = objectName\n      ? getObjectParameterIndex(instructionMetadata)\n      : -1;\n\n    return mapFor(0, instructionMetadata.getParametersCount(), i => {\n      if (!instructionMetadata) return false;\n      const parameterMetadata = instructionMetadata.getParameter(i);\n\n      return isParameterVisible(parameterMetadata, i, objectParameterIndex);\n    }).filter(isVisible => isVisible).length;\n  }\n\n  _openExtension = (i18n: I18nType) => {\n    if (this.state.isDirty) {\n      const answer = Window.showConfirmDialog(\n        i18n._(\n          t`You've made some changes here. Are you sure you want to discard them and open the function?`\n        )\n      );\n      if (!answer) return;\n    }\n\n    const { instruction, isCondition, project } = this.props;\n    const instructionType = instruction.getType();\n    if (!instructionType) return null;\n\n    const extension = isCondition\n      ? gd.MetadataProvider.getExtensionAndConditionMetadata(\n          project.getCurrentPlatform(),\n          instructionType\n        ).getExtension()\n      : gd.MetadataProvider.getExtensionAndActionMetadata(\n          project.getCurrentPlatform(),\n          instructionType\n        ).getExtension();\n\n    this.props.openInstructionOrExpression(extension, instructionType);\n  };\n\n  _renderEmpty() {\n    return (\n      <div style={{ ...styles.emptyContainer, ...this.props.style }}>\n        <EmptyMessage>\n          {this.props.isCondition ? (\n            <Trans>\n              Choose a condition (or an object then a condition) on the left\n            </Trans>\n          ) : (\n            <Trans>\n              Choose an action (or an object then an action) on the left\n            </Trans>\n          )}\n        </EmptyMessage>\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      instruction,\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      noHelpButton,\n      objectName,\n      isCondition,\n      scope,\n    } = this.props;\n\n    const instructionType = instruction.getType();\n    const instructionMetadata = getInstructionMetadata({\n      instructionType,\n      isCondition,\n      project,\n    });\n    if (!instructionMetadata) return this._renderEmpty();\n\n    const helpPage = instructionMetadata.getHelpPath();\n    const instructionExtraInformation = getExtraInstructionInformation(\n      instructionType\n    );\n    const tutorialHints = getInstructionTutorialHints(instructionType);\n    const objectParameterIndex = objectName\n      ? getObjectParameterIndex(instructionMetadata)\n      : -1;\n\n    setupInstructionParameters(\n      globalObjectsContainer,\n      objectsContainer,\n      instruction,\n      instructionMetadata,\n      objectName\n    );\n\n    let parameterFieldIndex = 0;\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <div style={styles.container}>\n            <Line alignItems=\"flex-start\">\n              <img\n                src={instructionMetadata.getIconFilename()}\n                alt=\"\"\n                style={styles.icon}\n              />\n              <Text style={styles.description}>\n                {instructionMetadata.getDescription()}\n              </Text>\n              {isAnEventFunctionMetadata(instructionMetadata) && (\n                <IconButton\n                  onClick={() => {\n                    this._openExtension(i18n);\n                  }}\n                >\n                  <OpenInNew />\n                </IconButton>\n              )}\n            </Line>\n            {instructionExtraInformation && (\n              <Line>\n                {instructionExtraInformation.identifier === undefined ? (\n                  <AlertMessage kind={instructionExtraInformation.kind}>\n                    {i18n._(instructionExtraInformation.message)}\n                  </AlertMessage>\n                ) : (\n                  <DismissableAlertMessage\n                    kind={instructionExtraInformation.kind}\n                    identifier={instructionExtraInformation.identifier}\n                  >\n                    {i18n._(instructionExtraInformation.message)}\n                  </DismissableAlertMessage>\n                )}\n              </Line>\n            )}\n            {tutorialHints.length ? (\n              <Line>\n                <ColumnStackLayout expand>\n                  {tutorialHints.map(tutorialHint => (\n                    <DismissableTutorialMessage\n                      key={tutorialHint.identifier}\n                      tutorialHint={tutorialHint}\n                    />\n                  ))}\n                </ColumnStackLayout>\n              </Line>\n            ) : null}\n            <Spacer />\n            <div key={instructionType} style={styles.parametersContainer}>\n              <ColumnStackLayout noMargin>\n                {mapFor(0, instructionMetadata.getParametersCount(), i => {\n                  const parameterMetadata = instructionMetadata.getParameter(i);\n                  if (\n                    !isParameterVisible(\n                      parameterMetadata,\n                      i,\n                      objectParameterIndex\n                    )\n                  )\n                    return null;\n\n                  const parameterMetadataType = parameterMetadata.getType();\n                  const ParameterComponent = ParameterRenderingService.getParameterComponent(\n                    parameterMetadataType\n                  );\n\n                  // Track the field count on screen, to affect the ref to the\n                  // first visible field.\n                  const isFirstVisibleParameterField =\n                    parameterFieldIndex === 0;\n                  parameterFieldIndex++;\n\n                  return (\n                    <ParameterComponent\n                      instructionMetadata={instructionMetadata}\n                      instruction={instruction}\n                      parameterMetadata={parameterMetadata}\n                      parameterIndex={i}\n                      value={instruction.getParameter(i)}\n                      onChange={value => {\n                        if (instruction.getParameter(i) !== value) {\n                          instruction.setParameter(i, value);\n                          this.setState({\n                            isDirty: true,\n                          });\n                        }\n                      }}\n                      project={project}\n                      scope={scope}\n                      globalObjectsContainer={globalObjectsContainer}\n                      objectsContainer={objectsContainer}\n                      key={i}\n                      parameterRenderingService={ParameterRenderingService}\n                      resourceSources={this.props.resourceSources}\n                      onChooseResource={this.props.onChooseResource}\n                      resourceExternalEditors={\n                        this.props.resourceExternalEditors\n                      }\n                      ref={field => {\n                        if (isFirstVisibleParameterField) {\n                          this._firstVisibleField = field;\n                        }\n                      }}\n                    />\n                  );\n                })}\n              </ColumnStackLayout>\n              {this._getVisibleParametersCount(\n                instructionMetadata,\n                objectName\n              ) === 0 && (\n                <EmptyMessage>\n                  <Trans>There is nothing to configure.</Trans>\n                </EmptyMessage>\n              )}\n              {this.props.isCondition && (\n                <Toggle\n                  label={<Trans>Invert condition</Trans>}\n                  labelPosition=\"right\"\n                  toggled={instruction.isInverted()}\n                  style={styles.invertToggle}\n                  onToggle={(e, enabled) => {\n                    instruction.setInverted(enabled);\n                    this.forceUpdate();\n                  }}\n                />\n              )}\n            </div>\n            <Line>\n              {!noHelpButton && helpPage && (\n                <HelpButton\n                  helpPagePath={instructionMetadata.getHelpPath()}\n                  label={\n                    this.props.isCondition ? (\n                      <Trans>Help for this condition</Trans>\n                    ) : (\n                      <Trans>Help for this action</Trans>\n                    )\n                  }\n                />\n              )}\n            </Line>\n          </div>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { getObjectParameterIndex } from './EnumerateInstructions';\nconst gd: libGDevelop = global.gd;\n\n/**\n * After selecting an instruction, this function allows to set up the proper\n * number of parameters, set up the object name (if an object instruction was chosen)\n * and set up the behavior name (if a behavior instruction was chosen).\n */\nexport const setupInstructionParameters = (\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  instruction: gdInstruction,\n  instructionMetadata: gdInstructionMetadata,\n  objectName: ?string\n) => {\n  instruction.setParametersCount(instructionMetadata.getParametersCount());\n\n  // For free instructions (not linked to an object or behavior), we can stop there.\n  // In the future, we could set up default values for parameters.\n  if (!objectName) return;\n\n  // Set the object name.\n  const objectParameterIndex = getObjectParameterIndex(instructionMetadata);\n  if (objectParameterIndex === -1) {\n    console.error(\n      `Instruction \"${instructionMetadata.getFullName()}\" is used for an object, but does not have an object as first parameter`\n    );\n    return;\n  }\n\n  instruction.setParameter(objectParameterIndex, objectName);\n\n  // Set the behavior name, if any.\n  const maybeBehaviorParameterIndex = objectParameterIndex + 1;\n  if (maybeBehaviorParameterIndex < instructionMetadata.getParametersCount()) {\n    const maybeBehaviorParameterMetadata = instructionMetadata.getParameter(\n      maybeBehaviorParameterIndex\n    );\n    if (\n      !gd.ParameterMetadata.isBehavior(maybeBehaviorParameterMetadata.getType())\n    ) {\n      // The parameter after the object is not a behavior, there is nothing to complete.\n      return;\n    }\n\n    const allowedBehaviorType = maybeBehaviorParameterMetadata.getExtraInfo();\n    const behaviorNames = gd\n      .getBehaviorsOfObject(\n        globalObjectsContainer,\n        objectsContainer,\n        objectName,\n        true\n      )\n      .toJSArray()\n      .filter(behaviorName => {\n        return (\n          !allowedBehaviorType ||\n          gd.getTypeOfBehavior(\n            globalObjectsContainer,\n            objectsContainer,\n            behaviorName,\n            false\n          ) === allowedBehaviorType\n        );\n      });\n\n    if (behaviorNames.length > 0) {\n      const currentParameterValue = instruction.getParameter(\n        maybeBehaviorParameterIndex\n      );\n\n      // Set the behavior to the first matching behavior, in case a matching behavior name\n      // is not already set.\n      if (\n        !behaviorNames.some(\n          behaviorName => currentParameterValue === behaviorName\n        )\n      ) {\n        instruction.setParameter(maybeBehaviorParameterIndex, behaviorNames[0]);\n      }\n    } else {\n      // Ignore - this will be shown as an error in the BehaviorField (the required\n      // behavior is not attached to the object).\n    }\n  }\n};\n","// @flow\nimport * as React from 'react';\nimport { Line } from '../Grid';\n\ntype Props<TColumnName> = {|\n  columnsRenderer: { [TColumnName]: () => React.Node },\n  getColumns: () => Array<TColumnName>,\n|};\n\nexport const SelectColumns = (props: Props<string>) => {\n  const columns = props.getColumns();\n  return (\n    <Line noMargin expand>\n      {columns.map(columnName =>\n        props.columnsRenderer[columnName]\n          ? props.columnsRenderer[columnName]()\n          : null\n      )}\n    </Line>\n  );\n};\n","// @flow\nimport { serializeToJSObject, unserializeFromJSObject } from './Serializer';\n\n// Tools function to keep track of the history of changes made\n// on a serializable object from libGD.js\n\nexport type HistoryState = {|\n  undoHistory: Array<Object>,\n  current: Object,\n  redoHistory: Array<Object>,\n  maxSize: number,\n|};\n\n/**\n * Return the initial state of the history\n * @param {*} serializableObject\n */\nexport const getHistoryInitialState = (\n  serializableObject: gdSerializable,\n  { historyMaxSize }: { historyMaxSize: number }\n): HistoryState => {\n  return {\n    undoHistory: [],\n    current: serializeToJSObject(serializableObject),\n    redoHistory: [],\n    maxSize: historyMaxSize,\n  };\n};\n\n/**\n * Return true if redo can be applied for the given history\n * @param {*} history\n */\nexport const canRedo = (history: HistoryState): boolean => {\n  return !!history.redoHistory.length;\n};\n\n/**\n * Return true if undo can be applied for the given history\n * @param {*} history\n */\nexport const canUndo = (history: HistoryState): boolean => {\n  return !!history.undoHistory.length;\n};\n\n/**\n * Save a new state of the given serializableObject to the history\n * @param {*} history\n * @param {*} serializableObject\n */\nexport const saveToHistory = (\n  history: HistoryState,\n  serializableObject: gdSerializable\n): HistoryState => {\n  const newUndoHistory = [...history.undoHistory, history.current];\n  if (newUndoHistory.length > history.maxSize) {\n    newUndoHistory.splice(0, newUndoHistory.length - history.maxSize);\n  }\n\n  return {\n    undoHistory: newUndoHistory,\n    current: serializeToJSObject(serializableObject),\n    redoHistory: [],\n    maxSize: history.maxSize,\n  };\n};\n\n/**\n * Update the serializableObject to undo the last changes.\n * /!\\ This mutates the serializableObject and there could be objects owned by it\n * deleted or becoming invalid. Be sure to drop/refresh any reference to them.\n *\n * @param {*} history\n * @param {*} serializableObject\n */\nexport const undo = (\n  history: HistoryState,\n  serializableObject: gdSerializable,\n  project: ?gdProject = undefined\n): HistoryState => {\n  if (!history.undoHistory.length) {\n    return history;\n  }\n\n  const newCurrent = history.undoHistory[history.undoHistory.length - 1];\n  unserializeFromJSObject(\n    serializableObject,\n    newCurrent,\n    'unserializeFrom',\n    project\n  );\n\n  return {\n    undoHistory: history.undoHistory.slice(0, -1),\n    current: newCurrent,\n    redoHistory: [...history.redoHistory, history.current],\n    maxSize: history.maxSize,\n  };\n};\n\n/**\n * Update the serializableObject to undo the last changes.\n * /!\\ This mutates the serializableObject and there could be objects owned by it\n * deleted or becoming invalid. Be sure to drop/refresh any reference to them.\n *\n * @param {*} history\n * @param {*} serializableObject\n */\nexport const redo = (\n  history: HistoryState,\n  serializableObject: gdSerializable,\n  project: ?gdProject = undefined\n): HistoryState => {\n  if (!history.redoHistory.length) {\n    return history;\n  }\n\n  const newCurrent = history.redoHistory[history.redoHistory.length - 1];\n  unserializeFromJSObject(\n    serializableObject,\n    newCurrent,\n    'unserializeFrom',\n    project\n  );\n\n  return {\n    undoHistory: [...history.undoHistory, history.current],\n    current: newCurrent,\n    redoHistory: history.redoHistory.slice(0, -1),\n    maxSize: history.maxSize,\n  };\n};\n","// @flow\nimport { unserializeFromJSObject } from '../../Utils/Serializer';\nimport { mapVector } from '../../Utils/MapFor';\nimport { getFreeEventsFunctionType } from '../../EventsFunctionsExtensionsLoader';\nimport getObjectGroupByName from '../../Utils/GetObjectGroupByName';\nconst gd: libGDevelop = global.gd;\n\n/**\n * Set up an events function with the given serialized events,\n * so that the function contains these events, expecting the objects\n * as parameters.\n */\nexport const setupFunctionFromEvents = ({\n  globalObjectsContainer,\n  objectsContainer,\n  serializedEvents,\n  project,\n  eventsFunction,\n}: {\n  project: gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  serializedEvents: Object,\n  eventsFunction: gdEventsFunction,\n}) => {\n  // Set up the function\n  eventsFunction.setName('MyFunction');\n  eventsFunction.setFunctionType(gd.EventsFunction.Action);\n  unserializeFromJSObject(\n    eventsFunction.getEvents(),\n    serializedEvents,\n    'unserializeFrom',\n    project\n  );\n\n  // Analyze events...\n  const eventsContextAnalyzer = new gd.EventsContextAnalyzer(\n    gd.JsPlatform.get(),\n    globalObjectsContainer,\n    objectsContainer\n  );\n  eventsContextAnalyzer.launch(eventsFunction.getEvents());\n  const eventsContext = eventsContextAnalyzer.getEventsContext();\n\n  // ...to extract objects and groups\n  const objectOrGroupNames: Array<string> = eventsContext\n    .getReferencedObjectOrGroupNames()\n    .toNewVectorString()\n    .toJSArray();\n  const objectNames: Array<string> = eventsContext\n    .getObjectNames()\n    .toNewVectorString()\n    .toJSArray();\n  const groups: Array<gdObjectGroup> = objectOrGroupNames\n    // Filter to only keep groups\n    .filter(\n      (objectOrGroupName: string) =>\n        objectNames.indexOf(objectOrGroupName) === -1\n    )\n    .map(groupName =>\n      getObjectGroupByName(globalObjectsContainer, objectsContainer, groupName)\n    )\n    .filter(Boolean);\n\n  // Compute what the parameters should be:\n  // 1) The groups, but only the ones that have no object directly referenced.\n  const parameterGroups: Array<gdObjectGroup> = groups.filter(group => {\n    return !objectOrGroupNames.some(referencedObjectOrGroupName =>\n      group.find(referencedObjectOrGroupName)\n    );\n  });\n  const parameterGroupNames: Array<string> = parameterGroups.map(group =>\n    group.getName()\n  );\n\n  // 2) The objects, but only the ones that are already in the groups in parameters\n  const parameterObjectNames: Array<string> = objectNames.filter(objectName => {\n    return !parameterGroups.some(group => group.find(objectName));\n  });\n\n  // Create parameters for these objects (or these groups without any object directly referenced)\n  const parameters = eventsFunction.getParameters();\n  parameters.clear();\n  [...parameterGroupNames, ...parameterObjectNames].forEach(objectName => {\n    const newParameter = new gd.ParameterMetadata();\n    newParameter.setType('objectList');\n    newParameter.setName(objectName);\n    newParameter.setExtraInfo(\n      gd.getTypeOfObject(\n        globalObjectsContainer,\n        objectsContainer,\n        objectName,\n        true\n      )\n    );\n    parameters.push_back(newParameter);\n\n    const behaviorNames: Array<string> = eventsContext\n      .getBehaviorNamesOfObjectOrGroup(objectName)\n      .toNewVectorString()\n      .toJSArray();\n\n    behaviorNames.forEach(behaviorName => {\n      const newParameter = new gd.ParameterMetadata();\n      newParameter.setType('behavior');\n      newParameter.setName(behaviorName);\n      newParameter.setExtraInfo(\n        gd.getTypeOfBehavior(\n          globalObjectsContainer,\n          objectsContainer,\n          behaviorName,\n          false\n        )\n      );\n      parameters.push_back(newParameter);\n    });\n  });\n\n  // Import groups that are used in events, but are not in parameters,\n  // inside the events function groups.\n  groups\n    .filter(group => !parameterGroupNames.includes(group.getName()))\n    .forEach(group => {\n      if (group) {\n        eventsFunction.getObjectGroups().insert(group, 0);\n      }\n    });\n\n  eventsContextAnalyzer.delete();\n};\n\n/**\n * Create an instruction to call the given events function\n */\nexport const createNewInstructionForEventsFunction = (\n  extensionName: string,\n  eventsFunction: gdEventsFunction\n): gdInstruction => {\n  const action = new gd.Instruction(); //Add a simple action\n  const runtimeSceneParameterCount = 1; // By convention, first parameter is always the Runtime Scene.\n  const contextParameterCount = 1; // By convention, latest parameter is always the eventsFunctionContext of the calling function (if any).\n\n  action.setType(getFreeEventsFunctionType(extensionName, eventsFunction));\n  action.setParametersCount(\n    eventsFunction.getParameters().size() +\n      runtimeSceneParameterCount +\n      contextParameterCount\n  );\n\n  mapVector(eventsFunction.getParameters(), (parameterMetadata, index) => {\n    action.setParameter(\n      runtimeSceneParameterCount + index,\n      parameterMetadata.getName()\n    );\n  });\n\n  return action;\n};\n\n/**\n * Validate that a function name is valid.\n */\nexport const validateEventsFunctionName = (functionName: string) => {\n  return gd.Project.validateName(functionName);\n};\n\n/**\n * Validate that an events functions extension name is valid.\n */\nexport const validateExtensionName = (extensionName: string) => {\n  return gd.Project.validateName(extensionName);\n};\n\n/**\n * Validate that an events functions extension name is unique in a project.\n */\nexport const validateExtensionNameUniqueness = (\n  project: gdProject,\n  extensionName: string\n) => {\n  return !project.hasEventsFunctionsExtensionNamed(extensionName);\n};\n\n/**\n * Validate that an events function name is unique in a project extension.\n */\nexport const validateEventsFunctionNameUniqueness = (\n  project: gdProject,\n  extensionName: string,\n  eventsFunction: gdEventsFunction\n) => {\n  if (project.hasEventsFunctionsExtensionNamed(extensionName)) {\n    const eventsFunctionsExtension = project.getEventsFunctionsExtension(\n      extensionName\n    );\n\n    return !eventsFunctionsExtension.hasEventsFunctionNamed(\n      eventsFunction.getName()\n    );\n  }\n\n  return true;\n};\n\n/**\n * Return true if the events function can be added to the given extension\n * without any conflict/invalid name.\n */\nexport const canCreateEventsFunction = (\n  project: gdProject,\n  extensionName: string,\n  eventsFunction: gdEventsFunction\n) => {\n  return (\n    extensionName !== '' &&\n    validateExtensionName(extensionName) &&\n    eventsFunction.getName() !== '' &&\n    validateEventsFunctionName(eventsFunction.getName()) &&\n    validateEventsFunctionNameUniqueness(\n      project,\n      extensionName,\n      eventsFunction\n    ) &&\n    eventsFunction.getFullName() !== '' &&\n    eventsFunction.getSentence() !== ''\n  );\n};\n\n/**\n * Return true if the function is considered to have more parameters than usual.\n */\nexport const functionHasLotsOfParameters = (\n  eventsFunction: gdEventsFunction\n) => {\n  return eventsFunction.getParameters().size() > 7;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\nimport { mapVector } from '../../Utils/MapFor';\nimport RaisedButton from '../../UI/RaisedButton';\nimport IconButton from '../../UI/IconButton';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport ElementWithMenu from '../../UI/Menu/ElementWithMenu';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport HelpButton from '../../UI/HelpButton';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport MiniToolbar, { MiniToolbarText } from '../../UI/MiniToolbar';\nimport { showWarningBox } from '../../UI/Messages/MessageBox';\nimport ObjectTypeSelector from '../../ObjectTypeSelector';\nimport BehaviorTypeSelector from '../../BehaviorTypeSelector';\nimport {\n  isBehaviorLifecycleEventsFunction,\n  isExtensionLifecycleEventsFunction,\n} from '../../EventsFunctionsExtensionsLoader/MetadataDeclarationHelpers';\nimport { getParametersIndexOffset } from '../../EventsFunctionsExtensionsLoader';\nimport Add from '@material-ui/icons/Add';\nimport Delete from '@material-ui/icons/Delete';\nimport DismissableAlertMessage from '../../UI/DismissableAlertMessage';\nimport { ColumnStackLayout, ResponsiveLineStackLayout } from '../../UI/Layout';\nimport { getLastObjectParameterObjectType } from '../../EventsSheet/ParameterFields/ParameterMetadataTools';\n\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  eventsFunction: gdEventsFunction,\n  eventsBasedBehavior: ?gdEventsBasedBehavior,\n  onParametersUpdated: () => void,\n  helpPagePath?: string,\n  freezeParameters?: boolean,\n  onMoveFreeEventsParameter?: (\n    eventsFunction: gdEventsFunction,\n    oldIndex: number,\n    newIndex: number,\n    done: () => void\n  ) => void,\n  onMoveBehaviorEventsParameter?: (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    eventsFunction: gdEventsFunction,\n    oldIndex: number,\n    newIndex: number,\n    done: (boolean) => void\n  ) => void,\n|};\n\ntype State = {|\n  longDescriptionShownIndexes: { [number]: boolean },\n|};\n\nconst styles = {\n  parametersContainer: {\n    flex: 1,\n  },\n};\n\nconst validateParameterName = (i18n: I18nType, newName: string) => {\n  if (!newName) {\n    showWarningBox(\n      i18n._(\n        t`The name of a parameter can not be empty. Enter a name for the parameter or you won't be able to use it.`\n      ),\n      { delayToNextTick: true }\n    );\n    return false;\n  }\n\n  if (!gd.Project.validateName(newName)) {\n    showWarningBox(\n      i18n._(\n        t`This name is invalid. Only use alphanumeric characters (0-9, a-z) and underscores. Digits are not allowed as the first character.`\n      ),\n      { delayToNextTick: true }\n    );\n    return false;\n  }\n\n  return true;\n};\n\ntype StringSelectorEditorProps = {|\n  extraInfo: string,\n  setExtraInfo: string => void,\n|};\n\nconst StringSelectorEditor = ({\n  extraInfo,\n  setExtraInfo,\n}: StringSelectorEditorProps) => {\n  let array = [];\n  try {\n    if (extraInfo !== '') array = JSON.parse(extraInfo);\n    if (!Array.isArray(array)) array = [];\n  } catch (e) {\n    console.error('Cannot parse parameter extraInfo: ', e);\n  }\n\n  const updateExtraInfo = () => setExtraInfo(JSON.stringify(array));\n\n  return (\n    <ResponsiveLineStackLayout>\n      <Column justifyContent=\"flex-end\" expand>\n        {array.map((item, index) => (\n          <Line key={index} justifyContent=\"flex-end\" expand marginSize=\"5px\">\n            <SemiControlledTextField\n              commitOnBlur\n              value={item}\n              onChange={text => {\n                array[index] = text;\n                updateExtraInfo();\n              }}\n              fullWidth\n            />\n            <IconButton\n              tooltip={t`Delete option`}\n              onClick={() => {\n                array.splice(index, 1);\n                updateExtraInfo();\n              }}\n            >\n              <Delete />\n            </IconButton>\n          </Line>\n        ))}\n\n        <Line justifyContent=\"flex-end\" expand>\n          <RaisedButton\n            primary\n            onClick={() => {\n              array.push('New Option');\n              updateExtraInfo();\n            }}\n            label={<Trans>Add a new option</Trans>}\n            icon={<Add />}\n          />\n        </Line>\n      </Column>\n    </ResponsiveLineStackLayout>\n  );\n};\n\nexport default class EventsFunctionParametersEditor extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    longDescriptionShownIndexes: {},\n  };\n\n  _addParameter = () => {\n    const { eventsFunction } = this.props;\n    const parameters = eventsFunction.getParameters();\n\n    const newParameter = new gd.ParameterMetadata();\n    newParameter.setType('objectList');\n    parameters.push_back(newParameter);\n    newParameter.delete();\n    this.forceUpdate();\n    this.props.onParametersUpdated();\n  };\n\n  _removeParameter = (index: number) => {\n    const { eventsFunction } = this.props;\n    const parameters = eventsFunction.getParameters();\n\n    gd.removeFromVectorParameterMetadata(parameters, index);\n    this.forceUpdate();\n    this.props.onParametersUpdated();\n  };\n\n  _addLongDescription = (index: number) => {\n    // Show the long description field\n    this.setState(state => ({\n      longDescriptionShownIndexes: {\n        ...state.longDescriptionShownIndexes,\n        [index]: true,\n      },\n    }));\n  };\n\n  _removeLongDescription = (index: number) => {\n    const { eventsFunction } = this.props;\n    const parameters = eventsFunction.getParameters();\n    const parameter = parameters.at(index);\n\n    // Reset the long description and hide the field\n    parameter.setLongDescription('');\n    this.setState(state => ({\n      longDescriptionShownIndexes: {\n        ...state.longDescriptionShownIndexes,\n        [index]: false,\n      },\n    }));\n  };\n\n  _moveParameters = (oldIndex: number, newIndex: number) => {\n    const { eventsFunction, eventsBasedBehavior } = this.props;\n    const parameters = eventsFunction.getParameters();\n\n    if (eventsBasedBehavior) {\n      if (this.props.onMoveBehaviorEventsParameter)\n        this.props.onMoveBehaviorEventsParameter(\n          eventsBasedBehavior,\n          eventsFunction,\n          oldIndex,\n          newIndex,\n          isDone => {\n            if (!isDone) return;\n            gd.swapInVectorParameterMetadata(parameters, oldIndex, newIndex);\n            this.forceUpdate();\n            this.props.onParametersUpdated();\n          }\n        );\n    } else {\n      if (this.props.onMoveFreeEventsParameter)\n        this.props.onMoveFreeEventsParameter(\n          eventsFunction,\n          oldIndex,\n          newIndex,\n          isDone => {\n            if (!isDone) return;\n            gd.swapInVectorParameterMetadata(parameters, oldIndex, newIndex);\n            this.forceUpdate();\n            this.props.onParametersUpdated();\n          }\n        );\n    }\n  };\n\n  render() {\n    const {\n      project,\n      eventsFunction,\n      eventsBasedBehavior,\n      freezeParameters,\n      helpPagePath,\n    } = this.props;\n\n    const parameters = eventsFunction.getParameters();\n    const isABehaviorLifecycleEventsFunction =\n      !!eventsBasedBehavior &&\n      isBehaviorLifecycleEventsFunction(eventsFunction.getName());\n    if (isABehaviorLifecycleEventsFunction) {\n      return (\n        <EmptyMessage>\n          <Trans>\n            This is a \"lifecycle method\". It will be called automatically by the\n            game engine and has two parameters: \"Object\" (the object the\n            behavior is acting on) and \"Behavior\" (the behavior itself).\n          </Trans>\n        </EmptyMessage>\n      );\n    }\n    const isAnExtensionLifecycleEventsFunction =\n      !eventsBasedBehavior &&\n      isExtensionLifecycleEventsFunction(eventsFunction.getName());\n    if (isAnExtensionLifecycleEventsFunction) {\n      return (\n        <Column>\n          <DismissableAlertMessage\n            kind=\"info\"\n            identifier=\"lifecycle-events-function-included-only-if-extension-used\"\n          >\n            <Trans>\n              For the lifecycle functions to be executed, you need the extension\n              to be used in the game, either by having at least one action,\n              condition or expression used, or a behavior of the extension added\n              to an object. Otherwise, the extension won't be included in the\n              game.\n            </Trans>\n          </DismissableAlertMessage>\n          <EmptyMessage>\n            <Trans>\n              This is a \"lifecycle function\". It will be called automatically by\n              the game engine. It has no parameters. Only global objects can be\n              used as the events will be run for all scenes in your game.\n            </Trans>\n          </EmptyMessage>\n        </Column>\n      );\n    }\n\n    const isParameterDisabled = index => {\n      return !!freezeParameters || (!!eventsBasedBehavior && index < 2);\n    };\n    const isParameterDescriptionAndTypeShown = index => {\n      // The first two parameters of a behavior method should not be changed at all,\n      // so we even hide their description and type to avoid cluttering the interface.\n      return !eventsBasedBehavior || index >= 2;\n    };\n    const isParameterLongDescriptionShown = (parameter, index): boolean => {\n      if (!isParameterDescriptionAndTypeShown(index)) return false;\n\n      return (\n        !!parameter.getLongDescription() ||\n        !!this.state.longDescriptionShownIndexes[index]\n      );\n    };\n    const parametersIndexOffset = getParametersIndexOffset(\n      !!eventsBasedBehavior\n    );\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Column noMargin expand>\n            <Line noMargin>\n              <div style={styles.parametersContainer}>\n                {mapVector(\n                  parameters,\n                  (parameter: gdParameterMetadata, i: number) => (\n                    <React.Fragment key={i}>\n                      <MiniToolbar>\n                        <MiniToolbarText>\n                          <Trans>Parameter #{i + parametersIndexOffset}:</Trans>\n                        </MiniToolbarText>\n                        <Column expand noMargin>\n                          <SemiControlledTextField\n                            commitOnBlur\n                            margin=\"none\"\n                            hintText={t`Enter the parameter name (mandatory)`}\n                            value={parameter.getName()}\n                            onChange={text => {\n                              if (!validateParameterName(i18n, text)) return;\n\n                              parameter.setName(text);\n                              this.forceUpdate();\n                              this.props.onParametersUpdated();\n                            }}\n                            disabled={isParameterDisabled(i)}\n                            fullWidth\n                          />\n                        </Column>\n                        <ElementWithMenu\n                          element={\n                            <IconButton>\n                              <MoreVert />\n                            </IconButton>\n                          }\n                          buildMenuTemplate={(i18n: I18nType) => [\n                            {\n                              label: i18n._(t`Delete`),\n                              enabled: !isParameterDisabled(i),\n                              click: () => this._removeParameter(i),\n                            },\n                            { type: 'separator' },\n                            {\n                              label: i18n._(t`Add a Long Description`),\n                              enabled: !isParameterDisabled(i),\n                              visible: !isParameterLongDescriptionShown(\n                                parameter,\n                                i\n                              ),\n                              click: () => this._addLongDescription(i),\n                            },\n                            {\n                              label: i18n._(t`Remove the Long Description`),\n                              enabled: !isParameterDisabled(i),\n                              visible: isParameterLongDescriptionShown(\n                                parameter,\n                                i\n                              ),\n                              click: () => this._removeLongDescription(i),\n                            },\n                            {\n                              label: i18n._(t`Move up`),\n                              click: () => this._moveParameters(i, i - 1),\n                              enabled:\n                                !isParameterDisabled(i) &&\n                                i - 1 >= 0 &&\n                                !isParameterDisabled(i - 1),\n                            },\n                            {\n                              label: i18n._(t`Move down`),\n                              click: () => this._moveParameters(i, i + 1),\n                              enabled:\n                                !isParameterDisabled(i) &&\n                                i + 1 < parameters.size() &&\n                                !isParameterDisabled(i + 1),\n                            },\n                          ]}\n                        />\n                      </MiniToolbar>\n                      <Line>\n                        <ColumnStackLayout expand>\n                          <ResponsiveLineStackLayout noMargin>\n                            {isParameterDescriptionAndTypeShown(i) && (\n                              <SelectField\n                                floatingLabelText={<Trans>Type</Trans>}\n                                value={parameter.getType()}\n                                onChange={(e, i, value: string) => {\n                                  parameter.setType(value);\n                                  this.forceUpdate();\n                                  this.props.onParametersUpdated();\n                                }}\n                                disabled={isParameterDisabled(i)}\n                                fullWidth\n                              >\n                                <SelectOption\n                                  value=\"objectList\"\n                                  primaryText={t`Objects`}\n                                />\n                                <SelectOption\n                                  value=\"behavior\"\n                                  primaryText={t`Behavior (for the previous object)`}\n                                />\n                                <SelectOption\n                                  value=\"expression\"\n                                  primaryText={t`Number`}\n                                />\n                                <SelectOption\n                                  value=\"string\"\n                                  primaryText={t`String (text)`}\n                                />\n                                <SelectOption\n                                  value=\"stringWithSelector\"\n                                  primaryText={t`String from a list of options (text)`}\n                                />\n                                <SelectOption\n                                  value=\"key\"\n                                  primaryText={t`Keyboard Key (text)`}\n                                />\n                                <SelectOption\n                                  value=\"mouse\"\n                                  primaryText={t`Mouse button (text)`}\n                                />\n                                <SelectOption\n                                  value=\"color\"\n                                  primaryText={t`Color (text)`}\n                                />\n                                <SelectOption\n                                  value=\"layer\"\n                                  primaryText={t`Layer (text)`}\n                                />\n                                <SelectOption\n                                  value=\"sceneName\"\n                                  primaryText={t`Scene name (text)`}\n                                />\n                                <SelectOption\n                                  value=\"yesorno\"\n                                  primaryText={t`Yes or No (boolean)`}\n                                />\n                                <SelectOption\n                                  value=\"trueorfalse\"\n                                  primaryText={t`True or False (boolean)`}\n                                />\n                              </SelectField>\n                            )}\n                            {gd.ParameterMetadata.isObject(\n                              parameter.getType()\n                            ) && (\n                              <ObjectTypeSelector\n                                project={project}\n                                value={parameter.getExtraInfo()}\n                                onChange={(value: string) => {\n                                  parameter.setExtraInfo(value);\n                                  this.forceUpdate();\n                                  this.props.onParametersUpdated();\n                                }}\n                                disabled={isParameterDisabled(i)}\n                              />\n                            )}\n                            {parameter.getType() === 'behavior' && (\n                              <BehaviorTypeSelector\n                                project={project}\n                                objectType={getLastObjectParameterObjectType(\n                                  parameters,\n                                  i\n                                )}\n                                value={parameter.getExtraInfo()}\n                                onChange={(value: string) => {\n                                  parameter.setExtraInfo(value);\n                                  this.forceUpdate();\n                                  this.props.onParametersUpdated();\n                                }}\n                                disabled={isParameterDisabled(i)}\n                              />\n                            )}\n                          </ResponsiveLineStackLayout>\n                          {parameter.getType() === 'stringWithSelector' && (\n                            <StringSelectorEditor\n                              extraInfo={parameter.getExtraInfo()}\n                              setExtraInfo={newExtraInfo => {\n                                parameter.setExtraInfo(newExtraInfo);\n                                this.forceUpdate();\n                              }}\n                            />\n                          )}\n                          {isParameterDescriptionAndTypeShown(i) && (\n                            <SemiControlledTextField\n                              commitOnBlur\n                              floatingLabelText={<Trans>Label</Trans>}\n                              floatingLabelFixed\n                              value={parameter.getDescription()}\n                              onChange={text => {\n                                parameter.setDescription(text);\n                                this.forceUpdate();\n                              }}\n                              fullWidth\n                              disabled={\n                                false /* Label, if shown, can always be changed */\n                              }\n                            />\n                          )}\n                          {isParameterLongDescriptionShown(parameter, i) && (\n                            <SemiControlledTextField\n                              commitOnBlur\n                              floatingLabelText={\n                                <Trans>Long description</Trans>\n                              }\n                              floatingLabelFixed\n                              value={parameter.getLongDescription()}\n                              onChange={text => {\n                                parameter.setLongDescription(text);\n                                this.forceUpdate();\n                              }}\n                              multiline\n                              fullWidth\n                              disabled={\n                                false /* Long description, if shown, can always be changed */\n                              }\n                            />\n                          )}\n                        </ColumnStackLayout>\n                      </Line>\n                    </React.Fragment>\n                  )\n                )}\n                {parameters.size() === 0 ? (\n                  <EmptyMessage>\n                    <Trans>No parameters for this function.</Trans>\n                  </EmptyMessage>\n                ) : null}\n                <Column>\n                  <Line justifyContent=\"flex-end\" expand>\n                    {!freezeParameters && (\n                      <RaisedButton\n                        primary\n                        label={<Trans>Add a parameter</Trans>}\n                        onClick={this._addParameter}\n                        icon={<Add />}\n                      />\n                    )}\n                  </Line>\n                </Column>\n              </div>\n            </Line>\n            {helpPagePath ? (\n              <Line>\n                <HelpButton helpPagePath={helpPagePath} />\n              </Line>\n            ) : (\n              <Spacer />\n            )}\n          </Column>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport {\n  enumerateObjectTypes,\n  type EnumeratedObjectMetadata,\n} from '../ObjectsList/EnumerateObjects';\n\ntype Props = {|\n  project: gdProject,\n  floatingLabelText?: React.Node,\n  value: string,\n  onChange: string => void,\n  disabled?: boolean,\n  allowedObjectTypes?: ?Array<string>,\n|};\ntype State = {|\n  objectMetadata: Array<EnumeratedObjectMetadata>,\n|};\n\nexport default class ObjectTypeSelector extends React.Component<Props, State> {\n  state = {\n    objectMetadata: enumerateObjectTypes(this.props.project),\n  };\n\n  render() {\n    const {\n      disabled,\n      value,\n      onChange,\n      floatingLabelText,\n      allowedObjectTypes,\n    } = this.props;\n    const { objectMetadata } = this.state;\n\n    const isDisabled = (type: string) => {\n      if (!allowedObjectTypes) return false;\n\n      return allowedObjectTypes.indexOf(type) === -1;\n    };\n\n    return (\n      <SelectField\n        floatingLabelText={floatingLabelText || <Trans>Object type</Trans>}\n        value={value}\n        onChange={(e, i, value: string) => {\n          onChange(value);\n        }}\n        disabled={disabled}\n        fullWidth\n      >\n        <SelectOption\n          value=\"\"\n          primaryText={t`Any object`}\n          disabled={isDisabled('')}\n        />\n        {objectMetadata.map((metadata: EnumeratedObjectMetadata) => {\n          if (metadata.name === '') {\n            // Base object is an \"abstract\" object\n            return null;\n          }\n\n          return (\n            <SelectOption\n              key={metadata.name}\n              value={metadata.name}\n              primaryText={metadata.fullName}\n              disabled={isDisabled(metadata.name)}\n            />\n          );\n        })}\n      </SelectField>\n    );\n  }\n}\n","// @flow\nimport { mapFor } from '../Utils/MapFor';\nimport flatten from 'lodash/flatten';\n\nexport type EnumeratedBehaviorMetadata = {|\n  extension: gdPlatformExtension,\n  behaviorMetadata: gdBehaviorMetadata,\n  type: string,\n  objectType: string,\n  defaultName: string,\n  fullName: string,\n  description: string,\n  iconFilename: string,\n|};\n\nexport const enumerateBehaviorsMetadata = (\n  platform: gdPlatform,\n  project: gdProject\n): Array<EnumeratedBehaviorMetadata> => {\n  const extensionsList = platform.getAllPlatformExtensions();\n\n  return flatten(\n    mapFor(0, extensionsList.size(), i => {\n      const extension = extensionsList.at(i);\n\n      return extension\n        .getBehaviorsTypes()\n        .toJSArray()\n        .map(behaviorType => ({\n          behaviorType,\n          behaviorMetadata: extension.getBehaviorMetadata(behaviorType),\n        }))\n        .map(({ behaviorType, behaviorMetadata }) => ({\n          extension,\n          behaviorMetadata,\n          type: behaviorType,\n          defaultName: behaviorMetadata.getDefaultName(),\n          fullName: behaviorMetadata.getFullName(),\n          description: behaviorMetadata.getDescription(),\n          iconFilename: behaviorMetadata.getIconFilename(),\n          objectType: behaviorMetadata.getObjectType(),\n        }));\n    })\n  );\n};\n\nexport const filterEnumeratedBehaviorMetadata = (\n  list: Array<EnumeratedBehaviorMetadata>,\n  searchText: string\n): Array<EnumeratedBehaviorMetadata> => {\n  if (!searchText) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list.filter(enumerateBehaviorsMetadata => {\n    return (\n      enumerateBehaviorsMetadata.fullName\n        .toLowerCase()\n        .indexOf(lowercaseSearchText) !== -1 ||\n      enumerateBehaviorsMetadata.description\n        .toLowerCase()\n        .indexOf(lowercaseSearchText) !== -1\n    );\n  });\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport * as React from 'react';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\nimport { mapVector } from '../../Utils/MapFor';\nimport HelpButton from '../../UI/HelpButton';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport {\n  isBehaviorLifecycleEventsFunction,\n  isExtensionLifecycleEventsFunction,\n} from '../../EventsFunctionsExtensionsLoader/MetadataDeclarationHelpers';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport { getParametersIndexOffset } from '../../EventsFunctionsExtensionsLoader';\nimport { type MessageDescriptor } from '../../Utils/i18n/MessageDescriptor.flow';\nimport { ResponsiveLineStackLayout, ColumnStackLayout } from '../../UI/Layout';\nimport DismissableAlertMessage from '../../UI/DismissableAlertMessage';\n\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  eventsFunction: gdEventsFunction,\n  eventsBasedBehavior: ?gdEventsBasedBehavior,\n  helpPagePath?: string,\n  onConfigurationUpdated?: () => void,\n  renderConfigurationHeader?: () => React.Node,\n  freezeEventsFunctionType?: boolean,\n|};\n\ntype State = {||};\n\nconst styles = {\n  icon: {\n    height: 32,\n    marginRight: 8,\n    flexSrink: 0,\n  },\n};\n\nconst getSentenceErrorText = (\n  i18n: I18nType,\n  eventsBasedBehavior: ?gdEventsBasedBehavior,\n  eventsFunction: gdEventsFunction\n) => {\n  const sentence = eventsFunction.getSentence();\n  if (!sentence)\n    return i18n._(\n      t`Enter the sentence that will be displayed in the events sheet`\n    );\n\n  const parametersIndexOffset = getParametersIndexOffset(!!eventsBasedBehavior);\n\n  const missingParameters = mapVector(\n    eventsFunction.getParameters(),\n    (parameter, index) => {\n      if (gd.ParameterMetadata.isBehavior(parameter.getType())) {\n        return null; // Behaviors are usually not shown in sentences.\n      }\n\n      const expectedString = `_PARAM${index + parametersIndexOffset}_`;\n      if (sentence.indexOf(expectedString) === -1) return expectedString;\n\n      return null;\n    }\n  ).filter(Boolean);\n\n  if (missingParameters.length) {\n    return (\n      i18n._(t`The sentence is probably missing this/these parameter(s):`) +\n      missingParameters.join(', ')\n    );\n  }\n\n  return undefined;\n};\n\nconst getFullNameHintText = (type: any): MessageDescriptor => {\n  if (type === gd.EventsFunction.Condition) {\n    return t`Example: Is flashing?`;\n  } else if (type === gd.EventsFunction.Expression) {\n    return t`Example: Life remaining`;\n  } else if (type === gd.EventsFunction.StringExpression) {\n    return t`Example: Equipped shield name`;\n  }\n\n  return t`Example: Flash the object`;\n};\n\nconst getDescriptionHintText = (type: any): MessageDescriptor => {\n  if (type === gd.EventsFunction.Condition) {\n    return t`Example: Check if the object is flashing.`;\n  } else if (type === gd.EventsFunction.Expression) {\n    return t`Example: Life remaining for the player.`;\n  } else if (type === gd.EventsFunction.StringExpression) {\n    return t`Example: Name of the shield equipped by the player.`;\n  }\n\n  return t`Example: Make the object flash for 5 seconds.`;\n};\n\nexport default class EventsFunctionPropertiesEditor extends React.Component<\n  Props,\n  State\n> {\n  render() {\n    const {\n      eventsFunction,\n      freezeEventsFunctionType,\n      onConfigurationUpdated,\n      helpPagePath,\n      renderConfigurationHeader,\n      eventsBasedBehavior,\n    } = this.props;\n\n    const type = eventsFunction.getFunctionType();\n    const isABehaviorLifecycleEventsFunction =\n      !!eventsBasedBehavior &&\n      isBehaviorLifecycleEventsFunction(eventsFunction.getName());\n    if (isABehaviorLifecycleEventsFunction) {\n      return (\n        <EmptyMessage>\n          <Trans>\n            This is a \"lifecycle method\". It will be called automatically by the\n            game engine for each instance living on the scene having the\n            behavior.\n          </Trans>\n        </EmptyMessage>\n      );\n    }\n\n    const isAnExtensionLifecycleEventsFunction =\n      !eventsBasedBehavior &&\n      isExtensionLifecycleEventsFunction(eventsFunction.getName());\n    if (isAnExtensionLifecycleEventsFunction) {\n      return (\n        <Column>\n          <DismissableAlertMessage\n            kind=\"info\"\n            identifier=\"lifecycle-events-function-included-only-if-extension-used\"\n          >\n            <Trans>\n              For the lifecycle functions to be executed, you need the extension\n              to be used in the game, either by having at least one action,\n              condition or expression used, or a behavior of the extension added\n              to an object. Otherwise, the extension won't be included in the\n              game.\n            </Trans>\n          </DismissableAlertMessage>\n          <EmptyMessage>\n            <Trans>\n              This is a \"lifecycle function\". It will be called automatically by\n              the game engine. It has no parameters. Only global objects can be\n              used as the events will be run for all scenes in your game.\n            </Trans>\n          </EmptyMessage>\n        </Column>\n      );\n    }\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <ColumnStackLayout expand>\n            {renderConfigurationHeader ? renderConfigurationHeader() : null}\n            <ResponsiveLineStackLayout alignItems=\"center\" noMargin>\n              <Line alignItems=\"center\" noMargin>\n                <img src=\"res/function32.png\" alt=\"\" style={styles.icon} />\n                <SelectField\n                  value={type}\n                  floatingLabelText={<Trans>Function type</Trans>}\n                  fullWidth\n                  disabled={!!freezeEventsFunctionType}\n                  onChange={(e, i, value: string) => {\n                    // $FlowFixMe\n                    eventsFunction.setFunctionType(value);\n                    if (onConfigurationUpdated) onConfigurationUpdated();\n                    this.forceUpdate();\n                  }}\n                >\n                  <SelectOption\n                    value={gd.EventsFunction.Action}\n                    primaryText={t`Action`}\n                  />\n                  <SelectOption\n                    value={gd.EventsFunction.Condition}\n                    primaryText={t`Condition`}\n                  />\n                  <SelectOption\n                    value={gd.EventsFunction.Expression}\n                    primaryText={t`Expression`}\n                  />\n                  <SelectOption\n                    value={gd.EventsFunction.StringExpression}\n                    primaryText={t`String Expression`}\n                  />\n                </SelectField>\n              </Line>\n              <SemiControlledTextField\n                commitOnBlur\n                floatingLabelText={<Trans>Full name displayed in editor</Trans>}\n                hintText={getFullNameHintText(type)}\n                value={eventsFunction.getFullName()}\n                onChange={text => {\n                  eventsFunction.setFullName(text);\n                  if (onConfigurationUpdated) onConfigurationUpdated();\n                  this.forceUpdate();\n                }}\n                fullWidth\n              />\n            </ResponsiveLineStackLayout>\n            <Line noMargin>\n              <SemiControlledTextField\n                commitOnBlur\n                floatingLabelText={\n                  <Trans>Description, displayed in editor</Trans>\n                }\n                hintText={getDescriptionHintText(type)}\n                fullWidth\n                multiline\n                value={eventsFunction.getDescription()}\n                onChange={text => {\n                  eventsFunction.setDescription(text);\n                  if (onConfigurationUpdated) onConfigurationUpdated();\n                  this.forceUpdate();\n                }}\n              />\n            </Line>\n            <Line noMargin>\n              {type === gd.EventsFunction.Action ||\n              type === gd.EventsFunction.Condition ? (\n                <SemiControlledTextField\n                  commitOnBlur\n                  floatingLabelText={<Trans>Sentence in Events Sheet</Trans>}\n                  hintText={t`Note: write _PARAMx_ for parameters, e.g: Flash _PARAM1_ for 5 seconds`}\n                  fullWidth\n                  value={eventsFunction.getSentence()}\n                  onChange={text => {\n                    eventsFunction.setSentence(text);\n                    if (onConfigurationUpdated) onConfigurationUpdated();\n                    this.forceUpdate();\n                  }}\n                  errorText={getSentenceErrorText(\n                    i18n,\n                    eventsBasedBehavior,\n                    eventsFunction\n                  )}\n                />\n              ) : null}\n            </Line>\n            {helpPagePath ? (\n              <Line noMargin>\n                <HelpButton helpPagePath={helpPagePath} />\n              </Line>\n            ) : (\n              <Spacer />\n            )}\n          </ColumnStackLayout>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\ntype Props = {|\n  /** The text to display. */\n  children: ?React.Node,\n  /** Size of the text. `body` if not specified. */\n  size?: 'body' | 'body2' | 'title',\n  /** The text alignment. */\n  align?: 'inherit' | 'left' | 'center' | 'right' | 'justify',\n  /** Don't shrink the text if there is not enough place in a flex container. */\n  noShrink?: boolean,\n  /** Remove the margin around the text. */\n  noMargin?: boolean,\n  /** By default the text is a paragraph (`p`). It can be shown inline  */\n  displayInlineAsSpan?: boolean,\n  /** A limited set of styling is supported. */\n  style?: {|\n    // Margins\n    marginLeft?: number,\n    marginRight?: number,\n\n    // Allow to specify that the text should break words\n    overflow?: 'hidden',\n    overflowWrap?: 'break-word',\n    whiteSpace?: 'nowrap' | 'pre-wrap',\n    textOverflow?: 'ellipsis',\n\n    // Allow to expand the text\n    flex?: 1,\n  |},\n|};\n\n// A Text to be displayed in the app. Prefer using this\n// than a `<p>`/`<span>` or `<div>` as this will help to maintain\n// consistency of text in the whole app.\nexport default ({\n  children,\n  style,\n  size,\n  align,\n  noShrink,\n  noMargin,\n  displayInlineAsSpan,\n}: Props) => {\n  return (\n    <Typography\n      variant={size === 'title' ? 'h6' : size === 'body2' ? 'body2' : 'body1'}\n      component={displayInlineAsSpan ? 'span' : undefined}\n      style={{\n        ...style,\n        display: displayInlineAsSpan ? 'inline-block' : undefined,\n        flexShrink: noShrink ? 0 : undefined,\n        marginTop: noMargin ? 0 : 6,\n        marginBottom: noMargin ? 0 : 6,\n      }}\n      align={align || 'inherit'}\n    >\n      {children}\n    </Typography>\n  );\n};\n","import React, { Component } from 'react';\nimport IconButton from '../IconButton';\nimport Close from '@material-ui/icons/Close';\nimport { MosaicWindowContext, MosaicContext } from 'react-mosaic-component';\n\nconst styles = {\n  container: {\n    padding: 0,\n    width: 32,\n    height: 32,\n  },\n  icon: {\n    width: 16,\n    height: 16,\n  },\n};\n\nexport default class CloseButton extends Component {\n  render() {\n    return (\n      <MosaicContext.Consumer>\n        {({ mosaicActions }) => (\n          <MosaicWindowContext.Consumer>\n            {({ mosaicWindowActions }) => (\n              <IconButton\n                onClick={() => {\n                  mosaicActions.remove(mosaicWindowActions.getPath());\n                }}\n                style={styles.container}\n              >\n                <Close htmlColor=\"white\" style={styles.icon} />\n              </IconButton>\n            )}\n          </MosaicWindowContext.Consumer>\n        )}\n      </MosaicContext.Consumer>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport EventsFunctionsExtensionEditor from '../../EventsFunctionsExtensionEditor';\nimport {\n  type RenderEditorContainerProps,\n  type RenderEditorContainerPropsWithRef,\n} from './BaseEditor';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 1,\n  },\n};\n\nexport class EventsFunctionsExtensionEditorContainer extends React.Component<RenderEditorContainerProps> {\n  editor: ?EventsFunctionsExtensionEditor;\n\n  getProject(): ?gdProject {\n    return this.props.project;\n  }\n\n  getLayout(): ?gdLayout {\n    return null;\n  }\n\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  forceUpdateEditor() {\n    // No updates to be done.\n  }\n\n  shouldComponentUpdate(nextProps: RenderEditorContainerProps) {\n    // This optimization is a bit more cautious than the traditional one,\n    // to still be notified when isActive goes from true to false.\n    if (!this.props.isActive && !nextProps.isActive) {\n      return false;\n    }\n\n    return true;\n  }\n\n  componentDidUpdate(prevProps: *) {\n    // Ensure that the editor will trigger the\n    // reload/regeneration of extensions when the user\n    // is focusing another editor\n    if (prevProps.isActive && !this.props.isActive) {\n      this.props.onLoadEventsFunctionsExtensions();\n    }\n  }\n\n  componentWillUnmount() {\n    // Ensure that a closed editor will still trigger the\n    // reload/regeneration of extensions, as changes can have\n    // been made inside before it's closed.\n    if (this.props.isActive) {\n      this.props.onLoadEventsFunctionsExtensions();\n    }\n  }\n\n  _onBehaviorEdited = () => {\n    // Immediately trigger the reload/regeneration of extensions\n    // as a change in the properties of a behavior can create changes\n    // in actions/conditions/expressions to manipulate these properties.\n    this.props.onLoadEventsFunctionsExtensions();\n  };\n\n  previewWillStart = () => {\n    // Immediately trigger the reload/regeneration of extensions\n    // if a preview is about to start, as changes chan have been made\n    // inside. The preview is responsible for waiting for extensions\n    // to be loaded before starting.\n    if (this.props.isActive) {\n      this.props.onLoadEventsFunctionsExtensions();\n    }\n  };\n\n  getEventsFunctionsExtension(): ?gdEventsFunctionsExtension {\n    const { project, projectItemName } = this.props;\n    if (!project || !projectItemName) return null;\n\n    if (!project.hasEventsFunctionsExtensionNamed(projectItemName)) {\n      return null;\n    }\n    return project.getEventsFunctionsExtension(projectItemName);\n  }\n\n  selectEventsFunctionByName(\n    eventsFunctionName: string,\n    behaviorName: ?string\n  ) {\n    if (this.editor)\n      this.editor.selectEventsFunctionByName(eventsFunctionName, behaviorName);\n  }\n\n  render() {\n    const { project, projectItemName } = this.props;\n    const eventsFunctionsExtension = this.getEventsFunctionsExtension();\n\n    if (!eventsFunctionsExtension || !project) {\n      //TODO: Error component\n      return <div>No extension called {projectItemName} found!</div>;\n    }\n\n    const { initiallyFocusedFunctionName, initiallyFocusedBehaviorName } =\n      this.props.extraEditorProps || {};\n\n    return (\n      <div style={styles.container}>\n        <EventsFunctionsExtensionEditor\n          key={eventsFunctionsExtension.ptr}\n          project={project}\n          eventsFunctionsExtension={eventsFunctionsExtension}\n          setToolbar={this.props.setToolbar}\n          resourceSources={this.props.resourceSources}\n          onChooseResource={this.props.onChooseResource}\n          resourceExternalEditors={this.props.resourceExternalEditors}\n          openInstructionOrExpression={this.props.openInstructionOrExpression}\n          onCreateEventsFunction={this.props.onCreateEventsFunction}\n          initiallyFocusedFunctionName={initiallyFocusedFunctionName}\n          initiallyFocusedBehaviorName={initiallyFocusedBehaviorName}\n          onBehaviorEdited={this._onBehaviorEdited}\n          ref={editor => (this.editor = editor)}\n          unsavedChanges={this.props.unsavedChanges}\n        />\n      </div>\n    );\n  }\n}\n\nexport const renderEventsFunctionsExtensionEditorContainer = (\n  props: RenderEditorContainerPropsWithRef\n) => <EventsFunctionsExtensionEditorContainer {...props} />;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport ObjectGroupEditor from '.';\nimport Dialog from '../UI/Dialog';\nimport { useSerializableObjectCancelableEditor } from '../Utils/SerializableObjectCancelableEditor';\nimport useForceUpdate from '../Utils/UseForceUpdate';\n\ntype Props = {|\n  project: gdProject,\n  group: gdObjectGroup,\n  onApply: () => void,\n  onCancel: () => void,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n|};\n\nconst ObjectGroupEditorDialog = ({\n  project,\n  group,\n  onApply,\n  onCancel,\n  globalObjectsContainer,\n  objectsContainer,\n}: Props) => {\n  const forceUpdate = useForceUpdate();\n  const onCancelChanges = useSerializableObjectCancelableEditor({\n    serializableObject: group,\n    onCancel,\n  });\n\n  return (\n    <Dialog\n      key={group.ptr}\n      actions={[\n        <FlatButton\n          key=\"cancel\"\n          label={<Trans>Cancel</Trans>}\n          keyboardFocused\n          onClick={onCancelChanges}\n        />,\n        <FlatButton\n          key=\"apply\"\n          label={<Trans>Apply</Trans>}\n          primary\n          keyboardFocused\n          onClick={onApply}\n        />,\n      ]}\n      noMargin\n      cannotBeDismissed={true}\n      onRequestClose={onCancelChanges}\n      open\n      title={`Edit ${group.getName()} group`}\n    >\n      <ObjectGroupEditor\n        project={project}\n        group={group}\n        globalObjectsContainer={globalObjectsContainer}\n        objectsContainer={objectsContainer}\n        onSizeUpdated={\n          forceUpdate /*Force update to ensure dialog is properly positionned*/\n        }\n      />\n    </Dialog>\n  );\n};\n\nexport default ObjectGroupEditorDialog;\n","// @flow\nimport * as React from 'react';\nimport { type FiltersState, useFilters } from '../../UI/Search/FiltersChooser';\nimport {\n  type Resource,\n  type Author,\n  type License,\n  listAllAuthors,\n  listAllLicenses,\n  listAllResources,\n} from '../../Utils/GDevelopServices/Asset';\nimport { type Filters } from '../../Utils/GDevelopServices/Types.flow';\nimport { useSearchItem } from '../../UI/Search/UseSearchItem';\n\nconst defaultSearchText = '';\n\ntype ResourceStoreState = {|\n  filters: ?Filters,\n  authors: ?Array<Author>,\n  licenses: ?Array<License>,\n  searchResults: ?Array<Resource>,\n  fetchResourcesAndFilters: () => void,\n  error: ?Error,\n  searchText: string,\n  setSearchText: string => void,\n  filtersState: FiltersState,\n|};\n\nexport const ResourceStoreContext = React.createContext<ResourceStoreState>({\n  filters: null,\n  authors: null,\n  licenses: null,\n  searchResults: null,\n  fetchResourcesAndFilters: () => {},\n  error: null,\n  searchText: '',\n  setSearchText: () => {},\n  filtersState: {\n    chosenFilters: new Set(),\n    addFilter: () => {},\n    removeFilter: () => {},\n    chosenCategory: null,\n    setChosenCategory: () => {},\n  },\n});\n\ntype ResourceStoreStateProviderProps = {|\n  children: React.Node,\n|};\n\nconst getResourceSearchTerms = (resource: Resource) => {\n  return resource.name + '\\n' + resource.tags.join(', ');\n};\n\nexport const ResourceStoreStateProvider = ({\n  children,\n}: ResourceStoreStateProviderProps) => {\n  const [resourcesByUrl, setResourcesByUrl] = React.useState<?{\n    [string]: Resource,\n  }>(null);\n  const [filters, setFilters] = React.useState<?Filters>(null);\n  const [authors, setAuthors] = React.useState<?Array<Author>>(null);\n  const [licenses, setLicenses] = React.useState<?Array<License>>(null);\n  const [error, setError] = React.useState<?Error>(null);\n  const isLoading = React.useRef<boolean>(false);\n\n  const [searchText, setSearchText] = React.useState(defaultSearchText);\n  const filtersState = useFilters();\n\n  const fetchResourcesAndFilters = React.useCallback(\n    () => {\n      // Don't attempt to load again resources and filters if they\n      // were loaded already.\n      if (resourcesByUrl || isLoading.current) return;\n\n      (async () => {\n        setError(null);\n        isLoading.current = true;\n\n        try {\n          const { resources, filters } = await listAllResources();\n          const authors = await listAllAuthors();\n          const licenses = await listAllLicenses();\n\n          const resourcesByUrl = {};\n          resources.forEach(resource => {\n            resourcesByUrl[resource.url] = resource;\n          });\n\n          console.info(\n            `Loaded ${resources.length} resources from the asset store.`\n          );\n          setResourcesByUrl(resourcesByUrl);\n          setFilters(filters);\n          setAuthors(authors);\n          setLicenses(licenses);\n        } catch (error) {\n          console.error(\n            `Unable to load the assets from the asset store:`,\n            error\n          );\n          setError(error);\n        }\n\n        isLoading.current = false;\n      })();\n    },\n    [resourcesByUrl, isLoading]\n  );\n\n  React.useEffect(\n    () => {\n      // Don't attempt to load again resources and filters if they\n      // were loaded already.\n      if (resourcesByUrl || isLoading.current) return;\n\n      const timeoutId = setTimeout(() => {\n        console.info('Pre-fetching resources from asset store...');\n        fetchResourcesAndFilters();\n      }, 6000);\n      return () => clearTimeout(timeoutId);\n    },\n    [fetchResourcesAndFilters, resourcesByUrl, isLoading]\n  );\n\n  const { chosenCategory, chosenFilters } = filtersState;\n  const searchResults: ?Array<Resource> = useSearchItem(\n    resourcesByUrl,\n    getResourceSearchTerms,\n    searchText,\n    chosenCategory,\n    chosenFilters\n  );\n\n  const resourceStoreState = React.useMemo(\n    () => ({\n      searchResults,\n      fetchResourcesAndFilters,\n      filters,\n      authors,\n      licenses,\n      error,\n      searchText,\n      setSearchText,\n      filtersState,\n    }),\n    [\n      searchResults,\n      error,\n      filters,\n      authors,\n      licenses,\n      searchText,\n      filtersState,\n      fetchResourcesAndFilters,\n    ]\n  );\n\n  return (\n    <ResourceStoreContext.Provider value={resourceStoreState}>\n      {children}\n    </ResourceStoreContext.Provider>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport PlaceholderLoader from '../PlaceholderLoader';\nimport PlaceholderError from '../PlaceholderError';\nimport ErrorBoundary from '../ErrorBoundary';\nimport { AutoSizer, Grid } from 'react-virtualized';\nimport EmptyMessage from '../EmptyMessage';\n\ntype Props<SearchItem> = {|\n  searchItems: ?Array<SearchItem>,\n  renderSearchItem: (item: SearchItem, size: number) => React.Node,\n  error: ?Error,\n  onRetry: () => void,\n  baseSize: number,\n|};\n\nconst styles = {\n  container: { flex: 1 },\n  grid: { overflowX: 'hidden' },\n};\n\nexport const BoxSearchResults = <SearchItem>({\n  searchItems,\n  renderSearchItem,\n  error,\n  onRetry,\n  baseSize,\n}: Props<SearchItem>) => {\n  if (!searchItems) {\n    if (!error) return <PlaceholderLoader />;\n    else {\n      return (\n        <PlaceholderError onRetry={onRetry}>\n          <Trans>\n            Can't load the results. Verify your internet connection or retry\n            later.\n          </Trans>\n        </PlaceholderError>\n      );\n    }\n  } else if (searchItems.length === 0) {\n    return (\n      <EmptyMessage>\n        <Trans>\n          No results returned for your search. Try something else, browse the\n          categories or create your object from scratch!\n        </Trans>\n      </EmptyMessage>\n    );\n  }\n\n  return (\n    <ErrorBoundary>\n      <div style={styles.container}>\n        <AutoSizer>\n          {({ width, height }) => {\n            if (!width || !height) return null;\n\n            const columnCount = Math.max(Math.floor((width - 5) / baseSize), 1);\n            const columnWidth = Math.max(Math.floor(width / columnCount), 30);\n            const rowCount = Math.max(\n              1,\n              Math.ceil(searchItems.length / columnCount)\n            );\n\n            function cellRenderer({ columnIndex, key, rowIndex, style }) {\n              const indexInList = rowIndex * columnCount + columnIndex;\n              const searchItem =\n                indexInList < searchItems.length\n                  ? searchItems[indexInList]\n                  : null;\n\n              return (\n                <div key={key} style={style}>\n                  {searchItem\n                    ? renderSearchItem(searchItem, columnWidth)\n                    : null}\n                </div>\n              );\n            }\n\n            return (\n              <Grid\n                width={width}\n                height={height}\n                columnCount={columnCount}\n                columnWidth={columnWidth}\n                rowHeight={columnWidth}\n                rowCount={rowCount}\n                cellRenderer={cellRenderer}\n                style={styles.grid}\n              />\n            );\n          }}\n        </AutoSizer>\n      </div>\n    </ErrorBoundary>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Spacer } from './Grid';\n\n// We support a subset of the props supported by Material-UI v0.x FlatButton\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  label: React.Node,\n  onClick: ?() => void,\n  primary?: boolean,\n  disabled?: boolean,\n  keyboardFocused?: boolean,\n  fullWidth?: boolean,\n  icon?: React.Node,\n  style?: {|\n    marginTop?: number,\n    marginBottom?: number,\n    marginLeft?: number,\n    marginRight?: number,\n    margin?: number,\n    flexShrink?: 0,\n  |},\n  target?: '_blank',\n|};\n\n/**\n * A \"flat\" button based on Material-UI button.\n */\nexport default class FlatButton extends React.Component<Props, {||}> {\n  render() {\n    const { label, primary, icon, keyboardFocused, ...otherProps } = this.props;\n\n    // In theory, focus ripple is only shown after a keyboard interaction\n    // (see https://github.com/mui-org/material-ui/issues/12067). However, as\n    // it's important to get focus right in the whole app, make the ripple\n    // always visible to be sure we're getting focusing right.\n    const focusRipple = true;\n\n    return (\n      <Button\n        size=\"small\"\n        color={primary ? 'primary' : 'default'}\n        autoFocus={keyboardFocused}\n        focusRipple={focusRipple}\n        {...otherProps}\n      >\n        {icon}\n        {icon && <Spacer />}\n        {label}\n      </Button>\n    );\n  }\n}\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default props => (\n  <SvgIcon {...props} viewBox=\"0 -3 24 24\">\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g id=\"Create\" fillRule=\"nonzero\">\n        <polygon\n          id=\"Shape\"\n          fill=\"#2B3990\"\n          points=\"24 8 18 2 18 6 14 6 14 10 18 10 18 14\"\n        />\n        <g id=\"Group-2\" fill=\"#27AAE1\">\n          <rect\n            id=\"Rectangle-path\"\n            transform=\"translate(2.999518, 3.574897) rotate(-45.000000) translate(-2.999518, -3.574897) \"\n            x=\"1.58553176\"\n            y=\"0.746924118\"\n            width=\"2.82797288\"\n            height=\"5.65594576\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            transform=\"translate(10.999518, 11.574897) rotate(-45.000000) translate(-10.999518, -11.574897) \"\n            x=\"9.58553176\"\n            y=\"8.74692412\"\n            width=\"2.82797288\"\n            height=\"5.65594576\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            transform=\"translate(2.999518, 11.574897) rotate(-135.000000) translate(-2.999518, -11.574897) \"\n            x=\"1.58553176\"\n            y=\"8.74692412\"\n            width=\"2.82797288\"\n            height=\"5.65594576\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            transform=\"translate(10.999518, 3.574897) rotate(-135.000000) translate(-10.999518, -3.574897) \"\n            x=\"9.58553176\"\n            y=\"0.746924118\"\n            width=\"2.82797288\"\n            height=\"5.65594576\"\n          />\n        </g>\n      </g>\n    </g>\n  </SvgIcon>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default props => (\n  <SvgIcon {...props} viewBox=\"0 -6 24 24\">\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g id=\"Step\" fillRule=\"nonzero\">\n        <polygon\n          id=\"Shape\"\n          fill=\"#2B3990\"\n          points=\"7.5 4.5 3 0 3 3 0 3 0 6 3 6 3 9\"\n        />\n        <circle id=\"Oval\" fill=\"#27AAE1\" cx=\"12\" cy=\"4.5\" r=\"3\" />\n        <circle id=\"Oval\" fill=\"#FFFFFF\" cx=\"12\" cy=\"4.5\" r=\"1.5\" />\n        <polygon\n          id=\"Shape\"\n          fill=\"#2B3990\"\n          points=\"24 4.5 19.5 0 19.5 3 16.5 3 16.5 6 19.5 6 19.5 9\"\n        />\n      </g>\n    </g>\n  </SvgIcon>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default props => (\n  <SvgIcon {...props} viewBox=\"0 -3 24 24\">\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g\n        id=\"Destroy\"\n        transform=\"translate(0.000000, -1.000000)\"\n        fillRule=\"nonzero\"\n      >\n        <g id=\"Group\" transform=\"translate(0.000000, 1.000000)\">\n          <polygon\n            id=\"Shape\"\n            fill=\"#2B3990\"\n            points=\"9.92307692 7.07692308 4.38461538 1.53846154 4.38461538 5.23076923 0.692307692 5.23076923 0.692307692 8.92307692 4.38461538 8.92307692 4.38461538 12.6153846\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#27AAE1\"\n            transform=\"translate(10.845138, 3.385446) rotate(-45.000000) translate(-10.845138, -3.385446) \"\n            x=\"9.53992021\"\n            y=\"0.77500965\"\n            width=\"2.6104365\"\n            height=\"5.22087301\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#27AAE1\"\n            transform=\"translate(18.229754, 10.770062) rotate(-45.000000) translate(-18.229754, -10.770062) \"\n            x=\"16.9245356\"\n            y=\"8.15962503\"\n            width=\"2.6104365\"\n            height=\"5.22087301\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#27AAE1\"\n            transform=\"translate(10.846985, 10.770246) rotate(-135.000000) translate(-10.846985, -10.770246) \"\n            x=\"9.54176636\"\n            y=\"8.15980965\"\n            width=\"2.6104365\"\n            height=\"5.22087301\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#27AAE1\"\n            transform=\"translate(18.231600, 3.385631) rotate(-135.000000) translate(-18.231600, -3.385631) \"\n            x=\"16.9263817\"\n            y=\"0.775194265\"\n            width=\"2.6104365\"\n            height=\"5.22087301\"\n          />\n        </g>\n        <g id=\"Group\" opacity=\"0.1\" transform=\"translate(2.538462, 0.692308)\">\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#000000\"\n            transform=\"translate(7.616400, 11.768538) rotate(135.000000) translate(-7.616400, -11.768538) \"\n            x=\"5.98441565\"\n            y=\"10.4633202\"\n            width=\"3.2639687\"\n            height=\"2.6104365\"\n          />\n          <polygon\n            id=\"Shape\"\n            fill=\"#FFFFFF\"\n            points=\"7.38461538 7.38461538 1.83645766 1.87268753 1.83645766 3.7132995 6.46153846 8.30769231\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#FFFFFF\"\n            transform=\"translate(8.308523, 3.693323) rotate(-135.000000) translate(-8.308523, -3.693323) \"\n            x=\"5.69808657\"\n            y=\"2.38810482\"\n            width=\"5.22087301\"\n            height=\"2.6104365\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#FFFFFF\"\n            transform=\"translate(15.693138, 11.077938) rotate(-135.000000) translate(-15.693138, -11.077938) \"\n            x=\"13.082702\"\n            y=\"9.77272021\"\n            width=\"5.22087301\"\n            height=\"2.6104365\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#FFFFFF\"\n            transform=\"translate(9.460009, 9.922714) rotate(45.000000) translate(-9.460009, -9.922714) \"\n            x=\"8.15479058\"\n            y=\"8.94333902\"\n            width=\"2.6104365\"\n            height=\"1.95875045\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#FFFFFF\"\n            transform=\"translate(15.693138, 3.693323) rotate(-135.000000) translate(-15.693138, -3.693323) \"\n            x=\"14.3879202\"\n            y=\"1.08288657\"\n            width=\"2.6104365\"\n            height=\"5.22087301\"\n          />\n        </g>\n      </g>\n    </g>\n  </SvgIcon>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default props => (\n  <SvgIcon {...props}>\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g id=\"Function\" fillRule=\"nonzero\">\n        <path\n          d=\"M24,14.5714286 L24,9.42857143 L21.948,9.42857143 C21.7045714,8.48742857 21.336,7.59942857 20.8525714,6.78342857 L22.3028571,5.33314286 L18.6668571,1.69542857 L17.2165714,3.14571429 C16.4005714,2.664 15.5125714,2.29371429 14.5714286,2.05028571 L14.5714286,0 L9.42857143,0 L9.42857143,2.052 C8.48742857,2.29542857 7.59942857,2.664 6.78342857,3.14742857 L5.33314286,1.69714286 L1.69714286,5.33314286 L3.14742857,6.78342857 C2.66571429,7.59942857 2.29542857,8.48742857 2.052,9.42857143 L0,9.42857143 L0,14.5714286 L2.052,14.5714286 C2.29542857,15.5125714 2.664,16.4005714 3.14742857,17.2165714 L1.69714286,18.6668571 L5.33314286,22.3045714 L6.78342857,20.8542857 C7.59942857,21.336 8.48742857,21.7062857 9.42857143,21.9497143 L9.42857143,24 L14.5714286,24 L14.5714286,21.948 C15.5125714,21.7045714 16.4005714,21.336 17.2165714,20.8525714 L18.6668571,22.3028571 L22.3028571,18.6651429 L20.8525714,17.2148571 C21.3342857,16.3988571 21.7045714,15.5108571 21.948,14.5697143 L24,14.5697143 L24,14.5714286 Z\"\n          id=\"Shape\"\n          fill=\"#27AAE1\"\n        />\n        <polygon\n          id=\"Shape\"\n          fill=\"#2B3990\"\n          points=\"17.1428571 7.71428571 10.2857143 11.1428571 10.2857143 12 12 12.8571429 15.4285714 11.1428571 15.4285714 13.7142857 12 15.456 8.57142857 13.7142857 8.57142857 10.2857143 12 8.57142857 15.4285714 6.85714286 12 5.14285714 5.14285714 8.57142857 5.14285714 15.4285714 12 18.8571429 17.5714286 16.0714286 18.8571429 15.4285714 18.8571429 15 18.8571429 8.57142857\"\n        />\n        <g id=\"Group\" opacity=\"0.1\">\n          <path\n            d=\"M3.14571429,6.78342857 C2.664,7.59942857 2.29371429,8.48742857 2.05028571,9.42857143 L0,9.42857143 L0,14.5714286 L2.052,14.5714286 C2.29542857,15.5125714 2.664,16.4005714 3.14742857,17.2165714 L1.69714286,18.6668571 L5.33314286,22.3045714 L6.78342857,20.8542857 C7.59942857,21.336 8.48742857,21.7062857 9.42857143,21.9497143 L9.42857143,24 L14.5714286,24 L14.5714286,21.948 C15.5125714,21.7045714 16.4005714,21.336 17.2165714,20.8525714 L18.6668571,22.3028571 L20.4857143,20.484 L3.51428571,3.51428571 L1.69714286,5.33314286 L3.14571429,6.78342857 Z\"\n            id=\"Shape\"\n            fill=\"#000000\"\n          />\n          <path\n            d=\"M22.3028571,18.6668571 L20.8525714,17.2165714 C21.3342857,16.4005714 21.7045714,15.5125714 21.948,14.5714286 L24,14.5714286 L24,9.42857143 L21.948,9.42857143 C21.7045714,8.48742857 21.336,7.59942857 20.8525714,6.78342857 L22.3028571,5.33314286 L18.6668571,1.69542857 L17.2165714,3.14571429 C16.4005714,2.664 15.5125714,2.29371429 14.5714286,2.05028571 L14.5714286,0 L9.42857143,0 L9.42857143,2.052 C8.48742857,2.29542857 7.59942857,2.664 6.78342857,3.14742857 L5.33314286,1.69714286 L3.51428571,3.51428571 L20.484,20.484 L22.3028571,18.6668571 Z\"\n            id=\"Shape\"\n            fill=\"#FFFFFF\"\n          />\n        </g>\n      </g>\n    </g>\n  </SvgIcon>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default props => (\n  <SvgIcon {...props} viewBox=\"0 -6 24 24\">\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g id=\"Activate\" fillRule=\"nonzero\">\n        <rect\n          id=\"Rectangle-path\"\n          fill=\"#27AAE1\"\n          x=\"0\"\n          y=\"0\"\n          width=\"24\"\n          height=\"10.2857143\"\n        />\n        <rect\n          id=\"Rectangle-path\"\n          fill=\"#2B3990\"\n          x=\"1.71428571\"\n          y=\"1.71428571\"\n          width=\"10.2857143\"\n          height=\"6.85714286\"\n        />\n        <polygon\n          id=\"Shape\"\n          fill=\"#FFFFFF\"\n          points=\"20.5710245 1.71428571 18.8571429 3.42897546 17.1432612 5.14285714 15.4285714 6.85673883 17.1432612 8.57142857 18.8571429 6.85673883 20.5710245 5.14285714 22.2857143 3.42897546\"\n        />\n        <polygon\n          id=\"Shape\"\n          fill=\"#FFFFFF\"\n          points=\"18.8567388 3.42857143 17.1428571 5.14326117 15.4289755 3.42857143 13.7142857 5.14326117 15.4289755 6.85714286 18.8567388 6.85714286 20.5714286 5.14326117\"\n        />\n      </g>\n    </g>\n  </SvgIcon>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default props => (\n  <SvgIcon {...props} viewBox=\"0 -6 24 24\">\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g id=\"Deactivate\" fillRule=\"nonzero\">\n        <rect\n          id=\"Rectangle-path\"\n          fill=\"#2B3990\"\n          x=\"0\"\n          y=\"0\"\n          width=\"24\"\n          height=\"10.2857143\"\n        />\n        <polygon\n          id=\"Shape\"\n          fill=\"#FFFFFF\"\n          points=\"6.85673883 1.71428571 5.14285714 3.42897546 3.42897546 1.71428571 1.71428571 3.42897546 3.42897546 5.14285714 1.71428571 6.85673883 3.42897546 8.57142857 5.14285714 6.85673883 6.85673883 8.57142857 8.57142857 6.85673883 6.85673883 5.14285714 8.57142857 3.42897546\"\n        />\n        <rect\n          id=\"Rectangle-path\"\n          fill=\"#27AAE1\"\n          x=\"12\"\n          y=\"1.71428571\"\n          width=\"10.2857143\"\n          height=\"6.85714286\"\n        />\n      </g>\n    </g>\n  </SvgIcon>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React from 'react';\nimport EventsSheet from '../../EventsSheet';\nimport RaisedButton from '../../UI/RaisedButton';\nimport PlaceholderMessage from '../../UI/PlaceholderMessage';\nimport {\n  type RenderEditorContainerProps,\n  type RenderEditorContainerPropsWithRef,\n} from './BaseEditor';\nimport LayoutChooserDialog from './LayoutChooserDialog';\nimport Text from '../../UI/Text';\nimport { Line } from '../../UI/Grid';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 1,\n  },\n};\n\ntype State = {|\n  layoutChooserOpen: boolean,\n|};\n\nexport class ExternalEventsEditorContainer extends React.Component<\n  RenderEditorContainerProps,\n  State\n> {\n  editor: ?EventsSheet;\n\n  state = {\n    layoutChooserOpen: false,\n  };\n\n  shouldComponentUpdate(nextProps: RenderEditorContainerProps) {\n    // Prevent any update to the editor if the editor is not active,\n    // and so not visible to the user.\n    return nextProps.isActive;\n  }\n\n  getProject(): ?gdProject {\n    return this.props.project;\n  }\n\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  forceUpdateEditor() {\n    // No updates to be done.\n  }\n\n  getExternalEvents(): ?gdExternalEvents {\n    const { project, projectItemName } = this.props;\n    if (!project || !projectItemName) return null;\n\n    if (!project.hasExternalEventsNamed(projectItemName)) {\n      return null;\n    }\n    return project.getExternalEvents(projectItemName);\n  }\n\n  getLayout(): ?gdLayout {\n    const { project } = this.props;\n    if (!project) return null;\n\n    const externalEvents = this.getExternalEvents();\n    if (!externalEvents) return null;\n\n    const layoutName = externalEvents.getAssociatedLayout();\n    if (!project.hasLayoutNamed(layoutName)) {\n      return null;\n    }\n    return project.getLayout(layoutName);\n  }\n\n  setAssociatedLayout = (layoutName: string) => {\n    const externalEvents = this.getExternalEvents();\n    if (!externalEvents) return;\n\n    externalEvents.setAssociatedLayout(layoutName);\n    this.setState(\n      {\n        layoutChooserOpen: false,\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  openLayoutChooser = () => {\n    this.setState({\n      layoutChooserOpen: true,\n    });\n  };\n\n  render() {\n    const { project, projectItemName } = this.props;\n    const externalEvents = this.getExternalEvents();\n    const layout = this.getLayout();\n\n    if (!externalEvents || !project) {\n      //TODO: Error component\n      return <div>No external events called {projectItemName} found!</div>;\n    }\n\n    return (\n      <div style={styles.container}>\n        {layout && (\n          <EventsSheet\n            ref={editor => (this.editor = editor)}\n            setToolbar={this.props.setToolbar}\n            onOpenLayout={this.props.onOpenLayout}\n            resourceSources={this.props.resourceSources}\n            onChooseResource={this.props.onChooseResource}\n            resourceExternalEditors={this.props.resourceExternalEditors}\n            openInstructionOrExpression={this.props.openInstructionOrExpression}\n            onCreateEventsFunction={this.props.onCreateEventsFunction}\n            unsavedChanges={this.props.unsavedChanges}\n            project={project}\n            scope={{\n              layout,\n            }}\n            globalObjectsContainer={project}\n            objectsContainer={layout}\n            events={externalEvents.getEvents()}\n            onOpenSettings={this.openLayoutChooser}\n            onOpenExternalEvents={this.props.onOpenExternalEvents}\n          />\n        )}\n        {!layout && (\n          <PlaceholderMessage>\n            <Text>\n              <Trans>\n                To edit the external events, choose the scene in which it will\n                be included:\n              </Trans>\n            </Text>\n            <Line justifyContent=\"center\">\n              <RaisedButton\n                label={<Trans>Choose the scene</Trans>}\n                primary\n                onClick={this.openLayoutChooser}\n              />\n            </Line>\n          </PlaceholderMessage>\n        )}\n        <LayoutChooserDialog\n          title={<Trans>Choose the associated scene</Trans>}\n          helpText=\"You still need to add a Link event in the scene to import the external events\"\n          open={this.state.layoutChooserOpen}\n          project={project}\n          onChoose={this.setAssociatedLayout}\n          onClose={() => this.setState({ layoutChooserOpen: false })}\n        />\n      </div>\n    );\n  }\n}\n\nexport const renderExternalEventsEditorContainer = (\n  props: RenderEditorContainerPropsWithRef\n) => <ExternalEventsEditorContainer {...props} />;\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport FlatButton from '../../UI/FlatButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Dialog from '../../UI/Dialog';\nimport { mapFor } from '../../Utils/MapFor';\nimport Text from '../../UI/Text';\n\nexport default class LayoutChooserDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedLayoutName: props.layoutName,\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.layoutName !== this.props.layoutName) {\n      this.setState({\n        selectedLayoutName: newProps.layoutName,\n      });\n    }\n  }\n\n  chooseLayout(layoutName) {\n    this.setState({\n      selectedLayoutName: layoutName,\n    });\n  }\n\n  render() {\n    const actions = [\n      <FlatButton\n        key=\"cancel\"\n        label={<Trans>Cancel</Trans>}\n        primary={false}\n        onClick={this.props.onClose}\n      />,\n      <FlatButton\n        key=\"choose\"\n        label={<Trans>Choose</Trans>}\n        primary={true}\n        keyboardFocused={true}\n        onClick={() => this.props.onChoose(this.state.selectedLayoutName)}\n        disabled={!this.state.selectedLayoutName}\n      />,\n    ];\n\n    const { project } = this.props;\n    const { selectedLayoutName } = this.state;\n    const layoutNames = mapFor(0, project.getLayoutsCount(), i => {\n      return project.getLayoutAt(i).getName();\n    });\n\n    return (\n      <Dialog\n        actions={actions}\n        open={this.props.open}\n        title={this.props.title}\n        onRequestClose={this.props.onClose}\n        cannotBeDismissed={false}\n        fullWidth\n        maxWidth=\"sm\"\n      >\n        {this.props.helpText && <Text>{this.props.helpText}</Text>}\n        <RadioGroup\n          aria-label=\"Associated scene\"\n          name=\"associated-layout\"\n          value={selectedLayoutName}\n          onChange={event => this.chooseLayout(event.target.value)}\n        >\n          {layoutNames.map(name => (\n            <FormControlLabel\n              key={name}\n              value={name}\n              control={<Radio color=\"primary\" />}\n              label={name}\n            />\n          ))}\n        </RadioGroup>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport SceneEditor from '../../SceneEditor';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../../Utils/Serializer';\nimport PlaceholderMessage from '../../UI/PlaceholderMessage';\nimport {\n  type RenderEditorContainerProps,\n  type RenderEditorContainerPropsWithRef,\n} from './BaseEditor';\nimport LayoutChooserDialog from './LayoutChooserDialog';\nimport { Line } from '../../UI/Grid';\nimport Text from '../../UI/Text';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 1,\n  },\n};\n\ntype State = {|\n  layoutChooserOpen: boolean,\n|};\n\nexport class ExternalLayoutEditorContainer extends React.Component<\n  RenderEditorContainerProps,\n  State\n> {\n  editor: ?SceneEditor;\n  state = {\n    layoutChooserOpen: false,\n  };\n\n  getProject(): ?gdProject {\n    return this.props.project;\n  }\n\n  shouldComponentUpdate(nextProps: RenderEditorContainerProps) {\n    // This optimization is a bit more cautious than the traditional one, to still allow\n    // children, and in particular SceneEditor and InstancesEditor, to be notified when isActive\n    // goes from true to false (in which case PIXI rendering is halted). If isActive was false\n    // and remains false, it's safe to stop update here (PIXI rendering is already halted).\n    if (!this.props.isActive && !nextProps.isActive) {\n      return false;\n    }\n\n    return true;\n  }\n\n  componentDidMount() {\n    if (this.props.isActive) {\n      const { projectItemName } = this.props;\n      const layout = this.getLayout();\n      this.props.setPreviewedLayout(\n        layout ? layout.getName() : null,\n        projectItemName\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps: RenderEditorContainerProps) {\n    if (!prevProps.isActive && this.props.isActive) {\n      const { projectItemName } = this.props;\n      const layout = this.getLayout();\n      this.props.setPreviewedLayout(\n        layout ? layout.getName() : null,\n        projectItemName\n      );\n    }\n  }\n\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  forceUpdateEditor() {\n    // No updates to be done.\n  }\n\n  getExternalLayout(): ?gdExternalLayout {\n    const { project, projectItemName } = this.props;\n    if (!project || !projectItemName) return null;\n\n    if (!project.hasExternalLayoutNamed(projectItemName)) {\n      return null;\n    }\n    return project.getExternalLayout(projectItemName);\n  }\n\n  getLayout(): ?gdLayout {\n    const { project } = this.props;\n    if (!project) return null;\n\n    const externalLayout = this.getExternalLayout();\n    if (!externalLayout) return null;\n\n    const layoutName = externalLayout.getAssociatedLayout();\n    if (!project.hasLayoutNamed(layoutName)) {\n      return null;\n    }\n    return project.getLayout(layoutName);\n  }\n\n  setAssociatedLayout = (layoutName: string) => {\n    const externalLayout = this.getExternalLayout();\n    if (!externalLayout) return;\n\n    externalLayout.setAssociatedLayout(layoutName);\n    this.setState(\n      {\n        layoutChooserOpen: false,\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  openLayoutChooser = () => {\n    this.setState({\n      layoutChooserOpen: true,\n    });\n  };\n\n  saveUiSettings = () => {\n    const layout = this.getExternalLayout();\n    const editor = this.editor;\n\n    if (editor && layout) {\n      unserializeFromJSObject(\n        layout.getAssociatedSettings(),\n        editor.getUiSettings()\n      );\n    }\n  };\n\n  render() {\n    const { project, projectItemName, isActive } = this.props;\n    const externalLayout = this.getExternalLayout();\n    const layout = this.getLayout();\n\n    if (!externalLayout || !project) {\n      //TODO: Error component\n      return <div>No external layout called {projectItemName} found!</div>;\n    }\n\n    return (\n      <div style={styles.container}>\n        {layout && (\n          <SceneEditor\n            setToolbar={this.props.setToolbar}\n            resourceSources={this.props.resourceSources}\n            onChooseResource={this.props.onChooseResource}\n            resourceExternalEditors={this.props.resourceExternalEditors}\n            unsavedChanges={this.props.unsavedChanges}\n            hotReloadPreviewButtonProps={this.props.hotReloadPreviewButtonProps}\n            ref={editor => (this.editor = editor)}\n            project={project}\n            layout={layout}\n            initialInstances={externalLayout.getInitialInstances()}\n            initialUiSettings={serializeToJSObject(\n              externalLayout.getAssociatedSettings()\n            )}\n            onOpenMoreSettings={this.openLayoutChooser}\n            isActive={isActive}\n          />\n        )}\n        {!layout && (\n          <PlaceholderMessage>\n            <Text>\n              <Trans>\n                To edit the external layout, choose the scene in which it will\n                be included:\n              </Trans>\n            </Text>\n            <Line justifyContent=\"center\">\n              <RaisedButton\n                label={<Trans>Choose the scene</Trans>}\n                primary\n                onClick={this.openLayoutChooser}\n              />\n            </Line>\n          </PlaceholderMessage>\n        )}\n        <LayoutChooserDialog\n          title={<Trans>Choose the associated scene</Trans>}\n          open={this.state.layoutChooserOpen}\n          project={project}\n          onChoose={this.setAssociatedLayout}\n          onClose={() => this.setState({ layoutChooserOpen: false })}\n        />\n      </div>\n    );\n  }\n}\n\nexport const renderExternalLayoutEditorContainer = (\n  props: RenderEditorContainerPropsWithRef\n) => <ExternalLayoutEditorContainer {...props} />;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport uniq from 'lodash/uniq';\nimport ObjectsList from '../ObjectsList';\nimport ObjectGroupsList from '../ObjectGroupsList';\nimport ObjectsRenderingService from '../ObjectsRendering/ObjectsRenderingService';\nimport InstancesEditor from '../InstancesEditor';\nimport InstancePropertiesEditor from '../InstancesEditor/InstancePropertiesEditor';\nimport InstancesList from '../InstancesEditor/InstancesList';\nimport LayersList from '../LayersList';\nimport LayerRemoveDialog from '../LayersList/LayerRemoveDialog';\nimport LayerEditorDialog from '../LayersList/LayerEditorDialog';\nimport VariablesEditorDialog from '../VariablesList/VariablesEditorDialog';\nimport ObjectEditorDialog from '../ObjectEditor/ObjectEditorDialog';\nimport ObjectGroupEditorDialog from '../ObjectGroupEditor/ObjectGroupEditorDialog';\nimport InstancesSelection from '../InstancesEditor/InstancesSelection';\nimport SetupGridDialog from './SetupGridDialog';\nimport ScenePropertiesDialog from './ScenePropertiesDialog';\nimport Toolbar from './Toolbar';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\nimport Clipboard, { SafeExtractor } from '../Utils/Clipboard';\nimport Window from '../Utils/Window';\nimport FullSizeInstancesEditorWithScrollbars from '../InstancesEditor/FullSizeInstancesEditorWithScrollbars';\nimport EditorMosaic from '../UI/EditorMosaic';\nimport InfoBar from '../UI/Messages/InfoBar';\nimport ContextMenu from '../UI/Menu/ContextMenu';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport { shortenString } from '../Utils/StringHelpers';\nimport getObjectByName from '../Utils/GetObjectByName';\nimport UseSceneEditorCommands from './UseSceneEditorCommands';\n\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport {\n  type HistoryState,\n  undo,\n  redo,\n  canUndo,\n  canRedo,\n  getHistoryInitialState,\n  saveToHistory,\n} from '../Utils/History';\nimport PixiResourcesLoader from '../ObjectsRendering/PixiResourcesLoader';\nimport {\n  type ObjectWithContext,\n  type GroupWithContext,\n  enumerateObjects,\n} from '../ObjectsList/EnumerateObjects';\nimport TagsButton from '../UI/EditorMosaic/TagsButton';\nimport CloseButton from '../UI/EditorMosaic/CloseButton';\nimport {\n  type SelectedTags,\n  buildTagsMenuTemplate,\n  getTagsFromString,\n} from '../Utils/TagsHelper';\nimport { ResponsiveWindowMeasurer } from '../UI/Reponsive/ResponsiveWindowMeasurer';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\nimport SceneVariablesDialog from './SceneVariablesDialog';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport { onObjectAdded, onInstanceAdded } from '../Hints/ObjectsAdditionalWork';\nimport { type InfoBarDetails } from '../Hints/ObjectsAdditionalWork';\nimport { type HotReloadPreviewButtonProps } from '../HotReload/HotReloadPreviewButton';\nconst gd: libGDevelop = global.gd;\n\nconst INSTANCES_CLIPBOARD_KIND = 'Instances';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 1,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n};\n\nconst initialMosaicEditorNodes = {\n  direction: 'row',\n  first: 'properties',\n  splitPercentage: 23,\n  second: {\n    direction: 'row',\n    first: 'instances-editor',\n    second: 'objects-list',\n    splitPercentage: 77,\n  },\n};\n\nconst initialMosaicEditorNodesSmallWindow = {\n  direction: 'row',\n  first: 'instances-editor',\n  second: 'objects-list',\n  splitPercentage: 70,\n};\n\ntype Props = {|\n  initialInstances: gdInitialInstancesContainer,\n  initialUiSettings: Object,\n  layout: gdLayout,\n  onEditObject?: ?(object: gdObject) => void,\n  onOpenMoreSettings?: ?() => void,\n  project: gdProject,\n  setToolbar: (?React.Node) => void,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  isActive: boolean,\n  unsavedChanges?: ?UnsavedChanges,\n\n  // Preview:\n  hotReloadPreviewButtonProps: HotReloadPreviewButtonProps,\n|};\n\ntype State = {|\n  setupGridOpen: boolean,\n  scenePropertiesDialogOpen: boolean,\n  layersListOpen: boolean,\n  layerRemoveDialogOpen: boolean,\n  onCloseLayerRemoveDialog: ?(doRemove: boolean, newLayer: string) => void,\n  layerRemoved: ?string,\n  editedLayer: ?gdLayer,\n  editedLayerInitialTab: 'properties' | 'effects',\n  editedObjectWithContext: ?ObjectWithContext,\n  variablesEditedInstance: ?gdInitialInstance,\n  variablesEditedObject: ?gdObject,\n  selectedObjectNames: Array<string>,\n  newObjectInstanceSceneCoordinates: ?[number, number],\n\n  editedGroup: ?gdObjectGroup,\n\n  uiSettings: Object,\n  history: HistoryState,\n\n  showObjectsListInfoBar: boolean,\n  layoutVariablesDialogOpen: boolean,\n  showPropertiesInfoBar: boolean,\n  showLayersInfoBar: boolean,\n  showInstancesInfoBar: boolean,\n  showAdditionalWorkInfoBar: boolean,\n  additionalWorkInfoBar: InfoBarDetails,\n\n  // State for tags of objects:\n  selectedObjectTags: SelectedTags,\n|};\n\ntype CopyCutPasteOptions = { useLastCursorPosition?: boolean };\n\nexport default class SceneEditor extends React.Component<Props, State> {\n  static defaultProps = {\n    setToolbar: () => {},\n  };\n\n  instancesSelection: InstancesSelection;\n  editor: ?InstancesEditor;\n  contextMenu: ?ContextMenu;\n  editorMosaic: ?EditorMosaic;\n  _objectsList: ?ObjectsList;\n  _layersList: ?LayersList;\n  _propertiesEditor: ?InstancePropertiesEditor;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.instancesSelection = new InstancesSelection();\n    this.state = {\n      setupGridOpen: false,\n      scenePropertiesDialogOpen: false,\n      layersListOpen: false,\n      layerRemoveDialogOpen: false,\n      onCloseLayerRemoveDialog: null,\n      layerRemoved: null,\n      editedLayer: null,\n      editedLayerInitialTab: 'properties',\n      editedObjectWithContext: null,\n      variablesEditedInstance: null,\n      variablesEditedObject: null,\n      selectedObjectNames: [],\n      newObjectInstanceSceneCoordinates: null,\n      editedGroup: null,\n\n      uiSettings: props.initialUiSettings,\n      history: getHistoryInitialState(props.initialInstances, {\n        historyMaxSize: 50,\n      }),\n\n      showObjectsListInfoBar: false,\n      layoutVariablesDialogOpen: false,\n      showPropertiesInfoBar: false,\n      showLayersInfoBar: false,\n      showInstancesInfoBar: false,\n\n      showAdditionalWorkInfoBar: false,\n      additionalWorkInfoBar: {\n        identifier: 'default-additional-work',\n        message: '',\n        touchScreenMessage: '',\n      },\n\n      selectedObjectTags: [],\n    };\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (this.state.history !== prevState.history)\n      if (this.props.unsavedChanges)\n        this.props.unsavedChanges.triggerUnsavedChanges();\n  }\n\n  getUiSettings() {\n    return this.state.uiSettings;\n  }\n\n  updateToolbar() {\n    this.props.setToolbar(\n      <Toolbar\n        instancesSelection={this.instancesSelection}\n        openObjectsList={this.openObjectsList}\n        openObjectGroupsList={this.openObjectGroupsList}\n        openProperties={this.openProperties}\n        deleteSelection={this.deleteSelection}\n        toggleInstancesList={this.toggleInstancesList}\n        toggleLayersList={this.toggleLayersList}\n        toggleWindowMask={this.toggleWindowMask}\n        toggleGrid={this.toggleGrid}\n        isGridShown={() => !!this.state.uiSettings.grid}\n        isWindowMaskShown={() => !!this.state.uiSettings.windowMask}\n        openSetupGrid={this.openSetupGrid}\n        setZoomFactor={this.setZoomFactor}\n        centerView={this.centerView}\n        canUndo={canUndo(this.state.history)}\n        canRedo={canRedo(this.state.history)}\n        undo={this.undo}\n        redo={this.redo}\n        zoomIn={this.zoomIn}\n        zoomOut={this.zoomOut}\n        onOpenSettings={this.openSceneProperties}\n      />\n    );\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (\n      this.props.layout !== nextProps.layout ||\n      this.props.initialInstances !== nextProps.initialInstances ||\n      this.props.project !== nextProps.project\n    ) {\n      this.instancesSelection.clearSelection();\n      this.openSetupGrid(false);\n      this.editInstanceVariables(null);\n      this.openSceneProperties(false);\n    }\n  }\n\n  openObjectsList = () => {\n    if (!this.editorMosaic) return;\n    if (!this.editorMosaic.openEditor('objects-list', 'end', 75, 'column')) {\n      this.setState({\n        showObjectsListInfoBar: true,\n      });\n    }\n  };\n\n  openProperties = () => {\n    if (!this.editorMosaic) return;\n    if (!this.editorMosaic.openEditor('properties', 'start', 25, 'column')) {\n      this.setState({\n        showPropertiesInfoBar: true,\n      });\n    }\n  };\n\n  openObjectGroupsList = () => {\n    if (!this.editorMosaic) return;\n    this.editorMosaic.openEditor('object-groups-list', 'end', 75, 'column');\n  };\n\n  toggleInstancesList = () => {\n    if (!this.editorMosaic) return;\n    if (!this.editorMosaic.openEditor('instances-list', 'end', 75, 'row')) {\n      this.setState({\n        showInstancesInfoBar: true,\n      });\n    }\n  };\n\n  toggleLayersList = () => {\n    if (!this.editorMosaic) return;\n    if (!this.editorMosaic.openEditor('layers-list', 'end', 75, 'row')) {\n      this.setState({\n        showLayersInfoBar: true,\n      });\n    }\n  };\n\n  toggleWindowMask = () => {\n    this.setState({\n      uiSettings: {\n        ...this.state.uiSettings,\n        windowMask: !this.state.uiSettings.windowMask,\n      },\n    });\n  };\n\n  toggleGrid = () => {\n    this.setState({\n      uiSettings: {\n        ...this.state.uiSettings,\n        grid: !this.state.uiSettings.grid,\n        snap: !this.state.uiSettings.grid,\n      },\n    });\n  };\n\n  openSetupGrid = (open: boolean = true) => {\n    this.setState({ setupGridOpen: open });\n  };\n\n  openSceneProperties = (open: boolean = true) => {\n    this.setState({ scenePropertiesDialogOpen: open });\n  };\n\n  openObjectEditor = () => {\n    if (!this.instancesSelection.hasSelectedInstances()) {\n      return;\n    }\n    const selectedInstanceObjectName = this.instancesSelection\n      .getSelectedInstances()[0]\n      .getObjectName();\n    this.editObjectByName(selectedInstanceObjectName);\n  };\n\n  editLayerEffects = (layer: ?gdLayer) => {\n    this.setState({ editedLayer: layer, editedLayerInitialTab: 'effects' });\n  };\n\n  editLayer = (layer: ?gdLayer) => {\n    this.setState({ editedLayer: layer, editedLayerInitialTab: 'properties' });\n  };\n\n  editInstanceVariables = (instance: ?gdInitialInstance) => {\n    this.setState({ variablesEditedInstance: instance });\n  };\n\n  editObjectVariables = (object: ?gdObject) => {\n    this.setState({ variablesEditedObject: object });\n  };\n\n  editLayoutVariables = (open: boolean = true) => {\n    this.setState({ layoutVariablesDialogOpen: open });\n  };\n\n  editObject = (editedObject: ?gdObject) => {\n    const { project } = this.props;\n    if (editedObject) {\n      this.setState({\n        editedObjectWithContext: {\n          object: editedObject,\n          global: project.hasObjectNamed(editedObject.getName()),\n        },\n      });\n    } else {\n      this.setState({\n        editedObjectWithContext: null,\n      });\n    }\n  };\n\n  editObjectByName = (objectName: string) => {\n    const { project, layout } = this.props;\n    if (layout.hasObjectNamed(objectName))\n      this.editObject(layout.getObject(objectName));\n    else if (project.hasObjectNamed(objectName))\n      this.editObject(project.getObject(objectName));\n  };\n\n  editGroup = (group: ?gdObjectGroup) => {\n    this.setState({ editedGroup: group });\n  };\n\n  setUiSettings = (uiSettings: Object) => {\n    this.setState({\n      uiSettings: {\n        ...this.state.uiSettings,\n        ...uiSettings,\n      },\n    });\n  };\n\n  undo = () => {\n    this.instancesSelection.clearSelection();\n    this.setState(\n      {\n        history: undo(this.state.history, this.props.initialInstances),\n      },\n      () => {\n        // /!\\ Force the instances editor to destroy and mount again the\n        // renderers to avoid keeping any references to existing instances\n        if (this.editor) this.editor.forceRemount();\n        this.updateToolbar();\n      }\n    );\n  };\n\n  redo = () => {\n    this.instancesSelection.clearSelection();\n    this.setState(\n      {\n        history: redo(this.state.history, this.props.initialInstances),\n      },\n      () => {\n        // /!\\ Force the instances editor to destroy and mount again the\n        // renderers to avoid keeping any references to existing instances\n        if (this.editor) this.editor.forceRemount();\n        this.updateToolbar();\n      }\n    );\n  };\n\n  _onObjectSelected = (selectedObjectName: string) => {\n    if (!selectedObjectName) {\n      this.setState({\n        selectedObjectNames: [],\n      });\n    } else {\n      this.setState({\n        selectedObjectNames: [selectedObjectName],\n      });\n    }\n  };\n\n  _createNewObjectAndInstanceUnderCursor = () => {\n    if (!this.editor) {\n      return;\n    }\n\n    // Remember where to create the instance, when the object will be created\n    this.setState({\n      newObjectInstanceSceneCoordinates: this.editor.getLastCursorSceneCoordinates(),\n    });\n\n    if (this._objectsList)\n      this._objectsList.setState({ newObjectDialogOpen: true });\n  };\n\n  _onAddInstanceUnderCursor = () => {\n    if (!this.state.selectedObjectNames.length || !this.editor) {\n      return;\n    }\n\n    const objectSelected = this.state.selectedObjectNames[0];\n    const cursorPosition = this.editor.getLastCursorSceneCoordinates();\n    this._addInstance(cursorPosition, objectSelected);\n    this.setState({\n      selectedObjectNames: [objectSelected],\n    });\n  };\n\n  _addInstance = (pos: [number, number], objectName: string) => {\n    if (!objectName || !this.editor) return;\n\n    const instances = this.editor.addInstances(pos, [objectName]);\n    this._onInstancesAdded(instances);\n  };\n\n  _onInstancesAdded = (instances: Array<gdInitialInstance>) => {\n    instances.forEach(instance => {\n      const infoBarDetails = onInstanceAdded(\n        instance,\n        this.props.layout,\n        this.props.project\n      );\n      if (infoBarDetails) {\n        this.setState({\n          additionalWorkInfoBar: infoBarDetails,\n          showAdditionalWorkInfoBar: true,\n        });\n      }\n    });\n\n    this.setState(\n      {\n        history: saveToHistory(this.state.history, this.props.initialInstances),\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  _onInstancesSelected = (instances: Array<gdInitialInstance>) => {\n    this.setState({\n      selectedObjectNames: uniq(\n        instances.map(instance => instance.getObjectName())\n      ),\n    });\n    this.forceUpdatePropertiesEditor();\n    this.updateToolbar();\n  };\n\n  _onInstanceDoubleClicked = (instance: gdInitialInstance) => {\n    this.editObjectByName(instance.getObjectName());\n  };\n\n  _onInstancesMoved = (instances: Array<gdInitialInstance>) => {\n    this.setState(\n      {\n        history: saveToHistory(this.state.history, this.props.initialInstances),\n      },\n      () => this.forceUpdatePropertiesEditor()\n    );\n  };\n\n  _onInstancesResized = (instances: Array<gdInitialInstance>) => {\n    this.setState(\n      {\n        history: saveToHistory(this.state.history, this.props.initialInstances),\n      },\n      () => this.forceUpdatePropertiesEditor()\n    );\n  };\n\n  _onInstancesRotated = (instances: Array<gdInitialInstance>) => {\n    this.setState(\n      {\n        history: saveToHistory(this.state.history, this.props.initialInstances),\n      },\n      () => this.forceUpdatePropertiesEditor()\n    );\n  };\n\n  _onInstancesModified = (instances: Array<gdInitialInstance>) => {\n    this.forceUpdate();\n    //TODO: Save for redo with debounce (and cancel on unmount)\n  };\n\n  _onSelectInstances = (\n    instances: Array<gdInitialInstance>,\n    centerView: boolean = true\n  ) => {\n    this.instancesSelection.selectInstances(instances, false);\n\n    if (centerView) {\n      if (this.editor) this.editor.centerViewOn(instances);\n    }\n    this.forceUpdatePropertiesEditor();\n    this.updateToolbar();\n  };\n\n  /**\n   * Create an instance of the given object, at the position\n   * previously chosen (see `newObjectInstanceSceneCoordinates`).\n   */\n  _addInstanceForNewObject = (newObjectName: string) => {\n    const { newObjectInstanceSceneCoordinates } = this.state;\n    if (!newObjectInstanceSceneCoordinates) {\n      return;\n    }\n\n    this._addInstance(newObjectInstanceSceneCoordinates, newObjectName);\n    this.setState({ newObjectInstanceSceneCoordinates: null });\n  };\n\n  _onObjectCreated = (object: gdObject) => {\n    const infoBarDetails = onObjectAdded(\n      object,\n      this.props.layout,\n      this.props.project\n    );\n    if (infoBarDetails) {\n      this.setState({\n        additionalWorkInfoBar: infoBarDetails,\n        showAdditionalWorkInfoBar: true,\n      });\n    }\n\n    this._addInstanceForNewObject(object.getName());\n  };\n\n  _onRemoveLayer = (layerName: string, done: boolean => void) => {\n    this.setState({\n      layerRemoveDialogOpen: true,\n      layerRemoved: layerName,\n      onCloseLayerRemoveDialog: (doRemove, newLayer) => {\n        this.setState(\n          {\n            layerRemoveDialogOpen: false,\n          },\n          () => {\n            if (doRemove) {\n              if (newLayer === null) {\n                this.props.initialInstances.removeAllInstancesOnLayer(\n                  layerName\n                );\n              } else {\n                this.props.initialInstances.moveInstancesToLayer(\n                  layerName,\n                  newLayer\n                );\n              }\n            }\n\n            done(doRemove);\n            // /!\\ Force the instances editor to destroy and mount again the\n            // renderers to avoid keeping any references to existing instances\n            if (this.editor) this.editor.forceRemount();\n            this.forceUpdateLayersList();\n            this.updateToolbar();\n          }\n        );\n      },\n    });\n  };\n\n  _onRenameLayer = (\n    oldName: string,\n    newName: string,\n    done: boolean => void\n  ) => {\n    this.props.initialInstances.moveInstancesToLayer(oldName, newName);\n    done(true);\n  };\n\n  _onDeleteObject = (\n    objectWithContext: ObjectWithContext,\n    done: boolean => void\n  ) => {\n    const { object, global } = objectWithContext;\n    const { project, layout } = this.props;\n\n    const answer = Window.showConfirmDialog(\n      'Do you want to remove all references to this object in groups and events (actions and conditions using the object)?'\n    );\n\n    if (global) {\n      gd.WholeProjectRefactorer.globalObjectOrGroupRemoved(\n        project,\n        object.getName(),\n        /* isObjectGroup=*/ false,\n        !!answer\n      );\n    } else {\n      gd.WholeProjectRefactorer.objectOrGroupRemovedInLayout(\n        project,\n        layout,\n        object.getName(),\n        /* isObjectGroup=*/ false,\n        !!answer\n      );\n    }\n    done(true);\n  };\n\n  _canObjectOrGroupUseNewName = (newName: string) => {\n    const { project, layout } = this.props;\n\n    if (\n      layout.hasObjectNamed(newName) ||\n      project.hasObjectNamed(newName) ||\n      layout.getObjectGroups().has(newName) ||\n      project.getObjectGroups().has(newName)\n    ) {\n      showWarningBox('Another object or group with this name already exists.', {\n        delayToNextTick: true,\n      });\n      return false;\n    } else if (!gd.Project.validateName(newName)) {\n      showWarningBox(\n        'This name is invalid. Only use alphanumeric characters (0-9, a-z) and underscores. Digits are not allowed as the first character.',\n        { delayToNextTick: true }\n      );\n      return false;\n    }\n\n    return true;\n  };\n\n  _onRenameEditedObject = (newName: string) => {\n    const { editedObjectWithContext } = this.state;\n\n    if (editedObjectWithContext) {\n      this._onRenameObject(editedObjectWithContext, newName, () => {});\n    }\n  };\n\n  _onRenameObject = (\n    objectWithContext: ObjectWithContext,\n    newName: string,\n    done: boolean => void\n  ) => {\n    const { object, global } = objectWithContext;\n    const { project, layout } = this.props;\n\n    // newName is supposed to have been already validated\n\n    // Avoid triggering renaming refactoring if name has not really changed\n    if (object.getName() !== newName) {\n      if (global) {\n        gd.WholeProjectRefactorer.globalObjectOrGroupRenamed(\n          project,\n          object.getName(),\n          newName,\n          /* isObjectGroup=*/ false\n        );\n      } else {\n        gd.WholeProjectRefactorer.objectOrGroupRenamedInLayout(\n          project,\n          layout,\n          object.getName(),\n          newName,\n          /* isObjectGroup=*/ false\n        );\n      }\n    }\n\n    object.setName(newName);\n    done(true);\n  };\n\n  _onDeleteGroup = (\n    groupWithContext: GroupWithContext,\n    done: boolean => void\n  ) => {\n    const { group, global } = groupWithContext;\n    const { project, layout } = this.props;\n\n    const answer = Window.showConfirmDialog(\n      'Do you want to remove all references to this group in events (actions and conditions using the group)?'\n    );\n\n    if (global) {\n      gd.WholeProjectRefactorer.globalObjectOrGroupRemoved(\n        project,\n        group.getName(),\n        /* isObjectGroup=*/ true,\n        !!answer\n      );\n    } else {\n      gd.WholeProjectRefactorer.objectOrGroupRemovedInLayout(\n        project,\n        layout,\n        group.getName(),\n        /* isObjectGroup=*/ true,\n        !!answer\n      );\n    }\n    done(true);\n  };\n\n  _onRenameGroup = (\n    groupWithContext: GroupWithContext,\n    newName: string,\n    done: boolean => void\n  ) => {\n    const { group, global } = groupWithContext;\n    const { project, layout } = this.props;\n\n    // newName is supposed to have been already validated\n\n    // Avoid triggering renaming refactoring if name has not really changed\n    if (group.getName() !== newName) {\n      if (global) {\n        gd.WholeProjectRefactorer.globalObjectOrGroupRenamed(\n          project,\n          group.getName(),\n          newName,\n          /* isObjectGroup=*/ true\n        );\n      } else {\n        gd.WholeProjectRefactorer.objectOrGroupRenamedInLayout(\n          project,\n          layout,\n          group.getName(),\n          newName,\n          /* isObjectGroup=*/ true\n        );\n      }\n    }\n\n    done(true);\n  };\n\n  deleteSelection = () => {\n    const selectedInstances = this.instancesSelection.getSelectedInstances();\n    selectedInstances.map(instance =>\n      this.props.initialInstances.removeInstance(instance)\n    );\n\n    this.instancesSelection.clearSelection();\n    if (this.editor) this.editor.clearHighlightedInstance();\n\n    this.setState(\n      {\n        selectedObjectNames: [],\n        history: saveToHistory(this.state.history, this.props.initialInstances),\n      },\n      () => {\n        this.updateToolbar();\n        this.forceUpdatePropertiesEditor();\n      }\n    );\n  };\n\n  centerView = () => {\n    if (this.editor) this.editor.centerView();\n  };\n\n  setZoomFactor = (zoomFactor: number) => {\n    if (this.editor) this.editor.setZoomFactor(zoomFactor);\n  };\n\n  zoomIn = () => {\n    if (this.editor) this.editor.zoomBy(0.1);\n  };\n\n  zoomOut = () => {\n    if (this.editor) this.editor.zoomBy(-0.1);\n  };\n\n  _onContextMenu = (x: number, y: number) => {\n    if (this.contextMenu) this.contextMenu.open(x, y);\n  };\n\n  copySelection = ({ useLastCursorPosition }: CopyCutPasteOptions = {}) => {\n    const serializedSelection = this.instancesSelection\n      .getSelectedInstances()\n      .map(instance => serializeToJSObject(instance));\n\n    if (this.editor) {\n      const position = useLastCursorPosition\n        ? this.editor.getLastCursorSceneCoordinates()\n        : this.editor.getLastContextMenuSceneCoordinates();\n      Clipboard.set(INSTANCES_CLIPBOARD_KIND, {\n        x: position[0],\n        y: position[1],\n        instances: serializedSelection,\n      });\n    }\n  };\n\n  cutSelection = (options: CopyCutPasteOptions = {}) => {\n    this.copySelection(options);\n    this.deleteSelection();\n  };\n\n  paste = ({ useLastCursorPosition }: CopyCutPasteOptions = {}) => {\n    if (!this.editor) return;\n\n    const position = useLastCursorPosition\n      ? this.editor.getLastCursorSceneCoordinates()\n      : this.editor.getLastContextMenuSceneCoordinates();\n\n    const clipboardContent = Clipboard.get(INSTANCES_CLIPBOARD_KIND);\n    const instancesContent = SafeExtractor.extractArrayProperty(\n      clipboardContent,\n      'instances'\n    );\n    const x = SafeExtractor.extractNumberProperty(clipboardContent, 'x');\n    const y = SafeExtractor.extractNumberProperty(clipboardContent, 'y');\n    if (x === null || y === null || instancesContent === null) return;\n\n    instancesContent\n      .map(serializedInstance => {\n        const instance = new gd.InitialInstance();\n        unserializeFromJSObject(instance, serializedInstance);\n        return instance;\n      })\n      .forEach(instance => {\n        instance.setX(instance.getX() - x + position[0]);\n        instance.setY(instance.getY() - y + position[1]);\n        this.props.initialInstances\n          .insertInitialInstance(instance)\n          .resetPersistentUuid();\n        instance.delete();\n      });\n  };\n\n  updateBehaviorsSharedData = () => {\n    const { layout, project } = this.props;\n    layout.updateBehaviorsSharedData(project);\n  };\n\n  forceUpdateObjectsList = () => {\n    if (this._objectsList) this._objectsList.forceUpdateList();\n  };\n\n  forceUpdateLayersList = () => {\n    if (this._layersList) this._layersList.forceUpdate();\n  };\n\n  forceUpdatePropertiesEditor = () => {\n    if (this._propertiesEditor) this._propertiesEditor.forceUpdate();\n  };\n\n  reloadResourcesFor = (object: gdObject) => {\n    const { project } = this.props;\n\n    const resourcesInUse = new gd.ResourcesInUseHelper();\n    object.exposeResources(resourcesInUse);\n    const objectResourceNames = resourcesInUse\n      .getAllImages()\n      .toNewVectorString()\n      .toJSArray();\n    resourcesInUse.delete();\n\n    PixiResourcesLoader.loadTextures(\n      project,\n      objectResourceNames,\n      () => {},\n      () => {\n        if (this.editor) this.editor.resetRenderersFor(object.getName());\n      }\n    );\n  };\n\n  _getAllObjectTags = (): Array<string> => {\n    const { project, layout } = this.props;\n\n    const tagsSet: Set<string> = new Set();\n    enumerateObjects(project, layout).allObjectsList.forEach(({ object }) => {\n      getTagsFromString(object.getTags()).forEach(tag => tagsSet.add(tag));\n    });\n\n    return Array.from(tagsSet);\n  };\n\n  _buildObjectTagsMenuTemplate = (i18n: I18nType): Array<any> => {\n    const { selectedObjectTags } = this.state;\n\n    return buildTagsMenuTemplate({\n      noTagLabel: i18n._(t`No tags - add a tag to an object first`),\n      getAllTags: this._getAllObjectTags,\n      selectedTags: selectedObjectTags,\n      onChange: selectedObjectTags => {\n        this.setState({ selectedObjectTags });\n      },\n    });\n  };\n\n  render() {\n    const {\n      project,\n      layout,\n      initialInstances,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n      isActive,\n    } = this.props;\n    const selectedInstances = this.instancesSelection.getSelectedInstances();\n\n    const editors = {\n      properties: {\n        type: 'secondary',\n        title: t`Properties`,\n        renderEditor: () => (\n          <I18n>\n            {({ i18n }) => (\n              <InstancePropertiesEditor\n                i18n={i18n}\n                project={project}\n                layout={layout}\n                instances={selectedInstances}\n                editInstanceVariables={this.editInstanceVariables}\n                editObjectVariables={this.editObjectVariables}\n                onEditObjectByName={this.editObjectByName}\n                ref={propertiesEditor =>\n                  (this._propertiesEditor = propertiesEditor)\n                }\n                unsavedChanges={this.props.unsavedChanges}\n              />\n            )}\n          </I18n>\n        ),\n      },\n      'layers-list': {\n        type: 'secondary',\n        title: t`Layers`,\n        renderEditor: () => (\n          <LayersList\n            project={project}\n            resourceSources={resourceSources}\n            resourceExternalEditors={resourceExternalEditors}\n            onChooseResource={onChooseResource}\n            onEditLayerEffects={this.editLayerEffects}\n            onEditLayer={this.editLayer}\n            onRemoveLayer={this._onRemoveLayer}\n            onRenameLayer={this._onRenameLayer}\n            layersContainer={layout}\n            unsavedChanges={this.props.unsavedChanges}\n            ref={layersList => (this._layersList = layersList)}\n            hotReloadPreviewButtonProps={this.props.hotReloadPreviewButtonProps}\n          />\n        ),\n      },\n      'instances-list': {\n        type: 'secondary',\n        title: t`Instances list`,\n        renderEditor: () => (\n          <InstancesList\n            instances={initialInstances}\n            selectedInstances={selectedInstances}\n            onSelectInstances={this._onSelectInstances}\n          />\n        ),\n      },\n      'instances-editor': {\n        type: 'primary',\n        noTitleBar: true,\n        renderEditor: () => (\n          <FullSizeInstancesEditorWithScrollbars\n            project={project}\n            layout={layout}\n            initialInstances={initialInstances}\n            options={this.state.uiSettings}\n            onChangeOptions={this.setUiSettings}\n            instancesSelection={this.instancesSelection}\n            onDeleteSelection={this.deleteSelection}\n            onInstancesAdded={this._onInstancesAdded}\n            onInstancesSelected={this._onInstancesSelected}\n            onInstanceDoubleClicked={this._onInstanceDoubleClicked}\n            onInstancesMoved={this._onInstancesMoved}\n            onInstancesResized={this._onInstancesResized}\n            onInstancesRotated={this._onInstancesRotated}\n            selectedObjectNames={this.state.selectedObjectNames}\n            onContextMenu={this._onContextMenu}\n            onCopy={() => this.copySelection({ useLastCursorPosition: true })}\n            onCut={() => this.cutSelection({ useLastCursorPosition: true })}\n            onPaste={() => this.paste({ useLastCursorPosition: true })}\n            onUndo={this.undo}\n            onRedo={this.redo}\n            onZoomOut={this.zoomOut}\n            onZoomIn={this.zoomIn}\n            wrappedEditorRef={editor => {\n              this.editor = editor;\n            }}\n            pauseRendering={!isActive}\n          />\n        ),\n      },\n      'objects-list': {\n        type: 'secondary',\n        title: t`Objects`,\n        toolbarControls: [\n          <I18n key=\"tags\">\n            {({ i18n }) => (\n              <TagsButton\n                buildMenuTemplate={(i18n: I18nType) =>\n                  this._buildObjectTagsMenuTemplate(i18n)\n                }\n              />\n            )}\n          </I18n>,\n          <CloseButton key=\"close\" />,\n        ],\n        renderEditor: () => (\n          <ObjectsList\n            getThumbnail={ObjectsRenderingService.getThumbnail.bind(\n              ObjectsRenderingService\n            )}\n            project={project}\n            objectsContainer={layout}\n            layout={layout}\n            events={layout.getEvents()}\n            resourceSources={resourceSources}\n            resourceExternalEditors={resourceExternalEditors}\n            onChooseResource={onChooseResource}\n            selectedObjectNames={this.state.selectedObjectNames}\n            onEditObject={this.props.onEditObject || this.editObject}\n            onDeleteObject={this._onDeleteObject}\n            canRenameObject={this._canObjectOrGroupUseNewName}\n            onObjectCreated={this._onObjectCreated}\n            onObjectSelected={this._onObjectSelected}\n            onRenameObject={this._onRenameObject}\n            onObjectPasted={() => this.updateBehaviorsSharedData()}\n            selectedObjectTags={this.state.selectedObjectTags}\n            onChangeSelectedObjectTags={selectedObjectTags =>\n              this.setState({\n                selectedObjectTags,\n              })\n            }\n            getAllObjectTags={this._getAllObjectTags}\n            ref={objectsList => (this._objectsList = objectsList)}\n            unsavedChanges={this.props.unsavedChanges}\n            hotReloadPreviewButtonProps={this.props.hotReloadPreviewButtonProps}\n          />\n        ),\n      },\n      'object-groups-list': {\n        type: 'secondary',\n        title: t`Object Groups`,\n        renderEditor: () => (\n          <ObjectGroupsList\n            globalObjectGroups={project.getObjectGroups()}\n            objectGroups={layout.getObjectGroups()}\n            onEditGroup={this.editGroup}\n            onDeleteGroup={this._onDeleteGroup}\n            onRenameGroup={this._onRenameGroup}\n            canRenameGroup={this._canObjectOrGroupUseNewName}\n            unsavedChanges={this.props.unsavedChanges}\n          />\n        ),\n      },\n    };\n    return (\n      <div style={styles.container}>\n        <UseSceneEditorCommands\n          project={project}\n          layout={layout}\n          onEditObject={this.props.onEditObject || this.editObject}\n          onEditObjectVariables={this.editObjectVariables}\n          onOpenSceneProperties={this.openSceneProperties}\n          onOpenSceneVariables={this.editLayoutVariables}\n          onEditObjectGroup={this.editGroup}\n          onEditLayerEffects={this.editLayerEffects}\n          onEditLayer={this.editLayer}\n        />\n        <ResponsiveWindowMeasurer>\n          {windowWidth => (\n            <PreferencesContext.Consumer>\n              {({ getDefaultEditorMosaicNode, setDefaultEditorMosaicNode }) => (\n                <EditorMosaic\n                  editors={editors}\n                  limitToOneSecondaryEditor={windowWidth === 'small'}\n                  initialNodes={\n                    windowWidth === 'small'\n                      ? getDefaultEditorMosaicNode('scene-editor-small') ||\n                        initialMosaicEditorNodesSmallWindow\n                      : getDefaultEditorMosaicNode('scene-editor') ||\n                        initialMosaicEditorNodes\n                  }\n                  onPersistNodes={node =>\n                    setDefaultEditorMosaicNode(\n                      windowWidth === 'small'\n                        ? 'scene-editor-small'\n                        : 'scene-editor',\n                      node\n                    )\n                  }\n                  ref={editorMosaic => (this.editorMosaic = editorMosaic)}\n                />\n              )}\n            </PreferencesContext.Consumer>\n          )}\n        </ResponsiveWindowMeasurer>\n        {this.state.editedObjectWithContext && (\n          <ObjectEditorDialog\n            open\n            object={this.state.editedObjectWithContext.object}\n            project={project}\n            resourceSources={resourceSources}\n            resourceExternalEditors={resourceExternalEditors}\n            onChooseResource={onChooseResource}\n            onCancel={() => {\n              if (this.state.editedObjectWithContext) {\n                this.reloadResourcesFor(\n                  this.state.editedObjectWithContext.object\n                );\n              }\n              this.editObject(null);\n            }}\n            canRenameObject={this._canObjectOrGroupUseNewName}\n            onRename={newName => {\n              this._onRenameEditedObject(newName);\n            }}\n            onApply={() => {\n              if (this.state.editedObjectWithContext) {\n                this.reloadResourcesFor(\n                  this.state.editedObjectWithContext.object\n                );\n              }\n              this.editObject(null);\n              this.updateBehaviorsSharedData();\n              this.forceUpdateObjectsList();\n\n              if (this.props.unsavedChanges)\n                this.props.unsavedChanges.triggerUnsavedChanges();\n            }}\n            hotReloadPreviewButtonProps={this.props.hotReloadPreviewButtonProps}\n            onUpdateBehaviorsSharedData={() => this.updateBehaviorsSharedData()}\n          />\n        )}\n        {!!this.state.editedGroup && (\n          <ObjectGroupEditorDialog\n            project={project}\n            group={this.state.editedGroup}\n            objectsContainer={layout}\n            globalObjectsContainer={project}\n            onCancel={() => this.editGroup(null)}\n            onApply={() => this.editGroup(null)}\n          />\n        )}\n        <InfoBar\n          identifier=\"instance-drag-n-drop-explanation\"\n          message={\n            <Trans>\n              Drag and Drop the object to the scene or use the right click menu\n              to add an instance of it.\n            </Trans>\n          }\n          touchScreenMessage={\n            <Trans>\n              Drag and Drop the object icon to the scene or long press to show\n              options to edit the object.\n            </Trans>\n          }\n          show={!!this.state.selectedObjectNames.length}\n        />\n        <InfoBar\n          identifier=\"objects-panel-explanation\"\n          message={\n            <Trans>\n              Objects panel is already opened: use it to add and edit objects.\n            </Trans>\n          }\n          show={!!this.state.showObjectsListInfoBar}\n        />\n        <InfoBar\n          identifier=\"instance-properties-panel-explanation\"\n          message={\n            <Trans>\n              Properties panel is already opened. After selecting an instance on\n              the scene, inspect and change its properties from this panel.\n            </Trans>\n          }\n          show={!!this.state.showPropertiesInfoBar}\n        />\n        <InfoBar\n          identifier=\"layers-panel-explanation\"\n          message={\n            <Trans>\n              Layers panel is already opened. You can add new layers and apply\n              effects on them from this panel.\n            </Trans>\n          }\n          show={!!this.state.showLayersInfoBar}\n        />\n        <InfoBar\n          identifier=\"instances-panel-explanation\"\n          message={\n            <Trans>\n              Instances panel is already opened. You can search instances in the\n              scene and click one to move the view to it.\n            </Trans>\n          }\n          show={!!this.state.showInstancesInfoBar}\n        />\n        {this.state.setupGridOpen && (\n          <SetupGridDialog\n            open\n            gridOptions={this.state.uiSettings}\n            onCancel={() => this.openSetupGrid(false)}\n            onApply={gridOptions => {\n              this.setUiSettings(gridOptions);\n              this.openSetupGrid(false);\n            }}\n          />\n        )}\n        {!!this.state.variablesEditedInstance && (\n          <VariablesEditorDialog\n            open\n            variablesContainer={\n              this.state.variablesEditedInstance &&\n              this.state.variablesEditedInstance.getVariables()\n            }\n            onCancel={() => this.editInstanceVariables(null)}\n            onApply={() => this.editInstanceVariables(null)}\n            emptyExplanationMessage={\n              <Trans>\n                Instance variables will override the default values of the\n                variables of the object.\n              </Trans>\n            }\n            title={<Trans>Instance Variables</Trans>}\n            onEditObjectVariables={() => {\n              if (!this.instancesSelection.hasSelectedInstances()) {\n                return;\n              }\n              const associatedObjectName = this.instancesSelection\n                .getSelectedInstances()[0]\n                .getObjectName();\n              const object = getObjectByName(\n                project,\n                layout,\n                associatedObjectName\n              );\n              if (object) {\n                this.editObjectVariables(object);\n                this.editInstanceVariables(null);\n              }\n            }}\n            hotReloadPreviewButtonProps={this.props.hotReloadPreviewButtonProps}\n          />\n        )}\n        {!!this.state.variablesEditedObject && (\n          <VariablesEditorDialog\n            open\n            variablesContainer={\n              this.state.variablesEditedObject &&\n              this.state.variablesEditedObject.getVariables()\n            }\n            onCancel={() => this.editObjectVariables(null)}\n            onApply={() => this.editObjectVariables(null)}\n            emptyExplanationMessage={\n              <Trans>\n                When you add variables to an object, any instance of the object\n                put on the scene or created during the game will have these\n                variables attached to it.\n              </Trans>\n            }\n            title={<Trans>Object Variables</Trans>}\n            hotReloadPreviewButtonProps={this.props.hotReloadPreviewButtonProps}\n          />\n        )}\n        {!!this.state.layerRemoveDialogOpen && (\n          <LayerRemoveDialog\n            open\n            layersContainer={layout}\n            layerRemoved={this.state.layerRemoved}\n            onClose={this.state.onCloseLayerRemoveDialog}\n          />\n        )}\n        {!!this.state.editedLayer && (\n          <LayerEditorDialog\n            project={project}\n            resourceSources={resourceSources}\n            onChooseResource={onChooseResource}\n            resourceExternalEditors={resourceExternalEditors}\n            layer={this.state.editedLayer}\n            initialInstances={initialInstances}\n            initialTab={this.state.editedLayerInitialTab}\n            onClose={() =>\n              this.setState({\n                editedLayer: null,\n              })\n            }\n            hotReloadPreviewButtonProps={this.props.hotReloadPreviewButtonProps}\n          />\n        )}\n        {this.state.scenePropertiesDialogOpen && (\n          <ScenePropertiesDialog\n            open\n            project={project}\n            layout={layout}\n            onClose={() => this.openSceneProperties(false)}\n            onApply={() => this.openSceneProperties(false)}\n            onEditVariables={() => this.editLayoutVariables(true)}\n            onOpenMoreSettings={this.props.onOpenMoreSettings}\n          />\n        )}\n        {!!this.state.layoutVariablesDialogOpen && (\n          <SceneVariablesDialog\n            open\n            layout={layout}\n            onApply={() => this.editLayoutVariables(false)}\n            onClose={() => this.editLayoutVariables(false)}\n            hotReloadPreviewButtonProps={this.props.hotReloadPreviewButtonProps}\n          />\n        )}\n        <I18n>\n          {({ i18n }) => (\n            <React.Fragment>\n              <InfoBar\n                show={this.state.showAdditionalWorkInfoBar}\n                identifier={this.state.additionalWorkInfoBar.identifier}\n                message={i18n._(this.state.additionalWorkInfoBar.message)}\n                touchScreenMessage={i18n._(\n                  this.state.additionalWorkInfoBar.touchScreenMessage\n                )}\n              />\n              <ContextMenu\n                ref={contextMenu => (this.contextMenu = contextMenu)}\n                buildMenuTemplate={(i18n: I18nType) => [\n                  {\n                    label: this.state.selectedObjectNames.length\n                      ? i18n._(\n                          t`Add an Instance of ${shortenString(\n                            this.state.selectedObjectNames[0],\n                            7\n                          )}`\n                        )\n                      : '',\n                    click: () => this._onAddInstanceUnderCursor(),\n                    visible: this.state.selectedObjectNames.length > 0,\n                  },\n                  {\n                    label: i18n._(t`Insert a New Object`),\n                    click: () => this._createNewObjectAndInstanceUnderCursor(),\n                    visible: this.state.selectedObjectNames.length === 0,\n                  },\n                  {\n                    label: this.state.selectedObjectNames.length\n                      ? i18n._(\n                          t`Edit Object ${shortenString(\n                            this.state.selectedObjectNames[0],\n                            14\n                          )}`\n                        )\n                      : '',\n                    click: () =>\n                      this.editObjectByName(this.state.selectedObjectNames[0]),\n                    visible: this.state.selectedObjectNames.length > 0,\n                  },\n                  {\n                    label: i18n._(t`Scene properties`),\n                    click: () => this.openSceneProperties(true),\n                  },\n                  { type: 'separator' },\n                  {\n                    label: i18n._(t`Copy`),\n                    click: () => this.copySelection(),\n                    enabled: this.instancesSelection.hasSelectedInstances(),\n                    accelerator: 'CmdOrCtrl+C',\n                  },\n                  {\n                    label: i18n._(t`Cut`),\n                    click: () => this.cutSelection(),\n                    enabled: this.instancesSelection.hasSelectedInstances(),\n                    accelerator: 'CmdOrCtrl+X',\n                  },\n                  {\n                    label: i18n._(t`Paste`),\n                    click: () => this.paste(),\n                    enabled: Clipboard.has(INSTANCES_CLIPBOARD_KIND),\n                    accelerator: 'CmdOrCtrl+V',\n                  },\n                  { type: 'separator' },\n                  {\n                    label: i18n._(t`Undo`),\n                    click: this.undo,\n                    enabled: canUndo(this.state.history),\n                    accelerator: 'CmdOrCtrl+Z',\n                  },\n                  {\n                    label: i18n._(t`Redo`),\n                    click: this.redo,\n                    enabled: canRedo(this.state.history),\n                    accelerator: 'CmdOrCtrl+Shift+Z',\n                  },\n                  {\n                    label: i18n._(t`Delete`),\n                    click: () => this.deleteSelection(),\n                    enabled: this.instancesSelection.hasSelectedInstances(),\n                  },\n                ]}\n              />\n            </React.Fragment>\n          )}\n        </I18n>\n      </div>\n    );\n  }\n}\n","// @flow\nimport ViewPosition from './ViewPosition';\n\nexport const shouldBeHandledByPinch = (event: ?TouchEvent) => {\n  if (!event) return false;\n\n  const { targetTouches } = event;\n  return targetTouches && targetTouches.length >= 2;\n};\n\ntype PinchDetectorArgs = {|\n  canvas: HTMLCanvasElement,\n  onPinchStart: () => void,\n  onPinchMove: (x: number, y: number, scale: number) => void,\n  onPinchEnd: () => void,\n|};\n\n/**\n * Attach events to the canvas that will notify of a pinch at some position\n * and scaling associated with it.\n * Returns a function that can be called to remove these events.\n */\nconst registerCanvasPinchDetector = ({\n  canvas,\n  onPinchStart,\n  onPinchMove,\n  onPinchEnd,\n}: PinchDetectorArgs) => {\n  let lastPinch = null;\n\n  function start() {\n    canvas.addEventListener('touchmove', move);\n  }\n\n  function move(e: TouchEvent) {\n    if (!shouldBeHandledByPinch(e)) {\n      return;\n    }\n    var t = e.targetTouches;\n\n    var dx = t[0].clientX - t[1].clientX;\n    var dy = t[0].clientY - t[1].clientY;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    if (!lastPinch) {\n      lastPinch = {\n        p: {\n          distance: distance,\n          date: new Date(),\n        },\n      };\n      onPinchStart();\n      return;\n    }\n    var now = new Date();\n    var interval = now - lastPinch.p.date;\n    if (interval < 12) {\n      return;\n    }\n    const newCenter = {\n      x: (t[0].clientX + t[1].clientX) / 2,\n      y: (t[0].clientY + t[1].clientY) / 2,\n    };\n    const scaleChange = distance / lastPinch.p.distance;\n\n    onPinchMove(newCenter.x, newCenter.y, scaleChange);\n    lastPinch.p = {\n      distance: distance,\n      date: now,\n    };\n  }\n\n  function end(e: TouchEvent) {\n    canvas.removeEventListener('touchmove', move);\n    if (!lastPinch) {\n      return;\n    }\n\n    onPinchEnd();\n    lastPinch = null;\n  }\n\n  canvas.addEventListener('touchstart', start);\n  canvas.addEventListener('touchend', end);\n\n  function unregisterCanvasPinchDetector() {\n    canvas.removeEventListener('touchstart', start);\n    canvas.removeEventListener('touchmove', move);\n    canvas.removeEventListener('touchend', end);\n  }\n\n  return unregisterCanvasPinchDetector;\n};\n\ntype Props = {|\n  canvas: HTMLCanvasElement,\n  setZoomFactor: number => void,\n  getZoomFactor: () => number,\n  viewPosition: ViewPosition,\n|};\n\n/**\n * Handle pinch to zoom/move on the canvas, changing the zoom factor or view\n * position accordingly.\n */\nexport default class PinchHandler {\n  _lastPinchCenterX: number | null = null;\n  _lastPinchCenterY: number | null = null;\n  _setZoomFactor: number => void;\n  _getZoomFactor: () => number;\n  _viewPosition: ViewPosition;\n  _unregisterCanvasPinchDetector: () => void;\n\n  constructor({ canvas, setZoomFactor, getZoomFactor, viewPosition }: Props) {\n    this._setZoomFactor = setZoomFactor;\n    this._getZoomFactor = getZoomFactor;\n    this._viewPosition = viewPosition;\n    this._unregisterCanvasPinchDetector = registerCanvasPinchDetector({\n      canvas,\n      onPinchStart: this._startPinch,\n      onPinchMove: this._onPinchMove,\n      onPinchEnd: this._endPinch,\n    });\n  }\n\n  _startPinch = () => {\n    // Nothing to do\n  };\n\n  _onPinchMove = (centerX: number, centerY: number, scale: number) => {\n    if (this._lastPinchCenterX === null || this._lastPinchCenterY === null) {\n      this._lastPinchCenterX = centerX;\n      this._lastPinchCenterY = centerY;\n      return;\n    }\n\n    const deltaX = centerX - this._lastPinchCenterX;\n    const deltaY = centerY - this._lastPinchCenterY;\n    const sceneDeltaX = deltaX / this._getZoomFactor();\n    const sceneDeltaY = deltaY / this._getZoomFactor();\n    this._viewPosition.scrollBy(-sceneDeltaX, -sceneDeltaY);\n    this._lastPinchCenterX = centerX;\n    this._lastPinchCenterY = centerY;\n\n    this._setZoomFactor(this._getZoomFactor() * scale);\n  };\n\n  _endPinch = () => {\n    this._lastPinchCenterX = null;\n    this._lastPinchCenterY = null;\n  };\n\n  unmount = () => {\n    this._unregisterCanvasPinchDetector();\n  };\n}\n","// @flow\n\nexport const roundPosition = (\n  pos: number,\n  gridSize: number,\n  gridOffset: number\n) => {\n  if (gridSize <= 0) {\n    return Math.round(pos);\n  }\n  return Math.floor((pos - gridOffset) / gridSize) * gridSize + gridOffset;\n};\n","import { mapFor } from '../Utils/MapFor';\n\nexport default layersContainer =>\n  mapFor(0, layersContainer.getLayersCount(), i => {\n    return {\n      value: layersContainer.getLayerAt(i).getName(),\n      label: layersContainer.getLayerAt(i).getName() || 'Base layer',\n    };\n  });\n","// @flow\nimport * as React from 'react';\nimport Measure from 'react-measure';\n\nconst styles = {\n  flexContainer: { display: 'flex', flex: 1, position: 'relative' },\n};\n\ntype Props = {|\n  children: ({| width: number, height: number |}) => React.Node,\n|};\n\n/**\n * Take a component and pass the maximum size that the component can take\n * as width and height props.\n */\nexport const FullSizeMeasurer = ({ children }: Props) => (\n  <Measure bounds>\n    {({ contentRect, measureRef }) => (\n      <div style={styles.flexContainer} ref={measureRef}>\n        {!!contentRect &&\n          !!contentRect.bounds &&\n          children({\n            width: contentRect.bounds.width,\n            height: contentRect.bounds.height,\n          })}\n      </div>\n    )}\n  </Measure>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport SelectField from '../../../../UI/SelectField';\nimport SelectOption from '../../../../UI/SelectOption';\n\nimport Toggle from '../../../../UI/Toggle';\nimport { mapFor } from '../../../../Utils/MapFor';\nimport { getCurrentElements } from './SpriteObjectHelper';\nimport { ResponsiveLineStackLayout } from '../../../../UI/Layout';\n\ntype Props = {|\n  spriteObject: gdSpriteObject,\n\n  animationIndex: number,\n  directionIndex: number,\n  spriteIndex: number,\n\n  chooseAnimation: number => void,\n  chooseDirection: number => void,\n  chooseSprite: number => void,\n\n  sameForAllAnimations: boolean,\n  sameForAllSprites: boolean,\n\n  setSameForAllAnimations: boolean => void,\n  setSameForAllSprites: boolean => void,\n\n  setSameForAllAnimationsLabel: string,\n  setSameForAllSpritesLabel: string,\n|};\n\n/**\n * A component that displays selector to browse the animations/directions/sprite\n * of a Sprite object. Also have toggles so that the user can choose if the edited property\n * (typically, the points or the collision masks of the sprite) should be shared between\n * all sprites of an animation, or between all sprites of all animations of the object.\n */\nexport default class SpriteSelector extends React.Component<Props, void> {\n  render() {\n    const {\n      spriteObject,\n      animationIndex,\n      directionIndex,\n      spriteIndex,\n      sameForAllAnimations,\n      sameForAllSprites,\n      chooseAnimation,\n      chooseDirection,\n      chooseSprite,\n      setSameForAllAnimations,\n      setSameForAllSprites,\n      setSameForAllAnimationsLabel,\n      setSameForAllSpritesLabel,\n    } = this.props;\n\n    const {\n      hasValidAnimation,\n      animation,\n      hasValidDirection,\n      direction,\n    } = getCurrentElements(\n      spriteObject,\n      animationIndex,\n      directionIndex,\n      spriteIndex\n    );\n\n    return (\n      <React.Fragment>\n        <ResponsiveLineStackLayout>\n          <SelectField\n            fullWidth\n            floatingLabelText={<Trans>Animation</Trans>}\n            value={this.props.animationIndex}\n            onChange={(e, i, value: string) =>\n              chooseAnimation(parseInt(value, 10) || 0)\n            }\n          >\n            {mapFor(0, spriteObject.getAnimationsCount(), i => {\n              const animation = spriteObject.getAnimation(i);\n              return (\n                <SelectOption\n                  key={i}\n                  value={i}\n                  primaryText={t`Animation #${i} ${animation.getName()}`}\n                />\n              );\n            })}\n          </SelectField>\n          {hasValidAnimation && animation.getDirectionsCount() > 1 && (\n            <SelectField\n              fullWidth\n              floatingLabelText={<Trans>Direction</Trans>}\n              value={this.props.directionIndex}\n              onChange={(e, i, value: string) =>\n                chooseDirection(parseInt(value, 10) || 0)\n              }\n            >\n              {mapFor(0, animation.getDirectionsCount(), i => {\n                return (\n                  <SelectOption\n                    value={i}\n                    key={i}\n                    primaryText={t`Direction #${i}`}\n                  />\n                );\n              })}\n            </SelectField>\n          )}\n          {hasValidDirection && (\n            <SelectField\n              fullWidth\n              floatingLabelText={<Trans>Frame</Trans>}\n              value={this.props.spriteIndex}\n              onChange={(e, i, value: string) =>\n                chooseSprite(parseInt(value, 10) || 0)\n              }\n            >\n              {mapFor(0, direction.getSpritesCount(), i => {\n                return (\n                  <SelectOption\n                    value={i}\n                    key={i}\n                    primaryText={t`Frame #${i}`}\n                  />\n                );\n              })}\n            </SelectField>\n          )}\n        </ResponsiveLineStackLayout>\n        <Toggle\n          label={setSameForAllAnimationsLabel}\n          labelPosition=\"right\"\n          toggled={sameForAllAnimations}\n          onToggle={(e, checked) => setSameForAllAnimations(checked)}\n        />\n        <Toggle\n          label={setSameForAllSpritesLabel}\n          labelPosition=\"right\"\n          toggled={sameForAllSprites}\n          onToggle={(e, checked) => setSameForAllSprites(checked)}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport React from 'react';\nimport {\n  type RenderEditorContainerProps,\n  type RenderEditorContainerPropsWithRef,\n} from './BaseEditor';\nimport ResourcesEditor from '../../ResourcesEditor';\n\nexport class ResourcesEditorContainer extends React.Component<RenderEditorContainerProps> {\n  editor: ?ResourcesEditor;\n\n  shouldComponentUpdate(nextProps: RenderEditorContainerProps) {\n    // Prevent any update to the editor if the editor is not active,\n    // and so not visible to the user.\n    return nextProps.isActive;\n  }\n\n  getProject(): ?gdProject {\n    return this.props.project;\n  }\n\n  getLayout(): ?gdLayout {\n    return null;\n  }\n\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  forceUpdateEditor() {\n    // No updates to be done.\n  }\n\n  render() {\n    const { project } = this.props;\n    if (!project) return null;\n\n    return (\n      <ResourcesEditor\n        setToolbar={this.props.setToolbar}\n        onDeleteResource={this.props.onDeleteResource}\n        onRenameResource={this.props.onRenameResource}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        ref={editor => (this.editor = editor)}\n        project={project}\n      />\n    );\n  }\n}\n\nexport const renderResourcesEditorContainer = (\n  props: RenderEditorContainerPropsWithRef\n) => <ResourcesEditorContainer {...props} />;\n","// @flow\nimport * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Spacer } from './Grid';\n\n// We support a subset of the props supported by Material-UI v0.x RaisedButton\n// They should be self descriptive - refer to Material UI docs otherwise.\nexport type RaisedButtonPropsWithoutOnClick = {|\n  label?: React.Node,\n  primary?: boolean,\n  disabled?: boolean,\n  fullWidth?: boolean,\n  icon?: React.Node,\n  style?: {|\n    marginTop?: number,\n    marginBottom?: number,\n    marginLeft?: number,\n    marginRight?: number,\n    margin?: number,\n    flexShrink?: 0,\n  |},\n|};\n\ntype Props = {|\n  ...RaisedButtonPropsWithoutOnClick,\n  onClick: ?() => void,\n|};\n\n/**\n * A raised button based on Material-UI button.\n */\nexport default class RaisedButton extends React.Component<Props, {||}> {\n  render() {\n    const { label, primary, icon, ...otherProps } = this.props;\n\n    // In theory, focus ripple is only shown after a keyboard interaction\n    // (see https://github.com/mui-org/material-ui/issues/12067). However, as\n    // it's important to get focus right in the whole app, make the ripple\n    // always visible to be sure we're getting focusing right.\n    const focusRipple = true;\n\n    return (\n      <Button\n        variant=\"contained\"\n        size=\"small\"\n        color={primary ? 'primary' : 'default'}\n        focusRipple={focusRipple}\n        {...otherProps}\n      >\n        {icon}\n        {icon && <Spacer />}\n        {label}\n      </Button>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport SceneEditor from '../../SceneEditor';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../../Utils/Serializer';\nimport {\n  type RenderEditorContainerProps,\n  type RenderEditorContainerPropsWithRef,\n} from './BaseEditor';\n\nexport class SceneEditorContainer extends React.Component<RenderEditorContainerProps> {\n  editor: ?SceneEditor;\n\n  getProject(): ?gdProject {\n    return this.props.project;\n  }\n\n  shouldComponentUpdate(nextProps: RenderEditorContainerProps) {\n    // This optimization is a bit more cautious than the traditional one, to still allow\n    // children, and in particular SceneEditor and InstancesEditor, to be notified when isActive\n    // goes from true to false (in which case PIXI rendering is halted). If isActive was false\n    // and remains false, it's safe to stop update here (PIXI rendering is already halted).\n    if (!this.props.isActive && !nextProps.isActive) {\n      return false;\n    }\n\n    return true;\n  }\n\n  componentDidMount() {\n    if (this.props.isActive) {\n      const { projectItemName } = this.props;\n      this.props.setPreviewedLayout(projectItemName);\n    }\n  }\n\n  componentDidUpdate(prevProps: RenderEditorContainerProps) {\n    if (!prevProps.isActive && this.props.isActive) {\n      const { projectItemName } = this.props;\n      this.props.setPreviewedLayout(projectItemName);\n    }\n  }\n\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  forceUpdateEditor() {\n    if (this.editor) this.editor.forceUpdateObjectsList();\n  }\n\n  getLayout(): ?gdLayout {\n    const { project, projectItemName } = this.props;\n    if (\n      !project ||\n      !projectItemName ||\n      !project.hasLayoutNamed(projectItemName)\n    )\n      return null;\n\n    return project.getLayout(projectItemName);\n  }\n\n  saveUiSettings = () => {\n    const layout = this.getLayout();\n    const editor = this.editor;\n\n    if (editor && layout) {\n      unserializeFromJSObject(\n        layout.getAssociatedSettings(),\n        editor.getUiSettings()\n      );\n    }\n  };\n\n  render() {\n    const { project, projectItemName, isActive } = this.props;\n    const layout = this.getLayout();\n    if (!layout || !project) {\n      //TODO: Error component\n      return <div>No layout called {projectItemName} found!</div>;\n    }\n\n    return (\n      <SceneEditor\n        setToolbar={this.props.setToolbar}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        unsavedChanges={this.props.unsavedChanges}\n        ref={editor => (this.editor = editor)}\n        project={project}\n        layout={layout}\n        initialInstances={layout.getInitialInstances()}\n        initialUiSettings={serializeToJSObject(layout.getAssociatedSettings())}\n        isActive={isActive}\n        hotReloadPreviewButtonProps={this.props.hotReloadPreviewButtonProps}\n      />\n    );\n  }\n}\n\nexport const renderSceneEditorContainer = (\n  props: RenderEditorContainerPropsWithRef\n) => <SceneEditorContainer {...props} />;\n","// @flow\n\nexport const timeFunction = (fn: Function, onResult: number => void) => {\n  var t0 = performance.now();\n  fn();\n  var t1 = performance.now();\n  onResult(t1 - t0);\n};\n\nexport const timePromise = <T>(\n  promiseFn: () => Promise<T>,\n  onResult: number => void\n): Promise<T> => {\n  const t0 = performance.now();\n  return promiseFn().then(result => {\n    const t1 = performance.now();\n    onResult(t1 - t0);\n\n    return result;\n  });\n};\n","// @flow\nimport { type I18n } from '@lingui/core';\n\ntype TranslationFunction = (string => string) | null;\ntype NotNullTranslationFunction = string => string;\n\n/**\n * Given the i18n object, return the function that can be used\n * to translate strings. Useful for wiring i18n to extensions\n * and libGD.js, where translations is done with a simple string\n * to string function.\n */\nexport const getTranslationFunction = (i18n: ?I18n): TranslationFunction => {\n  const i18nModule = i18n; // Make flow happy, ensure i18nModule is const.\n  if (i18nModule) {\n    return (str: string) => i18nModule._(str);\n  }\n\n  return null;\n};\n\n/**\n * Given the i18n object, return the function that can be used\n * to translate strings. Useful for wiring i18n to extensions\n * and libGD.js, where translations is done with a simple string\n * to string function.\n */\nexport const getNotNullTranslationFunction = (\n  i18n: ?I18n\n): NotNullTranslationFunction => {\n  const i18nModule = i18n; // Make flow happy, ensure i18nModule is const.\n  if (i18nModule) {\n    return (str: string) => i18nModule._(str);\n  }\n\n  return (str: string) => str;\n};\n","// @flow\nconst fuzzyFilter = (searchText: string, key: string) => {\n  const compareString = key.toLowerCase();\n  searchText = searchText.toLowerCase();\n\n  let searchTextIndex = 0;\n  for (let index = 0; index < key.length; index++) {\n    if (compareString[index] === searchText[searchTextIndex]) {\n      searchTextIndex += 1;\n    }\n  }\n\n  return searchTextIndex === searchText.length;\n};\n\n/**\n * A fuzzy filter that still return true if the key is empty.\n */\nexport const fuzzyOrEmptyFilter = (searchText: string, key: string) => {\n  return !key || fuzzyFilter(searchText, key);\n};\n","//@flow\nexport const delay = (ms: number): Promise<void> =>\n  new Promise(res => setTimeout(res, ms));\n","// @flow\nimport * as React from 'react';\nimport { type FiltersState, useFilters } from '../UI/Search/FiltersChooser';\nimport { type Filters } from '../Utils/GDevelopServices/Types.flow';\nimport {\n  listAllShowcasedGames,\n  type AllShowcasedGames,\n  type ShowcasedGame,\n} from '../Utils/GDevelopServices/Game';\nimport { useSearchItem } from '../UI/Search/UseSearchItem';\n\nconst defaultSearchText = '';\n\ntype GamesShowcaseState = {|\n  filters: ?Filters,\n  searchResults: ?Array<ShowcasedGame>,\n  fetchShowcasedGamesAndFilters: () => void,\n  error: ?Error,\n  searchText: string,\n  setSearchText: string => void,\n  filtersState: FiltersState,\n|};\n\nexport const GamesShowcaseContext = React.createContext<GamesShowcaseState>({\n  filters: null,\n  searchResults: null,\n  fetchShowcasedGamesAndFilters: () => {},\n  error: null,\n  searchText: '',\n  setSearchText: () => {},\n  filtersState: {\n    chosenFilters: new Set(),\n    addFilter: () => {},\n    removeFilter: () => {},\n    chosenCategory: null,\n    setChosenCategory: () => {},\n  },\n});\n\ntype GamesShowcaseStateProviderProps = {|\n  children: React.Node,\n|};\n\nconst getShowcasedGameSearchTerms = (showcasedGame: ShowcasedGame) => {\n  return (\n    showcasedGame.title +\n    '\\n' +\n    showcasedGame.author +\n    '\\n' +\n    showcasedGame.description +\n    '\\n' +\n    showcasedGame.tags.join(',')\n  );\n};\n\nexport const GamesShowcaseStateProvider = ({\n  children,\n}: GamesShowcaseStateProviderProps) => {\n  const [showcasedGamesByName, setShowcasedGamesByName] = React.useState<?{\n    [string]: ShowcasedGame,\n  }>(null);\n  const [filters, setFilters] = React.useState<?Filters>(null);\n  const [error, setError] = React.useState<?Error>(null);\n  const isLoading = React.useRef<boolean>(false);\n\n  const [searchText, setSearchText] = React.useState(defaultSearchText);\n  const filtersState = useFilters();\n\n  const fetchShowcasedGamesAndFilters = React.useCallback(\n    () => {\n      // Don't attempt to load again games and filters if they\n      // were loaded already.\n      if (showcasedGamesByName || isLoading.current) return;\n\n      (async () => {\n        setError(null);\n        isLoading.current = true;\n\n        try {\n          const allShowcasedGames: AllShowcasedGames = await listAllShowcasedGames();\n          const { showcasedGames, filters } = allShowcasedGames;\n\n          const showcasedGamesByName = {};\n          showcasedGames.forEach(showcasedGame => {\n            showcasedGamesByName[showcasedGame.title] = showcasedGame;\n          });\n\n          console.info(\n            `Loaded ${showcasedGames.length} games from the games showcase.`\n          );\n          setShowcasedGamesByName(showcasedGamesByName);\n          setFilters(filters);\n        } catch (error) {\n          console.error(\n            `Unable to load the games from the games showcase:`,\n            error\n          );\n          setError(error);\n        }\n\n        isLoading.current = false;\n      })();\n    },\n    [showcasedGamesByName, isLoading]\n  );\n\n  const { chosenCategory, chosenFilters } = filtersState;\n  const searchResults: ?Array<ShowcasedGame> = useSearchItem(\n    showcasedGamesByName,\n    getShowcasedGameSearchTerms,\n    searchText,\n    chosenCategory,\n    chosenFilters\n  );\n\n  const gamesShowcaseState = React.useMemo(\n    () => ({\n      searchResults,\n      fetchShowcasedGamesAndFilters,\n      filters,\n      error,\n      searchText,\n      setSearchText,\n      filtersState,\n    }),\n    [\n      searchResults,\n      error,\n      filters,\n      searchText,\n      filtersState,\n      fetchShowcasedGamesAndFilters,\n    ]\n  );\n\n  return (\n    <GamesShowcaseContext.Provider value={gamesShowcaseState}>\n      {children}\n    </GamesShowcaseContext.Provider>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { ResponsiveWindowMeasurer } from '../Reponsive/ResponsiveWindowMeasurer';\nimport classNames from 'classnames';\n\nconst styles = {\n  defaultBody: {\n    overflowX: 'hidden',\n  },\n  noMarginBody: {\n    padding: 0,\n    overflowX: 'hidden',\n  },\n  flexRowBody: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  flexBody: {\n    display: 'flex',\n  },\n  actionsContainerWithSecondaryActions: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  noTitleMargin: {\n    padding: 0,\n  },\n};\n\n// We support a subset of the props supported by Material-UI v0.x Dialog\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  open?: boolean,\n  title?: React.Node,\n  actions?: React.Node,\n  secondaryActions?: React.Node,\n  onRequestClose?: () => void,\n\n  cannotBeDismissed?: boolean, //Force the user to use one of the actions in the Dialog. If true, the dialog can't be closed by clicking outside or pressing Escape.\n\n  children: React.Node, // The content of the dialog\n\n  // Display:\n  flexRowBody?: boolean, //Check if necessary\n  flexBody?: boolean,\n\n  // Size\n  maxWidth?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | false,\n  fullHeight?: boolean,\n\n  // Style:\n  noMargin?: boolean,\n  noTitleMargin?: boolean,\n|};\n\n// Help Flow to understand the type of the dialog content style.\ntype DialogContentStyle = {\n  padding?: 0,\n  overflowX?: 'hidden',\n  display?: 'flex',\n  flexDirection?: 'row',\n};\n\n/**\n * A enhanced material-ui Dialog that can have optional secondary actions\n * and no margins if required.\n */\nexport default (props: Props) => {\n  const {\n    secondaryActions,\n    actions,\n    open,\n    onRequestClose,\n    maxWidth,\n    noMargin,\n    title,\n    children,\n    flexRowBody,\n    flexBody,\n    fullHeight,\n    noTitleMargin,\n  } = props;\n  const dialogActions = secondaryActions ? (\n    <React.Fragment>\n      <div key=\"secondary-actions\">{secondaryActions}</div>\n      <div key=\"actions\">{actions}</div>\n    </React.Fragment>\n  ) : (\n    actions\n  );\n  const dialogContentStyle: DialogContentStyle = {\n    ...(noMargin ? styles.noMarginBody : styles.defaultBody),\n    ...((flexRowBody ? styles.flexRowBody : {}): DialogContentStyle),\n    ...((flexBody ? styles.flexBody : {}): DialogContentStyle),\n  };\n\n  return (\n    <ResponsiveWindowMeasurer>\n      {size => (\n        <Dialog\n          open={open}\n          onClose={onRequestClose}\n          fullWidth\n          fullScreen={size === 'small'}\n          className={classNames({\n            'safe-area-aware-container': size === 'small',\n            'full-height-modal': fullHeight,\n          })}\n          maxWidth={maxWidth !== undefined ? maxWidth : 'md'}\n          disableBackdropClick={false}\n          disableEscapeKeyDown={false}\n        >\n          {title && (\n            <DialogTitle\n              style={noTitleMargin ? styles.noTitleMargin : undefined}\n            >\n              {title}\n            </DialogTitle>\n          )}\n          <DialogContent style={dialogContentStyle}>{children}</DialogContent>\n          <DialogActions\n            style={\n              secondaryActions\n                ? styles.actionsContainerWithSecondaryActions\n                : undefined\n            }\n          >\n            {dialogActions}\n          </DialogActions>\n        </Dialog>\n      )}\n    </ResponsiveWindowMeasurer>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Column, Line } from '../UI/Grid';\nimport { List, ListItem } from '../UI/List';\nimport Text from '../UI/Text';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport ExamplesSearchbar from './ExamplesSearchbar';\nimport ExamplesInformation from './ExamplesInformation';\nimport Window from '../Utils/Window';\nimport { fuzzyOrEmptyFilter } from '../Utils/FuzzyOrEmptyFilter';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\n\ntype ExtensionUsage = Array<{\n  fullName: string,\n  name: string,\n}>;\n\ntype ExampleInformation = {|\n  description: string,\n  usedExtensions: ExtensionUsage,\n|};\n\ntype SearchEnhancedExampleInformation = {|\n  ...ExampleInformation,\n  searchableDescription: string,\n|};\n\ntype Props = {|\n  exampleNames: ?Array<string>,\n  onCreateFromExample: string => void,\n|};\n\ntype State = {|\n  searchText: string,\n  chosenExtensionName: string,\n|};\n\nconst searchableExamplesInformation: {\n  [string]: SearchEnhancedExampleInformation,\n} = {};\nObject.keys(ExamplesInformation).forEach(exampleName => {\n  const exampleInformation = ExamplesInformation[exampleName];\n  searchableExamplesInformation[exampleName] = {\n    ...exampleInformation,\n    searchableDescription: exampleInformation.description\n      .replace(/ /g, '')\n      .toLowerCase(),\n  };\n});\n\nconst formatExampleName = (name: string) => {\n  if (!name.length) return '';\n\n  return name[0].toUpperCase() + name.substr(1).replace(/-/g, ' ');\n};\n\nconst getExampleInformation = (\n  name: string\n): SearchEnhancedExampleInformation => {\n  return (\n    searchableExamplesInformation[name] || {\n      description: '',\n      searchableDescription: '',\n      usedExtensions: [],\n    }\n  );\n};\n\nconst isUsingExtension = (\n  extensionUsage: ?ExtensionUsage,\n  extensionName: string\n) => {\n  return (\n    !extensionName ||\n    (extensionUsage &&\n      !!extensionUsage.find(usage => usage.name === extensionName))\n  );\n};\n\nexport default class LocalExamples extends React.Component<Props, State> {\n  state = {\n    searchText: '',\n    chosenExtensionName: '',\n  };\n\n  changeSearchText = (searchText: string) => {\n    this.setState({\n      searchText,\n      chosenExtensionName: '',\n    });\n  };\n\n  chooseExtensionName = (chosenExtensionName: string) => {\n    this.setState({\n      searchText: '',\n      chosenExtensionName,\n    });\n  };\n\n  _submitExample() {\n    const body = `Hi!\n\n  I'd like to submit a new example to be added to GDevelop.\n  Here is the link to download it: **INSERT the link to your game here, or add it as an attachment**.\n\n  I confirm that any assets can be used freely by anybody, including for commercial usage.\n  `;\n    Window.openExternalURL(\n      `https://github.com/4ian/GDevelop/issues/new?body=${encodeURIComponent(\n        body\n      )}&title=New%20example`\n    );\n  }\n\n  render() {\n    const { searchText, chosenExtensionName } = this.state;\n    const lowercaseSearchText = searchText.toLowerCase();\n\n    return (\n      <Column noMargin>\n        <Line noMargin>\n          <ExamplesSearchbar\n            value={searchText}\n            onChange={this.changeSearchText}\n            chosenExtensionName={chosenExtensionName}\n            onExtensionNameChosen={this.chooseExtensionName}\n          />\n        </Line>\n        <Line noMargin>\n          <Column expand noMargin>\n            <List>\n              {this.props.exampleNames &&\n                this.props.exampleNames.map(exampleName => {\n                  const exampleFullName = formatExampleName(exampleName);\n                  const exampleInformation = getExampleInformation(exampleName);\n                  if (\n                    (searchText &&\n                      (!fuzzyOrEmptyFilter(searchText, exampleFullName) &&\n                        exampleInformation.searchableDescription.indexOf(\n                          lowercaseSearchText\n                        ) === -1)) ||\n                    !isUsingExtension(\n                      exampleInformation.usedExtensions,\n                      chosenExtensionName\n                    )\n                  ) {\n                    return null;\n                  }\n\n                  return (\n                    <ListItem\n                      key={exampleName}\n                      primaryText={exampleFullName}\n                      secondaryText={exampleInformation.description}\n                      secondaryTextLines={2}\n                      onClick={() =>\n                        this.props.onCreateFromExample(exampleName)\n                      }\n                    />\n                  );\n                })}\n              {!this.props.exampleNames && <PlaceholderLoader />}\n            </List>\n            {!!electron && (\n              <Column expand>\n                <Text>\n                  <Trans>Want to contribute to the examples?</Trans>\n                </Text>\n                <Line alignItems=\"center\" justifyContent=\"center\">\n                  <RaisedButton\n                    label={<Trans>Submit your example</Trans>}\n                    onClick={this._submitExample}\n                  />\n                </Line>\n              </Column>\n            )}\n          </Column>\n        </Line>\n      </Column>\n    );\n  }\n}\n","// This file is generated by update-examples-information-from-resources-examples.js script\n// prettier-ignore\nmodule.exports = {\n  \"admob\": {\n    \"description\": \"Demonstrate how to show ads from AdMob in your game: banners, interstitial screen or reward videos. Also useful to test that your AdMob account is working properly.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"AdMob\",\n        \"name\": \"AdMob\"\n      }\n    ]\n  },\n  \"advanced-shape-based-painter\": {\n    \"description\": \"Show how to use Shape Painter objects to create a simple drawing app.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Shape painter\",\n        \"name\": \"PrimitiveDrawing\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"animation-speed-scale\": {\n    \"description\": \"Change the speed of the animation of an object according to its movement speed.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      }\n    ]\n  },\n  \"asteroids\": {\n    \"description\": \"An adptation of the classic arcade game Asteroids with GDevelop.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Destroy Outside Screen Behavior\",\n        \"name\": \"DestroyOutsideBehavior\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"basic-ai-with-pathfinding\": {\n    \"description\": \"Show how to use pathfinding to make enemies chase the player.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Pathfinding behavior\",\n        \"name\": \"PathfindingBehavior\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Linked objects\",\n        \"name\": \"LinkedObjects\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      }\n    ]\n  },\n  \"basic-artificial-intelligence\": {\n    \"description\": \"Show how to create enemies looking at the player and chasing him when spotted.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Linked objects\",\n        \"name\": \"LinkedObjects\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      }\n    ]\n  },\n  \"basic-topdown-car-driving\": {\n    \"description\": \"Show how to create a car that can be controlled by the player.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"bbtext-object-demo\": {\n    \"description\": \"This shows how to change the bbcode text of a BBText object displayed on the screen.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"BBCode Text Object\",\n        \"name\": \"BBText\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"betabox-basics-learning-experience\": {\n    \"description\": \"Example level for teaching basic programming skills with extra features and assets.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Panel Sprite (9-patch) Object\",\n        \"name\": \"PanelSpriteObject\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Particle system\",\n        \"name\": \"ParticleSystem\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Destroy Outside Screen Behavior\",\n        \"name\": \"DestroyOutsideBehavior\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Anchor\",\n        \"name\": \"AnchorBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      }\n    ]\n  },\n  \"board-walk-with-raycast\": {\n    \"description\": \"Example showing how to walk on a tile-based arbitrary board using the Raycast condition.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Linked objects\",\n        \"name\": \"LinkedObjects\"\n      }\n    ]\n  },\n  \"bomb-the-crate\": {\n    \"description\": \"A basic bomberman like game, where the player can move on the map, drop bombs and destroy crates on the map.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"bouncing-ball-and-rope\": {\n    \"description\": \"Simulate a bouncing ball with ropes that can be created to move the ball around anchors.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Shape painter\",\n        \"name\": \"PrimitiveDrawing\"\n      },\n      {\n        \"fullName\": \"Panel Sprite (9-patch) Object\",\n        \"name\": \"PanelSpriteObject\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Linked objects\",\n        \"name\": \"LinkedObjects\"\n      }\n    ]\n  },\n  \"breakout\": {\n    \"description\": \"The classic Breakout arcade game adapted in GDevelop. Read the tutorial about it to learn how to make a game like this.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Particle system\",\n        \"name\": \"ParticleSystem\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"External layouts\",\n        \"name\": \"BuiltinExternalLayouts\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      }\n    ]\n  },\n  \"buttons\": {\n    \"description\": \"Learn how to make buttons for the menus in your game.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      }\n    ]\n  },\n  \"cannon-ball-with-physics\": {\n    \"description\": \"An example showing how to launch a ball from a cannon when using the Physics engine.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Storage\",\n        \"name\": \"BuiltinFile\"\n      }\n    ]\n  },\n  \"car-physics\": {\n    \"description\": \"A fun, physics based driving game\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"center-object-within-another\": {\n    \"description\": \"How to put an object on the center of another\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"change-position-of-object\": {\n    \"description\": \"Show how to move an object by changing its X and Y position.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"change-scale-of-sprites\": {\n    \"description\": \"Show how to change the scale of a sprite (to make a zoom effect for example).\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"change-sprite-animation\": {\n    \"description\": \"Learn how to change the animation of a Sprite object (useful for animating almost all objects in your game: characters, enemies, items...)\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"change-sprite-color\": {\n    \"description\": \"Learn how to change the color of a Sprite object - useful to achieve effects like invincibility with a blue tint or taking damage with a red effect. \",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Destroy Outside Screen Behavior\",\n        \"name\": \"DestroyOutsideBehavior\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"character-selection\": {\n    \"description\": \"Example showing how to remember the character selected by the player and use it in other scenes.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Anchor\",\n        \"name\": \"AnchorBehavior\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"count-down-timer\": {\n    \"description\": \"Show how to use a variable as a timer and display it on screen like a bomb count down timer.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"create-object-with-mouseclick\": {\n    \"description\": \"Show how to create an object at the position of the click.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"create-random-object\": {\n    \"description\": \"Show how to create a object randomly picked in a list.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"custom-font\": {\n    \"description\": \"Example showing a text with a custom font applied on it.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      }\n    ]\n  },\n  \"custom-mouse-pointer\": {\n    \"description\": \"Learn how to replace the mouse cursor by a custom image.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"customize-keys-with-lastpressedkey\": {\n    \"description\": \"This explains how to remember the last key that was pressed and customize the inputs of your game.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"device-orientation-ballgame\": {\n    \"description\": \"Example showing how to use the device sensors to move a ball in a maze.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Device sensors\",\n        \"name\": \"DeviceSensors\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"device-orientation-compass\": {\n    \"description\": \"This shows how to use the device sensors to create a compass like app.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Device sensors\",\n        \"name\": \"DeviceSensors\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"device-vibration\": {\n    \"description\": \"Show how to make the device vibrate.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Device vibration\",\n        \"name\": \"DeviceVibration\"\n      }\n    ]\n  },\n  \"dialogue-tree-with-yarn\": {\n    \"description\": \"A platformer showing a simple interactive story with dialogues like in RPG games, using the Yarn dialogue tree extension.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Panel Sprite (9-patch) Object\",\n        \"name\": \"PanelSpriteObject\"\n      },\n      {\n        \"fullName\": \"BBCode Text Object\",\n        \"name\": \"BBText\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Anchor\",\n        \"name\": \"AnchorBehavior\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Dialogue Tree (Experimental)\",\n        \"name\": \"DialogueTree\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"downhill-bike-physics-demo\": {\n    \"description\": \"A fun demo, using the Physics Engine to build an advanced simulation of a bike, with a person pedaling on it. Try to cross the finish line without falling and as fast as possible!\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Panel Sprite (9-patch) Object\",\n        \"name\": \"PanelSpriteObject\"\n      },\n      {\n        \"fullName\": \"Shape painter\",\n        \"name\": \"PrimitiveDrawing\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Advanced control features\",\n        \"name\": \"BuiltinAdvanced\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Window features\",\n        \"name\": \"BuiltinWindow\"\n      },\n      {\n        \"fullName\": \"Device vibration\",\n        \"name\": \"DeviceVibration\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      }\n    ]\n  },\n  \"drag-camera-with-mouse\": {\n    \"description\": \"This shows how to allow the user to move on a map with the mouse.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"drop-collect-items-from-storage\": {\n    \"description\": \"Show how to make the player collect objects from boxes on the map.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      }\n    ]\n  },\n  \"endless-up-runner\": {\n    \"description\": \"A game where the player have to jump on platforms and avoid falling down as the screen goes up. With special objects (spring, rocks), score and Game Over handling!\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      }\n    ]\n  },\n  \"exit-app\": {\n    \"description\": \"Simple example showing how to close your game.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      }\n    ]\n  },\n  \"facebook-instant-game\": {\n    \"description\": \"Learn how to use the various Facebook Instant Games APIs to get information about the player, share their scores and have a leaderboard!\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Facebook Instant Games\",\n        \"name\": \"FacebookInstantGames\"\n      }\n    ]\n  },\n  \"filesystem-create-directory\": {\n    \"description\": \"Show how to ask the user for a folder name and create it on the disk.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Text entry object\",\n        \"name\": \"TextEntryObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Filesystem\",\n        \"name\": \"FileSystem\"\n      }\n    ]\n  },\n  \"find-diagonals\": {\n    \"description\": \"Show how to delete objects that are located at the diagonals of the click of the player in a board game.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"firebase-example\": {\n    \"description\": \"A twitter-like social network called \\\"Not Twitter\\\" using Firestore, and showcase of some other features of Firebase.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Firebase\",\n        \"name\": \"Firebase\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Text entry object\",\n        \"name\": \"TextEntryObject\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      }\n    ]\n  },\n  \"flappy-bird\": {\n    \"description\": \"A clone of the challenging and popular Flappy Bird game, where you control a bird which has to avoid pipes.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Storage\",\n        \"name\": \"BuiltinFile\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Destroy Outside Screen Behavior\",\n        \"name\": \"DestroyOutsideBehavior\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      }\n    ]\n  },\n  \"game-feel-demo\": {\n    \"description\": \"A demo showing how to enhance the \\\"game feel\\\" of your project: VFX, shot trail, ambient sounds and SFX, screenshake, wobble...\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Linked objects\",\n        \"name\": \"LinkedObjects\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      }\n    ]\n  },\n  \"geodash\": {\n    \"description\": \"A fast paced game where you must jump and avoid obstacles.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Panel Sprite (9-patch) Object\",\n        \"name\": \"PanelSpriteObject\"\n      },\n      {\n        \"fullName\": \"Particle system\",\n        \"name\": \"ParticleSystem\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      }\n    ]\n  },\n  \"geometry-monster\": {\n    \"description\": \"A hyper casual endless game where you have to collect shapes and avoid bombs, with a progressively increasing difficulty.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Particle system\",\n        \"name\": \"ParticleSystem\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"health-bar\": {\n    \"description\": \"The platform example game adapted to add a health bar to the player, that is decreased when the player touches an enemy.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Anchor\",\n        \"name\": \"AnchorBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      }\n    ]\n  },\n  \"infinite-scrolling-background\": {\n    \"description\": \"Learn how to create a background that is scolling infinitely.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"inventory-system\": {\n    \"description\": \"Learn how to display an inventory, with object that can be addded or removed, and how to persist it in storage.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Inventory\",\n        \"name\": \"Inventory\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Linked objects\",\n        \"name\": \"LinkedObjects\"\n      },\n      {\n        \"fullName\": \"Storage\",\n        \"name\": \"BuiltinFile\"\n      }\n    ]\n  },\n  \"isometric-game\": {\n    \"description\": \"Example of making an isometric 2D game.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Top-down movement\",\n        \"name\": \"TopDownMovementBehavior\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"javascript-blocks-in-platformer\": {\n    \"description\": \"This shows how to reproduce the Platformer example using JavaScript code instead of events.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Anchor\",\n        \"name\": \"AnchorBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"keyboard-practice\": {\n    \"description\": \"A simple game where the player must press the right keys on the keyboard as fast as possible.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"layer-effects\": {\n    \"description\": \"An example showing all the layer effects available in GDevelop.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Storage\",\n        \"name\": \"BuiltinFile\"\n      }\n    ]\n  },\n  \"level-editor\": {\n    \"description\": \"Example showing a basic level editor, where you can save and load positions of objects put on the scene during the game. Also shows how to use simple functions.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Shape painter\",\n        \"name\": \"PrimitiveDrawing\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Storage\",\n        \"name\": \"BuiltinFile\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      }\n    ]\n  },\n  \"level-selection-unlock\": {\n    \"description\": \"Show how to save user progress and progressively unlock levels.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Storage\",\n        \"name\": \"BuiltinFile\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"lights\": {\n    \"description\": \"Example showing the usage of multiple light objects, setting other objects as light obstacles and using a slight blur effect to soften shadows.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Lights\",\n        \"name\": \"Lighting\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      }\n    ]\n  },\n  \"load-image-from-url\": {\n    \"description\": \"Advanced example showing how to use JavaScript to load an image from an external URL.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"magnet\": {\n    \"description\": \"Show how to move a ball like if it's attracted by a magnet.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Linked objects\",\n        \"name\": \"LinkedObjects\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"manipulate-text-object\": {\n    \"description\": \"This shows how to change the text of a Text object displayed on the screen.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"menu-with-functions-and-text-effects\": {\n    \"description\": \"How to implement the same menu across multiple scenes using functions and text effects for hover/active states.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      }\n    ]\n  },\n  \"move-camera-to-position\": {\n    \"description\": \"This shows how to move the camera to the position of an object on a map.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"move-object-back-and-forth\": {\n    \"description\": \"Use events to move objects back and forth vertically or horizontally.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      }\n    ]\n  },\n  \"move-object-in-circle\": {\n    \"description\": \"This shows how to make an object move in circle around some point.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"move-object-toward-position\": {\n    \"description\": \"This shows how to have an object move to a given position on the screen.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"move-object-with-mouse-joint\": {\n    \"description\": \"Show how to use physics engine to move an object around with the mouse and realistic movements.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"move-object-with-physics\": {\n    \"description\": \"This shows how to use the forces built in GDevelop to move an object.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"multi-language-menu\": {\n    \"description\": \"Show how to translate a menu (titles, buttons) in multiple languages and add an option for the player to choose the language.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Storage\",\n        \"name\": \"BuiltinFile\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      }\n    ]\n  },\n  \"multiplayer-platformer-with-gamepads\": {\n    \"description\": \"Example showing how to use the Gamepads extension to read the state of gamepads (or controllers), for 2 players.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Anchor\",\n        \"name\": \"AnchorBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      }\n    ]\n  },\n  \"multitouch\": {\n    \"description\": \"This show how to create multiple markers when the player touches the screen.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"object-gravity\": {\n    \"description\": \"Use the physics engine to simulate an object moving on a small planet.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      }\n    ]\n  },\n  \"object-selection\": {\n    \"description\": \"Simple example showing how the engine of GDevelop select objects to be used in conditions and actions.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"objects-timers\": {\n    \"description\": \"Example showing various usage of objects timers (timers that are stored into instances of objects on the scene, as opposed to scene timers which are stored by the scene).\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      }\n    ]\n  },\n  \"open-url-in-browser\": {\n    \"description\": \"This shows how to open a website on the system default browser.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Storage\",\n        \"name\": \"BuiltinFile\"\n      }\n    ]\n  },\n  \"p2p-networking\": {\n    \"description\": \"A showcase of some multiplayer/networking possibilities using the P2P extension.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Text entry object\",\n        \"name\": \"TextEntryObject\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Peer-to-Peer communication (experimental)\",\n        \"name\": \"P2P\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"pairs\": {\n    \"description\": \"Find all matching pairs of cards in this relaxing game. Use tweens to create smooth, natural animations with a few events.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Particle system\",\n        \"name\": \"ParticleSystem\"\n      },\n      {\n        \"fullName\": \"Tweening\",\n        \"name\": \"Tween\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"parallax\": {\n    \"description\": \"Shows how to have multiple layers with a parallax effect (where the background layers move slower than the foreground).\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"parallax-scrolling\": {\n    \"description\": \"Another example showing how to have multiple layers with a parallax effect (where the background layers move slower than the foreground).\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"parse-json-from-api\": {\n    \"description\": \"Advanced example where JSON content is fetched from a website and information extracted from it.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Basic internet features\",\n        \"name\": \"BuiltinNetwork\"\n      }\n    ]\n  },\n  \"parse-json-string\": {\n    \"description\": \"Advanced example showing how to extract information from a JSON formatted string.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Basic internet features\",\n        \"name\": \"BuiltinNetwork\"\n      }\n    ]\n  },\n  \"particle-effects-demo\": {\n    \"description\": \"A demo of various high quality particle effects (fire, magic, snow, rune spell...) that you can try and use in your game.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Particle system\",\n        \"name\": \"ParticleSystem\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Tweening\",\n        \"name\": \"Tween\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Storage\",\n        \"name\": \"BuiltinFile\"\n      }\n    ]\n  },\n  \"particles-explosions\": {\n    \"description\": \"Create explosion effects with the particles engine.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Particle system\",\n        \"name\": \"ParticleSystem\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"particles-various-effects\": {\n    \"description\": \"Create various effects with the particles engine.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Particle system\",\n        \"name\": \"ParticleSystem\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"pathfinding\": {\n    \"description\": \"This show how to have an object moving from its position to another automatically avoiding obstacles.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Pathfinding behavior\",\n        \"name\": \"PathfindingBehavior\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"pathfinding-basics\": {\n    \"description\": \"Simpler example showing how to get started with Pathfinding, to have an object automatically find its way around obstacles.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Pathfinding behavior\",\n        \"name\": \"PathfindingBehavior\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"physics\": {\n    \"description\": \"Example showing various capabilities of the physics engine integrated to GDevelop.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"physics-joints-demo\": {\n    \"description\": \"A demo of all the joints that can be created using the Physics engine.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Shape painter\",\n        \"name\": \"PrimitiveDrawing\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"physics-joints-settings-demo\": {\n    \"description\": \"A demo of all the joints, and the way they can be customized, using the Physics engine.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Shape painter\",\n        \"name\": \"PrimitiveDrawing\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"pin-object-to-another\": {\n    \"description\": \"Example showing how to have objects \\\"pinned\\\" to another, meaning that they will move/rotate and follow the object they are pinned too.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"pin-object-to-another-multiple-parents\": {\n    \"description\": \"Example showing how to have objects \\\"pinned\\\" to multiple other objects, meaning that they will move/rotate and follow the object they are pinned too.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Linked objects\",\n        \"name\": \"LinkedObjects\"\n      }\n    ]\n  },\n  \"pixel-perfect-platform-game\": {\n    \"description\": \"Very simple example showing the settings to have a pixel-perfect platform game (also applicable to other kind of games).\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      }\n    ]\n  },\n  \"plane-and-clouds\": {\n    \"description\": \"Show how to randomly generate clouds to create an infinite sky.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Particle system\",\n        \"name\": \"ParticleSystem\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"platformer\": {\n    \"description\": \"An example of a basic platformer (Mario-like) game made with GDevelop.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Tweening\",\n        \"name\": \"Tween\"\n      },\n      {\n        \"fullName\": \"Anchor\",\n        \"name\": \"AnchorBehavior\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      }\n    ]\n  },\n  \"platformer-double-jump\": {\n    \"description\": \"The Platformer example modified to allow the player to do a double jump.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Anchor\",\n        \"name\": \"AnchorBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"platformer-with-tilemap\": {\n    \"description\": \"Shows how to create a platformer game with a Tilemap object for designing the level, and invisible objects to mark platforms and ladders.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Tilemap\",\n        \"name\": \"TileMap\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Window features\",\n        \"name\": \"BuiltinWindow\"\n      }\n    ]\n  },\n  \"play-music-on-mobile\": {\n    \"description\": \"This show how to properly launch a music on a game on mobile.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"play-stop-sprite-animation\": {\n    \"description\": \"This shows how to pause the animation of a Sprite object.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"procedural-generation\": {\n    \"description\": \"An example showing how to create a simple top down procedural generation system.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      }\n    ]\n  },\n  \"racing-game\": {\n    \"description\": \"A top-down racing game made using the Physics engine.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"ragdoll\": {\n    \"description\": \"Example of creating a ragdoll with physics joints.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Particle system\",\n        \"name\": \"ParticleSystem\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Advanced control features\",\n        \"name\": \"BuiltinAdvanced\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"rain\": {\n    \"description\": \"Show how to simulate a rain effect by creating several objects.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Destroy Outside Screen Behavior\",\n        \"name\": \"DestroyOutsideBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Window features\",\n        \"name\": \"BuiltinWindow\"\n      }\n    ]\n  },\n  \"random-color-picker\": {\n    \"description\": \"This shows how to create a grid with random color, and let the player choose one.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"rotate-toward-mouse\": {\n    \"description\": \"Show how to rotate an object so that it looks toward the player cursor.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"rotate-toward-position\": {\n    \"description\": \"Show how to rotate an object so that it looks toward a specified position on the scene.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"rotate-with-keypress\": {\n    \"description\": \"Basic example showing how to rotate an object.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"save-load\": {\n    \"description\": \"Advanced example showing how to persist data and then reload them from storage (useful to store game progress, or save the state of some objects in a game).\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Storage\",\n        \"name\": \"BuiltinFile\"\n      }\n    ]\n  },\n  \"screen-shake\": {\n    \"description\": \"Make the screen shake when some event occurs.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"shoot-bullet-in-parabola\": {\n    \"description\": \"Show how to use various mathematical expressions to move an object following a parabola shape\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      }\n    ]\n  },\n  \"shoot-bullets\": {\n    \"description\": \"Basic example showing how to shoot bullets from an object.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Destroy Outside Screen Behavior\",\n        \"name\": \"DestroyOutsideBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"shooting-bullets-explanation\": {\n    \"description\": \"Basic example showing how to shoot bullets from one or multiple objects at the same time.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Destroy Outside Screen Behavior\",\n        \"name\": \"DestroyOutsideBehavior\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"simple-space-shooter\": {\n    \"description\": \"An older, simple space shooter demo, made without any behaviors from extensions. Prefer taking a look at the Space Shooter starter to learn about useful behaviors and patterns for making your games.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Top-down movement\",\n        \"name\": \"TopDownMovementBehavior\"\n      },\n      {\n        \"fullName\": \"Destroy Outside Screen Behavior\",\n        \"name\": \"DestroyOutsideBehavior\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"snap-object-to-grid\": {\n    \"description\": \"Example showing how to create a grid and have objects snapped to the grid.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Shape painter\",\n        \"name\": \"PrimitiveDrawing\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Window features\",\n        \"name\": \"BuiltinWindow\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"space-invaders\": {\n    \"description\": \"A Space Invaders-like game, where you have a turret and shoot on enemies coming from the sky.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Destroy Outside Screen Behavior\",\n        \"name\": \"DestroyOutsideBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Window features\",\n        \"name\": \"BuiltinWindow\"\n      }\n    ]\n  },\n  \"space-shooter\": {\n    \"description\": \"A beautiful, retro side-scrolling shooter where you must defeat incoming enemies with your mecha transforming spaceship. Huge boss included!\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Panel Sprite (9-patch) Object\",\n        \"name\": \"PanelSpriteObject\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      },\n      {\n        \"fullName\": \"Top-down movement\",\n        \"name\": \"TopDownMovementBehavior\"\n      },\n      {\n        \"fullName\": \"Destroy Outside Screen Behavior\",\n        \"name\": \"DestroyOutsideBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"splash-screen\": {\n    \"description\": \"Show how to create a splashscreen at the beginning of your game.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"sprite-fade-in-out\": {\n    \"description\": \"This shows how to make a sprite fade in and out on the screen.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"tabbed-menu-with-layers\": {\n    \"description\": \"Example showing how to create a menu with multiple tabs.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tweening\",\n        \"name\": \"Tween\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"take-screenshot\": {\n    \"description\": \"Show how to save a screenshot of the game on the disk (on Windows/macOS/Linux only).\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Screenshot\",\n        \"name\": \"Screenshot\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"tetris-demo\": {\n    \"description\": \"A complete demo of a Tetris game, with all the concepts of modern Tetris such as SRS (Super Rotation System) and ghost piece, with high scores, music, sound effects.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Text entry object\",\n        \"name\": \"TextEntryObject\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"External layouts\",\n        \"name\": \"BuiltinExternalLayouts\"\n      },\n      {\n        \"fullName\": \"Storage\",\n        \"name\": \"BuiltinFile\"\n      },\n      {\n        \"fullName\": \"Filesystem\",\n        \"name\": \"FileSystem\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"text-entry-object\": {\n    \"description\": \"This shows how to use the Text Entry object to capture what is written on the keyboard.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text entry object\",\n        \"name\": \"TextEntryObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      }\n    ]\n  },\n  \"text-fade-in-out\": {\n    \"description\": \"This shows how to make a text fade in and out on the screen.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"text-to-speech\": {\n    \"description\": \"Advanced example showing how to use JavaScript and HTML5 api to make a text read by your computer.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text entry object\",\n        \"name\": \"TextEntryObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"tilemaps-made-with-tiled-editor\": {\n    \"description\": \"Shows different examples of Tilemaps made with the Tiled editor (that can be downloaded on mapeditor.org), including some with animations.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Tilemap\",\n        \"name\": \"TileMap\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      }\n    ]\n  },\n  \"toggle-music-play-sound\": {\n    \"description\": \"Example showing how to play a music and add controls on the screen to pause it, change the volume or mute the sounds totally.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"tween-animations\": {\n    \"description\": \"Examples of how to use a variety of tween animations, including object position, color, opacity, angle, and scale.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tweening\",\n        \"name\": \"Tween\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"tween-test\": {\n    \"description\": \"An example project that tests all Tween extension functionality.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tweening\",\n        \"name\": \"Tween\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Advanced control features\",\n        \"name\": \"BuiltinAdvanced\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      }\n    ]\n  },\n  \"type-on-text-effect\": {\n    \"description\": \"This show how to create an effect where a text is progressively typed on the screen.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"unlock-items\": {\n    \"description\": \"Show how to save the items unlocked by the user and load them later (when the game is launched again for example, or when starting a saved game).\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Storage\",\n        \"name\": \"BuiltinFile\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"video-player\": {\n    \"description\": \"An example of a complete video player with controls to play/pause, change the volume, jump to a position in the video...\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Video\",\n        \"name\": \"Video\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Tweening\",\n        \"name\": \"Tween\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Advanced control features\",\n        \"name\": \"BuiltinAdvanced\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      },\n      {\n        \"fullName\": \"Window features\",\n        \"name\": \"BuiltinWindow\"\n      }\n    ]\n  },\n  \"z-depth\": {\n    \"description\": \"Example where the player can move a character on a map, and the character is displayed behind or in front of other objects according to its position.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Builtin events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"zombie-laser\": {\n    \"description\": \"Simple game where the player must use his laser powered gun to destroy zombies running at him.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Shape painter\",\n        \"name\": \"PrimitiveDrawing\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Pathfinding behavior\",\n        \"name\": \"PathfindingBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Mouse and touch\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Features for all objects\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  }\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\nimport { Column, Line } from '../../UI/Grid';\n\nexport const ExplanationHeader = () => (\n  <Text>\n    <Trans>\n      This will export your game as a Cordova project. Cordova is a technology\n      that enables HTML5 games to be packaged for iOS and Android.\n    </Trans>\n  </Text>\n);\n\nexport const DoneFooter = ({\n  renderGameButton,\n}: {|\n  renderGameButton: () => React.Node,\n|}) => (\n  <Column noMargin>\n    <Text>\n      <Trans>\n        You can now compile the game by yourself using Cordova command-line tool\n        to iOS (XCode is required) or Android (Android SDK is required).\n      </Trans>\n    </Text>\n    <Line justifyContent=\"center\">{renderGameButton()}</Line>\n  </Column>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\nimport { Column, Line } from '../../UI/Grid';\n\nexport const ExplanationHeader = () => (\n  <Text>\n    <Trans>\n      This will export your game so that you can package it for Windows, macOS\n      or Linux. You will need to install third-party tools (Node.js, Electron\n      Builder) to package your game.\n    </Trans>\n  </Text>\n);\n\nexport const DoneFooter = ({\n  renderGameButton,\n}: {|\n  renderGameButton: () => React.Node,\n|}) => (\n  <Column noMargin>\n    <Text>\n      <Trans>\n        The game was properly exported. You can now use Electron Builder (you\n        need Node.js installed and to use the command-line on your computer to\n        run it) to create an executable.\n      </Trans>\n    </Text>\n    <Line justifyContent=\"center\">{renderGameButton()}</Line>\n  </Column>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\nimport { getHelpLink } from '../../Utils/HelpLink';\nimport Window from '../../Utils/Window';\nimport FlatButton from '../../UI/FlatButton';\nimport { Column, Spacer } from '../../UI/Grid';\nimport AlertMessage from '../../UI/AlertMessage';\n\nexport const ExplanationHeader = () => (\n  <Text>\n    <Trans>This will export your game to a folder.</Trans>\n    <Trans>\n      You can then upload it on a website/game hosting service and share it on\n      marketplaces and gaming portals like Kongregate, Game Jolt, itch.io,\n      Poki...\n    </Trans>\n  </Text>\n);\n\nexport const DoneFooter = ({\n  renderGameButton,\n}: {|\n  renderGameButton: () => React.Node,\n|}) => (\n  <Column noMargin>\n    <Text>\n      <Trans>\n        You can now upload the game to a web hosting to play to the game.\n      </Trans>\n    </Text>\n    <AlertMessage kind=\"warning\">\n      <Trans>\n        Your game won't work if you open index.html on your computer. You must\n        upload it to a web hosting (Kongregate, Itch.io, etc...) or a web server\n        to run it.\n      </Trans>\n    </AlertMessage>\n    <Spacer />\n    {renderGameButton()}\n    <Spacer />\n    <FlatButton\n      fullWidth\n      primary\n      onClick={() =>\n        Window.openExternalURL(\n          getHelpLink('/publishing/publishing-to-gamejolt-store')\n        )\n      }\n      label={<Trans>Publish your game on Game Jolt</Trans>}\n    />\n    <FlatButton\n      fullWidth\n      primary\n      onClick={() =>\n        Window.openExternalURL(\n          getHelpLink('/publishing/publishing-to-kongregate-store')\n        )\n      }\n      label={<Trans>Publish your game on Kongregate</Trans>}\n    />\n    <FlatButton\n      fullWidth\n      primary\n      onClick={() =>\n        Window.openExternalURL(getHelpLink('/publishing/publishing-to-itch-io'))\n      }\n      label={<Trans>Publish your game on Itch.io</Trans>}\n    />\n    <FlatButton\n      fullWidth\n      primary\n      onClick={() => Window.openExternalURL('https://gdevelop-app.com/poki')}\n      label={<Trans>Publish your game on Poki.com</Trans>}\n    />\n    <FlatButton\n      fullWidth\n      onClick={() => Window.openExternalURL(getHelpLink('/publishing'))}\n      label={<Trans>Learn more about publishing</Trans>}\n    />\n  </Column>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport AlertMessage from '../../UI/AlertMessage';\n\nexport const ExplanationHeader = () => (\n  <Column noMargin>\n    <Text>\n      <Trans>\n        This will export your game using Cocos2d-JS game engine. The game can be\n        compiled for Android or iOS if you install Cocos2d-JS developer tools.\n      </Trans>\n    </Text>\n    <Spacer />\n    <AlertMessage kind=\"info\">\n      <Trans>\n        This export is experimental and not all features are supported by\n        Cocos2D-JS. It's recommended that you thoroughly test your game and be\n        ready to contribute to the game engine if you need to implement missing\n        features.\n      </Trans>\n    </AlertMessage>\n  </Column>\n);\n\nexport const DoneFooter = ({\n  renderGameButton,\n}: {|\n  renderGameButton: () => React.Node,\n|}) => (\n  <Column noMargin>\n    <Text>\n      <Trans>\n        You can now upload the game to a web hosting or use Cocos2d-JS command\n        line tools to export it to other platforms like iOS (XCode is required)\n        or Android (Android SDK is required).\n      </Trans>\n    </Text>\n    <Line justifyContent=\"center\">{renderGameButton()}</Line>\n  </Column>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\nimport { Column, Line } from '../../UI/Grid';\nimport FlatButton from '../../UI/FlatButton';\nimport { getHelpLink } from '../../Utils/HelpLink';\nimport Window from '../../Utils/Window';\n\nexport const ExplanationHeader = () => (\n  <Text>\n    <Trans>\n      Prepare your game for Facebook Instant Games so that it can be play on\n      Facebook Messenger. GDevelop will create a compressed file that you can\n      upload on your Facebook Developer account.\n    </Trans>\n  </Text>\n);\n\nexport const DoneFooter = ({\n  renderGameButton,\n}: {|\n  renderGameButton: () => React.Node,\n|}) => {\n  const openLearnMore = () => {\n    Window.openExternalURL(\n      getHelpLink('/publishing/publishing-to-facebook-instant-games')\n    );\n  };\n\n  return (\n    <Column noMargin>\n      <Text>\n        <Trans>\n          You can now create a game on Facebook Instant Games, if not already\n          done, and upload the generated archive.\n        </Trans>\n      </Text>\n      <Line justifyContent=\"center\">\n        {renderGameButton()}\n        <FlatButton\n          label={<Trans>Learn more about Instant Games publication</Trans>}\n          primary\n          onClick={openLearnMore}\n        />\n      </Line>\n    </Column>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\n\nexport const ExplanationHeader = () => (\n  <Text>\n    <Trans>\n      Packaging your game for Android will create an APK file that can be\n      installed on Android phones or published to the Play Store.\n    </Trans>\n  </Text>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\nimport Checkbox from '../../UI/Checkbox';\nimport { Column, Line } from '../../UI/Grid';\nimport { type TargetName } from '../../Utils/GDevelopServices/Build';\n\nexport type ExportState = {|\n  targets: Array<TargetName>,\n|};\n\ntype HeaderProps = {|\n  project: gdProject,\n  exportState: ExportState,\n  updateExportState: (\n    updater: (prevExportState: ExportState) => ExportState\n  ) => void,\n|};\n\nexport const SetupExportHeader = ({\n  exportState,\n  updateExportState,\n}: HeaderProps) => {\n  const setTarget = (targetName: TargetName, enable: boolean) => {\n    updateExportState(prevExportState => {\n      if (enable && prevExportState.targets.indexOf(targetName) === -1) {\n        return {\n          ...prevExportState,\n          targets: [...prevExportState.targets, targetName],\n        };\n      } else if (\n        !enable &&\n        prevExportState.targets.indexOf(targetName) !== -1\n      ) {\n        return {\n          ...prevExportState,\n          targets: prevExportState.targets.filter(name => name !== targetName),\n        };\n      }\n\n      return prevExportState;\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <Column noMargin>\n        <Line>\n          <Text>\n            <Trans>\n              Your game will be exported and packaged online as a stand-alone\n              game for Windows, Linux and/or macOS.\n            </Trans>\n          </Text>\n        </Line>\n        <Checkbox\n          label={<Trans>Windows (zip file)</Trans>}\n          checked={exportState.targets.indexOf('winZip') !== -1}\n          onCheck={(e, checked) => setTarget('winZip', checked)}\n        />\n        <Checkbox\n          label={<Trans>Windows (auto-installer file)</Trans>}\n          checked={exportState.targets.indexOf('winExe') !== -1}\n          onCheck={(e, checked) => setTarget('winExe', checked)}\n        />\n        <Checkbox\n          label={<Trans>macOS (zip file)</Trans>}\n          checked={exportState.targets.indexOf('macZip') !== -1}\n          onCheck={(e, checked) => setTarget('macZip', checked)}\n        />\n        <Checkbox\n          label={<Trans>Linux (AppImage)</Trans>}\n          checked={exportState.targets.indexOf('linuxAppImage') !== -1}\n          onCheck={(e, checked) => setTarget('linuxAppImage', checked)}\n        />\n      </Column>\n    </React.Fragment>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\n\nexport const ExplanationHeader = () => (\n  <Text>\n    <Trans>\n      This will export your game and upload it on GDevelop games hosting. The\n      game will be freely accessible from the link, available for a few days and\n      playable from any computer browser or mobile phone (iOS, Android 5+).\n    </Trans>\n  </Text>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M18,5H15.5A3.5,3.5 0 0,0 12,8.5V11H10V14H12V21H15V14H18V11H15V9A1,1 0 0,1 16,8H18V5Z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M20.18,21.55H16.94L17.17,18.82H15.58L15.35,21.55H8.65L8.42,18.82H6.83L7.06,21.55H3.82L2,9.73L6.55,2.45H17.45L22,9.73L20.18,21.55M16.55,6.09H13.62L13.82,7.45H10.18L10.38,6.09H7.45L5.64,9.73L6.55,17H17.45L18.36,9.73L16.55,6.09M14.95,14.59C14.7,14.59 14.5,13.83 14.5,12.9C14.5,11.96 14.7,11.2 14.95,11.2C15.21,11.2 15.41,11.96 15.41,12.9C15.41,13.83 15.21,14.59 14.95,14.59M9.22,14.73C8.96,14.73 8.76,13.97 8.76,13.04C8.76,12.1 8.96,11.35 9.22,11.35C9.47,11.35 9.67,12.1 9.67,13.04C9.67,13.97 9.47,14.73 9.22,14.73Z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M12,20L15.46,14H15.45C15.79,13.4 16,12.73 16,12C16,10.8 15.46,9.73 14.62,9H19.41C19.79,9.93 20,10.94 20,12A8,8 0 0,1 12,20M4,12C4,10.54 4.39,9.18 5.07,8L8.54,14H8.55C9.24,15.19 10.5,16 12,16C12.45,16 12.88,15.91 13.29,15.77L10.89,19.91C7,19.37 4,16.04 4,12M15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9A3,3 0 0,1 15,12M12,4C14.96,4 17.54,5.61 18.92,8H12C10.06,8 8.45,9.38 8.08,11.21L5.7,7.08C7.16,5.21 9.44,4 12,4M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\" />\n  </SvgIcon>\n));\n","// @flow\n// Note: this file does not use export/imports and use Flow comments to allow its usage from Node.js\n\nconst some = require('lodash/some');\n/*flow-include\nexport type TranslationFunction = (string) => string;\n\nexport type JsExtensionModule = {\n  createExtension(_: TranslationFunction, gd: any): gdPlatformExtension,\n  runExtensionSanityTests(gd: any, extension: gdPlatformExtension): Array<string>,\n};\n\nexport type ExtensionLoadingResult = {\n  error: boolean,\n  message: string,\n  dangerous?: boolean,\n  rawError?: any,\n};\n\nexport interface JsExtensionsLoader {\n  loadAllExtensions(_: TranslationFunction): Promise<\n    Array<{ extensionModulePath: string, result: ExtensionLoadingResult }>\n  >,\n}\n*/\n\n/**\n * Run extensions tests and check for any non-empty results.\n */\nconst runExtensionSanityTests = (\n  gd /*: any */,\n  extension /*: gdPlatformExtension*/,\n  jsExtensionModule /*: JsExtensionModule*/\n) /*: ExtensionLoadingResult*/ => {\n  if (!jsExtensionModule.runExtensionSanityTests) {\n    return {\n      error: true,\n      message:\n        'Missing runExtensionSanityTests in the extension module exports',\n    };\n  }\n\n  const testResults = jsExtensionModule.runExtensionSanityTests(gd, extension);\n  if (some(testResults)) {\n    return {\n      error: true,\n      message: 'One or more tests are failing for the extension (see rawError)',\n      rawError: testResults,\n    };\n  }\n\n  return {\n    error: false,\n    message: 'Tests passed successfully',\n  };\n};\n\n/**\n * Load an extension from the specified JavaScript module, which is supposed\n * to contain a \"createExtension\" function returning a gd.PlatformExtension.\n */\nconst loadExtension = (\n  _ /*: TranslationFunction */,\n  gd /*: any */,\n  platform /*: gdJsPlatform*/,\n  jsExtensionModule /*: JsExtensionModule*/\n) /*: ExtensionLoadingResult*/ => {\n  if (!jsExtensionModule.createExtension) {\n    return {\n      message:\n        'Extension module found, but no createExtension method is exported',\n      error: true,\n    };\n  }\n\n  let extension = null;\n  try {\n    extension = jsExtensionModule.createExtension(_, gd);\n    if (!extension) {\n      return {\n        message: `createExtension did not return any extension. Did you forget to return the extension created?`,\n        error: true,\n      };\n    }\n  } catch (ex) {\n    return {\n      message: `🚨 Exception caught while running createExtension. 💣 Please fix this error as this will make GDevelop crash at some point.`,\n      error: true,\n      dangerous: true,\n      rawError: ex,\n    };\n  }\n\n  try {\n    const testsResult = runExtensionSanityTests(\n      gd,\n      extension,\n      jsExtensionModule\n    );\n    if (testsResult.error) {\n      extension.delete();\n      return testsResult;\n    }\n  } catch (ex) {\n    return {\n      message: `🚨 Exception caught while running runExtensionSanityTests. 💣 Please fix this error as this will make GDevelop crash at some point.`,\n      error: true,\n      dangerous: true,\n      rawError: ex,\n    };\n  }\n\n  platform.addNewExtension(extension);\n  extension.delete(); // Release the extension as it was copied inside gd.JsPlatform\n\n  return {\n    message: '✅ Successfully loaded the extension.',\n    error: false,\n  };\n};\n\nmodule.exports = {\n  runExtensionSanityTests,\n  loadExtension,\n};\n","// @flow\nimport * as React from 'react';\nimport {\n  type StorageProvider,\n  type StorageProviderOperations,\n  type FileMetadata,\n} from '.';\nimport { type AppArguments } from '../Utils/Window';\n\n/**\n * An empty StorageProvider doing nothing.\n */\nconst emptyStorageProvider: StorageProvider = {\n  internalName: 'Empty',\n  name: 'No storage',\n  createOperations: () => ({\n    onOpenWithPicker: () => Promise.reject('No storage provider set up'),\n    onOpen: () => Promise.reject('No storage provider set up'),\n    hasAutoSave: () => Promise.resolve(false),\n    onSaveProject: (project: gdProject) =>\n      Promise.reject('No storage provider set up'),\n    onSaveProjectAs: (project: gdProject) =>\n      Promise.reject('No storage provider set up'),\n    onAutoSaveProject: (project: gdProject) => Promise.resolve(),\n  }),\n};\n\ntype Props = {|\n  appArguments: AppArguments,\n  storageProviders: Array<StorageProvider>,\n  defaultStorageProvider?: StorageProvider,\n  children: ({\n    storageProviders: Array<StorageProvider>,\n    getStorageProviderOperations: (\n      newStorageProvider: ?StorageProvider\n    ) => Promise<StorageProviderOperations>,\n    initialFileMetadataToOpen: ?FileMetadata,\n    getStorageProvider: () => StorageProvider,\n  }) => React.Node,\n|};\n\ntype InitialStorageProviderAndFileMetadata = {|\n  currentStorageProvider: ?StorageProvider,\n  initialFileMetadataToOpen: ?FileMetadata,\n|};\n\ntype State = {|\n  ...InitialStorageProviderAndFileMetadata,\n  storageProviderOperations: ?StorageProviderOperations,\n  renderDialog: ?() => React.Node,\n|};\n\nconst computeInitialFileMetadataToOpen = (\n  defaultStorageProvider: ?StorageProvider,\n  storageProviders: Array<StorageProvider>,\n  appArguments: AppArguments\n): InitialStorageProviderAndFileMetadata => {\n  const candidates = storageProviders\n    .map(currentStorageProvider => {\n      return {\n        currentStorageProvider,\n        initialFileMetadataToOpen: currentStorageProvider.getFileMetadataFromAppArguments\n          ? currentStorageProvider.getFileMetadataFromAppArguments(appArguments)\n          : null,\n      };\n    })\n    .filter(({ initialFileMetadataToOpen }) => !!initialFileMetadataToOpen);\n\n  if (candidates.length === 0)\n    return {\n      currentStorageProvider: defaultStorageProvider,\n      initialFileMetadataToOpen: null,\n    };\n\n  if (candidates.length > 1) {\n    console.warn(\n      'More than one storage provider can understand the app arguments. Selecting the first one.'\n    );\n  }\n\n  return candidates[0];\n};\n\nexport default class ProjectStorageProviders extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    ...computeInitialFileMetadataToOpen(\n      this.props.defaultStorageProvider,\n      this.props.storageProviders,\n      this.props.appArguments\n    ),\n    storageProviderOperations: null,\n    renderDialog: null,\n  };\n\n  _setDialog = (renderDialog: () => React.Node) => {\n    this.setState({\n      renderDialog,\n    });\n  };\n\n  _closeDialog = () => {\n    this.setState({\n      renderDialog: null,\n    });\n  };\n\n  _getStorageProviderOperations = (\n    storageProvider: ?StorageProvider\n  ): Promise<StorageProviderOperations> => {\n    // Avoid creating a new storageProviderOperations\n    // if we're not changing the storage provider.\n    if (\n      !storageProvider ||\n      storageProvider === this.state.currentStorageProvider\n    ) {\n      if (this.state.storageProviderOperations) {\n        return Promise.resolve(this.state.storageProviderOperations);\n      }\n    }\n\n    const newStorageProvider: StorageProvider =\n      storageProvider ||\n      this.state.currentStorageProvider ||\n      emptyStorageProvider;\n    const storageProviderOperations = newStorageProvider.createOperations({\n      setDialog: this._setDialog,\n      closeDialog: this._closeDialog,\n    });\n\n    return new Promise(resolve => {\n      this.setState(\n        {\n          currentStorageProvider: newStorageProvider,\n          storageProviderOperations,\n        },\n        () => {\n          resolve(storageProviderOperations);\n        }\n      );\n    });\n  };\n\n  _getStorageProvider = () => {\n    return this.state.currentStorageProvider || emptyStorageProvider;\n  };\n\n  render() {\n    const { children, storageProviders } = this.props;\n    const { renderDialog, initialFileMetadataToOpen } = this.state;\n\n    return (\n      <React.Fragment>\n        {children({\n          storageProviders,\n          getStorageProviderOperations: this._getStorageProviderOperations,\n          initialFileMetadataToOpen,\n          getStorageProvider: this._getStorageProvider,\n        })}\n        {renderDialog && renderDialog()}\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\n// Note: this file does not use export/imports and use Flow comments to allow its usage from Node.js\n\nconst mapFor = /*:: <T>*/ (\n  start /*: number */,\n  end /*: number */,\n  func /*: (number) => T */\n) /*:Array<T> */ => {\n  const result = [];\n  for (let i = start; i < end; i++) {\n    result.push(func(i));\n  }\n  return result;\n};\n\nconst mapReverseFor = /*:: <T>*/ (\n  start /*: number */,\n  end /*: number */,\n  func /*: (number) => T */\n) /*:Array<T> */ => {\n  const result = [];\n  for (let i = end - 1; i >= start; i--) {\n    result.push(func(i));\n  }\n  return result;\n};\n\n/*flow-include\ntype CppVector<T> = {\n  +size: () => number,\n  +at: (number) => T,\n}\n*/\n\nconst mapVector = /*:: <T, U>*/ (\n  cppVector /*: CppVector<T> */,\n  func /*: (T, number) => U */\n) /*:Array<U> */ => {\n  return mapFor(0, cppVector.size(), i => func(cppVector.at(i), i));\n};\n\nmodule.exports = {\n  mapFor,\n  mapReverseFor,\n  mapVector,\n};\n","import { isMacLike } from '../../Utils/Platform';\n\nconst CTRL_KEY = 17;\nconst SHIFT_KEY = 16;\nconst LEFT_KEY = 37;\nconst UP_KEY = 38;\nconst RIGHT_KEY = 39;\nconst DOWN_KEY = 40;\nconst BACKSPACE_KEY = 8;\nconst SPACE_KEY = 32;\nconst DELETE_KEY = 46;\nconst EQUAL_KEY = 187;\nconst MINUS_KEY = 189;\nconst NUMPAD_ADD = 107;\nconst NUMPAD_SUBTRACT = 109;\nconst C_KEY = 67;\nconst F_KEY = 70;\nconst V_KEY = 86;\nconst X_KEY = 88;\nconst Y_KEY = 89;\nconst Z_KEY = 90;\nconst MID_MOUSE_BUTTON = 1;\n\n/**\n * Deprecated class to handle shortcut. Don't use this anymore, prefer the non\n * deprecated version that does not add listener on the document (risking catching events\n * when the components are not focused).\n *\n * TODO: Replace InstancesEditor shortcuts by the new `KeyboardShortcuts`.\n */\nexport default class DeprecatedKeyboardShortcuts {\n  constructor({\n    onDelete,\n    onMove,\n    onCopy,\n    onCut,\n    onPaste,\n    onUndo,\n    onRedo,\n    onSearch,\n    onZoomOut,\n    onZoomIn,\n  }) {\n    this.onDelete = onDelete || this._noop;\n    this.onMove = onMove || this._noop;\n    this.onCopy = onCopy || this._noop;\n    this.onCut = onCut || this._noop;\n    this.onPaste = onPaste || this._noop;\n    this.onUndo = onUndo || this._noop;\n    this.onRedo = onRedo || this._noop;\n    this.onZoomOut = onZoomOut || this._noop;\n    this.onZoomIn = onZoomIn || this._noop;\n    this.onSearch = onSearch || this._noop;\n    this.isFocused = false;\n    this.shiftPressed = false;\n    this.rawCtrlPressed = false;\n    this.metaPressed = false;\n    this.spacePressed = false;\n    this.mouseMidButtonPressed = false;\n    this.mount();\n  }\n\n  shouldCloneInstances() {\n    return this._isControlPressed();\n  }\n\n  shouldMultiSelect() {\n    return this.shiftPressed;\n  }\n\n  shouldFollowAxis() {\n    return this.shiftPressed;\n  }\n\n  shouldNotSnapToGrid() {\n    return this.altPressed;\n  }\n\n  shouldResizeProportionally() {\n    return this.shiftPressed;\n  }\n\n  shouldScrollHorizontally() {\n    return this.altPressed;\n  }\n\n  shouldZoom() {\n    if (isMacLike()) {\n      return this._isControlPressed();\n    } else {\n      if (!this._isControlPressed() && !this.altPressed && !this.shiftPressed) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  shouldMoveView() {\n    return this.spacePressed || this.mouseMidButtonPressed;\n  }\n\n  _isControlPressed = () => {\n    // On macOS, meta key (Apple/Command key) acts as Control key on Windows/Linux.\n    return this.metaPressed || this.rawCtrlPressed;\n  };\n\n  _onKeyDown = evt => {\n    if (!this.isFocused) return;\n\n    let preventDefault = false;\n\n    if (evt.metaKey) this.metaPressed = true;\n    if (evt.altKey) this.altPressed = true;\n    if (evt.which === CTRL_KEY) this.rawCtrlPressed = true;\n    if (evt.which === SHIFT_KEY) this.shiftPressed = true;\n    if (evt.which === SPACE_KEY) this.spacePressed = true;\n\n    const textEditorSelectors = 'textarea, input, [contenteditable=\"true\"]';\n    if (evt.target && evt.target.closest(textEditorSelectors)) {\n      return; // Something else is currently being edited.\n    }\n\n    if (this.onMove) {\n      if (evt.which === UP_KEY) {\n        this.onMove(0, -1);\n      } else if (evt.which === DOWN_KEY) {\n        this.onMove(0, 1);\n      } else if (evt.which === LEFT_KEY) {\n        this.onMove(-1, 0);\n      } else if (evt.which === RIGHT_KEY) {\n        this.onMove(1, 0);\n      }\n    }\n    if (evt.which === BACKSPACE_KEY || evt.which === DELETE_KEY) {\n      this.onDelete();\n      preventDefault = true;\n    }\n    if (this._isControlPressed() && evt.which === C_KEY) {\n      this.onCopy();\n    }\n    if (this._isControlPressed() && evt.which === X_KEY) {\n      this.onCut();\n    }\n    if (this._isControlPressed() && evt.which === V_KEY) {\n      this.onPaste();\n    }\n    if (this._isControlPressed() && evt.which === Z_KEY) {\n      this.onUndo();\n    }\n    if (this._isControlPressed() && this.shiftPressed && evt.which === Z_KEY) {\n      this.onRedo();\n    }\n    if (this._isControlPressed() && evt.which === Y_KEY) {\n      this.onRedo();\n    }\n    if (this._isControlPressed() && evt.which === F_KEY) {\n      this.onSearch();\n    }\n\n    if (this._isControlPressed() && evt.which === MINUS_KEY) {\n      this.onZoomOut();\n    }\n    if (evt.which === NUMPAD_SUBTRACT) {\n      this.onZoomOut();\n    }\n\n    if (this._isControlPressed() && evt.which === EQUAL_KEY) {\n      this.onZoomIn();\n    }\n    if (evt.which === NUMPAD_ADD) {\n      this.onZoomIn();\n    }\n\n    if (preventDefault) {\n      if (evt.preventDefault) evt.preventDefault();\n      return false;\n    }\n  };\n\n  _onKeyUp = evt => {\n    // Always handle key up event, even if we don't have the focus,\n    // for modifier keys to ensure we don't lose track of their pressed/unpressed status.\n\n    if (!evt.metaKey) this.metaPressed = false;\n    if (!evt.altKey) this.altPressed = false;\n    if (evt.which === CTRL_KEY) this.rawCtrlPressed = false;\n    if (evt.which === SHIFT_KEY) this.shiftPressed = false;\n    if (evt.which === SPACE_KEY) this.spacePressed = false;\n\n    let preventDefault = false;\n\n    if (evt.which === BACKSPACE_KEY || evt.which === DELETE_KEY) {\n      preventDefault = true;\n    }\n\n    if (preventDefault) {\n      if (evt.preventDefault) evt.preventDefault();\n      return false;\n    }\n  };\n\n  _onMouseDown = evt => {\n    if (!this.isFocused) return;\n\n    if (!isMacLike()) {\n      if (evt.button === MID_MOUSE_BUTTON) {\n        this.mouseMidButtonPressed = true;\n      } else {\n        this.mouseMidButtonPressed = false;\n      }\n    }\n  };\n\n  _onMouseUp = evt => {\n    if (!this.isFocused) return;\n\n    if (!isMacLike() && evt.button === MID_MOUSE_BUTTON) {\n      this.mouseMidButtonPressed = false;\n    }\n  };\n\n  _onKeyPress = evt => {};\n\n  _noop = () => {};\n\n  focus() {\n    this.isFocused = true;\n  }\n\n  blur() {\n    this.isFocused = false;\n\n    // Clear these keys on blur to handle the case where app switching via\n    // Cmd+Tab, Win+Tab, or Alt+Tab prevents us from capturing the \"keyup\" event.\n    this.metaPressed = false;\n    this.altPressed = false;\n  }\n\n  mount() {\n    if (typeof document === 'undefined') return;\n\n    document.addEventListener('keydown', this._onKeyDown, true);\n    document.addEventListener('keyup', this._onKeyUp, true);\n    document.addEventListener('keypress', this._onKeyPress, true);\n    document.addEventListener('mousedown', this._onMouseDown, true);\n    document.addEventListener('mouseup', this._onMouseUp, true);\n  }\n\n  unmount() {\n    if (typeof document === 'undefined') return;\n\n    document.removeEventListener('keydown', this._onKeyDown, true);\n    document.removeEventListener('keyup', this._onKeyUp, true);\n    document.removeEventListener('keypress', this._onKeyPress, true);\n    document.removeEventListener('mousedown', this._onMouseDown, true);\n    document.removeEventListener('mouseup', this._onMouseUp, true);\n  }\n}\n","import LayerRenderer from './LayerRenderer';\nimport * as PIXI from 'pixi.js-legacy';\n\nexport default class InstancesRenderer {\n  constructor({\n    project,\n    layout,\n    instances,\n    viewPosition,\n    onInstanceClicked,\n    onInstanceDoubleClicked,\n    onOverInstance,\n    onOutInstance,\n    onMoveInstance,\n    onMoveInstanceEnd,\n    onDownInstance,\n  }) {\n    this.project = project;\n    this.instances = instances;\n    this.layout = layout;\n    this.viewPosition = viewPosition;\n    this.onInstanceClicked = onInstanceClicked;\n    this.onInstanceDoubleClicked = onInstanceDoubleClicked;\n    this.onOverInstance = onOverInstance;\n    this.onOutInstance = onOutInstance;\n    this.onMoveInstance = onMoveInstance;\n    this.onMoveInstanceEnd = onMoveInstanceEnd;\n    this.onDownInstance = onDownInstance;\n\n    this.layersRenderers = {};\n\n    this.pixiContainer = new PIXI.Container();\n    this.instanceMeasurer = {\n      getInstanceLeft: instance => {\n        const layerName = instance.getLayer();\n        const layerRenderer = this.layersRenderers[layerName];\n        if (!layerRenderer) return instance.getX();\n\n        return layerRenderer.getInstanceLeft(instance);\n      },\n      getInstanceTop: instance => {\n        const layerName = instance.getLayer();\n        const layerRenderer = this.layersRenderers[layerName];\n        if (!layerRenderer) return instance.getY();\n\n        return layerRenderer.getInstanceTop(instance);\n      },\n      getInstanceWidth: instance => {\n        if (instance.hasCustomSize()) return instance.getCustomWidth();\n\n        const layerName = instance.getLayer();\n        const layerRenderer = this.layersRenderers[layerName];\n        if (!layerRenderer) return 0;\n\n        return layerRenderer.getInstanceWidth(instance);\n      },\n\n      getInstanceHeight: instance => {\n        if (instance.hasCustomSize()) return instance.getCustomHeight();\n\n        const layerName = instance.getLayer();\n        const layerRenderer = this.layersRenderers[layerName];\n        if (!layerRenderer) return 0;\n\n        return layerRenderer.getInstanceHeight(instance);\n      },\n      getInstanceRect: instance => {\n        return {\n          x: this.instanceMeasurer.getInstanceLeft(instance),\n          y: this.instanceMeasurer.getInstanceTop(instance),\n          width: this.instanceMeasurer.getInstanceWidth(instance),\n          height: this.instanceMeasurer.getInstanceHeight(instance),\n        };\n      },\n    };\n  }\n\n  getPixiContainer() {\n    return this.pixiContainer;\n  }\n\n  getInstanceMeasurer() {\n    return this.instanceMeasurer;\n  }\n\n  render() {\n    for (let i = 0; i < this.layout.getLayersCount(); i++) {\n      const layer = this.layout.getLayerAt(i);\n      const layerName = layer.getName();\n\n      let layerRenderer = this.layersRenderers[layerName];\n      if (!layerRenderer) {\n        this.layersRenderers[layerName] = layerRenderer = new LayerRenderer({\n          project: this.project,\n          layout: this.layout,\n          instances: this.instances,\n          viewPosition: this.viewPosition,\n          layer: layer,\n          onInstanceClicked: this.onInstanceClicked,\n          onInstanceDoubleClicked: this.onInstanceDoubleClicked,\n          onOverInstance: this.onOverInstance,\n          onOutInstance: this.onOutInstance,\n          onMoveInstance: this.onMoveInstance,\n          onMoveInstanceEnd: this.onMoveInstanceEnd,\n          onDownInstance: this.onDownInstance,\n        });\n        this.pixiContainer.addChild(layerRenderer.getPixiContainer());\n      }\n\n      // /!\\ Objects representing layers can be deleted at any moment and replaced\n      // by new one, for example when two layers are swapped.\n      // We update the layer object of the renderer so that the renderer always has\n      // a valid layer object that can be used.\n      layerRenderer.layer = layer;\n      layerRenderer.wasUsed = true;\n      layerRenderer.getPixiContainer().zOrder = i;\n      layerRenderer.render();\n    }\n\n    this._updatePixiObjectsZOrder();\n    this._cleanRenderers();\n  }\n\n  _updatePixiObjectsZOrder() {\n    this.pixiContainer.children.sort((a, b) => {\n      a.zOrder = a.zOrder || 0;\n      b.zOrder = b.zOrder || 0;\n      return a.zOrder - b.zOrder;\n    });\n  }\n\n  /**\n   * Delete instance renderers of the specified objects, which will then be recreated during\n   * the next render.\n   * @param {string} objectName The name of the object for which instance must be re-rendered.\n   */\n  resetRenderersFor(objectName) {\n    for (let i in this.layersRenderers) {\n      if (this.layersRenderers.hasOwnProperty(i)) {\n        const layerRenderer = this.layersRenderers[i];\n        layerRenderer.resetRenderersFor(objectName);\n      }\n    }\n  }\n\n  /**\n   * Clean up rendered layers that are not existing anymore\n   */\n  _cleanRenderers() {\n    for (let i in this.layersRenderers) {\n      if (this.layersRenderers.hasOwnProperty(i)) {\n        const layerRenderer = this.layersRenderers[i];\n        if (!layerRenderer.wasUsed) {\n          this.pixiContainer.removeChild(layerRenderer.getPixiContainer());\n          layerRenderer.delete();\n          delete this.layersRenderers[i];\n        } else layerRenderer.wasUsed = false;\n      }\n    }\n  }\n\n  delete() {\n    for (let i in this.layersRenderers) {\n      if (this.layersRenderers.hasOwnProperty(i)) {\n        this.layersRenderers[i].delete();\n      }\n    }\n  }\n}\n","export default function transformRect(transformPoint, { x, y, width, height }) {\n  const startPos = transformPoint(x, y);\n  const endPos = transformPoint(x + width, y + height);\n  return {\n    x: startPos[0],\n    y: startPos[1],\n    width: endPos[0] - startPos[0],\n    height: endPos[1] - startPos[1],\n  };\n}\n","// @flow\nimport gesture from 'pixi-simple-gesture';\nimport transformRect from '../Utils/TransformRect';\nimport * as PIXI from 'pixi.js-legacy';\nimport { type ScreenType } from '../UI/Reponsive/ScreenTypeMeasurer';\nimport InstancesSelection from './InstancesSelection';\n\ntype Props = {|\n  instancesSelection: InstancesSelection,\n  instanceMeasurer: Object, // To be typed in InstancesRenderer\n  onResize: (deltaX: number | null, deltaY: number | null) => void,\n  onResizeEnd: () => void,\n  onRotate: (number, number) => void,\n  onRotateEnd: () => void,\n  toCanvasCoordinates: (x: number, y: number) => [number, number],\n  screenType: ScreenType,\n|};\n\nconst getButtonSizes = (screenType: ScreenType) => {\n  if (screenType === 'touch') {\n    return {\n      buttonSize: 14,\n      smallButtonSize: 12,\n      buttonPadding: 5,\n      hitAreaPadding: 12,\n    };\n  }\n\n  return {\n    buttonSize: 10,\n    smallButtonSize: 8,\n    buttonPadding: 5,\n    hitAreaPadding: 5,\n  };\n};\n\nconst RECTANGLE_BUTTON_SHAPE = 0;\nconst CIRCLE_BUTTON_SHAPE = 1;\n\n/**\n * Render selection rectangle for selected instances.\n */\nexport default class SelectedInstances {\n  instancesSelection: InstancesSelection;\n  instanceMeasurer: Object; // To be typed in InstancesRenderer\n  onResize: (deltaX: number | null, deltaY: number | null) => void;\n  onResizeEnd: () => void;\n  onRotate: (number, number) => void;\n  onRotateEnd: () => void;\n  toCanvasCoordinates: (x: number, y: number) => [number, number];\n  _screenType: ScreenType;\n\n  pixiContainer = new PIXI.Container();\n  rectanglesContainer = new PIXI.Container();\n  selectedRectangles = [];\n  resizeButton = new PIXI.Graphics();\n  resizeIcon = PIXI.Sprite.from('res/actions/direction.png');\n  rightResizeButton = new PIXI.Graphics();\n  bottomResizeButton = new PIXI.Graphics();\n  rotateButton = new PIXI.Graphics();\n\n  constructor({\n    instancesSelection,\n    instanceMeasurer,\n    onResize,\n    onResizeEnd,\n    onRotate,\n    onRotateEnd,\n    toCanvasCoordinates,\n    screenType,\n  }: Props) {\n    this.instanceMeasurer = instanceMeasurer;\n    this.onResize = onResize;\n    this.onResizeEnd = onResizeEnd;\n    this.onRotate = onRotate;\n    this.onRotateEnd = onRotateEnd;\n    this.toCanvasCoordinates = toCanvasCoordinates;\n    this.instancesSelection = instancesSelection;\n    this._screenType = screenType;\n\n    this.pixiContainer.addChild(this.rectanglesContainer);\n\n    this._makeButton(\n      this.resizeButton,\n      event => {\n        this.onResize(event.deltaX, event.deltaY);\n      },\n      () => {\n        this.onResizeEnd();\n      },\n      'nwse-resize'\n    );\n    this._makeButton(\n      this.rightResizeButton,\n      event => {\n        this.onResize(event.deltaX, null);\n      },\n      () => {\n        this.onResizeEnd();\n      },\n      'ew-resize'\n    );\n    this._makeButton(\n      this.bottomResizeButton,\n      event => {\n        this.onResize(null, event.deltaY);\n      },\n      () => {\n        this.onResizeEnd();\n      },\n      'ns-resize'\n    );\n    this._makeButton(\n      this.rotateButton,\n      event => {\n        this.onRotate(event.deltaX, event.deltaY);\n      },\n      () => {\n        this.onRotateEnd();\n      },\n      'url(\"res/actions/rotate24.png\"),auto'\n    );\n  }\n\n  setScreenType(screenType: ScreenType) {\n    this._screenType = screenType;\n  }\n\n  _makeButton(\n    objectButton: PIXI.Graphics,\n    onMove: (event: any) => void,\n    onEnd: () => void,\n    cursor: string\n  ) {\n    objectButton.interactive = true;\n    objectButton.buttonMode = true;\n    objectButton.cursor = cursor;\n    gesture.panable(objectButton);\n    objectButton.on('panmove', onMove);\n    objectButton.on('panend', onEnd);\n    this.pixiContainer.addChild(objectButton);\n  }\n\n  getPixiContainer() {\n    return this.pixiContainer;\n  }\n\n  _renderButton(\n    show: boolean,\n    buttonObject: PIXI.Graphics,\n    canvasPosition: [number, number],\n    size: number,\n    shape: 0 | 1,\n    hitAreaPadding: number\n  ) {\n    buttonObject.clear();\n    if (!show) {\n      buttonObject.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n      return;\n    }\n\n    buttonObject.beginFill(0xffffff);\n    buttonObject.lineStyle(1, 0x6868e8, 1);\n    buttonObject.fill.alpha = 0.9;\n    if (shape === RECTANGLE_BUTTON_SHAPE) {\n      buttonObject.drawRect(canvasPosition[0], canvasPosition[1], size, size);\n    } else if (shape === CIRCLE_BUTTON_SHAPE) {\n      buttonObject.drawCircle(\n        canvasPosition[0] + size / 2,\n        canvasPosition[1] + size / 2,\n        size / 2\n      );\n    }\n\n    buttonObject.endFill();\n    buttonObject.hitArea = new PIXI.Rectangle(\n      canvasPosition[0] - hitAreaPadding,\n      canvasPosition[1] - hitAreaPadding,\n      size + hitAreaPadding * 2,\n      size + hitAreaPadding * 2\n    );\n  }\n\n  render() {\n    const {\n      buttonSize,\n      smallButtonSize,\n      buttonPadding,\n      hitAreaPadding,\n    } = getButtonSizes(this._screenType);\n    const selection = this.instancesSelection.getSelectedInstances();\n    let x1 = 0;\n    let y1 = 0;\n    let x2 = 0;\n    let y2 = 0;\n\n    //Update the selection rectangle of each instance\n    for (var i = 0; i < selection.length; i++) {\n      if (this.selectedRectangles.length === i) {\n        const newRectangle = new PIXI.Graphics();\n        newRectangle.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n        this.selectedRectangles.push(newRectangle);\n        this.rectanglesContainer.addChild(newRectangle);\n      }\n\n      const instance = selection[i];\n      const instanceRect = this.instanceMeasurer.getInstanceRect(instance);\n      const selectionRectangle = transformRect(\n        this.toCanvasCoordinates,\n        instanceRect\n      );\n\n      this.selectedRectangles[i].clear();\n      this.selectedRectangles[i].beginFill(0x6868e8);\n      this.selectedRectangles[i].lineStyle(1, 0x6868e8, 1);\n      this.selectedRectangles[i].fill.alpha = 0.3;\n      this.selectedRectangles[i].alpha = 0.8;\n      this.selectedRectangles[i].drawRect(\n        selectionRectangle.x,\n        selectionRectangle.y,\n        selectionRectangle.width,\n        selectionRectangle.height\n      );\n      this.selectedRectangles[i].endFill();\n\n      if (i === 0) {\n        x1 = instanceRect.x;\n        y1 = instanceRect.y;\n        x2 = instanceRect.x + instanceRect.width;\n        y2 = instanceRect.y + instanceRect.height;\n      } else {\n        if (instanceRect.x < x1) x1 = instanceRect.x;\n        if (instanceRect.y < y1) y1 = instanceRect.y;\n        if (instanceRect.x + instanceRect.width > x2)\n          x2 = instanceRect.x + instanceRect.width;\n        if (instanceRect.y + instanceRect.height > y2)\n          y2 = instanceRect.y + instanceRect.height;\n      }\n    }\n\n    while (this.selectedRectangles.length > selection.length) {\n      this.rectanglesContainer.removeChild(this.selectedRectangles.pop());\n    }\n\n    //Position the resize button.\n    const show = selection.length !== 0;\n    const resizeButtonPos = this.toCanvasCoordinates(x2, y2);\n    resizeButtonPos[0] += buttonPadding;\n    resizeButtonPos[1] += buttonPadding;\n\n    const rightResizeButtonPos = this.toCanvasCoordinates(\n      x2,\n      y1 + (y2 - y1) / 2\n    );\n    rightResizeButtonPos[0] += buttonPadding;\n    rightResizeButtonPos[1] -= smallButtonSize / 2;\n\n    const bottomResizeButtonPos = this.toCanvasCoordinates(\n      x1 + (x2 - x1) / 2,\n      y2\n    );\n    bottomResizeButtonPos[0] -= smallButtonSize / 2;\n    bottomResizeButtonPos[1] += buttonPadding;\n\n    const rotateButtonPos = this.toCanvasCoordinates(x1 + (x2 - x1) / 2, y1);\n    rotateButtonPos[0] -= smallButtonSize / 2;\n    rotateButtonPos[1] -= buttonPadding * 4;\n\n    this._renderButton(\n      show,\n      this.resizeButton,\n      resizeButtonPos,\n      buttonSize,\n      RECTANGLE_BUTTON_SHAPE,\n      hitAreaPadding\n    );\n    this._renderButton(\n      show,\n      this.rightResizeButton,\n      rightResizeButtonPos,\n      smallButtonSize,\n      RECTANGLE_BUTTON_SHAPE,\n      hitAreaPadding\n    );\n    this._renderButton(\n      show,\n      this.bottomResizeButton,\n      bottomResizeButtonPos,\n      smallButtonSize,\n      RECTANGLE_BUTTON_SHAPE,\n      hitAreaPadding\n    );\n    this._renderButton(\n      show,\n      this.rotateButton,\n      rotateButtonPos,\n      smallButtonSize,\n      CIRCLE_BUTTON_SHAPE,\n      hitAreaPadding\n    );\n  }\n}\n","import transformRect from '../Utils/TransformRect';\nimport * as PIXI from 'pixi.js-legacy';\n\nexport default class InstancesSelection {\n  constructor({ instanceMeasurer, toCanvasCoordinates }) {\n    this.instanceMeasurer = instanceMeasurer;\n    this.toCanvasCoordinates = toCanvasCoordinates;\n\n    this.highlightedInstance = null;\n    this.highlightRectangle = new PIXI.Graphics();\n    this.highlightRectangle.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n\n    this.tooltipBackground = new PIXI.Graphics();\n    this.tooltipText = new PIXI.Text('', {\n      fontSize: 15,\n      fill: 0xffffff,\n      align: 'center',\n    });\n    this.highlightRectangle.addChild(this.tooltipBackground);\n    this.highlightRectangle.addChild(this.tooltipText);\n  }\n\n  setInstance(instance) {\n    this.highlightedInstance = instance;\n  }\n\n  getInstance() {\n    return this.highlightedInstance;\n  }\n\n  getPixiObject(instance) {\n    return this.highlightRectangle;\n  }\n\n  render() {\n    if (this.highlightedInstance === null) {\n      this.highlightRectangle.visible = false;\n      return;\n    }\n\n    const highlightRectangle = transformRect(\n      this.toCanvasCoordinates,\n      this.instanceMeasurer.getInstanceRect(this.highlightedInstance)\n    );\n\n    this.highlightRectangle.visible = true;\n    this.highlightRectangle.clear();\n    this.highlightRectangle.beginFill(0xeeeeff);\n    this.highlightRectangle.fill.alpha = 0.1;\n    this.highlightRectangle.alpha = 0.8;\n    this.highlightRectangle.lineStyle(1, 0x000000, 1);\n    this.highlightRectangle.drawRect(\n      highlightRectangle.x,\n      highlightRectangle.y,\n      highlightRectangle.width,\n      highlightRectangle.height\n    );\n    this.highlightRectangle.endFill();\n\n    const tooltipInfo =\n      this.highlightedInstance.getObjectName() +\n      '\\n' +\n      'X: ' +\n      parseInt(this.highlightedInstance.getX()) +\n      '  Y: ' +\n      parseInt(this.highlightedInstance.getY()) +\n      '\\n' +\n      'Layer: ' +\n      this.highlightedInstance.getLayer() +\n      '  Z: ' +\n      this.highlightedInstance.getZOrder() +\n      '\\n';\n    this.tooltipText.text = tooltipInfo;\n\n    this.tooltipText.x = Math.round(\n      highlightRectangle.x -\n        this.tooltipText.width / 2 +\n        highlightRectangle.width / 2\n    );\n    this.tooltipText.y = Math.round(\n      highlightRectangle.y - this.tooltipText.height\n    );\n\n    const padding = 5;\n    this.tooltipBackground.clear();\n    this.tooltipBackground.beginFill(0x000000, 0.8);\n    this.tooltipBackground.drawRoundedRect(\n      this.tooltipText.x - padding,\n      this.tooltipText.y - padding,\n      this.tooltipText.width + padding * 2,\n      this.tooltipText.height - padding,\n      4\n    );\n    this.tooltipBackground.endFill();\n  }\n}\n","export default class InstancesResizer {\n  constructor({ instanceMeasurer, options }) {\n    this.instanceMeasurer = instanceMeasurer;\n    this.options = options;\n    this.instanceSizes = {};\n    this.totalDeltaX = 0;\n    this.totalDeltaY = 0;\n  }\n\n  setOptions(options) {\n    this.options = options;\n  }\n\n  _roundWidth(width) {\n    if (!this.options.snap || !this.options.grid || this.options.gridWidth <= 0)\n      return Math.max(Math.round(width), 1);\n\n    return Math.max(\n      Math.round(width / this.options.gridWidth) * this.options.gridWidth,\n      1\n    );\n  }\n\n  _roundHeight(height) {\n    if (\n      !this.options.snap ||\n      !this.options.grid ||\n      this.options.gridHeight <= 0\n    )\n      return Math.max(Math.round(height), 1);\n\n    return Math.max(\n      Math.round(height / this.options.gridHeight) * this.options.gridHeight,\n      1\n    );\n  }\n\n  _getSizeDeltaX(proportional, initialSize) {\n    if (proportional && Math.abs(this.totalDeltaX) < Math.abs(this.totalDeltaY))\n      return (initialSize.width / initialSize.height) * this.totalDeltaY;\n\n    return this.totalDeltaX;\n  }\n\n  _getSizeDeltaY(proportional, initialSize) {\n    if (proportional && Math.abs(this.totalDeltaY) < Math.abs(this.totalDeltaX))\n      return (initialSize.height / initialSize.width) * this.totalDeltaX;\n\n    return this.totalDeltaY;\n  }\n\n  resizeBy(instances, deltaX, deltaY, proportional) {\n    this.totalDeltaX += deltaX;\n    this.totalDeltaY += deltaY;\n\n    for (let i = 0; i < instances.length; i++) {\n      const selectedInstance = instances[i];\n\n      if (!selectedInstance.hasCustomSize()) {\n        selectedInstance.setCustomWidth(\n          this.instanceMeasurer.getInstanceWidth(selectedInstance)\n        );\n        selectedInstance.setCustomHeight(\n          this.instanceMeasurer.getInstanceHeight(selectedInstance)\n        );\n      }\n\n      let initialSize = this.instanceSizes[selectedInstance.ptr];\n      if (!initialSize) {\n        initialSize = this.instanceSizes[selectedInstance.ptr] = {\n          width: selectedInstance.getCustomWidth(),\n          height: selectedInstance.getCustomHeight(),\n        };\n      }\n\n      selectedInstance.setHasCustomSize(true);\n      selectedInstance.setCustomWidth(\n        this._roundWidth(\n          initialSize.width + this._getSizeDeltaX(proportional, initialSize)\n        )\n      );\n      selectedInstance.setCustomHeight(\n        this._roundHeight(\n          initialSize.height + this._getSizeDeltaY(proportional, initialSize)\n        )\n      );\n    }\n  }\n\n  endResize() {\n    this.instanceSizes = {};\n    this.totalDeltaX = 0;\n    this.totalDeltaY = 0;\n  }\n}\n","export default class InstancesRotator {\n  constructor() {\n    this.instanceAngles = {};\n    this.totalDeltaX = 0;\n    this.totalDeltaY = 0;\n  }\n\n  _getNewAngle(proportional: boolean, initialAngle: number) {\n    const angle =\n      (Math.atan2(this.totalDeltaY, this.totalDeltaX) * 180) / Math.PI +\n      initialAngle;\n    return proportional ? Math.round(angle / 15) * 15 : angle;\n  }\n\n  rotateBy(instances, deltaX, deltaY, proportional) {\n    this.totalDeltaX += deltaX;\n    this.totalDeltaY += deltaY;\n\n    for (let i = 0; i < instances.length; i++) {\n      const selectedInstance = instances[i];\n      let initialAngle = this.instanceAngles[selectedInstance.ptr];\n      if (initialAngle === undefined) {\n        initialAngle = this.instanceAngles[\n          selectedInstance.ptr\n        ] = selectedInstance.getAngle();\n      }\n      selectedInstance.setAngle(this._getNewAngle(proportional, initialAngle));\n    }\n  }\n\n  endRotate() {\n    this.instanceAngles = {};\n    this.totalDeltaX = 0;\n    this.totalDeltaY = 0;\n  }\n}\n","import { roundPosition } from '../Utils/GridHelpers';\n\nexport default class InstancesMover {\n  constructor({ instanceMeasurer, options }) {\n    this.instanceMeasurer = instanceMeasurer;\n    this.options = options;\n    this.instancePositions = {};\n    this.totalDeltaX = 0;\n    this.totalDeltaY = 0;\n  }\n\n  setOptions(options) {\n    this.options = options;\n  }\n\n  _roundXPosition(x, noGridSnap) {\n    if (!this.options.snap || !this.options.grid || noGridSnap)\n      return Math.round(x);\n\n    return roundPosition(x, this.options.gridWidth, this.options.gridOffsetX);\n  }\n\n  _roundYPosition(y, noGridSnap) {\n    if (!this.options.snap || !this.options.grid || noGridSnap)\n      return Math.round(y);\n\n    return roundPosition(y, this.options.gridHeight, this.options.gridOffsetY);\n  }\n\n  _getMoveDeltaX(followAxis) {\n    if (followAxis && Math.abs(this.totalDeltaX) < Math.abs(this.totalDeltaY))\n      return 0;\n\n    return this.totalDeltaX;\n  }\n\n  _getMoveDeltaY(followAxis) {\n    if (followAxis && Math.abs(this.totalDeltaY) < Math.abs(this.totalDeltaX))\n      return 0;\n\n    return this.totalDeltaY;\n  }\n\n  moveBy(instances, deltaX, deltaY, followAxis, noGridSnap) {\n    this.totalDeltaX += deltaX;\n    this.totalDeltaY += deltaY;\n\n    for (var i = 0; i < instances.length; i++) {\n      const selectedInstance = instances[i];\n\n      let initialPosition = this.instancePositions[selectedInstance.ptr];\n      if (!initialPosition) {\n        initialPosition = this.instancePositions[selectedInstance.ptr] = {\n          x: selectedInstance.getX(),\n          y: selectedInstance.getY(),\n        };\n      }\n\n      selectedInstance.setX(\n        this._roundXPosition(\n          initialPosition.x + this._getMoveDeltaX(followAxis),\n          noGridSnap\n        )\n      );\n      selectedInstance.setY(\n        this._roundYPosition(\n          initialPosition.y + this._getMoveDeltaY(followAxis),\n          noGridSnap\n        )\n      );\n    }\n  }\n\n  endMove() {\n    this.instancePositions = {};\n    this.totalDeltaX = 0;\n    this.totalDeltaY = 0;\n  }\n}\n","import * as PIXI from 'pixi.js-legacy';\nimport { rgbColorToHexNumber, type RGBColor } from '../Utils/ColorTransformer';\n\n// Equal to #6868E8\nconst DEFAULT_COLOR: RGBColor = {\n  r: 104,\n  g: 104,\n  b: 232,\n};\n\nexport default class SelectionRectangle {\n  constructor({ viewPosition, options }) {\n    this.viewPosition = viewPosition;\n    this.options = options;\n\n    this.pixiGrid = new PIXI.Graphics();\n    this.pixiGrid.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n  }\n\n  setOptions(options) {\n    this.options = options;\n  }\n\n  getPixiObject() {\n    return this.pixiGrid;\n  }\n\n  render() {\n    const options = this.options;\n\n    if (!options.grid) {\n      this.pixiGrid.visible = false;\n      return;\n    }\n\n    const gridColor = options.gridColor || DEFAULT_COLOR;\n    const gridHex = rgbColorToHexNumber(gridColor);\n    const gridAlpha = gridColor.a || 1;\n\n    this.pixiGrid.visible = true;\n    this.pixiGrid.clear();\n    this.pixiGrid.beginFill(gridHex);\n    this.pixiGrid.lineStyle(1, gridHex, gridAlpha);\n    this.pixiGrid.fill.alpha = 0.1;\n    this.pixiGrid.alpha = 0.8;\n\n    const sceneStartPoint = this.viewPosition.toSceneCoordinates(0, 0);\n    const sceneEndPoint = this.viewPosition.toSceneCoordinates(\n      this.viewPosition.getWidth(),\n      this.viewPosition.getHeight()\n    );\n\n    const startXPos =\n      Math.floor(sceneStartPoint[0] / options.gridWidth) * options.gridWidth;\n    const startYPos =\n      Math.floor(sceneStartPoint[1] / options.gridHeight) * options.gridHeight;\n\n    const endXPos =\n      Math.ceil(sceneEndPoint[0] / options.gridWidth) * options.gridWidth;\n    const endYPos =\n      Math.ceil(sceneEndPoint[1] / options.gridHeight) * options.gridHeight;\n\n    for (\n      let Xpos = startXPos + options.gridOffsetX;\n      Xpos < endXPos;\n      Xpos += options.gridWidth\n    ) {\n      const start = this.viewPosition.toCanvasCoordinates(Xpos, startYPos);\n      const end = this.viewPosition.toCanvasCoordinates(Xpos, endYPos);\n\n      this.pixiGrid.moveTo(start[0], start[1]);\n      this.pixiGrid.lineTo(end[0], end[1]);\n    }\n\n    for (\n      let Ypos = startYPos + options.gridOffsetY;\n      Ypos < endYPos;\n      Ypos += options.gridHeight\n    ) {\n      const start = this.viewPosition.toCanvasCoordinates(startXPos, Ypos);\n      const end = this.viewPosition.toCanvasCoordinates(endXPos, Ypos);\n\n      this.pixiGrid.moveTo(start[0], start[1]);\n      this.pixiGrid.lineTo(end[0], end[1]);\n    }\n\n    this.pixiGrid.endFill();\n  }\n}\n","import * as PIXI from 'pixi.js-legacy';\nimport transformRect from '../Utils/TransformRect';\nimport { rgbToHexNumber } from '../Utils/ColorTransformer';\n\nexport default class WindowBorder {\n  constructor({ project, layout, toCanvasCoordinates }) {\n    this.project = project;\n    this.layout = layout;\n    this.toCanvasCoordinates = toCanvasCoordinates;\n\n    this.pixiRectangle = new PIXI.Graphics();\n    this.pixiRectangle.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n    this.windowRectangle = {\n      x: 0,\n      y: 0,\n      width: this.project.getGameResolutionWidth(),\n      height: this.project.getGameResolutionHeight(),\n    };\n  }\n\n  getPixiObject() {\n    return this.pixiRectangle;\n  }\n\n  render() {\n    this.windowRectangle.width = this.project.getGameResolutionWidth();\n    this.windowRectangle.height = this.project.getGameResolutionHeight();\n\n    const displayedRectangle = transformRect(\n      this.toCanvasCoordinates,\n      this.windowRectangle\n    );\n\n    this.pixiRectangle.clear();\n    this.pixiRectangle.beginFill(0x000000);\n    this.pixiRectangle.lineStyle(\n      1,\n      rgbToHexNumber(\n        128 + (this.layout.getBackgroundColorRed() % 256),\n        128 + (this.layout.getBackgroundColorBlue() % 256),\n        128 + (this.layout.getBackgroundColorGreen() % 256)\n      ),\n      1\n    );\n    this.pixiRectangle.alpha = 1;\n    this.pixiRectangle.fill.alpha = 0;\n    this.pixiRectangle.drawRect(\n      displayedRectangle.x,\n      displayedRectangle.y,\n      displayedRectangle.width,\n      displayedRectangle.height\n    );\n    this.pixiRectangle.endFill();\n  }\n}\n","import * as PIXI from 'pixi.js-legacy';\nimport transformRect from '../Utils/TransformRect';\n\nexport default class WindowBorder {\n  constructor({ project, viewPosition, options }) {\n    this.project = project;\n    this.viewPosition = viewPosition;\n    this.options = options;\n\n    this.pixiRectangle = new PIXI.Graphics();\n    this.pixiRectangle.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n    this.windowRectangle = {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n    };\n  }\n\n  setOptions(options) {\n    this.options = options;\n  }\n\n  getPixiObject() {\n    return this.pixiRectangle;\n  }\n\n  render() {\n    const options = this.options;\n\n    if (!options.windowMask) {\n      this.pixiRectangle.visible = false;\n      return;\n    }\n\n    const width = this.project.getGameResolutionWidth();\n    const height = this.project.getGameResolutionHeight();\n    this.windowRectangle.x = this.viewPosition.getViewX() - width / 2;\n    this.windowRectangle.y = this.viewPosition.getViewY() - height / 2;\n    this.windowRectangle.width = width;\n    this.windowRectangle.height = height;\n\n    const displayedRectangle = transformRect(\n      this.viewPosition.toCanvasCoordinates,\n      this.windowRectangle\n    );\n\n    this.pixiRectangle.visible = true;\n    this.pixiRectangle.clear();\n    this.pixiRectangle.beginFill(0x000000);\n    this.pixiRectangle.lineStyle(1, 0x000000, 1);\n    this.pixiRectangle.alpha = 1;\n    this.pixiRectangle.fill.alpha = 0;\n    this.pixiRectangle.drawRect(\n      displayedRectangle.x,\n      displayedRectangle.y,\n      displayedRectangle.width,\n      displayedRectangle.height\n    );\n    this.pixiRectangle.endFill();\n  }\n}\n","// @flow\nimport * as PIXI from 'pixi.js-legacy';\nimport { rgbToHex } from '../Utils/ColorTransformer';\n\ntype Props = {|\n  layout: gdLayout,\n  pixiRenderer: PIXI.Renderer,\n|};\n\nexport default class BackgroundColor {\n  layout: gdLayout;\n  pixiRenderer: PIXI.Renderer;\n\n  constructor({ layout, pixiRenderer }: Props) {\n    this.layout = layout;\n    this.pixiRenderer = pixiRenderer;\n  }\n\n  render() {\n    this.pixiRenderer.backgroundColor = parseInt(\n      parseInt(\n        rgbToHex(\n          this.layout.getBackgroundColorRed(),\n          this.layout.getBackgroundColorGreen(),\n          this.layout.getBackgroundColorBlue()\n        ),\n        16\n      ),\n      10\n    );\n  }\n}\n","// @flow\n\n/**\n * Provide a method shouldUpdate that can be called in a game loop or in\n * a method used in renderAnimationFrame, and which indicate if the rendering/update\n * of the scene should be done according to the desired framerate.\n */\nexport default class FpsLimiter {\n  _lastFrameTime: number;\n  _interval: number;\n  _forceUpdate: boolean;\n\n  constructor(maxFps: number) {\n    this._lastFrameTime = Date.now();\n    this._interval = 1000 / maxFps;\n    this._forceUpdate = false;\n  }\n\n  shouldUpdate() {\n    const now = Date.now();\n    const delta = now - this._lastFrameTime;\n\n    if (delta > this._interval || this._forceUpdate) {\n      this._lastFrameTime = now - (delta % this._interval);\n      this._forceUpdate = false;\n      return true;\n    }\n\n    return false;\n  }\n\n  forceNextUpdate() {\n    this._forceUpdate = true;\n  }\n}\n","import * as PIXI from 'pixi.js-legacy';\n\n// PIXI has a ticker that is used by PIXI InteractionManager, and which\n// frequently check if interaction happened. We may want to disable it\n// when it's useless to do these interaction checks to save CPU usage.\n\n/**\n *  Stop the PIXI Ticker used to monitor interactions\n */\nexport const stopPIXITicker = () => {\n  const ticker = PIXI.Ticker && PIXI.Ticker.shared;\n  if (ticker) ticker.stop();\n};\n\n/**\n * Start the PIXI Ticker used to monitor interactions\n */\nexport const startPIXITicker = () => {\n  // Timeout ensure that the ticker is started even if other components\n  // call stopPIXITicker during the same tick (for example, when switching\n  // between SceneEditor tabs).\n  setTimeout(() => {\n    const ticker = PIXI.Ticker && PIXI.Ticker.shared;\n    if (ticker) ticker.start();\n  }, 50);\n};\n","// @flow\nimport * as PIXI from 'pixi.js-legacy';\n\ntype Props = {\n  getLastCursorSceneCoordinates: () => [number, number],\n  width: number,\n  height: number,\n};\n\nexport default class StatusBar {\n  _width: number;\n  _height: number;\n  _getLastCursorSceneCoordinates: () => [number, number];\n  _statusBarContainer: PIXI.Container;\n  _statusBarBackground: PIXI.Graphics;\n  _statusBarText: PIXI.Text;\n\n  constructor({ getLastCursorSceneCoordinates, width, height }: Props) {\n    this._getLastCursorSceneCoordinates = getLastCursorSceneCoordinates;\n    this._statusBarContainer = new PIXI.Container();\n    this._statusBarContainer.alpha = 0.8;\n    this._statusBarContainer.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n    this._statusBarBackground = new PIXI.Graphics();\n    this._statusBarText = new PIXI.Text('', {\n      fontSize: 15,\n      fill: 0xffffff,\n      align: 'left',\n    });\n    this._statusBarContainer.addChild(this._statusBarBackground);\n    this._statusBarContainer.addChild(this._statusBarText);\n    this.resize(width, height);\n  }\n\n  resize(width: number, height: number) {\n    this._width = width;\n    this._height = height;\n  }\n\n  getPixiObject(): PIXI.Container {\n    return this._statusBarContainer;\n  }\n\n  render() {\n    const padding = 5;\n    const borderRadius = 4;\n    const [x, y] = this._getLastCursorSceneCoordinates();\n    this._statusBarText.text = `${x.toFixed(0)};${y.toFixed(0)}`;\n    this._statusBarText.position.x = 0 + padding;\n    this._statusBarText.position.y = Math.round(\n      this._height - padding - this._statusBarText.height\n    );\n\n    this._statusBarBackground.clear();\n    this._statusBarBackground.beginFill(0x000000, 0.8);\n    this._statusBarBackground.drawRoundedRect(\n      0 - borderRadius,\n      this._height - padding * 2 - this._statusBarText.height,\n      this._statusBarText.width + padding * 2 + borderRadius,\n      this._statusBarText.height + padding * 2 + borderRadius,\n      borderRadius\n    );\n    this._statusBarBackground.endFill();\n  }\n}\n","// @flow\n\ntype Props = {|\n  canvas: HTMLDivElement,\n  shouldMoveView: () => boolean,\n|};\n\n/**\n * Change the cursor displayed when hovering the canvas.\n *\n * Some elements on the canvas (for example, resize buttons)\n * can also set their own cursor - this class is only for the canvas.\n */\nexport default class CanvasCursor {\n  canvas: HTMLDivElement;\n  shouldMoveView: () => boolean;\n\n  constructor({ canvas, shouldMoveView }: Props) {\n    this.canvas = canvas;\n    this.shouldMoveView = shouldMoveView;\n  }\n\n  render() {\n    if (this.shouldMoveView()) {\n      this.canvas.style.cursor = 'grab';\n      if (this.canvas.style.cursor !== 'grab') {\n        this.canvas.style.cursor = '-webkit-grab';\n      }\n      return;\n    }\n\n    this.canvas.style.cursor = 'default';\n  }\n}\n","// @flow\n\ntype CallbackEvent = {|\n  /* The X position, relative to the viewport, not including scroll offset, of the long touch */\n  clientX: number,\n  /* The Y position, relative to the viewport, not including scroll offset, of the long touch */\n  clientY: number,\n|};\n\ntype Props = {|\n  canvas: HTMLCanvasElement,\n  onLongTouch: (event: CallbackEvent) => void,\n|};\n\nconst delay = 600; // ms\nconst moveTolerance = 10; // px\n\n/**\n * Listen for a long touch on a canvas. Useful for platforms (Safari on iOS)\n * not supporting \"contextmenu\" event.\n *\n * A long press is characterized by starting a touch and staying pressed, without\n * moving too far from the initial position (to avoid being confused with a drag/scroll).\n */\nexport default class LongTouchHandler {\n  _lastTouchX: number = 0;\n  _lastTouchY: number = 0;\n  _longTouchTimeoutID: TimeoutID;\n  _canvas: HTMLCanvasElement;\n  _onLongTouch: ?(event: CallbackEvent) => void;\n\n  constructor({ canvas, onLongTouch }: Props) {\n    this._canvas = canvas;\n    this._onLongTouch = onLongTouch;\n\n    canvas.addEventListener('touchstart', this._onTouchStart);\n    canvas.addEventListener('touchmove', this._onTouchMove);\n    canvas.addEventListener('touchend', this._clear);\n  }\n\n  _onTouchStart = (event: TouchEvent) => {\n    // If more than one touch,\n    // it's not a long press.\n    if (event.touches.length !== 1) return;\n\n    const touch = event.touches[0];\n    this._lastTouchX = touch.clientX;\n    this._lastTouchY = touch.clientY;\n\n    // Ensure we're tracking a single long press, as sometimes\n    // the 'touchstart' event is called more than once.\n    this._clear();\n    this._longTouchTimeoutID = setTimeout(() => {\n      if (this._onLongTouch)\n        this._onLongTouch({\n          clientX: this._lastTouchX,\n          clientY: this._lastTouchY,\n        });\n    }, delay);\n  };\n\n  _onTouchMove = (event: TouchEvent) => {\n    // If more than one touch,\n    // it's not a long press anymore.\n    if (event.touches.length !== 1) {\n      this._clear();\n      return;\n    }\n\n    // If touch moved too far from the initial touch position,\n    // it's not a long press anymore.\n    const touch = event.touches[0];\n    if (\n      Math.abs(touch.clientX - this._lastTouchX) > moveTolerance ||\n      Math.abs(touch.clientY - this._lastTouchY) > moveTolerance\n    ) {\n      this._clear();\n      return;\n    }\n  };\n\n  _clear = () => {\n    clearTimeout(this._longTouchTimeoutID);\n  };\n\n  unmount = () => {\n    this._canvas.removeEventListener('touchstart', this._onTouchStart);\n    this._canvas.removeEventListener('touchmove', this._onTouchMove);\n    this._canvas.removeEventListener('touchend', this._clear);\n  };\n}\n","// @flow\nimport React, { Component } from 'react';\nimport gesture from 'pixi-simple-gesture';\nimport DeprecatedKeyboardShortcuts from '../UI/KeyboardShortcuts/DeprecatedKeyboardShortcuts';\nimport InstancesRenderer from './InstancesRenderer';\nimport ViewPosition from './ViewPosition';\nimport SelectedInstances from './SelectedInstances';\nimport HighlightedInstance from './HighlightedInstance';\nimport SelectionRectangle from './SelectionRectangle';\nimport InstancesResizer from './InstancesResizer';\nimport InstancesRotator from './InstancesRotator';\nimport InstancesMover from './InstancesMover';\nimport Grid from './Grid';\nimport WindowBorder from './WindowBorder';\nimport WindowMask from './WindowMask';\nimport BackgroundColor from './BackgroundColor';\nimport * as PIXI from 'pixi.js-legacy';\nimport FpsLimiter from './FpsLimiter';\nimport { startPIXITicker, stopPIXITicker } from '../Utils/PIXITicker';\nimport StatusBar from './StatusBar';\nimport CanvasCursor from './CanvasCursor';\nimport InstancesAdder from './InstancesAdder';\nimport { makeDropTarget } from '../UI/DragAndDrop/DropTarget';\nimport { objectWithContextReactDndType } from '../ObjectsList';\nimport PinchHandler, { shouldBeHandledByPinch } from './PinchHandler';\nimport { type ScreenType } from '../UI/Reponsive/ScreenTypeMeasurer';\nimport InstancesSelection from './InstancesSelection';\nimport LongTouchHandler from './LongTouchHandler';\n\nconst styles = {\n  canvasArea: { flex: 1, position: 'absolute', overflow: 'hidden' },\n  dropCursor: { cursor: 'copy' },\n};\n\nconst DropTarget = makeDropTarget<{||}>(objectWithContextReactDndType);\n\nexport type InstancesEditorPropsWithoutSizeAndScroll = {|\n  project: gdProject,\n  layout: gdLayout,\n  initialInstances: gdInitialInstancesContainer,\n  options: Object,\n  onChangeOptions: (uiSettings: Object) => void,\n  instancesSelection: InstancesSelection,\n  onDeleteSelection: () => void,\n  onInstancesAdded: (instances: Array<gdInitialInstance>) => void,\n  onInstancesSelected: (instances: Array<gdInitialInstance>) => void,\n  onInstanceDoubleClicked: (instance: gdInitialInstance) => void,\n  onInstancesMoved: (instances: Array<gdInitialInstance>) => void,\n  onInstancesResized: (instances: Array<gdInitialInstance>) => void,\n  onInstancesRotated: (instances: Array<gdInitialInstance>) => void,\n  selectedObjectNames: Array<string>,\n  onContextMenu: (x: number, y: number) => void,\n  onCopy: () => void,\n  onCut: () => void,\n  onPaste: () => void,\n  onUndo: () => void,\n  onRedo: () => void,\n  onZoomOut: () => void,\n  onZoomIn: () => void,\n  pauseRendering: boolean,\n|};\n\ntype Props = {|\n  ...InstancesEditorPropsWithoutSizeAndScroll,\n  width: number,\n  height: number,\n  onViewPositionChanged: ViewPosition => void,\n  screenType: ScreenType,\n|};\n\nexport default class InstancesEditor extends Component<Props> {\n  lastContextMenuX = 0;\n  lastContextMenuY = 0;\n  lastCursorX = 0;\n  lastCursorY = 0;\n  fpsLimiter = new FpsLimiter(28);\n  canvasArea: ?HTMLDivElement;\n  pixiRenderer: any;\n  keyboardShortcuts: DeprecatedKeyboardShortcuts;\n  pinchHandler: PinchHandler;\n  canvasCursor: CanvasCursor;\n  _instancesAdder: InstancesAdder;\n  selectionRectangle: SelectionRectangle;\n  selectedInstances: SelectedInstances;\n  highlightedInstance: HighlightedInstance;\n  instancesResizer: InstancesResizer;\n  instancesRotator: InstancesRotator;\n  instancesMover: InstancesMover;\n  windowBorder: WindowBorder;\n  windowMask: WindowMask;\n  statusBar: StatusBar;\n  pixiContainer: PIXI.Container;\n  backgroundArea: PIXI.Container;\n  backgroundColor: BackgroundColor;\n  instancesRenderer: InstancesRenderer;\n  viewPosition: ViewPosition;\n  longTouchHandler: LongTouchHandler;\n  grid: Grid;\n  _unmounted = false;\n  _renderingPaused = false;\n  nextFrame: AnimationFrameID;\n  contextMenuLongTouchTimeoutID: TimeoutID;\n\n  componentDidMount() {\n    // Initialize the PIXI renderer, if possible\n    if (this.canvasArea && !this.pixiRenderer) {\n      this._initializeCanvasAndRenderer();\n    }\n  }\n\n  componentDidUpdate() {\n    // Initialize the PIXI renderer, if not already done.\n    // This can happen if canvasArea was not rendered\n    // just after the mount (depends on react-dnd versions?).\n    if (this.canvasArea && !this.pixiRenderer) {\n      this._initializeCanvasAndRenderer();\n    }\n  }\n\n  _initializeCanvasAndRenderer() {\n    const { canvasArea } = this;\n    if (!canvasArea) return;\n\n    // project can be used here for initializing stuff, but don't keep references to it.\n    // Instead, create editors in _mountEditorComponents (as they will be destroyed/recreated\n    // if the project changes).\n    const { project } = this.props;\n\n    //Create the renderer and setup the rendering area for scene editor.\n    //\"preserveDrawingBuffer: true\" is needed to avoid flickering and background issues on some mobile phones (see #585 #572 #566 #463)\n    this.pixiRenderer = PIXI.autoDetectRenderer(\n      {\n        width: this.props.width,\n        height: this.props.height,\n        preserveDrawingBuffer: true,\n        antialias: false,\n      }\n      // Disable anti-aliasing(default) to avoid rendering issue (1px width line of extra pixels) when rendering pixel perfect tiled sprites.\n    );\n    canvasArea.appendChild(this.pixiRenderer.view);\n\n    this.longTouchHandler = new LongTouchHandler({\n      canvas: this.pixiRenderer.view,\n      onLongTouch: event =>\n        this.props.onContextMenu(event.clientX, event.clientY),\n    });\n\n    this.pixiRenderer.view.addEventListener('contextmenu', e => {\n      e.preventDefault();\n\n      this.lastContextMenuX = e.offsetX;\n      this.lastContextMenuY = e.offsetY;\n      if (this.props.onContextMenu)\n        this.props.onContextMenu(e.clientX, e.clientY);\n\n      return false;\n    });\n\n    this.pixiRenderer.view.onmousewheel = event => {\n      if (this.keyboardShortcuts.shouldZoom()) {\n        this.zoomBy(event.wheelDelta / 5000);\n      } else if (this.keyboardShortcuts.shouldScrollHorizontally()) {\n        this.viewPosition.scrollBy(-event.wheelDelta / 10, 0);\n      } else {\n        this.viewPosition.scrollBy(event.deltaX / 10, event.deltaY / 10);\n      }\n\n      if (this.props.onViewPositionChanged) {\n        this.props.onViewPositionChanged(this.viewPosition);\n      }\n      event.preventDefault();\n    };\n    this.pixiRenderer.view.setAttribute('tabIndex', -1);\n    this.pixiRenderer.view.addEventListener('focus', e => {\n      this.keyboardShortcuts.focus();\n    });\n    this.pixiRenderer.view.addEventListener('blur', e => {\n      this.keyboardShortcuts.blur();\n    });\n    this.pixiRenderer.view.addEventListener('mouseover', e => {\n      this.keyboardShortcuts.focus();\n    });\n    this.pixiRenderer.view.addEventListener('mouseout', e => {\n      this.keyboardShortcuts.blur();\n    });\n\n    this.pixiContainer = new PIXI.Container();\n\n    this.backgroundArea = new PIXI.Container();\n    this.backgroundArea.hitArea = new PIXI.Rectangle(\n      0,\n      0,\n      this.props.width,\n      this.props.height\n    );\n    gesture.panable(this.backgroundArea);\n    this.backgroundArea.on('mousedown', event =>\n      this._onBackgroundClicked(event.data.global.x, event.data.global.y)\n    );\n    this.backgroundArea.on('touchstart', event => {\n      if (shouldBeHandledByPinch(event.data && event.data.originalEvent)) {\n        return;\n      }\n\n      this._onBackgroundClicked(event.data.global.x, event.data.global.y);\n    });\n    this.backgroundArea.on('mousemove', event =>\n      this._onMouseMove(event.data.global.x, event.data.global.y)\n    );\n    this.backgroundArea.on('panmove', event =>\n      this._onPanMove(\n        event.deltaX,\n        event.deltaY,\n        event.data.global.x,\n        event.data.global.y\n      )\n    );\n    this.backgroundArea.on('panend', event => this._onPanEnd());\n    this.pixiContainer.addChild(this.backgroundArea);\n\n    this.viewPosition = new ViewPosition({\n      initialViewX: project ? project.getGameResolutionWidth() / 2 : 0,\n      initialViewY: project ? project.getGameResolutionHeight() / 2 : 0,\n      width: this.props.width,\n      height: this.props.height,\n      options: this.props.options,\n    });\n    this.pixiContainer.addChild(this.viewPosition.getPixiContainer());\n\n    this.grid = new Grid({\n      viewPosition: this.viewPosition,\n      options: this.props.options,\n    });\n    this.pixiContainer.addChild(this.grid.getPixiObject());\n\n    this.keyboardShortcuts = new DeprecatedKeyboardShortcuts({\n      onDelete: this.props.onDeleteSelection,\n      onMove: this.moveSelection,\n      onCopy: this.props.onCopy,\n      onCut: this.props.onCut,\n      onPaste: this.props.onPaste,\n      onUndo: this.props.onUndo,\n      onRedo: this.props.onRedo,\n      onZoomOut: this.props.onZoomOut,\n      onZoomIn: this.props.onZoomIn,\n    });\n\n    this.pinchHandler = new PinchHandler({\n      canvas: this.pixiRenderer.view,\n      setZoomFactor: this.setZoomFactor,\n      getZoomFactor: this.getZoomFactor,\n      viewPosition: this.viewPosition,\n    });\n\n    this.canvasCursor = new CanvasCursor({\n      canvas: canvasArea,\n      shouldMoveView: () => this.keyboardShortcuts.shouldMoveView(),\n    });\n\n    this._instancesAdder = new InstancesAdder({\n      instances: this.props.initialInstances,\n      options: this.props.options,\n    });\n\n    this._mountEditorComponents(this.props);\n    this._renderScene();\n  }\n\n  /**\n   * Force the internal InstancesRenderer to be destroyed and recreated\n   * (as well as other components holding references to instances). Call\n   * this when the initial instances were recreated to ensure that there\n   * is not mismatch between renderers and the instances that were updated.\n   */\n  forceRemount() {\n    this._mountEditorComponents(this.props);\n  }\n\n  _mountEditorComponents(props: Props) {\n    //Remove and delete any existing editor component\n    if (this.highlightedInstance) {\n      this.pixiContainer.removeChild(this.highlightedInstance.getPixiObject());\n    }\n    if (this.selectedInstances) {\n      this.pixiContainer.removeChild(this.selectedInstances.getPixiContainer());\n    }\n    if (this.instancesRenderer) {\n      this.viewPosition\n        .getPixiContainer()\n        .removeChild(this.instancesRenderer.getPixiContainer());\n      this.instancesRenderer.delete();\n    }\n    if (this.selectionRectangle) {\n      this.pixiContainer.removeChild(this.selectionRectangle.getPixiObject());\n      this.selectionRectangle.delete();\n    }\n    if (this.windowBorder) {\n      this.pixiContainer.removeChild(this.windowBorder.getPixiObject());\n    }\n    if (this.windowMask) {\n      this.pixiContainer.removeChild(this.windowMask.getPixiObject());\n    }\n    if (this.statusBar) {\n      this.pixiContainer.removeChild(this.statusBar.getPixiObject());\n    }\n\n    this.backgroundColor = new BackgroundColor({\n      layout: props.layout,\n      pixiRenderer: this.pixiRenderer,\n    });\n    this.instancesRenderer = new InstancesRenderer({\n      project: props.project,\n      layout: props.layout,\n      instances: props.initialInstances,\n      viewPosition: this.viewPosition,\n      onOverInstance: this._onOverInstance,\n      onMoveInstance: this._onMoveInstance,\n      onMoveInstanceEnd: this._onMoveInstanceEnd,\n      onDownInstance: this._onDownInstance,\n      onOutInstance: this._onOutInstance,\n      onInstanceClicked: this._onInstanceClicked,\n      onInstanceDoubleClicked: this._onInstanceDoubleClicked,\n    });\n    this.selectionRectangle = new SelectionRectangle({\n      instances: props.initialInstances,\n      instanceMeasurer: this.instancesRenderer.getInstanceMeasurer(),\n      toSceneCoordinates: this.viewPosition.toSceneCoordinates,\n    });\n    this.selectedInstances = new SelectedInstances({\n      instancesSelection: this.props.instancesSelection,\n      onResize: this._onResize,\n      onResizeEnd: this._onResizeEnd,\n      onRotate: this._onRotate,\n      onRotateEnd: this._onRotateEnd,\n      instanceMeasurer: this.instancesRenderer.getInstanceMeasurer(),\n      toCanvasCoordinates: this.viewPosition.toCanvasCoordinates,\n      screenType: this.props.screenType,\n    });\n    this.highlightedInstance = new HighlightedInstance({\n      instanceMeasurer: this.instancesRenderer.getInstanceMeasurer(),\n      toCanvasCoordinates: this.viewPosition.toCanvasCoordinates,\n    });\n    this.instancesResizer = new InstancesResizer({\n      instanceMeasurer: this.instancesRenderer.getInstanceMeasurer(),\n      options: this.props.options,\n    });\n    this.instancesRotator = new InstancesRotator();\n    this.instancesMover = new InstancesMover({\n      instanceMeasurer: this.instancesRenderer.getInstanceMeasurer(),\n      options: this.props.options,\n    });\n    this.windowBorder = new WindowBorder({\n      project: props.project,\n      layout: props.layout,\n      toCanvasCoordinates: this.viewPosition.toCanvasCoordinates,\n    });\n    this.windowMask = new WindowMask({\n      project: props.project,\n      viewPosition: this.viewPosition,\n      options: this.props.options,\n    });\n    this.statusBar = new StatusBar({\n      width: this.props.width,\n      height: this.props.height,\n      getLastCursorSceneCoordinates: this.getLastCursorSceneCoordinates,\n    });\n\n    this.pixiContainer.addChild(this.selectionRectangle.getPixiObject());\n    this.viewPosition\n      .getPixiContainer()\n      .addChild(this.instancesRenderer.getPixiContainer());\n    this.pixiContainer.addChild(this.windowBorder.getPixiObject());\n    this.pixiContainer.addChild(this.windowMask.getPixiObject());\n    this.pixiContainer.addChild(this.selectedInstances.getPixiContainer());\n    this.pixiContainer.addChild(this.highlightedInstance.getPixiObject());\n    this.pixiContainer.addChild(this.statusBar.getPixiObject());\n  }\n\n  componentWillUnmount() {\n    // This is an antipattern and is theorically not needed, but help\n    // to protect against renders after the component is unmounted.\n    this._unmounted = true;\n\n    this.keyboardShortcuts.unmount();\n    this.selectionRectangle.delete();\n    this.instancesRenderer.delete();\n    this._instancesAdder.unmount();\n    this.pinchHandler.unmount();\n    this.longTouchHandler.unmount();\n    if (this.nextFrame) cancelAnimationFrame(this.nextFrame);\n    stopPIXITicker();\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (\n      nextProps.width !== this.props.width ||\n      nextProps.height !== this.props.height\n    ) {\n      this.pixiRenderer.resize(nextProps.width, nextProps.height);\n      this.viewPosition.resize(nextProps.width, nextProps.height);\n      this.statusBar.resize(nextProps.width, nextProps.height);\n      this.backgroundArea.hitArea = new PIXI.Rectangle(\n        0,\n        0,\n        nextProps.width,\n        nextProps.height\n      );\n\n      // Avoid flickering that could happen while waiting for next animation frame.\n      this.fpsLimiter.forceNextUpdate();\n      this._renderScene();\n    }\n\n    if (nextProps.options !== this.props.options) {\n      this.grid.setOptions(nextProps.options);\n      this.instancesMover.setOptions(nextProps.options);\n      this.instancesResizer.setOptions(nextProps.options);\n      this.windowMask.setOptions(nextProps.options);\n      this.viewPosition.setOptions(nextProps.options);\n      this._instancesAdder.setOptions(nextProps.options);\n    }\n\n    if (nextProps.screenType !== this.props.screenType) {\n      this.selectedInstances.setScreenType(this.props.screenType);\n    }\n\n    if (\n      this.props.layout !== nextProps.layout ||\n      this.props.initialInstances !== nextProps.initialInstances ||\n      this.props.project !== nextProps.project\n    ) {\n      this._mountEditorComponents(nextProps);\n    }\n\n    // For avoiding useless renderings, which is costly for CPU/GPU, when the editor\n    // is not displayed, `pauseRendering` prop can be set to true.\n    if (nextProps.pauseRendering && !this.props.pauseRendering)\n      this.pauseSceneRendering();\n\n    if (!nextProps.pauseRendering && this.props.pauseRendering)\n      this.restartSceneRendering();\n  }\n\n  /**\n   * Delete instance renderers of the specified objects, which will then be recreated during\n   * the next render. Call this when an object resources may have changed (for example, a modified image),\n   * and you want the instances of objects to reflect the changes.\n   * See also ResourcesLoader and PixiResourcesLoader.\n   * @param {string} objectName The name of the object for which instance must be re-rendered.\n   */\n  resetRenderersFor(objectName: string) {\n    if (this.instancesRenderer)\n      this.instancesRenderer.resetRenderersFor(objectName);\n  }\n\n  zoomBy(value: number) {\n    this.setZoomFactor(this.getZoomFactor() + value);\n  }\n\n  getZoomFactor = () => {\n    return this.props.options.zoomFactor;\n  };\n\n  setZoomFactor = (zoomFactor: number) => {\n    this.props.onChangeOptions({\n      zoomFactor: Math.max(Math.min(zoomFactor, 10), 0.01),\n    });\n  };\n\n  /**\n   * Immediately add instances for the specified objects at the given\n   * position (in scene coordinates).\n   */\n  addInstances = (\n    pos /*: [number, number] */,\n    objectNames /*: Array<string> */\n  ): Array<gdInitialInstance> => {\n    return this._instancesAdder.addInstances(pos, objectNames);\n  };\n\n  _onMouseMove = (x: number, y: number) => {\n    this.lastCursorX = x;\n    this.lastCursorY = y;\n  };\n\n  _onBackgroundClicked = (x: number, y: number) => {\n    this.lastCursorX = x;\n    this.lastCursorY = y;\n    this.pixiRenderer.view.focus();\n\n    // Selection rectangle is only drawn in _onPanMove,\n    // which can happen a few milliseconds after a background\n    // click/touch - enough to have the selection rectangle being\n    // offset from the first click - which looks laggy. Set\n    // the start position now.\n    if (!this.keyboardShortcuts.shouldMoveView()) {\n      this.selectionRectangle.startSelectionRectangle(x, y);\n    }\n\n    if (\n      !this.keyboardShortcuts.shouldMultiSelect() &&\n      !this.keyboardShortcuts.shouldMoveView()\n    ) {\n      this.props.instancesSelection.clearSelection();\n      this.props.onInstancesSelected([]);\n    }\n  };\n\n  _onPanMove = (deltaX: number, deltaY: number, x: number, y: number) => {\n    if (this.keyboardShortcuts.shouldMoveView()) {\n      const sceneDeltaX = deltaX / this.getZoomFactor();\n      const sceneDeltaY = deltaY / this.getZoomFactor();\n\n      this.viewPosition.scrollBy(-sceneDeltaX, -sceneDeltaY);\n\n      if (this.props.onViewPositionChanged) {\n        this.props.onViewPositionChanged(this.viewPosition);\n      }\n    } else {\n      this.selectionRectangle.updateSelectionRectangle(x, y);\n    }\n  };\n\n  _getLayersVisibility = () => {\n    const { layout } = this.props;\n    const layersVisibility = {};\n    for (let i = 0; i < layout.getLayersCount(); i++) {\n      layersVisibility[layout.getLayerAt(i).getName()] = layout\n        .getLayerAt(i)\n        .getVisibility();\n    }\n    return layersVisibility;\n  };\n\n  _onPanEnd = () => {\n    // When a pan is ended, this can be that either the user was making\n    // a selection, or that the user was moving the view.\n    if (this.selectionRectangle.hasStartedSelectionRectangle()) {\n      let instancesSelected = this.selectionRectangle.endSelectionRectangle();\n\n      this.props.instancesSelection.selectInstances(\n        instancesSelected,\n        this.keyboardShortcuts.shouldMultiSelect(),\n        this._getLayersVisibility()\n      );\n      instancesSelected = this.props.instancesSelection.getSelectedInstances();\n      this.props.onInstancesSelected(instancesSelected);\n    }\n  };\n\n  _onInstanceClicked = (instance: gdInitialInstance) => {\n    this.pixiRenderer.view.focus();\n  };\n\n  _onInstanceDoubleClicked = (instance: gdInitialInstance) => {\n    this.props.onInstanceDoubleClicked(instance);\n  };\n\n  _onOverInstance = (instance: gdInitialInstance) => {\n    this.highlightedInstance.setInstance(instance);\n  };\n\n  _onDownInstance = (instance: gdInitialInstance) => {\n    if (this.keyboardShortcuts.shouldMoveView()) {\n      // If the user wants to move the view, discard the click on an instance:\n      // it's just the beginning of the user panning the view.\n      return;\n    }\n\n    if (this.keyboardShortcuts.shouldCloneInstances()) {\n      const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n      for (var i = 0; i < selectedInstances.length; i++) {\n        const instance = selectedInstances[i];\n        this.props.initialInstances\n          .insertInitialInstance(instance)\n          .resetPersistentUuid();\n      }\n    } else {\n      this.props.instancesSelection.selectInstance(\n        instance,\n        this.keyboardShortcuts.shouldMultiSelect(),\n        this._getLayersVisibility()\n      );\n\n      if (this.props.onInstancesSelected) {\n        this.props.onInstancesSelected(\n          this.props.instancesSelection.getSelectedInstances()\n        );\n      }\n    }\n  };\n\n  _onOutInstance = (instance: gdInitialInstance) => {\n    if (instance === this.highlightedInstance.getInstance())\n      this.highlightedInstance.setInstance(null);\n  };\n\n  _onMoveInstance = (\n    instance: gdInitialInstance,\n    deltaX: number,\n    deltaY: number\n  ) => {\n    const sceneDeltaX = deltaX / this.getZoomFactor();\n    const sceneDeltaY = deltaY / this.getZoomFactor();\n\n    // It is possible for the user to start moving an instance, then press the button\n    // to move the view, move it, then unpress it and continue to move the instance.\n    // This means that while we're in \"_onMoveInstance\", we must handle view moving.\n    if (this.keyboardShortcuts.shouldMoveView()) {\n      this.viewPosition.scrollBy(-sceneDeltaX, -sceneDeltaY);\n\n      if (this.props.onViewPositionChanged) {\n        this.props.onViewPositionChanged(this.viewPosition);\n      }\n      return;\n    }\n\n    if (!this.props.instancesSelection.isInstanceSelected(instance)) {\n      this._onInstanceClicked(instance);\n    }\n\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    this.instancesMover.moveBy(\n      selectedInstances,\n      sceneDeltaX,\n      sceneDeltaY,\n      this.keyboardShortcuts.shouldFollowAxis(),\n      this.keyboardShortcuts.shouldNotSnapToGrid()\n    );\n  };\n\n  _onMoveInstanceEnd = () => {\n    this.instancesMover.endMove();\n\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    this.props.onInstancesMoved(selectedInstances);\n  };\n\n  _onResize = (deltaX: number | null, deltaY: number | null) => {\n    const sceneDeltaX = deltaX !== null ? deltaX / this.getZoomFactor() : 0;\n    const sceneDeltaY = deltaY !== null ? deltaY / this.getZoomFactor() : 0;\n\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    const forceProportional =\n      this.props.screenType === 'touch' && deltaX !== null && deltaY !== null;\n    const proportional =\n      forceProportional || this.keyboardShortcuts.shouldResizeProportionally();\n    this.instancesResizer.resizeBy(\n      selectedInstances,\n      sceneDeltaX,\n      sceneDeltaY,\n      proportional\n    );\n  };\n\n  _onResizeEnd = () => {\n    this.instancesResizer.endResize();\n\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    this.props.onInstancesResized(selectedInstances);\n  };\n\n  _onRotate = (deltaX: number, deltaY: number) => {\n    const sceneDeltaX = deltaX / this.getZoomFactor();\n    const sceneDeltaY = deltaY / this.getZoomFactor();\n\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    this.instancesRotator.rotateBy(\n      selectedInstances,\n      sceneDeltaX,\n      sceneDeltaY,\n      this.keyboardShortcuts.shouldResizeProportionally()\n    );\n  };\n\n  _onRotateEnd = () => {\n    this.instancesRotator.endRotate();\n\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    this.props.onInstancesRotated(selectedInstances);\n  };\n\n  clearHighlightedInstance = () => {\n    this.highlightedInstance.setInstance(null);\n  };\n\n  moveSelection = (x: number, y: number) => {\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    selectedInstances.forEach(instance => {\n      instance.setX(instance.getX() + x);\n      instance.setY(instance.getY() + y);\n    });\n    this.props.onInstancesMoved(selectedInstances);\n  };\n\n  scrollTo(x: number, y: number) {\n    this.viewPosition.scrollTo(x, y);\n  }\n\n  centerView() {\n    const x = this.props.project.getGameResolutionWidth() / 2;\n    const y = this.props.project.getGameResolutionHeight() / 2;\n    this.viewPosition.scrollTo(x, y);\n  }\n\n  centerViewOn(instances: Array<gdInitialInstance>) {\n    if (!instances.length) return;\n\n    this.viewPosition.scrollToInstance(instances[instances.length - 1]);\n    if (this.props.onViewPositionChanged) {\n      this.props.onViewPositionChanged(this.viewPosition);\n    }\n  }\n\n  getLastContextMenuSceneCoordinates = () => {\n    return this.viewPosition.toSceneCoordinates(\n      this.lastContextMenuX,\n      this.lastContextMenuY\n    );\n  };\n\n  getLastCursorSceneCoordinates = () => {\n    return this.viewPosition.toSceneCoordinates(\n      this.lastCursorX,\n      this.lastCursorY\n    );\n  };\n\n  getViewPosition = () /*: ?ViewPosition */ => {\n    return this.viewPosition;\n  };\n\n  _renderScene = () => {\n    // Protect against rendering scheduled after the component is unmounted.\n    if (this._unmounted) return;\n    if (this._renderingPaused) return;\n\n    // Avoid killing the CPU by limiting the rendering calls.\n    if (this.fpsLimiter.shouldUpdate()) {\n      this.backgroundColor.render();\n      this.viewPosition.render();\n      this.canvasCursor.render();\n      this.grid.render();\n      this.instancesRenderer.render();\n      this.highlightedInstance.render();\n      this.selectedInstances.render();\n      this.selectionRectangle.render();\n      this.windowBorder.render();\n      this.windowMask.render();\n      this.statusBar.render();\n      this.pixiRenderer.render(this.pixiContainer);\n    }\n    this.nextFrame = requestAnimationFrame(this._renderScene);\n  };\n\n  pauseSceneRendering = () => {\n    if (this.nextFrame) cancelAnimationFrame(this.nextFrame);\n    this._renderingPaused = true;\n\n    stopPIXITicker();\n  };\n\n  restartSceneRendering = () => {\n    this._renderingPaused = false;\n    this._renderScene();\n\n    startPIXITicker();\n  };\n\n  render() {\n    if (!this.props.project) return null;\n\n    return (\n      <DropTarget\n        canDrop={() => true}\n        hover={monitor => {\n          const { _instancesAdder, viewPosition, canvasArea } = this;\n          if (!_instancesAdder || !canvasArea || !viewPosition) return;\n\n          const { x, y } = monitor.getClientOffset();\n          const canvasRect = canvasArea.getBoundingClientRect();\n          const pos = viewPosition.toSceneCoordinates(\n            x - canvasRect.left,\n            y - canvasRect.top\n          );\n          _instancesAdder.createOrUpdateTemporaryInstancesFromObjectNames(\n            pos,\n            this.props.selectedObjectNames\n          );\n        }}\n        drop={monitor => {\n          const { _instancesAdder, viewPosition, canvasArea } = this;\n          if (!_instancesAdder || !canvasArea || !viewPosition) return;\n\n          if (monitor.didDrop()) {\n            // Drop was done somewhere else (in a child of the canvas:\n            // should not happen, but still handling this case).\n            _instancesAdder.deleteTemporaryInstances();\n            return;\n          }\n\n          const { x, y } = monitor.getClientOffset();\n          const canvasRect = canvasArea.getBoundingClientRect();\n          const pos = viewPosition.toSceneCoordinates(\n            x - canvasRect.left,\n            y - canvasRect.top\n          );\n          const instances = _instancesAdder.updateTemporaryInstancePositions(\n            pos\n          );\n          _instancesAdder.commitTemporaryInstances();\n          this.props.onInstancesAdded(instances);\n        }}\n      >\n        {({ connectDropTarget, isOver }) => {\n          // The children are re-rendered when isOver change:\n          // take this opportunity to delete any temporary instances\n          // if the dragging is not done anymore over the canvas.\n          if (this._instancesAdder && !isOver) {\n            this._instancesAdder.deleteTemporaryInstances();\n          }\n\n          return connectDropTarget(\n            <div\n              ref={canvasArea => (this.canvasArea = canvasArea)}\n              style={styles.canvasArea}\n            />\n          );\n        }}\n      </DropTarget>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { ToolbarGroup } from '../UI/Toolbar';\nimport ToolbarIcon from '../UI/ToolbarIcon';\nimport ToolbarSeparator from '../UI/ToolbarSeparator';\n\ntype Props = {|\n  onPlay: () => void,\n  canPlay: boolean,\n  onPause: () => void,\n  canPause: boolean,\n  onOpenProfiler: () => void,\n  canOpenProfiler: boolean,\n|};\n\nexport class Toolbar extends React.PureComponent<Props> {\n  render() {\n    const {\n      onPlay,\n      onPause,\n      canPlay,\n      canPause,\n      onOpenProfiler,\n      canOpenProfiler,\n    } = this.props;\n\n    return (\n      <ToolbarGroup lastChild>\n        <ToolbarIcon\n          onClick={onPlay}\n          src=\"res/ribbon_default/preview64.png\"\n          disabled={!canPlay}\n          tooltip={t`Play the game`}\n        />\n        <ToolbarIcon\n          onClick={onPause}\n          src=\"res/ribbon_default/pause64.png\"\n          disabled={!canPause}\n          tooltip={t`Pause the game`}\n        />\n        <ToolbarSeparator />\n        <ToolbarIcon\n          onClick={onOpenProfiler}\n          src=\"res/ribbon_default/profiler32.png\"\n          disabled={!canOpenProfiler}\n          tooltip={t`Open the performance profiler`}\n        />\n      </ToolbarGroup>\n    );\n  }\n}\n\nexport default Toolbar;\n","// @flow\nimport * as React from 'react';\nimport { List, ListItem } from '../UI/List';\nimport get from 'lodash/get';\nimport {\n  type InspectorDescription,\n  type InspectorDescriptionsGetter,\n  type GameData,\n} from './GDJSInspectorDescriptions';\n\ntype Props = {|\n  gameData: GameData,\n  getInspectorDescriptions: InspectorDescriptionsGetter,\n  onChooseInspector: (\n    InspectorDescription,\n    fullInspectorPath: Array<string>\n  ) => void,\n|};\n\nconst styles = {\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  list: {\n    overflowY: 'scroll',\n    flex: 1,\n  },\n};\n\n/**\n * Generate a visual list of inspectors, using gameData and getInspectorDescriptions\n */\nexport default class InspectorsList extends React.Component<Props, void> {\n  _renderInspectorList(\n    gameData: GameData,\n    getInspectorDescriptions: InspectorDescriptionsGetter,\n    path: Array<string>\n  ): Array<React$Element<any> | null> {\n    return getInspectorDescriptions(gameData).map(inspectorDescription => {\n      if (!inspectorDescription) return null;\n      const fullInspectorPath = path.concat(inspectorDescription.key);\n\n      const getSubInspectors = inspectorDescription.getSubInspectors;\n\n      return (\n        <ListItem\n          key={fullInspectorPath.join('.')}\n          primaryText={inspectorDescription.label}\n          initiallyOpen={!!inspectorDescription.initiallyOpen}\n          onClick={() =>\n            this.props.onChooseInspector(\n              inspectorDescription,\n              fullInspectorPath\n            )\n          }\n          renderNestedItems={\n            getSubInspectors\n              ? () =>\n                  this._renderInspectorList(\n                    get(gameData, inspectorDescription.key, null),\n                    getSubInspectors,\n                    fullInspectorPath\n                  )\n              : undefined\n          }\n        />\n      );\n    });\n  }\n\n  render() {\n    return this.props.gameData ? (\n      <List style={styles.list}>\n        {this._renderInspectorList(\n          this.props.gameData,\n          this.props.getInspectorDescriptions,\n          []\n        )}\n      </List>\n    ) : null;\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ReactJsonView from 'react-json-view';\nimport {\n  type GameData,\n  type EditFunction,\n  type CallFunction,\n} from '../GDJSInspectorDescriptions';\nimport mapValues from 'lodash/mapValues';\n\ntype Props = {|\n  variablesContainer: GameData,\n  onCall: CallFunction,\n  onEdit: EditFunction,\n|};\n\nconst transformVariable = variable => {\n  if (!variable) return null;\n\n  if (!variable._isStructure) {\n    return variable._stringDirty ? variable._value : variable._str;\n  } else {\n    if (!variable._children) return null;\n\n    return mapValues(variable._children, transformVariable);\n  }\n};\n\nconst transform = variablesContainer => {\n  if (\n    !variablesContainer ||\n    !variablesContainer._variables ||\n    !variablesContainer._variables.items\n  )\n    return null;\n\n  return mapValues(variablesContainer._variables.items, transformVariable);\n};\n\nconst handleEdit = (edit, { onCall, onEdit }: Props) => {\n  // Reconstruct the path to the variable to edit\n  const path = ['_variables', 'items'];\n  edit.namespace.forEach(variableName => {\n    path.push(variableName);\n    path.push('_children');\n  });\n  path.push(edit.name);\n\n  // Guess the type of the new value (number or string)\n  if (parseFloat(edit.new_value).toString() === edit.new_value) {\n    path.push('setNumber');\n    onCall(path, [parseFloat(edit.new_value)]);\n  } else {\n    path.push('setString');\n    onCall(path, ['' + edit.new_value]);\n  }\n\n  return true;\n};\n\nexport default (props: Props) => (\n  <ReactJsonView\n    collapsed={false}\n    name={false}\n    src={props.variablesContainer ? transform(props.variablesContainer) : null}\n    enableClipboard={false}\n    displayDataTypes={false}\n    displayObjectSize={false}\n    onEdit={edit => handleEdit(edit, props)}\n    groupArraysAfterLength={50}\n    theme=\"monokai\"\n  />\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport ReactJsonView from 'react-json-view';\nimport {\n  type GameData,\n  type EditFunction,\n  type CallFunction,\n} from '../GDJSInspectorDescriptions';\nimport VariablesContainerInspector from './VariablesContainerInspector';\nimport Text from '../../UI/Text';\n\ntype Props = {|\n  runtimeObject: GameData,\n  onCall: CallFunction,\n  onEdit: EditFunction,\n|};\n\nconst transform = runtimeObject => {\n  if (!runtimeObject) return null;\n  return {\n    'X position': runtimeObject.x,\n    'Y position': runtimeObject.y,\n    Angle: runtimeObject.angle,\n    Layer: runtimeObject.layer,\n    'Z order': runtimeObject.zOrder,\n    'Is hidden?': runtimeObject.hidden,\n  };\n};\n\nconst handleEdit = (edit, { onCall, onEdit }: Props) => {\n  if (edit.name === 'X position') {\n    onCall(['setX'], [parseFloat(edit.new_value)]);\n  } else if (edit.name === 'Y position') {\n    onCall(['setY'], [parseFloat(edit.new_value)]);\n  } else if (edit.name === 'Angle') {\n    onCall(['setAngle'], [parseFloat(edit.new_value)]);\n  } else if (edit.name === 'Layer') {\n    onCall(['setLayer'], [edit.new_value]);\n  } else if (edit.name === 'Z order') {\n    onCall(['setZOrder'], [parseFloat(edit.new_value)]);\n  } else if (edit.name === 'Is hidden?') {\n    onCall(['hide'], [!!edit.new_value]);\n  } else return false;\n\n  return true;\n};\n\nexport default (props: Props) => (\n  <React.Fragment>\n    <Text>\n      <Trans>General:</Trans>\n    </Text>\n    <ReactJsonView\n      collapsed={false}\n      name={false}\n      src={transform(props.runtimeObject)}\n      enableClipboard={false}\n      displayDataTypes={false}\n      displayObjectSize={false}\n      onEdit={edit => handleEdit(edit, props)}\n      groupArraysAfterLength={50}\n      theme=\"monokai\"\n    />\n    <Text>\n      <Trans>Instance variables:</Trans>\n    </Text>\n    <VariablesContainerInspector\n      variablesContainer={\n        props.runtimeObject ? props.runtimeObject._variables : null\n      }\n      // TODO: onEdit and onCall could benefit from a \"forward\" utility function\n      // (can also be applied in DebuggerContent.js)\n      onEdit={(path, newValue) =>\n        props.onEdit(['_variables'].concat(path), newValue)\n      }\n      onCall={(path, args) => props.onCall(['_variables'].concat(path), args)}\n    />\n  </React.Fragment>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport ReactJsonView from 'react-json-view';\nimport {\n  type GameData,\n  type EditFunction,\n  type CallFunction,\n} from '../GDJSInspectorDescriptions';\nimport { TextFieldWithButtonLayout } from '../../UI/Layout';\nimport mapValues from 'lodash/mapValues';\nimport RaisedButton from '../../UI/RaisedButton';\nimport SemiControlledAutoComplete from '../../UI/SemiControlledAutoComplete';\nimport Text from '../../UI/Text';\n\ntype Props = {|\n  runtimeScene: GameData,\n  onCall: CallFunction,\n  onEdit: EditFunction,\n|};\n\ntype State = {|\n  newObjectName: string,\n|};\n\nconst transformLayer = layer => {\n  if (!layer) return null;\n  return {\n    'Camera rotation (in deg)': layer._cameraRotation,\n    'Camera zoom': layer._zoomFactor,\n    'Layer is hidden': !!layer._hidden,\n    'Camera X position': layer._cameraX,\n    'Camera Y position': layer._cameraY,\n    'Time scale': layer._timeScale,\n  };\n};\n\nconst transform = runtimeScene => {\n  if (!runtimeScene) return null;\n\n  return {\n    'Time scale': runtimeScene._timeManager\n      ? runtimeScene._timeManager._timeScale\n      : null,\n    Layers:\n      runtimeScene._layers && runtimeScene._layers.items\n        ? mapValues(runtimeScene._layers.items, transformLayer)\n        : null,\n  };\n};\n\nconst handleEdit = (edit, { onCall, onEdit }: Props) => {\n  if (edit.namespace.length === 0 && edit.name === 'Time scale') {\n    onCall(['_timeManager', 'setTimeScale'], [parseFloat(edit.new_value)]);\n  } else if (edit.namespace.length >= 2) {\n    if (edit.namespace[0] === 'Layers') {\n      if (edit.name === 'Camera rotation (in deg)') {\n        onCall(\n          ['_layers', 'items', edit.namespace[1], 'setCameraRotation'],\n          [parseFloat(edit.new_value)]\n        );\n      } else if (edit.name === 'Camera zoom') {\n        onCall(\n          ['_layers', 'items', edit.namespace[1], 'setCameraZoom'],\n          [parseFloat(edit.new_value)]\n        );\n      } else if (edit.name === 'Layer is hidden') {\n        onCall(\n          ['_layers', 'items', edit.namespace[1], 'show'],\n          [!edit.new_value]\n        );\n      } else if (edit.name === 'Camera X position') {\n        onCall(\n          ['_layers', 'items', edit.namespace[1], 'setCameraX'],\n          [parseFloat(edit.new_value)]\n        );\n      } else if (edit.name === 'Camera Y position') {\n        onCall(\n          ['_layers', 'items', edit.namespace[1], 'setCameraY'],\n          [parseFloat(edit.new_value)]\n        );\n      } else if (edit.name === 'Time scale') {\n        onCall(\n          ['_layers', 'items', edit.namespace[1], 'setTimeScale'],\n          [parseFloat(edit.new_value)]\n        );\n      }\n    }\n  } else return false;\n\n  return true;\n};\n\nexport default class RuntimeSceneInspector extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    newObjectName: '',\n  };\n\n  render() {\n    const { runtimeScene, onCall } = this.props;\n    if (!runtimeScene) return null;\n\n    return (\n      <React.Fragment>\n        <Text>\n          <Trans>Layers:</Trans>\n        </Text>\n        <ReactJsonView\n          collapsed={false}\n          name={false}\n          src={transform(runtimeScene)}\n          enableClipboard={false}\n          displayDataTypes={false}\n          displayObjectSize={false}\n          onEdit={edit => handleEdit(edit, this.props)}\n          groupArraysAfterLength={50}\n          theme=\"monokai\"\n        />\n        <Text>\n          <Trans>\n            Create a new instance on the scene (will be at position 0;0):\n          </Trans>\n        </Text>\n        {runtimeScene._objects && runtimeScene._objects.items && (\n          <TextFieldWithButtonLayout\n            noFloatingLabelText\n            renderTextField={() => (\n              <SemiControlledAutoComplete\n                hintText={t`Enter the name of the object`}\n                value={this.state.newObjectName}\n                onChange={value => {\n                  this.setState({\n                    newObjectName: value,\n                  });\n                }}\n                dataSource={Object.keys(runtimeScene._objects.items).map(\n                  objectName => ({\n                    text: objectName,\n                    value: objectName,\n                  })\n                )}\n                openOnFocus\n                fullWidth\n              />\n            )}\n            renderButton={style => (\n              <RaisedButton\n                style={style}\n                label={<Trans>Create</Trans>}\n                primary\n                onClick={() => {\n                  onCall(['createObject'], [this.state.newObjectName]);\n                }}\n              />\n            )}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport RuntimeObjectInspector from './Inspectors/RuntimeObjectInspector';\nimport VariablesContainerInspector from './Inspectors/VariablesContainerInspector';\nimport RuntimeSceneInspector from './Inspectors/RuntimeSceneInspector';\n\nexport type GameData = any;\nexport type EditFunction = (path: Array<string>, newValue: any) => boolean;\nexport type CallFunction = (path: Array<string>, args: Array<any>) => boolean;\n\nexport type InspectorDescriptionsGetter = (\n  gameData: GameData\n) => Array<InspectorDescription>; //eslint-disable-line\n\nexport type InspectorDescription = {|\n  label: string,\n  key: string | Array<string>,\n  renderInspector: (\n    gameData: GameData,\n    {\n      onCall: CallFunction,\n      onEdit: EditFunction,\n    }\n  ) => React.Node,\n  getSubInspectors?: InspectorDescriptionsGetter,\n  initiallyOpen?: boolean,\n|};\n\n/**\n * Returns the list of inspectors, given the data coming from a GDJS RuntimeGame.\n * @param {*} gdjsRuntimeGame\n */\nexport const getInspectorDescriptions = (\n  gdjsRuntimeGame: GameData\n): Array<InspectorDescription> => {\n  return [\n    {\n      label: 'Global variables',\n      key: '_variables',\n      renderInspector: (gameData, { onCall, onEdit }) => (\n        <VariablesContainerInspector\n          variablesContainer={gameData}\n          onCall={onCall}\n          onEdit={onEdit}\n        />\n      ),\n    },\n    {\n      label: 'Scenes',\n      key: ['_sceneStack', '_stack'],\n      renderInspector: () => null,\n      initiallyOpen: true,\n      getSubInspectors: gdjsStack => {\n        if (!gdjsStack) return [];\n\n        return gdjsStack.map((runtimeScene, index) => ({\n          label: runtimeScene._name,\n          key: index,\n          renderInspector: (gameData, { onCall, onEdit }) => (\n            <RuntimeSceneInspector\n              runtimeScene={gameData}\n              onCall={onCall}\n              onEdit={onEdit}\n            />\n          ),\n          initiallyOpen: true,\n          getSubInspectors: runtimeScene => [\n            {\n              label: 'Scene variables',\n              key: `_variables`,\n              renderInspector: (gameData, { onCall, onEdit }) => (\n                <VariablesContainerInspector\n                  variablesContainer={gameData}\n                  onCall={onCall}\n                  onEdit={onEdit}\n                />\n              ),\n            },\n            {\n              label: 'Instances',\n              key: `_instances`,\n              renderInspector: () => null,\n              initiallyOpen: true,\n              getSubInspectors: instances => {\n                if (!instances || !instances.items) return [];\n\n                return Object.keys(instances.items).map(objectName => {\n                  if (\n                    !instances.items[objectName] ||\n                    typeof instances.items[objectName].length === undefined\n                  )\n                    return null;\n\n                  return {\n                    label: `${objectName} (${\n                      instances.items[objectName].length\n                    })`,\n                    key: ['items', objectName],\n                    renderInspector: () => null,\n                    getSubInspectors: instancesList =>\n                      instancesList\n                        ? instancesList\n                            .filter(runtimeObject => !!runtimeObject)\n                            .map((runtimeObject, index) => {\n                              return {\n                                label: `#${runtimeObject.id}`,\n                                key: index,\n                                renderInspector: (\n                                  gameData,\n                                  { onCall, onEdit }\n                                ) => (\n                                  <RuntimeObjectInspector\n                                    runtimeObject={gameData}\n                                    onCall={onCall}\n                                    onEdit={onEdit}\n                                  />\n                                ),\n                              };\n                            })\n                        : [],\n                  };\n                });\n              },\n            },\n          ],\n        }));\n      },\n    },\n  ];\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport ReactJsonView from 'react-json-view';\nimport { type GameData } from '../GDJSInspectorDescriptions';\nimport EmptyMessage from '../../UI/EmptyMessage';\n\ntype Props = {|\n  gameData: GameData,\n  onEdit: (path: Array<string>, newValue: any) => boolean,\n|};\n\n/**\n * A very simple inspector that display the raw information given by the gameData\n * object.\n */\nexport default ({ gameData, onEdit }: Props) => (\n  <React.Fragment>\n    <EmptyMessage>\n      <Trans>\n        You are in raw mode. You can edit the fields, but be aware that this can\n        lead to unexpected results or even crash the debugged game!\n      </Trans>\n    </EmptyMessage>\n    <ReactJsonView\n      collapsed={1}\n      name={false}\n      src={gameData}\n      onEdit={edit => {\n        return onEdit(edit.namespace.concat(edit.name), edit.new_value);\n      }}\n      groupArraysAfterLength={50}\n      theme=\"monokai\"\n    />\n  </React.Fragment>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { AutoSizer, Table, Column } from 'react-virtualized';\nimport ThemeConsumer from '../../UI/Theme/ThemeConsumer';\nimport flatMap from 'lodash/flatMap';\nimport { type ProfilerMeasuresSection } from '..';\nimport IconButton from '../../UI/IconButton';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\n\nconst styles = {\n  indent: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n};\n\ntype Props = {|\n  profilerMeasures: ?ProfilerMeasuresSection,\n|};\n\ntype ProfilerRowData = {|\n  name: string,\n  time: string,\n  parentPercent: string,\n  totalPercent: string,\n  depth: number,\n  hasSubsections: boolean,\n  path: string,\n  isCollapsed: boolean,\n|};\n\ntype State = {|\n  collapsedPaths: { [string]: boolean },\n|};\n\nexport default class MeasuresTable extends React.Component<Props, State> {\n  state = {\n    collapsedPaths: {},\n  };\n\n  _convertToDataRows = (\n    name: string,\n    parentSection: ?ProfilerMeasuresSection,\n    section: ProfilerMeasuresSection,\n    depth: number = 0,\n    path: string = ''\n  ): Array<ProfilerRowData> => {\n    const { profilerMeasures } = this.props;\n\n    const parentPercent =\n      parentSection && section.time && parentSection.time !== 0\n        ? (section.time / parentSection.time) * 100\n        : 100;\n    const totalPercent =\n      profilerMeasures && section.time && profilerMeasures.time !== 0\n        ? (section.time / profilerMeasures.time) * 100\n        : 100;\n    const isCollapsed = this._isSectionCollapsed(path);\n\n    return [\n      {\n        name,\n        time: section.time ? `${section.time.toFixed(2)}ms` : '?',\n        parentPercent: `${parentPercent.toFixed(2)}%`,\n        totalPercent: `${totalPercent.toFixed(2)}%`,\n        depth,\n        hasSubsections: !!Object.keys(section.subsections).length,\n        path,\n        isCollapsed,\n      },\n      ...(isCollapsed\n        ? []\n        : flatMap(section.subsections, (subsection, subsectionName) =>\n            this._convertToDataRows(\n              subsectionName,\n              section,\n              subsection,\n              depth + 1,\n              `${path}>${depth}.${subsectionName}`\n            )\n          )),\n    ];\n  };\n\n  _isSectionCollapsed = (path: string) => {\n    return this.state.collapsedPaths[path];\n  };\n\n  _toggleSection = (path: string) => {\n    this.setState(state => ({\n      collapsedPaths: {\n        ...state.collapsedPaths,\n        [path]: !state.collapsedPaths[path],\n      },\n    }));\n  };\n\n  _rowClassName = ({ index }: { index: number }) => {\n    if (index < 0) {\n      return 'tableHeaderRow';\n    } else {\n      return index % 2 === 0 ? 'tableEvenRow' : 'tableOddRow';\n    }\n  };\n\n  _renderSectionNameCell = ({ rowData }: { rowData: ProfilerRowData }) => {\n    return (\n      <div style={styles.indent}>\n        <div style={{ width: rowData.depth * 8 }} />\n        {rowData.hasSubsections ? (\n          <IconButton onClick={() => this._toggleSection(rowData.path)}>\n            {rowData.isCollapsed ? <ChevronRight /> : <ExpandMore />}\n          </IconButton>\n        ) : (\n          <div style={{ width: 24 }} />\n        )}\n        {rowData.name}\n      </div>\n    );\n  };\n\n  render() {\n    const { profilerMeasures } = this.props;\n    if (!profilerMeasures) return null;\n\n    const dataRows = this._convertToDataRows('All', null, profilerMeasures);\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <AutoSizer>\n            {({ height, width }) => (\n              <Table\n                headerHeight={30}\n                height={height}\n                className={`gd-table ${muiTheme.tableRootClassName}`}\n                headerClassName={'tableHeaderColumn'}\n                rowCount={dataRows.length}\n                rowGetter={({ index }) => dataRows[index]}\n                rowHeight={35}\n                onRowClick={() => {}}\n                rowClassName={this._rowClassName}\n                width={width}\n              >\n                <Column\n                  label={<Trans>Section name</Trans>}\n                  dataKey=\"name\"\n                  width={width * 0.4}\n                  className={'tableColumn'}\n                  cellRenderer={this._renderSectionNameCell}\n                />\n                <Column\n                  label={<Trans>Time (ms)</Trans>}\n                  dataKey=\"time\"\n                  width={width * 0.2}\n                  className={'tableColumn'}\n                />\n                <Column\n                  label={<Trans>% of parent</Trans>}\n                  dataKey=\"parentPercent\"\n                  width={width * 0.2}\n                  className={'tableColumn'}\n                />\n                <Column\n                  label={<Trans>% of total</Trans>}\n                  dataKey=\"totalPercent\"\n                  width={width * 0.2}\n                  className={'tableColumn'}\n                />\n              </Table>\n            )}\n          </AutoSizer>\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport MeasuresTable from './MeasuresTable';\nimport { type ProfilerOutput } from '..';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport { Line } from '../../UI/Grid';\nimport Background from '../../UI/Background';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Text from '../../UI/Text';\n\nconst styles = {\n  tableContainer: {\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  onStart: () => void,\n  onStop: () => void,\n  profilerOutput: ?ProfilerOutput,\n  profilingInProgress: boolean,\n|};\n\nexport default class Profiler extends React.Component<Props, void> {\n  render() {\n    const { onStart, onStop, profilerOutput, profilingInProgress } = this.props;\n\n    return (\n      <Background>\n        <Line alignItems=\"center\" justifyContent=\"center\">\n          {!profilingInProgress && profilerOutput && (\n            <Text>\n              <Trans>\n                Last run collected on {profilerOutput.stats.framesCount} frames.\n              </Trans>\n            </Text>\n          )}\n          {!profilingInProgress && profilerOutput && (\n            <RaisedButton label={<Trans>Restart</Trans>} onClick={onStart} />\n          )}\n          {!profilingInProgress && !profilerOutput && (\n            <RaisedButton\n              label={<Trans>Start profiling</Trans>}\n              onClick={onStart}\n            />\n          )}\n          {profilingInProgress && (\n            <RaisedButton\n              label={<Trans>Stop profiling</Trans>}\n              onClick={onStop}\n            />\n          )}\n        </Line>\n        {profilingInProgress && (\n          <Line alignItems=\"center\">\n            <LinearProgress style={{ flex: 1 }} variant={'indeterminate'} />\n          </Line>\n        )}\n        <div style={styles.tableContainer}>\n          {profilerOutput && (\n            <MeasuresTable\n              profilerMeasures={profilerOutput.framesAverageMeasures}\n            />\n          )}\n          {!profilerOutput && (\n            <EmptyMessage>\n              <Trans>\n                Start profiling and then stop it after a few seconds to see the\n                results.\n              </Trans>\n            </EmptyMessage>\n          )}\n        </div>\n      </Background>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport EditorMosaic from '../UI/EditorMosaic';\nimport Background from '../UI/Background';\nimport get from 'lodash/get';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Column, Line } from '../UI/Grid';\nimport InspectorsList from './InspectorsList';\nimport {\n  getInspectorDescriptions,\n  type InspectorDescription,\n  type EditFunction,\n  type CallFunction,\n} from './GDJSInspectorDescriptions';\nimport RawContentInspector from './Inspectors/RawContentInspector';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport Checkbox from '../UI/Checkbox';\nimport Flash from '@material-ui/icons/FlashOn';\nimport FlashOff from '@material-ui/icons/FlashOff';\nimport HelpButton from '../UI/HelpButton';\nimport Profiler from './Profiler';\nimport { type ProfilerOutput } from '.';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport MiniToolbar from '../UI/MiniToolbar';\nimport ScrollView from '../UI/ScrollView';\n\ntype Props = {|\n  gameData: ?any,\n  onEdit: EditFunction,\n  onCall: CallFunction,\n  onPlay: () => void,\n  onPause: () => void,\n  onRefresh: () => void,\n  onStartProfiler: () => void,\n  onStopProfiler: () => void,\n  profilerOutput: ?ProfilerOutput,\n  profilingInProgress: boolean,\n|};\n\ntype State = {|\n  selectedInspector: ?InspectorDescription,\n  selectedInspectorFullPath: Array<string>,\n  rawMode: boolean,\n|};\n\nconst initialMosaicEditorNodes = {\n  direction: 'column',\n  first: {\n    direction: 'row',\n    first: 'inspectors',\n    second: 'selected-inspector',\n    splitPercentage: 25,\n  },\n  second: 'profiler',\n  splitPercentage: 65,\n};\n\n/**\n * The debugger interface: show the list of inspectors for a game, along with the\n * currently selected inspector.\n */\nexport default class DebuggerContent extends React.Component<Props, State> {\n  state = {\n    selectedInspector: null,\n    selectedInspectorFullPath: [],\n    rawMode: false,\n  };\n\n  _editors: ?EditorMosaic = null;\n\n  openProfiler = () => {\n    if (this._editors) this._editors.openEditor('profiler', 'end', 75, 'row');\n  };\n\n  render() {\n    const {\n      gameData,\n      onRefresh,\n      onCall,\n      onEdit,\n      onStartProfiler,\n      onStopProfiler,\n      profilerOutput,\n      profilingInProgress,\n    } = this.props;\n    const {\n      selectedInspector,\n      selectedInspectorFullPath,\n      rawMode,\n    } = this.state;\n\n    const editors = {\n      inspectors: {\n        type: 'primary',\n        title: t`Inspectors`,\n        toolbarControls: [],\n        renderEditor: () => (\n          <Background>\n            <Column expand noMargin useFullHeight>\n              <Line justifyContent=\"center\">\n                <RaisedButton\n                  label={<Trans>Refresh</Trans>}\n                  onClick={onRefresh}\n                  primary\n                />\n              </Line>\n              <InspectorsList\n                gameData={gameData}\n                getInspectorDescriptions={getInspectorDescriptions}\n                onChooseInspector={(\n                  selectedInspector,\n                  selectedInspectorFullPath\n                ) =>\n                  this.setState({\n                    selectedInspector,\n                    selectedInspectorFullPath,\n                  })\n                }\n              />\n            </Column>\n          </Background>\n        ),\n      },\n      'selected-inspector': {\n        type: 'primary',\n        noTitleBar: true,\n        renderEditor: () => (\n          <Background>\n            <ScrollView>\n              <Column>\n                {selectedInspector ? (\n                  rawMode ? (\n                    <RawContentInspector\n                      gameData={get(gameData, selectedInspectorFullPath, null)}\n                      onEdit={(path, newValue) =>\n                        onEdit(selectedInspectorFullPath.concat(path), newValue)\n                      }\n                    />\n                  ) : (\n                    selectedInspector.renderInspector(\n                      get(gameData, selectedInspectorFullPath, null),\n                      {\n                        onCall: (path, args) =>\n                          onCall(selectedInspectorFullPath.concat(path), args),\n                        onEdit: (path, newValue) =>\n                          onEdit(\n                            selectedInspectorFullPath.concat(path),\n                            newValue\n                          ),\n                      }\n                    ) || (\n                      <EmptyMessage>\n                        <Trans>\n                          No inspector, choose another element in the list or\n                          toggle the raw data view.\n                        </Trans>\n                      </EmptyMessage>\n                    )\n                  )\n                ) : (\n                  <EmptyMessage>\n                    {gameData ? (\n                      <Trans>Choose an element to inspect in the list</Trans>\n                    ) : (\n                      <Trans>\n                        Pause the game (from the toolbar) or hit refresh (on the\n                        left) to inspect the game\n                      </Trans>\n                    )}\n                  </EmptyMessage>\n                )}\n              </Column>\n            </ScrollView>\n            <MiniToolbar>\n              <Line justifyContent=\"space-between\" alignItems=\"center\" noMargin>\n                <HelpButton helpPagePath=\"/interface/debugger\" />\n                <div>\n                  <Checkbox\n                    checkedIcon={<Flash />}\n                    uncheckedIcon={<FlashOff />}\n                    checked={rawMode}\n                    onCheck={(e, enabled) =>\n                      this.setState({\n                        rawMode: enabled,\n                      })\n                    }\n                  />\n                </div>\n              </Line>\n            </MiniToolbar>\n          </Background>\n        ),\n      },\n      profiler: {\n        type: 'secondary',\n        title: t`Profiler`,\n        renderEditor: () => (\n          <Profiler\n            onStart={onStartProfiler}\n            onStop={onStopProfiler}\n            profilerOutput={profilerOutput}\n            profilingInProgress={profilingInProgress}\n          />\n        ),\n      },\n    };\n\n    return (\n      <PreferencesContext.Consumer>\n        {({ getDefaultEditorMosaicNode, setDefaultEditorMosaicNode }) => (\n          <EditorMosaic\n            ref={editors => (this._editors = editors)}\n            editors={editors}\n            initialNodes={\n              getDefaultEditorMosaicNode('debugger') || initialMosaicEditorNodes\n            }\n            onPersistNodes={node =>\n              setDefaultEditorMosaicNode('debugger', node)\n            }\n          />\n        )}\n      </PreferencesContext.Consumer>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport { type DebuggerId } from '../Export/PreviewLauncher.flow';\n\ntype Props = {|\n  selectedId: DebuggerId,\n  debuggerIds: Array<DebuggerId>,\n  onChooseDebugger: DebuggerId => void,\n|};\n\nexport default class DebuggerSelector extends React.Component<Props, void> {\n  render() {\n    const hasDebuggers = !!this.props.debuggerIds.length;\n    return (\n      <SelectField\n        fullWidth\n        value={hasDebuggers ? this.props.selectedId : 0}\n        onChange={(e, i, value) =>\n          this.props.onChooseDebugger(parseInt(value, 10) || 0)\n        }\n        disabled={!hasDebuggers}\n      >\n        {this.props.debuggerIds.map(id => (\n          <SelectOption\n            value={id}\n            key={id}\n            primaryText={t`Game preview #${id}`}\n          />\n        ))}\n        {!hasDebuggers && (\n          <SelectOption\n            value={0}\n            primaryText={t`No preview running. Run a preview and you will be able to inspect it with the debugger`}\n          />\n        )}\n      </SelectField>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Toolbar from './Toolbar';\nimport DebuggerContent from './DebuggerContent';\nimport DebuggerSelector from './DebuggerSelector';\nimport { Column } from '../UI/Grid';\nimport Text from '../UI/Text';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport PlaceholderMessage from '../UI/PlaceholderMessage';\nimport Background from '../UI/Background';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport {\n  type PreviewDebuggerServer,\n  type DebuggerId,\n} from '../Export/PreviewLauncher.flow';\n\nexport type ProfilerMeasuresSection = {|\n  time: number,\n  subsections: { [string]: ProfilerMeasuresSection },\n|};\n\nexport type ProfilerOutput = {|\n  framesAverageMeasures: ProfilerMeasuresSection,\n  stats: {\n    framesCount: number,\n  },\n|};\n\ntype Props = {|\n  project: gdProject,\n  setToolbar: React.Node => void,\n  isActive: boolean,\n  previewDebuggerServer: PreviewDebuggerServer,\n|};\n\ntype State = {|\n  debuggerServerState: 'started' | 'stopped',\n  debuggerServerError: ?any,\n  debuggerIds: Array<DebuggerId>,\n  unregisterDebuggerServerCallbacks: ?() => void,\n\n  debuggerGameData: { [DebuggerId]: any },\n  profilerOutputs: { [DebuggerId]: ProfilerOutput },\n  profilingInProgress: { [DebuggerId]: boolean },\n  selectedId: DebuggerId,\n|};\n\n/**\n * Start the debugger server, listen to commands received and issue commands to it.\n * This is only supported on Electron runtime for now.\n */\nexport default class Debugger extends React.Component<Props, State> {\n  state = {\n    debuggerServerState: this.props.previewDebuggerServer.getServerState(),\n    debuggerServerError: null,\n    debuggerIds: this.props.previewDebuggerServer.getExistingDebuggerIds(),\n    unregisterDebuggerServerCallbacks: null,\n    debuggerGameData: {},\n    profilerOutputs: {},\n    profilingInProgress: {},\n    selectedId: 0,\n  };\n\n  _debuggerContents: { [DebuggerId]: ?DebuggerContent } = {};\n\n  updateToolbar() {\n    if (!this.props.isActive) return;\n\n    this.props.setToolbar(\n      <Toolbar\n        onPlay={() => this._play(this.state.selectedId)}\n        onPause={() => this._pause(this.state.selectedId)}\n        canPlay={this._hasSelectedDebugger()}\n        canPause={this._hasSelectedDebugger()}\n        canOpenProfiler={this._hasSelectedDebugger()}\n        onOpenProfiler={() => {\n          if (this._debuggerContents[this.state.selectedId])\n            this._debuggerContents[this.state.selectedId].openProfiler();\n        }}\n      />\n    );\n  }\n\n  componentDidMount() {\n    if (this.props.isActive) {\n      this._startServer();\n    }\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.isActive && !this.props.isActive) {\n      this._startServer();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.unregisterDebuggerServerCallbacks) {\n      this.state.unregisterDebuggerServerCallbacks();\n    }\n  }\n\n  _startServer = () => {\n    const { previewDebuggerServer } = this.props;\n    const { unregisterDebuggerServerCallbacks } = this.state;\n    if (\n      unregisterDebuggerServerCallbacks &&\n      previewDebuggerServer.getServerState() === 'started'\n    )\n      return; // Server already started and callbacks registered\n\n    if (unregisterDebuggerServerCallbacks) unregisterDebuggerServerCallbacks(); // Unregister old callbacks, if any\n\n    // Register new callbacks\n    const unregisterCallbacks = previewDebuggerServer.registerCallbacks({\n      onErrorReceived: err => {\n        this.setState(\n          {\n            debuggerServerError: err,\n          },\n          () => this.updateToolbar()\n        );\n      },\n      onConnectionClosed: ({ id, debuggerIds }) => {\n        this.setState(\n          ({ selectedId }) => ({\n            debuggerIds,\n            selectedId:\n              selectedId !== id\n                ? selectedId\n                : debuggerIds.length\n                ? debuggerIds[debuggerIds.length - 1]\n                : selectedId,\n          }),\n          () => this.updateToolbar()\n        );\n      },\n      onConnectionOpened: ({ id, debuggerIds }) => {\n        this.setState(\n          {\n            debuggerIds,\n            selectedId: id,\n          },\n          () => this.updateToolbar()\n        );\n      },\n      onServerStateChanged: () => {\n        this.setState(\n          {\n            debuggerServerState: previewDebuggerServer.getServerState(),\n          },\n          () => this.updateToolbar()\n        );\n      },\n      onHandleParsedMessage: ({ id, parsedMessage }) => {\n        this._handleMessage(id, parsedMessage);\n      },\n    });\n    previewDebuggerServer.startServer();\n    this.setState({\n      unregisterDebuggerServerCallbacks: unregisterCallbacks,\n    });\n  };\n\n  _handleMessage = (id: DebuggerId, data: any) => {\n    if (data.command === 'dump') {\n      this.setState({\n        debuggerGameData: {\n          ...this.state.debuggerGameData,\n          [id]: data.payload,\n        },\n      });\n    } else if (data.command === 'profiler.output') {\n      this.setState({\n        profilerOutputs: {\n          ...this.state.profilerOutputs,\n          [id]: data.payload,\n        },\n      });\n    } else if (data.command === 'profiler.started') {\n      this.setState(state => ({\n        profilingInProgress: { ...state.profilingInProgress, [id]: true },\n      }));\n    } else if (data.command === 'profiler.stopped') {\n      this.setState(state => ({\n        profilingInProgress: { ...state.profilingInProgress, [id]: false },\n      }));\n    } else if (data.command === 'hotReloader.logs') {\n      // Nothing to do.\n    } else {\n      console.warn(\n        'Unknown command received from debugger client:',\n        data.command\n      );\n    }\n  };\n\n  _play = (id: DebuggerId) => {\n    const { previewDebuggerServer } = this.props;\n    previewDebuggerServer.sendMessage(id, { command: 'play' });\n  };\n\n  _pause = (id: DebuggerId) => {\n    const { previewDebuggerServer } = this.props;\n    previewDebuggerServer.sendMessage(id, { command: 'pause' });\n  };\n\n  _refresh = (id: DebuggerId) => {\n    const { previewDebuggerServer } = this.props;\n    previewDebuggerServer.sendMessage(id, { command: 'refresh' });\n  };\n\n  _edit = (id: DebuggerId, path: Array<string>, newValue: any) => {\n    const { previewDebuggerServer } = this.props;\n    previewDebuggerServer.sendMessage(id, {\n      command: 'set',\n      path,\n      newValue,\n    });\n\n    setTimeout(() => this._refresh(id), 100);\n    return true;\n  };\n\n  _call = (id: DebuggerId, path: Array<string>, args: Array<any>) => {\n    const { previewDebuggerServer } = this.props;\n    previewDebuggerServer.sendMessage(id, {\n      command: 'call',\n      path,\n      args,\n    });\n\n    setTimeout(() => this._refresh(id), 100);\n    return true;\n  };\n\n  _startProfiler = (id: DebuggerId) => {\n    const { previewDebuggerServer } = this.props;\n    previewDebuggerServer.sendMessage(id, { command: 'profiler.start' });\n  };\n\n  _stopProfiler = (id: DebuggerId) => {\n    const { previewDebuggerServer } = this.props;\n    previewDebuggerServer.sendMessage(id, { command: 'profiler.stop' });\n  };\n\n  _hasSelectedDebugger = () => {\n    const { selectedId, debuggerIds } = this.state;\n    return debuggerIds.indexOf(selectedId) !== -1;\n  };\n\n  render() {\n    const {\n      debuggerServerError,\n      debuggerServerState,\n      selectedId,\n      debuggerIds,\n      debuggerGameData,\n      profilerOutputs,\n      profilingInProgress,\n    } = this.state;\n\n    return (\n      <Background>\n        {debuggerServerState === 'stopped' && !debuggerServerError && (\n          <PlaceholderMessage>\n            <PlaceholderLoader />\n            <Text>\n              <Trans>Debugger is starting...</Trans>\n            </Text>\n          </PlaceholderMessage>\n        )}\n        {debuggerServerState === 'stopped' && debuggerServerError && (\n          <PlaceholderMessage>\n            <Text>\n              <Trans>\n                Unable to start the debugger server! Make sure that you are\n                authorized to run servers on this computer.\n              </Trans>\n            </Text>\n          </PlaceholderMessage>\n        )}\n        {debuggerServerState === 'started' && (\n          <Column expand noMargin>\n            <DebuggerSelector\n              selectedId={selectedId}\n              debuggerIds={debuggerIds}\n              onChooseDebugger={id =>\n                this.setState(\n                  {\n                    selectedId: id,\n                  },\n                  () => this.updateToolbar()\n                )\n              }\n            />\n            {this._hasSelectedDebugger() && (\n              <DebuggerContent\n                ref={debuggerContent =>\n                  (this._debuggerContents[selectedId] = debuggerContent)\n                }\n                gameData={debuggerGameData[selectedId]}\n                onPlay={() => this._play(selectedId)}\n                onPause={() => this._pause(selectedId)}\n                onRefresh={() => this._refresh(selectedId)}\n                onEdit={(path, args) => this._edit(selectedId, path, args)}\n                onCall={(path, args) => this._call(selectedId, path, args)}\n                onStartProfiler={() => this._startProfiler(selectedId)}\n                onStopProfiler={() => this._stopProfiler(selectedId)}\n                profilerOutput={profilerOutputs[selectedId]}\n                profilingInProgress={profilingInProgress[selectedId]}\n              />\n            )}\n            {!this._hasSelectedDebugger() && (\n              <EmptyMessage>\n                <Trans>\n                  Run a preview and you will be able to inspect it with the\n                  debugger.\n                </Trans>\n              </EmptyMessage>\n            )}\n          </Column>\n        )}\n      </Background>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Debugger from '../../Debugger';\nimport {\n  type RenderEditorContainerProps,\n  type RenderEditorContainerPropsWithRef,\n} from './BaseEditor';\nimport SubscriptionChecker from '../../Profile/SubscriptionChecker';\n\ntype State = {|\n  subscriptionChecked: boolean,\n|};\n\nexport class DebuggerEditorContainer extends React.Component<\n  RenderEditorContainerProps,\n  State\n> {\n  editor: ?Debugger;\n  _subscriptionChecker: ?SubscriptionChecker;\n  state = {\n    subscriptionChecked: false,\n  };\n\n  shouldComponentUpdate(nextProps: RenderEditorContainerProps) {\n    // Prevent any update to the editor if the editor is not active,\n    // and so not visible to the user.\n    return nextProps.isActive;\n  }\n\n  getProject(): ?gdProject {\n    return this.props.project;\n  }\n\n  getLayout(): ?gdLayout {\n    return null;\n  }\n\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  forceUpdateEditor() {\n    // No updates to be done.\n  }\n\n  componentWillReceiveProps() {\n    this._checkHasSubscription();\n  }\n\n  componentDidMount() {\n    this._checkHasSubscription();\n  }\n\n  _checkHasSubscription() {\n    if (\n      this._subscriptionChecker &&\n      this.props.isActive &&\n      !this.state.subscriptionChecked\n    ) {\n      this._subscriptionChecker.checkHasSubscription();\n      this.setState({\n        subscriptionChecked: true,\n      });\n    }\n  }\n\n  render() {\n    const { project, previewDebuggerServer } = this.props;\n    if (!project || !previewDebuggerServer) return null;\n\n    return (\n      <React.Fragment>\n        <Debugger\n          project={project}\n          setToolbar={this.props.setToolbar}\n          isActive={this.props.isActive}\n          previewDebuggerServer={previewDebuggerServer}\n          ref={editor => (this.editor = editor)}\n        />\n        <SubscriptionChecker\n          ref={subscriptionChecker =>\n            (this._subscriptionChecker = subscriptionChecker)\n          }\n          onChangeSubscription={() => {\n            if (this.props.onChangeSubscription)\n              this.props.onChangeSubscription();\n          }}\n          id=\"Debugger\"\n          title={<Trans>Debugger</Trans>}\n          mode=\"try\"\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport const renderDebuggerEditorContainer = (\n  props: RenderEditorContainerPropsWithRef\n) => <DebuggerEditorContainer {...props} />;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport { Column, Line } from '../UI/Grid';\nimport { sendTutorialOpened } from '../Utils/Analytics/EventSender';\nimport Window from '../Utils/Window';\nimport { List, ListItem } from '../UI/List';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport Text from '../UI/Text';\nimport { getAllTutorialHints, type TutorialHint } from '../Hints';\nimport { I18n } from '@lingui/react';\nimport ListIcon from '../UI/ListIcon';\nimport RaisedButton from '../UI/RaisedButton';\nimport { getHelpLink } from '../Utils/HelpLink';\n\nconst TutorialListItem = ({\n  tutorialHint,\n  i18n,\n}: {|\n  tutorialHint: TutorialHint,\n  i18n: I18nType,\n|}) => {\n  return (\n    <ListItem\n      leftIcon={\n        tutorialHint.iconSrc ? (\n          <ListIcon\n            iconWidth={120}\n            iconHeight={60}\n            src={tutorialHint.iconSrc}\n          />\n        ) : null\n      }\n      primaryText={tutorialHint.name}\n      secondaryText={i18n._(tutorialHint.message)}\n      onClick={() => {\n        sendTutorialOpened(tutorialHint.identifier);\n        Window.openExternalURL(tutorialHint.link);\n      }}\n    />\n  );\n};\n\nexport default function Tutorials() {\n  const allTutorials = getAllTutorialHints();\n  const featuredForGettingStartedTutorials = allTutorials.filter(\n    tutorialHint => {\n      return !!tutorialHint.featuredForGettingStarted;\n    }\n  );\n  const videoTutorials = allTutorials.filter(tutorialHint => {\n    return (\n      !tutorialHint.featuredForGettingStarted &&\n      tutorialHint.kind === 'video-tutorial'\n    );\n  });\n  const nonVideoTutorials = allTutorials.filter(tutorialHint => {\n    return (\n      !tutorialHint.featuredForGettingStarted &&\n      tutorialHint.kind !== 'video-tutorial'\n    );\n  });\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <ColumnStackLayout noMargin>\n          <Column>\n            <Text>\n              <Trans>\n                Get started by following a tutorial, the best way to understand\n                how GDevelop works.\n              </Trans>\n            </Text>\n          </Column>\n          <Column expand noMargin>\n            <Column>\n              <Text size=\"title\" noMargin>\n                <Trans>Getting Started</Trans>\n              </Text>\n            </Column>\n            <List>\n              <List>\n                {featuredForGettingStartedTutorials.map(tutorialHint => (\n                  <TutorialListItem\n                    key={tutorialHint.identifier}\n                    tutorialHint={tutorialHint}\n                    i18n={i18n}\n                  />\n                ))}\n              </List>\n            </List>\n          </Column>\n          <Line justifyContent=\"center\" noMargin>\n            <RaisedButton\n              primary\n              label={<Trans>Open GDevelop documentation</Trans>}\n              onClick={() => {\n                Window.openExternalURL(getHelpLink('/'));\n              }}\n            />\n          </Line>\n          <Column noMargin>\n            <Column>\n              <Text size=\"title\" noMargin>\n                <Trans>Video Tutorials</Trans>\n              </Text>\n            </Column>\n            <List>\n              {videoTutorials.map(tutorialHint => (\n                <TutorialListItem\n                  key={tutorialHint.identifier}\n                  tutorialHint={tutorialHint}\n                  i18n={i18n}\n                />\n              ))}\n            </List>\n          </Column>\n          <Line justifyContent=\"center\" noMargin>\n            <RaisedButton\n              primary\n              label={<Trans>Find more on GDevelop Youtube channel</Trans>}\n              onClick={() => {\n                Window.openExternalURL('https://www.youtube.com/c/GDevelopApp');\n              }}\n            />\n          </Line>\n          <Column noMargin>\n            <Column>\n              <Text size=\"title\" noMargin>\n                <Trans>Other Community Tutorials</Trans>\n              </Text>\n            </Column>\n            <List>\n              <List>\n                {nonVideoTutorials.map(tutorialHint => (\n                  <TutorialListItem\n                    key={tutorialHint.identifier}\n                    tutorialHint={tutorialHint}\n                    i18n={i18n}\n                  />\n                ))}\n              </List>\n            </List>\n          </Column>\n        </ColumnStackLayout>\n      )}\n    </I18n>\n  );\n}\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M18.71,19.5C17.88,20.74 17,21.95 15.66,21.97C14.32,22 13.89,21.18 12.37,21.18C10.84,21.18 10.37,21.95 9.1,22C7.79,22.05 6.8,20.68 5.96,19.47C4.25,17 2.94,12.45 4.7,9.39C5.57,7.87 7.13,6.91 8.82,6.88C10.1,6.86 11.32,7.75 12.11,7.75C12.89,7.75 14.37,6.68 15.92,6.84C16.57,6.87 18.39,7.1 19.56,8.82C19.47,8.88 17.39,10.1 17.41,12.63C17.44,15.65 20.06,16.66 20.09,16.67C20.06,16.74 19.67,18.11 18.71,19.5M13,3.5C13.73,2.67 14.94,2.04 15.94,2C16.07,3.17 15.6,4.35 14.9,5.19C14.21,6.04 13.07,6.7 11.95,6.61C11.8,5.46 12.36,4.26 13,3.5Z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M3,20.5V3.5C3,2.91 3.34,2.39 3.84,2.15L13.69,12L3.84,21.85C3.34,21.6 3,21.09 3,20.5M16.81,15.12L6.05,21.34L14.54,12.85L16.81,15.12M20.16,10.81C20.5,11.08 20.75,11.5 20.75,12C20.75,12.5 20.53,12.9 20.18,13.18L17.89,14.5L15.39,12L17.89,9.5L20.16,10.81M6.05,2.66L16.81,8.88L14.54,11.15L6.05,2.66Z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22C7.4,22 3.55,18.92 2.36,14.73L6.19,16.31C6.45,17.6 7.6,18.58 8.97,18.58C10.53,18.58 11.8,17.31 11.8,15.75V15.62L15.2,13.19H15.28C17.36,13.19 19.05,11.5 19.05,9.42C19.05,7.34 17.36,5.65 15.28,5.65C13.2,5.65 11.5,7.34 11.5,9.42V9.47L9.13,12.93L8.97,12.92C8.38,12.92 7.83,13.1 7.38,13.41L2,11.2C2.43,6.05 6.73,2 12,2M8.28,17.17C9.08,17.5 10,17.13 10.33,16.33C10.66,15.53 10.28,14.62 9.5,14.29L8.22,13.76C8.71,13.58 9.26,13.57 9.78,13.79C10.31,14 10.72,14.41 10.93,14.94C11.15,15.46 11.15,16.04 10.93,16.56C10.5,17.64 9.23,18.16 8.15,17.71C7.65,17.5 7.27,17.12 7.06,16.67L8.28,17.17M17.8,9.42C17.8,10.81 16.67,11.94 15.28,11.94C13.9,11.94 12.77,10.81 12.77,9.42A2.5,2.5 0 0,1 15.28,6.91C16.67,6.91 17.8,8.04 17.8,9.42M13.4,9.42C13.4,10.46 14.24,11.31 15.29,11.31C16.33,11.31 17.17,10.46 17.17,9.42C17.17,8.38 16.33,7.53 15.29,7.53C14.24,7.53 13.4,8.38 13.4,9.42Z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M22.46,6C21.69,6.35 20.86,6.58 20,6.69C20.88,6.16 21.56,5.32 21.88,4.31C21.05,4.81 20.13,5.16 19.16,5.36C18.37,4.5 17.26,4 16,4C13.65,4 11.73,5.92 11.73,8.29C11.73,8.63 11.77,8.96 11.84,9.27C8.28,9.09 5.11,7.38 3,4.79C2.63,5.42 2.42,6.16 2.42,6.94C2.42,8.43 3.17,9.75 4.33,10.5C3.62,10.5 2.96,10.3 2.38,10C2.38,10 2.38,10 2.38,10.03C2.38,12.11 3.86,13.85 5.82,14.24C5.46,14.34 5.08,14.39 4.69,14.39C4.42,14.39 4.15,14.36 3.89,14.31C4.43,16 6,17.26 7.89,17.29C6.43,18.45 4.58,19.13 2.56,19.13C2.22,19.13 1.88,19.11 1.54,19.07C3.44,20.29 5.7,21 8.12,21C16,21 20.33,14.46 20.33,8.79C20.33,8.6 20.33,8.42 20.32,8.23C21.16,7.63 21.88,6.87 22.46,6Z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M7.8,2H16.2C19.4,2 22,4.6 22,7.8V16.2A5.8,5.8 0 0,1 16.2,22H7.8C4.6,22 2,19.4 2,16.2V7.8A5.8,5.8 0 0,1 7.8,2M7.6,4A3.6,3.6 0 0,0 4,7.6V16.4C4,18.39 5.61,20 7.6,20H16.4A3.6,3.6 0 0,0 20,16.4V7.6C20,5.61 18.39,4 16.4,4H7.6M17.25,5.5A1.25,1.25 0 0,1 18.5,6.75A1.25,1.25 0 0,1 17.25,8A1.25,1.25 0 0,1 16,6.75A1.25,1.25 0 0,1 17.25,5.5M12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9Z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M11.64 5.93H13.07V10.21H11.64M15.57 5.93H17V10.21H15.57M7 2L3.43 5.57V18.43H7.71V22L11.29 18.43H14.14L20.57 12V2M19.14 11.29L16.29 14.14H13.43L10.93 16.64V14.14H7.71V3.43H19.14Z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M5.06 3C4.63 3 4.22 3.14 3.84 3.42C3.46 3.7 3.24 4.06 3.14 4.5L2.11 8.91C1.86 10 2.06 10.92 2.69 11.73C2.81 11.85 2.93 11.97 3.04 12.07C3.63 12.64 4.28 13 5.22 13C6.16 13 6.91 12.59 7.47 12.05C8.1 12.67 8.86 13 9.8 13C10.64 13 11.44 12.63 12 12.07C12.68 12.7 13.45 13 14.3 13C15.17 13 15.91 12.67 16.54 12.05C17.11 12.62 17.86 13 18.81 13C19.76 13 20.43 12.65 21 12.06C21.09 11.97 21.18 11.87 21.28 11.77C21.94 10.95 22.14 10 21.89 8.91L20.86 4.5C20.73 4.06 20.5 3.7 20.13 3.42C19.77 3.14 19.38 3 18.94 3M18.89 4.97L19.97 9.38C20.06 9.81 19.97 10.2 19.69 10.55C19.44 10.86 19.13 11 18.75 11C18.44 11 18.17 10.9 17.95 10.66C17.73 10.43 17.61 10.16 17.58 9.84L16.97 5M5.06 5H7.03L6.42 9.84C6.3 10.63 5.91 11 5.25 11C4.84 11 4.53 10.86 4.31 10.55C4.03 10.2 3.94 9.81 4.03 9.38M9.05 5H11V9.7C11 10.05 10.89 10.35 10.64 10.62C10.39 10.88 10.08 11 9.7 11C9.36 11 9.07 10.88 8.84 10.59C8.61 10.3 8.5 10 8.5 9.66V9.5M13 5H14.95L15.5 9.5C15.58 9.92 15.5 10.27 15.21 10.57C14.95 10.87 14.61 11 14.2 11C13.89 11 13.61 10.88 13.36 10.62C13.11 10.35 13 10.05 13 9.7M3 14.03V19C3 20.11 3.89 21 5 21C9.67 21 14.33 21 19 21C20.1 21 21 20.11 21 19V14.05C20.45 14.63 19.75 14.96 19 15C18 15.03 17.25 14.74 16.54 14.05C15.94 14.65 15.14 15 14.3 15C13.4 15 12.6 14.64 12 14.07C11.43 14.64 10.65 15 9.78 15C8.87 15 8.07 14.65 7.47 14.05C6.89 14.64 6.1 15 5.23 15C4.33 15 3.66 14.65 3 14.03Z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M2,3H11V12H2V3M11,22H2V13H11V22M21,3V12H12V3H21M21,22H12V13H21V22Z\" />\n  </SvgIcon>\n));\n","// @flow\nimport * as React from 'react';\nimport {\n  type ShowcasedGame,\n  type ShowcasedGameLink,\n} from '../Utils/GDevelopServices/Game';\nimport { Card } from '@material-ui/core';\nimport Text from '../UI/Text';\nimport { Trans } from '@lingui/macro';\nimport { Column, Line, Spacer } from '../UI/Grid';\nimport { MarkdownText } from '../UI/MarkdownText';\nimport { CorsAwareImage } from '../UI/CorsAwareImage';\nimport RaisedButton from '../UI/RaisedButton';\nimport TagChips from '../UI/TagChips';\nimport Apple from '../UI/CustomSvgIcons/Apple';\nimport Window from '../Utils/Window';\nimport { sendShowcaseGameLinkOpened } from '../Utils/Analytics/EventSender';\nimport GooglePlay from '../UI/CustomSvgIcons/GooglePlay';\nimport Steam from '../UI/CustomSvgIcons/Steam';\nimport Twitter from '../UI/CustomSvgIcons/Twitter';\nimport Instagram from '../UI/CustomSvgIcons/Instagram';\nimport Twitch from '../UI/CustomSvgIcons/Twitch';\nimport ItchIo from '../UI/CustomSvgIcons/ItchIo';\nimport Microsoft from '../UI/CustomSvgIcons/Microsoft';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\nimport { ResponsiveLineStackLayout } from '../UI/Layout';\nimport { useResponsiveWindowWidth } from '../UI/Reponsive/ResponsiveWindowMeasurer';\n\nconst styles = {\n  thumbnailImageWithDescription: {\n    objectFit: 'contain',\n    verticalAlign: 'middle',\n    backgroundColor: 'black',\n    width: 200,\n  },\n  thumbnailImageWithoutDescription: {\n    objectFit: 'cover',\n    verticalAlign: 'middle',\n    backgroundColor: 'black',\n    width: 200,\n    maxHeight: 120,\n  },\n  smallScreenThumbnailImage: {\n    objectFit: 'contain',\n    verticalAlign: 'middle',\n    backgroundColor: 'black',\n    maxHeight: 150,\n  },\n  card: {\n    flex: 1,\n  },\n  container: {\n    display: 'flex',\n    textAlign: 'left',\n    overflow: 'hidden',\n    padding: 8,\n  },\n};\n\ntype Props = {|\n  showcasedGame: ShowcasedGame,\n  onHeightComputed: number => void,\n|};\n\nconst getFullUrl = url =>\n  url.startsWith('/') ? 'https://gdevelop-app.com' + url : url;\n\nconst getLinkIconAndLabel = (url: string, type: string) => {\n  // Supported links:\n  if (type === '') {\n    return { icon: <PlayArrowIcon />, label: <Trans>Play or download</Trans> };\n  } else if (type === 'learn-more') {\n    return { icon: null, label: <Trans>Learn more</Trans> };\n  } else if (type === 'download' || type === 'download-win-mac-linux') {\n    return { icon: <GetAppIcon />, label: <Trans>Download</Trans> };\n  } else if (type === 'play') {\n    return { icon: <PlayArrowIcon />, label: <Trans>Play</Trans> };\n  }\n  // Officially supported stores/websites/social medias:\n  else if (type === 'App Store') {\n    return { icon: <Apple />, label: 'iOS' };\n  } else if (type === 'Play Store') {\n    return { icon: <GooglePlay />, label: 'Android' };\n  } else if (type === 'Steam') {\n    return { icon: <Steam />, label: 'Steam' };\n  } else if (type === 'Trailer') {\n    return { icon: <YouTubeIcon />, label: <Trans>Trailer</Trans> };\n  } else if (type === 'itch.io') {\n    return { icon: <ItchIo />, label: 'itch.io' };\n  } else if (type === 'Game Jolt') {\n    return { icon: <FlashOnIcon />, label: 'Game Jolt' };\n  } else if (type === 'Twitter') {\n    return { icon: <Twitter />, label: 'Twitter' };\n  } else if (type === 'Microsoft Store') {\n    return { icon: <Microsoft />, label: 'Microsoft Store' };\n  } else if (type === 'Instagram') {\n    return { icon: <Instagram />, label: 'Instagram' };\n  } else if (type === 'Twitch') {\n    return { icon: <Twitch />, label: 'Twitch' };\n  }\n\n  return { icon: null, label: type };\n};\n\nconst LinkButton = ({\n  link,\n  showcasedGame,\n}: {|\n  link: ShowcasedGameLink,\n  showcasedGame: ShowcasedGame,\n|}) => {\n  const { url, type } = link;\n  return (\n    <RaisedButton\n      key={type + '-' + url}\n      primary\n      {...getLinkIconAndLabel(url, type)}\n      onClick={() => {\n        sendShowcaseGameLinkOpened(showcasedGame.title, type);\n        Window.openExternalURL(getFullUrl(url));\n      }}\n    />\n  );\n};\n\nexport const ShowcasedGameListItem = ({\n  showcasedGame,\n  onHeightComputed,\n}: Props) => {\n  // Report the height of the item once it's known.\n  const [isLoaded, setIsLoaded] = React.useState(false);\n  const containerRef = React.useRef<?HTMLDivElement>(null);\n  const isImageLoadingRef = React.useRef(true);\n  const notifyHeightChanged = React.useCallback(\n    () => {\n      if (!isLoaded && !isImageLoadingRef.current) {\n        setIsLoaded(true);\n      }\n\n      // But don't report the height while the image is loading, as it could\n      // make some \"jumps\" in the scroll when scrolling up.\n      if (containerRef.current && !isImageLoadingRef.current)\n        onHeightComputed(containerRef.current.getBoundingClientRect().height);\n    },\n    [onHeightComputed, isLoaded]\n  );\n  React.useLayoutEffect(notifyHeightChanged);\n\n  const windowWidth = useResponsiveWindowWidth();\n  const hasDescription = !!showcasedGame.description;\n\n  const firstLinks = showcasedGame.links.slice(0, 3);\n  const otherLinks = showcasedGame.links.slice(3);\n\n  return (\n    <div\n      style={{\n        ...styles.container,\n        visibility: isLoaded ? undefined : 'hidden',\n        animation: isLoaded ? 'fadein 0.5s' : undefined,\n      }}\n      ref={containerRef}\n    >\n      <Card style={styles.card}>\n        <ResponsiveLineStackLayout noMargin>\n          <CorsAwareImage\n            style={\n              windowWidth === 'small'\n                ? styles.smallScreenThumbnailImage\n                : hasDescription\n                ? styles.thumbnailImageWithDescription\n                : styles.thumbnailImageWithoutDescription\n            }\n            src={showcasedGame.thumbnailUrl}\n            alt={showcasedGame.title}\n            onError={() => {\n              isImageLoadingRef.current = false;\n              notifyHeightChanged();\n            }}\n            onLoad={() => {\n              isImageLoadingRef.current = false;\n              notifyHeightChanged();\n            }}\n          />\n          <Line expand>\n            <Column expand>\n              <ResponsiveLineStackLayout noMargin alignItems=\"baseline\" expand>\n                <Text noMargin displayInlineAsSpan>\n                  {showcasedGame.title}\n                </Text>\n                <Text noMargin size=\"body2\" displayInlineAsSpan>\n                  <Trans>by {showcasedGame.author}</Trans>\n                </Text>\n              </ResponsiveLineStackLayout>\n              {showcasedGame.genres.length ? (\n                <TagChips tags={showcasedGame.genres} />\n              ) : null}\n              <Text size=\"body2\" displayInlineAsSpan>\n                <MarkdownText\n                  source={showcasedGame.description}\n                  allowParagraphs\n                />\n              </Text>\n              <Spacer />\n              <ResponsiveLineStackLayout\n                justifyContent=\"flex-end\"\n                noColumnMargin\n              >\n                {firstLinks.map((link, index) => (\n                  <LinkButton\n                    key={index}\n                    link={link}\n                    showcasedGame={showcasedGame}\n                  />\n                ))}\n              </ResponsiveLineStackLayout>\n              <ResponsiveLineStackLayout\n                justifyContent=\"flex-end\"\n                noColumnMargin\n              >\n                {otherLinks.map((link, index) => (\n                  <LinkButton\n                    key={index}\n                    link={link}\n                    showcasedGame={showcasedGame}\n                  />\n                ))}\n              </ResponsiveLineStackLayout>\n            </Column>\n          </Line>\n        </ResponsiveLineStackLayout>\n      </Card>\n    </div>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport SearchBar from '../UI/SearchBar';\nimport { Column, Line } from '../UI/Grid';\nimport Background from '../UI/Background';\nimport ScrollView from '../UI/ScrollView';\nimport { type ShowcasedGame } from '../Utils/GDevelopServices/Game';\nimport { ListSearchResults } from '../UI/Search/ListSearchResults';\nimport { GamesShowcaseContext } from './GamesShowcaseContext';\nimport { ShowcasedGameListItem } from './ShowcasedGameListItem';\nimport { ResponsiveWindowMeasurer } from '../UI/Reponsive/ResponsiveWindowMeasurer';\nimport { Trans } from '@lingui/macro';\nimport Subheader from '../UI/Subheader';\nimport { CategoryChooser } from '../UI/Search/CategoryChooser';\n\nconst styles = {\n  searchBar: {\n    // TODO: Can we put this in the search bar by default?\n    flexShrink: 0,\n  },\n};\n\nconst getShowcasedGameTitle = (showcasedGame: ShowcasedGame) =>\n  showcasedGame.title;\n\ntype Props = {};\n\nexport const GamesShowcase = (props: Props) => {\n  const {\n    filters,\n    searchResults,\n    error,\n    fetchShowcasedGamesAndFilters,\n    filtersState,\n    searchText,\n    setSearchText,\n  } = React.useContext(GamesShowcaseContext);\n\n  React.useEffect(\n    () => {\n      fetchShowcasedGamesAndFilters();\n    },\n    [fetchShowcasedGamesAndFilters]\n  );\n\n  return (\n    <ResponsiveWindowMeasurer>\n      {windowWidth => (\n        <Column expand noMargin useFullHeight>\n          <SearchBar\n            value={searchText}\n            onChange={setSearchText}\n            onRequestSearch={() => {}}\n            style={styles.searchBar}\n          />\n          <Line\n            expand\n            overflow={\n              'hidden' /* Somehow required on Chrome/Firefox to avoid children growing (but not on Safari) */\n            }\n          >\n            <Background\n              noFullHeight\n              noExpand\n              width={windowWidth === 'small' ? 150 : 250}\n            >\n              <ScrollView>\n                <Subheader>\n                  <Trans>Categories</Trans>\n                </Subheader>\n                <CategoryChooser\n                  allItemsLabel={<Trans>All games</Trans>}\n                  allFilters={filters}\n                  filtersState={filtersState}\n                  error={error}\n                />\n              </ScrollView>\n            </Background>\n            <ListSearchResults\n              onRetry={fetchShowcasedGamesAndFilters}\n              error={error}\n              searchItems={searchResults}\n              getSearchItemUniqueId={getShowcasedGameTitle}\n              renderSearchItem={(showcasedGame, onHeightComputed) => (\n                <ShowcasedGameListItem\n                  onHeightComputed={onHeightComputed}\n                  showcasedGame={showcasedGame}\n                />\n              )}\n            />\n          </Line>\n        </Column>\n      )}\n    </ResponsiveWindowMeasurer>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport ScrollView from '../UI/ScrollView';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport Tutorials from './Tutorials';\nimport { Column } from '../UI/Grid';\nimport { type StorageProvider, type FileMetadata } from '../ProjectsStorage';\nimport { GamesShowcase } from '../GamesShowcase';\nimport Window from '../Utils/Window';\nimport PublishIcon from '@material-ui/icons/Publish';\n\ntype State = {|\n  currentTab: 'starters' | 'examples' | 'tutorials' | 'games-showcase',\n  outputPath: string,\n|};\n\nexport type CreateProjectDialogWithComponentsProps = {|\n  open: boolean,\n  onClose: () => void,\n  onOpen: (\n    storageProvider: StorageProvider,\n    fileMetadata: FileMetadata\n  ) => Promise<void>,\n  onCreate: (\n    gdProject,\n    storageProvider: ?StorageProvider,\n    fileMetadata: ?FileMetadata\n  ) => Promise<void>,\n  initialTab: 'starters' | 'games-showcase',\n|};\n\ntype Props = {|\n  ...CreateProjectDialogWithComponentsProps,\n  startersComponent: any,\n  examplesComponent: any,\n|};\n\nexport default class CreateProjectDialog extends React.Component<Props, State> {\n  state = {\n    currentTab: this.props.initialTab,\n    outputPath: '',\n  };\n\n  _onChangeTab = (\n    newTab: 'starters' | 'examples' | 'tutorials' | 'games-showcase'\n  ) => {\n    this.setState({\n      currentTab: newTab,\n    });\n  };\n\n  _showExamples = () => this._onChangeTab('examples');\n\n  _onExamplesLoaded = () => {\n    // Force an update to ensure dialog is properly positioned.\n    this.forceUpdate();\n  };\n\n  render() {\n    const { open, onClose, onOpen, onCreate } = this.props;\n    if (!open) return null;\n\n    const ExamplesComponent = this.props.examplesComponent;\n    const StartersComponent = this.props.startersComponent;\n\n    return (\n      <Dialog\n        title={<Trans>Create a new game</Trans>}\n        actions={[\n          <FlatButton\n            key=\"close\"\n            label={<Trans>Close</Trans>}\n            primary={false}\n            onClick={onClose}\n          />,\n        ]}\n        secondaryActions={\n          this.state.currentTab === 'games-showcase'\n            ? [\n                <FlatButton\n                  key=\"submit-game-showcase\"\n                  onClick={() => {\n                    Window.openExternalURL(\n                      'https://docs.google.com/forms/d/e/1FAIpQLSfjiOnkbODuPifSGuzxYY61vB5kyMWdTZSSqkJsv3H6ePRTQA/viewform?usp=sf_link'\n                    );\n                  }}\n                  primary\n                  icon={<PublishIcon />}\n                  label={<Trans>Submit your game to the showcase</Trans>}\n                />,\n              ]\n            : null\n        }\n        cannotBeDismissed={false}\n        onRequestClose={onClose}\n        open={open}\n        noMargin\n        fullHeight\n        flexBody\n      >\n        <Column expand noMargin>\n          <Tabs value={this.state.currentTab} onChange={this._onChangeTab}>\n            <Tab label={<Trans>Starters</Trans>} value=\"starters\" />\n            <Tab label={<Trans>Examples</Trans>} value=\"examples\" />\n            <Tab label={<Trans>Tutorials</Trans>} value=\"tutorials\" />\n            <Tab label={<Trans>Games showcase</Trans>} value=\"games-showcase\" />\n          </Tabs>\n          {this.state.currentTab === 'starters' && (\n            <ScrollView>\n              <StartersComponent\n                onOpen={onOpen}\n                onCreate={onCreate}\n                onChangeOutputPath={outputPath => this.setState({ outputPath })}\n                onShowExamples={this._showExamples}\n                outputPath={this.state.outputPath}\n              />\n            </ScrollView>\n          )}\n          {this.state.currentTab === 'examples' && (\n            <ScrollView>\n              <ExamplesComponent\n                onOpen={onOpen}\n                onCreate={onCreate}\n                onChangeOutputPath={outputPath => this.setState({ outputPath })}\n                onExamplesLoaded={this._onExamplesLoaded}\n                outputPath={this.state.outputPath}\n              />\n            </ScrollView>\n          )}\n          {this.state.currentTab === 'tutorials' && (\n            <ScrollView>\n              <Tutorials />\n            </ScrollView>\n          )}\n          {this.state.currentTab === 'games-showcase' && <GamesShowcase />}\n        </Column>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport FlatButton from '../../UI/FlatButton';\nimport { Spacer, Line } from '../../UI/Grid';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport differenceInSeconds from 'date-fns/differenceInSeconds';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Text from '../../UI/Text';\nimport {\n  type Build,\n  type BuildArtifactKeyName,\n} from '../../Utils/GDevelopServices/Build';\n\nconst buildTypesConfig = {\n  'cordova-build': {\n    estimatedTimeInSeconds: (build: Build) => 300,\n    completeDescription:\n      'You can download it on your Android phone and install it.',\n  },\n  'electron-build': {\n    estimatedTimeInSeconds: (build: Build) =>\n      90 + 130 * (build.targets ? build.targets.length : 0),\n    completeDescription: '',\n  },\n  'web-build': {\n    estimatedTimeInSeconds: (build: Build) => 5,\n    completeDescription: '',\n  },\n};\n\nconst buttons = [\n  {\n    displayName: t`Download`,\n    key: 'apkKey',\n  },\n  {\n    displayName: t`Windows (zip)`,\n    key: 'windowsZipKey',\n  },\n  {\n    displayName: t`Windows (exe)`,\n    key: 'windowsExeKey',\n  },\n  {\n    displayName: t`macOS (zip)`,\n    key: 'macosZipKey',\n  },\n  {\n    displayName: t`Linux (AppImage)`,\n    key: 'linuxAppImageKey',\n  },\n  {\n    displayName: t`Open`,\n    key: 's3Key',\n  },\n];\n\ntype Props = {|\n  build: Build,\n  onDownload: (key: BuildArtifactKeyName) => void,\n|};\n\n/**\n * Show an estimate of the progress of a build or the button\n * to download the artifacts.\n */\nexport default ({ build, onDownload }: Props) => {\n  const config = buildTypesConfig[build.type];\n  const secondsSinceLastUpdate = Math.abs(\n    differenceInSeconds(build.updatedAt, Date.now())\n  );\n  const estimatedRemainingTime = Math.max(\n    config ? config.estimatedTimeInSeconds(build) - secondsSinceLastUpdate : 0,\n    0\n  );\n\n  return (\n    <I18n>\n      {({ i18n }) =>\n        build.status === 'error' ? (\n          <React.Fragment>\n            <Line alignItems=\"center\">\n              <Text>\n                <Trans>Something wrong happened :(</Trans>\n              </Text>\n              <Spacer />\n              <RaisedButton\n                label={<Trans>See logs</Trans>}\n                onClick={() => onDownload('logsKey')}\n              />\n            </Line>\n            <Line alignItems=\"center\">\n              <EmptyMessage>\n                <Trans>\n                  Check the logs to see if there is an explanation about what\n                  went wrong, or try again later.\n                </Trans>\n              </EmptyMessage>\n            </Line>\n          </React.Fragment>\n        ) : build.status === 'pending' ? (\n          <Line alignItems=\"center\" expand>\n            <LinearProgress\n              style={{ flex: 1 }}\n              value={\n                config.estimatedTimeInSeconds(build) > 0\n                  ? ((config.estimatedTimeInSeconds(build) -\n                      estimatedRemainingTime) /\n                      config.estimatedTimeInSeconds(build)) *\n                    100\n                  : 0\n              }\n              variant={\n                estimatedRemainingTime > 0 ? 'determinate' : 'indeterminate'\n              }\n            />\n            <Spacer />\n            {estimatedRemainingTime > 0 ? (\n              <Text>\n                <Trans>\n                  ~{Math.round(estimatedRemainingTime / 60)} minutes.\n                </Trans>\n              </Text>\n            ) : (\n              <Text>\n                <Trans>Should finish soon.</Trans>\n              </Text>\n            )}\n          </Line>\n        ) : build.status === 'complete' ? (\n          <React.Fragment>\n            <Line expand>\n              {buttons\n                .filter(button => !!build[button.key])\n                .map((button, index) => (\n                  <React.Fragment key={button.key}>\n                    {index !== 0 && <Spacer />}\n                    <RaisedButton\n                      label={i18n._(button.displayName)}\n                      primary\n                      onClick={() => onDownload(button.key)}\n                    />\n                  </React.Fragment>\n                ))}\n              <FlatButton\n                label={<Trans>See logs</Trans>}\n                onClick={() => onDownload('logsKey')}\n              />\n            </Line>\n            <Line expand>\n              {config && <Text>{config.completeDescription}</Text>}\n            </Line>\n          </React.Fragment>\n        ) : (\n          <Line>\n            <Trans>Unknown status</Trans>\n          </Line>\n        )\n      }\n    </I18n>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  type Build,\n  type BuildArtifactKeyName,\n} from '../../Utils/GDevelopServices/Build';\nimport { Column, Line } from '../../UI/Grid';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport PlaceholderLoader from '../../UI/PlaceholderLoader';\nimport BuildProgress from './BuildProgress';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport format from 'date-fns/format';\nimport differenceInCalendarDays from 'date-fns/differenceInCalendarDays';\nimport Text from '../../UI/Text';\n\ntype Props = {|\n  builds: ?Array<Build>,\n  userProfile: UserProfile,\n  onDownload: (build: Build, key: BuildArtifactKeyName) => void,\n|};\n\nconst styles = {\n  buildContainer: {\n    padding: 10,\n  },\n};\n\nconst formatBuildText = (\n  buildType: 'cordova-build' | 'electron-build' | 'web-build'\n) => {\n  switch (buildType) {\n    case 'cordova-build':\n      return <Trans>Android Build</Trans>;\n    case 'electron-build':\n      return <Trans>Windows/macOS/Linux Build</Trans>;\n    case 'web-build':\n      return <Trans>Web (upload online) Build</Trans>;\n    default:\n      return buildType;\n  }\n};\n\nexport default ({ builds, userProfile, onDownload }: Props) => {\n  return (\n    <Column noMargin expand>\n      <Line>\n        <Column>\n          <EmptyMessage>\n            <Trans>\n              This is the list of builds that you've done. Note that you can\n              download games generated during the last 7 days, after which they\n              are removed.\n            </Trans>\n          </EmptyMessage>\n        </Column>\n      </Line>\n      <Line>\n        {!userProfile.authenticated ? (\n          <EmptyMessage>\n            <Trans>You need to login first to see your builds.</Trans>\n          </EmptyMessage>\n        ) : !builds ? (\n          <PlaceholderLoader />\n        ) : builds.length === 0 ? (\n          <EmptyMessage>\n            <Trans>\n              You don't have any builds on the online services for now.\n            </Trans>\n          </EmptyMessage>\n        ) : (\n          <Column noMargin expand>\n            {builds.map((build: Build) => {\n              const isOld =\n                build &&\n                differenceInCalendarDays(Date.now(), build.updatedAt) > 6;\n\n              return (\n                <Paper style={styles.buildContainer} key={build.id}>\n                  <Text>\n                    {formatBuildText(build.type)} -{' '}\n                    <Trans>Last updated on</Trans>{' '}\n                    {format(build.updatedAt, 'yyyy-MM-dd HH:mm:ss')}\n                  </Text>\n                  {!isOld && (\n                    <BuildProgress\n                      build={build}\n                      onDownload={key => onDownload(build, key)}\n                    />\n                  )}\n                  {isOld && (\n                    <EmptyMessage>\n                      <Trans>\n                        This build is old and the generated games can't be\n                        downloaded anymore.\n                      </Trans>\n                    </EmptyMessage>\n                  )}\n                </Paper>\n              );\n            })}\n          </Column>\n        )}\n      </Line>\n    </Column>\n  );\n};\n","// @flow\nimport { type Build, getBuild } from '../../Utils/GDevelopServices/Build';\nimport { delay } from '../../Utils/Delay';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\n\nconst waitTime = 1500;\nconst bulkWaitTime = 5000;\nconst maxTimeBeforeIgnoring = 12 * 60 * 60 * 1000; // 12 hours in milliseconds\n\nexport default class BuildsWatcher {\n  runningWatchers: { [string]: boolean } = {};\n  nextWatcherId = 0;\n  onBuildUpdated: ?(build: Build) => void;\n  userProfile: ?UserProfile;\n\n  start({\n    userProfile,\n    builds,\n    onBuildUpdated,\n  }: {\n    userProfile: UserProfile,\n    builds: Array<Build>,\n    onBuildUpdated: (build: Build) => void,\n  }) {\n    this.stop();\n    this.userProfile = userProfile;\n    this.onBuildUpdated = onBuildUpdated;\n\n    builds.forEach(build => {\n      if (build.status === 'pending') {\n        if (\n          (!build.createdAt ||\n            build.createdAt < Date.now() - maxTimeBeforeIgnoring) &&\n          (!build.updatedAt ||\n            build.updatedAt < Date.now() - maxTimeBeforeIgnoring)\n        ) {\n          console.info(\n            \"Ignoring a build for polling as it's too old and still pending\",\n            build\n          );\n        } else {\n          this._pollBuild(\n            build.id,\n            builds.length > 1 ? bulkWaitTime : waitTime\n          );\n        }\n      }\n    });\n  }\n\n  stop() {\n    this.runningWatchers = {};\n  }\n\n  _pollBuild = async (buildId: string, waitTime: number) => {\n    const watcherId = this.nextWatcherId.toString();\n    this.nextWatcherId++;\n\n    this.runningWatchers[watcherId] = true;\n\n    let build = null;\n    do {\n      if (!this.userProfile) return;\n\n      const { getAuthorizationHeader, profile } = this.userProfile;\n      if (!profile) return;\n\n      try {\n        console.info(`Checking progress of build ${buildId}...`);\n        build = await getBuild(getAuthorizationHeader, profile.uid, buildId);\n        if (this.onBuildUpdated) this.onBuildUpdated(build);\n      } catch (e) {\n        console.warn('Error while watching build progress:', e);\n      }\n\n      await delay(waitTime);\n      if (!this.runningWatchers[watcherId]) {\n        console.info(`Stopping watch of build ${buildId}.`);\n        return;\n      }\n    } while (build && build.status === 'pending');\n\n    console.info(`Watch of build ${buildId} finished.`);\n  };\n}\n","// @flow\nimport React, { Component } from 'react';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport BuildsList from './BuildsList';\nimport {\n  getBuilds,\n  type Build,\n  type BuildArtifactKeyName,\n  getBuildArtifactUrl,\n} from '../../Utils/GDevelopServices/Build';\nimport Window from '../../Utils/Window';\nimport BuildsWatcher from './BuildsWatcher';\n\ntype Props = {|\n  onBuildsUpdated: ?() => void,\n  userProfile: UserProfile,\n|};\ntype State = {|\n  builds: ?Array<Build>,\n|};\n\nexport default class Builds extends Component<Props, State> {\n  state = {\n    builds: null,\n  };\n  buildsWatcher = new BuildsWatcher();\n\n  componentDidMount() {\n    this._refreshBuilds();\n  }\n\n  componentWillUnmount() {\n    this.buildsWatcher.stop();\n  }\n\n  _startBuildsWatcher = () => {\n    if (!this.state.builds) return;\n\n    this.buildsWatcher.start({\n      userProfile: this.props.userProfile,\n      builds: this.state.builds,\n      onBuildUpdated: (newBuild: Build) => {\n        if (!this.state.builds) return;\n\n        this.setState({\n          builds: this.state.builds.map((oldBuild: Build) => {\n            if (newBuild.id === oldBuild.id) return newBuild;\n\n            return oldBuild;\n          }),\n        });\n      },\n    });\n  };\n\n  _refreshBuilds = () => {\n    const { getAuthorizationHeader, profile } = this.props.userProfile;\n    if (!profile) return;\n\n    getBuilds(getAuthorizationHeader, profile.uid).then(\n      builds => {\n        this.setState(\n          {\n            builds,\n          },\n          () => {\n            this._startBuildsWatcher();\n            if (this.props.onBuildsUpdated) this.props.onBuildsUpdated();\n          }\n        );\n      },\n      () => {\n        //TODO: Handle error\n      }\n    );\n  };\n\n  _download = (build: Build, key: BuildArtifactKeyName) => {\n    const url = getBuildArtifactUrl(build, key);\n    if (url) Window.openExternalURL(url);\n  };\n\n  render() {\n    return (\n      <BuildsList\n        builds={this.state.builds}\n        userProfile={this.props.userProfile}\n        onDownload={this._download}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport Dialog from '../../UI/Dialog';\nimport HelpButton from '../../UI/HelpButton';\nimport FlatButton from '../../UI/FlatButton';\nimport Builds from '.';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\n\ntype Props = {|\n  userProfile: UserProfile,\n  open: boolean,\n  onClose: () => void,\n|};\ntype State = {||};\n\nexport default class BuildsDialog extends Component<Props, State> {\n  _onBuildsUpdated = () => {\n    // Force the Dialog repositioning\n    this.forceUpdate();\n  };\n\n  render() {\n    const { open, onClose, userProfile } = this.props;\n    if (!open) return null;\n\n    return (\n      <Dialog\n        title={<Trans>All your builds</Trans>}\n        onRequestClose={onClose}\n        actions={[\n          <FlatButton\n            label={<Trans>Close</Trans>}\n            key=\"close\"\n            primary={false}\n            onClick={onClose}\n          />,\n        ]}\n        secondaryActions={[\n          <HelpButton key=\"help\" helpPagePath={'/publishing'} />,\n        ]}\n        cannotBeDismissed={false}\n        open={open}\n        noMargin\n      >\n        <Builds\n          onBuildsUpdated={this._onBuildsUpdated}\n          userProfile={userProfile}\n        />\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Column, Line } from '../UI/Grid';\nimport { type Limit, type Subscription } from '../Utils/GDevelopServices/Usage';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport Text from '../UI/Text';\n\ntype Props = {|\n  subscription: ?Subscription,\n  limit: ?Limit,\n  onChangeSubscription: Function,\n|};\n\nexport default ({ subscription, limit, onChangeSubscription }: Props) => {\n  if (!limit) return <PlaceholderLoader />;\n  const hasSubscription = subscription && !!subscription.planId;\n  const noSubscription = subscription && !subscription.planId;\n\n  return (\n    <Column noMargin>\n      <Text>\n        <Trans>\n          You have {Math.max(limit.max - limit.current, 0)} remaining builds for\n          today (out of {limit.max}).\n        </Trans>\n      </Text>\n      {hasSubscription && limit.limitReached && (\n        <Text>\n          <Trans>\n            Need more power? You can upgrade to a new plan to increase the\n            limit!\n          </Trans>\n        </Text>\n      )}\n      {hasSubscription && limit.limitReached && (\n        <Line justifyContent=\"center\" alignItems=\"center\">\n          <RaisedButton\n            label={<Trans>Upgrade my account</Trans>}\n            onClick={onChangeSubscription}\n            primary\n          />\n        </Line>\n      )}\n      {noSubscription && (\n        <Text>\n          <Trans>\n            You don't have a subscription. Get one to increase the limits!\n          </Trans>\n        </Text>\n      )}\n      {noSubscription && (\n        <Line justifyContent=\"center\" alignItems=\"center\">\n          <RaisedButton\n            label={<Trans>Get a subscription</Trans>}\n            onClick={onChangeSubscription}\n            primary\n          />\n        </Line>\n      )}\n    </Column>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Line, Spacer, Column } from '../../UI/Grid';\nimport BuildProgress from './BuildProgress';\nimport {\n  type Build,\n  type BuildArtifactKeyName,\n} from '../../Utils/GDevelopServices/Build';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport Text from '../../UI/Text';\nimport AlertMessage from '../../UI/AlertMessage';\n\nconst styles = {\n  stepper: { flex: 1 },\n  linearProgress: { flex: 1 },\n};\n\nexport type BuildStep =\n  | ''\n  | 'export'\n  | 'resources-download'\n  | 'compress'\n  | 'upload'\n  | 'waiting-for-build'\n  | 'build'\n  | 'done';\n\ntype Props = {|\n  exportStep: BuildStep,\n  onDownload: (key: BuildArtifactKeyName) => void,\n  build: ?Build,\n  stepMaxProgress: number,\n  stepCurrentProgress: number,\n  errored: boolean,\n  showSeeAllMyBuildsExplanation?: boolean,\n  hasBuildStep: boolean,\n|};\n\n/**\n * Can be used in an exporter to show the overall progress of a build\n * (including local archiving/upload steps and remote build progress)\n */\nexport default ({\n  exportStep,\n  onDownload,\n  build,\n  stepMaxProgress,\n  stepCurrentProgress,\n  errored,\n  hasBuildStep,\n  showSeeAllMyBuildsExplanation,\n}: Props) => (\n  <Stepper\n    activeStep={\n      exportStep === 'export' || exportStep === 'resources-download'\n        ? 0\n        : exportStep === 'compress' || exportStep === 'upload'\n        ? 1\n        : exportStep === 'waiting-for-build' || exportStep === 'build'\n        ? 2\n        : exportStep === 'done'\n        ? hasBuildStep\n          ? 2\n          : 1\n        : -1\n    }\n    orientation=\"vertical\"\n    style={styles.stepper}\n  >\n    <Step>\n      <StepLabel>\n        <Trans>Game export</Trans>\n      </StepLabel>\n      <StepContent>\n        {errored ? (\n          <AlertMessage kind=\"error\">\n            <Trans>Can't properly export the game.</Trans>{' '}\n            <Trans>\n              Please check your internet connection or try again later.\n            </Trans>\n          </AlertMessage>\n        ) : exportStep === 'resources-download' ? (\n          <Column expand noMargin>\n            <Text>\n              <Trans>Downloading game resources...</Trans>\n            </Text>\n            <Line expand>\n              <LinearProgress\n                style={styles.linearProgress}\n                value={\n                  stepMaxProgress > 0\n                    ? (stepCurrentProgress / stepMaxProgress) * 100\n                    : 0\n                }\n                variant=\"determinate\"\n              />\n            </Line>\n          </Column>\n        ) : (\n          <Column expand noMargin>\n            <Text>\n              <Trans>Export in progress...</Trans>\n            </Text>\n            <Line expand>\n              <LinearProgress style={styles.linearProgress} />\n            </Line>\n          </Column>\n        )}\n      </StepContent>\n    </Step>\n    {hasBuildStep && (\n      <Step>\n        <StepLabel>\n          <Trans>Upload to build service</Trans>\n        </StepLabel>\n        <StepContent>\n          {errored ? (\n            <AlertMessage kind=\"error\">\n              <Trans>Can't upload your game to the build service.</Trans>{' '}\n              <Trans>\n                Please check your internet connection or try again later.\n              </Trans>\n            </AlertMessage>\n          ) : exportStep === 'compress' ? (\n            <Line alignItems=\"center\">\n              <CircularProgress size={20} />\n              <Spacer />\n              <Text>\n                <Trans>Compressing before upload...</Trans>\n              </Text>\n            </Line>\n          ) : (\n            <Line alignItems=\"center\" expand>\n              <LinearProgress\n                style={styles.linearProgress}\n                value={\n                  stepMaxProgress > 0\n                    ? (stepCurrentProgress / stepMaxProgress) * 100\n                    : 0\n                }\n                variant=\"determinate\"\n              />\n            </Line>\n          )}\n        </StepContent>\n      </Step>\n    )}\n    {hasBuildStep && (\n      <Step>\n        <StepLabel>\n          <Trans>Build and download</Trans>\n        </StepLabel>\n        <StepContent>\n          {errored && (\n            <AlertMessage kind=\"error\">\n              <Trans>\n                Build could not start or errored. Please check your internet\n                connection or try again later.\n              </Trans>\n            </AlertMessage>\n          )}\n          {!build && !errored && (\n            <Text>\n              <Trans>Build is starting...</Trans>\n            </Text>\n          )}\n          {build && <BuildProgress build={build} onDownload={onDownload} />}\n          {showSeeAllMyBuildsExplanation && (\n            <EmptyMessage>\n              <Trans>\n                If you close this window while the build is being done, you can\n                see its progress and download the game later by clicking on See\n                All My Builds below.\n              </Trans>\n            </EmptyMessage>\n          )}\n        </StepContent>\n      </Step>\n    )}\n    {!hasBuildStep && (\n      <Step>\n        <StepLabel>\n          <Trans>Done</Trans>\n        </StepLabel>\n        <StepContent />\n      </Step>\n    )}\n  </Stepper>\n);\n","// @flow\n\nimport React, { Component } from 'react';\nimport RaisedButton from '../UI/RaisedButton';\nimport { sendExportLaunched } from '../Utils/Analytics/EventSender';\nimport {\n  type Build,\n  type BuildArtifactKeyName,\n  getBuildArtifactUrl,\n} from '../Utils/GDevelopServices/Build';\nimport { type UserProfile } from '../Profile/UserProfileContext';\nimport { Column, Line } from '../UI/Grid';\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport Window from '../Utils/Window';\nimport CreateProfile from '../Profile/CreateProfile';\nimport LimitDisplayer from '../Profile/LimitDisplayer';\nimport {\n  displayProjectErrorsBox,\n  getErrors,\n} from '../ProjectManager/ProjectErrorsChecker';\nimport { type Limit } from '../Utils/GDevelopServices/Usage';\nimport BuildsWatcher from './Builds/BuildsWatcher';\nimport BuildStepsProgress, {\n  type BuildStep,\n} from './Builds/BuildStepsProgress';\nimport { type ExportPipeline } from './ExportPipeline.flow';\nimport { GameRegistration } from '../GameDashboard/GameRegistration';\n\ntype State = {|\n  exportStep: BuildStep,\n  compressionOutput: any,\n  build: ?Build,\n  stepCurrentProgress: number,\n  stepMaxProgress: number,\n  errored: boolean,\n  exportState: any,\n  doneFooterOpen: boolean,\n|};\n\ntype Props = {|\n  project: gdProject,\n  onChangeSubscription: () => void,\n  userProfile: UserProfile,\n  exportPipeline: ExportPipeline<any, any, any, any, any>,\n|};\n\n/**\n * A generic UI to launch, monitor the progres and get the result\n * of an export.\n */\nexport default class ExportLauncher extends Component<Props, State> {\n  state = {\n    exportStep: '',\n    build: null,\n    compressionOutput: null,\n    stepCurrentProgress: 0,\n    stepMaxProgress: 0,\n    doneFooterOpen: false,\n    errored: false,\n    exportState: this.props.exportPipeline.getInitialExportState(\n      this.props.project\n    ),\n  };\n  buildsWatcher = new BuildsWatcher();\n\n  componentWillUnmount() {\n    this.buildsWatcher.stop();\n  }\n\n  _updateStepProgress = (\n    stepCurrentProgress: number,\n    stepMaxProgress: number\n  ) =>\n    this.setState({\n      stepCurrentProgress,\n      stepMaxProgress,\n    });\n\n  _startBuildWatch = (userProfile: UserProfile) => {\n    if (!this.state.build) return;\n\n    this.buildsWatcher.start({\n      userProfile,\n      builds: [this.state.build],\n      onBuildUpdated: (build: Build) => this.setState({ build }),\n    });\n  };\n\n  launchWholeExport = (userProfile: UserProfile) => {\n    const t = str => str; //TODO;\n    const { project, exportPipeline } = this.props;\n    sendExportLaunched(exportPipeline.name);\n\n    if (!displayProjectErrorsBox(t, getErrors(t, project))) return;\n\n    const handleError = (message: string) => (err: Error) => {\n      if (!this.state.errored) {\n        this.setState({\n          errored: true,\n        });\n        showErrorBox({\n          message:\n            message +\n            (err.message ? `\\n\\nDetails of the error: ${err.message}` : ''),\n          rawError: {\n            exportStep: this.state.exportStep,\n            rawError: err,\n          },\n          errorId: 'export-error',\n        });\n      }\n\n      throw err;\n    };\n\n    const exportPipelineContext = {\n      project,\n      updateStepProgress: this._updateStepProgress,\n      exportState: this.state.exportState,\n    };\n\n    this.setState({\n      exportStep: 'export',\n      stepCurrentProgress: 0,\n      stepMaxProgress: 0,\n      errored: false,\n      build: null,\n    });\n    exportPipeline\n      .prepareExporter(exportPipelineContext)\n      .then(preparedExporter => {\n        return exportPipeline.launchExport(\n          exportPipelineContext,\n          preparedExporter\n        );\n      }, handleError(t('Error while preparing the exporter.')))\n      .then(exportOutput => {\n        this.setState({\n          exportStep: 'resources-download',\n        });\n        return exportPipeline.launchResourcesDownload(\n          exportPipelineContext,\n          exportOutput\n        );\n      }, handleError(t('Error while exporting the game.')))\n      .then(resourcesDownloadOutput => {\n        this.setState({\n          exportStep: 'compress',\n        });\n        return exportPipeline.launchCompression(\n          exportPipelineContext,\n          resourcesDownloadOutput\n        );\n      }, handleError(t('Error while downloading the game resources. Check your internet connection and that all resources of the game are valid in the Resources editor.')))\n      .then(compressionOutput => {\n        const { launchUpload, launchOnlineBuild } = exportPipeline;\n        if (!!launchUpload && !!launchOnlineBuild) {\n          this.setState({\n            exportStep: 'upload',\n          });\n          return launchUpload(exportPipelineContext, compressionOutput)\n            .then((uploadBucketKey: string) => {\n              this.setState({\n                exportStep: 'waiting-for-build',\n              });\n              return launchOnlineBuild(\n                this.state.exportState,\n                userProfile,\n                uploadBucketKey\n              );\n            }, handleError(t('Error while uploading the game. Check your internet connection or try again later.')))\n            .then(build => {\n              this.setState(\n                {\n                  build,\n                  exportStep: 'build',\n                },\n                () => {\n                  this._startBuildWatch(userProfile);\n                }\n              );\n\n              return { compressionOutput };\n            }, handleError(t('Error while lauching the build of the game.')));\n        }\n\n        return { compressionOutput };\n      }, handleError(t('Error while compressing the game.')))\n      .then(({ compressionOutput }) => {\n        this.setState({\n          compressionOutput,\n          doneFooterOpen: true,\n          exportStep: 'done',\n        });\n      })\n      .catch(error => {\n        console.error('An error happened during export:', error);\n        /* Error handled previously */\n      });\n  };\n\n  _downloadBuild = (key: BuildArtifactKeyName) => {\n    const url = getBuildArtifactUrl(this.state.build, key);\n    if (url) Window.openExternalURL(url);\n  };\n\n  _closeDoneFooter = () =>\n    this.setState({\n      doneFooterOpen: false,\n    });\n\n  _updateExportState = (updater: any => any) => {\n    this.setState(prevState => ({\n      ...prevState,\n      exportState: updater(prevState.exportState),\n    }));\n  };\n\n  render() {\n    const {\n      exportStep,\n      compressionOutput,\n      build,\n      stepMaxProgress,\n      stepCurrentProgress,\n      errored,\n      doneFooterOpen,\n      exportState,\n    } = this.state;\n    const { project, userProfile, exportPipeline } = this.props;\n    if (!project) return null;\n\n    const getBuildLimit = (userProfile: UserProfile): ?Limit =>\n      userProfile.limits && exportPipeline.onlineBuildType\n        ? userProfile.limits[exportPipeline.onlineBuildType]\n        : null;\n    const canLaunchBuild = (userProfile: UserProfile) => {\n      if (!errored && exportStep !== '' && exportStep !== 'done') return false;\n\n      const limit: ?Limit = getBuildLimit(userProfile);\n      if (limit && limit.limitReached) return false;\n\n      return exportPipeline.canLaunchBuild(exportState);\n    };\n\n    return (\n      <Column noMargin>\n        <Line>\n          {exportPipeline.renderHeader({\n            project,\n            exportState,\n            updateExportState: this._updateExportState,\n          })}\n        </Line>\n        {(!exportPipeline.onlineBuildType || userProfile.authenticated) && (\n          <Line justifyContent=\"center\">\n            <RaisedButton\n              label={exportPipeline.renderLaunchButtonLabel()}\n              primary\n              onClick={() => this.launchWholeExport(userProfile)}\n              disabled={!canLaunchBuild(userProfile)}\n            />\n          </Line>\n        )}\n        {!!exportPipeline.onlineBuildType && userProfile.authenticated && (\n          <LimitDisplayer\n            subscription={userProfile.subscription}\n            limit={getBuildLimit(userProfile)}\n            onChangeSubscription={this.props.onChangeSubscription}\n          />\n        )}\n        {!!exportPipeline.onlineBuildType && !userProfile.authenticated && (\n          <CreateProfile\n            onLogin={userProfile.onLogin}\n            onCreateAccount={userProfile.onCreateAccount}\n          />\n        )}\n        <Line expand>\n          <BuildStepsProgress\n            exportStep={exportStep}\n            hasBuildStep={!!exportPipeline.onlineBuildType}\n            build={build}\n            onDownload={this._downloadBuild}\n            stepMaxProgress={stepMaxProgress}\n            stepCurrentProgress={stepCurrentProgress}\n            errored={errored}\n          />\n        </Line>\n        {doneFooterOpen &&\n          exportPipeline.renderDoneFooter &&\n          exportPipeline.renderDoneFooter({\n            compressionOutput,\n            exportState,\n            onClose: this._closeDoneFooter,\n          })}\n        {doneFooterOpen && (\n          <Line>\n            <GameRegistration project={project} />\n          </Line>\n        )}\n      </Column>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\n\nfunction getOnlineStatus() {\n  return typeof navigator !== 'undefined' &&\n    typeof navigator.onLine === 'boolean'\n    ? navigator.onLine\n    : true;\n}\n\n/**\n * React Hook listening to the navigator online status.\n */\nexport const useOnlineStatus = () => {\n  const [onlineStatus, setOnlineStatus] = React.useState(getOnlineStatus());\n\n  const goOnline = () => setOnlineStatus(true);\n\n  const goOffline = () => setOnlineStatus(false);\n\n  React.useEffect(() => {\n    window.addEventListener('online', goOnline);\n    window.addEventListener('offline', goOffline);\n\n    return () => {\n      window.removeEventListener('online', goOnline);\n      window.removeEventListener('offline', goOffline);\n    };\n  }, []);\n\n  return onlineStatus;\n};\n\ntype Props = {|\n  children: (onlineStatus: boolean) => React.Node,\n|};\n\n/**\n * Component listening to the navigator online status, passing\n * it down to children.\n */\nexport const OnlineStatus = ({ children }: Props) => {\n  const onlineStatus = useOnlineStatus();\n  return children(onlineStatus);\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport HelpButton from '../UI/HelpButton';\nimport FlatButton from '../UI/FlatButton';\nimport Subheader from '../UI/Subheader';\nimport { List, ListItem } from '../UI/List';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport BuildsDialog from './Builds/BuildsDialog';\nimport { Line } from '../UI/Grid';\nimport UserProfileContext, {\n  type UserProfile,\n} from '../Profile/UserProfileContext';\nimport ExportLauncher from './ExportLauncher';\nimport { type ExportPipeline } from './ExportPipeline.flow';\nimport { OnlineStatus } from '../Utils/OnlineStatus';\nimport AlertMessage from '../UI/AlertMessage';\n\nconst styles = {\n  icon: { width: 40, height: 40 },\n  disabledItem: { opacity: 0.6 },\n  content: { padding: 8 },\n};\n\nexport type Exporter = {|\n  name: React.Node,\n  renderIcon: (props: {|\n    style: {| width: number, height: number |},\n  |}) => React.Node,\n  helpPage: string,\n  description: React.Node,\n  disabled?: boolean,\n  advanced?: boolean,\n  experimental?: boolean,\n  key: string,\n  exportPipeline: ExportPipeline<any, any, any, any, any>,\n|};\n\nexport type ExportDialogWithoutExportsProps = {|\n  project: ?gdProject,\n  onClose: () => void,\n  onChangeSubscription: () => void,\n|};\n\ntype Props = {|\n  ...ExportDialogWithoutExportsProps,\n  exporters: Array<Exporter>,\n  allExportersRequireOnline?: boolean,\n|};\n\ntype State = {|\n  chosenExporterKey: string,\n  showExperimental: boolean,\n  buildsDialogOpen: boolean,\n|};\n\nexport default class ExportDialog extends React.Component<Props, State> {\n  state = {\n    chosenExporterKey: '',\n    showExperimental: false,\n    buildsDialogOpen: false,\n  };\n\n  chooseExporter = (key: string) => {\n    this.setState({\n      chosenExporterKey: key,\n    });\n  };\n\n  _showExperimental = (show: boolean = true) => {\n    this.setState({\n      showExperimental: show,\n    });\n  };\n\n  _openBuildsDialog = (open: boolean = true) => {\n    this.setState({\n      buildsDialogOpen: open,\n    });\n  };\n\n  _renderExporterListItem = (\n    exporter: Exporter,\n    index: number,\n    forceDisable: boolean\n  ) => {\n    return (\n      <ListItem\n        key={exporter.key}\n        disabled={forceDisable || exporter.disabled}\n        style={\n          forceDisable || exporter.disabled ? styles.disabledItem : undefined\n        }\n        leftIcon={exporter.renderIcon({ style: styles.icon })}\n        primaryText={exporter.name}\n        secondaryText={exporter.description}\n        secondaryTextLines={2}\n        onClick={() => this.chooseExporter(exporter.key)}\n      />\n    );\n  };\n\n  render() {\n    const {\n      project,\n      onClose,\n      allExportersRequireOnline,\n      onChangeSubscription,\n      exporters,\n    } = this.props;\n    const { showExperimental, chosenExporterKey } = this.state;\n    if (!project) return null;\n\n    const exporter = exporters.find(\n      exporter => exporter.key === chosenExporterKey\n    );\n\n    return (\n      <UserProfileContext.Consumer>\n        {(userProfile: UserProfile) => (\n          <OnlineStatus>\n            {onlineStatus => {\n              const cantExportBecauseOffline =\n                !!allExportersRequireOnline && !onlineStatus;\n              return (\n                <Dialog\n                  title={<Trans>Export project to a standalone game</Trans>}\n                  onRequestClose={onClose}\n                  cannotBeDismissed={false}\n                  actions={[\n                    chosenExporterKey && (\n                      <FlatButton\n                        label={<Trans>Back</Trans>}\n                        key=\"back\"\n                        primary={false}\n                        onClick={() => this.chooseExporter('')}\n                      />\n                    ),\n                    <FlatButton\n                      label={<Trans>Close</Trans>}\n                      key=\"close\"\n                      primary={false}\n                      onClick={onClose}\n                    />,\n                  ]}\n                  secondaryActions={[\n                    <HelpButton\n                      key=\"help\"\n                      helpPagePath={\n                        (exporter && exporter.helpPage) || '/publishing'\n                      }\n                    />,\n                    <FlatButton\n                      key=\"builds\"\n                      label={<Trans>See all my builds</Trans>}\n                      onClick={() => this._openBuildsDialog(true)}\n                    />,\n                  ]}\n                  open\n                  noMargin\n                >\n                  {cantExportBecauseOffline && (\n                    <AlertMessage kind=\"error\">\n                      <Trans>\n                        You must be online and have a proper internet connection\n                        to export your game.\n                      </Trans>\n                    </AlertMessage>\n                  )}\n                  {!exporter && (\n                    <React.Fragment>\n                      <List>\n                        {exporters\n                          .filter(\n                            exporter =>\n                              !exporter.advanced && !exporter.experimental\n                          )\n                          .map((exporter, index) =>\n                            this._renderExporterListItem(\n                              exporter,\n                              index,\n                              cantExportBecauseOffline\n                            )\n                          )}\n\n                        <Subheader>Advanced</Subheader>\n                        {exporters\n                          .filter(exporter => exporter.advanced)\n                          .map((exporter, index) =>\n                            this._renderExporterListItem(\n                              exporter,\n                              index,\n                              cantExportBecauseOffline\n                            )\n                          )}\n\n                        {showExperimental && (\n                          <Subheader>Experimental</Subheader>\n                        )}\n                        {showExperimental &&\n                          exporters\n                            .filter(exporter => exporter.experimental)\n                            .map((exporter, index) =>\n                              this._renderExporterListItem(\n                                exporter,\n                                index,\n                                cantExportBecauseOffline\n                              )\n                            )}\n                      </List>\n                      <Line justifyContent=\"center\" alignItems=\"center\">\n                        {!showExperimental ? (\n                          <FlatButton\n                            key=\"toggle-experimental\"\n                            icon={<Visibility />}\n                            primary={false}\n                            onClick={() => this._showExperimental(true)}\n                            label={<Trans>Show experimental exports</Trans>}\n                          />\n                        ) : (\n                          <FlatButton\n                            key=\"toggle-experimental\"\n                            icon={<VisibilityOff />}\n                            primary={false}\n                            onClick={() => this._showExperimental(false)}\n                            label={<Trans>Hide experimental exports</Trans>}\n                          />\n                        )}\n                      </Line>\n                    </React.Fragment>\n                  )}\n                  {exporter && exporter.exportPipeline && (\n                    <div style={styles.content}>\n                      <ExportLauncher\n                        exportPipeline={exporter.exportPipeline}\n                        project={project}\n                        onChangeSubscription={onChangeSubscription}\n                        userProfile={userProfile}\n                      />\n                    </div>\n                  )}\n                  <BuildsDialog\n                    open={this.state.buildsDialogOpen}\n                    onClose={() => this._openBuildsDialog(false)}\n                    userProfile={userProfile}\n                  />\n                </Dialog>\n              );\n            }}\n          </OnlineStatus>\n        )}\n      </UserProfileContext.Consumer>\n    );\n  }\n}\n","import { Component } from 'react';\nimport MultiBackend from 'react-dnd-multi-backend';\nimport HTML5toTouch from 'react-dnd-multi-backend/lib/HTML5toTouch';\nimport { DragDropContext } from 'react-dnd';\n\nclass DragAndDropContextProvider extends Component {\n  render() {\n    return this.props.children;\n  }\n}\n\n/**\n * A react-dnd provider that automatically switch to react-dnd-touch-backend\n * when a touch event is recognized (react-dnd-html5-backend won't work on\n * touch devices like phones).\n *\n * When doing the switch from HTML5 backend to Touch backend, the existing events\n * are passed to the new backend. Unsure if this is necessary in GDevelop case.\n */\nexport default DragDropContext(MultiBackend(HTML5toTouch))(\n  DragAndDropContextProvider\n);\n","// @flow\nimport * as React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = {\n  progress: { marginLeft: 8, verticalAlign: 'middle' },\n};\n\nexport default ({\n  children,\n  isLoading,\n}: {\n  children: React.Node,\n  isLoading: ?boolean,\n}) => (\n  <span>\n    {children}\n    {isLoading && <CircularProgress size={20} style={styles.progress} />}\n  </span>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport Dialog from '../UI/Dialog';\nimport TextField from '../UI/TextField';\nimport {\n  type LoginForm,\n  type LoginError,\n} from '../Utils/GDevelopServices/Authentification';\nimport LeftLoader from '../UI/LeftLoader';\nimport BackgroundText from '../UI/BackgroundText';\nimport { ColumnStackLayout } from '../UI/Layout';\n\ntype Props = {|\n  onClose: () => void,\n  onGoToLogin: () => void,\n  onCreateAccount: (form: LoginForm) => void,\n  createAccountInProgress: boolean,\n  error: ?LoginError,\n|};\n\ntype State = {|\n  form: LoginForm,\n|};\n\nexport const getEmailErrorText = (error: ?LoginError) => {\n  if (!error) return undefined;\n\n  if (error.code === 'auth/invalid-email') return 'This email is invalid';\n  if (error.code === 'auth/user-disabled') return 'The user was disabled';\n  if (error.code === 'auth/user-not-found')\n    return 'This user was not found: have you created your account?';\n  if (error.code === 'auth/email-already-in-use')\n    return 'This email was already used for another account';\n  if (error.code === 'auth/operation-not-allowed')\n    return 'Service seems to be unavailable, please try again later';\n  return undefined;\n};\n\nexport const getPasswordErrorText = (error: ?LoginError) => {\n  if (!error) return undefined;\n\n  if (error.code === 'auth/wrong-password') return 'The password is invalid';\n  if (error.code === 'auth/weak-password')\n    return 'This password is too weak: please use more letters and digits';\n  return undefined;\n};\n\nexport default class CreateAccountDialog extends Component<Props, State> {\n  state = {\n    form: {\n      email: '',\n      password: '',\n    },\n  };\n\n  _onCreateAccount = () => {\n    const { form } = this.state;\n    this.props.onCreateAccount(form);\n  };\n\n  render() {\n    const { onClose, createAccountInProgress, onGoToLogin, error } = this.props;\n\n    return (\n      <Dialog\n        title={<Trans>Create a new GDevelop account</Trans>}\n        actions={[\n          <FlatButton\n            label={<Trans>Back</Trans>}\n            disabled={createAccountInProgress}\n            key=\"close\"\n            primary={false}\n            onClick={onClose}\n          />,\n          <LeftLoader isLoading={createAccountInProgress} key=\"create-account\">\n            <RaisedButton\n              label={<Trans>Create my account</Trans>}\n              primary\n              disabled={createAccountInProgress}\n              onClick={this._onCreateAccount}\n            />\n          </LeftLoader>,\n        ]}\n        secondaryActions={[\n          <FlatButton\n            label={<Trans>Already have an account?</Trans>}\n            primary={false}\n            key=\"already-have-account\"\n            onClick={onGoToLogin}\n          />,\n        ]}\n        onRequestClose={() => {\n          if (!createAccountInProgress) onClose();\n        }}\n        maxWidth=\"sm\"\n        cannotBeDismissed={true}\n        open\n      >\n        <ColumnStackLayout noMargin>\n          <BackgroundText>\n            <Trans>\n              By creating an account and using GDevelop, you agree to the Terms\n              and Conditions. Having an account allows to export your game on\n              Android, as a desktop app and unlock other services for your\n              project!\n            </Trans>\n          </BackgroundText>\n          <TextField\n            autoFocus\n            value={this.state.form.email}\n            floatingLabelText={<Trans>Email</Trans>}\n            errorText={getEmailErrorText(error)}\n            fullWidth\n            onChange={(e, value) => {\n              this.setState({\n                form: {\n                  ...this.state.form,\n                  email: value,\n                },\n              });\n            }}\n          />\n          <TextField\n            value={this.state.form.password}\n            floatingLabelText={<Trans>Password</Trans>}\n            errorText={getPasswordErrorText(error)}\n            type=\"password\"\n            fullWidth\n            onChange={(e, value) => {\n              this.setState({\n                form: {\n                  ...this.state.form,\n                  password: value,\n                },\n              });\n            }}\n          />\n        </ColumnStackLayout>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport Dialog from '../UI/Dialog';\nimport { Column } from '../UI/Grid';\nimport TextField from '../UI/TextField';\nimport {\n  type LoginForm,\n  type LoginError,\n} from '../Utils/GDevelopServices/Authentification';\nimport RightLoader from '../UI/RightLoader';\nimport LeftLoader from '../UI/LeftLoader';\nimport Text from '../UI/Text';\nimport { getEmailErrorText, getPasswordErrorText } from './CreateAccountDialog';\nimport AlertMessage from '../UI/AlertMessage';\nimport { ColumnStackLayout } from '../UI/Layout';\n\ntype Props = {|\n  onClose: () => void,\n  onGoToCreateAccount: () => void,\n  onLogin: (form: LoginForm) => void,\n  onForgotPassword: (form: LoginForm) => void,\n  loginInProgress: boolean,\n  error: ?LoginError,\n  resetPasswordDialogOpen: boolean,\n  onCloseResetPasswordDialog: () => void,\n  forgotPasswordInProgress: boolean,\n|};\n\ntype State = {|\n  form: LoginForm,\n|};\n\nexport default class LoginDialog extends Component<Props, State> {\n  state = {\n    form: {\n      email: '',\n      password: '',\n    },\n  };\n\n  _onLogin = () => {\n    const { form } = this.state;\n    this.props.onLogin(form);\n  };\n\n  _onForgotPassword = () => {\n    const { form } = this.state;\n    this.props.onForgotPassword(form);\n  };\n\n  render() {\n    const {\n      onClose,\n      onGoToCreateAccount,\n      loginInProgress,\n      error,\n      resetPasswordDialogOpen,\n      onCloseResetPasswordDialog,\n      forgotPasswordInProgress,\n    } = this.props;\n    const actions = [\n      <FlatButton\n        label={<Trans>Back</Trans>}\n        disabled={loginInProgress || forgotPasswordInProgress}\n        key=\"back\"\n        primary={false}\n        onClick={onClose}\n      />,\n      <LeftLoader isLoading={loginInProgress} key=\"login\">\n        <RaisedButton\n          label={<Trans>Login</Trans>}\n          primary\n          onClick={this._onLogin}\n          disabled={loginInProgress || forgotPasswordInProgress}\n        />\n      </LeftLoader>,\n    ];\n\n    return (\n      <Dialog\n        title={<Trans>Login to your GDevelop account</Trans>}\n        actions={actions}\n        secondaryActions={[\n          <RightLoader\n            isLoading={forgotPasswordInProgress}\n            key=\"forgot-password\"\n          >\n            <FlatButton\n              label={<Trans>I forgot my password</Trans>}\n              primary={false}\n              disabled={loginInProgress || forgotPasswordInProgress}\n              onClick={this._onForgotPassword}\n            />\n          </RightLoader>,\n        ]}\n        onRequestClose={() => {\n          if (!loginInProgress && !forgotPasswordInProgress) onClose();\n        }}\n        maxWidth=\"sm\"\n        cannotBeDismissed={true}\n        open\n      >\n        <ColumnStackLayout noMargin>\n          <AlertMessage\n            kind=\"info\"\n            renderRightButton={() => (\n              <FlatButton\n                label={<Trans>Create my account</Trans>}\n                disabled={loginInProgress || forgotPasswordInProgress}\n                primary\n                onClick={onGoToCreateAccount}\n              />\n            )}\n          >\n            <Trans>Don't have an account yet?</Trans>\n          </AlertMessage>\n          <TextField\n            autoFocus\n            value={this.state.form.email}\n            floatingLabelText={<Trans>Email</Trans>}\n            errorText={getEmailErrorText(error)}\n            fullWidth\n            onChange={(e, value) => {\n              this.setState({\n                form: {\n                  ...this.state.form,\n                  email: value,\n                },\n              });\n            }}\n          />\n          <TextField\n            value={this.state.form.password}\n            floatingLabelText={<Trans>Password</Trans>}\n            errorText={getPasswordErrorText(error)}\n            type=\"password\"\n            fullWidth\n            onChange={(e, value) => {\n              this.setState({\n                form: {\n                  ...this.state.form,\n                  password: value,\n                },\n              });\n            }}\n          />\n        </ColumnStackLayout>\n        <Dialog\n          cannotBeDismissed={true}\n          open={resetPasswordDialogOpen}\n          title={<Trans>Reset your password</Trans>}\n          actions={[\n            <FlatButton\n              label={<Trans>Close</Trans>}\n              key=\"close\"\n              onClick={onCloseResetPasswordDialog}\n            />,\n          ]}\n        >\n          <Column noMargin>\n            <Text>\n              <Trans>\n                You should have received an email containing instructions to\n                reset and set a new password. Once it's done, you can use your\n                new password in GDevelop.\n              </Trans>\n            </Text>\n          </Column>\n        </Dialog>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport React from 'react';\n\nexport const watchPromiseInState = (\n  component: React.Component<*, *>,\n  stateField: string,\n  fn: () => Promise<any>\n) => {\n  component.setState({\n    [stateField]: true,\n  });\n  return fn()\n    .then(value => {\n      component.setState({\n        [stateField]: false,\n      });\n      return value;\n    })\n    .catch(err => {\n      component.setState({\n        [stateField]: false,\n      });\n      throw err;\n    });\n};\n","// @flow\n\nimport * as React from 'react';\nimport {\n  getUserUsages,\n  getUserSubscription,\n  getUserLimits,\n} from '../Utils/GDevelopServices/Usage';\nimport Authentification, {\n  type Profile,\n  type LoginForm,\n  type LoginError,\n} from '../Utils/GDevelopServices/Authentification';\nimport LoginDialog from './LoginDialog';\nimport { watchPromiseInState } from '../Utils/WatchPromiseInState';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport { sendSignupDone } from '../Utils/Analytics/EventSender';\nimport UserProfileContext, {\n  initialUserProfile,\n  type UserProfile,\n} from './UserProfileContext';\nimport CreateAccountDialog from './CreateAccountDialog';\n\ntype Props = {\n  authentification: Authentification,\n  children: React.Node,\n};\n\ntype State = {|\n  userProfile: UserProfile,\n  loginDialogOpen: boolean,\n  createAccountDialogOpen: boolean,\n  loginInProgress: boolean,\n  createAccountInProgress: boolean,\n  loginError: ?LoginError,\n  resetPasswordDialogOpen: boolean,\n  forgotPasswordInProgress: boolean,\n|};\n\nexport default class UserProfileProvider extends React.Component<Props, State> {\n  state = {\n    userProfile: initialUserProfile,\n    loginDialogOpen: false,\n    createAccountDialogOpen: false,\n    loginInProgress: false,\n    createAccountInProgress: false,\n    loginError: null,\n    resetPasswordDialogOpen: false,\n    forgotPasswordInProgress: false,\n  };\n\n  componentDidMount() {\n    this._resetUserProfile();\n    this.props.authentification.onUserChange(this._fetchUserProfile);\n  }\n\n  _resetUserProfile() {\n    this.setState({\n      userProfile: {\n        ...initialUserProfile,\n        onLogout: this._doLogout,\n        onLogin: () => this.openLoginDialog(true),\n        onCreateAccount: () => this.openCreateAccountDialog(true),\n        onRefreshUserProfile: this._fetchUserProfile,\n        getAuthorizationHeader: () =>\n          this.props.authentification.getAuthorizationHeader(),\n      },\n    });\n  }\n\n  _fetchUserProfile = () => {\n    const { authentification } = this.props;\n\n    authentification.getUserProfile((err, profile: ?Profile) => {\n      if (err && err.unauthenticated) {\n        return this.setState({\n          userProfile: {\n            ...this.state.userProfile,\n            authenticated: false,\n            profile: null,\n            usages: null,\n            limits: null,\n            subscription: null,\n          },\n        });\n      } else if (err || !profile) {\n        console.log('Unable to fetch user profile', err);\n        return;\n      }\n\n      this.setState(\n        {\n          userProfile: {\n            ...this.state.userProfile,\n            authenticated: true,\n            profile,\n          },\n        },\n        () => {\n          if (!profile) return;\n\n          getUserUsages(\n            authentification.getAuthorizationHeader,\n            profile.uid\n          ).then(usages =>\n            this.setState({\n              userProfile: {\n                ...this.state.userProfile,\n                usages,\n              },\n            })\n          );\n          getUserSubscription(\n            authentification.getAuthorizationHeader,\n            profile.uid\n          ).then(subscription =>\n            this.setState({\n              userProfile: {\n                ...this.state.userProfile,\n                subscription,\n              },\n            })\n          );\n          getUserLimits(\n            authentification.getAuthorizationHeader,\n            profile.uid\n          ).then(limits =>\n            this.setState({\n              userProfile: {\n                ...this.state.userProfile,\n                limits,\n              },\n            })\n          );\n        }\n      );\n    });\n  };\n\n  _doLogout = () => {\n    if (this.props.authentification) this.props.authentification.logout();\n    this._resetUserProfile();\n  };\n\n  _doLogin = (form: LoginForm) => {\n    const { authentification } = this.props;\n    if (!authentification) return;\n\n    watchPromiseInState(this, 'loginInProgress', () =>\n      authentification.login(form).then(\n        () => {\n          this._fetchUserProfile();\n          this.openLoginDialog(false);\n        },\n        (loginError: LoginError) => {\n          this.setState({\n            loginError,\n          });\n        }\n      )\n    );\n  };\n\n  _doCreateAccount = (form: LoginForm) => {\n    const { authentification } = this.props;\n    if (!authentification) return;\n\n    watchPromiseInState(this, 'createAccountInProgress', () =>\n      authentification.createAccount(form).then(\n        () => {\n          this._fetchUserProfile();\n          this.openLoginDialog(false);\n          sendSignupDone(form.email);\n        },\n        (loginError: LoginError) => {\n          this.setState({\n            loginError,\n          });\n        }\n      )\n    );\n  };\n\n  _doForgotPassword = (form: LoginForm) => {\n    const { authentification } = this.props;\n    if (!authentification) return;\n\n    watchPromiseInState(this, 'forgotPasswordInProgress', () =>\n      authentification.forgotPassword(form).then(\n        () => {\n          this.openResetPassword(true);\n        },\n        (loginError: LoginError) => {\n          this.setState({\n            loginError,\n          });\n          showWarningBox(\n            \"Unable to send you an email to reset your password. Please double-check that the email address that you've entered is valid.\"\n          );\n        }\n      )\n    );\n  };\n\n  openResetPassword = (open: boolean = true) => {\n    this.setState({\n      resetPasswordDialogOpen: open,\n    });\n  };\n\n  openLoginDialog = (open: boolean = true) => {\n    this.setState({\n      loginDialogOpen: open,\n      createAccountDialogOpen: false,\n    });\n  };\n\n  openCreateAccountDialog = (open: boolean = true) => {\n    this.setState({\n      loginDialogOpen: false,\n      createAccountDialogOpen: open,\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <UserProfileContext.Provider value={this.state.userProfile}>\n          {this.props.children}\n        </UserProfileContext.Provider>\n        {this.state.loginDialogOpen && (\n          <LoginDialog\n            onClose={() => this.openLoginDialog(false)}\n            onGoToCreateAccount={() => this.openCreateAccountDialog(true)}\n            onLogin={this._doLogin}\n            loginInProgress={this.state.loginInProgress}\n            error={this.state.loginError}\n            onForgotPassword={this._doForgotPassword}\n            resetPasswordDialogOpen={this.state.resetPasswordDialogOpen}\n            onCloseResetPasswordDialog={() => this.openResetPassword(false)}\n            forgotPasswordInProgress={this.state.forgotPasswordInProgress}\n          />\n        )}\n        {this.state.createAccountDialogOpen && (\n          <CreateAccountDialog\n            onClose={() => this.openCreateAccountDialog(false)}\n            onGoToLogin={() => this.openLoginDialog(true)}\n            onCreateAccount={this._doCreateAccount}\n            createAccountInProgress={this.state.createAccountInProgress}\n            error={this.state.loginError}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\n\nimport * as React from 'react';\nimport PreferencesContext, {\n  initialPreferences,\n  type Preferences,\n  type AlertMessageIdentifier,\n} from './PreferencesContext';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport { getIDEVersion } from '../../Version';\nimport {\n  type PreferencesValues,\n  type EditorMosaicName,\n} from './PreferencesContext';\nimport type { ResourceKind } from '../../ResourcesList/ResourceSource.flow';\nimport { type EditorMosaicNode } from '../../UI/EditorMosaic';\nimport { type FileMetadataAndStorageProviderName } from '../../ProjectsStorage';\nimport defaultShortcuts from '../../KeyboardShortcuts/DefaultShortcuts';\nimport { type CommandName } from '../../CommandPalette/CommandsList';\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\n\ntype Props = {|\n  children: React.Node,\n  disableCheckForUpdates: boolean,\n|};\n\ntype State = Preferences;\n\nconst LocalStorageItem = 'gd-preferences';\nconst MAX_RECENT_FILES_COUNT = 20;\n\nexport default class PreferencesProvider extends React.Component<Props, State> {\n  state = {\n    values: this._loadValuesFromLocalStorage() || initialPreferences.values,\n    setLanguage: this._setLanguage.bind(this),\n    setThemeName: this._setThemeName.bind(this),\n    setCodeEditorThemeName: this._setCodeEditorThemeName.bind(this),\n    setAutoDownloadUpdates: this._setAutoDownloadUpdates.bind(this),\n    checkUpdates: this._checkUpdates.bind(this),\n    setAutoDisplayChangelog: this._setAutoDisplayChangelog.bind(this),\n    showAlertMessage: this._showAlertMessage.bind(this),\n    showTutorialHint: this._showTutorialHint.bind(this),\n    verifyIfIsNewVersion: this._verifyIfIsNewVersion.bind(this),\n    setEventsSheetShowObjectThumbnails: this._setEventsSheetShowObjectThumbnails.bind(\n      this\n    ),\n    setAutosaveOnPreview: this._setAutosaveOnPreview.bind(this),\n    setUseNewInstructionEditorDialog: this._setUseNewInstructionEditorDialog.bind(\n      this\n    ),\n    setUseGDJSDevelopmentWatcher: this._setUseGDJSDevelopmentWatcher.bind(this),\n    setEventsSheetUseAssignmentOperators: this._setEventsSheetUseAssignmentOperators.bind(\n      this\n    ),\n    setShowEffectParameterNames: this._setShowEffectParameterNames.bind(this),\n    getLastUsedPath: this._getLastUsedPath.bind(this),\n    setLastUsedPath: this._setLastUsedPath.bind(this),\n    getDefaultEditorMosaicNode: this._getDefaultEditorMosaicNode.bind(this),\n    setDefaultEditorMosaicNode: this._setDefaultEditorMosaicNode.bind(this),\n    getRecentProjectFiles: this._getRecentProjectFiles.bind(this),\n    insertRecentProjectFile: this._insertRecentProjectFile.bind(this),\n    removeRecentProjectFile: this._removeRecentProjectFile.bind(this),\n    getAutoOpenMostRecentProject: this._getAutoOpenMostRecentProject.bind(this),\n    setAutoOpenMostRecentProject: this._setAutoOpenMostRecentProject.bind(this),\n    hadProjectOpenedDuringLastSession: this._hadProjectOpenedDuringLastSession.bind(\n      this\n    ),\n    setHasProjectOpened: this._setHasProjectOpened.bind(this),\n    setShortcutForCommand: this._setShortcutForCommand.bind(this),\n    resetShortcutsToDefault: this._resetShortcutsToDefault.bind(this),\n    getNewObjectDialogDefaultTab: this._getNewObjectDialogDefaultTab.bind(this),\n    setNewObjectDialogDefaultTab: this._setNewObjectDialogDefaultTab.bind(this),\n    getIsMenuBarHiddenInPreview: this._getIsMenuBarHiddenInPreview.bind(this),\n    setIsMenuBarHiddenInPreview: this._setIsMenuBarHiddenInPreview.bind(this),\n  };\n\n  componentDidMount() {\n    setTimeout(() => this._checkUpdates(), 10000);\n  }\n\n  _setLanguage(language: string) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          language,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setEventsSheetShowObjectThumbnails(\n    eventsSheetShowObjectThumbnails: boolean\n  ) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          eventsSheetShowObjectThumbnails,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setAutosaveOnPreview(autosaveOnPreview: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          autosaveOnPreview,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setUseNewInstructionEditorDialog(useNewInstructionEditorDialog: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          useNewInstructionEditorDialog,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setUseGDJSDevelopmentWatcher(useGDJSDevelopmentWatcher: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          useGDJSDevelopmentWatcher,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setEventsSheetUseAssignmentOperators(\n    eventsSheetUseAssignmentOperators: boolean\n  ) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          eventsSheetUseAssignmentOperators,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setShowEffectParameterNames(showEffectParameterNames: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          showEffectParameterNames,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setThemeName(themeName: string) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          themeName,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setCodeEditorThemeName(codeEditorThemeName: string) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          codeEditorThemeName,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setAutoDownloadUpdates(autoDownloadUpdates: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          autoDownloadUpdates,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setAutoDisplayChangelog(autoDisplayChangelog: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          autoDisplayChangelog,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _checkUpdates(forceDownload?: boolean) {\n    // Checking for updates is only done on Electron.\n    // Note: This could be abstracted away later if other updates mechanisms\n    // should be supported.\n    const { disableCheckForUpdates } = this.props;\n    if (!ipcRenderer || disableCheckForUpdates) return;\n\n    if (!!forceDownload || this.state.values.autoDownloadUpdates) {\n      ipcRenderer.send('updates-check-and-download');\n    } else {\n      ipcRenderer.send('updates-check');\n    }\n  }\n\n  _verifyIfIsNewVersion() {\n    const currentVersion = getIDEVersion();\n    const { lastLaunchedVersion } = this.state.values;\n    if (lastLaunchedVersion === currentVersion) {\n      // This is not a new version\n      return false;\n    }\n\n    // This is a new version: store the version number\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          lastLaunchedVersion: currentVersion,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n\n    if (lastLaunchedVersion === undefined) {\n      // This is the first time GDevelop is launched, don't\n      // warn about this version being new.\n      return false;\n    }\n\n    return true;\n  }\n\n  _showAlertMessage(identifier: AlertMessageIdentifier, show: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          hiddenAlertMessages: {\n            ...state.values.hiddenAlertMessages,\n            // $FlowFixMe - Flow won't typecheck this because of https://medium.com/flow-type/spreads-common-errors-fixes-9701012e9d58\n            [identifier]: !show,\n          },\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _showTutorialHint(identifier: string, show: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          hiddenTutorialHints: {\n            ...state.values.hiddenTutorialHints,\n            [identifier]: !show,\n          },\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _loadValuesFromLocalStorage(): ?PreferencesValues {\n    try {\n      const persistedState = localStorage.getItem(LocalStorageItem);\n      if (!persistedState) return null;\n\n      const values = JSON.parse(persistedState);\n\n      // \"Migrate\" non existing properties to their default values\n      // (useful when upgrading the preferences to a new version where\n      // a new preference was added).\n      for (const key in initialPreferences.values) {\n        if (\n          initialPreferences.values.hasOwnProperty(key) &&\n          typeof values[key] === 'undefined'\n        ) {\n          values[key] = initialPreferences.values[key];\n        }\n      }\n\n      return values;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  _persistValuesToLocalStorage(preferences: Preferences) {\n    try {\n      localStorage.setItem(\n        LocalStorageItem,\n        JSON.stringify(preferences.values)\n      );\n    } catch (e) {\n      console.warn('Unable to persist preferences', e);\n    }\n\n    return preferences;\n  }\n\n  _getLastUsedPath(project: gdProject, kind: ResourceKind) {\n    const projectPath = project.getProjectFile();\n    const { values } = this.state;\n    const projectPaths = values.projectLastUsedPaths[projectPath];\n    if (projectPaths && projectPaths[kind]) {\n      return projectPaths[kind];\n    }\n    if (!projectPath) return null;\n  }\n\n  _setLastUsedPath(project: gdProject, kind: ResourceKind, latestPath: string) {\n    const projectPath = project.getProjectFile();\n\n    const { values } = this.state;\n    const newProjectLastUsedPaths =\n      values.projectLastUsedPaths[projectPath] || {};\n    newProjectLastUsedPaths[kind] = latestPath;\n\n    this.setState(\n      {\n        values: {\n          ...values,\n          projectLastUsedPaths: {\n            ...values.projectLastUsedPaths,\n            [projectPath]: newProjectLastUsedPaths,\n          },\n        },\n      },\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _getDefaultEditorMosaicNode(name: EditorMosaicName) {\n    return this.state.values.defaultEditorMosaicNodes[name] || null;\n  }\n\n  _setDefaultEditorMosaicNode(name: EditorMosaicName, node: ?EditorMosaicNode) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          defaultEditorMosaicNodes: {\n            ...state.values.defaultEditorMosaicNodes,\n            // $FlowFixMe - Flow errors on unions in computed properties\n            [name]: node,\n          },\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _getRecentProjectFiles() {\n    return this.state.values.recentProjectFiles;\n  }\n\n  _setRecentProjectFiles(recents: Array<FileMetadataAndStorageProviderName>) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          recentProjectFiles: recents,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _insertRecentProjectFile(newRecentFile: FileMetadataAndStorageProviderName) {\n    let recentProjectFiles = this._getRecentProjectFiles();\n    const isNotNewRecentFile = recentFile =>\n      JSON.stringify(recentFile) !== JSON.stringify(newRecentFile);\n    this._setRecentProjectFiles(\n      [newRecentFile, ...recentProjectFiles.filter(isNotNewRecentFile)].slice(\n        0,\n        MAX_RECENT_FILES_COUNT\n      )\n    );\n  }\n\n  _removeRecentProjectFile(recentFile: FileMetadataAndStorageProviderName) {\n    const isNotSadPathRecentFile = recentFileItem =>\n      JSON.stringify(recentFileItem) !== JSON.stringify(recentFile);\n    this._setRecentProjectFiles(\n      [...this._getRecentProjectFiles().filter(isNotSadPathRecentFile)].slice(\n        0,\n        MAX_RECENT_FILES_COUNT\n      )\n    );\n  }\n\n  _getAutoOpenMostRecentProject() {\n    return this.state.values.autoOpenMostRecentProject;\n  }\n\n  _setAutoOpenMostRecentProject(enabled: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          autoOpenMostRecentProject: enabled,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _hadProjectOpenedDuringLastSession() {\n    return this.state.values.hasProjectOpened;\n  }\n\n  _setHasProjectOpened(enabled: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          hasProjectOpened: enabled,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _resetShortcutsToDefault() {\n    this.setState(\n      state => ({\n        values: { ...state.values, userShortcutMap: {} },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setShortcutForCommand(commandName: CommandName, shortcutString: string) {\n    const defaultShortcut = defaultShortcuts[commandName] || '';\n    const setToDefault = defaultShortcut === shortcutString;\n\n    const updatedShortcutMap = { ...this.state.values.userShortcutMap };\n    if (setToDefault) delete updatedShortcutMap[commandName];\n    else updatedShortcutMap[commandName] = shortcutString;\n\n    this.setState(\n      state => ({\n        values: { ...state.values, userShortcutMap: updatedShortcutMap },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _getNewObjectDialogDefaultTab() {\n    return this.state.values.newObjectDialogDefaultTab;\n  }\n\n  _setNewObjectDialogDefaultTab(\n    newObjectDialogDefaultTab: 'asset-store' | 'new-object'\n  ) {\n    this.setState(\n      state => ({\n        values: { ...state.values, newObjectDialogDefaultTab },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _getIsMenuBarHiddenInPreview() {\n    return this.state.values.isMenuBarHiddenInPreview;\n  }\n\n  _setIsMenuBarHiddenInPreview(enabled: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          isMenuBarHiddenInPreview: enabled,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  render() {\n    return (\n      <PreferencesContext.Provider value={this.state}>\n        {this.props.children}\n      </PreferencesContext.Provider>\n    );\n  }\n}\n","// @flow\n\nimport * as React from 'react';\nimport EventsFunctionsExtensionsContext, {\n  type EventsFunctionsExtensionsState,\n} from './EventsFunctionsExtensionsContext';\nimport {\n  loadProjectEventsFunctionsExtensions,\n  type IncludeFileContent,\n  type EventsFunctionCodeWriterCallbacks,\n  type EventsFunctionCodeWriter,\n  unloadProjectEventsFunctionsExtensions,\n  unloadProjectEventsFunctionsExtension,\n} from '.';\nimport {\n  type EventsFunctionsExtensionWriter,\n  type EventsFunctionsExtensionOpener,\n} from './Storage';\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\nimport xxhashjs from 'xxhashjs';\n\ntype Props = {|\n  children: React.Node,\n  i18n: I18nType,\n  makeEventsFunctionCodeWriter: EventsFunctionCodeWriterCallbacks => ?EventsFunctionCodeWriter,\n  eventsFunctionsExtensionWriter: ?EventsFunctionsExtensionWriter,\n  eventsFunctionsExtensionOpener: ?EventsFunctionsExtensionOpener,\n|};\n\ntype State = EventsFunctionsExtensionsState;\n\n/**\n * Allow children components to request the loading (or unloading) of\n * the events functions extensions of the project.\n * Useful when dealing with events functions extensions (new extension created,\n * removed, pasted, installed, etc...).\n */\nexport default class EventsFunctionsExtensionsProvider extends React.Component<\n  Props,\n  State\n> {\n  _eventsFunctionCodeWriter: ?EventsFunctionCodeWriter = this.props.makeEventsFunctionCodeWriter(\n    {\n      onWriteFile: this._onWriteFile.bind(this),\n    }\n  );\n  _includeFileHashs: { [string]: number } = {};\n  _lastLoadPromise: ?Promise<void> = null;\n  state = {\n    eventsFunctionsExtensionsError: null,\n    loadProjectEventsFunctionsExtensions: this._loadProjectEventsFunctionsExtensions.bind(\n      this\n    ),\n    unloadProjectEventsFunctionsExtensions: this._unloadProjectEventsFunctionsExtensions.bind(\n      this\n    ),\n    unloadProjectEventsFunctionsExtension: this._unloadProjectEventsFunctionsExtension.bind(\n      this\n    ),\n    reloadProjectEventsFunctionsExtensions: this._reloadProjectEventsFunctionsExtensions.bind(\n      this\n    ),\n    ensureLoadFinished: this._ensureLoadFinished.bind(this),\n    getEventsFunctionsExtensionWriter: () =>\n      this.props.eventsFunctionsExtensionWriter,\n    getEventsFunctionsExtensionOpener: () =>\n      this.props.eventsFunctionsExtensionOpener,\n    getIncludeFileHashs: () => this._includeFileHashs,\n  };\n\n  _onWriteFile({ includeFile, content }: IncludeFileContent) {\n    this._includeFileHashs[includeFile] = xxhashjs\n      .h32(content, 0xabcd)\n      .toNumber();\n  }\n\n  _ensureLoadFinished(): Promise<void> {\n    if (this._lastLoadPromise) {\n      console.info(\n        'Waiting on the events functions extensions to finish loading...'\n      );\n    } else {\n      console.info('Events functions extensions are ready.');\n    }\n\n    return this._lastLoadPromise\n      ? this._lastLoadPromise.then(() => {\n          console.info('Events functions extensions finished loading.');\n        })\n      : Promise.resolve();\n  }\n\n  _loadProjectEventsFunctionsExtensions(project: ?gdProject): Promise<void> {\n    const { i18n } = this.props;\n    const eventsFunctionCodeWriter = this._eventsFunctionCodeWriter;\n    if (!project || !eventsFunctionCodeWriter) return Promise.resolve();\n\n    const lastLoadPromise = this._lastLoadPromise || Promise.resolve();\n\n    this._lastLoadPromise = lastLoadPromise\n      .then(() =>\n        loadProjectEventsFunctionsExtensions(\n          project,\n          eventsFunctionCodeWriter,\n          i18n\n        )\n      )\n      .then(() =>\n        this.setState({\n          eventsFunctionsExtensionsError: null,\n        })\n      )\n      .catch((eventsFunctionsExtensionsError: Error) => {\n        this.setState({\n          eventsFunctionsExtensionsError,\n        });\n        showErrorBox({\n          message: i18n._(\n            t`An error has occured during functions generation. If GDevelop is installed, verify that nothing is preventing GDevelop from writing on disk. If you're running GDevelop online, verify your internet connection and refresh functions from the Project Manager.`\n          ),\n          rawError: eventsFunctionsExtensionsError,\n          errorId: 'events-functions-extensions-load-error',\n        });\n      })\n      .then(() => {\n        this._lastLoadPromise = null;\n      });\n\n    return this._lastLoadPromise;\n  }\n\n  _unloadProjectEventsFunctionsExtensions(project: gdProject) {\n    unloadProjectEventsFunctionsExtensions(project);\n  }\n\n  _unloadProjectEventsFunctionsExtension(\n    project: gdProject,\n    extensionName: string\n  ) {\n    unloadProjectEventsFunctionsExtension(project, extensionName);\n  }\n\n  _reloadProjectEventsFunctionsExtensions(project: ?gdProject): Promise<void> {\n    if (project) {\n      this._unloadProjectEventsFunctionsExtensions(project);\n    }\n    return this._loadProjectEventsFunctionsExtensions(project);\n  }\n\n  render() {\n    return (\n      <EventsFunctionsExtensionsContext.Provider value={this.state}>\n        {this.props.children}\n      </EventsFunctionsExtensionsContext.Provider>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport DragAndDropContextProvider from '../UI/DragAndDrop/DragAndDropContextProvider';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\nimport { getTheme } from '../UI/Theme';\nimport UserProfileProvider from '../Profile/UserProfileProvider';\nimport Authentification from '../Utils/GDevelopServices/Authentification';\nimport PreferencesProvider from './Preferences/PreferencesProvider';\nimport PreferencesContext from './Preferences/PreferencesContext';\nimport GDI18nProvider from '../Utils/i18n/GDI18nProvider';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport EventsFunctionsExtensionsProvider from '../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsProvider';\nimport {\n  type EventsFunctionCodeWriter,\n  type EventsFunctionCodeWriterCallbacks,\n} from '../EventsFunctionsExtensionsLoader';\nimport {\n  type EventsFunctionsExtensionWriter,\n  type EventsFunctionsExtensionOpener,\n} from '../EventsFunctionsExtensionsLoader/Storage';\nimport GDevelopThemeContext from '../UI/Theme/ThemeContext';\nimport { UnsavedChangesContextProvider } from './UnsavedChangesContext';\nimport { CommandsContextProvider } from '../CommandPalette/CommandsContext';\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport { AssetStoreStateProvider } from '../AssetStore/AssetStoreContext';\nimport { ResourceStoreStateProvider } from '../AssetStore/ResourceStore/ResourceStoreContext';\nimport { ExtensionStoreStateProvider } from '../AssetStore/ExtensionStore/ExtensionStoreContext';\nimport {\n  type ResourceFetcher,\n  ResourceFetcherContext,\n} from '../ProjectsStorage/ResourceFetcher';\nimport { GamesShowcaseStateProvider } from '../GamesShowcase/GamesShowcaseContext';\n\n// Add the rtl plugin to the JSS instance to support RTL languages in material-ui components.\nconst jss = create({\n  plugins: [...jssPreset().plugins, rtl()],\n});\n\ntype Props = {|\n  authentification: Authentification,\n  disableCheckForUpdates: boolean,\n  makeEventsFunctionCodeWriter: EventsFunctionCodeWriterCallbacks => ?EventsFunctionCodeWriter,\n  eventsFunctionsExtensionWriter: ?EventsFunctionsExtensionWriter,\n  eventsFunctionsExtensionOpener: ?EventsFunctionsExtensionOpener,\n  resourceFetcher: ResourceFetcher,\n  children: ({|\n    i18n: I18nType,\n  |}) => React.Node,\n|};\n\n/**\n * Wrap the children with Drag and Drop, Material UI theme and i18n React providers,\n * so that these modules can be used in the children.\n */\nexport default class Providers extends React.Component<Props, {||}> {\n  render() {\n    const {\n      disableCheckForUpdates,\n      authentification,\n      children,\n      makeEventsFunctionCodeWriter,\n      eventsFunctionsExtensionWriter,\n      eventsFunctionsExtensionOpener,\n      resourceFetcher,\n    } = this.props;\n    return (\n      <DragAndDropContextProvider>\n        <UnsavedChangesContextProvider>\n          <PreferencesProvider disableCheckForUpdates={disableCheckForUpdates}>\n            <PreferencesContext.Consumer>\n              {({ values }) => {\n                const theme = getTheme({\n                  themeName: values.themeName,\n                  language: values.language,\n                });\n                return (\n                  <GDI18nProvider language={values.language}>\n                    <GDevelopThemeContext.Provider value={theme.gdevelopTheme}>\n                      <StylesProvider jss={jss}>\n                        <ThemeProvider theme={theme.muiTheme}>\n                          <UserProfileProvider\n                            authentification={authentification}\n                          >\n                            <I18n update>\n                              {({ i18n }) => (\n                                <EventsFunctionsExtensionsProvider\n                                  i18n={i18n}\n                                  makeEventsFunctionCodeWriter={\n                                    makeEventsFunctionCodeWriter\n                                  }\n                                  eventsFunctionsExtensionWriter={\n                                    eventsFunctionsExtensionWriter\n                                  }\n                                  eventsFunctionsExtensionOpener={\n                                    eventsFunctionsExtensionOpener\n                                  }\n                                >\n                                  <CommandsContextProvider>\n                                    <AssetStoreStateProvider>\n                                      <ResourceStoreStateProvider>\n                                        <ExtensionStoreStateProvider>\n                                          <GamesShowcaseStateProvider>\n                                            <ResourceFetcherContext.Provider\n                                              value={resourceFetcher}\n                                            >\n                                              {children({ i18n })}\n                                            </ResourceFetcherContext.Provider>\n                                          </GamesShowcaseStateProvider>\n                                        </ExtensionStoreStateProvider>\n                                      </ResourceStoreStateProvider>\n                                    </AssetStoreStateProvider>\n                                  </CommandsContextProvider>\n                                </EventsFunctionsExtensionsProvider>\n                              )}\n                            </I18n>\n                          </UserProfileProvider>\n                        </ThemeProvider>\n                      </StylesProvider>\n                    </GDevelopThemeContext.Provider>\n                  </GDI18nProvider>\n                );\n              }}\n            </PreferencesContext.Consumer>\n          </PreferencesProvider>\n        </UnsavedChangesContextProvider>\n      </DragAndDropContextProvider>\n    );\n  }\n}\n","const themeData = {\n  base: 'vs-dark',\n  inherit: true,\n  rules: [\n    {\n      foreground: '969896',\n      token: 'comment',\n    },\n    {\n      foreground: 'ced1cf',\n      token: 'keyword.operator.class',\n    },\n    {\n      foreground: 'ced1cf',\n      token: 'constant.other',\n    },\n    {\n      foreground: 'ced1cf',\n      token: 'source.php.embedded.line',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'variable',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'support.other.variable',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'string.other.link',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'string.regexp',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'meta.tag',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'declaration.tag',\n    },\n    {\n      foreground: 'de935f',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: 'de935f',\n      token: 'constant.language',\n    },\n    {\n      foreground: 'de935f',\n      token: 'support.constant',\n    },\n    {\n      foreground: 'de935f',\n      token: 'constant.character',\n    },\n    {\n      foreground: 'de935f',\n      token: 'variable.parameter',\n    },\n    {\n      foreground: 'de935f',\n      token: 'punctuation.section.embedded',\n    },\n    {\n      foreground: 'de935f',\n      token: 'keyword.other.unit',\n    },\n    {\n      foreground: 'f0c674',\n      token: 'entity.name.class',\n    },\n    {\n      foreground: 'f0c674',\n      token: 'entity.name.type.class',\n    },\n    {\n      foreground: 'f0c674',\n      token: 'support.type',\n    },\n    {\n      foreground: 'f0c674',\n      token: 'support.class',\n    },\n    {\n      foreground: 'b5bd68',\n      token: 'string',\n    },\n    {\n      foreground: 'b5bd68',\n      token: 'constant.other.symbol',\n    },\n    {\n      foreground: 'b5bd68',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: 'b5bd68',\n      token: 'markup.heading',\n    },\n    {\n      foreground: '8abeb7',\n      token: 'keyword.operator',\n    },\n    {\n      foreground: '8abeb7',\n      token: 'constant.other.color',\n    },\n    {\n      foreground: '81a2be',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: '81a2be',\n      token: 'meta.function-call',\n    },\n    {\n      foreground: '81a2be',\n      token: 'support.function',\n    },\n    {\n      foreground: '81a2be',\n      token: 'keyword.other.special-method',\n    },\n    {\n      foreground: '81a2be',\n      token: 'meta.block-level',\n    },\n    {\n      foreground: 'b294bb',\n      token: 'keyword',\n    },\n    {\n      foreground: 'b294bb',\n      token: 'storage',\n    },\n    {\n      foreground: 'b294bb',\n      token: 'storage.type',\n    },\n    {\n      foreground: 'b294bb',\n      token: 'entity.name.tag.css',\n    },\n    {\n      foreground: 'ced2cf',\n      background: 'df5f5f',\n      token: 'invalid',\n    },\n    {\n      foreground: 'ced2cf',\n      background: '82a3bf',\n      token: 'meta.separator',\n    },\n    {\n      foreground: 'ced2cf',\n      background: 'b798bf',\n      token: 'invalid.deprecated',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#C5C8C6',\n    'editor.background': '#1D1F21',\n    'editor.selectionBackground': '#373B41',\n    'editor.lineHighlightBackground': '#282A2E',\n    'editorCursor.foreground': '#AEAFAD',\n    'editorWhitespace.foreground': '#4B4E55',\n  },\n};\n\nexport default {\n  name: 'Tomorrow-Night',\n  themeName: 'tomorrow-night',\n  themeData,\n};\n","const themeData = {\n  base: 'vs-dark',\n  inherit: true,\n  rules: [\n    {\n      foreground: '75715e',\n      token: 'comment',\n    },\n    {\n      foreground: 'e6db74',\n      token: 'string',\n    },\n    {\n      foreground: 'ae81ff',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: 'ae81ff',\n      token: 'constant.language',\n    },\n    {\n      foreground: 'ae81ff',\n      token: 'constant.character',\n    },\n    {\n      foreground: 'ae81ff',\n      token: 'constant.other',\n    },\n    {\n      foreground: 'f92672',\n      token: 'keyword',\n    },\n    {\n      foreground: 'f92672',\n      token: 'storage',\n    },\n    {\n      foreground: '66d9ef',\n      fontStyle: 'italic',\n      token: 'storage.type',\n    },\n    {\n      foreground: 'a6e22e',\n      fontStyle: 'underline',\n      token: 'entity.name.class',\n    },\n    {\n      foreground: 'a6e22e',\n      fontStyle: 'italic underline',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: 'a6e22e',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: 'fd971f',\n      fontStyle: 'italic',\n      token: 'variable.parameter',\n    },\n    {\n      foreground: 'f92672',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: 'a6e22e',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: '66d9ef',\n      token: 'support.function',\n    },\n    {\n      foreground: '66d9ef',\n      token: 'support.constant',\n    },\n    {\n      foreground: '66d9ef',\n      fontStyle: 'italic',\n      token: 'support.type',\n    },\n    {\n      foreground: '66d9ef',\n      fontStyle: 'italic',\n      token: 'support.class',\n    },\n    {\n      foreground: 'f8f8f0',\n      background: 'f92672',\n      token: 'invalid',\n    },\n    {\n      foreground: 'f8f8f0',\n      background: 'ae81ff',\n      token: 'invalid.deprecated',\n    },\n    {\n      foreground: 'cfcfc2',\n      token: 'meta.structure.dictionary.json string.quoted.double.json',\n    },\n    {\n      foreground: '75715e',\n      token: 'meta.diff',\n    },\n    {\n      foreground: '75715e',\n      token: 'meta.diff.header',\n    },\n    {\n      foreground: 'f92672',\n      token: 'markup.deleted',\n    },\n    {\n      foreground: 'a6e22e',\n      token: 'markup.inserted',\n    },\n    {\n      foreground: 'e6db74',\n      token: 'markup.changed',\n    },\n    {\n      foreground: 'ae81ff',\n      token: 'constant.numeric.line-number.find-in-files - match',\n    },\n    {\n      foreground: 'e6db74',\n      token: 'entity.name.filename.find-in-files',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#F8F8F2',\n    'editor.background': '#272822',\n    'editor.selectionBackground': '#49483E',\n    'editor.lineHighlightBackground': '#3E3D32',\n    'editorCursor.foreground': '#F8F8F0',\n    'editorWhitespace.foreground': '#3B3A32',\n    'editorIndentGuide.activeBackground': '#9D550F',\n    'editor.selectionHighlightBorder': '#222218',\n  },\n};\n\nexport default {\n  name: 'Monokai',\n  themeName: 'monokai',\n  themeData,\n};\n","const themeData = {\n  base: 'vs',\n  inherit: true,\n  rules: [\n    {\n      foreground: '8e908c',\n      token: 'comment',\n    },\n    {\n      foreground: '666969',\n      token: 'keyword.operator.class',\n    },\n    {\n      foreground: '666969',\n      token: 'constant.other',\n    },\n    {\n      foreground: '666969',\n      token: 'source.php.embedded.line',\n    },\n    {\n      foreground: 'c82829',\n      token: 'variable',\n    },\n    {\n      foreground: 'c82829',\n      token: 'support.other.variable',\n    },\n    {\n      foreground: 'c82829',\n      token: 'string.other.link',\n    },\n    {\n      foreground: 'c82829',\n      token: 'string.regexp',\n    },\n    {\n      foreground: 'c82829',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: 'c82829',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: 'c82829',\n      token: 'meta.tag',\n    },\n    {\n      foreground: 'c82829',\n      token: 'declaration.tag',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'constant.language',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'support.constant',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'constant.character',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'variable.parameter',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'punctuation.section.embedded',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'keyword.other.unit',\n    },\n    {\n      foreground: 'c99e00',\n      token: 'entity.name.class',\n    },\n    {\n      foreground: 'c99e00',\n      token: 'entity.name.type.class',\n    },\n    {\n      foreground: 'c99e00',\n      token: 'support.type',\n    },\n    {\n      foreground: 'c99e00',\n      token: 'support.class',\n    },\n    {\n      foreground: '718c00',\n      token: 'string',\n    },\n    {\n      foreground: '718c00',\n      token: 'constant.other.symbol',\n    },\n    {\n      foreground: '718c00',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: '718c00',\n      token: 'markup.heading',\n    },\n    {\n      foreground: '3e999f',\n      token: 'keyword.operator',\n    },\n    {\n      foreground: '3e999f',\n      token: 'constant.other.color',\n    },\n    {\n      foreground: '4271ae',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: '4271ae',\n      token: 'meta.function-call',\n    },\n    {\n      foreground: '4271ae',\n      token: 'support.function',\n    },\n    {\n      foreground: '4271ae',\n      token: 'keyword.other.special-method',\n    },\n    {\n      foreground: '4271ae',\n      token: 'meta.block-level',\n    },\n    {\n      foreground: '8959a8',\n      token: 'keyword',\n    },\n    {\n      foreground: '8959a8',\n      token: 'storage',\n    },\n    {\n      foreground: '8959a8',\n      token: 'storage.type',\n    },\n    {\n      foreground: 'ffffff',\n      background: 'c82829',\n      token: 'invalid',\n    },\n    {\n      foreground: 'ffffff',\n      background: '4271ae',\n      token: 'meta.separator',\n    },\n    {\n      foreground: 'ffffff',\n      background: '8959a8',\n      token: 'invalid.deprecated',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#4D4D4C',\n    'editor.background': '#FFFFFF',\n    'editor.selectionBackground': '#D6D6D6',\n    'editor.lineHighlightBackground': '#EFEFEF',\n    'editorCursor.foreground': '#AEAFAD',\n    'editorWhitespace.foreground': '#D1D1D1',\n  },\n};\n\nexport default {\n  name: 'Tomorrow',\n  themeName: 'tomorrow',\n  themeData,\n};\n","const themeData = {\n  base: 'vs-dark',\n  inherit: true,\n  rules: [\n    {\n      foreground: '657b83',\n      fontStyle: 'italic',\n      token: 'comment',\n    },\n    {\n      foreground: '2aa198',\n      token: 'string',\n    },\n    {\n      foreground: 'd30102',\n      token: 'string.regexp',\n    },\n    {\n      foreground: 'd33682',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: '268bd2',\n      token: 'variable.language',\n    },\n    {\n      foreground: '268bd2',\n      token: 'variable.other',\n    },\n    {\n      foreground: '859900',\n      token: 'keyword',\n    },\n    {\n      foreground: '93a1a1',\n      fontStyle: 'bold',\n      token: 'storage',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'entity.name.class',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'entity.name.type.class',\n    },\n    {\n      foreground: '268bd2',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: '859900',\n      token: 'punctuation.definition.variable',\n    },\n    {\n      foreground: 'd30102',\n      token: 'punctuation.section.embedded.begin',\n    },\n    {\n      foreground: 'd30102',\n      token: 'punctuation.section.embedded.end',\n    },\n    {\n      foreground: 'b58900',\n      token: 'constant.language',\n    },\n    {\n      foreground: 'b58900',\n      token: 'meta.preprocessor',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'support.function.construct',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'keyword.other.new',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'constant.character',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'constant.other',\n    },\n    {\n      foreground: '6c71c4',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: '268bd2',\n      fontStyle: 'bold',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: '657b83',\n      token: 'punctuation.definition.tag',\n    },\n    {\n      foreground: '93a1a1',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: '268bd2',\n      token: 'support.function',\n    },\n    {\n      foreground: 'd30102',\n      token: 'punctuation.separator.continuation',\n    },\n    {\n      foreground: '859900',\n      token: 'support.type',\n    },\n    {\n      foreground: '859900',\n      token: 'support.class',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'support.type.exception',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#93A1A1',\n    'editor.background': '#002B36',\n    'editor.selectionBackground': '#073642',\n    'editor.lineHighlightBackground': '#073642',\n    'editorCursor.foreground': '#D30102',\n    'editorWhitespace.foreground': '#93A1A1',\n  },\n};\n\nexport default {\n  name: 'Solarized-Dark',\n  themeName: 'solarized-dark',\n  themeData,\n};\n","const themeData = {\n  base: 'vs',\n  inherit: true,\n  rules: [\n    {\n      foreground: '93a1a1',\n      token: 'comment',\n    },\n    {\n      foreground: '2aa198',\n      token: 'string',\n    },\n    {\n      foreground: 'd30102',\n      token: 'string.regexp',\n    },\n    {\n      foreground: 'd33682',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: '268bd2',\n      token: 'variable.language',\n    },\n    {\n      foreground: '268bd2',\n      token: 'variable.other',\n    },\n    {\n      foreground: '859900',\n      token: 'keyword',\n    },\n    {\n      foreground: '073642',\n      fontStyle: 'bold',\n      token: 'storage',\n    },\n    {\n      foreground: '268bd2',\n      token: 'entity.name.class',\n    },\n    {\n      foreground: '268bd2',\n      token: 'entity.name.type.class',\n    },\n    {\n      foreground: '268bd2',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: '859900',\n      token: 'punctuation.definition.variable',\n    },\n    {\n      foreground: 'd30102',\n      token: 'punctuation.section.embedded.begin',\n    },\n    {\n      foreground: 'd30102',\n      token: 'punctuation.section.embedded.end',\n    },\n    {\n      foreground: 'b58900',\n      token: 'constant.language',\n    },\n    {\n      foreground: 'b58900',\n      token: 'meta.preprocessor',\n    },\n    {\n      foreground: 'd30102',\n      token: 'support.function.construct',\n    },\n    {\n      foreground: 'd30102',\n      token: 'keyword.other.new',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'constant.character',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'constant.other',\n    },\n    {\n      foreground: '268bd2',\n      fontStyle: 'bold',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: '93a1a1',\n      token: 'punctuation.definition.tag.begin',\n    },\n    {\n      foreground: '93a1a1',\n      token: 'punctuation.definition.tag.end',\n    },\n    {\n      foreground: '93a1a1',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: '268bd2',\n      token: 'support.function',\n    },\n    {\n      foreground: 'd30102',\n      token: 'punctuation.separator.continuation',\n    },\n    {\n      foreground: '859900',\n      token: 'support.type',\n    },\n    {\n      foreground: '859900',\n      token: 'support.class',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'support.type.exception',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#586E75',\n    'editor.background': '#FDF6E3',\n    'editor.selectionBackground': '#073642',\n    'editor.lineHighlightBackground': '#EEE8D5',\n    'editorCursor.foreground': '#000000',\n    'editorWhitespace.foreground': '#93A1A1',\n  },\n};\n\nexport default {\n  name: 'Solarized-Light',\n  themeName: 'solarized-light',\n  themeData,\n};\n","const themeData = {\n  base: 'vs-dark',\n  inherit: true,\n  rules: [\n    {\n      foreground: 'ffffff',\n      background: '0f0f0f',\n      token: 'text',\n    },\n    {\n      background: '000000',\n      token: 'source.ruby.rails.embedded.html',\n    },\n    {\n      foreground: 'ffffff',\n      background: '101010',\n      token: 'text.html.ruby',\n    },\n    {\n      foreground: 'ccff33',\n      background: '000000',\n      token: 'invalid',\n    },\n    {\n      foreground: 'ccff33',\n      background: '000000',\n      token: 'invalid.deprecated',\n    },\n    {\n      foreground: '99cc99',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: 'ffffff',\n      background: '000000',\n      token: 'source',\n    },\n    {\n      foreground: '9933cc',\n      token: 'comment',\n    },\n    {\n      foreground: '339999',\n      token: 'constant',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'keyword',\n    },\n    {\n      foreground: 'edf8f9',\n      token: 'keyword.preprocessor',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'keyword.preprocessor directive',\n    },\n    {\n      foreground: 'ffcc00',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: 'ffcc00',\n      token: 'storage.type.function.js',\n    },\n    {\n      fontStyle: 'italic',\n      token: 'variable.parameter',\n    },\n    {\n      foreground: '772cb7',\n      background: '070707',\n      token: 'source comment.block',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'variable.other',\n    },\n    {\n      foreground: 'ffcc00',\n      token: 'support.function',\n    },\n    {\n      foreground: '66ff00',\n      token: 'string',\n    },\n    {\n      foreground: 'aaaaaa',\n      token: 'string constant.character.escape',\n    },\n    {\n      foreground: '000000',\n      background: 'cccc33',\n      token: 'string.interpolated',\n    },\n    {\n      foreground: '44b4cc',\n      token: 'string.regexp',\n    },\n    {\n      foreground: 'cccc33',\n      token: 'string.literal',\n    },\n    {\n      foreground: '555555',\n      token: 'string.interpolated constant.character.escape',\n    },\n    {\n      fontStyle: 'underline',\n      token: 'entity.name.class',\n    },\n    {\n      fontStyle: 'underline',\n      token: 'support.class.js',\n    },\n    {\n      fontStyle: 'italic underline',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'meta.tag.inline.any.html',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'meta.tag.block.any.html',\n    },\n    {\n      foreground: '99cc99',\n      fontStyle: 'italic',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: 'dde93d',\n      token: 'keyword.other',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'meta.selector.css',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'entity.other.attribute-name.pseudo-class.css',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'entity.name.tag.wildcard.css',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'entity.other.attribute-name.id.css',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'entity.other.attribute-name.class.css',\n    },\n    {\n      foreground: '999966',\n      token: 'support.type.property-name.css',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'keyword.other.unit.css',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'constant.other.rgb-value.css',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'constant.numeric.css',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'support.function.event-handler.js',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'keyword.operator.js',\n    },\n    {\n      foreground: 'cccc66',\n      token: 'keyword.control.js',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'support.class.prototype.js',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'object.property.function.prototype.js',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#FFFFFF',\n    'editor.background': '#0F0F0F',\n    'editor.selectionBackground': '#6699CC',\n    'editor.lineHighlightBackground': '#333333',\n    'editorCursor.foreground': '#FFFFFF',\n    'editorWhitespace.foreground': '#404040',\n  },\n};\n\nexport default {\n  name: 'Vibrant Ink',\n  themeName: 'vibrant-ink',\n  themeData,\n};\n","const themeData = {\n  base: 'vs',\n  inherit: true,\n  rules: [\n    {\n      foreground: '999988',\n      fontStyle: 'italic',\n      token: 'comment',\n    },\n    {\n      foreground: '999999',\n      fontStyle: 'bold',\n      token: 'comment.block.preprocessor',\n    },\n    {\n      foreground: '999999',\n      fontStyle: 'bold italic',\n      token: 'comment.documentation',\n    },\n    {\n      foreground: '999999',\n      fontStyle: 'bold italic',\n      token: 'comment.block.documentation',\n    },\n    {\n      foreground: 'a61717',\n      background: 'e3d2d2',\n      token: 'invalid.illegal',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'keyword',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'storage',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'keyword.operator',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'constant.language',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'support.constant',\n    },\n    {\n      foreground: '445588',\n      fontStyle: 'bold',\n      token: 'storage.type',\n    },\n    {\n      foreground: '445588',\n      fontStyle: 'bold',\n      token: 'support.type',\n    },\n    {\n      foreground: '008080',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: '0086b3',\n      token: 'variable.other',\n    },\n    {\n      foreground: '999999',\n      token: 'variable.language',\n    },\n    {\n      foreground: '445588',\n      fontStyle: 'bold',\n      token: 'entity.name.type',\n    },\n    {\n      foreground: '445588',\n      fontStyle: 'bold',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: '445588',\n      fontStyle: 'bold',\n      token: 'support.class',\n    },\n    {\n      foreground: '008080',\n      token: 'variable.other.constant',\n    },\n    {\n      foreground: '800080',\n      token: 'constant.character.entity',\n    },\n    {\n      foreground: '990000',\n      token: 'entity.name.exception',\n    },\n    {\n      foreground: '990000',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: '990000',\n      token: 'support.function',\n    },\n    {\n      foreground: '990000',\n      token: 'keyword.other.name-of-parameter',\n    },\n    {\n      foreground: '555555',\n      token: 'entity.name.section',\n    },\n    {\n      foreground: '000080',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: '008080',\n      token: 'variable.parameter',\n    },\n    {\n      foreground: '008080',\n      token: 'support.variable',\n    },\n    {\n      foreground: '009999',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: '009999',\n      token: 'constant.other',\n    },\n    {\n      foreground: 'dd1144',\n      token: 'string - string source',\n    },\n    {\n      foreground: 'dd1144',\n      token: 'constant.character',\n    },\n    {\n      foreground: '009926',\n      token: 'string.regexp',\n    },\n    {\n      foreground: '990073',\n      token: 'constant.other.symbol',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'punctuation',\n    },\n    {\n      foreground: '000000',\n      background: 'ffdddd',\n      token: 'markup.deleted',\n    },\n    {\n      fontStyle: 'italic',\n      token: 'markup.italic',\n    },\n    {\n      foreground: 'aa0000',\n      token: 'markup.error',\n    },\n    {\n      foreground: '999999',\n      token: 'markup.heading.1',\n    },\n    {\n      foreground: '000000',\n      background: 'ddffdd',\n      token: 'markup.inserted',\n    },\n    {\n      foreground: '888888',\n      token: 'markup.output',\n    },\n    {\n      foreground: '888888',\n      token: 'markup.raw',\n    },\n    {\n      foreground: '555555',\n      token: 'markup.prompt',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'markup.bold',\n    },\n    {\n      foreground: 'aaaaaa',\n      token: 'markup.heading',\n    },\n    {\n      foreground: 'aa0000',\n      token: 'markup.traceback',\n    },\n    {\n      fontStyle: 'underline',\n      token: 'markup.underline',\n    },\n    {\n      foreground: '999999',\n      background: 'eaf2f5',\n      token: 'meta.diff.range',\n    },\n    {\n      foreground: '999999',\n      background: 'eaf2f5',\n      token: 'meta.diff.index',\n    },\n    {\n      foreground: '999999',\n      background: 'eaf2f5',\n      token: 'meta.separator',\n    },\n    {\n      foreground: '999999',\n      background: 'ffdddd',\n      token: 'meta.diff.header.from-file',\n    },\n    {\n      foreground: '999999',\n      background: 'ddffdd',\n      token: 'meta.diff.header.to-file',\n    },\n    {\n      foreground: '4183c4',\n      token: 'meta.link',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#000000',\n    'editor.background': '#F8F8FF',\n    'editor.selectionBackground': '#B4D5FE',\n    'editor.lineHighlightBackground': '#FFFEEB',\n    'editorCursor.foreground': '#666666',\n    'editorWhitespace.foreground': '#BBBBBB',\n  },\n};\n\nexport default {\n  name: 'GitHub',\n  themeName: 'github',\n  themeData,\n};\n","const themeData = {\n  base: 'vs-dark',\n  inherit: true,\n  rules: [\n    {\n      foreground: '616e88',\n      token: 'comment',\n    },\n    {\n      foreground: '616e88',\n      fontStyle: 'bold',\n      token: 'comment.block.preprocessor',\n    },\n    {\n      foreground: '81a1c1',\n      token: 'comment.block.documentation',\n    },\n    {\n      foreground: 'd8dee9',\n      background: 'bf616a',\n      token: 'invalid.illegal',\n    },\n    {\n      foreground: '81a1c1',\n      token: 'keyword',\n    },\n    {\n      foreground: '81a1c1',\n      token: 'storage',\n    },\n    {\n      foreground: '81a1c1',\n      token: 'keyword.operator',\n    },\n    {\n      foreground: '81a1c1',\n      token: 'constant.language',\n    },\n    {\n      foreground: '81a1c1',\n      token: 'support.constant',\n    },\n    {\n      foreground: '8fbcbb',\n      token: 'storage.type',\n    },\n    {\n      foreground: '8fBcbb',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: 'd8dee9',\n      token: 'variable.other',\n    },\n    {\n      foreground: 'd8dee9',\n      token: 'variable.language',\n    },\n    {\n      foreground: '8fbcbb',\n      token: 'entity.name.type',\n    },\n    {\n      foreground: '8fbcbb',\n      fontStyle: 'bold',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: '8fbcbb',\n      token: 'support.class',\n    },\n    {\n      foreground: '8fbcbb',\n      token: 'variable.other.constant',\n    },\n    {\n      foreground: '88c0d0',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: '88c0d0',\n      token: 'support.function',\n    },\n    {\n      foreground: '88c0d0',\n      token: 'entity.name.section',\n    },\n    {\n      foreground: '5e81ac',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: 'd8dee9',\n      token: 'variable.parameter',\n    },\n    {\n      foreground: 'd8dee9',\n      token: 'support.variable',\n    },\n    {\n      foreground: 'b48ead',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: 'b48ead',\n      token: 'constant.other',\n    },\n    {\n      foreground: 'a3be8c',\n      token: 'string - string source',\n    },\n    {\n      foreground: 'ebcb8b',\n      token: 'constant.character',\n    },\n    {\n      foreground: 'ebcb8b',\n      token: 'string.regexp',\n    },\n    {\n      foreground: 'd8dee9',\n      fontStyle: 'bold',\n      token: 'constant.other.symbol',\n    },\n    {\n      fontground: 'eceff4',\n      token: 'punctuation',\n    },\n    {\n      foreground: 'bf616a',\n      token: 'markup.deleted',\n    },\n    {\n      fontStyle: 'italic',\n      token: 'markup.italic',\n    },\n    {\n      foreground: '88c0d0',\n      token: 'markup.heading',\n    },\n    {\n      foreground: 'a3be8c',\n      token: 'markup.inserted',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'markup.bold',\n    },\n    {\n      fontStyle: 'underline',\n      token: 'markup.underline',\n    },\n    {\n      foreground: '8fbcbb',\n      token: 'meta.diff.range',\n    },\n    {\n      foreground: '8fbcbb',\n      token: 'meta.diff.header.from-file',\n    },\n  ],\n  colors: {\n    'editorActiveLineNumber.foreground': '#d8dee9',\n    'editorCursor.foreground': '#d8dee9',\n    'editorHint.border': '#ebcb8b',\n    'editorHint.foreground': '#ebcb8b',\n    'editorIndentGuide.background': '#434c5e',\n    'editorIndentGuide.activeBackground': '#4c566a',\n    'editorLineNumber.foreground': '#4c566a',\n    'editorLineNumber.activeForeground': '#d8dee9',\n    'editorWhitespace.foreground': '#4c566a',\n    'editorWidget.background': '#2e3440',\n    'editorWidget.border': '#3b4252',\n    'editor.background': '#2e3440',\n    'editor.foreground': '#d8dee9',\n    'editor.hoverHighlightBackground': '#3b4252',\n    'editor.findMatchBackground': '#88c0d0',\n    'editor.findMatchHighlightBackground': '#88c0d0',\n    'editor.findRangeHighlightBackground': '#88c0d0',\n    'editor.lineHighlightBackground': '#3b4252',\n    'editor.lineHighlightBorder': '#3b4252',\n    'editor.inactiveSelectionBackground': '#434c5e',\n    'editor.selectionBackground': '#434c5e',\n    'editor.selectionHighlightBackground': '#434c5e',\n    'editor.rangeHighlightBackground': '#434c5e',\n    'editor.wordHighlightBackground': '#81a1c1',\n    'editor.wordHighlightStrongBackground': '#81a1c1',\n    'editorError.foreground': '#bf616a',\n    'editorError.border': '#bf616a',\n    'editorWarning.foreground': '#ebcb8b',\n    'editorWarning.border': '#ebcb8b',\n    'editorBracketMatch.background': '#2e3440',\n    'editorBracketMatch.border': '#88c0d0',\n    'editorCodeLens.foreground': '#4c566a',\n    'editorGroup.background': '#2e3440',\n    'editorGroup.border': '#3b4252',\n    'editorGroup.dropBackground': '#3b4252',\n    'editorGroupHeader.noTabsBackground': '#2e3440',\n    'editorGroupHeader.tabsBackground': '#2e3440',\n    'editorGroupHeader.tabsBorder': '#3b4252',\n    'editorGutter.background': '#2e3440',\n    'editorGutter.modifiedBackground': '#ebcb8b',\n    'editorGutter.addedBackground': '#a3be8c',\n    'editorGutter.deletedBackground': '#bf616a',\n    'editorHoverWidget.background': '#3b4252',\n    'editorHoverWidget.border': '#3b4252',\n    'editorLink.activeForeground': '#88c0d0',\n    'editorMarkerNavigation.background': '#5e81ac',\n    'editorMarkerNavigationError.background': '#bf616a',\n    'editorMarkerNavigationWarning.background': '#ebcb8b',\n    'editorOverviewRuler.border': '#3b4252',\n    'editorOverviewRuler.currentContentForeground': '#3b4252',\n    'editorOverviewRuler.incomingContentForeground': '#3b4252',\n    'editorOverviewRuler.findMatchForeground': '#88c0d0',\n    'editorOverviewRuler.rangeHighlightForeground': '#88c0d0',\n    'editorOverviewRuler.selectionHighlightForeground': '#88c0d0',\n    'editorOverviewRuler.wordHighlightForeground': '#88c0d0',\n    'editorOverviewRuler.wordHighlightStrongForeground': '#88c0d0',\n    'editorOverviewRuler.modifiedForeground': '#ebcb8b',\n    'editorOverviewRuler.addedForeground': '#a3be8c',\n    'editorOverviewRuler.deletedForeground': '#bf616a',\n    'editorOverviewRuler.errorForeground': '#bf616a',\n    'editorOverviewRuler.warningForeground': '#ebcb8b',\n    'editorOverviewRuler.infoForeground': '#81a1c1',\n    'editorRuler.foreground': '#434c5e',\n    'editorSuggestWidget.background': '#2e3440',\n    'editorSuggestWidget.border': '#3b4252',\n    'editorSuggestWidget.foreground': '#d8dee9',\n    'editorSuggestWidget.highlightForeground': '#88c0d0',\n    'editorSuggestWidget.selectedBackground': '#434c5e',\n  },\n};\n\nexport default {\n  name: 'Nord-Dark',\n  themeName: 'nord-dark',\n  themeData,\n};\n","// @flow\nimport TomorrowNight from './TomorrowNight';\nimport Monokai from './Monokai';\nimport Tomorrow from './Tomorrow';\nimport SolarizedDark from './SolarizedDark';\nimport SolarizedLight from './SolarizedLight';\nimport VibrantInk from './VibrantInk';\nimport GitHub from './GitHub';\nimport NordDark from './NordDark';\n\ntype CodeEditorTheme = {|\n  name: string,\n  themeName: string,\n  themeData?: any,\n|};\n\n// Want to add a new theme? Grab a theme made for Visual Studio Code (Monaco Editor)\n// (for example on https://bitwiser.in/monaco-themes/). Copy an existing file (like Monokai.js),\n// replace themeData, update the name, and finally add it to this list\n// (+import it at the top of the file):\nconst themes: Array<CodeEditorTheme> = [\n  // Built-in Monaco editor themes\n  {\n    name: 'Visual Studio',\n    themeName: 'vs',\n  },\n  {\n    name: 'Visual Studio Dark',\n    themeName: 'vs-dark',\n  },\n  // Third parties themes\n  GitHub,\n  Monokai,\n  SolarizedDark,\n  SolarizedLight,\n  Tomorrow,\n  TomorrowNight,\n  VibrantInk,\n  NordDark,\n];\n\nexport const getAllThemes = () => themes;\n","// @flow\n\nconst rtlLanguages = new Set([\n  // Hebrew scripts:\n  'he_IL' /* Hebrew */,\n\n  // Arabic scripts:\n  'ar_SA' /* Arabic */,\n  'az_AZ' /* Azerbaijani */,\n  'ms_MY' /* Malay */,\n  'fa_IR' /* Persian */,\n  'ur_PK' /* Urdu */,\n]);\n\nexport function isLtr(name: string): boolean {\n  return !rtlLanguages.has(name);\n}\n\n// TODO: Implement full support of RTL languages by adding dir=\"ltr\"\n// to the `body` element. Doing so will revert most layouts in the app,\n// which is fine. There are a few things to take care of:\n// - ImagePreview (already fixed),\n// - TextFieldWithButtonLayout (margins on the button),\n// - ColorField (margins/positioning off the button),\n// - EditorMosaic (i.e: react-mosaic) has issues with the positioning of the resize handles,\n// - and anything else using absolute positioning.\n","// @flow\n\nexport default function<Input, Output>(func: Input => Output): Input => Output {\n  const primitives = new Map<Input, Output>();\n  // $FlowFixMe - WeakMap is only used when Input is an object.\n  const objects = new WeakMap<Input, Output>();\n\n  function cacheFor(input: Input) {\n    const isObject = typeof input === 'object';\n    return isObject ? objects : primitives;\n  }\n\n  return (input: Input): Output => {\n    const cache = cacheFor(input);\n    const cachedValue = cache.get(input);\n    if (cachedValue) return cachedValue;\n\n    const value = func(input);\n    cache.set(input, value);\n    return value;\n  };\n}\n","import { createGdevelopTheme } from '../CreateTheme';\n\nimport darkStyles from './DarkThemeVariables.json';\nimport './DarkThemeVariables.css';\n\nexport default createGdevelopTheme(darkStyles, 'DarkTheme', 'dark');\n","import { createGdevelopTheme } from '../CreateTheme';\n\nimport darkStyles from './NordThemeVariables.json';\nimport './NordThemeVariables.css';\n\nexport default createGdevelopTheme(\n  darkStyles,\n  'NordTheme',\n  'dark',\n  'hue-rotate(-15deg) saturate(57%) brightness(120%)'\n);\n","import { createGdevelopTheme } from '../CreateTheme';\n\nimport darkStyles from './SolarizedDarkThemeVariables';\nimport './SolarizedDarkThemeVariables.css';\n\nexport default createGdevelopTheme(\n  darkStyles,\n  'SolarizedDarkTheme',\n  'dark',\n  'hue-rotate(-15deg) saturate(70%) brightness(90%)'\n);\n","// This file is generated by create-new-theme.js script\nimport DefaultTheme from './DefaultTheme';\nimport DarkTheme from './DarkTheme';\nimport NordTheme from './NordTheme';\nimport SolarizedDarkTheme from './SolarizedDarkTheme';\n\n/*eslint no-useless-computed-key: \"off\"*/\nexport const themes = {\n  ['GDevelop default']: DefaultTheme,\n  ['Dark']: DarkTheme,\n  ['Nord']: NordTheme,\n  ['Solarized Dark']: SolarizedDarkTheme,\n};\n","// @flow\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { isLtr } from '../../Utils/i18n/RtlLanguages';\nimport memoize from '../../Utils/Memoize';\n\nimport DefaultTheme from './DefaultTheme';\nimport { themes as themeList } from './ThemeRegistry';\n\nimport 'react-virtualized/styles.css';\n// Styles\nimport './Global/Animation.css';\nimport './Global/EventsSheet.css';\nimport './Global/Markdown.css';\nimport './Global/Scrollbar.css';\nimport './Global/Mosaic.css';\nimport './Global/Table.css';\n\nexport type Theme = $Exact<typeof DefaultTheme>;\nexport const themes = themeList;\n\nexport type GDevelopTheme = $PropertyType<Theme, 'gdevelopTheme'>;\ntype ActualTheme = {| gdevelopTheme: GDevelopTheme, muiTheme: Object |};\ntype MuiThemeOptions = $PropertyType<Theme, 'muiThemeOptions'>;\nconst defaultThemeName = 'GDevelop default';\n\nexport function getTheme({\n  themeName,\n  language,\n}: {|\n  themeName: string,\n  language: string,\n|}): ActualTheme {\n  let theme: Theme = themes[themeName];\n\n  if (!theme) {\n    console.warn(\n      `Theme '${themeName}' is unavailable; '${defaultThemeName}' is used`\n    );\n    theme = themes[defaultThemeName];\n  }\n\n  const ltr = isLtr(language);\n  const { gdevelopTheme, muiThemeOptions } = theme;\n  return {\n    gdevelopTheme,\n    muiTheme: ltr\n      ? createLtrTheme(muiThemeOptions)\n      : createRtlTheme(muiThemeOptions),\n  };\n}\n\nconst createLtrTheme = memoize(\n  (muiThemeOptions: MuiThemeOptions): Object => {\n    return createMuiTheme(muiThemeOptions);\n  }\n);\n\nconst createRtlTheme = memoize(\n  (muiThemeOptions: MuiThemeOptions): Object => {\n    return createMuiTheme(muiThemeOptions, { overrides: rtlOverrides });\n  }\n);\n\nconst rtlDirection = { direction: 'rtl' };\nconst rtlOrder = { order: 100 };\nconst rtlOverrides = {\n  MuiTypography: {\n    root: rtlDirection,\n  },\n  MuiInput: {\n    root: rtlDirection,\n  },\n  MuiTab: {\n    root: rtlDirection,\n  },\n  MuiButton: {\n    label: rtlDirection,\n  },\n  MuiSvgIcon: {\n    root: rtlOrder,\n  },\n  MuiFormControlLabel: {\n    root: rtlDirection,\n  },\n  MuiTextField: {\n    root: rtlDirection,\n  },\n};\n\nexport const defaultTheme: ActualTheme = {\n  ...DefaultTheme,\n  muiThemeOptions: createLtrTheme(DefaultTheme.muiThemeOptions),\n};\n","// @flow\nimport * as React from 'react';\nimport { type AssetShortHeader } from '../Utils/GDevelopServices/Asset';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Text from '../UI/Text';\nimport { CorsAwareImage } from '../UI/CorsAwareImage';\n\nconst paddingSize = 10;\nconst styles = {\n  previewBackground: {\n    background: 'url(\"res/transparentback.png\") repeat',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  previewImage: {\n    objectFit: 'contain',\n    verticalAlign: 'middle',\n    pointerEvents: 'none',\n  },\n  icon: {\n    color: '#fff',\n  },\n  cardContainer: {\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  titleContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: 48,\n    color: '#fff',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    backgroundColor: 'rgb(0,0,0,0.5)',\n  },\n  title: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n};\n\ntype Props = {|\n  size: number,\n  assetShortHeader: AssetShortHeader,\n  onOpenDetails: () => void,\n|};\n\nexport const AssetCard = ({ assetShortHeader, onOpenDetails, size }: Props) => {\n  return (\n    <ButtonBase onClick={onOpenDetails} focusRipple>\n      <div style={{ ...styles.cardContainer, width: size, height: size }}>\n        <div style={{ ...styles.previewBackground, width: size, height: size }}>\n          <CorsAwareImage\n            key={assetShortHeader.previewImageUrls[0]}\n            style={{\n              ...styles.previewImage,\n              maxWidth: 128 - 2 * paddingSize,\n              maxHeight: 128 - 2 * paddingSize,\n            }}\n            src={assetShortHeader.previewImageUrls[0]}\n            alt={assetShortHeader.name}\n          />\n        </div>\n        <div style={styles.titleContainer}>\n          <Text noMargin style={styles.title}>\n            {assetShortHeader.name}\n          </Text>\n          <Text noMargin style={styles.title} size=\"body2\">\n            {assetShortHeader.shortDescription}\n          </Text>\n        </div>\n      </div>\n    </ButtonBase>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport SearchBar from '../UI/SearchBar';\nimport { Column, Line } from '../UI/Grid';\nimport Background from '../UI/Background';\nimport ScrollView from '../UI/ScrollView';\nimport { type AssetShortHeader } from '../Utils/GDevelopServices/Asset';\nimport { BoxSearchResults } from '../UI/Search/BoxSearchResults';\nimport { FiltersChooser } from '../UI/Search/FiltersChooser';\nimport { AssetStoreContext } from './AssetStoreContext';\nimport { AssetCard } from './AssetCard';\nimport { ResponsiveWindowMeasurer } from '../UI/Reponsive/ResponsiveWindowMeasurer';\nimport Subheader from '../UI/Subheader';\nimport { CategoryChooser } from '../UI/Search/CategoryChooser';\n\nconst styles = {\n  searchBar: {\n    // TODO: Can we put this in the search bar by default?\n    flexShrink: 0,\n  },\n};\n\ntype Props = {\n  project: gdProject,\n  objectsContainer: gdObjectsContainer,\n  events: gdEventsList,\n  onOpenDetails: AssetShortHeader => void,\n};\n\nexport const AssetStore = ({\n  project,\n  objectsContainer,\n  events,\n  onOpenDetails,\n}: Props) => {\n  const {\n    filters,\n    searchResults,\n    error,\n    fetchAssetsAndFilters,\n    filtersState,\n    searchText,\n    setSearchText,\n  } = React.useContext(AssetStoreContext);\n\n  React.useEffect(\n    () => {\n      fetchAssetsAndFilters();\n    },\n    [fetchAssetsAndFilters]\n  );\n\n  return (\n    <ResponsiveWindowMeasurer>\n      {windowWidth => (\n        <Column expand noMargin useFullHeight>\n          <SearchBar\n            value={searchText}\n            onChange={setSearchText}\n            onRequestSearch={() => {}}\n            style={styles.searchBar}\n          />\n          <Line\n            expand\n            overflow={\n              'hidden' /* Somehow required on Chrome/Firefox to avoid children growing (but not on Safari) */\n            }\n          >\n            <Background\n              noFullHeight\n              noExpand\n              width={windowWidth === 'small' ? 150 : 250}\n            >\n              <ScrollView>\n                <Subheader>\n                  <Trans>Categories</Trans>\n                </Subheader>\n                <CategoryChooser\n                  allItemsLabel={<Trans>All assets</Trans>}\n                  allFilters={filters}\n                  filtersState={filtersState}\n                  error={error}\n                />\n                <Subheader>\n                  <Trans>Filters</Trans>\n                </Subheader>\n                <FiltersChooser\n                  allFilters={filters}\n                  filtersState={filtersState}\n                  error={error}\n                />\n              </ScrollView>\n            </Background>\n            <BoxSearchResults\n              baseSize={128}\n              onRetry={fetchAssetsAndFilters}\n              error={error}\n              searchItems={searchResults}\n              renderSearchItem={(assetShortHeader, size) => (\n                <AssetCard\n                  size={size}\n                  onOpenDetails={() => onOpenDetails(assetShortHeader)}\n                  assetShortHeader={assetShortHeader}\n                />\n              )}\n            />\n          </Line>\n        </Column>\n      )}\n    </ResponsiveWindowMeasurer>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Column } from '../UI/Grid';\nimport Text from '../UI/Text';\nimport Chip from '@material-ui/core/Chip';\nimport RaisedButton from '../UI/RaisedButton';\nimport {\n  type AssetShortHeader,\n  type Asset,\n  type Author,\n  getAsset,\n} from '../Utils/GDevelopServices/Asset';\nimport LeftLoader from '../UI/LeftLoader';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport PlaceholderError from '../UI/PlaceholderError';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport Add from '@material-ui/icons/Add';\nimport { ResponsiveLineStackLayout } from '../UI/Layout';\nimport { ResponsiveWindowMeasurer } from '../UI/Reponsive/ResponsiveWindowMeasurer';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport { CorsAwareImage } from '../UI/CorsAwareImage';\nimport { AssetStoreContext } from './AssetStoreContext';\nimport Link from '@material-ui/core/Link';\nimport Window from '../Utils/Window';\n\nconst styles = {\n  previewBackground: {\n    background: 'url(\"res/transparentback.png\") repeat',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 10,\n  },\n  verticalPreviewBackground: {\n    width: 250,\n  },\n  horizontalPreviewBackground: {\n    height: 170,\n  },\n  chip: {\n    marginBottom: 2,\n    marginRight: 2,\n  },\n  previewImage: {\n    maxWidth: '100%',\n    maxHeight: '100%',\n    verticalAlign: 'middle',\n    pointerEvents: 'none',\n    objectFit: 'contain',\n  },\n};\n\ntype Props = {|\n  project: gdProject,\n  layout: ?gdLayout,\n  objectsContainer: gdObjectsContainer,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n\n  assetShortHeader: AssetShortHeader,\n  onAdd: () => void,\n  onClose: () => void,\n  canInstall: boolean,\n  isBeingInstalled: boolean,\n|};\n\nexport const AssetDetails = ({\n  project,\n  layout,\n  objectsContainer,\n  resourceSources,\n  onChooseResource,\n  resourceExternalEditors,\n  assetShortHeader,\n  onAdd,\n  onClose,\n  canInstall,\n  isBeingInstalled,\n}: Props) => {\n  const { authors, licenses } = React.useContext(AssetStoreContext);\n  const [asset, setAsset] = React.useState<?Asset>(null);\n  const [error, setError] = React.useState<?Error>(null);\n  const loadAsset = React.useCallback(\n    () => {\n      (async () => {\n        try {\n          const loadedAsset = await getAsset(assetShortHeader);\n          setAsset(loadedAsset);\n        } catch (error) {\n          console.log('Error while loading asset:', error);\n          setError(error);\n        }\n      })();\n    },\n    [assetShortHeader]\n  );\n\n  React.useEffect(\n    () => {\n      loadAsset();\n    },\n    [loadAsset]\n  );\n\n  const assetAuthors: ?Array<Author> =\n    asset && authors\n      ? asset.authors\n          .map(authorName => {\n            return authors.find(({ name }) => name === authorName);\n          })\n          .filter(Boolean)\n      : [];\n  const assetLicense =\n    asset && licenses\n      ? licenses.find(({ name }) => name === asset.license)\n      : null;\n\n  return (\n    <Dialog\n      open\n      title={<Trans>Add an object from the store</Trans>}\n      onRequestClose={onClose}\n      actions={[\n        <FlatButton key=\"back\" label={<Trans>Back</Trans>} onClick={onClose} />,\n        <LeftLoader\n          isLoading={isBeingInstalled || (!asset && !error)}\n          key=\"install\"\n        >\n          <RaisedButton\n            primary\n            icon={<Add />}\n            label={<Trans>Add to the game</Trans>}\n            onClick={onAdd}\n            disabled={!canInstall || isBeingInstalled || !asset}\n          />\n        </LeftLoader>,\n      ]}\n    >\n      <Column expand noMargin>\n        <ResponsiveLineStackLayout noMargin>\n          <ResponsiveWindowMeasurer>\n            {windowWidth => (\n              <div\n                style={{\n                  ...styles.previewBackground,\n                  ...(windowWidth === 'small'\n                    ? styles.horizontalPreviewBackground\n                    : styles.verticalPreviewBackground),\n                }}\n              >\n                <CorsAwareImage\n                  style={styles.previewImage}\n                  src={assetShortHeader.previewImageUrls[0]}\n                  alt={assetShortHeader.name}\n                />\n              </div>\n            )}\n          </ResponsiveWindowMeasurer>\n          <Column expand>\n            <div>\n              <Text size=\"title\" displayInlineAsSpan>\n                {assetShortHeader.name}\n              </Text>{' '}\n              {assetShortHeader.shortDescription && (\n                <React.Fragment>\n                  -{' '}\n                  <Text size=\"body\" displayInlineAsSpan>\n                    {assetShortHeader.shortDescription}\n                  </Text>\n                </React.Fragment>\n              )}\n            </div>\n            <span>\n              {assetShortHeader.tags.map(tag => (\n                <Chip size=\"small\" style={styles.chip} label={tag} key={tag} />\n              ))}\n            </span>\n            {asset ? (\n              <React.Fragment>\n                <Text size=\"body\">\n                  <Trans>By:</Trans>{' '}\n                  {!!assetAuthors &&\n                    assetAuthors.map(author => {\n                      return (\n                        <Link\n                          key={author.name}\n                          component=\"button\"\n                          onClick={() => {\n                            Window.openExternalURL(author.website);\n                          }}\n                        >\n                          {author.name}\n                        </Link>\n                      );\n                    })}\n                </Text>\n                <Text size=\"body\">\n                  {!!assetLicense && (\n                    <Trans>\n                      License:{' '}\n                      {\n                        <Link\n                          component=\"button\"\n                          onClick={() => {\n                            Window.openExternalURL(assetLicense.website);\n                          }}\n                        >\n                          {assetLicense.name}\n                        </Link>\n                      }\n                    </Trans>\n                  )}\n                </Text>\n                <Text size=\"body\">{asset.description}</Text>\n              </React.Fragment>\n            ) : error ? (\n              <PlaceholderError onRetry={loadAsset}>\n                <Trans>\n                  Error while loading the asset. Verify your internet connection\n                  or try again later.\n                </Trans>\n              </PlaceholderError>\n            ) : (\n              <PlaceholderLoader />\n            )}\n          </Column>\n        </ResponsiveLineStackLayout>\n      </Column>\n    </Dialog>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport ListIcon from '../UI/ListIcon';\nimport Subheader from '../UI/Subheader';\nimport { List, ListItem } from '../UI/List';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport {\n  enumerateObjectTypes,\n  type EnumeratedObjectMetadata,\n} from '../ObjectsList/EnumerateObjects';\nimport HelpButton from '../UI/HelpButton';\nimport { getExperimentalObjects } from '../Hints';\nimport { Line, Column } from '../UI/Grid';\nimport InfoBar from '../UI/Messages/InfoBar';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport { AssetStore } from '.';\nimport { type AssetShortHeader } from '../Utils/GDevelopServices/Asset';\nimport EventsFunctionsExtensionsContext from '../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext';\nimport { installAsset } from './InstallAsset';\nimport { AssetDetails } from './AssetDetails';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport {\n  sendAssetAddedToProject,\n  sendAssetOpened,\n  sendNewObjectCreated,\n} from '../Utils/Analytics/EventSender';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport { useScreenType } from '../UI/Reponsive/ScreenTypeMeasurer';\nimport Window from '../Utils/Window';\nimport { useResourceFetcher } from '../ProjectsStorage/ResourceFetcher';\nimport RaisedButton from '../UI/RaisedButton';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport ScrollView from '../UI/ScrollView';\nconst electron = optionalRequire('electron');\n\nconst ObjectListItem = ({\n  objectMetadata,\n  onClick,\n}: {|\n  objectMetadata: EnumeratedObjectMetadata,\n  onClick: () => void,\n|}) => {\n  if (objectMetadata.name === '') {\n    // Base object is an \"abstract\" object\n    return null;\n  }\n\n  return (\n    <ListItem\n      leftIcon={\n        <ListIcon\n          src={objectMetadata.iconFilename}\n          iconSize={40}\n          isGDevelopIcon\n        />\n      }\n      key={objectMetadata.name}\n      primaryText={objectMetadata.fullName}\n      secondaryText={objectMetadata.description}\n      secondaryTextLines={2}\n      onClick={onClick}\n    />\n  );\n};\n\ntype Props = {|\n  project: gdProject,\n  layout: ?gdLayout,\n  objectsContainer: gdObjectsContainer,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  events: gdEventsList,\n  onClose: () => void,\n  onCreateNewObject: (type: string) => void,\n  onObjectAddedFromAsset: gdObject => void,\n|};\n\nexport default function NewObjectDialog({\n  project,\n  layout,\n  objectsContainer,\n  resourceSources,\n  onChooseResource,\n  resourceExternalEditors,\n  events,\n  onClose,\n  onCreateNewObject,\n  onObjectAddedFromAsset,\n}: Props) {\n  const {\n    setNewObjectDialogDefaultTab,\n    getNewObjectDialogDefaultTab,\n  } = React.useContext(PreferencesContext);\n  const [assetWasInstalled, setAssetWasInstalled] = React.useState(false);\n  const [openedAsset, setOpenedAsset] = React.useState<null | AssetShortHeader>(\n    null\n  );\n\n  const [currentTab, setCurrentTab] = React.useState(\n    getNewObjectDialogDefaultTab()\n  );\n  const [showExperimental, setShowExperimental] = React.useState(false);\n  const objectMetadata = React.useMemo(() => enumerateObjectTypes(project), [\n    project,\n  ]);\n  const experimentalObjectsInformation = getExperimentalObjects();\n  const screenType = useScreenType();\n  const resourcesFetcher = useResourceFetcher();\n\n  React.useEffect(() => setNewObjectDialogDefaultTab(currentTab), [\n    setNewObjectDialogDefaultTab,\n    currentTab,\n  ]);\n\n  const objects = objectMetadata.filter(\n    ({ name }) => !experimentalObjectsInformation[name]\n  );\n  const experimentalObjects = objectMetadata.filter(\n    ({ name }) => !!experimentalObjectsInformation[name]\n  );\n\n  const [\n    assetBeingInstalled,\n    setAssetBeingInstalled,\n  ] = React.useState<?AssetShortHeader>(null);\n  const eventsFunctionsExtensionsState = React.useContext(\n    EventsFunctionsExtensionsContext\n  );\n  const onInstallAsset = React.useCallback(\n    (assetShortHeader: AssetShortHeader) => {\n      setAssetBeingInstalled(assetShortHeader);\n      (async () => {\n        try {\n          const installOutput = await installAsset({\n            assetShortHeader,\n            eventsFunctionsExtensionsState,\n            project,\n            objectsContainer,\n            events,\n          });\n          sendAssetAddedToProject({\n            id: assetShortHeader.id,\n            name: assetShortHeader.name,\n          });\n          console.log('Asset successfully installed.');\n\n          installOutput.createdObjects.forEach(object => {\n            onObjectAddedFromAsset(object);\n          });\n\n          await resourcesFetcher.ensureResourcesAreFetched(project);\n\n          setOpenedAsset(null);\n          setAssetWasInstalled(true);\n        } catch (error) {\n          console.error('Error while installing the asset:', error);\n          showErrorBox({\n            message: `There was an error while installing the asset \"${\n              assetShortHeader.name\n            }\". Verify your internet connection or try again later.`,\n            rawError: error,\n            errorId: 'install-asset-error',\n          });\n        }\n\n        setAssetBeingInstalled(null);\n      })();\n    },\n    [\n      resourcesFetcher,\n      eventsFunctionsExtensionsState,\n      project,\n      objectsContainer,\n      events,\n      onObjectAddedFromAsset,\n    ]\n  );\n\n  return (\n    <Dialog\n      title={<Trans>Add a new object</Trans>}\n      secondaryActions={[\n        <HelpButton helpPagePath=\"/objects\" key=\"help\" />,\n        !electron && screenType !== 'touch' ? (\n          <FlatButton\n            key=\"download-gdevelop\"\n            label={<Trans>Download GDevelop to import your images</Trans>}\n            onClick={() =>\n              Window.openExternalURL('https://gdevelop-app.com/download')\n            }\n          />\n        ) : null,\n      ]}\n      actions={[\n        <FlatButton\n          key=\"close\"\n          label={<Trans>Close</Trans>}\n          primary={false}\n          onClick={onClose}\n        />,\n      ]}\n      onRequestClose={onClose}\n      cannotBeDismissed={false}\n      open\n      flexBody\n      noMargin\n    >\n      <Column noMargin expand>\n        <Tabs value={currentTab} onChange={setCurrentTab}>\n          <Tab label={<Trans>Search Asset Store</Trans>} value=\"asset-store\" />\n          <Tab\n            label={<Trans>New object from scratch</Trans>}\n            value=\"new-object\"\n          />\n        </Tabs>\n        {currentTab === 'asset-store' && (\n          <AssetStore\n            project={project}\n            objectsContainer={objectsContainer}\n            events={events}\n            onOpenDetails={assetShortHeader => {\n              setOpenedAsset(assetShortHeader);\n              sendAssetOpened({\n                id: assetShortHeader.id,\n                name: assetShortHeader.name,\n              });\n            }}\n          />\n        )}\n        {currentTab === 'new-object' && (\n          <ScrollView>\n            <List>\n              {objects.map(objectMetadata => (\n                <ObjectListItem\n                  key={objectMetadata.name}\n                  objectMetadata={objectMetadata}\n                  onClick={() => {\n                    sendNewObjectCreated(objectMetadata.name);\n                    onCreateNewObject(objectMetadata.name);\n                  }}\n                />\n              ))}\n              {showExperimental && (\n                <Subheader>\n                  Experimental (make sure to read the documentation page)\n                </Subheader>\n              )}\n              {showExperimental &&\n                experimentalObjects.map(objectMetadata => (\n                  <ObjectListItem\n                    key={objectMetadata.name}\n                    objectMetadata={objectMetadata}\n                    onClick={() => {\n                      sendNewObjectCreated(objectMetadata.name);\n                      onCreateNewObject(objectMetadata.name);\n                    }}\n                  />\n                ))}\n            </List>\n            <Line justifyContent=\"center\" alignItems=\"center\">\n              {!showExperimental ? (\n                <FlatButton\n                  key=\"toggle-experimental\"\n                  icon={<Visibility />}\n                  primary={false}\n                  onClick={() => setShowExperimental(true)}\n                  label={<Trans>Show experimental objects</Trans>}\n                />\n              ) : (\n                <FlatButton\n                  key=\"toggle-experimental\"\n                  icon={<VisibilityOff />}\n                  primary={false}\n                  onClick={() => setShowExperimental(false)}\n                  label={<Trans>Hide experimental objects</Trans>}\n                />\n              )}\n            </Line>\n            <Line justifyContent=\"center\" alignItems=\"center\">\n              <RaisedButton\n                label={\n                  <Trans>Browse ready made objects in the Asset Store</Trans>\n                }\n                primary\n                onClick={() => {\n                  setCurrentTab('asset-store');\n                }}\n              />\n            </Line>\n          </ScrollView>\n        )}\n      </Column>\n      {openedAsset !== null ? (\n        <AssetDetails\n          project={project}\n          layout={layout}\n          objectsContainer={objectsContainer}\n          resourceSources={resourceSources}\n          onChooseResource={onChooseResource}\n          resourceExternalEditors={resourceExternalEditors}\n          assetShortHeader={openedAsset}\n          onAdd={() => onInstallAsset(openedAsset)}\n          onClose={() => setOpenedAsset(null)}\n          canInstall={!assetBeingInstalled}\n          isBeingInstalled={\n            !!assetBeingInstalled && assetBeingInstalled.id === openedAsset.id\n          }\n        />\n      ) : null}\n      {resourcesFetcher.renderResourceFetcherDialog()}\n      <InfoBar\n        identifier=\"asset-installed-explanation\"\n        message={\n          <Trans>\n            The object was added to the list of objects. You can now use it on\n            the scene, in events, and customize it.\n          </Trans>\n        }\n        show={assetWasInstalled}\n      />\n    </Dialog>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport { t } from '@lingui/macro';\nimport Dialog from './Dialog';\nimport TextField from './TextField';\nimport FlatButton from './FlatButton';\nimport { Trans } from '@lingui/macro';\nimport { type Tags, getTagsFromString } from '../Utils/TagsHelper';\nimport { shouldValidate } from './KeyboardShortcuts/InteractionKeys';\n\ntype Props = {|\n  tagsString: string,\n  onCancel: () => void,\n  onEdit: (tags: Tags) => void,\n|};\n\ntype State = {|\n  tagsString: string,\n|};\n\n/**\n * Dialog to edit tags, with keyboard support (auto focus of tags field,\n * enter to validate, esc to dismiss dialog).\n */\nexport default class EditTagsDialog extends React.Component<Props, State> {\n  state = {\n    tagsString: this.props.tagsString,\n  };\n  _tagsField = React.createRef<TextField>();\n\n  componentDidMount() {\n    setTimeout(() => {\n      if (this._tagsField && this._tagsField.current) {\n        this._tagsField.current.focus();\n      }\n    }, 10);\n  }\n\n  render() {\n    const { onCancel, onEdit } = this.props;\n    const { tagsString } = this.state;\n\n    const tags = getTagsFromString(tagsString);\n\n    return (\n      <Dialog\n        actions={[\n          <FlatButton\n            key=\"close\"\n            label={<Trans>Cancel</Trans>}\n            primary={false}\n            onClick={onCancel}\n          />,\n          <FlatButton\n            key=\"add\"\n            label={\n              this.props.tagsString && !tags.length ? (\n                <Trans>Remove all tags</Trans>\n              ) : (\n                <Trans>Add/update {tags.length} tag(s)</Trans>\n              )\n            }\n            primary\n            onClick={() => onEdit(tags)}\n            disabled={!this.props.tagsString && !tags.length}\n          />,\n        ]}\n        cannotBeDismissed={false}\n        open\n        onRequestClose={onCancel}\n      >\n        <TextField\n          fullWidth\n          value={tagsString}\n          onChange={(e, tagsString) =>\n            this.setState({\n              tagsString,\n            })\n          }\n          floatingLabelText=\"Tag(s) (comma-separated)\"\n          hintText={t`For example: player, spaceship, inventory...`}\n          onKeyPress={event => {\n            if (shouldValidate(event)) {\n              onEdit(tags);\n            }\n          }}\n          ref={this._tagsField}\n        />\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\n\nimport React from 'react';\nimport { AutoSizer } from 'react-virtualized';\nimport SortableVirtualizedItemList from '../UI/SortableVirtualizedItemList';\nimport Background from '../UI/Background';\nimport SearchBar from '../UI/SearchBar';\nimport NewObjectDialog from '../AssetStore/NewObjectDialog';\nimport VariablesEditorDialog from '../VariablesList/VariablesEditorDialog';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport Clipboard, { SafeExtractor } from '../Utils/Clipboard';\nimport Window from '../Utils/Window';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport {\n  enumerateObjects,\n  filterObjectsList,\n  isSameObjectWithContext,\n} from './EnumerateObjects';\nimport type {\n  ObjectWithContextList,\n  ObjectWithContext,\n} from '../ObjectsList/EnumerateObjects';\nimport { CLIPBOARD_KIND } from './ClipboardKind';\nimport TagChips from '../UI/TagChips';\nimport EditTagsDialog from '../UI/EditTagsDialog';\nimport {\n  type Tags,\n  type SelectedTags,\n  getStringFromTags,\n  buildTagsMenuTemplate,\n  getTagsFromString,\n} from '../Utils/TagsHelper';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\nimport { type HotReloadPreviewButtonProps } from '../HotReload/HotReloadPreviewButton';\nimport { useScreenType } from '../UI/Reponsive/ScreenTypeMeasurer';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\n\nconst styles = {\n  listContainer: {\n    flex: 1,\n  },\n};\n\nexport const objectWithContextReactDndType = 'GD_OBJECT_WITH_CONTEXT';\n\nconst getObjectWithContextName = (objectWithContext: ObjectWithContext) =>\n  objectWithContext.object.getName();\n\nconst isObjectWithContextGlobal = (objectWithContext: ObjectWithContext) =>\n  objectWithContext.global;\n\nconst getPasteLabel = isGlobalObject => {\n  let clipboardObjectName = '';\n  if (Clipboard.has(CLIPBOARD_KIND)) {\n    const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n    clipboardObjectName =\n      SafeExtractor.extractStringProperty(clipboardContent, 'name') || '';\n  }\n\n  return isGlobalObject\n    ? 'Paste ' + clipboardObjectName + ' as a Global Object'\n    : 'Paste ' + clipboardObjectName;\n};\n\ntype State = {|\n  newObjectDialogOpen: boolean,\n  renamedObjectWithContext: ?ObjectWithContext,\n  variablesEditedObject: ?gdObject,\n  searchText: string,\n  tagEditedObject: ?gdObject,\n|};\n\ntype Props = {|\n  project: gdProject,\n  layout: ?gdLayout,\n  objectsContainer: gdObjectsContainer,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  events: gdEventsList,\n  onDeleteObject: (\n    objectWithContext: ObjectWithContext,\n    cb: (boolean) => void\n  ) => void,\n  onRenameObject: (\n    objectWithContext: ObjectWithContext,\n    newName: string,\n    cb: (boolean) => void\n  ) => void,\n  selectedObjectNames: Array<string>,\n\n  selectedObjectTags: SelectedTags,\n  getAllObjectTags: () => Tags,\n  onChangeSelectedObjectTags: SelectedTags => void,\n\n  onEditObject: gdObject => void,\n  onObjectCreated: gdObject => void,\n  onObjectSelected: string => void,\n  onObjectPasted?: gdObject => void,\n  canRenameObject: (newName: string) => boolean,\n\n  getThumbnail: (project: gdProject, object: Object) => string,\n  unsavedChanges?: ?UnsavedChanges,\n  hotReloadPreviewButtonProps: HotReloadPreviewButtonProps,\n|};\n\nexport default class ObjectsList extends React.Component<Props, State> {\n  sortableList: ?SortableVirtualizedItemList<ObjectWithContext>;\n  _displayedObjectWithContextsList: ObjectWithContextList = [];\n  state = {\n    newObjectDialogOpen: false,\n    renamedObjectWithContext: null,\n    variablesEditedObject: null,\n    searchText: '',\n    tagEditedObject: null,\n  };\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    // The component is costly to render, so avoid any re-rendering as much\n    // as possible.\n    // We make the assumption that no changes to objects list is made outside\n    // from the component.\n    // If a change is made, the component won't notice it: you have to manually\n    // call forceUpdate.\n\n    if (\n      this.state.newObjectDialogOpen !== nextState.newObjectDialogOpen ||\n      this.state.renamedObjectWithContext !==\n        nextState.renamedObjectWithContext ||\n      this.state.variablesEditedObject !== nextState.variablesEditedObject ||\n      this.state.searchText !== nextState.searchText ||\n      this.state.tagEditedObject !== nextState.tagEditedObject\n    )\n      return true;\n\n    if (\n      this.props.selectedObjectNames !== nextProps.selectedObjectNames ||\n      this.props.selectedObjectTags !== nextProps.selectedObjectTags\n    )\n      return true;\n\n    if (\n      this.props.project !== nextProps.project ||\n      this.props.objectsContainer !== nextProps.objectsContainer\n    )\n      return true;\n\n    return false;\n  }\n\n  addObject = (objectType: string) => {\n    const {\n      project,\n      objectsContainer,\n      onEditObject,\n      onObjectCreated,\n      onObjectSelected,\n    } = this.props;\n\n    const name = newNameGenerator(\n      'NewObject',\n      name =>\n        objectsContainer.hasObjectNamed(name) || project.hasObjectNamed(name)\n    );\n\n    const object = objectsContainer.insertNewObject(\n      project,\n      objectType,\n      name,\n      objectsContainer.getObjectsCount()\n    );\n    object.setTags(getStringFromTags(this.props.selectedObjectTags));\n\n    this.setState(\n      {\n        newObjectDialogOpen: false,\n      },\n      () => {\n        if (onEditObject) {\n          onEditObject(object);\n          onObjectCreated(object);\n          onObjectSelected(name);\n        }\n      }\n    );\n  };\n\n  _onObjectAddedFromAsset = (object: gdObject) => {\n    const { onObjectCreated } = this.props;\n\n    object.setTags(getStringFromTags(this.props.selectedObjectTags));\n    onObjectCreated(object);\n  };\n\n  onAddNewObject = () => {\n    this.setState({ newObjectDialogOpen: true });\n  };\n\n  _deleteObject = (objectWithContext: ObjectWithContext) => {\n    const { object, global } = objectWithContext;\n    const { project, objectsContainer } = this.props;\n\n    const answer = Window.showConfirmDialog(\n      \"Are you sure you want to remove this object? This can't be undone.\"\n    );\n    if (!answer) return;\n\n    // It's important to call onDeleteObject, because the parent might\n    // have to do some refactoring/clean up work before the object is deleted\n    // (typically, the SceneEditor will remove instances refering to the object,\n    // leading to the removal of their renderer - which can keep a reference to\n    // the object).\n    this.props.onDeleteObject(objectWithContext, doRemove => {\n      if (!doRemove) return;\n\n      if (global) {\n        project.removeObject(object.getName());\n      } else {\n        objectsContainer.removeObject(object.getName());\n      }\n\n      this._onObjectModified(false);\n    });\n  };\n\n  _copyObject = (objectWithContext: ObjectWithContext) => {\n    const { object } = objectWithContext;\n    Clipboard.set(CLIPBOARD_KIND, {\n      type: object.getType(),\n      name: object.getName(),\n      object: serializeToJSObject(object),\n    });\n  };\n\n  _cutObject = (objectWithContext: ObjectWithContext) => {\n    this._copyObject(objectWithContext);\n    this._deleteObject(objectWithContext);\n  };\n\n  _duplicateObject = (objectWithContext: ObjectWithContext) => {\n    this._copyObject(objectWithContext);\n    this._pasteAndRename(objectWithContext);\n  };\n\n  _pasteAndRename = (objectWithContext: ObjectWithContext) => {\n    this._editName(this._paste(objectWithContext));\n  };\n\n  _paste = (objectWithContext: ObjectWithContext): ?ObjectWithContext => {\n    if (!Clipboard.has(CLIPBOARD_KIND)) return null;\n\n    const { object: pasteObject, global } = objectWithContext;\n    const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n    const copiedObject = SafeExtractor.extractObjectProperty(\n      clipboardContent,\n      'object'\n    );\n    const name = SafeExtractor.extractStringProperty(clipboardContent, 'name');\n    const type = SafeExtractor.extractStringProperty(clipboardContent, 'type');\n    if (!name || !type || !copiedObject) return;\n\n    const { project, objectsContainer, onObjectPasted } = this.props;\n\n    const newName = newNameGenerator(\n      name,\n      name =>\n        objectsContainer.hasObjectNamed(name) || project.hasObjectNamed(name),\n      ''\n    );\n\n    const newObject = global\n      ? project.insertNewObject(\n          project,\n          type,\n          newName,\n          project.getObjectPosition(pasteObject.getName())\n        )\n      : objectsContainer.insertNewObject(\n          project,\n          type,\n          newName,\n          objectsContainer.getObjectPosition(pasteObject.getName())\n        );\n\n    unserializeFromJSObject(\n      newObject,\n      copiedObject,\n      'unserializeFrom',\n      project\n    );\n    newObject.setName(newName); // Unserialization has overwritten the name.\n\n    this._onObjectModified(false);\n    if (onObjectPasted) onObjectPasted(newObject);\n\n    return { object: newObject, global };\n  };\n\n  _editName = (objectWithContext: ?ObjectWithContext) => {\n    this.setState(\n      {\n        renamedObjectWithContext: objectWithContext,\n      },\n      () => {\n        if (this.sortableList) this.sortableList.forceUpdateGrid();\n      }\n    );\n  };\n\n  _editVariables = (object: ?gdObject) => {\n    this.setState({\n      variablesEditedObject: object,\n    });\n  };\n\n  _rename = (objectWithContext: ObjectWithContext, newName: string) => {\n    const { object } = objectWithContext;\n    this.setState({\n      renamedObjectWithContext: null,\n    });\n\n    if (getObjectWithContextName(objectWithContext) === newName) return;\n\n    if (this.props.canRenameObject(newName)) {\n      this.props.onRenameObject(objectWithContext, newName, doRename => {\n        if (!doRename) return;\n\n        object.setName(newName);\n        this._onObjectModified(false);\n      });\n    }\n  };\n\n  _canMoveSelectionTo = (destinationObjectWithContext: ObjectWithContext) => {\n    // Check if at least one element in the selection can be moved.\n    const selectedObjects = this._displayedObjectWithContextsList.filter(\n      objectWithContext =>\n        this.props.selectedObjectNames.indexOf(\n          objectWithContext.object.getName()\n        ) !== -1\n    );\n    return (\n      selectedObjects.filter(movedObjectWithContext => {\n        return (\n          movedObjectWithContext.global === destinationObjectWithContext.global\n        );\n      }).length > 0\n    );\n  };\n\n  _moveSelectionTo = (destinationObjectWithContext: ObjectWithContext) => {\n    const { project, objectsContainer } = this.props;\n\n    const container: gdObjectsContainer = destinationObjectWithContext.global\n      ? project\n      : objectsContainer;\n\n    const selectedObjects = this._displayedObjectWithContextsList.filter(\n      objectWithContext =>\n        this.props.selectedObjectNames.indexOf(\n          objectWithContext.object.getName()\n        ) !== -1\n    );\n    selectedObjects.forEach(movedObjectWithContext => {\n      if (\n        movedObjectWithContext.global !== destinationObjectWithContext.global\n      ) {\n        // Can't move an object from the objects container to the global objects\n        // or vice-versa.\n        return;\n      }\n\n      container.moveObject(\n        container.getObjectPosition(movedObjectWithContext.object.getName()),\n        container.getObjectPosition(\n          destinationObjectWithContext.object.getName()\n        )\n      );\n    });\n    this._onObjectModified(true);\n  };\n\n  _setAsGlobalObject = (objectWithContext: ObjectWithContext) => {\n    const { object } = objectWithContext;\n    const { project, objectsContainer } = this.props;\n\n    const objectName: string = object.getName();\n    if (!objectsContainer.hasObjectNamed(objectName)) return;\n\n    if (project.hasObjectNamed(objectName)) {\n      showWarningBox(\n        'A global object with this name already exists. Please change the object name before setting it as a global object',\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    const answer = Window.showConfirmDialog(\n      \"This object will be loaded and available in all the scenes. This is only recommended for objects that you reuse a lot and can't be undone. Make this object global?\"\n    );\n    if (!answer) return;\n\n    // It's safe to call moveObjectToAnotherContainer because it does not invalidate the\n    // references to the object in memory - so other editors like InstancesRenderer can\n    // continue to work.\n    objectsContainer.moveObjectToAnotherContainer(\n      objectName,\n      project,\n      project.getObjectsCount()\n    );\n    this._onObjectModified(true);\n  };\n\n  forceUpdateList = () => {\n    this.forceUpdate();\n    if (this.sortableList) this.sortableList.forceUpdateGrid();\n  };\n\n  _openEditTagDialog = (tagEditedObject: ?gdObject) => {\n    this.setState({\n      tagEditedObject,\n    });\n  };\n\n  _changeObjectTags = (object: gdObject, tags: Tags) => {\n    object.setTags(getStringFromTags(tags));\n\n    // Force update the list as it's possible that user removed a tag\n    // from an object, that should then not be shown anymore in the list.\n    this._onObjectModified(true);\n  };\n\n  _selectObject = (objectWithContext: ?ObjectWithContext) => {\n    this.props.onObjectSelected(\n      objectWithContext ? objectWithContext.object.getName() : ''\n    );\n  };\n\n  _getObjectThumbnail = (objectWithContext: ObjectWithContext) =>\n    this.props.getThumbnail(this.props.project, objectWithContext.object);\n\n  _renderObjectMenuTemplate = (i18n: I18nType) => (\n    objectWithContext: ObjectWithContext,\n    index: number\n  ) => {\n    const { object } = objectWithContext;\n    return [\n      {\n        label: i18n._(t`Edit object`),\n        click: () => this.props.onEditObject(object),\n      },\n      {\n        label: i18n._(t`Edit object variables`),\n        click: () => this._editVariables(object),\n      },\n      { type: 'separator' },\n      {\n        label: i18n._(t`Tags`),\n        submenu: buildTagsMenuTemplate({\n          noTagLabel: 'No tags',\n          getAllTags: this.props.getAllObjectTags,\n          selectedTags: getTagsFromString(object.getTags()),\n          onChange: objectTags => {\n            this._changeObjectTags(object, objectTags);\n          },\n          editTagsLabel: 'Add/edit tags...',\n          onEditTags: () => this._openEditTagDialog(object),\n        }),\n      },\n      {\n        label: i18n._(t`Rename`),\n        click: () => this._editName(objectWithContext),\n      },\n      {\n        label: i18n._(t`Set as a global object`),\n        click: () => this._setAsGlobalObject(objectWithContext),\n      },\n      {\n        label: i18n._(t`Delete`),\n        click: () => this._deleteObject(objectWithContext),\n      },\n      { type: 'separator' },\n      {\n        label: i18n._(t`Add a new object...`),\n        click: () => this.onAddNewObject(),\n      },\n      { type: 'separator' },\n      {\n        label: i18n._(t`Copy`),\n        click: () => this._copyObject(objectWithContext),\n      },\n      {\n        label: i18n._(t`Cut`),\n        click: () => this._cutObject(objectWithContext),\n      },\n      {\n        label: getPasteLabel(objectWithContext.global),\n        enabled: Clipboard.has(CLIPBOARD_KIND),\n        click: () => this._paste(objectWithContext),\n      },\n      {\n        label: i18n._(t`Duplicate`),\n        click: () => this._duplicateObject(objectWithContext),\n      },\n    ];\n  };\n\n  _onObjectModified = (shouldForceUpdateList: boolean) => {\n    if (this.props.unsavedChanges)\n      this.props.unsavedChanges.triggerUnsavedChanges();\n\n    if (shouldForceUpdateList) this.forceUpdateList();\n    else this.forceUpdate();\n  };\n\n  render() {\n    const {\n      project,\n      layout,\n      objectsContainer,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n      selectedObjectTags,\n      events,\n    } = this.props;\n    const { searchText, tagEditedObject } = this.state;\n\n    const lists = enumerateObjects(project, objectsContainer);\n    this._displayedObjectWithContextsList = filterObjectsList(\n      lists.allObjectsList,\n      {\n        searchText,\n        selectedTags: selectedObjectTags,\n      }\n    );\n    const selectedObjects = this._displayedObjectWithContextsList.filter(\n      objectWithContext =>\n        this.props.selectedObjectNames.indexOf(\n          objectWithContext.object.getName()\n        ) !== -1\n    );\n    const renamedObjectWithContext = this._displayedObjectWithContextsList.find(\n      isSameObjectWithContext(this.state.renamedObjectWithContext)\n    );\n\n    // Force List component to be mounted again if project or objectsContainer\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const listKey = project.ptr + ';' + objectsContainer.ptr;\n\n    return (\n      <Background maxWidth>\n        <TagChips\n          tags={this.props.selectedObjectTags}\n          onChange={this.props.onChangeSelectedObjectTags}\n        />\n        <div style={styles.listContainer}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <I18n>\n                {({ i18n }) => (\n                  <SortableVirtualizedItemList\n                    key={listKey}\n                    ref={sortableList => (this.sortableList = sortableList)}\n                    fullList={this._displayedObjectWithContextsList}\n                    width={width}\n                    height={height}\n                    getItemName={getObjectWithContextName}\n                    getItemThumbnail={this._getObjectThumbnail}\n                    isItemBold={isObjectWithContextGlobal}\n                    onEditItem={objectWithContext =>\n                      this.props.onEditObject(objectWithContext.object)\n                    }\n                    onAddNewItem={this.onAddNewObject}\n                    addNewItemLabel={<Trans>Add a new object</Trans>}\n                    selectedItems={selectedObjects}\n                    onItemSelected={this._selectObject}\n                    renamedItem={renamedObjectWithContext}\n                    onRename={this._rename}\n                    buildMenuTemplate={this._renderObjectMenuTemplate(i18n)}\n                    onMoveSelectionToItem={this._moveSelectionTo}\n                    canMoveSelectionToItem={this._canMoveSelectionTo}\n                    scaleUpItemIconWhenSelected={useScreenType() === 'touch'}\n                    reactDndType={objectWithContextReactDndType}\n                  />\n                )}\n              </I18n>\n            )}\n          </AutoSizer>\n        </div>\n        <SearchBar\n          value={searchText}\n          onRequestSearch={() => {}}\n          onChange={text =>\n            this.setState({\n              searchText: text,\n            })\n          }\n        />\n        {this.state.newObjectDialogOpen && (\n          <NewObjectDialog\n            onClose={() =>\n              this.setState({\n                newObjectDialogOpen: false,\n              })\n            }\n            onCreateNewObject={this.addObject}\n            onObjectAddedFromAsset={this._onObjectAddedFromAsset}\n            project={project}\n            layout={layout}\n            objectsContainer={objectsContainer}\n            events={events}\n            resourceSources={resourceSources}\n            onChooseResource={onChooseResource}\n            resourceExternalEditors={resourceExternalEditors}\n          />\n        )}\n        {this.state.variablesEditedObject && (\n          <VariablesEditorDialog\n            open\n            variablesContainer={\n              this.state.variablesEditedObject &&\n              this.state.variablesEditedObject.getVariables()\n            }\n            onCancel={() => this._editVariables(null)}\n            onApply={() => this._editVariables(null)}\n            title={<Trans>Object Variables</Trans>}\n            emptyExplanationMessage={\n              <Trans>\n                When you add variables to an object, any instance of the object\n                put on the scene or created during the game will have these\n                variables attached to it.\n              </Trans>\n            }\n            emptyExplanationSecondMessage={\n              <Trans>\n                For example, you can have a variable called Life representing\n                the health of the object.\n              </Trans>\n            }\n            hotReloadPreviewButtonProps={this.props.hotReloadPreviewButtonProps}\n          />\n        )}\n        {tagEditedObject && (\n          <EditTagsDialog\n            tagsString={tagEditedObject.getTags()}\n            onEdit={tags => {\n              this._changeObjectTags(tagEditedObject, tags);\n              this._openEditTagDialog(null);\n            }}\n            onCancel={() => this._openEditTagDialog(null)}\n          />\n        )}\n      </Background>\n    );\n  }\n}\n","export const CLIPBOARD_KIND = 'Object';\n","// @flow\nimport * as React from 'react';\nimport { type ExtensionShortHeader } from '../../Utils/GDevelopServices/Extension';\nimport { CorsAwareImage } from '../../UI/CorsAwareImage';\n\nconst styles = {\n  iconBackground: {\n    flex: 0,\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  icon: {\n    background: 'linear-gradient(45deg, #FFFFFF33, #FFFFFF)',\n    padding: 4,\n    borderRadius: 4,\n  },\n};\n\ntype Props = {|\n  extensionShortHeader: ExtensionShortHeader,\n  size: number,\n|};\n\nexport const ExtensionIcon = ({ extensionShortHeader, size }: Props) => {\n  return (\n    <div style={styles.iconBackground}>\n      <CorsAwareImage\n        style={{ ...styles.icon, width: size, height: size }}\n        src={extensionShortHeader.previewIconUrl}\n        alt={extensionShortHeader.fullName}\n      />\n    </div>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { type ExtensionShortHeader } from '../../Utils/GDevelopServices/Extension';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Text from '../../UI/Text';\nimport { Trans } from '@lingui/macro';\nimport { Column, Line } from '../../UI/Grid';\nimport { ExtensionIcon } from './ExtensionIcon';\n\nconst styles = {\n  iconBackground: {\n    flex: 0,\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  icon: {\n    width: 40,\n    height: 40,\n    background: 'linear-gradient(45deg, #FFFFFF33, #FFFFFF)',\n    padding: 4,\n    borderRadius: 4,\n  },\n  container: {\n    display: 'flex',\n    textAlign: 'left',\n    overflow: 'hidden',\n    padding: 8,\n  },\n};\n\ntype Props = {|\n  project: gdProject,\n  extensionShortHeader: ExtensionShortHeader,\n  onChoose: () => void,\n  onHeightComputed: number => void,\n|};\n\nexport const ExtensionListItem = ({\n  project,\n  extensionShortHeader,\n  onChoose,\n  onHeightComputed,\n}: Props) => {\n  const alreadyInstalled = project.hasEventsFunctionsExtensionNamed(\n    extensionShortHeader.name\n  );\n\n  // Report the height of the item once it's known.\n  const containerRef = React.useRef<?HTMLDivElement>(null);\n  React.useLayoutEffect(() => {\n    if (containerRef.current)\n      onHeightComputed(containerRef.current.getBoundingClientRect().height);\n  });\n\n  return (\n    <ButtonBase onClick={onChoose} focusRipple>\n      <div style={styles.container} ref={containerRef}>\n        <Line noMargin>\n          <ExtensionIcon\n            extensionShortHeader={extensionShortHeader}\n            size={40}\n          />\n          <Column expand>\n            <Text noMargin>\n              {extensionShortHeader.fullName}{' '}\n              {alreadyInstalled && <Trans> (already installed)</Trans>}\n            </Text>\n            <Text noMargin size=\"body2\">\n              {extensionShortHeader.shortDescription}\n            </Text>\n          </Column>\n        </Line>\n      </div>\n    </ButtonBase>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport {\n  type ExtensionShortHeader,\n  type ExtensionHeader,\n  getExtensionHeader,\n  isCompatibleWithExtension,\n} from '../../Utils/GDevelopServices/Extension';\nimport LeftLoader from '../../UI/LeftLoader';\nimport PlaceholderLoader from '../../UI/PlaceholderLoader';\nimport PlaceholderError from '../../UI/PlaceholderError';\nimport { MarkdownText } from '../../UI/MarkdownText';\nimport Text from '../../UI/Text';\nimport AlertMessage from '../../UI/AlertMessage';\nimport { getIDEVersion } from '../../Version';\nimport { Column, Line } from '../../UI/Grid';\nimport { ExtensionIcon } from './ExtensionIcon';\nimport { Divider } from '@material-ui/core';\nimport { ColumnStackLayout } from '../../UI/Layout';\n\ntype Props = {|\n  extensionShortHeader: ExtensionShortHeader,\n  isInstalling: boolean,\n  onClose: () => void,\n  onInstall: () => void,\n  alreadyInstalled: boolean,\n|};\ntype State = {|\n  extensionHeader: ?ExtensionHeader,\n  error: ?Error,\n|};\n\nconst getTransformedDescription = (extensionHeader: ExtensionHeader) => {\n  if (\n    extensionHeader.description.substr(\n      0,\n      extensionHeader.shortDescription.length\n    ) === extensionHeader.shortDescription\n  ) {\n    return extensionHeader.description.substr(\n      extensionHeader.shortDescription.length\n    );\n  }\n\n  return extensionHeader.description;\n};\n\nexport default class ExtensionInstallDialog extends Component<Props, State> {\n  state = {\n    extensionHeader: null,\n    error: null,\n  };\n\n  componentDidMount() {\n    this._loadExtensionheader();\n  }\n\n  _loadExtensionheader = () => {\n    this.setState({\n      error: null,\n    });\n    getExtensionHeader(this.props.extensionShortHeader).then(\n      extensionHeader => {\n        this.setState({\n          extensionHeader,\n        });\n      },\n      error => {\n        this.setState({\n          error,\n        });\n      }\n    );\n  };\n\n  render() {\n    const {\n      isInstalling,\n      extensionShortHeader,\n      onClose,\n      onInstall,\n      alreadyInstalled,\n    } = this.props;\n    const { extensionHeader, error } = this.state;\n\n    const isCompatible = isCompatibleWithExtension(\n      getIDEVersion(),\n      extensionShortHeader\n    );\n\n    return (\n      <Dialog\n        actions={[\n          <FlatButton\n            key=\"close\"\n            label={<Trans>Back</Trans>}\n            primary={false}\n            onClick={onClose}\n            disabled={isInstalling}\n          />,\n          <LeftLoader isLoading={isInstalling} key=\"install\">\n            <FlatButton\n              label={\n                !isCompatible ? (\n                  <Trans>Not compatible</Trans>\n                ) : alreadyInstalled ? (\n                  <Trans>Re-install/update</Trans>\n                ) : (\n                  <Trans>Install in project</Trans>\n                )\n              }\n              primary\n              onClick={onInstall}\n              disabled={isInstalling || !isCompatible}\n            />\n          </LeftLoader>,\n        ]}\n        cannotBeDismissed={false}\n        open\n        onRequestClose={onClose}\n      >\n        <ColumnStackLayout expand noMargin>\n          {!isCompatible && (\n            <AlertMessage kind=\"error\">\n              <Trans>\n                Unfortunately, this extension requires a newer version of\n                GDevelop to work. Upgrade GDevelop to be able to use this\n                extension in your project.\n              </Trans>\n            </AlertMessage>\n          )}\n          <Line alignItems=\"center\" noMargin>\n            <ExtensionIcon\n              extensionShortHeader={extensionShortHeader}\n              size={40}\n            />\n            <Column expand>\n              <Text noMargin size=\"title\">\n                {extensionShortHeader.fullName}\n              </Text>\n            </Column>\n          </Line>\n          <Text noMargin>{extensionShortHeader.shortDescription}</Text>\n          <Divider />\n          {extensionHeader && (\n            <MarkdownText\n              source={getTransformedDescription(extensionHeader)}\n              isStandaloneText\n            />\n          )}\n          {!extensionHeader && !error && <PlaceholderLoader />}\n          {!extensionHeader && error && (\n            <PlaceholderError onRetry={this._loadExtensionheader}>\n              <Trans>\n                Can't load the extension registry. Verify your internet\n                connection or try again later.\n              </Trans>\n            </PlaceholderError>\n          )}\n        </ColumnStackLayout>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport SearchBar from '../../UI/SearchBar';\nimport { Column, Line } from '../../UI/Grid';\nimport Background from '../../UI/Background';\nimport ScrollView from '../../UI/ScrollView';\nimport { type ExtensionShortHeader } from '../../Utils/GDevelopServices/Extension';\nimport { FiltersChooser } from '../../UI/Search/FiltersChooser';\nimport { ExtensionStoreContext } from './ExtensionStoreContext';\nimport { ListSearchResults } from '../../UI/Search/ListSearchResults';\nimport { ExtensionListItem } from './ExtensionListItem';\nimport { ResponsiveWindowMeasurer } from '../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport ExtensionInstallDialog from './ExtensionInstallDialog';\nimport Subheader from '../../UI/Subheader';\n\nconst styles = {\n  searchBar: {\n    // TODO: Can we put this in the search bar by default?\n    flexShrink: 0,\n  },\n};\n\ntype Props = {|\n  isInstalling: boolean,\n  project: gdProject,\n  onInstall: ExtensionShortHeader => Promise<void>,\n  showOnlyWithBehaviors: boolean,\n|};\n\nconst getExtensionName = (extensionShortHeader: ExtensionShortHeader) =>\n  extensionShortHeader.name;\n\nexport const ExtensionStore = ({\n  isInstalling,\n  project,\n  onInstall,\n  showOnlyWithBehaviors,\n}: Props) => {\n  const [\n    selectedExtensionShortHeader,\n    setSelectedExtensionShortHeader,\n  ] = React.useState<?ExtensionShortHeader>(null);\n  const {\n    filters,\n    searchResults,\n    error,\n    fetchExtensionsAndFilters,\n    filtersState,\n    searchText,\n    setSearchText,\n  } = React.useContext(ExtensionStoreContext);\n\n  React.useEffect(\n    () => {\n      fetchExtensionsAndFilters();\n    },\n    [fetchExtensionsAndFilters]\n  );\n\n  const filteredSearchResults = searchResults\n    ? searchResults.filter(\n        extensionShortHeader =>\n          !showOnlyWithBehaviors ||\n          extensionShortHeader.eventsBasedBehaviorsCount > 0\n      )\n    : null;\n\n  return (\n    <React.Fragment>\n      <ResponsiveWindowMeasurer>\n        {windowWidth => (\n          <Column expand noMargin useFullHeight>\n            <SearchBar\n              value={searchText}\n              onChange={setSearchText}\n              onRequestSearch={() => {}}\n              style={styles.searchBar}\n            />\n            <Line\n              overflow={\n                'hidden' /* Somehow required on Chrome/Firefox to avoid children growing (but not on Safari) */\n              }\n            >\n              <Background\n                noFullHeight\n                noExpand\n                width={windowWidth === 'small' ? 150 : 250}\n              >\n                <ScrollView>\n                  <Subheader>\n                    <Trans>Filters</Trans>\n                  </Subheader>\n                  <FiltersChooser\n                    allFilters={filters}\n                    filtersState={filtersState}\n                    error={error}\n                  />\n                </ScrollView>\n              </Background>\n              <ListSearchResults\n                onRetry={fetchExtensionsAndFilters}\n                error={error}\n                searchItems={filteredSearchResults}\n                getSearchItemUniqueId={getExtensionName}\n                renderSearchItem={(extensionShortHeader, onHeightComputed) => (\n                  <ExtensionListItem\n                    project={project}\n                    onHeightComputed={onHeightComputed}\n                    extensionShortHeader={extensionShortHeader}\n                    onChoose={() => {\n                      setSelectedExtensionShortHeader(extensionShortHeader);\n                    }}\n                  />\n                )}\n              />\n            </Line>\n          </Column>\n        )}\n      </ResponsiveWindowMeasurer>\n      {!!selectedExtensionShortHeader && (\n        <ExtensionInstallDialog\n          isInstalling={isInstalling}\n          extensionShortHeader={selectedExtensionShortHeader}\n          alreadyInstalled={project.hasEventsFunctionsExtensionNamed(\n            selectedExtensionShortHeader.name\n          )}\n          onInstall={() => {\n            onInstall(selectedExtensionShortHeader);\n          }}\n          onClose={() => setSelectedExtensionShortHeader(null)}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport {\n  type Release,\n  findRelease,\n} from '../../Utils/GDevelopServices/Release';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport PlaceholderLoader from '../../UI/PlaceholderLoader';\nimport { MarkdownText } from '../../UI/MarkdownText';\nimport { Column, Line } from '../../UI/Grid';\nimport Window from '../../Utils/Window';\nimport { hasBreakingChange } from '../../Utils/GDevelopServices/Release';\nimport AlertMessage from '../../UI/AlertMessage';\nimport FlatButton from '../../UI/FlatButton';\nimport RaisedButton from '../../UI/RaisedButton';\n\ntype Props = {|\n  releases: ?Array<Release>,\n  error: ?Error,\n  currentReleaseName: string,\n|};\n\n/**\n * Display information about latest releases.\n */\nconst ChangelogRenderer = ({ releases, error, currentReleaseName }: Props) => {\n  const openReleaseNote = () =>\n    Window.openExternalURL('https://github.com/4ian/GDevelop/releases');\n\n  if (error) {\n    return (\n      <Column>\n        <Line>\n          <AlertMessage kind=\"warning\">\n            <Trans>\n              Please double check online the changes to make sure that you are\n              aware of anything new in this version that would require you to\n              adapt your project.\n            </Trans>\n          </AlertMessage>\n        </Line>\n        <Line>\n          <EmptyMessage>\n            <Trans>\n              Unable to load the information about the latest GDevelop releases.\n              Verify your internet connection or retry later.\n            </Trans>\n          </EmptyMessage>\n        </Line>\n        <Line justifyContent=\"center\">\n          <RaisedButton\n            label={<Trans>See the releases notes online</Trans>}\n            onClick={openReleaseNote}\n          />\n        </Line>\n      </Column>\n    );\n  }\n\n  if (!releases) {\n    return <PlaceholderLoader />;\n  }\n\n  const currentRelease = findRelease(releases, currentReleaseName);\n  const currentVersionHasBreakingChange =\n    !!currentRelease && hasBreakingChange(currentRelease);\n\n  return (\n    <Column>\n      {currentVersionHasBreakingChange && (\n        <AlertMessage kind=\"warning\">\n          This version of GDevelop has a breaking change. Please make sure to\n          read the changes below to understand if any change or adaptation must\n          be made to your project.\n        </AlertMessage>\n      )}\n      {releases.map(release =>\n        release.name ? (\n          <MarkdownText\n            key={release.name}\n            source={\n              '# Version ' +\n              release.name +\n              '\\n---\\n' +\n              (release.description ||\n                'Changes and new features description will be available soon.')\n            }\n            isStandaloneText\n          />\n        ) : null\n      )}\n      <Line justifyContent=\"center\">\n        <FlatButton\n          label={<Trans>See all the releases notes</Trans>}\n          onClick={openReleaseNote}\n        />\n      </Line>\n    </Column>\n  );\n};\n\nexport default ChangelogRenderer;\n","// @flow\nimport axios from 'axios';\nimport { GDevelopReleaseApi } from './ApiConfigs';\n\nexport type Release = {\n  name: ?string,\n  publishedAt: ?string,\n  description: ?string,\n};\n\nexport const getReleases = (): Promise<Array<Release>> => {\n  return axios\n    .get(`${GDevelopReleaseApi.baseUrl}/release`, {\n      params: {\n        last: 4,\n      },\n    })\n    .then(response => response.data);\n};\n\nexport const hasBreakingChange = (release: Release): boolean => {\n  return (\n    (release.description || '').toLowerCase().indexOf('breaking change') !== -1\n  );\n};\n\nexport const findRelease = (\n  releases: Array<Release>,\n  name: string\n): ?Release => {\n  return releases.find(release => release.name === name);\n};\n","// @flow\nimport * as React from 'react';\nimport {\n  getReleases,\n  type Release,\n} from '../../Utils/GDevelopServices/Release';\nimport ChangelogRenderer from './ChangelogRenderer';\nimport { getIDEVersion } from '../../Version';\n\ntype State = {|\n  releases: ?Array<Release>,\n  error: ?Error,\n|};\n\ntype Props = {|\n  onUpdated?: () => void,\n|};\n\n/**\n * Load information about latest releases and display them.\n */\nexport default class Changelog extends React.Component<Props, State> {\n  state = {\n    releases: null,\n    error: null,\n  };\n\n  _onUpdated = () => {\n    if (this.props.onUpdated) this.props.onUpdated();\n  };\n\n  componentDidMount() {\n    getReleases()\n      .then(releases =>\n        this.setState(\n          {\n            releases,\n            error: null,\n          },\n          this._onUpdated\n        )\n      )\n      .catch((error: ?Error) =>\n        this.setState(\n          {\n            error,\n          },\n          this._onUpdated\n        )\n      );\n  }\n\n  render() {\n    const { releases, error } = this.state;\n    return (\n      <ChangelogRenderer\n        releases={releases}\n        error={error}\n        currentReleaseName={getIDEVersion()}\n      />\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { Spacer, Line, Column } from './Grid';\nimport { useResponsiveWindowWidth } from './Reponsive/ResponsiveWindowMeasurer';\n\ntype TextFieldWithButtonLayoutProps = {|\n  renderTextField: () => React.Node,\n  renderButton: (style: {|\n    marginTop?: number,\n    marginBottom?: number,\n    marginLeft?: number,\n    marginRight?: number,\n    margin?: number,\n    flexShrink?: 0,\n  |}) => React.Node,\n  margin?: 'none' | 'dense',\n  noFloatingLabelText?: boolean,\n|};\n\nconst buttonCommonStyles = {\n  // Ensure the button is not shrinked, even if the text field\n  // (in particular with a long helper text) is large.\n  flexShrink: 0,\n};\n\nconst textFieldWithButtonLayoutStyles = {\n  container: {\n    flex: 1,\n    display: 'flex',\n    alignItems: 'flex-start', // Align from the top to stay at the same position when error/multiline\n  },\n  filledTextFieldWithLabelRightButtonMargins: {\n    ...buttonCommonStyles,\n    marginTop: 15, // Properly align with the text field (only dense \"filled\" text fields supported)\n    marginLeft: 8,\n  },\n  filledTextFieldWithoutLabelRightButtonMargins: {\n    ...buttonCommonStyles,\n    marginTop: 6, // Properly align with the text field (only dense \"filled\" text fields supported)\n    marginLeft: 8,\n  },\n  standardTextFieldWithLabelRightButtonMargins: {\n    ...buttonCommonStyles,\n    marginTop: 17, // Properly align with the text field (only \"standard\" text fields with margin \"none\" supported)\n    marginLeft: 8,\n  },\n  standardTextFieldWithoutLabelRightButtonMargins: {\n    ...buttonCommonStyles,\n    marginTop: 0, // Properly align with the text field (only \"standard\" text fields with margin \"none\" supported)\n    marginLeft: 8,\n  },\n};\n\n/**\n * Position a button on the right of a TextField.\n */\nexport const TextFieldWithButtonLayout = ({\n  margin,\n  noFloatingLabelText,\n  renderTextField,\n  renderButton,\n}: TextFieldWithButtonLayoutProps) => {\n  return (\n    <div style={textFieldWithButtonLayoutStyles.container}>\n      {renderTextField()}\n      {renderButton(\n        margin === 'none'\n          ? noFloatingLabelText\n            ? textFieldWithButtonLayoutStyles.standardTextFieldWithoutLabelRightButtonMargins\n            : textFieldWithButtonLayoutStyles.standardTextFieldWithLabelRightButtonMargins\n          : noFloatingLabelText\n          ? textFieldWithButtonLayoutStyles.filledTextFieldWithoutLabelRightButtonMargins\n          : textFieldWithButtonLayoutStyles.filledTextFieldWithLabelRightButtonMargins\n      )}\n    </div>\n  );\n};\n\ntype ResponsiveLineStackLayoutProps = {|\n  alignItems?: string,\n  justifyContent?: string,\n  expand?: boolean,\n  /** Prefer `noColumnMargin` if needed. */\n  noMargin?: boolean,\n  /** Remove the margin on the left and right of the column, when the layout is shown as a single column. */\n  noColumnMargin?: boolean,\n  children: React.Node,\n|};\n\nexport const ResponsiveLineStackLayout = ({\n  alignItems,\n  justifyContent,\n  expand,\n  noMargin,\n  noColumnMargin,\n  children,\n}: ResponsiveLineStackLayoutProps) => {\n  const windowWidth = useResponsiveWindowWidth();\n  let isFirstChild = true;\n\n  return windowWidth === 'small' ? (\n    <ColumnStackLayout noMargin={noMargin || noColumnMargin} expand>\n      {children}\n    </ColumnStackLayout>\n  ) : (\n    <Line\n      alignItems={alignItems}\n      justifyContent={justifyContent}\n      expand={expand}\n      noMargin={noMargin}\n    >\n      {React.Children.map(children, (child, index) => {\n        if (!child) return null;\n\n        const addSpacers = !isFirstChild;\n        isFirstChild = false;\n\n        return (\n          <React.Fragment>\n            {addSpacers && <Spacer />}\n            {child}\n          </React.Fragment>\n        );\n      })}\n    </Line>\n  );\n};\n\ntype ColumnStackLayoutProps = {|\n  alignItems?: string,\n  justifyContent?: string,\n  expand?: boolean,\n  noMargin?: boolean,\n  children: React.Node,\n|};\n\nexport const ColumnStackLayout = ({\n  alignItems,\n  justifyContent,\n  expand,\n  noMargin,\n  children,\n}: ColumnStackLayoutProps) => {\n  let isFirstChild = true;\n  return (\n    <Column\n      alignItems={alignItems}\n      justifyContent={justifyContent}\n      expand={expand}\n      noMargin={noMargin}\n    >\n      {React.Children.map(children, (child, index) => {\n        if (!child) return null;\n\n        const addSpacers = !isFirstChild;\n        isFirstChild = false;\n\n        return (\n          <React.Fragment>\n            {addSpacers && <Spacer />}\n            {child}\n          </React.Fragment>\n        );\n      })}\n    </Column>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport {\n  createTree,\n  type InstructionOrExpressionTreeNode,\n  findInTree,\n} from '../../InstructionOrExpression/CreateTree';\nimport {\n  enumerateAllInstructions,\n  enumerateFreeInstructions,\n  filterInstructionsList,\n  deduplicateInstructionsList,\n} from '../../InstructionOrExpression/EnumerateInstructions';\nimport { type EnumeratedInstructionMetadata } from '../../InstructionOrExpression/EnumeratedInstructionOrExpressionMetadata.js';\nimport { List, type ListItemRefType, ListItem } from '../../UI/List';\nimport SearchBar, { useShouldAutofocusSearchbar } from '../../UI/SearchBar';\nimport ThemeConsumer from '../../UI/Theme/ThemeConsumer';\nimport ScrollView, { type ScrollViewInterface } from '../../UI/ScrollView';\nimport { Tabs, Tab } from '../../UI/Tabs';\nimport Subheader from '../../UI/Subheader';\nimport {\n  enumerateObjectsAndGroups,\n  filterObjectsList,\n  filterGroupsList,\n  enumerateObjects,\n} from '../../ObjectsList/EnumerateObjects';\nimport TagChips from '../../UI/TagChips';\nimport { renderGroupObjectsListItem } from './SelectorListItems/SelectorGroupObjectsListItem';\nimport { renderObjectListItem } from './SelectorListItems/SelectorObjectListItem';\nimport { renderInstructionOrExpressionListItem } from './SelectorListItems/SelectorInstructionOrExpressionListItem';\nimport { renderInstructionOrExpressionTree } from './SelectorListItems/SelectorInstructionsTreeListItem';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport {\n  buildTagsMenuTemplate,\n  getTagsFromString,\n} from '../../Utils/TagsHelper';\nimport {\n  getObjectOrObjectGroupListItemValue,\n  getInstructionListItemValue,\n} from './SelectorListItems/Keys';\n\nconst styles = {\n  searchBar: {\n    flexShrink: 0,\n  },\n};\n\nexport type TabName = 'objects' | 'free-instructions';\n\ntype State = {|\n  searchText: string,\n\n  // State for tags of objects:\n  selectedObjectTags: Array<string>,\n|};\n\ntype Props = {|\n  project: gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  currentTab: TabName,\n  onChangeTab: TabName => void,\n  isCondition: boolean,\n  focusOnMount?: boolean,\n  chosenInstructionType: ?string,\n  onChooseInstruction: (type: string, EnumeratedInstructionMetadata) => void,\n  chosenObjectName: ?string,\n  onChooseObject: (objectName: string) => void,\n  onSearchStartOrReset?: () => void,\n  style?: Object,\n|};\n\nconst iconSize = 24;\nconst minHeight = 400; // Avoid a super small list in empty scenes. 400 is enough to be displayed on an iPhone SE.\n\nexport default class InstructionOrObjectSelector extends React.PureComponent<\n  Props,\n  State\n> {\n  state = { searchText: '', selectedObjectTags: [] };\n  _searchBar = React.createRef<SearchBar>();\n  _scrollView = React.createRef<ScrollViewInterface>();\n  _selectedItem = React.createRef<ListItemRefType>();\n\n  // Free instructions, to be displayed in a tab next to the objects.\n  freeInstructionsInfo: Array<EnumeratedInstructionMetadata> = enumerateFreeInstructions(\n    this.props.isCondition\n  );\n  freeInstructionsInfoTree: InstructionOrExpressionTreeNode = createTree(\n    this.freeInstructionsInfo\n  );\n  initialInstructionTypePath = findInTree(\n    this.freeInstructionsInfoTree,\n    this.props.chosenInstructionType\n  );\n\n  // All the instructions, to be used when searching, so that the search is done\n  // across all the instructions (including object and behaviors instructions).\n  allInstructionsInfo: Array<EnumeratedInstructionMetadata> = enumerateAllInstructions(\n    this.props.isCondition\n  );\n\n  componentDidMount() {\n    if (\n      this.props.focusOnMount &&\n      useShouldAutofocusSearchbar() &&\n      this._searchBar.current\n    ) {\n      this._searchBar.current.focus();\n    }\n    if (this._selectedItem.current && this._scrollView.current) {\n      this._scrollView.current.scrollTo(this._selectedItem.current);\n    }\n  }\n\n  _getAllObjectTags = (): Array<string> => {\n    const { globalObjectsContainer, objectsContainer } = this.props;\n\n    const tagsSet: Set<string> = new Set();\n    enumerateObjects(\n      globalObjectsContainer,\n      objectsContainer\n    ).allObjectsList.forEach(({ object }) => {\n      getTagsFromString(object.getTags()).forEach(tag => tagsSet.add(tag));\n    });\n\n    return Array.from(tagsSet);\n  };\n\n  _buildObjectTagsMenuTemplate = (i18n: I18nType): Array<any> => {\n    const { selectedObjectTags } = this.state;\n\n    return buildTagsMenuTemplate({\n      noTagLabel: i18n._(t`No tags - add a tag to an object first`),\n      getAllTags: this._getAllObjectTags,\n      selectedTags: selectedObjectTags,\n      onChange: selectedObjectTags => {\n        this.setState({ selectedObjectTags });\n      },\n    });\n  };\n\n  render() {\n    const {\n      style,\n      globalObjectsContainer,\n      objectsContainer,\n      project,\n      chosenInstructionType,\n      onChooseInstruction,\n      chosenObjectName,\n      onChooseObject,\n      isCondition,\n      currentTab,\n      onChangeTab,\n      onSearchStartOrReset,\n    } = this.props;\n    const { searchText, selectedObjectTags } = this.state;\n\n    // If the global objects container is not the project, consider that we're\n    // not in the events of a layout or an external events sheet - but in an extension.\n    const isOutsideLayout = globalObjectsContainer !== project;\n\n    const { allObjectsList, allGroupsList } = enumerateObjectsAndGroups(\n      globalObjectsContainer,\n      objectsContainer\n    );\n    const displayedObjectsList = filterObjectsList(allObjectsList, {\n      searchText,\n      selectedTags: selectedObjectTags,\n    });\n    const displayedObjectGroupsList = selectedObjectTags.length\n      ? []\n      : filterGroupsList(allGroupsList, searchText);\n    const isSearching = !!searchText;\n\n    const filteredInstructionsList = filterInstructionsList(\n      // When searching, search among all the instructions\n      isSearching ? this.allInstructionsInfo : this.freeInstructionsInfo,\n      { searchText }\n    );\n\n    // When searching, we can have a lot of results. Keep only the first ones.\n    // Also ensure no duplicate is shown (could be the case for the \"Create\" action,\n    // as both present in the object actions list and in the free actions list).\n    const displayedInstructionsList = isSearching\n      ? deduplicateInstructionsList(filteredInstructionsList.slice(0, 20))\n      : filteredInstructionsList;\n\n    const remainingResultsCount = isSearching\n      ? Math.max(filteredInstructionsList.length - 20, 0)\n      : 0;\n\n    const hasResults =\n      !isSearching ||\n      !!displayedObjectsList.length ||\n      !!displayedObjectGroupsList.length ||\n      !!displayedInstructionsList.length;\n\n    const onSubmitSearch = () => {\n      if (!isSearching) return;\n\n      if (displayedObjectsList.length > 0) {\n        onChooseObject(displayedObjectsList[0].object.getName());\n      } else if (displayedObjectGroupsList.length > 0) {\n        onChooseObject(displayedObjectGroupsList[0].group.getName());\n      } else if (displayedInstructionsList.length > 0) {\n        onChooseInstruction(\n          displayedInstructionsList[0].type,\n          displayedInstructionsList[0]\n        );\n      }\n    };\n\n    return (\n      <I18n key=\"tags\">\n        {({ i18n }) => (\n          <ThemeConsumer>\n            {muiTheme => (\n              <div\n                style={{\n                  backgroundColor: muiTheme.list.itemsBackgroundColor,\n                  minHeight,\n                  ...style,\n                }}\n              >\n                <SearchBar\n                  value={searchText}\n                  onChange={searchText => {\n                    const oldSearchText = this.state.searchText;\n                    this.setState({\n                      searchText,\n                    });\n\n                    // Notify if needed that we started or cleared a search\n                    if (\n                      (!oldSearchText && searchText) ||\n                      (oldSearchText && !searchText)\n                    ) {\n                      if (onSearchStartOrReset) onSearchStartOrReset();\n                    }\n                  }}\n                  onRequestSearch={onSubmitSearch}\n                  buildTagsMenuTemplate={() =>\n                    this._buildObjectTagsMenuTemplate(i18n)\n                  }\n                  style={styles.searchBar}\n                  ref={this._searchBar}\n                />\n                {!isSearching && (\n                  <Tabs value={currentTab} onChange={onChangeTab}>\n                    <Tab\n                      label={<Trans>Objects</Trans>}\n                      value={('objects': TabName)}\n                    />\n                    <Tab\n                      label={\n                        isCondition ? (\n                          <Trans>Other conditions</Trans>\n                        ) : (\n                          <Trans>Other actions</Trans>\n                        )\n                      }\n                      value={('free-instructions': TabName)}\n                    />\n                  </Tabs>\n                )}\n                <ScrollView\n                  ref={\n                    // $FlowFixMe - improper typing of ScrollView?\n                    this._scrollView\n                  }\n                >\n                  {!isSearching && currentTab === 'objects' && (\n                    <TagChips\n                      tags={selectedObjectTags}\n                      onChange={selectedObjectTags =>\n                        this.setState({\n                          selectedObjectTags,\n                        })\n                      }\n                    />\n                  )}\n                  {hasResults && (\n                    <List>\n                      {(isSearching || currentTab === 'objects') && (\n                        <React.Fragment>\n                          {displayedObjectsList.map(objectWithContext =>\n                            renderObjectListItem({\n                              project: project,\n                              objectWithContext: objectWithContext,\n                              iconSize: iconSize,\n                              onClick: () =>\n                                onChooseObject(\n                                  objectWithContext.object.getName()\n                                ),\n                              selectedValue: chosenObjectName\n                                ? getObjectOrObjectGroupListItemValue(\n                                    chosenObjectName\n                                  )\n                                : undefined,\n                            })\n                          )}\n\n                          {displayedObjectGroupsList.length > 0 && (\n                            <Subheader>\n                              <Trans>Object groups</Trans>\n                            </Subheader>\n                          )}\n                          {displayedObjectGroupsList.map(groupWithContext =>\n                            renderGroupObjectsListItem({\n                              groupWithContext: groupWithContext,\n                              iconSize: iconSize,\n                              onClick: () =>\n                                onChooseObject(\n                                  groupWithContext.group.getName()\n                                ),\n                              selectedValue: chosenObjectName\n                                ? getObjectOrObjectGroupListItemValue(\n                                    chosenObjectName\n                                  )\n                                : undefined,\n                            })\n                          )}\n                        </React.Fragment>\n                      )}\n                      {isSearching && displayedInstructionsList.length > 0 && (\n                        <Subheader>\n                          {isCondition ? (\n                            <Trans>Conditions</Trans>\n                          ) : (\n                            <Trans>Actions</Trans>\n                          )}\n                        </Subheader>\n                      )}\n                      {isSearching &&\n                        displayedInstructionsList.map(instructionMetadata =>\n                          renderInstructionOrExpressionListItem({\n                            instructionOrExpressionMetadata: instructionMetadata,\n                            iconSize: iconSize,\n                            onClick: () =>\n                              onChooseInstruction(\n                                instructionMetadata.type,\n                                instructionMetadata\n                              ),\n                            selectedValue: chosenInstructionType\n                              ? getInstructionListItemValue(\n                                  chosenInstructionType\n                                )\n                              : undefined,\n                          })\n                        )}\n                      {!isSearching &&\n                        currentTab === 'free-instructions' &&\n                        renderInstructionOrExpressionTree({\n                          instructionTreeNode: this.freeInstructionsInfoTree,\n                          onChoose: onChooseInstruction,\n                          iconSize,\n                          selectedValue: chosenInstructionType\n                            ? getInstructionListItemValue(chosenInstructionType)\n                            : undefined,\n                          initiallyOpenedPath: this.initialInstructionTypePath,\n                          selectedItemRef: this._selectedItem,\n                        })}\n                      {remainingResultsCount > 0 && (\n                        <ListItem\n                          primaryText={\n                            <Trans>\n                              And {remainingResultsCount} more results.\n                            </Trans>\n                          }\n                          disabled\n                          secondaryText={\n                            <Trans>\n                              Refine your search with more specific keyword to\n                              see them.\n                            </Trans>\n                          }\n                        />\n                      )}\n                    </List>\n                  )}\n                  {!isSearching &&\n                    currentTab === 'objects' &&\n                    !allObjectsList.length && (\n                      <EmptyMessage>\n                        {isOutsideLayout ? (\n                          <Trans>\n                            There are no objects. Objects will appear if you add\n                            some as parameters.\n                          </Trans>\n                        ) : (\n                          <Trans>\n                            There is no object in your game or in this scene.\n                            Start by adding an new object in the scene editor,\n                            using the objects list.\n                          </Trans>\n                        )}\n                      </EmptyMessage>\n                    )}\n                  {!hasResults && (\n                    <EmptyMessage>\n                      <Trans>\n                        Nothing corresponding to your search. Choose an object\n                        first or browse the list of actions/conditions.\n                      </Trans>\n                    </EmptyMessage>\n                  )}\n                </ScrollView>\n              </div>\n            )}\n          </ThemeConsumer>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { ListItem } from '../../../UI/List';\nimport ListIcon from '../../../UI/ListIcon';\nimport ObjectsRenderingService from '../../../ObjectsRendering/ObjectsRenderingService';\nimport type { ObjectWithContext } from '../../../ObjectsList/EnumerateObjects';\nimport {\n  getObjectOrObjectGroupListItemValue,\n  getObjectListItemKey,\n} from './Keys';\n\ntype Props = {|\n  project: gdProject,\n  objectWithContext: ObjectWithContext,\n  iconSize: number,\n  onClick: () => void,\n  selectedValue: ?string,\n|};\n\nexport const renderObjectListItem = ({\n  project,\n  objectWithContext,\n  iconSize,\n  onClick,\n  selectedValue,\n}: Props) => {\n  const objectName: string = objectWithContext.object.getName();\n  return (\n    <ListItem\n      key={getObjectListItemKey(objectWithContext)}\n      selected={\n        selectedValue === getObjectOrObjectGroupListItemValue(objectName)\n      }\n      primaryText={objectName}\n      leftIcon={\n        <ListIcon\n          iconSize={iconSize}\n          src={ObjectsRenderingService.getThumbnail(\n            project,\n            objectWithContext.object\n          )}\n        />\n      }\n      onClick={onClick}\n    />\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { ListItem } from '../../../UI/List';\nimport ListIcon from '../../../UI/ListIcon';\nimport type { GroupWithContext } from '../../../ObjectsList/EnumerateObjects';\nimport {\n  getObjectGroupListItemKey,\n  getObjectOrObjectGroupListItemValue,\n} from './Keys';\n\ntype Props = {|\n  groupWithContext: GroupWithContext,\n  iconSize: number,\n  onClick: () => void,\n  selectedValue: ?string,\n|};\n\nexport const renderGroupObjectsListItem = ({\n  groupWithContext,\n  iconSize,\n  onClick,\n  selectedValue,\n}: Props) => {\n  const groupName: string = groupWithContext.group.getName();\n  return (\n    <ListItem\n      key={getObjectGroupListItemKey(groupWithContext)}\n      selected={\n        selectedValue === getObjectOrObjectGroupListItemValue(groupName)\n      }\n      primaryText={groupName}\n      leftIcon={\n        <ListIcon\n          iconSize={iconSize}\n          src=\"res/ribbon_default/objectsgroups64.png\"\n        />\n      }\n      onClick={onClick}\n    />\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { type Resource } from '../../Utils/GDevelopServices/Asset';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Text from '../../UI/Text';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport VideoLibrary from '@material-ui/icons/VideoLibrary';\nimport FontDownload from '@material-ui/icons/FontDownload';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Trans } from '@lingui/macro';\nimport { Column, Line } from '../../UI/Grid';\nimport { CorsAwareImage } from '../../UI/CorsAwareImage';\n\nconst paddingSize = 10;\nconst styles = {\n  previewBackground: {\n    background: 'url(\"res/transparentback.png\") repeat',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  previewImage: {\n    objectFit: 'contain',\n    verticalAlign: 'middle',\n    pointerEvents: 'none',\n  },\n  previewIcon: {\n    width: 40,\n    height: 40,\n  },\n  cardContainer: {\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  titleContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: 48,\n    color: '#fff',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    backgroundColor: 'rgb(0,0,0,0.5)',\n  },\n  title: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  icon: { width: 32, height: 32 },\n  audioElement: { width: 128, height: 40 },\n};\n\ntype ImageCardProps = {|\n  size: number,\n  resource: Resource,\n  onChoose: () => void,\n  imageStyle?: {|\n    width: number,\n    height: number,\n  |},\n|};\n\nconst ImageCard = ({\n  resource,\n  onChoose,\n  size,\n  imageStyle,\n}: ImageCardProps) => {\n  return (\n    <ButtonBase onClick={onChoose} focusRipple>\n      <div style={{ ...styles.cardContainer, width: size, height: size }}>\n        <div style={{ ...styles.previewBackground, width: size, height: size }}>\n          <CorsAwareImage\n            key={resource.url}\n            style={{\n              ...styles.previewImage,\n              maxWidth: 128 - 2 * paddingSize,\n              maxHeight: 128 - 2 * paddingSize,\n              ...imageStyle,\n            }}\n            src={resource.url}\n            alt={resource.name}\n          />\n        </div>\n        <div style={styles.titleContainer}>\n          <Text noMargin style={styles.title}>\n            {resource.name}\n          </Text>\n          <Text noMargin style={styles.title} size=\"body2\">\n            {resource.license}\n          </Text>\n        </div>\n      </div>\n    </ButtonBase>\n  );\n};\n\ntype GenericCardProps = {|\n  size: number,\n  resource: Resource,\n  onChoose: () => void,\n  children: React.Node,\n|};\n\nconst GenericCard = ({\n  resource,\n  onChoose,\n  size,\n  children,\n}: GenericCardProps) => {\n  return (\n    <div style={{ ...styles.cardContainer, width: size, height: size }}>\n      <Column>{children}</Column>\n      <div style={styles.titleContainer}>\n        <Text noMargin style={styles.title}>\n          {resource.name}\n        </Text>\n        <Text noMargin style={styles.title} size=\"body2\">\n          {resource.license}\n        </Text>\n      </div>\n    </div>\n  );\n};\n\ntype Props = {|\n  size: number,\n  resource: Resource,\n  onChoose: () => void,\n|};\n\nexport const ResourceCard = ({ resource, onChoose, size }: Props) => {\n  const resourceKind = resource.type;\n\n  switch (resourceKind) {\n    case 'image':\n      return <ImageCard resource={resource} onChoose={onChoose} size={size} />;\n    case 'svg':\n      return (\n        <ImageCard\n          resource={resource}\n          onChoose={onChoose}\n          size={size}\n          imageStyle={styles.previewIcon}\n        />\n      );\n    case 'audio':\n      return (\n        <GenericCard onChoose={onChoose} resource={resource} size={size}>\n          <Line justifyContent=\"center\">\n            <audio controls src={resource.url} style={styles.audioElement}>\n              Audio preview is unsupported.\n            </audio>\n          </Line>\n          <Line justifyContent=\"center\">\n            <RaisedButton onClick={onChoose} label={<Trans>Choose</Trans>} />\n          </Line>\n        </GenericCard>\n      );\n    case 'json':\n      return (\n        <GenericCard onChoose={onChoose} resource={resource} size={size}>\n          <Line justifyContent=\"center\">\n            <InsertDriveFile style={styles.icon} />\n          </Line>\n          <Line justifyContent=\"center\">\n            <RaisedButton onClick={onChoose} label={<Trans>Choose</Trans>} />\n          </Line>\n        </GenericCard>\n      );\n    case 'video':\n      return (\n        <GenericCard onChoose={onChoose} resource={resource} size={size}>\n          <Line justifyContent=\"center\">\n            <VideoLibrary style={styles.icon} />\n          </Line>\n          <Line justifyContent=\"center\">\n            <RaisedButton onClick={onChoose} label={<Trans>Choose</Trans>} />\n          </Line>\n        </GenericCard>\n      );\n    case 'font':\n      return (\n        <GenericCard onChoose={onChoose} resource={resource} size={size}>\n          <Line justifyContent=\"center\">\n            <FontDownload style={styles.icon} />\n          </Line>\n          <Line justifyContent=\"center\">\n            <RaisedButton onClick={onChoose} label={<Trans>Choose</Trans>} />\n          </Line>\n        </GenericCard>\n      );\n    default:\n      return null;\n  }\n};\n","// @flow\nimport * as React from 'react';\nimport SearchBar from '../../UI/SearchBar';\nimport { Column, Line } from '../../UI/Grid';\nimport Background from '../../UI/Background';\nimport ScrollView from '../../UI/ScrollView';\nimport { type Resource } from '../../Utils/GDevelopServices/Asset';\nimport { FiltersChooser } from '../../UI/Search/FiltersChooser';\nimport { ResourceStoreContext } from './ResourceStoreContext';\nimport { BoxSearchResults } from '../../UI/Search/BoxSearchResults';\nimport { ResourceCard } from './ResourceCard';\nimport Subheader from '../../UI/Subheader';\nimport { CategoryChooser } from '../../UI/Search/CategoryChooser';\nimport { Trans } from '@lingui/macro';\n\nconst styles = {\n  searchBar: {\n    // TODO: Can we put this in the search bar by default?\n    flexShrink: 0,\n  },\n};\n\ntype Props = {\n  onChoose: Resource => void,\n  resourceKind: string,\n};\n\nexport const ResourceStore = ({ onChoose, resourceKind }: Props) => {\n  const {\n    filters,\n    searchResults,\n    error,\n    fetchResourcesAndFilters,\n    filtersState,\n    searchText,\n    setSearchText,\n  } = React.useContext(ResourceStoreContext);\n\n  React.useEffect(\n    () => {\n      fetchResourcesAndFilters();\n    },\n    [fetchResourcesAndFilters]\n  );\n\n  const searchResultsForResourceKind = searchResults\n    ? searchResults.filter(resource => resource.type === resourceKind)\n    : null;\n\n  return (\n    <Column expand noMargin useFullHeight>\n      <SearchBar\n        value={searchText}\n        onChange={setSearchText}\n        onRequestSearch={() => {}}\n        style={styles.searchBar}\n      />\n      <Line\n        overflow={\n          'hidden' /* Somehow required on Chrome/Firefox to avoid children growing (but not on Safari) */\n        }\n      >\n        <Background noFullHeight noExpand width={250}>\n          <ScrollView>\n            <Subheader>\n              <Trans>Categories</Trans>\n            </Subheader>\n            <CategoryChooser\n              allItemsLabel={<Trans>All assets</Trans>}\n              allFilters={filters}\n              filtersState={filtersState}\n              error={error}\n            />\n            <Subheader>\n              <Trans>Filters</Trans>\n            </Subheader>\n            <FiltersChooser\n              allFilters={filters}\n              filtersState={filtersState}\n              error={error}\n            />\n          </ScrollView>\n        </Background>\n        <BoxSearchResults\n          baseSize={128}\n          onRetry={fetchResourcesAndFilters}\n          error={error}\n          searchItems={searchResultsForResourceKind}\n          renderSearchItem={(resource, size) => (\n            <ResourceCard\n              size={size}\n              resource={resource}\n              onChoose={() => onChoose(resource)}\n            />\n          )}\n        />\n      </Line>\n    </Column>\n  );\n};\n","// @flow\nimport axios from 'axios';\nimport { GDevelopAnalyticsApi } from './ApiConfigs';\n\nexport type GameMetrics = {\n  date: string,\n\n  sessions: ?{\n    /** Number of sessions for this day. */\n    d0Sessions: number,\n  },\n  players: ?{\n    /** Number of players for this day. */\n    d0Players: number,\n    /** Number of new players for this day. */\n    d0NewPlayers: number,\n  },\n  retention: ?{\n    /** Day 1 retained players (number of players that played this day, and were new players 1 days earlier). */\n    d1RetainedPlayers: number,\n    /** Day 2 retained players (number of players that played this day, and were new players 2 days earlier). */\n    d2RetainedPlayers: number,\n    /** Day 3 retained players (number of players that played this day, and were new players 3 days earlier). */\n    d3RetainedPlayers: number,\n    /** Day 4 retained players (number of players that played this day, and were new players 4 days earlier). */\n    d4RetainedPlayers: number,\n    /** Day 5 retained players (number of players that played this day, and were new players 5 days earlier). */\n    d5RetainedPlayers: number,\n    /** Day 6 retained players (number of players that played this day, and were new players 6 days earlier). */\n    d6RetainedPlayers: number,\n    /** Day 7 retained players (number of players that played this day, and were new players 7 days earlier). */\n    d7RetainedPlayers: number,\n  },\n};\n\nexport const getGameMetrics = async (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  gameId: string,\n  dayIsoDate: string\n): Promise<?GameMetrics> => {\n  const authorizationHeader = await getAuthorizationHeader();\n\n  const response = await axios.get(\n    `${GDevelopAnalyticsApi.baseUrl}/game-metrics`,\n    {\n      params: {\n        userId,\n        gameId,\n        dayIsoDate,\n      },\n      headers: {\n        Authorization: authorizationHeader,\n      },\n      validateStatus: status =>\n        (status >= 200 && status < 300) || status === 404,\n    }\n  );\n\n  if (response.status === 404) return null;\n  return response.data;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { format, formatISO } from 'date-fns';\nimport FlatButton from '../UI/FlatButton';\nimport { Line, Spacer } from '../UI/Grid';\nimport {\n  type Game,\n  updateGame,\n  deleteGame,\n} from '../Utils/GDevelopServices/Game';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport Dialog from '../UI/Dialog';\nimport { Tab, Tabs } from '../UI/Tabs';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport { ColumnStackLayout } from '../UI/Layout';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport Text from '../UI/Text';\nimport {\n  type GameMetrics,\n  getGameMetrics,\n} from '../Utils/GDevelopServices/Analytics';\nimport UserProfileContext from '../Profile/UserProfileContext';\nimport PlaceholderError from '../UI/PlaceholderError';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport { CircularProgress } from '@material-ui/core';\nimport { Table, TableBody, TableRow, TableRowColumn } from '../UI/Table';\nimport AlertMessage from '../UI/AlertMessage';\nimport subDays from 'date-fns/subDays';\nimport RaisedButton from '../UI/RaisedButton';\nimport Window from '../Utils/Window';\nimport HelpButton from '../UI/HelpButton';\n\ntype Props = {|\n  game: Game,\n  project: ?gdProject,\n  initialTab: 'details' | 'analytics' | 'monetization',\n  onClose: () => void,\n  onGameUpdated: (updatedGame: Game) => void,\n  onGameDeleted: () => void,\n|};\n\nconst styles = {\n  bigIcon: {\n    width: 48,\n    height: 48,\n    marginTop: 8,\n  },\n};\n\n/** Check if the project has changes not refleted in the registered online game. */\nconst areProjectAndGameDiffering = (project: ?gdProject, game: Game) => {\n  if (!project) return false;\n\n  return (\n    project.getAuthor() !== game.authorName ||\n    project.getName() !== game.gameName\n  );\n};\n\nexport const GameDetailsDialog = ({\n  game,\n  project,\n  initialTab,\n  onClose,\n  onGameUpdated,\n  onGameDeleted,\n}: Props) => {\n  const { getAuthorizationHeader, profile } = React.useContext(\n    UserProfileContext\n  );\n  const [currentTab, setCurrentTab] = React.useState(initialTab);\n  const [gameRollingMetrics, setGameMetrics] = React.useState<?GameMetrics>(\n    null\n  );\n  const [gameRollingMetricsError, setGameMetricsError] = React.useState<?Error>(\n    null\n  );\n  const [isGameMetricsLoading, setIsGameMetricsLoading] = React.useState(false);\n\n  const yesterdayIsoDate = formatISO(subDays(new Date(), 1), {\n    representation: 'date',\n  });\n  const [analyticsDate, setAnalyticsDate] = React.useState(yesterdayIsoDate);\n\n  const loadGameMetrics = React.useCallback(\n    async () => {\n      if (!profile) return;\n\n      const { uid } = profile;\n\n      setIsGameMetricsLoading(true);\n      setGameMetricsError(null);\n      try {\n        const gameRollingMetrics = await getGameMetrics(\n          getAuthorizationHeader,\n          uid,\n          game.id,\n          analyticsDate\n        );\n        setGameMetrics(gameRollingMetrics);\n      } catch (err) {\n        console.error(`Unable to load game rolling metrics:`, err);\n        setGameMetricsError(err);\n      }\n      setIsGameMetricsLoading(false);\n    },\n    [getAuthorizationHeader, profile, game, analyticsDate]\n  );\n\n  React.useEffect(\n    () => {\n      loadGameMetrics();\n    },\n    [loadGameMetrics]\n  );\n\n  const updateGameFromProject = async () => {\n    if (!project) return;\n    if (!profile) return;\n    const { uid } = profile;\n\n    try {\n      const game = await updateGame(getAuthorizationHeader, uid, {\n        authorName: project.getAuthor(),\n        gameId: project.getProjectUuid(),\n        gameName: project.getName(),\n      });\n      onGameUpdated(game);\n    } catch (error) {\n      console.error('Unable to update the game:', error);\n    }\n  };\n\n  const unregisterGame = async () => {\n    if (!profile) return;\n    const { uid } = profile;\n\n    try {\n      await deleteGame(getAuthorizationHeader, uid, game.id);\n      onGameDeleted();\n    } catch (error) {\n      console.error('Unable to delete the game:', error);\n    }\n  };\n\n  return (\n    <Dialog\n      title={\n        <span>\n          {game.gameName}\n          {' - '}\n          <Trans>Dashboard</Trans>\n        </span>\n      }\n      open\n      noMargin\n      onRequestClose={onClose}\n      maxWidth=\"md\"\n      actions={[\n        <FlatButton\n          label={<Trans>Close</Trans>}\n          onClick={onClose}\n          key=\"close\"\n        />,\n      ]}\n      secondaryActions={[\n        <HelpButton key=\"help\" helpPagePath=\"/interface/games-dashboard\" />,\n      ]}\n    >\n      <Tabs value={currentTab} onChange={setCurrentTab}>\n        <Tab label={<Trans>Details</Trans>} value=\"details\" />\n        <Tab label={<Trans>Analytics</Trans>} value=\"analytics\" />\n        <Tab label={<Trans>Monetization</Trans>} value=\"monetization\" />\n      </Tabs>\n      <Line>\n        {currentTab === 'details' ? (\n          <ColumnStackLayout expand>\n            <Text>\n              <Trans>\n                Registered on{' '}\n                {format(game.createdAt * 1000 /* TODO */, 'yyyy-MM-dd')}.\n              </Trans>\n            </Text>\n            <SemiControlledTextField\n              fullWidth\n              disabled\n              value={game.gameName}\n              onChange={() => {}}\n              floatingLabelText={<Trans>Game name</Trans>}\n            />\n            <SemiControlledTextField\n              fullWidth\n              disabled\n              value={game.authorName}\n              onChange={() => {}}\n              floatingLabelText={<Trans>Author name</Trans>}\n            />\n            <Line noMargin justifyContent=\"space-between\">\n              <FlatButton\n                onClick={() => {\n                  const answer = Window.showConfirmDialog(\n                    \"Are you sure you want to unregister this game? You won't get access to analytics and metrics, unless you register it again.\"\n                  );\n\n                  if (!answer) return;\n\n                  unregisterGame();\n                }}\n                label={<Trans>Unregister this game</Trans>}\n              />\n              {areProjectAndGameDiffering(project, game) ? (\n                <RaisedButton\n                  primary\n                  onClick={() => {\n                    updateGameFromProject();\n                  }}\n                  label={\n                    <Trans>Update the game details from the project</Trans>\n                  }\n                />\n              ) : null}\n            </Line>\n          </ColumnStackLayout>\n        ) : null}\n        {currentTab === 'analytics' ? (\n          gameRollingMetricsError ? (\n            <PlaceholderError\n              onRetry={() => {\n                loadGameMetrics();\n              }}\n            >\n              <Trans>There was an issue getting the game analytics.</Trans>{' '}\n              <Trans>Verify your internet connection or try again later.</Trans>\n            </PlaceholderError>\n          ) : (\n            <ColumnStackLayout expand>\n              <Line noMargin>\n                <SelectField\n                  fullWidth\n                  floatingLabelText={<Trans>Day</Trans>}\n                  value={analyticsDate}\n                  onChange={(_, _index, newIsoDate) => {\n                    setAnalyticsDate(newIsoDate);\n                  }}\n                >\n                  {Array(5)\n                    .fill('')\n                    .map((_, index) => {\n                      const isoDate = formatISO(\n                        subDays(new Date(), index + 2),\n                        {\n                          representation: 'date',\n                        }\n                      );\n                      return (\n                        <SelectOption\n                          key={isoDate}\n                          value={isoDate}\n                          primaryText={isoDate}\n                        />\n                      );\n                    })\n                    .reverse()}\n                  <SelectOption\n                    value={yesterdayIsoDate}\n                    primaryText={t`Yesterday`}\n                  />\n                  <SelectOption\n                    value={formatISO(new Date(), { representation: 'date' })}\n                    primaryText={t`Today (so far, in real time)`}\n                  />\n                </SelectField>\n              </Line>\n              {!isGameMetricsLoading && !gameRollingMetrics ? (\n                <AlertMessage kind=\"warning\">\n                  <Trans>\n                    There were no players or stored metrics for this day. Be\n                    sure to publish your game and get players to try it to see\n                    the collected anonymous analytics.\n                  </Trans>\n                </AlertMessage>\n              ) : null}\n              <Line noMargin alignItems=\"center\">\n                <Text size=\"title\">\n                  <Trans>Main metrics</Trans>\n                </Text>\n                <Spacer />\n                {isGameMetricsLoading && <CircularProgress size={20} />}\n              </Line>\n              <Table>\n                <TableBody>\n                  <TableRow>\n                    <TableRowColumn>\n                      <Trans>Players count</Trans>\n                    </TableRowColumn>\n                    <TableRowColumn>\n                      {gameRollingMetrics && gameRollingMetrics.players\n                        ? gameRollingMetrics.players.d0Players\n                        : '-'}\n                    </TableRowColumn>\n                  </TableRow>\n                  <TableRow>\n                    <TableRowColumn>\n                      <Trans>Sessions count</Trans>\n                    </TableRowColumn>\n                    <TableRowColumn>\n                      {gameRollingMetrics && gameRollingMetrics.sessions\n                        ? gameRollingMetrics.sessions.d0Sessions\n                        : '-'}\n                    </TableRowColumn>\n                  </TableRow>\n                  <TableRow>\n                    <TableRowColumn>\n                      <Trans>New players count</Trans>\n                    </TableRowColumn>\n                    <TableRowColumn>\n                      {gameRollingMetrics && gameRollingMetrics.players\n                        ? gameRollingMetrics.players.d0NewPlayers\n                        : '-'}\n                    </TableRowColumn>\n                  </TableRow>\n                </TableBody>\n              </Table>\n              {gameRollingMetrics &&\n              (!gameRollingMetrics.retention || !gameRollingMetrics.players) ? (\n                <AlertMessage kind=\"info\">\n                  Upgrade your account with a subscription to unlock all the\n                  metrics for your game.\n                </AlertMessage>\n              ) : null}\n              <Line noMargin alignItems=\"center\">\n                <Text size=\"title\">\n                  <Trans>Retention of players</Trans>\n                </Text>\n                <Spacer />\n                {isGameMetricsLoading && <CircularProgress size={20} />}\n              </Line>\n              <Table>\n                <TableBody>\n                  {[1, 2, 3, 4, 5, 6, 7].map(dayIndex => (\n                    <TableRow key={dayIndex}>\n                      <TableRowColumn>\n                        <Trans>Day {dayIndex} retained players</Trans>\n                      </TableRowColumn>\n                      <TableRowColumn>\n                        {gameRollingMetrics &&\n                        gameRollingMetrics.retention &&\n                        gameRollingMetrics.retention[\n                          `d${dayIndex}RetainedPlayers`\n                        ] != null\n                          ? gameRollingMetrics.retention[\n                              `d${dayIndex}RetainedPlayers`\n                            ]\n                          : '-'}\n                      </TableRowColumn>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </ColumnStackLayout>\n          )\n        ) : null}\n        {currentTab === 'monetization' ? (\n          <ColumnStackLayout expand>\n            <Line noMargin justifyContent=\"center\">\n              <MonetizationOnIcon color=\"disabled\" style={styles.bigIcon} />\n            </Line>\n            <EmptyMessage>\n              Services to help monetization of your game will be added later in\n              this panel.\n            </EmptyMessage>\n          </ColumnStackLayout>\n        ) : null}\n      </Line>\n    </Dialog>\n  );\n};\n","import { I18n } from '@lingui/react';\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport React from 'react';\nimport { ListItem } from '../UI/List';\nimport TextField, {\n  noMarginTextFieldInListItemTopOffset,\n} from '../UI/TextField';\nimport ThemeConsumer from '../UI/Theme/ThemeConsumer';\nimport { shouldValidate } from '../UI/KeyboardShortcuts/InteractionKeys';\n\ntype Props = {|\n  group: gdObjectGroup,\n  style: Object,\n  onEdit: ?(gdObjectGroup) => void,\n  onEditName: () => void,\n  onDelete: () => void,\n  onRename: string => void,\n  editingName: boolean,\n  isGlobalGroup: boolean,\n  canSetAsGlobalGroup?: boolean,\n|};\n\nconst styles = {\n  groupName: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n  },\n  textField: {\n    top: noMarginTextFieldInListItemTopOffset,\n  },\n};\n\nexport default class GroupRow extends React.Component<Props, {||}> {\n  componentDidUpdate(prevProps) {\n    if (!prevProps.editingName && this.props.editingName) {\n      setTimeout(() => {\n        if (this.textField) this.textField.focus();\n      }, 100);\n    }\n  }\n\n  render() {\n    const { group, style, isGlobalGroup } = this.props;\n\n    const groupName = group.getName();\n    const label = this.props.editingName ? (\n      <TextField\n        id=\"rename-object-field\"\n        margin=\"none\"\n        ref={textField => (this.textField = textField)}\n        defaultValue={groupName}\n        onBlur={e => this.props.onRename(e.target.value)}\n        onKeyPress={event => {\n          if (shouldValidate(event)) {\n            this.textField.blur();\n          }\n        }}\n        fullWidth\n        style={styles.textField}\n      />\n    ) : (\n      <div\n        style={{\n          ...styles.groupName,\n          fontStyle: isGlobalGroup ? 'italic' : undefined,\n          fontWeight: isGlobalGroup ? 'bold' : 'normal',\n        }}\n      >\n        {groupName}\n      </div>\n    );\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <I18n>\n            {({ i18n }) => (\n              <ListItem\n                style={{\n                  borderBottom: `1px solid ${muiTheme.listItem.separatorColor}`,\n                  ...style,\n                }}\n                primaryText={label}\n                displayMenuButton\n                buildMenuTemplate={(i18n: I18nType) => [\n                  {\n                    label: i18n._(t`Edit group`),\n                    click: () => this.props.onEdit(group),\n                  },\n                  {\n                    label: i18n._(t`Set as Global group`),\n                    enabled: !this.props.isGlobalGroup,\n                    click: () => this.props.onSetAsGlobalGroup(),\n                    visible: this.props.canSetAsGlobalGroup !== false,\n                  },\n                  {\n                    label: i18n._(t`Rename`),\n                    enabled: !!this.props.onEdit,\n                    click: () => this.props.onEditName(),\n                  },\n                  {\n                    label: i18n._(t`Delete`),\n                    enabled: !!this.props.onEdit,\n                    click: () => this.props.onDelete(),\n                  },\n                ]}\n                onClick={() => {\n                  // It's essential to discard clicks when editing the name,\n                  // to avoid weird opening of an editor when clicking on the\n                  // text field.\n                  if (!this.props.editingName) this.props.onEdit(group);\n                }}\n              />\n            )}\n          </I18n>\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport { AutoSizer, List } from 'react-virtualized';\nimport Background from '../UI/Background';\nimport SearchBar from '../UI/SearchBar';\nimport GroupRow from './GroupRow';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport { AddListItem } from '../UI/ListCommonItem';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport {\n  filterGroupsList,\n  enumerateGroups,\n} from '../ObjectsList/EnumerateObjects';\nimport {\n  type GroupWithContextList,\n  type GroupWithContext,\n} from '../ObjectsList/EnumerateObjects';\nimport { listItemWithoutIconHeight } from '../UI/List';\nimport Window from '../Utils/Window';\nimport { type UnsavedChanges } from '../MainFrame/UnsavedChangesContext';\n\n// TODO: This component should be updated to be implemented using SortableVirtualizedItemList,\n// so that drag'n'drop is identical to other lists (and to benefit from better typing + future improvements\n// in SortableVirtualizedItemList).\n\nconst styles = {\n  listContainer: {\n    flex: 1,\n  },\n};\n\nconst SortableGroupRow = SortableElement(props => {\n  const { style, ...otherProps } = props;\n  return (\n    <div style={style}>\n      <GroupRow {...otherProps} />\n    </div>\n  );\n});\n\nconst SortableAddGroupRow = SortableElement(props => {\n  const { style, ...otherProps } = props;\n  return (\n    <div style={style}>\n      <AddListItem {...otherProps} />\n    </div>\n  );\n});\n\nclass GroupsList extends Component<*, *> {\n  list: ?List;\n\n  forceUpdateGrid() {\n    if (this.list) this.list.forceUpdateGrid();\n  }\n\n  render() {\n    const { height, width, fullList } = this.props;\n\n    return (\n      <List\n        ref={list => (this.list = list)}\n        height={height}\n        rowCount={fullList.length}\n        rowHeight={listItemWithoutIconHeight}\n        rowRenderer={({ index, key, style }) => {\n          const groupWithContext = fullList[index];\n          if (groupWithContext.key === 'add-groups-row') {\n            return (\n              <SortableAddGroupRow\n                index={fullList.length}\n                key={key}\n                style={style}\n                disabled\n                onClick={this.props.onAddGroup}\n                primaryText={<Trans>Click to add a group</Trans>}\n              />\n            );\n          }\n\n          const nameBeingEdited =\n            this.props.renamedGroupWithScope &&\n            this.props.renamedGroupWithScope.group === groupWithContext.group &&\n            this.props.renamedGroupWithScope.global === groupWithContext.global;\n\n          return (\n            <SortableGroupRow\n              index={index}\n              key={groupWithContext.group.ptr}\n              group={groupWithContext.group}\n              style={style}\n              onEdit={\n                this.props.onEditGroup\n                  ? () => this.props.onEditGroup(groupWithContext.group)\n                  : undefined\n              }\n              onEditName={() => this.props.onEditName(groupWithContext)}\n              onDelete={() => this.props.onDelete(groupWithContext)}\n              onRename={newName =>\n                this.props.onRename(groupWithContext, newName)\n              }\n              editingName={nameBeingEdited}\n              isGlobalGroup={groupWithContext.global}\n              canSetAsGlobalGroup={this.props.canSetAsGlobalGroup}\n              onSetAsGlobalGroup={\n                groupWithContext.global\n                  ? undefined\n                  : () => this.props.onSetAsGlobalGroup(groupWithContext)\n              }\n            />\n          );\n        }}\n        width={width}\n      />\n    );\n  }\n}\n\nconst SortableGroupsList = SortableContainer(GroupsList, { withRef: true });\n\ntype State = {|\n  renamedGroupWithScope: ?GroupWithContext,\n  searchText: string,\n|};\n\ntype Props = {|\n  globalObjectGroups: gdObjectGroupsContainer,\n  objectGroups: gdObjectGroupsContainer,\n  onDeleteGroup: (groupWithContext: GroupWithContext, cb: Function) => void,\n  onEditGroup: gdObjectGroup => void,\n  canRenameGroup: (newName: string) => boolean,\n  onRenameGroup: (\n    groupWithContext: GroupWithContext,\n    newName: string,\n    cb: Function\n  ) => void,\n  onGroupAdded?: () => void,\n  onGroupRemoved?: () => void,\n  onGroupRenamed?: () => void,\n  canSetAsGlobalGroup?: boolean,\n  unsavedChanges?: ?UnsavedChanges,\n|};\n\nexport default class GroupsListContainer extends React.Component<Props, State> {\n  static defaultProps = {\n    onDeleteGroup: (groupWithContext: GroupWithContext, cb: Function) =>\n      cb(true),\n    onRenameGroup: (\n      groupWithContext: GroupWithContext,\n      newName: string,\n      cb: Function\n    ) => cb(true),\n  };\n\n  sortableList: any;\n  objectGroupsList: GroupWithContextList = [];\n  globalObjectGroupsList: GroupWithContextList = [];\n  state: State = {\n    renamedGroupWithScope: null,\n    searchText: '',\n  };\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    // The component is costly to render, so avoid any re-rendering as much\n    // as possible.\n    // We make the assumption that no changes to groups list is made outside\n    // from the component.\n    // If a change is made, the component won't notice it: you have to manually\n    // call forceUpdate.\n\n    if (\n      this.state.renamedGroupWithScope !== nextState.renamedGroupWithScope ||\n      this.state.searchText !== nextState.searchText\n    )\n      return true;\n\n    if (\n      this.props.globalObjectGroups !== nextProps.globalObjectGroups ||\n      this.props.objectGroups !== nextProps.objectGroups\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  addGroup = () => {\n    const { globalObjectGroups, objectGroups } = this.props;\n\n    const name = newNameGenerator(\n      'Group',\n      name => objectGroups.has(name) || globalObjectGroups.has(name)\n    );\n\n    objectGroups.insertNew(name, objectGroups.count());\n    this._onObjectGroupModified();\n\n    if (this.props.onGroupAdded) {\n      this.props.onGroupAdded();\n    }\n  };\n\n  _onDelete = (groupWithContext: GroupWithContext) => {\n    const { group, global } = groupWithContext;\n    const { globalObjectGroups, objectGroups } = this.props;\n\n    const answer = Window.showConfirmDialog(\n      \"Are you sure you want to remove this group? This can't be undone.\"\n    );\n    if (!answer) return;\n\n    this.props.onDeleteGroup(groupWithContext, doRemove => {\n      if (!doRemove) return;\n\n      if (global) {\n        globalObjectGroups.remove(group.getName());\n      } else {\n        objectGroups.remove(group.getName());\n      }\n\n      this._onObjectGroupModified();\n      if (this.props.onGroupRemoved) {\n        this.props.onGroupRemoved();\n      }\n    });\n  };\n\n  _onEditName = (groupWithContext: GroupWithContext) => {\n    this.setState(\n      {\n        renamedGroupWithScope: groupWithContext,\n      },\n      () => this.sortableList.getWrappedInstance().forceUpdateGrid()\n    );\n  };\n\n  _onRename = (groupWithContext: GroupWithContext, newName: string) => {\n    const { group } = groupWithContext;\n    const { globalObjectGroups, objectGroups } = this.props;\n\n    this.setState({\n      renamedGroupWithScope: null,\n    });\n\n    if (group.getName() === newName) return;\n\n    if (objectGroups.has(newName) || globalObjectGroups.has(newName)) {\n      showWarningBox('Another object with this name already exists', {\n        delayToNextTick: true,\n      });\n      return;\n    }\n\n    if (this.props.canRenameGroup(newName)) {\n      this.props.onRenameGroup(groupWithContext, newName, doRename => {\n        if (!doRename) return;\n\n        group.setName(newName);\n\n        this._onObjectGroupModified();\n        if (this.props.onGroupRenamed) {\n          this.props.onGroupRenamed();\n        }\n      });\n    }\n  };\n\n  _onMove = (oldIndex: number, newIndex: number) => {\n    const { globalObjectGroups, objectGroups } = this.props;\n\n    const isInGroupsList = oldIndex < this.objectGroupsList.length;\n    if (isInGroupsList) {\n      objectGroups.move(\n        oldIndex,\n        Math.min(newIndex, this.objectGroupsList.length - 1)\n      );\n    } else {\n      const globalObjectGroupsOldIndex =\n        oldIndex - this.objectGroupsList.length;\n      const globalObjectGroupsNewIndex =\n        newIndex - this.objectGroupsList.length;\n\n      globalObjectGroups.move(\n        globalObjectGroupsOldIndex,\n        Math.min(\n          globalObjectGroupsNewIndex,\n          this.globalObjectGroupsList.length - 1\n        )\n      );\n    }\n\n    this._onObjectGroupModified();\n    this.sortableList.getWrappedInstance().forceUpdateGrid();\n  };\n\n  _setAsGlobalGroup = (groupWithContext: GroupWithContext) => {\n    const { group } = groupWithContext;\n    const { globalObjectGroups, objectGroups } = this.props;\n\n    const groupName = group.getName();\n\n    if (globalObjectGroups.has(groupName)) {\n      showWarningBox(\n        'A global object with this name already exists. Please change the object name before setting it as a global object',\n        { delayToNextTick: true }\n      );\n      return;\n    }\n\n    const answer = Window.showConfirmDialog(\n      \"This group will be loaded and available in all the scenes. This is only recommended for groups that you reuse a lot and can't be undone. Make this group global?\"\n    );\n    if (!answer) return;\n\n    globalObjectGroups.insert(group, globalObjectGroups.count());\n    objectGroups.remove(groupName);\n    this._onObjectGroupModified();\n  };\n\n  _onObjectGroupModified = () => {\n    if (this.props.unsavedChanges)\n      this.props.unsavedChanges.triggerUnsavedChanges();\n    this.forceUpdate();\n  };\n\n  render() {\n    const { globalObjectGroups, objectGroups } = this.props;\n    const { searchText } = this.state;\n\n    const objectGroupsList: GroupWithContextList = enumerateGroups(\n      objectGroups\n    ).map(group => ({ group, global: false }));\n    const globalObjectGroupsList: GroupWithContextList = enumerateGroups(\n      globalObjectGroups\n    ).map(group => ({ group, global: true }));\n    this.objectGroupsList = filterGroupsList(objectGroupsList, searchText);\n    this.globalObjectGroupsList = filterGroupsList(\n      globalObjectGroupsList,\n      searchText\n    );\n    const allGroupsList = filterGroupsList(\n      [...objectGroupsList, ...globalObjectGroupsList],\n      searchText\n    );\n    const fullList = allGroupsList.concat({\n      key: 'add-groups-row',\n      object: null,\n    });\n\n    // Force List component to be mounted again if globalObjectGroups or objectGroups\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const listKey = objectGroups.ptr + ';' + globalObjectGroups.ptr;\n\n    return (\n      <Background>\n        <div style={styles.listContainer}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <SortableGroupsList\n                key={listKey}\n                ref={sortableList => (this.sortableList = sortableList)}\n                fullList={fullList}\n                width={width}\n                height={height}\n                renamedGroupWithScope={this.state.renamedGroupWithScope}\n                onEditGroup={this.props.onEditGroup}\n                onAddGroup={this.addGroup}\n                onEditName={this._onEditName}\n                onDelete={this._onDelete}\n                onRename={this._onRename}\n                canSetAsGlobalGroup={this.props.canSetAsGlobalGroup}\n                onSetAsGlobalGroup={this._setAsGlobalGroup}\n                onSortEnd={({ oldIndex, newIndex }) =>\n                  this._onMove(oldIndex, newIndex)\n                }\n                helperClass=\"sortable-helper\"\n                distance={20}\n              />\n            )}\n          </AutoSizer>\n        </div>\n        <SearchBar\n          value={searchText}\n          onRequestSearch={() => {}}\n          onChange={text =>\n            this.setState({\n              searchText: text,\n            })\n          }\n        />\n      </Background>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ThemeConsumer from './Theme/ThemeConsumer';\nimport BackgroundText from './BackgroundText';\n// No i18n in this file\n\nconst styles = {\n  containerStyle: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    padding: 10,\n  },\n};\n\ntype Props = {|\n  style?: Object,\n  messageStyle?: Object,\n  children: ?React.Node,\n|};\n\nconst EmptyMessage = (props: Props) => (\n  <ThemeConsumer>\n    {muiTheme => (\n      <div style={{ ...styles.containerStyle, ...props.style }}>\n        <BackgroundText style={props.messageStyle}>\n          {props.children}\n        </BackgroundText>\n      </div>\n    )}\n  </ThemeConsumer>\n);\n\nexport default EmptyMessage;\n","// @flow\nimport * as React from 'react';\nimport { I18n } from '@lingui/react';\nimport MUITextField from '@material-ui/core/TextField';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport { MarkdownText } from './MarkdownText';\n\ntype ValueProps =\n  // Support \"text\" and \"password\" type:\n  | {|\n      type?: 'text' | 'password',\n      value: string,\n      onChange?: (\n        event: {| target: {| value: string |} |},\n        text: string\n      ) => void,\n    |}\n  // Support \"number\" type (note that onChange returns a string):\n  | {|\n      type: 'number',\n      value: number | string,\n      onChange?: (event: {||}, value: string) => void,\n    |}\n  // Support an \"uncontrolled\" field:\n  | {| defaultValue: string |}\n  // Support an empty field with just a hint text:\n  | {| hintText?: React.Node |};\n\n// We support a subset of the props supported by Material-UI v0.x TextField\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  // Value and change handling:\n  ...ValueProps,\n\n  // DOM events:\n  onFocus?: ({\n    currentTarget: {\n      value: string,\n    },\n    preventDefault: () => void,\n  }) => void,\n  onBlur?: ({\n    currentTarget: {\n      value: string,\n    },\n  }) => void,\n\n  // Advanced DOM events, for exceptional usage:\n  onClick?: () => void,\n  onKeyPress?: (event: SyntheticKeyboardEvent<>) => void,\n  onKeyUp?: (event: SyntheticKeyboardEvent<>) => void,\n  onKeyDown?: (event: SyntheticKeyboardEvent<>) => void,\n\n  // Error handling:\n  errorText?: React.Node,\n\n  // Labels:\n  disabled?: boolean,\n  floatingLabelFixed?: boolean,\n  floatingLabelText?: React.Node,\n  name?: string,\n  hintText?: MessageDescriptor,\n  helperMarkdownText?: ?string,\n  id?: string,\n\n  // Keyboard focus:\n  autoFocus?: boolean,\n\n  // Number text field:\n  precision?: number,\n  max?: number,\n  min?: number,\n  step?: number,\n\n  // Support for multiline:\n  multiline?: boolean,\n  rows?: number,\n  rowsMax?: number,\n\n  // Styling:\n  margin?: 'none' | 'dense',\n  fullWidth?: boolean,\n  style?: {|\n    fontSize?: 14 | 18,\n    fontStyle?: 'normal' | 'italic',\n    width?: number | '100%',\n    flex?: 1,\n    top?: number,\n    padding?: number,\n  |},\n  inputStyle?: {|\n    // Allow to customize color (replace by color prop?) // TO VERIFY\n    color?: string,\n    WebkitTextFillColor?: string,\n\n    // Allow to display monospaced font\n    fontFamily?: '\"Lucida Console\", Monaco, monospace',\n    lineHeight?: 1.4 | 1.5,\n    padding?: 0,\n  |},\n  underlineFocusStyle?: {| borderColor: string |}, // TODO\n  underlineShow?: boolean,\n|};\n\n/**\n * Compute the `variant`, `margin` and `hiddenLabel` props for a material-ui `TextField`\n * to give it the proper style according to its usage.\n *\n * 1. A traditional `TextField` is by default \"filled\"\n *    (see material-ui component doc: https://material-ui.com/components/text-fields/\n *     and [Material Design specification](https://material.io/components/text-fields/#specs)).\n *\n *   The filled background gives them more emphasize compared compared to a single underline\n *   (as done in previous GDevelop versions). They have a label indicating what they refer to.\n *\n * 2. Sometimes, a floating label would not provide more information and is considered to be\n *   obvious (thanks to the existing value, dialog title or button label).\n *\n *   In this case, not specifying a label is fine (`floatingLabelText` is undefined or empty).\n *   This will lead to a filled text field without the extra space for the label.\n *\n *   A `placeholder` should still be passed so that the user can know what the field is about\n *     when not filled.\n *   Example: this is particularly adapted to file/folder pickers (see `LocalFilePicker`,\n *     `LocalFolderPicker`) or a `SearchPanel`.\n *\n * 3. `TextField` in `MiniToolbar` are usually less changed by the user than other text fields\n *   (for example, they are the animation name or the object name in a Sprite editor.\n *   These are not changed a lot compared to behaviours or object properties).\n *\n *   They also are already in a MiniToolbar that has an \"emphasis\" with the slightly\n *   different background color of `MiniToolbar`. Finally, `MiniToolbar` is also small in height.\n *\n *   In these cases, use `none` for `margin`.\n *   This will generate a text field without filled background (just an underline).\n *\n * 4. `TextField` can be used with `margin=\"none\"` and also the underline hidden,\n *   in the very special case of an embedded text field in another form control (like `SearchBar`).\n */\nexport const computeTextFieldStyleProps = (props: {\n  margin?: 'none' | 'dense',\n  floatingLabelText?: React.Node,\n}) => {\n  return {\n    // Use \"filled\" variant by default, unless `margin` is \"none\" (see 1. and 2.)\n    variant: props.margin === 'none' ? 'standard' : 'filled',\n    // Use \"dense\" fields by default, unless `margin` is \"none\" (see 3.)\n    margin: props.margin === 'none' ? 'none' : 'dense',\n    // For variant \"standard\", if there is no label, no extra space is taken. For variant \"filled\",\n    // even when no label is passed, there is a space for it. Remove this space if no\n    // label is provided. (see 2.)\n    hiddenLabel: props.margin !== 'none' && !props.floatingLabelText,\n  };\n};\n\n/**\n * A text field based on Material-UI text field.\n */\nexport default class TextField extends React.Component<Props, {||}> {\n  _input = React.createRef<HTMLInputElement>();\n\n  focus() {\n    if (this._input.current) {\n      this._input.current.focus();\n    }\n  }\n\n  blur() {\n    if (this._input.current) {\n      this._input.current.blur();\n    }\n  }\n\n  getInputNode(): ?HTMLInputElement {\n    if (this._input.current) {\n      return this._input.current;\n    }\n\n    return null;\n  }\n\n  render() {\n    const { props } = this;\n    const onChange = props.onChange || undefined;\n\n    const helperText = props.helperMarkdownText ? (\n      <MarkdownText source={props.helperMarkdownText} />\n    ) : null;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <MUITextField\n            // Value and change handling:\n            type={props.type !== undefined ? props.type : undefined}\n            value={props.value !== undefined ? props.value : undefined}\n            defaultValue={\n              props.defaultValue !== undefined ? props.defaultValue : undefined\n            }\n            onChange={\n              onChange\n                ? event => onChange(event, event.target.value)\n                : undefined\n            }\n            // Error handling:\n            error={!!props.errorText}\n            helperText={props.errorText || helperText}\n            disabled={props.disabled}\n            InputLabelProps={{\n              shrink: props.floatingLabelFixed ? true : undefined,\n            }}\n            label={props.floatingLabelText}\n            name={props.name}\n            placeholder={props.hintText ? i18n._(props.hintText) : undefined}\n            id={props.id}\n            // Keyboard focus:\n            autoFocus={props.autoFocus}\n            // Multiline:\n            multiline={props.multiline}\n            rows={props.rows}\n            rowsMax={props.rowsMax}\n            // Styling:\n            {...computeTextFieldStyleProps(props)}\n            fullWidth={props.fullWidth}\n            InputProps={{\n              disableUnderline:\n                props.underlineShow === undefined\n                  ? false\n                  : !props.underlineShow,\n              style: {\n                fontSize: props.style ? props.style.fontSize : undefined,\n                fontStyle: props.style ? props.style.fontStyle : undefined,\n                ...props.inputStyle,\n              },\n              inputProps: {\n                onKeyPress: props.onKeyPress,\n                onKeyUp: props.onKeyUp,\n                onKeyDown: props.onKeyDown,\n                onClick: props.onClick,\n                // Number field props:\n                max: props.max,\n                min: props.min,\n                step: props.step,\n              },\n            }}\n            style={\n              props.style\n                ? {\n                    width: props.style.width || undefined,\n                    flex: props.style.flex || undefined,\n                    top: props.style.top || undefined,\n                  }\n                : undefined\n            }\n            onFocus={props.onFocus}\n            onBlur={props.onBlur}\n            inputRef={this._input}\n            spellCheck=\"false\"\n          />\n        )}\n      </I18n>\n    );\n  }\n}\n\n// The \"top\" offset to add to the position of the TextField when\n// it's used inside a ListItem \"primaryText\"\nexport const noMarginTextFieldInListItemTopOffset = 0;\n"],"sourceRoot":""}