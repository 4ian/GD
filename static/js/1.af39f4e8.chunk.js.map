{"version":3,"sources":["MainFrame/AboutDialog.js","VariablesList/VariableRow.js","Utils/SelectionHandler.js","VariablesList/ClipboardKind.js","PlatformSpecificAssetsEditor/PlatformSpecificAssetsDialog.js","PlatformSpecificAssetsEditor/ImageResizer.js","UI/LoaderModal.js","UI/CloseConfirmDialog.js","UI/ClosableTabs.js","MainFrame/EditorTabsHandler.js","EventsSheet/EventsTree/index.js","EventsSheet/EventsTree/Renderers/StandardEvent.js","EventsSheet/EventsTree/Instruction.js","EventsSheet/ParameterFields/RelationalOperatorField.js","EventsSheet/ParameterFields/OperatorField.js","EventsSheet/ParameterFields/MouseField.js","EventsSheet/ParameterFields/KeyField.js","ObjectsRendering/Renderers/RenderedUnknownInstance.js","ObjectsRendering/Renderers/RenderedSpriteInstance.js","ObjectsRendering/Renderers/RenderedTiledSpriteInstance.js","ObjectsRendering/Renderers/RenderedPanelSpriteInstance.js","ObjectsRendering/Renderers/RenderedTextInstance.js","ObjectsRendering/Renderers/RenderedShapePainterInstance.js","ObjectsRendering/Renderers/RenderedTextEntryInstance.js","ObjectsRendering/Renderers/RenderedParticleEmitterInstance.js","ObjectsRendering/Renderers/RenderedSkeletonInstance.js","Utils/FontFaceLoader.js","EventsSheet/ParameterFields/YesNoField.js","EventsSheet/ParameterFields/TrueFalseField.js","EventsSheet/ParameterFields/ExpressionField.js","EventsSheet/InstructionEditor/InstructionOrExpressionSelector/ExpressionSelector.js","EventsSheet/InstructionEditor/InstructionOrExpressionSelector/EnumerateExpressions.js","EventsSheet/ParameterFields/GenericExpressionField/FormatExpressionCall.js","EventsSheet/ParameterFields/GenericExpressionField/BackgroundHighlighting.js","EventsSheet/ParameterFields/StringField.js","EventsSheet/ParameterFields/StringWithSelectorField.js","EventsSheet/ParameterFields/BehaviorField.js","EventsSheet/ParameterFields/SceneVariableField.js","EventsSheet/ParameterFields/GlobalVariableField.js","EventsSheet/ParameterFields/ObjectVariableField.js","EventsSheet/ParameterFields/LayerField.js","EventsSheet/ParameterFields/AudioResourceField.js","EventsSheet/ParameterFields/VideoResourceField.js","EventsSheet/ParameterFields/JsonResourceField.js","EventsSheet/ParameterFields/ColorExpressionField.js","EventsSheet/ParameterFields/ForceMultiplierField.js","EventsSheet/ParameterFields/SceneNameField.js","EventsSheet/EventsTree/InvalidParameterValue.js","EventsSheet/EventsTree/Renderers/GroupEvent.js","EventsSheet/EventsTree/Renderers/CommentEvent.js","EventsSheet/EventsTree/Renderers/ForEachEvent.js","EventsSheet/EventsTree/Renderers/RepeatEvent.js","EventsSheet/EventsTree/Renderers/WhileEvent.js","EventsSheet/EventsTree/Renderers/LinkEvent.js","EventsSheet/ParameterFields/ExternalEventsField.js","EventsSheet/EventsTree/Renderers/JsCodeEvent.js","EventsSheet/EventsTree/EventHeightsCache.js","EventsSheet/InstructionEditor/NewInstructionEditorDialog.js","Utils/CaseSensitiveSlug.js","UI/Reponsive/SelectColumns.js","UI/Reponsive/ResponsiveWidthMeasurer.js","EventsSheet/InstructionEditor/EventTextDialog.js","EventsSheet/Toolbar.js","UI/KeyboardShortcuts/index.js","EventsSheet/InlineParameterEditor.js","EventsSheet/EmptyEventsPlaceholder.js","EventsSheet/OnceInstructionSanitizer.js","EventsSheet/EventsContextAnalyzerDialog.js","EventsSheet/SearchPanel.js","EventsSheet/EventsSearcher.js","EventsSheet/ContainsSubInstruction.js","EventsSheet/EnumerateEventsMetadata.js","EventsSheet/EventsFunctionExtractor/EventsFunctionExtractorDialog.js","Utils/GetObjectGroupByName.js","BehaviorTypeSelector/index.js","EventsFunctionsExtensionEditor/index.js","EventsFunctionsExtensionEditor/EventsFunctionConfigurationEditor/index.js","ObjectGroupsList/ObjectGroupsListWithObjectGroupEditor.js","ObjectGroupEditor/index.js","EventsFunctionsExtensionEditor/OptionsEditorDialog.js","EventsBasedBehaviorEditor/EventsBasedBehaviorEditorDialog.js","EventsBasedBehaviorEditor/index.js","EventsBasedBehaviorEditor/EventsBasedBehaviorPropertiesEditor.js","UI/EditorMosaic/EditorNavigator.js","EventsFunctionsExtensionEditor/ChooseEventsFunctionsExtensionEditor.js","InstancesEditor/InstancesRenderer/LayerRenderer.js","InstancesEditor/SelectionRectangle.js","InstancesEditor/InstancesAdder.js","InstancesEditor/InstancePropertiesEditor/index.js","InstancesEditor/InstancesList/index.js","LayersList/LayerRemoveDialog.js","ObjectEditor/ObjectEditorDialog.js","ObjectEditor/Editors/TextEditor.js","ObjectEditor/Editors/TiledSpriteEditor.js","ObjectEditor/Editors/PanelSpriteEditor.js","ObjectEditor/Editors/SpriteEditor/index.js","ObjectEditor/Editors/SpriteEditor/SpritesList.js","ObjectEditor/Editors/SpriteEditor/PointsEditor/index.js","ObjectEditor/Editors/SpriteEditor/PointsEditor/PointsList.js","ObjectEditor/Editors/SpriteEditor/PointsEditor/PointRow.js","ObjectEditor/Editors/SpriteEditor/PointsEditor/AddPointRow.js","ObjectEditor/Editors/SpriteEditor/PointsEditor/PointsPreview.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/index.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/PolygonsList.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/VerticeRow.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/PolygonRow.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/AddVerticeRow.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/AddPolygonRow.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/CollisionMasksPreview.js","ObjectEditor/Editors/EmptyEditor.js","ObjectEditor/Editors/ShapePainterEditor.js","ObjectEditor/Editors/ParticleEmitterEditor.js","ObjectEditor/Editors/ObjectPropertiesEditor.js","BehaviorsEditor/index.js","UI/HelpIcon/index.js","BehaviorsEditor/NewBehaviorDialog.js","BehaviorsEditor/BehaviorsHelpPagePaths.js","SceneEditor/SetupGridDialog.js","SceneEditor/ScenePropertiesDialog.js","SceneEditor/Toolbar.js","UI/FullSizeMeasurer.js","InstancesEditor/ScrollbarContainer.js","UI/EditorMosaic/TagsButton.js","ResourcesList/index.js","ResourcesList/EnumerateResources.js","UI/ErrorBoundary.js","MainFrame/Preferences/LanguageDialog.js","locales/LocalesMetadata.js","ProjectsStorage/OpenFromStorageProviderDialog.js","ProjectsStorage/SaveToStorageProviderDialog.js","ProjectsStorage/OpenConfirmDialog.js","ProjectsStorage/ProjectContentChecker.js","ProjectCreation/ExamplesSearchbar.js","Utils/i18n/GDI18nProvider.js","locales lazy /^/.//.*//messages$/ groupOptions: {} namespace object","UI/Grid.js","UI/FlatButton.js","UI/Text.js","UI/RaisedButton.js","UI/Dialog/index.js","Utils/MapFor.js","UI/EmptyMessage.js","UI/TextField.js","UI/Theme/ThemeConsumer.js","UI/KeyboardShortcuts/DeprecatedKeyboardShortcuts.js","InstancesEditor/InstancesRenderer/index.js","Utils/TransformRect.js","InstancesEditor/SelectedInstances.js","InstancesEditor/HighlightedInstance.js","InstancesEditor/InstancesResizer.js","InstancesEditor/InstancesRotator.js","InstancesEditor/InstancesMover.js","InstancesEditor/Grid.js","InstancesEditor/WindowBorder.js","InstancesEditor/WindowMask.js","InstancesEditor/BackgroundColor.js","InstancesEditor/FpsLimiter.js","Utils/PIXITicker.js","InstancesEditor/StatusBar.js","InstancesEditor/CanvasCursor.js","InstancesEditor/index.js","LayersList/styles.js","EffectsList/EnumerateEffects.js","EffectsList/index.js","Utils/UseForceUpdate.js","EffectsList/EffectsListDialog.js","LayersList/BackgroundColorRow.js","LayersList/index.js","LayersList/LayerRow.js","UI/CustomSvgIcons/Behaviors/Create.js","UI/CustomSvgIcons/Behaviors/Step.js","UI/CustomSvgIcons/Behaviors/Destroy.js","UI/CustomSvgIcons/Behaviors/Function.js","UI/CustomSvgIcons/Behaviors/Activate.js","UI/CustomSvgIcons/Behaviors/Deactivate.js","EventsFunctionsExtensionEditor/BehaviorMethodSelectorDialog.js","UI/GravatarUrl.js","Profile/ProfileDetails.js","Profile/UsagesDetails.js","Profile/SubscriptionDetails.js","Profile/ProfileDialog.js","BehaviorsEditor/Editors/BehaviorPropertiesEditor.js","BehaviorsEditor/Editors/Physics2Editor/ShapePreview.js","BehaviorsEditor/Editors/Physics2Editor/PolygonEditor.js","BehaviorsEditor/Editors/Physics2Editor/index.js","BehaviorsEditor/BehaviorsEditorService.js","ProjectManager/ProjectPropertiesDialog.js","ExtensionsSearch/ExtensionsSearchDialog.js","UI/CustomSvgIcons/VariableTree.js","ProjectManager/index.js","EventsSheet/InstructionEditor/InstructionOrExpressionSelector/InstructionSelector.js","EventsSheet/InstructionEditor/index.js","EventsSheet/InstructionEditor/InstructionEditorDialog.js","UI/CustomSvgIcons/Copy.js","UI/CustomSvgIcons/Paste.js","VariablesList/EditVariableRow.js","EventsSheet/InstructionEditor/InstructionOrObjectSelector.js","EventsSheet/InstructionEditor/SelectorListItems/SelectorObjectListItem.js","EventsSheet/InstructionEditor/SelectorListItems/SelectorGroupObjectsListItem.js","MainFrame/Editors/StartPage/GDevelopLogo.js","MainFrame/Editors/StartPage/ScrollBackground.js","MainFrame/Editors/StartPage/index.js","ObjectEditor/Editors/SpriteEditor/AnimationPreview/index.js","ObjectEditor/Editors/SpriteEditor/DirectionTools.js","EventsSheet/EventsTree/Renderers/UnknownEvent.js","EventsSheet/EventsTree/EventsRenderingService.js","UI/List.js","HelpFinder/DocSearchArea.js","HelpFinder/index.js","EventsBasedBehaviorsList/index.js","EventsBasedBehaviorsList/EnumerateEventsBasedBehaviors.js","EventsFunctionsList/index.js","EventsFunctionsList/EnumerateEventsFunctions.js","CodeEditor/LocalCodeEditorAutocompletions.js","CodeEditor/index.js","EventsSheet/ParameterFields/GenericExpressionField/ExpressionParametersEditor.js","EventsSheet/ParameterFields/GenericExpressionField/ExpressionParametersEditorDialog.js","Profile/SubscriptionPendingDialog.js","Profile/SubscriptionDialog.js","MainFrame/Changelog/ChangelogDialog.js","MainFrame/Changelog/ChangelogDialogContainer.js","UI/IconButton.js","UI/AcceleratorString.js","UI/SemiControlledTextField.js","ResourcesLoader/index.js","Utils/Serializer.js","UI/HelpButton/index.js","UI/SelectField.js","UI/SelectOption.js","EventsSheet/EventsTree/ClassNames.js","UI/Background.js","UI/Layout.js","MainFrame/Preferences/PreferencesContext.js","UI/Table.js","Utils/NewNameGenerator.js","UI/AlertMessage.js","UI/ListIcon.js","UI/PlaceholderLoader.js","UI/Checkbox.js","UI/SearchBar.js","GameEngineFinder/LocalGDJSFinder.js","UI/Menu/ElementWithMenu.js","UI/SemiControlledAutoComplete.js","UI/MiniToolbar.js","UI/Reponsive/ResponsiveWindowMeasurer.js","UI/Tabs.js","UI/BackgroundText.js","Utils/GDevelopServices/Build.js","ObjectsRendering/ObjectsRenderingService.js","ObjectsRendering/Renderers/RenderedInstance.js","UI/Subheader.js","MainFrame/Editors/BaseEditor.js","UI/MarkdownText.js","Utils/Clipboard.js","Utils/HelpLink.js","ResourcesList/ResourceUtils.js","ObjectsList/EnumerateObjects.js","UI/PlaceholderMessage.js","UI/RaisedButtonWithMenu.js","ResourcesList/ResourceSelector.js","VariablesList/VariablesEditorDialog.js","Utils/TagsHelper.js","Utils/ColorTransformer.js","EventsSheet/InstructionEditor/SelectorListItems/Keys.js","EventsFunctionsExtensionsLoader/index.js","PropertiesEditor/index.js","UI/Toolbar.js","UI/ToolbarIcon.js","UI/ToolbarSeparator.js","UI/Toggle.js","Profile/UserProfileContext.js","UI/DismissableAlertMessage.js","UI/LeftLoader.js","EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext.js","EventsSheet/EventsTree/InstructionsList.js","EventsSheet/InstructionEditor/InstructionOrExpressionSelector/CreateTree.js","EventsSheet/InstructionEditor/InstructionOrExpressionSelector/EnumerateInstructions.js","UI/ColorField/ColorPicker.js","EventsSheet/InlinePopover.js","UI/Reponsive/ScreenTypeMeasurer.js","PropertiesEditor/PropertiesMapToSchema.js","ResourcesList/ResourcePreview/ImagePreview.js","ObjectEditor/Editors/SpriteEditor/Utils/SpriteObjectHelper.js","ObjectEditor/Editors/SpriteEditor/CollisionMasksEditor/styles.js","UI/Menu/ElectronMenuImplementation.js","UI/Menu/MaterialUIMenuImplementation.js","UI/Menu/ContextMenu.js","ProjectManager/EnumerateProjectItems.js","EventsSheet/SelectionHandler.js","EventsSheet/ParameterFields/GenericExpressionField/index.js","EventsSheet/EventsTree/ConditionsActionsColumns.js","Utils/GetObjectByName.js","Hints/index.js","EventsFunctionsExtensionsLoader/MetadataDeclarationHelpers.js","UI/InlineCheckbox.js","UI/EditorMosaic/index.js","Utils/BlueprintJsPlaceholder/index.js","UI/ColorField/index.js","ObjectEditor/ObjectsEditorService.js","UI/SortableVirtualizedItemList/ItemRow.js","UI/SortableVirtualizedItemList/DropIndicator.js","UI/SortableVirtualizedItemList/index.js","ResourcesList/ResourceThumbnail/index.js","ResourcesList/ResourceSelectorWithThumbnail.js","MainFrame/index.js","UI/Theme/ThemeContext.js","UI/ListCommonItem.js","Utils/SerializableObjectEditorContainer.js","UI/DragHandle.js","VariablesList/styles.js","Profile/SubscriptionChecker.js","EventsSheet/index.js","EventsSheet/ParameterRenderingService.js","EventsSheet/ParameterFields/ObjectField.js","ObjectsRendering/Renderers/RenderedIconInstance.js","UI/Button.js","EventsSheet/InstructionEditor/InstructionOrExpressionSelector/index.js","UI/ScrollView.js","EventsSheet/InstructionEditor/InstructionOrExpressionSelector/EnumeratedInstructionOrExpressionMetadata.js","UI/Messages/InfoBar.js","InstancesEditor/ViewPosition.js","SceneEditor/InstancesSelection.js","ObjectEditor/Editors/SpriteEditor/PointsEditor/styles.js","Utils/TimeFunction.js","Utils/TimestampedId.js","EventsSheet/ParameterFields/EnumerateVariables.js","EventsSheet/ParameterFields/VariableField.js","UI/Theme/DefaultTheme/index.js","MainFrame/UpdaterTools.js","VariablesList/index.js","UI/TreeTable/index.js","ProjectManager/ProjectErrorsChecker.js","UI/SearchbarWithChips.js","ResourcesList/ResourceThumbnail/ImageThumbnail.js","UI/EditorBar.js","Profile/CreateProfile.js","MainFrame/Editors/EventsEditor.js","EventsSheet/EventsTree/DropIndicator.js","EventsSheet/ParameterFields/DefaultField.js","ObjectsList/ObjectSelector.js","ObjectsRendering/PixiResourcesLoader.js","EventsSheet/ParameterFields/ParameterFieldCommons.js","EventsSheet/InstructionEditor/SelectorListItems/SelectorInstructionOrExpressionListItem.js","EventsSheet/InstructionEditor/SelectorListItems/SelectorInstructionsTreeListItem.js","EventsSheet/ParameterFields/ParameterMetadataTools.js","Utils/StringHelpers.js","UI/DragAndDrop/DragSourceAndDropTarget.js","EventsSheet/ClipboardKind.js","UI/DragAndDrop/DropTarget.js","EventsSheet/InstructionEditor/InstructionParametersEditor.js","UI/TagChips.js","Utils/History.js","EventsSheet/EventsFunctionExtractor/index.js","EventsFunctionsExtensionEditor/EventsFunctionConfigurationEditor/EventsFunctionParametersEditor.js","ObjectTypeSelector/index.js","BehaviorsEditor/EnumerateBehaviorsMetadata.js","EventsFunctionsExtensionEditor/EventsFunctionConfigurationEditor/EventsFunctionPropertiesEditor.js","UI/EditorMosaic/CloseButton.js","MainFrame/Editors/EventsFunctionsExtensionEditor.js","ObjectGroupEditor/ObjectGroupEditorDialog.js","MainFrame/Editors/ExternalEventsEditor.js","MainFrame/Editors/LayoutChooserDialog.js","MainFrame/Editors/ExternalLayoutEditor.js","SceneEditor/index.js","InstancesEditor/PinchHandler.js","Utils/GridHelpers.js","LayersList/EnumerateLayers.js","ObjectEditor/Editors/SpriteEditor/Utils/SpriteSelector.js","Utils/IsNullPtr.js","MainFrame/Editors/SceneEditor.js","Utils/GDevelopServices/Usage.js","Utils/i18n/getTranslationFunction.js","ProjectCreation/ExamplesInformation.js","Export/GenericExporters/CordovaExport.js","Export/GenericExporters/ElectronExport.js","Export/GenericExporters/HTML5Export.js","Export/GenericExporters/Cocos2dExport.js","Export/GenericExporters/FacebookInstantGamesExport.js","Export/GenericExporters/OnlineCordovaExport.js","Export/GenericExporters/OnlineElectronExport.js","Export/GenericExporters/OnlineWebExport.js","UI/CustomSvgIcons/Facebook.js","UI/CustomSvgIcons/Cordova.js","UI/CustomSvgIcons/Chrome.js","JsExtensionsLoader/index.js","ProjectsStorage/ProjectStorageProviders.js","Debugger/Toolbar.js","Debugger/InspectorsList.js","Debugger/Inspectors/VariablesContainerInspector.js","Debugger/Inspectors/RuntimeObjectInspector.js","Debugger/Inspectors/RuntimeSceneInspector.js","Debugger/GDJSInspectorDescriptions.js","Debugger/Inspectors/RawContentInspector.js","Debugger/Profiler/MeasuresTable.js","Debugger/Profiler/index.js","Debugger/DebuggerContent.js","Debugger/DebuggerSelector.js","Debugger/index.js","MainFrame/Editors/DebuggerEditor.js","Export/Builds/BuildProgress.js","Export/Builds/BuildsList.js","Utils/Delay.js","Export/Builds/BuildsWatcher.js","Export/Builds/index.js","Export/Builds/BuildsDialog.js","Profile/LimitDisplayer.js","Export/Builds/BuildStepsProgress.js","Export/ExportLauncher.js","Utils/OnlineStatus.js","Export/ExportDialog.js","UI/DragAndDrop/DragAndDropContextProvider.js","UI/RightLoader.js","Profile/CreateAccountDialog.js","Profile/LoginDialog.js","Utils/WatchPromiseInState.js","Profile/UserProfileProvider.js","MainFrame/Preferences/PreferencesProvider.js","EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsProvider.js","MainFrame/Providers.js","CodeEditor/Theme/TomorrowNight.js","CodeEditor/Theme/Monokai.js","CodeEditor/Theme/Tomorrow.js","CodeEditor/Theme/SolarizedDark.js","CodeEditor/Theme/SolarizedLight.js","CodeEditor/Theme/VibrantInk.js","CodeEditor/Theme/GitHub.js","CodeEditor/Theme/index.js","ResourcesList/ResourcePreview/GenericIconPreview.js","ResourcesList/ResourcePreview/index.js","ResourcesEditor/ResourcePropertiesEditor/index.js","ResourcesEditor/Toolbar.js","ResourcesEditor/index.js","MainFrame/Editors/ResourcesEditor.js","Utils/GDevelopServices/Extension.js","UI/PlaceholderError.js","ExtensionsSearch/ExtensionInstallDialog.js","ExtensionsSearch/index.js","ObjectsList/NewObjectDialog.js","ObjectsList/ClipboardKind.js","UI/EditTagsDialog.js","ObjectsList/index.js","MainFrame/Changelog/ChangelogRenderer.js","Utils/GDevelopServices/Release.js","MainFrame/Changelog/index.js","ProjectCreation/ExamplesList.js","Utils/FuzzyOrEmptyFilter.js","UI/Theme/DarkTheme/index.js","UI/Theme/index.js","ProjectCreation/Tutorials.js","ProjectCreation/CreateProjectDialog.js","ObjectGroupsList/GroupRow.js","ObjectGroupsList/index.js","MainFrame/Toolbar.js","MainFrame/ProjectTitlebar.js","MainFrame/Preferences/PreferencesDialog.js"],"names":["styles","logo","width","contributors","name","description","link","AboutDialog","state","currentTab","_openContributePage","Window","openExternalURL","_openLink","_changeTab","_this","setState","_this2","this","_this$props","props","open","onClose","updateStatus","updateStatusString","getUpdateStatusLabel","status","updateButtonLabel","getUpdateButtonLabel","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_UI_Dialog__WEBPACK_IMPORTED_MODULE_8__","actions","_UI_FlatButton__WEBPACK_IMPORTED_MODULE_9__","key","label","_lingui_react__WEBPACK_IMPORTED_MODULE_5__","id","primary","onClick","onRequestClose","maxWidth","noMargin","_Preferences_PreferencesContext__WEBPACK_IMPORTED_MODULE_14__","Consumer","_ref","values","checkUpdates","_UI_Grid__WEBPACK_IMPORTED_MODULE_11__","src","alt","style","_UI_Tabs__WEBPACK_IMPORTED_MODULE_10__","value","onChange","Fragment","_UI_Text__WEBPACK_IMPORTED_MODULE_13__","0","getIDEVersion","1","getGDCoreVersion","justifyContent","canDownloadUpdate","_Changelog__WEBPACK_IMPORTED_MODULE_16__","_UI_List__WEBPACK_IMPORTED_MODULE_7__","map","contributor","primaryText","secondaryText","secondaryTextLines","length","displayLinkButton","onOpenLink","expand","alignItems","PureComponent","Indent","react__WEBPACK_IMPORTED_MODULE_1__","Object","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","indent","_material_ui_icons_SubdirectoryArrowRight__WEBPACK_IMPORTED_MODULE_7___default","htmlColor","indentIconColor","VariableRow","_ref2","variable","depth","errorText","onBlur","onAddChild","onRemove","onChangeValue","onResetToDefaultValue","children","showHandle","showSelectionCheckbox","isSelected","onSelect","origin","isStructure","limitEditing","columns","_UI_TreeTable__WEBPACK_IMPORTED_MODULE_2__","tableChildIndentation","_UI_DragHandle__WEBPACK_IMPORTED_MODULE_3__","_UI_Checkbox__WEBPACK_IMPORTED_MODULE_5__","checked","onCheck","e","_UI_TextField__WEBPACK_IMPORTED_MODULE_8__","margin","fontStyle","fullWidth","defaultValue","disabled","push","fadedButton","undefined","_UI_SemiControlledTextField__WEBPACK_IMPORTED_MODULE_4__","commitOnBlur","getString","text","multiLine","toolColumn","_UI_IconButton__WEBPACK_IMPORTED_MODULE_9__","tooltip","_material_ui_icons_Replay__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_icons_AddCircle__WEBPACK_IMPORTED_MODULE_6___default","_UI_Theme_ThemeConsumer__WEBPACK_IMPORTED_MODULE_12__","muiTheme","backgroundColor","list","itemsBackgroundColor","getInitialSelection","getSelection","selection","filter","addToSelection","object","select","arguments","console","log","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","ptr","hasSelection","__webpack_require__","d","__webpack_exports__","CLIPBOARD_KIND","path","optionalRequire","gd","global","desktopSizes","androidSizes","iosSizes","PlatformSpecificAssetsDialog","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","_generateFromFile","project","resourceSources","onChooseResource","sources","source","kind","then","resources","resourcesManager","getResourcesManager","projectPath","dirname","getProjectFile","fullPath","resolve","getFile","forEach","resource","delete","Promise","all","concat","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","size","resizeImage","join","height","results","indexOf","allResourcesNames","resourceName","hasResource","getResource","setFile","imageResource","ImageResource","setName","addResource","ResourcesLoader","burstUrlsCacheForResources","setTimeout","desktopIconResourceNames","androidIconResourceNames","iosIconResourceNames","showErrorBox","_onApply","_this$state","index","getPlatformSpecificAssets","set","onApply","_loadFrom","get","newProps","react__WEBPACK_IMPORTED_MODULE_7__","_UI_FlatButton__WEBPACK_IMPORTED_MODULE_8__","_lingui_react__WEBPACK_IMPORTED_MODULE_6__","keyboardFocused","_this$props2","resourceExternalEditors","_this$state2","_UI_Dialog__WEBPACK_IMPORTED_MODULE_10__","title","isResizeSupported","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_9__","_UI_Text__WEBPACK_IMPORTED_MODULE_17__","_ResourcesList_ResourceSelectorWithThumbnail__WEBPACK_IMPORTED_MODULE_13__","floatingLabelText","resourceKind","newIcons","React","_Utils_OptionalRequire__WEBPACK_IMPORTED_MODULE_0__","Jimp","n","inputFile","outputFile","read","jimpImage","contain","write","catch","err","error","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_1__","position","top","left","right","bottom","zIndex","pointerEvents","show","display","marginTop","marginLeft","disableShrink","electron","CloseConfirmDialog","_delayElectronClose","_setup","shouldPrompt","isDev","message","window","onbeforeunload","confirm","remote","getCurrentWindow","close","returnValue","tabsContainerStyle","flex","flexDirection","tabContentContainer","textAlign","tabLabel","overflow","textOverflow","whiteSpace","marginBottom","marginRight","fontSize","closeButton","TabContentContainer","_Component","apply","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","nextProps","active","Component","ClosableTabs","_Component2","hideLabels","_Theme_ThemeConsumer__WEBPACK_IMPORTED_MODULE_9__","tabItemContainerStyle","flexShrink","flexWrap","overflowX","closableTabs","ClosableTab","onCloseOthers","onCloseAll","closable","onActivated","useEffect","contextMenu","useRef","openContextMenu","event","stopPropagation","current","clientX","clientY","textColor","selectedTextColor","selectedBackgroundColor","_material_ui_core_ButtonBase__WEBPACK_IMPORTED_MODULE_8__","onContextMenu","focusRipple","color","fontFamily","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_7___default","_Menu_ContextMenu__WEBPACK_IMPORTED_MODULE_10__","ref","buildMenuTemplate","click","enabled","getEditorTabsInitialState","editors","openEditorTab","renderEditor","dontFocusTab","existingEditorId","findIndex","editor","editorTab","render","isCurrentTab","isActive","editorRef","changeCurrentTab","newTabId","Math","max","min","closeAllEditorTabs","closeEditorTab","chosenEditorTab","closeOtherEditorTabs","getEditors","getCurrentTabIndex","getCurrentTab","closeProjectTabs","editorProject","getProject","saveUiSettings","closeLayoutTabs","layout","editorLayout","getLayout","closeExternalLayoutTabs","externalLayout","ExternalLayoutEditor","getExternalLayout","closeExternalEventsTabs","externalEvents","ExternalEventsEditor","getExternalEvents","closeEventsFunctionsExtensionTabs","eventsFunctionsExtension","EventsFunctionsExtensionEditorWrapper","getEventsFunctionsExtension","getEventsFunctionsExtensionEditor","tabIndex","getThumbnail","ObjectsRenderingService","bind","indentWidth","container","EventContainer","_onEventUpdated","forceUpdate","_onEventContextMenu","domEvent","preventDefault","onEventContextMenu","_container","offsetHeight","eventsHeightsCache","setEventHeight","scope","EventComponent","EventsRenderingService","getEventComponent","react__WEBPACK_IMPORTED_MODULE_10___default","onEventClick","globalObjectsContainer","objectsContainer","selected","isEventSelected","leftIndentWidth","onUpdate","onAddNewInstruction","onPasteInstructions","onMoveToInstruction","onMoveToInstructionsList","onInstructionClick","onInstructionDoubleClick","onInstructionContextMenu","onInstructionsListContextMenu","onParameterClick","onOpenExternalEvents","onOpenLayout","renderObjectThumbnail","screenType","windowWidth","getNodeKey","treeIndex","SortableTree","className","otherProps","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_4__","_UI_Theme_ThemeConsumer__WEBPACK_IMPORTED_MODULE_23__","react_sortable_tree__WEBPACK_IMPORTED_MODULE_12__","assign","eventsTree","eventsSheetRootClassName","noop","ThemableEventsTree","_this3","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8__","_eventsToTreeData","eventsList","flatData","parentDisabled","treeData","mapFor","getEventsCount","i","getEventAt","isDisabled","_renderEvent","indexInList","expanded","isFolded","getSubEvents","_onMoveNode","_ref3","node","targetPath","slice","targetNode","getNodeAtPath","targetEventsList","events","targetPosition","newEvent","clone","removeEvent","insertEvent","forceEventsUpdate","onEventMoved","_canDrop","_ref4","nextParent","canHaveSubEvents","_onVisibilityToggle","_ref5","setFolded","_renderObjectThumbnail","objectName","_this3$props","showObjectThumbnails","getObjectByName","classNames","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","icon","crossOrigin","_ref6","isCondition","x","y","_treeSearchMethod","_ref7","searchResults","searchQuery","find","highlightedEvent","compare","EventHeightsCache","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","onHeightsChanged","cb","_this4","_list","wrappedInstance","recomputeRowHeights","_this5","row","_getEventRow","scrollToRow","EventsListUnfolder","unfoldWhenContaining","searchedEvent","_this6","scaffoldBlockPxWidth","onVisibilityToggle","onMoveNode","canDrop","rowHeight","_ref8","getEventHeight","searchMethod","searchFocusOffset","eventsTreeWithSearchResults","reactVirtualizedListProps","onScroll","defaultProps","StandardEvent","_classNames","standardEvent","asStandardEvent","_ConditionsActionsColumns__WEBPACK_IMPORTED_MODULE_11__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","largeSelectableArea","largeSelectedArea","executableEventContainer","renderConditionsList","_InstructionsList__WEBPACK_IMPORTED_MODULE_8__","instrsList","getConditions","areConditions","renderActionsList","getActions","instrFormatter","InstructionSentenceFormatter","loadTypesFormattingFromConfig","wordWrap","cursor","reactDndInstructionType","DragSourceAndDropTarget","makeDragSourceAndDropTarget","Instruction","instruction","useAssignmentOperators","PreferencesContext","eventsSheetUseAssignmentOperators","metadata","MetadataProvider","getConditionMetadata","JsPlatform","getType","getActionMetadata","react__WEBPACK_IMPORTED_MODULE_2__","beginDrag","draggedItem","drop","_classNames3","connectDragSource","connectDropTarget","isOver","instructionElement","selectableArea","selectedArea","onDoubleClick","onKeyPress","isInverted","getSmallIconFilename","formattedTexts","getAsFormattedText","parametersCount","getParametersCount","disabledText","_classNames2","str","parameterIndex","getTextFormatting","getUserData","toUpperCase","substr","parameterMetadata","getParameter","parameterType","instructionParameter","ParameterRenderingService","renderInlineParameter","InvalidParameterValue","renderInstructionText","_DropIndicator__WEBPACK_IMPORTED_MODULE_7__","canHaveSubInstructions","_InstructionsList__WEBPACK_IMPORTED_MODULE_6__","subInstructionsContainer","getSubInstructions","onAddNewSubInstruction","onPasteSubInstructions","onMoveToSubInstruction","onMoveToSubInstructionsList","onSubInstructionClick","onSubInstructionDoubleClick","onSubInstructionContextMenu","onSubInstructionsListContextMenu","onSubParameterClick","addButtonLabel","_lingui_react__WEBPACK_IMPORTED_MODULE_1__","RelationalOperatorField","_field","focus","getDescription","_UI_SelectField__WEBPACK_IMPORTED_MODULE_7__","isInline","helperMarkdownText","getLongDescription","field","hintText","_UI_SelectOption__WEBPACK_IMPORTED_MODULE_8__","renderInlineRelationalOperator","isEmpty","OperatorField","renderInlineOperator","MouseField","renderInlineMouse","keyNames","isKeyValid","KeyField","_UI_SemiControlledAutoComplete__WEBPACK_IMPORTED_MODULE_7__","dataSource","keyName","openOnFocus","renderInlineKey","_RenderedInstance__WEBPACK_IMPORTED_MODULE_0__","pixi_js__WEBPACK_IMPORTED_MODULE_1__","RenderedUnknownInstance","instance","associatedObject","pixiContainer","pixiResourcesLoader","RenderedInstance","_pixiObject","PIXI","_pixiContainer","addChild","hasCustomSize","getCustomWidth","getCustomHeight","beginFill","lineStyle","moveTo","lineTo","endFill","prototype","create","resourcesLoader","update","_instance","getX","getY","rotation","getAngle","PI","RenderedSpriteInstance","_renderedAnimation","_renderedDirection","_centerX","_centerY","_originX","_originY","_pixiResourcesLoader","getInvalidPIXITexture","updatePIXITexture","updatePIXISprite","spriteObject","asSpriteObject","getAnimationsCount","getAnimation","getDirectionsCount","getDirection","getSpritesCount","imageName","getSprite","getImageName","getResourceFullUrl","anchor","texture","frame","_shouldNotRotate","toRad","scale","abs","updateSprite","_sprite","_associatedObject","hasNoAnimations","getRawFloatProperty","animation","hasNoDirections","useMultipleDirections","normalizedAngle","floor","round","direction","getPIXITexture","_project","getOrigin","isDefaultCenterPoint","noFrame","that","on","off","center","getCenter","getOriginX","getOriginY","getDefaultWidth","getDefaultHeight","RenderedTiledSpriteInstance","tiledSprite","asTiledSpriteObject","_texture","getTexture","TilingSprite","getWidth","getHeight","RenderedPanelSpriteInstance","makeObjects","updateTexture","panelSprite","asPanelSpriteObject","isTiled","_tiled","_textureName","updateAngle","updatePosition","oldWidth","_width","oldHeight","_height","updateWidthHeight","StretchedSprite","_centerSprite","_borderSprites","removeChildren","_updateLocalPositions","getLeftMargin","getTopMargin","getRightMargin","getBottomMargin","_updateSpritesAndTexturesSize","_wasRendered","cacheAsBitmap","renderer","makeInsideTexture","rect","pivot","RenderedTextInstance","textObject","asTextObject","align","_styleFontDirty","_fontFamily","getFontFamily","getFontName","isItalic","_isItalic","isBold","_isBold","getCharacterSize","_characterSize","_wrapping","_wrappingWidth","_fontName","loadFontFamily","warn","fontWeight","wordWrapWidth","breakWords","dirty","getColorR","_colorR","getColorG","_colorG","getColorB","_colorB","fill","_RenderedIconInstance__WEBPACK_IMPORTED_MODULE_0__","makeRenderer","_Utils_ColorTransformer__WEBPACK_IMPORTED_MODULE_2__","RenderedParticleEmitterInstance","updateGraphics","particleEmitterObject","asParticleEmitterObject","clear","emitterAngle","sprayConeAngle","getConeSprayAngle","line1Angle","line2Angle","rgbToHexNumber","getParticleRed2","getParticleGreen2","getParticleBlue2","cos","sin","getParticleRed1","getParticleGreen1","getParticleBlue1","drawCircle","loadFontFace","fontfaceobserver__WEBPACK_IMPORTED_MODULE_0__","fontfaceobserver__WEBPACK_IMPORTED_MODULE_0___default","descriptors","FontFace","fontFace","document","fonts","add","load","newStyle","appendChild","createTextNode","head","FontFaceObserver","button","YesNoField","_yesButton","createRef","focusButton","effectiveValue","getParameterValueOrDefault","_UI_Grid__WEBPACK_IMPORTED_MODULE_8__","_UI_Text__WEBPACK_IMPORTED_MODULE_11__","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_7__","renderInlineYesNo","TrueFalseField","_trueButton","renderInlineTrueFalse","ExpressionField","react__WEBPACK_IMPORTED_MODULE_5___default","_GenericExpressionField__WEBPACK_IMPORTED_MODULE_6__","expressionType","ExpressionSelector","instructionsInfo","filterEnumeratedInstructionOrExpressionMetadataByScope","enumerateExpressions","allExpressions","instructionsInfoTree","createTree","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_index__WEBPACK_IMPORTED_MODULE_8__","iconSize","enumerateExtensionExpressions","prefix","expressions","expressionsTypes","keys","j","exprMetadata","isShown","parameters","objectMetadata","behaviorMetadata","isCodeOnly","displayedName","getFullName","groupName","getGroup","iconFilename","fullGroupName","type","isPrivate","freeExpressions","objectsExpressions","behaviorsExpressions","allExtensions","asPlatform","getAllPlatformExtensions","extension","allObjectsTypes","getExtensionObjectsTypes","allBehaviorsTypes","getBehaviorsTypes","getName","allFreeExpressionsGetter","getAllExpressions","allObjectExpressionsGetter","getAllExpressionsForObject","allBehaviorExpressionsGetter","getAllExpressionsForBehavior","getAllStrExpressions","getAllStrExpressionsForObject","getAllStrExpressionsForBehavior","objectType","getObjectMetadata","k","behaviorType","getBehaviorMetadata","formatExpressionCall","filterOutCodeOnlyParameters","array","expressionMetadata","firstParameterIndex","parameter","expressionInfo","parameterValues","functionName","functionArgs","behaviorName","defaultStyle","highlightedText","borderSizing","borderBottom","sortedHighlights","highlights","sort","highlight1","highlight2","begin","elements","lastPos","highlight","startPos","substring","end","StringField","getChoices","JSON","parse","getExtraInfo","exception","StringWithSelectorField","_UI_SemiControlledAutoComplete__WEBPACK_IMPORTED_MODULE_6__","choice","BehaviorField","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_behaviorNames","_getError","_doValidation","_forceChooseBehavior","_description","_longDescription","_behaviorTypeAllowed","instructionMetadata","expression","getLastObjectParameterValue","getBehaviorsOfObject","toJSArray","getTypeOfBehavior","_updateBehaviorsList","noBehaviorErrorText","react__WEBPACK_IMPORTED_MODULE_6__","_UI_SemiControlledAutoComplete__WEBPACK_IMPORTED_MODULE_8__","currentTarget","SceneVariableField","editorOpen","_VariableField__WEBPACK_IMPORTED_MODULE_7__","variablesContainer","getVariables","onOpenDialog","_VariablesList_VariablesEditorDialog__WEBPACK_IMPORTED_MODULE_8__","onCancel","emptyExplanationMessage","emptyExplanationSecondMessage","renderInlineSceneVariable","renderVariableWithIcon","GlobalVariableField","renderInlineGlobalVariable","ObjectVariableField","hasObjectNamed","getObject","react__WEBPACK_IMPORTED_MODULE_5__","_VariableField__WEBPACK_IMPORTED_MODULE_6__","_VariablesList_VariablesEditorDialog__WEBPACK_IMPORTED_MODULE_7__","renderInlineObjectVariable","LayerField","layerNames","getLayersCount","getLayerAt","layerName","AudioResourceField","_ResourcesList_ResourceSelector__WEBPACK_IMPORTED_MODULE_7__","initialResourceName","VideoResourceField","JsonResourceField","parseColor","rgbColor","colors","replace","split","r","parseInt","g","b","ParameterColorField","renderExtraButton","_UI_ColorField_ColorPicker__WEBPACK_IMPORTED_MODULE_7__","disableAlpha","onChangeComplete","rgb","ForceMultiplierField","_instantButton","showDeprecatedNumericValue","makeNonBreakable","_UI_BackgroundText__WEBPACK_IMPORTED_MODULE_11__","_GenericExpressionField__WEBPACK_IMPORTED_MODULE_10__","renderInlineForceMultiplier","SceneNameField","layoutNames","enumerateLayouts","layoutName","_ClassNames__WEBPACK_IMPORTED_MODULE_1__","instructionInvalidParameter","padding","GroupEvent","editing","_textField","edit","endEditing","groupEvent","asGroupEvent","getBackgroundColorR","getBackgroundColorG","getBackgroundColorB","_UI_TextField__WEBPACK_IMPORTED_MODULE_9__","textField","inputStyle","WebkitTextFillColor","underlineFocusStyle","borderColor","commentTextStyle","minHeight","commentTextField","commentSpan","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_6__","boxSizing","lineHeight","border","CommentEvent","onEvent","asCommentEvent","setComment","_getCommentHTML","getComment","commentEvent","rgbToHex","getBackgroundColorRed","getBackgroundColorGreen","getBackgroundColorBlue","getTextColorRed","getTextColorGreen","getTextColorBlue","selectable","_selectable","dangerouslySetInnerHTML","__html","instructionsContainer","actionsList","ForEachEvent","anchorEl","forEachEvent","asForEachEvent","getObjectToPick","_ConditionsActionsColumns__WEBPACK_IMPORTED_MODULE_13__","_InstructionsList_js__WEBPACK_IMPORTED_MODULE_8__","_InlinePopover__WEBPACK_IMPORTED_MODULE_11__","_ParameterFields_ObjectField__WEBPACK_IMPORTED_MODULE_12__","setObjectToPick","RepeatEvent","repeatEvent","asRepeatEvent","getRepeatExpression","_ParameterFields_DefaultField__WEBPACK_IMPORTED_MODULE_12__","setRepeatExpression","whileEvent","asWhileEvent","getWhileConditions","conditionsContainer","LinkEvent","_externalEventsField","openTarget","i18n","target","asLinkEvent","getTarget","hasExternalEventsNamed","hasLayoutNamed","showWarningBox","_","linkEvent","linkContainer","_material_ui_icons_OpenInNew__WEBPACK_IMPORTED_MODULE_8___default","_InlinePopover__WEBPACK_IMPORTED_MODULE_12__","_ParameterFields_ExternalEventsField__WEBPACK_IMPORTED_MODULE_13__","setTarget","externalEventsField","getList","enumerateExternalEvents","layouts","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_5__","ExternalEventsField","wrappingText","paddingLeft","paddingRight","comment","commentLink","textDecoration","JsCodeEvent","editingObject","input","ReactDOM","findDOMNode","_input","asJsCodeEvent","getInlineCode","jsCodeEvent","setInlineCode","newValue","editObject","endObjectEditing","parameterObjects","getParameterObjects","objects","eventsFunctionContext","eventsFunction","functionStart","functionEnd","href","getHelpLink","rel","react_measure__WEBPACK_IMPORTED_MODULE_13___default","onMeasure","_CodeEditor__WEBPACK_IMPORTED_MODULE_14__","onEditorMounted","_InlinePopover__WEBPACK_IMPORTED_MODULE_9__","_ParameterFields_ObjectField__WEBPACK_IMPORTED_MODULE_10__","setParameterObjects","component","eventHeights","updateTimeoutId","cachedHeight","_notifyComponent","fullHeightSelector","findInstruction","instructionType","NewInstructionEditorDialog","_getInitialState","_chooseFreeInstruction","setType","chosenObjectName","chosenObjectInstructionsInfo","chosenObjectInstructionsInfoTree","_stepToParameters","_chooseObjectInstruction","_stepBackFrom","step","_instructionParametersEditor","_getInstructionMetadata","getCurrentPlatform","currentInstructionOrObjectSelectorTab","_forceUpdate","_chooseObject","_getChosenObjectState","isNewInstruction","allInstructions","enumerateInstructions","enumeratedInstructionMetadata","objectParameterIndex","getObjectParameterIndex","discardInstructionTypeIfNotInObjectInstructions","_this$props3","enumerateObjectInstructions","_this$props4","onSubmit","instructionHelpPage","getHelpPath","renderInstructionOrObjectSelector","_UI_Background__WEBPACK_IMPORTED_MODULE_18__","noFullHeight","_InstructionOrObjectSelector__WEBPACK_IMPORTED_MODULE_11__","onChangeTab","chosenInstructionType","onChooseInstruction","onChooseObject","focusOnMount","onSearchStartOrReset","renderParameters","_UI_Grid__WEBPACK_IMPORTED_MODULE_12__","_InstructionParametersEditor__WEBPACK_IMPORTED_MODULE_10__","openInstructionOrExpression","instructionParametersEditor","noHelpButton","renderObjectInstructionSelector","_InstructionOrExpressionSelector__WEBPACK_IMPORTED_MODULE_15__","onChoose","selectedType","useSubheaders","searchPlaceholderObjectName","searchPlaceholderIsCondition","_UI_Reponsive_ResponsiveWidthMeasurer__WEBPACK_IMPORTED_MODULE_20__","secondaryActions","_UI_HelpButton__WEBPACK_IMPORTED_MODULE_17__","helpPagePath","flexRowBody","_UI_Reponsive_SelectColumns__WEBPACK_IMPORTED_MODULE_19__","columnsRenderer","instruction-or-object-selector","object-instruction-selector","getColumns","caseSensitiveSlug","incString","separator","preserved","p","s","RegExp","SelectColumns","_Grid__WEBPACK_IMPORTED_MODULE_1__","columnName","ResponsiveWidthMeasurer","innerWidth","sizeTextField","white","black","filterEditableWithEventTextDialog","includes","EventTextDialog","_applyChangesOnEvent","textValue","eventType","setTextColor","setBackgroundColor","_getInitialStateFromEvent","_UI_Dialog__WEBPACK_IMPORTED_MODULE_7__","_UI_Grid__WEBPACK_IMPORTED_MODULE_9__","_UI_MiniToolbar__WEBPACK_IMPORTED_MODULE_11__","_UI_ColorField_ColorPicker__WEBPACK_IMPORTED_MODULE_10__","_UI_SemiControlledTextField__WEBPACK_IMPORTED_MODULE_12__","rows","rowsMax","Toolbar","_PureComponent","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","_UI_Toolbar__WEBPACK_IMPORTED_MODULE_6__","lastChild","showPreviewButton","_UI_ToolbarIcon__WEBPACK_IMPORTED_MODULE_8__","onPreview","showNetworkPreviewButton","_UI_Menu_ElementWithMenu__WEBPACK_IMPORTED_MODULE_9__","element","onNetworkPreview","onOpenDebugger","_UI_ToolbarSeparator__WEBPACK_IMPORTED_MODULE_7__","onAddStandardEvent","onAddSubEvent","canAddSubEvent","onAddCommentEvent","allEventsMetadata","fullName","onAddEvent","canRemove","undo","canUndo","redo","canRedo","onToggleSearchPanel","acceleratorString","onOpenSettings","LEFT_KEY","UP_KEY","RIGHT_KEY","DOWN_KEY","BACKSPACE_KEY","DELETE_KEY","EQUAL_KEY","MINUS_KEY","NUMPAD_ADD","NUMPAD_SUBSTRACT","C_KEY","F_KEY","V_KEY","X_KEY","Y_KEY","Z_KEY","KeyboardShortcuts","shortcutCallbacks","_shiftPressed","_ctrlPressed","_altPressed","_metaPressed","_updateModifiersFromEvent","evt","metaKey","altKey","ctrlKey","shiftKey","_isControlOrCmdPressed","onDragOver","onKeyUp","onKeyDown","_isActive","closest","_this$_shortcutCallba","_shortcutCallbacks","onDelete","onMove","onCopy","onCut","onPaste","onUndo","onRedo","onSearch","onZoomOut","onZoomIn","which","isMacLike","InlineParameterEditor","ParameterComponent","_loadComponentFromInstruction","_unload","getParameterComponent","_InlinePopover__WEBPACK_IMPORTED_MODULE_6__","parameterRenderingService","EmptyEventsPlaceholder","_UI_PlaceholderMessage__WEBPACK_IMPORTED_MODULE_2__","_UI_Text__WEBPACK_IMPORTED_MODULE_4__","_lingui_react__WEBPACK_IMPORTED_MODULE_0__","_UI_HelpButton__WEBPACK_IMPORTED_MODULE_3__","ensureSingleOnceInstructions","instructionsList","hasEndingOnceInstruction","hasInvalidOnce","removeAt","onceInstruction","insert","toEventsContextResult","eventsContext","objectsNames","getObjectNames","toNewVectorString","objectOrGroupNames","getReferencedObjectOrGroupNames","objectOrGroupBehaviorNames","objectOrGroupName","behaviorNames","getBehaviorNamesOfObjectOrGroup","EventsContextAnalyzerDialog","eventsContextResult","_UI_Text__WEBPACK_IMPORTED_MODULE_9__","SearchPanel","searchText","replaceText","matchCase","searchInActions","searchInConditions","searchInSelection","searchTextField","launchSearch","onSearchInEvents","launchReplace","onReplaceInEvents","resultsCount","hasEventSelected","onGoToPreviousSearchResult","onGoToNextSearchResult","_this$state3","_UI_Background__WEBPACK_IMPORTED_MODULE_7__","noExpand","_searchTextField","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_15__","_UI_InlineCheckbox__WEBPACK_IMPORTED_MODULE_13__","_UI_Text__WEBPACK_IMPORTED_MODULE_14__","_UI_IconButton__WEBPACK_IMPORTED_MODULE_12__","_material_ui_icons_ChevronLeft__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_icons_ChevronRight__WEBPACK_IMPORTED_MODULE_11___default","EventsSearcher","eventsSearchResults","_resultEvents","_doReplaceInEvents","EventsRefactorer","replaceStringInEvents","_doSearchInEvents","newEventsSearchResults","searchInEvents","_updateListOfResultEvents","resultEventsWithDuplicates","eventsSearchResult","at","isEventValid","getEvent","Boolean","uniqBy","_goToSearchResults","newSearchFocusOffset","_goToPreviousSearchResult","_goToNextSearchResult","eventsSearchResultEvents","replaceInEvents","goToNextSearchResult","goToPreviousSearchResult","containsSubInstructions","subInstructionsList","enumerateEventsMetadata","lodash_flatten__WEBPACK_IMPORTED_MODULE_0__","lodash_flatten__WEBPACK_IMPORTED_MODULE_0___default","_Utils_MapFor__WEBPACK_IMPORTED_MODULE_1__","flatten","extensionEvents","getAllEvents","EventsFunctionExtractorDialog","extensionName","createNewExtension","serializedEvents","EventsFunction","setupFunctionFromEvents","enumerateEventsFunctionsExtensions","onCreate","eventsFunctionsExtensions","hasLotsOfParameters","functionHasLotsOfParameters","_UI_HelpButton__WEBPACK_IMPORTED_MODULE_19__","canCreateEventsFunction","_UI_Grid__WEBPACK_IMPORTED_MODULE_10__","_UI_DismissableAlertMessage__WEBPACK_IMPORTED_MODULE_16__","identifier","_UI_SelectField__WEBPACK_IMPORTED_MODULE_12__","_UI_SelectOption__WEBPACK_IMPORTED_MODULE_13__","_UI_SemiControlledTextField__WEBPACK_IMPORTED_MODULE_11__","validateExtensionNameUniqueness","validateExtensionName","validateEventsFunctionNameUniqueness","validateEventsFunctionName","_UI_AlertMessage__WEBPACK_IMPORTED_MODULE_15__","_EventsFunctionsExtensionEditor_EventsFunctionConfigurationEditor_EventsFunctionPropertiesEditor__WEBPACK_IMPORTED_MODULE_18__","eventsBasedBehavior","onConfigurationUpdated","freezeEventsFunctionType","_EventsFunctionsExtensionEditor_EventsFunctionConfigurationEditor_EventsFunctionParametersEditor__WEBPACK_IMPORTED_MODULE_17__","onParametersUpdated","freezeParameters","getObjectGroupByName","objectGroupName","getObjectGroups","has","BehaviorTypeSelector","enumerateBehaviorsMetadata","valueIsListed","EventsFunctionsExtensionEditor","selectedEventsFunction","selectedEventsBasedBehavior","editedEventsBasedBehavior","editOptionsDialogOpen","behaviorMethodSelectorDialogOpen","onAddEventsFunctionCb","_loadEventsFunctionFrom","_globalObjectsContainer","ObjectsContainer","_objectsContainer","EventsFunctionTools","eventsFunctionToObjectsContainer","updateToolbar","setToolbar","selectEventsFunctionByName","eventsBasedBehaviors","getEventsBasedBehaviors","behaviorEventsFunctions","getEventsFunctions","hasEventsFunctionNamed","_selectEventsFunction","getEventsFunction","_editorNavigator","getEvents","openEditor","_makeRenameFreeEventsFunction","newName","done","Project","validateObjectName","WholeProjectRefactorer","renameEventsFunction","_makeRenameBehaviorEventsFunction","isBehaviorLifecycleFunction","renameBehaviorEventsFunction","_onDeleteEventsFunction","_selectEventsBasedBehavior","_editorMosaic","_makeRenameEventsBasedBehavior","renameEventsBasedBehavior","_onEventsBasedBehaviorRenamed","onBehaviorEdited","_onDeleteEventsBasedBehavior","_onAddFreeEventsFunction","_onAddBehaviorEventsFunction","_onCloseBehaviorMethodSelectorDialog","doAdd","_onBehaviorEventsFunctionAdded","ensureBehaviorEventsFunctionsProperParameters","_onBehaviorPropertyRenamed","oldName","renameBehaviorProperty","_editOptions","_editBehavior","_openFreeFunctionsListEditor","_openBehaviorsListEditor","initiallyFocusedFunctionName","initiallyFocusedBehaviorName","_this$props5","choose-editor","noTitleBar","_ChooseEventsFunctionsExtensionEditor__WEBPACK_IMPORTED_MODULE_24__","onEditFreeFunctions","onEditBehaviors","onEditExtensionOptions","toolbarControls","_UI_Background__WEBPACK_IMPORTED_MODULE_13__","_EventsFunctionConfigurationEditor__WEBPACK_IMPORTED_MODULE_10__","onParametersOrGroupsUpdated","_UI_EmptyMessage__WEBPACK_IMPORTED_MODULE_9__","events-sheet","_EventsSheet__WEBPACK_IMPORTED_MODULE_7__","options","onCreateEventsFunction","free-functions-list","_EventsFunctionsList__WEBPACK_IMPORTED_MODULE_11__","eventsFunctionsContainer","onSelectEventsFunction","onDeleteEventsFunction","canRename","onRenameEventsFunction","onAddEventsFunction","onEventsFunctionAdded","renderHeader","_UI_Grid__WEBPACK_IMPORTED_MODULE_20__","_UI_FlatButton__WEBPACK_IMPORTED_MODULE_19__","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_21__","behavior-functions-list","behaviors-list","_EventsBasedBehaviorsList__WEBPACK_IMPORTED_MODULE_12__","eventsBasedBehaviorsList","onSelectEventsBasedBehavior","onDeleteEventsBasedBehavior","onRenameEventsBasedBehavior","onEventsBasedBehaviorRenamed","onEditProperties","_UI_Reponsive_ResponsiveWindowMeasurer__WEBPACK_IMPORTED_MODULE_22__","_UI_EditorMosaic_EditorNavigator__WEBPACK_IMPORTED_MODULE_23__","editorNavigator","initialEditorName","transitions","previousEditor","nextIcon","_material_ui_icons_Tune__WEBPACK_IMPORTED_MODULE_26___default","nextLabel","nextEditor","_material_ui_icons_Check__WEBPACK_IMPORTED_MODULE_25___default","onEditorChanged","editorName","_UI_EditorMosaic__WEBPACK_IMPORTED_MODULE_8__","editorMosaic","initialNodes","first","second","splitPercentage","_OptionsEditorDialog__WEBPACK_IMPORTED_MODULE_14__","_BehaviorMethodSelectorDialog__WEBPACK_IMPORTED_MODULE_17__","_EventsBasedBehaviorEditor_EventsBasedBehaviorEditorDialog__WEBPACK_IMPORTED_MODULE_16__","onRenameProperty","EventsFunctionConfigurationEditor","_canObjectOrGroupUseNewName","_onDeleteGroup","groupWithContext","group","answer","objectOrGroupRemovedInEventsFunction","_onRenameGroup","objectOrGroupRenamedInEventsFunction","_chooseTab","renderConfigurationHeader","_UI_Tabs__WEBPACK_IMPORTED_MODULE_8__","_UI_ScrollView__WEBPACK_IMPORTED_MODULE_11__","_EventsFunctionPropertiesEditor__WEBPACK_IMPORTED_MODULE_10__","_EventsFunctionParametersEditor__WEBPACK_IMPORTED_MODULE_9__","_ObjectGroupsList_ObjectGroupsListWithObjectGroupEditor__WEBPACK_IMPORTED_MODULE_7__","globalObjectGroups","objectGroups","canRenameGroup","onRenameGroup","onDeleteGroup","onGroupsUpdated","canSetAsGlobalGroup","ObjectGroupsListWithObjectGroupEditor","editedGroup","editGroup","___WEBPACK_IMPORTED_MODULE_6__","onEditGroup","onGroupAdded","onGroupRemoved","onGroupRenamed","_ObjectGroupEditor_ObjectGroupEditorDialog__WEBPACK_IMPORTED_MODULE_7__","ObjectGroupEditor","newObjectName","removeObject","onSizeUpdated","addObject","getAllObjectsNames","getTypeOfObject","_UI_EmptyMessage__WEBPACK_IMPORTED_MODULE_8__","_renderExplanation","_UI_List__WEBPACK_IMPORTED_MODULE_6__","displayRemoveButton","_ObjectsList_ObjectSelector__WEBPACK_IMPORTED_MODULE_7__","noGroups","openGitHubIssue","encodeURIComponent","OptionsEditorDialog","exportDialogOpen","_EventsFunctionsExtensionsLoader_EventsFunctionsExtensionsContext__WEBPACK_IMPORTED_MODULE_13__","eventsFunctionsExtensionsState","eventsFunctionsExtensionWriter","getEventsFunctionsExtensionWriter","_UI_Dialog__WEBPACK_IMPORTED_MODULE_11__","_UI_HelpButton__WEBPACK_IMPORTED_MODULE_12__","_UI_FlatButton__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons_CloudUpload__WEBPACK_IMPORTED_MODULE_9___default","setFullName","getShortDescription","setShortDescription","setDescription","getVersion","setVersion","getTags","setTags","getAuthor","setAuthor","_UI_Text__WEBPACK_IMPORTED_MODULE_16__","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_14__","chooseEventsFunctionExtensionFile","pathOrUrl","writeEventsFunctionsExtension","reject","Error","exportExtension","EventsBasedBehaviorEditorDialog","_UI_HelpButton__WEBPACK_IMPORTED_MODULE_10__","modal","_index__WEBPACK_IMPORTED_MODULE_9__","onTabChanged","onPropertiesUpdated","EventsBasedBehaviorEditor","_allObjectTypes","getAllObjectTypesUsingEventsBasedBehavior","newTab","_UI_Tabs__WEBPACK_IMPORTED_MODULE_11__","_UI_DismissableAlertMessage__WEBPACK_IMPORTED_MODULE_12__","_UI_TextField__WEBPACK_IMPORTED_MODULE_7__","_UI_SemiControlledTextField__WEBPACK_IMPORTED_MODULE_9__","floatingLabelFixed","_ObjectTypeSelector__WEBPACK_IMPORTED_MODULE_10__","getObjectType","setObjectType","allowedObjectTypes","_UI_AlertMessage__WEBPACK_IMPORTED_MODULE_13__","getEventsFunctionsCount","_EventsBasedBehaviorPropertiesEditor__WEBPACK_IMPORTED_MODULE_14__","propertiesContainer","EventsBasedBehaviorPropertiesEditor","_addProperty","properties","getPropertyDescriptors","newNameGenerator","insertNew","getCount","_removeProperty","remove","_moveProperty","oldIndex","newIndex","move","_UI_Grid__WEBPACK_IMPORTED_MODULE_7__","mapVector","property","_UI_MiniToolbar__WEBPACK_IMPORTED_MODULE_17__","_UI_SemiControlledTextField__WEBPACK_IMPORTED_MODULE_16__","validatePropertyName","_UI_InlineCheckbox__WEBPACK_IMPORTED_MODULE_20__","isHidden","setHidden","checkedIcon","_material_ui_icons_Visibility__WEBPACK_IMPORTED_MODULE_21___default","uncheckedIcon","_material_ui_icons_VisibilityOff__WEBPACK_IMPORTED_MODULE_22___default","_UI_Menu_ElementWithMenu__WEBPACK_IMPORTED_MODULE_14__","_material_ui_icons_MoreVert__WEBPACK_IMPORTED_MODULE_15___default","_UI_SelectField__WEBPACK_IMPORTED_MODULE_8__","_UI_SelectOption__WEBPACK_IMPORTED_MODULE_9__","getValue","setValue","getLabel","setLabel","_UI_EmptyMessage__WEBPACK_IMPORTED_MODULE_13__","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_11__","labelPosition","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_23___default","_React$useState","_React$useState2","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","currentEditorName","setCurrentEditorName","transition","buttonLineJustifyContent","_Grid__WEBPACK_IMPORTED_MODULE_3__","_Background__WEBPACK_IMPORTED_MODULE_6__","_FlatButton__WEBPACK_IMPORTED_MODULE_4__","_material_ui_icons_ArrowBack__WEBPACK_IMPORTED_MODULE_5___default","_UI_Background__WEBPACK_IMPORTED_MODULE_2__","_UI_Grid__WEBPACK_IMPORTED_MODULE_3__","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_5__","_UI_FlatButton__WEBPACK_IMPORTED_MODULE_6__","eventsFunctionsCount","eventsBasedBehaviorsCount","LayerRenderer","layer","viewPosition","instances","onInstanceClicked","onOverInstance","onOutInstance","onMoveInstance","onMoveInstanceEnd","onDownInstance","getInstanceLeft","renderedInstances","getInstanceTop","getInstanceWidth","getInstanceHeight","getRendererOfInstance","renderedInstance","associatedObjectName","getObjectName","createNewInstanceRenderer","interactive","gesture","panable","shouldBeHandledByPinch","data","originalEvent","deltaX","deltaY","viewTopLeft","viewBottomRight","instancesRenderer","InitialInstanceJSFunctor","invoke","instancePtr","wrapPointer","InitialInstance","pixiObject","getPixiObject","zOrder","getZOrder","isLocked","isVisible","_isInstanceVisible","visible","wasUsed","toSceneCoordinates","_computeViewBounds","iterateOverInstancesWithZOrdering","_updatePixiObjectsZOrder","_updateVisibility","_cleanRenderers","getVisibility","hasOwnProperty","getInstance","instanceRemovedFromScene","SelectionRectangle","instanceMeasurer","toCanvasCoordinates","startSelectionRectangle","selectionRectangleStart","selectionRectangleEnd","updateSelectionRectangle","lastX","lastY","endSelectionRectangle","_instancesInSelectionRectangle","tmp","iterateOverInstances","selector","pixiRectangle","hitArea","instanceHeight","instanceWidth","selectionSceneStart","selectionSceneEnd","x1","y1","x2","y2","fillAlpha","alpha","drawRect","roundPositionsToGrid","pos","newPos","grid","snap","roundPosition","gridWidth","gridOffsetX","gridHeight","gridOffsetY","InstancesAdder","_zOrderFinder","HighestZOrderFinder","addInstances","objectNames","_instances","getHighestZOrder","_options","insertNewInitialInstance","setObjectName","setX","setY","setZOrder","createOrUpdateTemporaryInstancesFromObjectNames","_temporaryInstances","updateTemporaryInstancePositions","_createTemporaryInstancesFromObjectNames","deleteTemporaryInstances","removeInstance","InstancePropertiesEditor","_instanceVariablesList","schema","valueType","onEditButtonClick","onEditObjectByName","setAngle","setLocked","enumerateLayers","getLayer","setLayer","setCustomWidth","setCustomHeight","setHasCustomSize","getCustomProperties","instanceSchema","propertiesMapToSchema","updateCustomProperty","overflowY","_UI_Grid__WEBPACK_IMPORTED_MODULE_15__","_PropertiesEditor__WEBPACK_IMPORTED_MODULE_10__","_UI_IconButton__WEBPACK_IMPORTED_MODULE_14__","editInstanceVariables","_material_ui_icons_OpenInNew__WEBPACK_IMPORTED_MODULE_16___default","_VariablesList__WEBPACK_IMPORTED_MODULE_12__","inheritedVariablesContainer","_renderInstancesProperties","_renderEmpty","InstancesList","renderedRows","_searchBar","_onRowClick","onSelectInstances","_rowGetter","_rowClassName","selectedInstances","_selectFirstInstance","freezeUpdate","table","forceUpdateGrid","instanceRowRenderer","toLowerCase","locked","toFixed","angle","tableKey","react__WEBPACK_IMPORTED_MODULE_7___default","_UI_Theme_ThemeConsumer__WEBPACK_IMPORTED_MODULE_9__","react_virtualized__WEBPACK_IMPORTED_MODULE_8__","headerHeight","tableRootClassName","headerClassName","rowCount","rowGetter","onRowClick","rowClassName","dataKey","_UI_SearchBar__WEBPACK_IMPORTED_MODULE_10__","onRequestSearch","VariablesEditorDialog","selectedLayer","layersContainer","choices","layerRemoved","_UI_SelectOption__WEBPACK_IMPORTED_MODULE_10__","_UI_SelectField__WEBPACK_IMPORTED_MODULE_9__","ObjectEditorDialog","_getPrototypeOf2","_len","args","Array","_key","_onChangeTab","onRename","EditorComponent","editorComponent","_UI_Dialog__WEBPACK_IMPORTED_MODULE_9__","noTitleMargin","_UI_Tabs__WEBPACK_IMPORTED_MODULE_12__","_UI_MiniToolbar__WEBPACK_IMPORTED_MODULE_15__","_UI_SemiControlledTextField__WEBPACK_IMPORTED_MODULE_14__","canRenameObject","_BehaviorsEditor__WEBPACK_IMPORTED_MODULE_11__","ObjectEditorDialogContainer","dialogComponent","castToObjectType","editorConfiguration","ObjectsEditorService","getEditorConfiguration","withSerializableObject","propName","newObjectCreator","createNewObject","useProjectToUnserialize","EditorDialog","toolbarItemStyle","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","toolbarItem","checkbox","TextEditor","setCharacterSize","setColor","_UI_Checkbox__WEBPACK_IMPORTED_MODULE_8__","setBold","setItalic","_ResourcesList_ResourceSelector__WEBPACK_IMPORTED_MODULE_12__","canBeReset","setFontName","setString","TiledSpriteEditor","tiledSpriteObject","_ResourcesList_ResourceSelectorWithThumbnail__WEBPACK_IMPORTED_MODULE_9__","setTexture","_UI_Layout__WEBPACK_IMPORTED_MODULE_10__","_UI_SemiControlledTextField__WEBPACK_IMPORTED_MODULE_7__","setWidth","setHeight","PanelSpriteEditor","panelSpriteObject","_UI_Checkbox__WEBPACK_IMPORTED_MODULE_7__","setTiled","_UI_Layout__WEBPACK_IMPORTED_MODULE_11__","_UI_SemiControlledTextField__WEBPACK_IMPORTED_MODULE_10__","setTopMargin","setBottomMargin","setLeftMargin","setRightMargin","gridList","animationTitle","animationTools","AddAnimationLine","onAdd","extraTools","react__WEBPACK_IMPORTED_MODULE_9__","_UI_Grid__WEBPACK_IMPORTED_MODULE_30__","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_16__","_lingui_react__WEBPACK_IMPORTED_MODULE_8__","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_12___default","Animation","onSpriteContextMenu","selectedSprites","onSelectSprite","onReplaceDirection","onChangeName","animationName","_UI_MiniToolbar__WEBPACK_IMPORTED_MODULE_22__","smallest","_UI_DragHandle__WEBPACK_IMPORTED_MODULE_23__","_UI_SemiControlledTextField__WEBPACK_IMPORTED_MODULE_18__","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_13___default","_SpritesList__WEBPACK_IMPORTED_MODULE_11__","onReplaceByDirection","newDirection","SortableAnimation","SortableElement","SortableAnimationsList","SortableContainer","onAddAnimation","onRemoveAnimation","onChangeAnimationName","extraBottomTools","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","directionId","AnimationsListContainer","onSortEnd","moveAnimation","addAnimation","emptyAnimation","setDirectionsCount","removeAnimation","changeAnimationName","otherNames","deleteSelection","deleteSpritesFromAnimation","duplicateSelection","duplicateSpritesInAnimation","openSpriteContextMenu","sprite","selectSprite","spriteContextMenu","replaceDirection","animationId","setDirection","_UI_EmptyMessage__WEBPACK_IMPORTED_MODULE_21__","helperClass","useDragHandle","lockAxis","axis","_UI_Menu_ContextMenu__WEBPACK_IMPORTED_MODULE_24__","SpriteEditor","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","pointsEditorOpen","collisionMasksEditorOpen","openPointsEditor","openCollisionMasksEditor","_UI_Layout__WEBPACK_IMPORTED_MODULE_31__","_UI_Dialog__WEBPACK_IMPORTED_MODULE_19__","_UI_FlatButton__WEBPACK_IMPORTED_MODULE_15__","_UI_HelpButton__WEBPACK_IMPORTED_MODULE_20__","_PointsEditor__WEBPACK_IMPORTED_MODULE_27__","onPointsUpdated","_CollisionMasksEditor__WEBPACK_IMPORTED_MODULE_28__","onCollisionMasksUpdated","require","spritesList","thumbnailExtraStyle","spriteThumbnailImage","maxHeight","verticalAlign","AddSpriteButton","displayHint","react__WEBPACK_IMPORTED_MODULE_8___default","_UI_Theme_ThemeConsumer__WEBPACK_IMPORTED_MODULE_19__","thumbnailContainerStyle","_UI_FlatButton__WEBPACK_IMPORTED_MODULE_18__","_lingui_react__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_11___default","SortableSpriteThumbnail","_ResourcesList_ResourceThumbnail_ImageThumbnail__WEBPACK_IMPORTED_MODULE_14__","SortableList","onAddSprite","spritesCount","checkDirectionPointsAndCollisionsMasks","allDirectionSpritesHaveSamePoints","allDirectionSpritesHaveSameCollisionMasks","allDirectionSpritesHaveSamePointsAs","allDirectionSpritesHaveSameCollisionMasksAs","SpritesList","moveSprite","_checkDirectionPoints","applyResourceDefaults","Sprite","setImageName","copySpritePoints","copySpritePolygons","addSprite","editWith","externalEditor","resourceNames","_checkDirectionPoints2","externalEditorData","metadataRaw","getMetadata","singleFrame","extraOptions","fps","getTimeBetweenFrames","basename","extname","isLooping","onChangesSaved","Direction","setTimeBetweenFrames","setLoop","originalIndex","originalSprite","setMetadata","stringify","newAnimationName","_UI_MiniToolbar__WEBPACK_IMPORTED_MODULE_13__","_DirectionTools__WEBPACK_IMPORTED_MODULE_12__","onEditWith","PointsEditor","animationIndex","directionIndex","spriteIndex","samePointsForAnimations","samePointsForSprites","_updatePoints","_getCurrentElements","getCurrentElements","otherAnimation","copyAnimationsSpritePoints","chooseAnimation","_updateSamePointsToggles","chooseDirection","chooseSprite","_getCurrentElements2","every","allSpritesHaveSamePointsAs","_setSamePointsForAllAnimations","enable","_setSamePointsForAllSprites","_getCurrentElements3","hasValidSprite","_ResourcesList_ResourcePreview_ImagePreview__WEBPACK_IMPORTED_MODULE_12__","renderOverlay","imageWidth","imageHeight","imageZoomFactor","_PointsPreview__WEBPACK_IMPORTED_MODULE_11__","pointsContainer","_Utils_SpriteSelector__WEBPACK_IMPORTED_MODULE_14__","sameForAllAnimations","sameForAllSprites","setSameForAllAnimations","setSameForAllSprites","setSameForAllAnimationsLabel","setSameForAllSpritesLabel","_PointsList__WEBPACK_IMPORTED_MODULE_10__","_UI_EmptyMessage__WEBPACK_IMPORTED_MODULE_7__","SortableAddPointRow","AddPointRow","SortablePointRow","PointRow","PointsListBody","nameErrors","updateOriginPointX","_onPointsUpdated","updateOriginPointY","updateCenterPointX","updateCenterPointY","updatePointX","point","updatePointY","nonDefaultPoints","getAllNonDefaultPoints","pointsRows","pointName","pointX","pointY","onChangePointX","onChangePointY","nameError","success","hasPoint","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","delPoint","originPoint","centerPoint","originRow","centerRow","isAutomatic","onEdit","setDefaultCenterPoint","addRow","Point","addPoint","_UI_Table__WEBPACK_IMPORTED_MODULE_9__","SortablePointsListBody","muiName","PointsList","handleColumn","coordinateColumn","lockToContainerEdges","react__WEBPACK_IMPORTED_MODULE_1___default","_UI_Theme_ThemeConsumer__WEBPACK_IMPORTED_MODULE_8__","_UI_Table__WEBPACK_IMPORTED_MODULE_2__","_UI_TextField__WEBPACK_IMPORTED_MODULE_6__","parseFloat","_UI_IconButton__WEBPACK_IMPORTED_MODULE_3__","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_icons_Edit__WEBPACK_IMPORTED_MODULE_5___default","_UI_Table__WEBPACK_IMPORTED_MODULE_1__","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_2__","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_2___default","_styles__WEBPACK_IMPORTED_MODULE_4__","pointKindIdentifiers","NORMAL","ORIGIN","CENTER","PointsPreview","draggedPoint","draggedPointKind","_onStartDragPoint","_onEndDragPoint","draggingWasDone","_onMouseMove","containerBoundingRect","getBoundingClientRect","xOnContainer","yOnContainer","_renderPoint","imageSrc","transform","onPointerDown","points","automaticCenterPosition","onPointerMove","onPointerUp","CollisionMasksEditor","sameCollisionMasksForAnimations","sameCollisionMasksForSprites","spriteWidth","spriteHeight","_updateCollisionMasks","copyAnimationsSpriteCollisionMasks","_updateSameCollisionMasksToggles","allSpritesHaveSameCollisionMasksAs","_onSetCollisionMaskAutomatic","automatic","setCollisionMaskAutomatic","_setSameCollisionMasksForAllAnimations","_setSameCollisionMasksForAllSprites","_setCurrentSpriteSize","_this$state4","_getCurrentElements4","_ResourcesList_ResourcePreview_ImagePreview__WEBPACK_IMPORTED_MODULE_13__","onSize","_CollisionMasksPreview__WEBPACK_IMPORTED_MODULE_12__","isDefaultBoundingBox","isCollisionMaskAutomatic","polygons","getCustomCollisionMask","onPolygonsUpdated","_Utils_SpriteSelector__WEBPACK_IMPORTED_MODULE_15__","_PolygonsList__WEBPACK_IMPORTED_MODULE_11__","SortableAddPolygonRow","AddPolygonRow","SortableAddVerticeRow","AddVerticeRow","SortableVerticeRow","VerticeRow","SortablePolygonRow","PolygonRow","PolygonsListBody","updateVerticeX","vertice","set_x","_onPolygonUpdated","updateVerticeY","set_y","polygonRows","polygon","vertices","getVertices","isConvex","removeFromVectorPolygon2d","verticesCount","verticeX","get_x","verticeY","get_y","onChangeVerticeX","onChangeVerticeY","removeFromVectorVector2f","hasWarning","newVertice","Vector2f","push_back","newPolygon","Polygon2d","createRectangle","_UI_Table__WEBPACK_IMPORTED_MODULE_8__","SortablePolygonsListBody","PolygonsList","_UI_IconButton__WEBPACK_IMPORTED_MODULE_2__","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_3__","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_3___default","_UI_TextField__WEBPACK_IMPORTED_MODULE_4__","_material_ui_icons_Warning__WEBPACK_IMPORTED_MODULE_5__","_material_ui_icons_Warning__WEBPACK_IMPORTED_MODULE_5___default","_styles__WEBPACK_IMPORTED_MODULE_6__","_UI_Theme_ThemeConsumer__WEBPACK_IMPORTED_MODULE_7__","_UI_Theme_ThemeConsumer__WEBPACK_IMPORTED_MODULE_5__","_material_ui_icons_AddCircle__WEBPACK_IMPORTED_MODULE_2__","_material_ui_icons_AddCircle__WEBPACK_IMPORTED_MODULE_2___default","svg","vertexCircle","CollisionMasksPreview","draggedVertex","_onStartDragVertex","_onEndDragVertex","_onPointerMove","pointOnScreen","_svg","createSVGPoint","screenToSvgMatrix","getScreenCTM","inverse","pointOnSvg","matrixTransform","stroke","strokeWidth","fileRule","vertex","cx","cy","_renderBoundingBox","_renderPolygons","EmptyEditor","shapePainterObject","asShapePainterObject","areCoordinatesAbsolute","setCoordinatesRelative","setCoordinatesAbsolute","_UI_ColorField__WEBPACK_IMPORTED_MODULE_9__","getOutlineColorR","getOutlineColorG","getOutlineColorB","setOutlineColor","getOutlineOpacity","setOutlineOpacity","getOutlineSize","setOutlineSize","getFillColorR","getFillColorG","getFillColorB","setFillColor","getFillOpacity","setFillOpacity","ParticleEmitterEditor","getRendererType","rendererType","setRendererType","ParticleEmitterObject","Quad","setParticleTexture","Line","getRendererParam1","setRendererParam1","_UI_Layout__WEBPACK_IMPORTED_MODULE_14__","getRendererParam2","setRendererParam2","getParticleTexture","_UI_ColorField__WEBPACK_IMPORTED_MODULE_11__","setParticleRed1","setParticleGreen1","setParticleBlue1","getParticleAlpha1","setParticleAlpha1","setParticleRed2","setParticleGreen2","setParticleBlue2","getParticleAlpha2","setParticleAlpha2","isRenderingAdditive","setRenderingAdditive","setRenderingAlpha","getDestroyWhenNoParticles","setDestroyWhenNoParticles","getMaxParticleNb","setMaxParticleNb","getTank","setTank","getFlow","setFlow","getEmitterForceMin","setEmitterForceMin","getEmitterForceMax","setEmitterForceMax","setConeSprayAngle","getZoneRadius","setZoneRadius","getParticleGravityX","setParticleGravityX","getParticleGravityY","setParticleGravityY","getFriction","setFriction","getParticleLifeTimeMin","setParticleLifeTimeMin","getParticleLifeTimeMax","setParticleLifeTimeMax","getParticleSize1","setParticleSize1","getParticleSize2","setParticleSize2","getParticleAngle1","setParticleAngle1","getParticleAngle2","setParticleAngle2","ObjectPropertiesEditor","getProperties","propertiesSchema","updateProperty","extraInformation","getExtraObjectsInformation","_UI_AlertMessage__WEBPACK_IMPORTED_MODULE_12__","_PropertiesEditor__WEBPACK_IMPORTED_MODULE_7__","addBehaviorLine","addBehaviorText","behaviorTitle","behaviorTools","AddBehaviorLine","_UI_Grid__WEBPACK_IMPORTED_MODULE_19__","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_20__","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_8___default","BehaviorsEditor","chooseNewBehavior","newBehaviorDialogOpen","_hasBehaviorWithType","getAllBehaviorNames","getBehavior","behavior","getTypeName","addBehavior","defaultName","hasBehaviorNamed","addNewBehavior","_onChangeBehaviorName","behaviorContent","renameBehavior","_onRemoveBehavior","removeBehavior","allBehaviorNames","isNullPtr","_UI_MiniToolbar__WEBPACK_IMPORTED_MODULE_12__","_UI_IconButton__WEBPACK_IMPORTED_MODULE_10__","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_9___default","_UI_EmptyMessage__WEBPACK_IMPORTED_MODULE_11__","BehaviorComponent","BehaviorsEditorService","getEditor","_UI_HelpIcon__WEBPACK_IMPORTED_MODULE_13__","getBehaviorHelpPagePath","_NewBehaviorDialog__WEBPACK_IMPORTED_MODULE_15__","_material_ui_icons_HelpOutline__WEBPACK_IMPORTED_MODULE_1__","_material_ui_icons_HelpOutline__WEBPACK_IMPORTED_MODULE_1___default","_IconButton__WEBPACK_IMPORTED_MODULE_2__","_Utils_HelpLink__WEBPACK_IMPORTED_MODULE_3__","_Utils_Window__WEBPACK_IMPORTED_MODULE_4__","disabledItem","opacity","BehaviorListItem","_UI_List__WEBPACK_IMPORTED_MODULE_14__","leftIcon","_UI_ListIcon__WEBPACK_IMPORTED_MODULE_12__","isGDevelopIcon","NewBehaviorDialog","showDeprecated","_showDeprecated","_onNewExtensionInstalled","platform","deprecatedBehaviorsInformation","getDeprecatedBehaviorsInformation","filteredBehaviorMetadata","filterEnumeratedBehaviorMetadata","behaviors","deprecatedBehaviors","chooseBehavior","showMessageBox","warning","canBehaviorBeUsed","hasSearchNoResult","_UI_FlatButton__WEBPACK_IMPORTED_MODULE_10__","_UI_HelpButton__WEBPACK_IMPORTED_MODULE_9__","_UI_Tabs__WEBPACK_IMPORTED_MODULE_13__","_UI_SearchBar__WEBPACK_IMPORTED_MODULE_23__","_UI_EmptyMessage__WEBPACK_IMPORTED_MODULE_24__","_UI_Subheader__WEBPACK_IMPORTED_MODULE_11__","_UI_Grid__WEBPACK_IMPORTED_MODULE_18__","_material_ui_icons_VisibilityOff__WEBPACK_IMPORTED_MODULE_16___default","_material_ui_icons_Visibility__WEBPACK_IMPORTED_MODULE_15___default","_material_ui_icons_Create__WEBPACK_IMPORTED_MODULE_17___default","_ExtensionsSearch__WEBPACK_IMPORTED_MODULE_25__","onNewExtensionInstalled","showOnlyWithBehaviors","SetupGridDialog","gridOptions","ScenePropertiesDialog","setWindowDefaultTitle","windowTitle","setStopSoundsOnStartup","shouldStopSoundsOnStartup","getWindowDefaultTitle","stopSoundsOnStartup","propertiesEditors","getAllBehaviorSharedDataNames","sharedDataContent","getBehaviorSharedData","behaviorSharedData","getBehaviorSharedDatas","getContent","_PropertiesEditor__WEBPACK_IMPORTED_MODULE_13__","onEditVariables","_UI_Checkbox__WEBPACK_IMPORTED_MODULE_16__","check","some","_UI_EmptyMessage__WEBPACK_IMPORTED_MODULE_12__","onOpenMoreSettings","openObjectsList","openObjectGroupsList","openProperties","instancesSelection","getSelectedInstances","toggleInstancesList","toggleLayersList","isWindowMaskShown","toggleWindowMask","isGridShown","toggleGrid","openSetupGrid","zoomIn","accelerator","zoomOut","centerView","setZoomFactor","flexContainer","absoluteContainer","passFullSize","WrappedComponent","useFlex","FullSizeMeasurer","wrappedComponentRef","react_measure__WEBPACK_IMPORTED_MODULE_7___default","xScrollbar","yScrollbar","addScrollbars","ScrollbarContainer","_editor","xValue","yValue","xMin","xMax","yMin","yMax","_handleXChange","scrollTo","_handleYChange","_setAndAdjust","_handleViewPositionChange","throttle","getViewX","getViewY","leading","trailing","getViewPosition","wrappedEditorRef","_UI_Reponsive_ScreenTypeMeasurer__WEBPACK_IMPORTED_MODULE_10__","onViewPositionChanged","_material_ui_core_Slider__WEBPACK_IMPORTED_MODULE_7__","orientation","TagsButton","_Menu_ElementWithMenu__WEBPACK_IMPORTED_MODULE_8__","_IconButton__WEBPACK_IMPORTED_MODULE_6__","_material_ui_icons_FilterList__WEBPACK_IMPORTED_MODULE_7___default","glob","hasElectron","listContainer","getResourceName","ResourcesList","renamedResource","resourcesWithErrors","_deleteResource","onDeleteResource","_locateResourceFile","resourceFolderPath","getLocalResourceFullPath","shell","openItem","_openResourceFile","resourceFilePath","_copyResourceFilePath","clipboard","writeText","_scanForNewResources","extensions","createResource","res","pathFound","fileName","relative","createOrUpdateResource","info","_removeUnusedResources","resourceType","ProjectResourcesAdder","getAllUseless","removeAllUseless","_removeAllResourcesWithInvalidPath","getAllResourceNames","getResourceFilePathStatus","removeResource","_editName","sortableList","_rename","onRenameResource","doRename","_moveSelectionTo","destinationResource","selectedResource","moveResource","getResourcePosition","forceUpdateList","_renderResourceMenuTemplate","_index","RESOURCE_EXTENSIONS","image","audio","AudioResource","font","FontResource","video","VideoResource","checkMissingPaths","nextState","onSelectResource","allResourcesList","filteredList","filterResourcesList","listKey","_UI_Background__WEBPACK_IMPORTED_MODULE_8__","react_virtualized__WEBPACK_IMPORTED_MODULE_6__","_UI_SortableVirtualizedItemList__WEBPACK_IMPORTED_MODULE_7__","fullList","getItemName","selectedItems","onItemSelected","renamedItem","onMoveSelectionToItem","erroredItems","reactDndType","_UI_SearchBar__WEBPACK_IMPORTED_MODULE_9__","lowercaseSearchText","errorHandler","componentStack","sendErrorMessage","ErrorFallbackComponent","_PlaceholderMessage__WEBPACK_IMPORTED_MODULE_4__","_Grid__WEBPACK_IMPORTED_MODULE_10__","_material_ui_icons_BugReport__WEBPACK_IMPORTED_MODULE_3___default","_Text__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_5__","_RaisedButton__WEBPACK_IMPORTED_MODULE_6__","body","stack","ErrorBoundary","react_error_boundary__WEBPACK_IMPORTED_MODULE_2___default","FallbackComponent","onError","displayLocaleMetadata","localeMetadata","languageCode","renderLanguageSelectOption","translationRatio","percent","isStarted","languageNativeName","languageName","LanguageDialog","languageDidChange","localesToDisplay","LocalesMetadata","goodProgressLocales","startedLocales","_lingui_react__WEBPACK_IMPORTED_MODULE_15__","_PreferencesContext__WEBPACK_IMPORTED_MODULE_12__","setLanguage","isLoadingLanguage","language","_UI_SelectField__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_16__","module","exports","_UI_Dialog__WEBPACK_IMPORTED_MODULE_2__","_UI_FlatButton__WEBPACK_IMPORTED_MODULE_3__","_UI_List__WEBPACK_IMPORTED_MODULE_4__","_Utils_OptionalRequire__WEBPACK_IMPORTED_MODULE_6__","_Utils_OptionalRequire__WEBPACK_IMPORTED_MODULE_6___default","_UI_BackgroundText__WEBPACK_IMPORTED_MODULE_7__","storageProviders","onChooseProvider","onCreateNewProject","storageProvider","hiddenInOpenDialog","internalName","renderIcon","hiddenInSaveDialog","onConfirm","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_4__","_UI_Grid__WEBPACK_IMPORTED_MODULE_6__","_UI_Text__WEBPACK_IMPORTED_MODULE_7__","_UI_BackgroundText__WEBPACK_IMPORTED_MODULE_5__","verifyProjectContent","_UI_Messages_MessageBox__WEBPACK_IMPORTED_MODULE_0__","content","gdVersion","eventsFunctions","ExamplesSearchbar","_chips","isBuiltin","chosenExtensionName","onExtensionNameChosen","_UI_SearchbarWithChips__WEBPACK_IMPORTED_MODULE_8__","chips","chosenChip","onChooseChip","GDI18nProvider","catalogs","_loadCatalog","catalog","_loadLanguage","prevProps","setupI18n","getTranslation","getTranslationFunction","./af_ZA/messages","./ar_SA/messages","./az_AZ/messages","./bg_BG/messages","./bn_BD/messages","./ca_ES/messages","./cs_CZ/messages","./da_DK/messages","./de_DE/messages","./el_GR/messages","./en/messages","./eo_UY/messages","./es_ES/messages","./fa_IR/messages","./fi_FI/messages","./fil_PH/messages","./fr_FR/messages","./ha_HG/messages","./he_IL/messages","./hi_IN/messages","./hu_HU/messages","./id_ID/messages","./it_IT/messages","./ja_JP/messages","./ko_KR/messages","./lt_LT/messages","./mr_IN/messages","./ms_MY/messages","./my_MM/messages","./nl_NL/messages","./no_NO/messages","./pl_PL/messages","./pseudo_LOCALE/messages","./pt_BR/messages","./pt_PT/messages","./ro_RO/messages","./ru_RU/messages","./sk_SK/messages","./sl_SI/messages","./sr_CS/messages","./sr_SP/messages","./sv_SE/messages","./th_TH/messages","./tr_TR/messages","./uk_UA/messages","./ur_PK/messages","./yo_NG/messages","./zh_CN/messages","./zh_TW/messages","webpackAsyncContext","req","ids","t","code","Column","Spacer","marginsSize","FlatButton","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_7__","autoFocus","_Grid__WEBPACK_IMPORTED_MODULE_8__","noShrink","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_2__","variant","RaisedButton","defaultBody","noMarginBody","flexBody","actionsContainerWithSecondaryActions","dialogActions","_Reponsive_ResponsiveWindowMeasurer__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_2__","fullScreen","disableBackdropClick","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_3__","start","func","result","mapReverseFor","cppVector","EmptyMessage","_Theme_ThemeConsumer__WEBPACK_IMPORTED_MODULE_2__","_BackgroundText__WEBPACK_IMPORTED_MODULE_3__","messageStyle","computeTextFieldStyleProps","hiddenLabel","TextField","blur","helperText","_MarkdownText__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_9__","InputLabelProps","shrink","placeholder","multiline","InputProps","disableUnderline","underlineShow","inputProps","onFocus","inputRef","noMarginTextFieldInListItemTopOffset","_ThemeContext__WEBPACK_IMPORTED_MODULE_1__","ThemeConsumer","gdevelopTheme","CTRL_KEY","SHIFT_KEY","SPACE_KEY","MID_MOUSE_BUTTON","DeprecatedKeyboardShortcuts","classCallCheck","_isControlPressed","metaPressed","rawCtrlPressed","_onKeyDown","isFocused","altPressed","shiftPressed","spacePressed","_onKeyUp","_onMouseDown","mouseMidButtonPressed","_onMouseUp","_onKeyPress","_noop","mount","addEventListener","removeEventListener","InstancesRenderer","layersRenderers","layerRenderer","getInstanceRect","getPixiContainer","resetRenderersFor","removeChild","transformRect","transformPoint","endPos","SelectedInstances","onResize","onResizeEnd","onRotate","onRotateEnd","rectanglesContainer","selectedRectangles","resizeButton","resizeIcon","fromImage","rightResizeButton","bottomResizeButton","rotateButton","_screenType","_makeButton","objectButton","onEnd","buttonMode","buttonObject","canvasPosition","shape","_getButtonSizes","buttonSize","smallButtonSize","buttonPadding","newRectangle","instanceRect","selectionRectangle","pop","resizeButtonPos","rightResizeButtonPos","bottomResizeButtonPos","rotateButtonPos","_renderButton","InstancesSelection","highlightedInstance","highlightRectangle","tooltipBackground","tooltipText","tooltipInfo","drawRoundedRect","InstancesResizer","instanceSizes","totalDeltaX","totalDeltaY","proportional","initialSize","selectedInstance","_roundWidth","_getSizeDeltaX","_roundHeight","_getSizeDeltaY","InstancesRotator","instanceAngles","initialAngle","atan2","_getNewAngle","InstancesMover","instancePositions","noGridSnap","followAxis","initialPosition","_roundXPosition","_getMoveDeltaX","_roundYPosition","_getMoveDeltaY","pixiGrid","sceneStartPoint","sceneEndPoint","startXPos","startYPos","endXPos","ceil","endYPos","Xpos","Ypos","WindowBorder","windowRectangle","getGameResolutionWidth","getGameResolutionHeight","displayedRectangle","windowMask","BackgroundColor","pixiRenderer","FpsLimiter","maxFps","_lastFrameTime","Date","now","_interval","delta","stopPIXITicker","ticker","shared","stop","startPIXITicker","StatusBar","getLastCursorSceneCoordinates","_getLastCursorSceneCoordinates","_statusBarContainer","_statusBarBackground","_statusBarText","resize","_this$_getLastCursorS","_this$_getLastCursorS2","slicedToArray","CanvasCursor","canvas","shouldMoveView","canvasArea","dropCursor","DropTarget","makeDropTarget","objectWithContextReactDndType","InstancesEditorContainer","lastContextMenuX","lastContextMenuY","lastCursorX","lastCursorY","fpsLimiter","getZoomFactor","zoomFactor","onChangeOptions","_instancesAdder","_onBackgroundClicked","view","keyboardShortcuts","shouldMultiSelect","clearSelection","onInstancesSelected","_onPanMove","sceneDeltaX","sceneDeltaY","scrollBy","_getLayersVisibility","layersVisibility","_onPanEnd","hasStartedSelectionRectangle","instancesSelected","selectInstances","_onInstanceClicked","_onOverInstance","setInstance","_onDownInstance","shouldCloneInstances","initialInstances","insertInitialInstance","selectInstance","_onOutInstance","_onMoveInstance","isInstanceSelected","instancesMover","moveBy","shouldFollowAxis","shouldNotSnapToGrid","_onMoveInstanceEnd","endMove","onInstancesMoved","_onResize","instancesResizer","resizeBy","shouldResizeProportionally","_onResizeEnd","endResize","onInstancesResized","_onRotate","instancesRotator","rotateBy","_onRotateEnd","endRotate","onInstancesRotated","clearHighlightedInstance","moveSelection","getLastContextMenuSceneCoordinates","_renderScene","_unmounted","_renderingPaused","shouldUpdate","canvasCursor","windowBorder","statusBar","nextFrame","requestAnimationFrame","pauseSceneRendering","cancelAnimationFrame","restartSceneRendering","_initializeCanvasAndRenderer","antialias","offsetX","offsetY","onmousewheel","shouldZoom","zoomBy","wheelDelta","shouldScrollHorizontally","setAttribute","backgroundArea","ViewPosition","initialViewX","initialViewY","Grid","onDeleteSelection","pinchHandler","PinchHandler","_mountEditorComponents","getInstanceMeasurer","HighlightedInstance","WindowMask","unmount","forceNextUpdate","setOptions","setScreenType","pauseRendering","scrollToInstance","react_default","InstancesEditor_DropTarget","hover","monitor","_monitor$getClientOff","getClientOffset","canvasRect","selectedObjectNames","didDrop","_monitor$getClientOff2","commitTemporaryInstances","onInstancesAdded","objectSpread","showDropCursor","effectsColumn","enumerateEffectsMetadata","extensionsList","getExtensionEffectTypes","getEffectMetadata","effectMetadata","effectType","parametersSchema","parameterName","propertyLabel","propertyDescription","getExtraDescription","effect","getDoubleParameter","setDoubleParameter","getBooleanParameter","setBooleanParameter","getStringParameter","setStringParameter","setEffectDefaultParameters","clearParameters","getEnumeratedEffectMetadata","allEffectDescriptions","EffectsList","effectsContainer","onEffectsUpdated","preferences","showEffectParameterNames","setShowEffectParameterNames","allEffectMetadata","updateState","useForceUpdate","addEffect","hasEffectNamed","insertNewEffect","getEffectsCount","node_modules_react","react","DismissableAlertMessage","getEffectAt","getEffectType","MiniToolbar","SemiControlledTextField","SelectField","newEffectType","setEffectType","chooseEffectType","SelectOption","ElementWithMenu","IconButton","MoreVert_default","removeEffect","BackgroundText","MarkdownText","PropertiesEditor","renderExtraDescriptionText","Add_default","EffectsListDialog","Dialog","HelpButton","BackgroundColorRow","onBackgroundColorChanged","node_modules_react_default","Table","ColorPicker","SortableLayerRow","effectsCount","onEditEffects","onChangeVisibility","DragHandle","InlineCheckbox","Visibility_default","VisibilityOff_default","Delete_default","LayersListBody","layersCount","containerLayersList","hasLayerNamed","onRenameLayer","defineProperty","onRemoveLayer","doRemove","removeLayer","setVisibility","SortableLayersListBody","LayersList","effectsEditedLayer","_editEffects","_addLayer","insertNewLayer","moveLayer","EffectsListDialog_EffectsListDialog","Create","SvgIcon","viewBox","fillRule","Step","Destroy","Function","Activate","Deactivate","MethodListItem","List","BehaviorMethodSelectorDialog","Subheader","BehaviorMethodSelectorDialog_MethodListItem","getGravatarUrl","email","hash","md5","trim","ProfileDetails","profile","Avatar","Text","PlaceholderLoader","UsagesDetails","usages","usage","format","createdAt","SubscriptionDetails","subscription","onChangeSubscription","planId","ProfileDialog","UserProfileContext","userProfile","authenticated","onRefreshUserProfile","onLogout","Tabs","CreateProfile","onLogin","onCreateAccount","BehaviorPropertiesEditor","ShapePreview","draggedIndex","_onVertexDown","onMoveVertex","polygonOrigin","dimensionA","dimensionB","fixedWidth","fixedHeight","halfLength","filerule","_renderBox","_renderCircle","_renderEdge","_renderPolygon","PolygonEditor","edges","v1","v2","zProductIsPositive","alignedX","alignedY","onChangeVertexX","onChangeVertexY","_isPolygonConvex","Warning_default","toString","AddCircle_default","NumericProperty","propertyName","BitProperty","spacing","Checkbox","Physics2Editor","bitsValue","bits","layersValues","masksValues","Layout","ResourceSelector","ImagePreview","ShapePreview_ShapePreview","newX","newY","PolygonEditor_PolygonEditor","splice","_isBitEnabled","_enableBit","components","Physics2::Physics2Behavior","ProjectPropertiesDialog","possibleConstructorReturn","getPrototypeOf","_subscriptionChecker","gameResolutionWidth","gameResolutionHeight","adaptGameResolutionAtRuntime","author","version","packageName","adMobAppId","scaleMode","sizeOnStartupMode","showGDevelopSplash","minFPS","maxFPS","isFolderProject","setGameResolutionSize","setAdaptGameResolutionAtRuntime","setPackageName","setOrientation","setAdMobAppId","setScaleMode","setSizeOnStartupMode","setMinimumFPS","setMaximumFPS","getLoadingScreen","setFolderProject","displayProjectErrorsBox","getErrors","getAdaptGameResolutionAtRuntime","getPackageName","getOrientation","getAdMobAppId","getScaleMode","getSizeOnStartupMode","isGDevelopSplashShown","getMinimumFPS","getMaximumFPS","checkHasSubscription","validatePackageName","SubscriptionChecker","subscriptionChecker","mode","ExtensionsSearchDialog","EventsFunctionsExtensionsContext","eventsFunctionsExtensionOpener","getEventsFunctionsExtensionOpener","CloudDownload_default","readEventsFunctionExtensionFile","serializedExtension","hasEventsFunctionsExtensionNamed","addSerializedExtensionToProject","importExtension","ExtensionsSearch","onRegistryLoaded","memo","LAYOUT_CLIPBOARD_KIND","EXTERNAL_LAYOUT_CLIPBOARD_KIND","EXTERNAL_EVENTS_CLIPBOARD_KIND","EVENTS_FUNCTIONS_EXTENSION_CLIPBOARD_KIND","noIndentNestedList","itemName","itemTextField","ProjectStructureItem","onRefresh","indentNestedItems","objectWithoutProperties","listItem","groupBackgroundColor","separatorColor","nestedListStyle","displayReloadButton","onReload","reloadButtonTooltip","Item","editingName","charCode","displayMenuButton","onEditName","addLabel","canPaste","canMoveUp","onMoveUp","canMoveDown","onMoveDown","ProjectManager","renamedItemKind","renamedItemName","projectPropertiesDialogOpen","variablesEditorOpen","extensionsSearchDialogOpen","_onEditName","_copyLayout","Clipboard","serializeToJSObject","_cutLayout","onDeleteLayout","_pasteLayout","_Clipboard$get","copiedLayout","newLayout","insertNewLayout","unserializeFromJSObject","updateBehaviorsSharedData","_addLayout","_addExternalEvents","insertNewExternalEvents","_addExternalLayout","hasExternalLayoutNamed","insertNewExternalLayout","_addEventsFunctionsExtension","insertNewEventsFunctionsExtension","_moveUpLayout","swapLayouts","_moveDownLayout","getLayoutsCount","_copyExternalEvents","_cutExternalEvents","onDeleteExternalEvents","_pasteExternalEvents","_Clipboard$get2","copiedExternalEvents","newExternalEvents","_moveUpExternalEvents","swapExternalEvents","_moveDownExternalEvents","getExternalEventsCount","_copyExternalLayout","_cutExternalLayout","onDeleteExternalLayout","_pasteExternalLayout","_Clipboard$get3","copiedExternalLayout","newExternalLayout","_moveUpExternalLayout","swapExternalLayouts","_moveDownExternalLayout","getExternalLayoutsCount","_copyEventsFunctionsExtension","_cutEventsFunctionsExtension","onDeleteEventsFunctionsExtension","_pasteEventsFunctionsExtension","_Clipboard$get4","copiedEventsFunctionsExtension","newEventsFunctionsExtension","onReloadEventsFunctionsExtensions","_moveUpEventsFunctionsExtension","swapEventsFunctionsExtensions","_moveDownEventsFunctionsExtension","getEventsFunctionsExtensionsCount","_onSearchChange","_onRequestSearch","hasMainMenu","Save_default","onSaveProject","FileCopy_default","onSaveProjectAs","AddToHomeScreen_default","onExportProject","Close_default","onCloseProject","Settings_default","onOpenPreferences","AccountCircle_default","onOpenProfile","isFullscreen","Fullscreen_default","requestFullscreen","eventsFunctionsExtensionsError","forceOpen","_renderMenu","ProjectManager_ProjectStructureItem","ListIcon","initiallyOpen","autoGenerateNestedIndicator","renderNestedItems","SettingsApplications_default","VariableTree","PhotoLibrary_default","onOpenPlatformSpecificAssets","ArtTrack_default","onOpenResources","filterProjectItemsList","ProjectManager_Item","onRenameLayout","ListCommonItem","onAddLayout","onRenameExternalEvents","onAddExternalEvents","enumerateExternalLayouts","onOpenExternalLayout","onRenameExternalLayout","onAddExternalLayout","onOpenEventsFunctionsExtension","onRenameEventsFunctionsExtension","onAddEventsFunctionsExtension","SearchBar","searchBar","ProjectManager_ProjectPropertiesDialog","ExtensionsSearchDialog_ExtensionsSearchDialog","InstructionSelector","InstructionOrExpressionSelector","parametersEditor","InstructionEditor","chooseType","InstructionSelector_InstructionSelector","Paper","square","elevation","InstructionParametersEditor","InstructionEditorDialog","InstructionEditor_InstructionEditor","EditVariableRow","hasClipboard","TreeTable","toolColumnHeader","Copy","Paste","addVariableMessage","InstructionOrObjectSelector","selectedObjectTags","_scrollView","_selectedItem","enumerateFreeInstructions","initialInstructionTypePath","findInTree","_getAllObjectTags","tagsSet","Set","enumerateObjects","allObjectsList","getTagsFromString","tag","from","_buildObjectTagsMenuTemplate","buildTagsMenuTemplate","noTagLabel","getAllTags","selectedTags","_enumerateObjectsAndG","enumerateObjectsAndGroups","allGroupsList","displayedObjectsList","filterObjectsList","displayedObjectGroupsList","filterGroupsList","displayedInstructionsList","filterInstructionsList","isSearching","hasResults","onSubmitSearch","oldSearchText","ScrollView","TagChips","tags","objectWithContext","selectedValue","getObjectListItemKey","getObjectOrObjectGroupListItemValue","renderObjectListItem","getObjectGroupListItemKey","renderGroupObjectsListItem","renderInstructionOrExpressionListItem","instructionOrExpressionMetadata","getInstructionListItemValue","renderInstructionTree","instructionTreeNode","initiallyOpenedPath","selectedItemRef","GDevelopLogo","ScrollBackground","palette","canvasColor","innerContainer","centerContainer","logoPaper","StartPage","aboutDialogOpen","canOpen","onOpen","onOpenProjectManager","onOpenAboutDialog","onOpenHelpFinder","onOpenLanguageDialog","StartPage_ScrollBackground","StartPage_GDevelopLogo","Language_default","BaseEditor","timeField","timeIcon","AnimationPreview","currentFrameIndex","currentFrameElapsedTime","paused","timeBetweenFrames","nextUpdate","replay","play","pause","_updateAnimation","spritesContainer","newFrameIndex","newFrameElapsedTime","count","onChangeTimeBetweenFrames","Timer_default","time","precision","Replay_default","PlayArrow_default","Pause_default","repeatContainer","spacer","formatTime","Number","DirectionTools","timeError","previewOpen","saveTimeBetweenFrames","newTime","newTimeIsValid","isNaN","setLooping","openPreview","imageResourceExternalEditors","ResponsiveWindowMeasurer","displayName","Brush_default","Repeat_default","AnimationPreview_AnimationPreview","UnknownEvent","unknownEvent","BuiltinCommonInstructions::Standard","BuiltinCommonInstructions::Group","BuiltinCommonInstructions::Comment","BuiltinCommonInstructions::ForEach","BuiltinCommonInstructions::Repeat","BuiltinCommonInstructions::While","WhileEvent","BuiltinCommonInstructions::Link","BuiltinCommonInstructions::JsCode","registerEvent","renderFunction","listItemWith32PxIconHeight","listItemWithoutIconHeight","ListItem","_React$Component","isOpen","_renderListItemSecondaryAction","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_ListItemSecondaryAction__WEBPACK_IMPORTED_MODULE_12__","_material_ui_core_Tooltip__WEBPACK_IMPORTED_MODULE_21__","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_15__","edge","aria-label","_material_ui_icons_Refresh__WEBPACK_IMPORTED_MODULE_16___default","_Menu_ElementWithMenu__WEBPACK_IMPORTED_MODULE_20__","elementWithMenu","_elementWithMenu","_material_ui_icons_MoreVert__WEBPACK_IMPORTED_MODULE_17___default","_material_ui_icons_OpenInNew__WEBPACK_IMPORTED_MODULE_18___default","_material_ui_icons_Remove__WEBPACK_IMPORTED_MODULE_19___default","_openContextMenu","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_9__","dense","disableRipple","_material_ui_core_ListItemIcon__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_11__","secondary","_material_ui_icons_ExpandLess__WEBPACK_IMPORTED_MODULE_13___default","_material_ui_icons_ExpandMore__WEBPACK_IMPORTED_MODULE_14___default","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_8__","disablePadding","ContainerComponent","displayAddIcon","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_22___default","displaySearchIcon","_material_ui_icons_Search__WEBPACK_IMPORTED_MODULE_23___default","_React$Component2","indexName","appId","apiKey","algoliaOptions","hitsPerPage","DocSearchArea","client","algoliasearch","_handleSearchTextChange","_launchSearchRequest","debounce","search","query","params","hits","_renderResult","hierarchy","lvl0","lvl1","lvl2","lvl3","lvl4","lvl5","lvl6","objectID","url","visibility","HelpFinder","_sendHelpSearch","sendHelpSearch","sendHelpFinderOpened","DocSearchArea_DocSearchArea","EVENTS_BASED_BEHAVIOR_CLIPBOARD_KIND","getEventsBasedBehaviorName","EventsBasedBehaviorsList","renamedEventsBasedBehavior","_deleteEventsBasedBehavior","askForConfirmation","destinationEventsBasedBehavior","getPosition","_copyEventsBasedBehavior","_cutEventsBasedBehavior","_pasteEventsBasedBehavior","copiedEventsBasedBehavior","newEventsBasedBehavior","_renderEventsBasedBehaviorMenuTemplate","_addNewEventsBasedBehavior","item","filterEventsBasedBehaviorsList","Background","es","SortableVirtualizedItemList","onAddNewItem","addNewItemLabel","EVENTS_FUNCTION_CLIPBOARD_KIND","getEventsFunctionName","EventsFunctionsList","renamedEventsFunction","_deleteEventsFunction","removeEventsFunction","destinationEventsFunction","moveEventsFunction","getEventsFunctionPosition","_copyEventsFunction","_cutEventsFunction","_pasteEventsFunction","copiedEventsFunction","newEventsFunction","insertNewEventsFunction","_renderEventsFunctionMenuTemplate","_addNewEventsFunction","eventsFunctionName","filterEventFunctionsList","getEventsFunctionAt","enumerateEventsFunctions","fs","setupAutocompletions","monaco","importAllJsFilesFromFolder","folderPath","readdir","filenames","filename","endsWith","readFile","fileError","languages","typescript","javascriptDefaults","addExtraLib","findGDJS","gdjsRoot","runtimePath","extensionsPath","eventToolsPath","folderNames","folderName","monacoEditorOptions","scrollBeyondLastLine","minimap","monacoCompletionsInitialized","monacoThemesInitialized","CodeEditor","MonacoEditor","setupEditorThemes","getAllThemes","codeEditorTheme","themeData","defineTheme","themeName","setupEditorCompletions","setCompilerOptions","ScriptTarget","ES6","allowNonTsExtensions","allowJs","checkJs","_handleContextMenu","inherits","createClass","loadMonacoEditor","default","handleLoadError","theme","codeEditorThemeName","editorWillMount","editorDidMount","ExpressionParametersEditor","onChangeParameter","getNonCodeOnlyParametersCount","minHeightContainer","ExpressionParametersEditorDialog","onDone","ExpressionParametersEditor_ExpressionParametersEditor","editedIndex","oldValue","SubscriptionPendingDialog","hasPlan","callback","delay","savedCallback","setInterval","clearInterval","useInterval","CircularProgress","VerifiedUser_default","descriptionText","card","bulletIcon","bulletText","SubscriptionDialog","isLoading","subscriptionPendingDialogOpen","choosePlan","plan","getAuthorizationHeader","sendChoosePlanClicked","stripeSubscriptionId","changeUserSubscription","uid","handleUpdatedSubscriptionSuccess","handleUpdatedSubscriptionFailure","getRedirectToCheckoutUrl","_isLoading","sendSubscriptionDialogShown","monthlyPriceInEuros","getSubscriptionPlans","Card","CardHeader","_renderPrice","subheader","smallDescription","CardContent","descriptionBullets","descriptionBullet","CheckCircle_default","isLocalAppOnly","extraDescription","CardActions","LeftLoader","PlaceholderMessage","ChangelogDialog","_lingui_react","Changelog","onUpdated","ChangelogDialogContainer","defaultOpen","ChangelogDialog_ChangelogDialog","verifyIfIsNewVersion","ChangelogDialogContainer_ChangelogDialogContainer","autoDisplayChangelog","iconButton","IconButton_IconButton","Tooltip","isMobile","placement","enterDelay","focused","getInputNode","_TextField__WEBPACK_IMPORTED_MODULE_7__","UrlsCache","projectCache","cache","_getProjectCache","systemFilename","disableCacheBurst","resourcesNames","_cache","burstUrl","cachedUrl","getCachedUrl","_isLocalFile","file","resourceAbsolutePath","cacheLocalFileUrl","cacheUrl","resourceRelativePath","getFullUrl","serializeToJSON","serializable","methodName","serializedElement","SerializerElement","Serializer","toJSON","optionalProject","fromJSObject","_FlatButton__WEBPACK_IMPORTED_MODULE_2__","_material_ui_icons_HelpOutline__WEBPACK_IMPORTED_MODULE_3___default","hasValidValue","childrenValues","child","childValue","displayedValue","_MarkdownText__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_7__","SelectProps","native","actionsContainer","smallWidthContainer","dropIndicator","cantDropIndicator","nameAndIconContainer","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_2__","buttonCommonStyles","textFieldWithButtonLayoutStyles","filledTextFieldWithLabelRightButtonMargins","filledTextFieldWithoutLabelRightButtonMargins","standardTextFieldWithLabelRightButtonMargins","standardTextFieldWithoutLabelRightButtonMargins","TextFieldWithButtonLayout","noFloatingLabelText","renderTextField","renderButton","ResponsiveLineStackLayout","isFirstChild","_Reponsive_ResponsiveWindowMeasurer__WEBPACK_IMPORTED_MODULE_3__","_Grid__WEBPACK_IMPORTED_MODULE_2__","addSpacers","allAlertMessages","initialPreferences","autoDownloadUpdates","hiddenAlertMessages","lastLaunchedVersion","eventsSheetShowObjectThumbnails","autosaveOnPreview","useNewInstructionEditorDialog","useGDJSDevelopmentWatcher","setThemeName","setCodeEditorThemeName","setAutoDownloadUpdates","setAutoDisplayChangelog","showAlertMessage","setEventsSheetShowObjectThumbnails","setAutosaveOnPreview","setUseNewInstructionEditorDialog","setUseGDJSDevelopmentWatcher","setEventsSheetUseAssignmentOperators","_material_ui_core_Table__WEBPACK_IMPORTED_MODULE_6__","TableBody","_material_ui_core_TableBody__WEBPACK_IMPORTED_MODULE_7__","TableHeader","_React$Component3","_material_ui_core_TableHead__WEBPACK_IMPORTED_MODULE_9__","TableHeaderColumn","_React$Component4","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_8__","TableRow","_React$Component5","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_10__","TableRowColumn","_React$Component6","exists","potentialName","AlertMessage","onHide","renderRightButton","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_3__","_Theme_ThemeConsumer__WEBPACK_IMPORTED_MODULE_10__","_Grid__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons_Info__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_icons_Error__WEBPACK_IMPORTED_MODULE_6___default","_FlatButton__WEBPACK_IMPORTED_MODULE_8__","_Theme_ThemeConsumer__WEBPACK_IMPORTED_MODULE_6__","gdevelopIconsCSSFilter","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_FormControlLabel__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Checkbox__WEBPACK_IMPORTED_MODULE_2__","control","handleFocus","handleBlur","handleInput","handleCancel","handleKeyPressed","nonEmpty","root","iconButtonClose","iconStyle","iconButtonSearch","iconButtonFilter","searchContainer","getStyles","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_9__","_TextField__WEBPACK_IMPORTED_MODULE_8__","_Menu_ElementWithMenu__WEBPACK_IMPORTED_MODULE_13__","_IconButton__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons_FilterList__WEBPACK_IMPORTED_MODULE_12___default","_material_ui_icons_Search__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_10___default","app","process","isDarwin","test","tryPath","onExists","onNoAccess","access","constants","R_OK","appPath","getAppPath","cwd","pathToRoot","rootPath","onFound","onNotFound","devPath","_contextMenu","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","_wrappedElement","HTMLElement","dimensions","wrappedElement","_ContextMenu__WEBPACK_IMPORTED_MODULE_8__","inputRoot","inputInput","flexGrow","menuPopper","muiZIndex","menuPaper","SemiControlledAutoComplete","inputValue","currentInputValue","_MarkdownText__WEBPACK_IMPORTED_MODULE_19__","downshift__WEBPACK_IMPORTED_MODULE_9__","selectedItem","onInputValueChange","itemToString","getInputProps","getItemProps","getLabelProps","getMenuProps","closeMenu","openMenu","highlightedIndex","_getInputProps","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_6__","textFieldProps","other","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_10__","textFieldStyle","_material_ui_core_Popper__WEBPACK_IMPORTED_MODULE_15__","suppressRefError","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_13__","clientWidth","lowercaseInputValue","filterDataSource","itemProps","menuItemProps","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_12__","isHighlighted","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_11__","_material_ui_core_ListItemIcon__WEBPACK_IMPORTED_MODULE_17__","renderItem","_Theme_ThemeConsumer__WEBPACK_IMPORTED_MODULE_7__","toolbar","toolbarTextStyle","MiniToolbarText","_Text__WEBPACK_IMPORTED_MODULE_8__","innerHeight","_material_ui_core_Tabs__WEBPACK_IMPORTED_MODULE_6__","Tab","_material_ui_core_Tab__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_3__","textShadow","emptyMessage","shadowColor","getBuildArtifactUrl","uploadBuildFile","buildElectron","buildWeb","buildCordovaAndroid","getBuild","getBuilds","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","_Utils_TimestampedId__WEBPACK_IMPORTED_MODULE_1__","_ApiConfigs__WEBPACK_IMPORTED_MODULE_2__","build","blob","onProgress","makeTimestampedId","GDevelopBuildUpload","awsS3Client","putObject","Body","Bucket","destinationBucket","Key","progress","total","loaded","userId","targets","authorizationHeader","axios","post","GDevelopBuildApi","baseUrl","headers","Authorization","response","buildId","_Renderers_RenderedUnknownInstance__WEBPACK_IMPORTED_MODULE_0__","_Renderers_RenderedSpriteInstance__WEBPACK_IMPORTED_MODULE_1__","_Renderers_RenderedTiledSpriteInstance__WEBPACK_IMPORTED_MODULE_2__","_Renderers_RenderedPanelSpriteInstance__WEBPACK_IMPORTED_MODULE_3__","_Renderers_RenderedTextInstance__WEBPACK_IMPORTED_MODULE_4__","_Renderers_RenderedShapePainterInstance__WEBPACK_IMPORTED_MODULE_5__","_Renderers_RenderedTextEntryInstance__WEBPACK_IMPORTED_MODULE_6__","_Renderers_RenderedParticleEmitterInstance__WEBPACK_IMPORTED_MODULE_7__","_Renderers_RenderedSkeletonInstance__WEBPACK_IMPORTED_MODULE_8__","_PixiResourcesLoader__WEBPACK_IMPORTED_MODULE_9__","_ResourcesLoader__WEBPACK_IMPORTED_MODULE_10__","_Renderers_RenderedInstance__WEBPACK_IMPORTED_MODULE_11__","pixi_js__WEBPACK_IMPORTED_MODULE_12__","_Utils_OptionalRequire__WEBPACK_IMPORTED_MODULE_13__","_Utils_OptionalRequire__WEBPACK_IMPORTED_MODULE_13___default","requirableModules","renderers","unknownObjectType","TiledSpriteObject::TiledSprite","PanelSpriteObject::PanelSprite","TextObject::Text","PrimitiveDrawing::Drawer","RenderedShapePainterInstance","TextEntryObject::TextEntry","RenderedTextEntryInstance","ParticleSystem::ParticleEmitter","SkeletonObject::Skeleton","RenderedSkeletonInstance","PixiResourcesLoader","registerInstanceRenderer","registerModule","requirePath","requireModule","requireBasePath","_layout","angleInDegrees","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_1__","layers","ThemeContext","markdownCustomRenderers","isStandaloneText","paragraph","react_markdown__WEBPACK_IMPORTED_MODULE_2___default","escapeHtml","markdownRootClassName","electronClipboard","internalClipboard","mangleClipboardKind","000kind","readText","isPathInProjectFolder","copyAllToProjectFolder","_ResourcesLoader__WEBPACK_IMPORTED_MODULE_0__","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_1__","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_1___default","newlyCreatedResource","resourcePath","lastIndexOf","resourcePaths","resourceBasename","resourceNewPath","copyFile","normalize","existsSync","newResource","setSmooth","isSameObjectWithContext","enumerateObjectTypes","enumerateGroups","_Utils_MapFor__WEBPACK_IMPORTED_MODULE_0__","lodash_flatten__WEBPACK_IMPORTED_MODULE_1__","lodash_flatten__WEBPACK_IMPORTED_MODULE_1___default","_Utils_TagsHelper__WEBPACK_IMPORTED_MODULE_2__","filterObject","containerObjectsList","getObjectsCount","getObjectAt","projectObjectsList","getIconFilename","objectTags","hasStringAllTags","getAt","filterGroup","containerGroups","containerGroupsList","projectGroups","projectGroupsList","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_1__","shouldNeverBeCalled","RaisedButtonWithMenu","_addFrom","_onChangeResourceName","_autoComplete","forceInputValueTo","_onResetResourceName","notExistingError","_editWith","resourceExternalEditor","initialResourceMetadata","initialResourceMetadataRaw","externalEditorOptions","newResourceData","toConsumableArray","getKind","resourceSourceItems","_getResourceSourceItems","resourceItems","autoCompleteData","externalEditors","autoComplete","Backspace_default","UI_RaisedButtonWithMenu","onEditObjectVariables","_index__WEBPACK_IMPORTED_MODULE_10__","VariablesContainer","removeTag","selectedTag","onEditTags","editTagsLabel","allTags","footerMenuItems","newTags","tagsString","getStringFromTags","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","return","hexToRGBColor","hex","hexNumber","getInstructionListItemKey","getSubheaderListItemKey","objectOrObjectGroupName","mangleName","loadProjectEventsFunctionsExtensions","eventsFunctionCodeWriter","loadProjectEventsFunctionsExtension","getEventsFunctionsExtensionAt","skipCodeGeneration","generateEventsFunctionExtension","addNewExtension","PlatformExtension","declareExtension","codeNamespacePrefix","declareBehaviorMetadata","codeNamespace","includeFile","getIncludeFileFor","setIncludeFile","behaviorMethodMangledNames","MapStringString","declareBehaviorPropertiesInstructionAndExpressions","eventsFunctionMangledName","instructionOrExpression","declareBehaviorInstructionOrExpressionMetadata","declareEventsFunctionParameters","getCodeExtraInformation","setFunctionName","includeFiles","SetString","behaviorCodeGenerator","BehaviorCodeGenerator","generateRuntimeBehaviorCompleteCode","addIncludeFile","writeBehaviorCode","generateBehavior","generateFreeFunction","extensionOrBehaviorMetadata","eventsFunctionsExtensionOrEventsBasedBehavior","declareInstructionOrExpressionMetadata","addCodeOnlyParameter","codeExtraInformation","EventsCodeGenerator","generateEventsFunctionCode","writeFunctionCode","unloadProjectEventsFunctionsExtensions","removeExtension","isAnEventFunctionMetadata","getFunctionNameFromType","parts","getFreeEventsFunctionType","getParametersIndexOffset","isEventsBasedBehaviorMethod","columnContainer","fieldContainer","subPropertiesEditorContainer","subHeader","getFieldValue","getFieldLabel","_onInstancesModified","onInstancesModified","_getFieldDescription","descriptions","_renderInputField","_UI_InlineCheckbox__WEBPACK_IMPORTED_MODULE_8__","_UI_MarkdownText__WEBPACK_IMPORTED_MODULE_17__","_UI_ColorField__WEBPACK_IMPORTED_MODULE_16__","_UI_Layout__WEBPACK_IMPORTED_MODULE_19__","_material_ui_icons_Edit__WEBPACK_IMPORTED_MODULE_15___default","_renderSelectField","_UI_SelectOption__WEBPACK_IMPORTED_MODULE_14__","_UI_SelectField__WEBPACK_IMPORTED_MODULE_13__","_UI_FlatButton__WEBPACK_IMPORTED_MODULE_12__","_renderResourceField","_ResourcesList_ResourceSelector__WEBPACK_IMPORTED_MODULE_9__","fields","_UI_Grid__WEBPACK_IMPORTED_MODULE_21__","ToolbarGroup","_Theme_ThemeConsumer__WEBPACK_IMPORTED_MODULE_1__","toolbarGroupStyle","_IconButton__WEBPACK_IMPORTED_MODULE_1__","ToolbarIcon","borderLeftStyle","borderLeftWidth","Toggle","_material_ui_core_FormControlLabel__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_Switch__WEBPACK_IMPORTED_MODULE_7__","toggled","onToggle","initialUserProfile","limits","_MainFrame_Preferences_PreferencesContext__WEBPACK_IMPORTED_MODULE_1__","_AlertMessage__WEBPACK_IMPORTED_MODULE_2__","defaultState","reloadProjectEventsFunctionsExtensions","addButton","InstructionsList","_onPasteInstructions","instructions","instructionContext","_Instruction__WEBPACK_IMPORTED_MODULE_7__","isInstructionSelected","instructionsListContext","addButtonDefaultLabel","_DropIndicator__WEBPACK_IMPORTED_MODULE_10__","onPointerEnter","hasClipboardConditions","hasClipboardActions","onPointerLeave","tree","pathInTree","compact","groupInfo","existingGroupInfo","instructionOrGroup","searchResult","freeActionsToAddToObject","BuiltinObject","","freeConditionsToAddToObject","freeActionsToAddToBehavior","freeConditionsToAddToBehavior","Physics2","freeInstructionsToRemove","filterInstructionsToRemove","typesToRemove","types","enumerateExtraBehaviorInstructions","extensionsExtraInstructions","objectExtraInstructions","instructionMetadataMap","getAllConditions","getAllActions","enumerateInstruction","enumerateExtraObjectInstructions","instrMetadata","enumerateExtensionInstructions","instructionsTypes","extensionFreeInstructions","getAllConditionsForObject","getAllActionsForObject","getAllConditionsForBehavior","getAllActionsForBehavior","objectBehaviorNames","objectBehaviorTypes","_loop","hasObjectType","hasBaseObjectType","behaviorTypes","noGroupInstructions","instructionsWithGroups","orderFirstInstructionsWithoutGroup","allFreeInstructions","lowercaseSearch","exactMatch","unshift","favorExactMatch","enumeratedInstructionOrExpressionMetadata","firstParameterType","ParameterMetadata","isObject","secondParameterType","borderRadius","swatch","background","boxShadow","popover","cover","displayColorPicker","handleClick","handleClose","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","displayedColor","react_color__WEBPACK_IMPORTED_MODULE_8__","paddingBottom","minWidth","InlinePopover","_material_ui_core_ClickAwayListener__WEBPACK_IMPORTED_MODULE_8__","onClickAway","_material_ui_core_Popper__WEBPACK_IMPORTED_MODULE_6__","ScreenTypeMeasurer","userHasTouchedScreen","onFirstTouch","onUpdateProperty","propertyNames","charAt","MAX_ZOOM_FACTOR","MIN_ZOOM_FACTOR","imagePreviewContainer","touchAction","box","errored","_handleImageError","_handleImageLoaded","imgElement","naturalWidth","naturalHeight","clientHeight","_zoomBy","imageZoomFactorDelta","_zoomTo","imageSource","react_measure__WEBPACK_IMPORTED_MODULE_8___default","containerWidth","_this2$props","_this2$state","imageLoaded","imagePositionLeft","imageStyle","overlayStyle","imagePositionTop","_UI_IconButton__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons_ZoomIn__WEBPACK_IMPORTED_MODULE_13___default","_material_ui_icons_ZoomOut__WEBPACK_IMPORTED_MODULE_14___default","_material_ui_icons_ZoomOutMap__WEBPACK_IMPORTED_MODULE_15___default","onWheel","_UI_PlaceholderMessage__WEBPACK_IMPORTED_MODULE_16__","onLoad","lodash_every__WEBPACK_IMPORTED_MODULE_1__","lodash_every__WEBPACK_IMPORTED_MODULE_1___default","hasValidAnimation","hasValidDirection","copyPoint","originalPoint","destinationPoint","destinationSprite","isSamePoint","point1","point2","sprite1","sprite2","sprite1Point","getPoint","originalPolygon","haveSameCollisionMasks","sprite1CollisionMask","sprite2CollisionMask","sprite1Polygon","polygon1","polygon2","polygon1Vertices","polygon2Vertices","isSamePolygon","spritePtrs","spritesToDelete","removeSprite","spritesToDuplicate","spriteToDuplicate","newSprite","ElectronMenuImplementation","template","menuTemplate","Menu","browserWindow","menu","buildFromTemplate","popup","async","SubMenuItem","_useState","useState","_useState2","menuOpen","setMenuOpen","anchorElement","setAnchorElement","useCallback","MenuItem","ArrowRight_default","TransitionComponent","Fade","submenu","MaterialUIMenuImplementation","_onClose","Divider","ListItemIcon","CheckBox_default","CheckBoxOutlineBlank_default","ListItemText","MaterialUIMenuImplementation_SubMenuItem","MaterialUIContextMenu","anchorX","anchorY","menuImplementation","ElectronContextMenu","showMenu","getLayoutAt","getExternalEventsAt","getExternalLayoutAt","selectedInstructions","selectedEvents","selectedInstructionsLists","getSelectedEvents","eventContext","getSelectedEventContexts","getSelectedInstructions","getSelectedInstructionsContexts","getSelectedInstructionsListsContexts","hasInstructionSelected","hasSelectedAtLeastOneCondition","hasInstructionsListSelected","hasSomethingSelected","selectEvent","multiSelection","existingSelection","selectInstruction","selectInstructionsList","isInstructionsListSelected","textFieldContainer","textFieldAndHightlightContainer","expressionSelectorPopoverContent","backgroundHighlighting","backgroundHighlightingWithDescription","_fieldElement","_inputElement","popoverOpen","parametersDialogOpen","selectedExpressionInfo","validatedValue","errorHighlights","_openExpressionPopover","_handleFocus","_handleRequestClose","_handleChange","_enqueueValidation","_handleBlur","cancel","_handleMenuMouseDown","_handleExpressionChosen","insertExpression","cursorPosition","selectionStart","functionCall","setSelectionRange","parser","ExpressionParser2","expressionNode","parseExpression","expressionValidator","ExpressionValidator","visit","errors","getStartPosition","getEndPosition","getMessage","hasMultipleErrors","longDescription","popoverStyle","backgroundHighlightingStyle","_UI_Layout__WEBPACK_IMPORTED_MODULE_21__","_BackgroundHighlighting__WEBPACK_IMPORTED_MODULE_17__","_material_ui_core_ClickAwayListener__WEBPACK_IMPORTED_MODULE_19__","_material_ui_core_Popper__WEBPACK_IMPORTED_MODULE_8__","disablePortal","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_20__","_InstructionEditor_InstructionOrExpressionSelector_ExpressionSelector__WEBPACK_IMPORTED_MODULE_14__","_material_ui_icons_Functions__WEBPACK_IMPORTED_MODULE_10___default","_ExpressionParametersEditorDialog__WEBPACK_IMPORTED_MODULE_15__","oneColumnContainer","twoColumnsContainer","ConditionsActionsColumns","getExperimentalObjects","getExtraInstructionInformation","PhysicsBehavior::PhysicsBehavior","Video::VideoObject","setExtensionInformation","generatedBehavior","BehaviorJsImplementation","propertyFound","propertyType","setStringValue","setDoubleValue","setBoolValue","behaviorProperties","MapStringPropertyDescriptor","newProperty","toPropertyDescriptor","hasChild","getChild","getStringValue","getDoubleValue","getBoolValue","initializeContent","BehaviorsSharedData","functionType","getFunctionType","Expression","addExpression","StringExpression","addStrExpression","Condition","addCondition","getSentence","addAction","addScopedCondition","addScopedAction","addObjectAndBehaviorParameters","addParameter","setExtraInfo","setPrivate","getterName","getBehaviorPropertyGetterName","setterName","getBehaviorPropertySetterName","EventsBasedBehavior","getPropertyExpressionName","getPropertyConditionName","useStandardRelationalOperatorParameters","getPropertyActionName","useStandardOperatorParameters","setManipulatedType","setGetter","getParameters","isOptional","setParameterLongDescription","addNode","currentNode","newNode","replaceNode","oldNode","defaultToolbarControls","_CloseButton__WEBPACK_IMPORTED_MODULE_8__","renderMosaicWindowPreview","MosaicWindow","react_mosaic_component__WEBPACK_IMPORTED_MODULE_7__","renderPreview","EditorMosaic","mosaicNode","limitToOneSecondaryEditor","openedEditorNames","getLeaves","secondaryEditorName","_onChange","mosaicRootClassName","renderTile","picker","ColorField","_ColorPicker__WEBPACK_IMPORTED_MODULE_8__","_Editors_TextEditor__WEBPACK_IMPORTED_MODULE_0__","_Editors_TiledSpriteEditor__WEBPACK_IMPORTED_MODULE_1__","_Editors_PanelSpriteEditor__WEBPACK_IMPORTED_MODULE_2__","_Editors_SpriteEditor__WEBPACK_IMPORTED_MODULE_3__","_Editors_EmptyEditor__WEBPACK_IMPORTED_MODULE_4__","_Editors_ShapePainterEditor__WEBPACK_IMPORTED_MODULE_5__","_Editors_ParticleEmitterEditor__WEBPACK_IMPORTED_MODULE_6__","_Editors_ObjectPropertiesEditor__WEBPACK_IMPORTED_MODULE_7__","editorConfigurations","registerEditorConfiguration","getDefaultObjectJsImplementationPropertiesEditor","asObjectJsImplementation","release","SpriteObject","TiledSpriteObject","PanelSpriteObject","TextObject","ShapePainterEditor","ShapePainterObject","TextEntryObject","asTextEntryObject","SkeletonObject","castObject","ItemRow","errorStatus","hideMenuButton","connectIconDragSource","itemStyle","selectedErrorBackgroundColor","selectedWarningBackgroundColor","errorTextColor","warningTextColor","borderTop","DropIndicator","getItemThumbnail","isItemBold","onEditItem","canMoveSelectionToItem","rowRenderer","nameBeingEdited","dropTarget","SortableVirtualizedItemList_ItemRow","ResourceThumbnail","ImageThumbnail","selectorContainer","resourceThumbnail","ResourceSelectorWithThumbnail","ResourceThumbnail_ResourceThumbnail","GD_STARTUP_TIMES","drawerContent","MainFrame","createDialogOpen","introDialogOpen","openConfirmDialogOpen","genericDialogOpen","loadingProject","previewLoading","currentProject","currentFileMetadata","projectManagerOpen","editorTabs","genericDialog","snackMessage","snackMessageOpen","preferencesDialogOpen","languageDialogOpen","profileDialogOpen","subscriptionDialogOpen","openFromStorageProviderDialogOpen","saveToStorageProviderDialogOpen","platformSpecificAssetsDialogOpen","helpFinderDialogOpen","_resourceSourceDialogs","_previewLauncher","_openInitialFileMetadata","isAfterUserInteraction","storageProviderOperations","initialFileMetadataToOpen","doesInitialOpenRequireUserInteraction","openFromFileMetadata","openSceneOrProjectManager","_openOpenConfirmDialog","_loadExtensions","extensionsLoader","loadAllExtensions","getNotNullTranslationFunction","loadingResults","successLoadingResults","loadingResult","failLoadingResults","dangerous","dangerousLoadingResults","loadFromSerializedProject","serializedProject","fileMetadata","timePromise","newProject","ProjectHelper","createNewGDJSProject","unserializeFrom","loadFromProject","closeProject","burstAllUrlsCache","setProjectFile","fileIdentifier","hasAutoSave","onGetAutoSave","getOpenErrorMessage","canOpenAutosave","errorMessage","openProjectManager","getSerializedElements","toggleProjectManager","refs","setEditorToolbar","editorToolbar","addLayout","addExternalLayout","addExternalEvents","addEventsFunctionsExtension","deleteLayout","removeLayout","deleteExternalLayout","removeExternalLayout","deleteExternalEvents","removeExternalEvents","deleteEventsFunctionsExtension","removeEventsFunctionsExtension","renameLayout","renameExternalLayout","renameExternalEvents","renameEventsFunctionsExtension","_launchLayoutPreview","launchLayoutPreview","_launchExternalLayoutPreview","launchExternalLayoutPreview","openLayout","_ref2$openEventsEdito","openEventsEditor","_ref2$openSceneEditor","openSceneEditor","sceneEditorOptions","_Preferences_PreferencesContext__WEBPACK_IMPORTED_MODULE_44__","_Editors_SceneEditor__WEBPACK_IMPORTED_MODULE_31__","onAutoSaveProject","renderPreviewLauncher","canDoNetworkPreview","openDebugger","onEditObject","_onChooseResource","eventsEditorOptions","_Editors_EventsEditor__WEBPACK_IMPORTED_MODULE_29__","openExternalEvents","_openInstructionOrExpression","_onCreateEventsFunction","tabsWithSceneEditor","tabsWithSceneAndEventsEditors","_Editors_ExternalEventsEditor__WEBPACK_IMPORTED_MODULE_30__","externalEventsName","openExternalLayout","_ref9","_Editors_ExternalLayoutEditor__WEBPACK_IMPORTED_MODULE_32__","externalLayoutName","openEventsFunctionsExtension","_ref10","_Editors_EventsFunctionsExtensionEditor__WEBPACK_IMPORTED_MODULE_33__","eventsFunctionsExtensionName","onLoadEventsFunctionsExtensions","openResources","_ref11","_Editors_ResourcesEditor__WEBPACK_IMPORTED_MODULE_35__","openStartPage","_this$props6","_ref12","_Editors_StartPage__WEBPACK_IMPORTED_MODULE_34__","_ref13","chooseProject","openCreateDialog","askToCloseProject","openAboutDialog","openHelpFinderDialog","openLanguage","_ref14","_Editors_DebuggerEditor__WEBPACK_IMPORTED_MODULE_28__","openSubscription","foundTab","insertEventsFunction","_ref15","openOpenFromStorageProviderDialog","chooseProjectWithStorageProviderPicker","_this$props7","onOpenWithPicker","saveProject","saveProjectAs","_this$props8","_showSnackMessage","_ref16","wasSaved","_this$props9","_ref17","openSaveToStorageProviderDialog","saveProjectAsWithStorageProvider","_this$props10","_ref18","openExportDialog","_openIntroDialog","_openGenericDialog","openPreferences","openProfile","_onChangeEditorTab","_onEditorTabActive","_onCloseEditorTab","_onCloseOtherEditorTabs","_onCloseAllEditorTabs","sourceName","resourceSourceDialog","chooseResources","openPlatformSpecificAssets","setUpdateStatus","notificationTitle","getUpdateNotificationTitle","notificationBody","getUpdateNotificationBody","Notification","onclick","simulateUpdateDownloaded","releaseName","simulateUpdateAvailable","_closeSnackMessage","integratedEditor","performance","introDialog","getStartupTimesSummary","reloadBuiltinExtensions","_this$props11","renderExportDialog","renderCreateDialog","useStorageProvider","renderGDJSDevelopmentWatcher","showLoader","loading","_ProjectTitlebar__WEBPACK_IMPORTED_MODULE_12__","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_9__","PaperProps","_UI_EditorBar__WEBPACK_IMPORTED_MODULE_18__","displayRightCloseButton","_ProjectManager__WEBPACK_IMPORTED_MODULE_15__","_UI_EmptyMessage__WEBPACK_IMPORTED_MODULE_40__","_Toolbar__WEBPACK_IMPORTED_MODULE_11__","showProjectIcons","hasProject","exportProject","requestUpdate","_UI_ClosableTabs__WEBPACK_IMPORTED_MODULE_23__","_UI_ErrorBoundary__WEBPACK_IMPORTED_MODULE_36__","_UI_LoaderModal__WEBPACK_IMPORTED_MODULE_17__","_HelpFinder__WEBPACK_IMPORTED_MODULE_27__","_material_ui_core_Snackbar__WEBPACK_IMPORTED_MODULE_10__","autoHideDuration","ContentProps","aria-describedby","_PlatformSpecificAssetsEditor_PlatformSpecificAssetsDialog__WEBPACK_IMPORTED_MODULE_16__","onExport","previewLauncher","resourceSource","dialog","_Profile_ProfileDialog__WEBPACK_IMPORTED_MODULE_20__","_Profile_SubscriptionDialog__WEBPACK_IMPORTED_MODULE_37__","_Preferences_PreferencesDialog__WEBPACK_IMPORTED_MODULE_13__","_Preferences_LanguageDialog__WEBPACK_IMPORTED_MODULE_43__","languageChanged","_languageDidChange","_AboutDialog__WEBPACK_IMPORTED_MODULE_14__","_ProjectsStorage_OpenFromStorageProviderDialog__WEBPACK_IMPORTED_MODULE_47__","_ProjectsStorage_SaveToStorageProviderDialog__WEBPACK_IMPORTED_MODULE_48__","_ProjectsStorage_OpenConfirmDialog__WEBPACK_IMPORTED_MODULE_49__","_UI_CloseConfirmDialog__WEBPACK_IMPORTED_MODULE_19__","_Changelog_ChangelogDialogContainer__WEBPACK_IMPORTED_MODULE_41__","_DefaultTheme__WEBPACK_IMPORTED_MODULE_1__","GDevelopThemeContext","DefaultTheme","AddListItem","SearchListItem","_List__WEBPACK_IMPORTED_MODULE_1__","_BackgroundText__WEBPACK_IMPORTED_MODULE_2__","_temp","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","_apply","serializableObject","serializeTo","_cancel","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","_objectSpread2","_material_ui_icons_DragHandle__WEBPACK_IMPORTED_MODULE_1__","_material_ui_icons_DragHandle__WEBPACK_IMPORTED_MODULE_1___default","react_sortable_hoc__WEBPACK_IMPORTED_MODULE_2__","handle","handleColor","SortableHandle","emptyExplanation","iconText","thanksText","SubscriptionCheckDialog","_closeDialog","sendSubscriptionCheckDismiss","sendSubscriptionCheckDialogShown","_UI_Grid__WEBPACK_IMPORTED_MODULE_13__","_UI_Text__WEBPACK_IMPORTED_MODULE_15__","_material_ui_icons_Star__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_icons_Favorite__WEBPACK_IMPORTED_MODULE_11___default","_dialog","_UserProfileContext__WEBPACK_IMPORTED_MODULE_12__","EventsSheet","_containerDiv","_keyboardShortcuts","inlineEditing","editedInstruction","analyzedEventsContextResult","serializedEventsToExtract","copySelection","cutSelection","pasteEventsOrInstructions","_toggleSearchPanel","history","getHistoryInitialState","historyMaxSize","editedParameter","inlineEditingAnchorEl","inlineEditingChangesMade","showSearchPanel","textEditedEvent","_eventSearcher","reset","_searchPanel","addSubEvents","insertNewEvent","_saveChangesToHistory","_eventsTree","_selectionCanHaveSubEvents","_selectionCanToggleDisabled","isExecutable","addNewEvent","context","hasEventsSelected","insertTopOfSelection","insertions","selectedEvent","newEvents","scrollToEvent","openEventTextDialog","editableEvents","closeEventTextDialog","openInstructionEditor","moveSelectionToInstruction","destinationContext","moveSelectionToInstructionsList","destinationIndex","deleteEvents","multiSelect","openEventContextMenu","eventContextMenu","openInstructionContextMenu","instructionContextMenu","openInstructionsListContextMenu","instructionsListContextMenu","openParameterEditor","parameterContext","closeParameterEditor","toggleDisabled","setDisabled","_ref$deleteInstructio","deleteInstructions","_ref$deleteEvents","eventsRemover","EventsRemover","addEventToRemove","addInstructionToRemove","launch","_ensureFocused","copySelectionToClipboard","pasteEvents","pasteEventsFromClipboardInSelection","pasteInstructions","pasteInstructionsFromClipboardInSelection","pasteInstructionsInInstructionsList","pasteInstructionsFromClipboardInInstructionsList","_invertSelectedConditions","setInverted","saveToHistory","newHistory","_openEventsContextAnalyzer","eventsContextAnalyzer","EventsContextAnalyzer","EventsList","getEventsContext","_closeEventsContextAnalyzer","extractEventsToFunction","moveEventsIntoNewGroup","_replaceSelectionByGroupOfEvents","_replaceSelectionByEventsFunction","contexts","action","createNewInstructionForEventsFunction","insertEvents","_ensureEventUnfolded","unfoldForEvent","_replaceInEvents","doReplaceInEvents","inputs","_searchInEvents","doSearchInEvents","_onEventMoved","_renderInstructionEditorDialog","newInstructionEditorDialog","closeInstructionEditor","_this$state$editedIns","containerDivElement","activeElement","contains","networkPreview","saveChanges","_UI_Reponsive_ScreenTypeMeasurer__WEBPACK_IMPORTED_MODULE_30__","_UI_Reponsive_ResponsiveWindowMeasurer__WEBPACK_IMPORTED_MODULE_31__","_MainFrame_Preferences_PreferencesContext__WEBPACK_IMPORTED_MODULE_25__","_EventsSearcher__WEBPACK_IMPORTED_MODULE_22__","eventSearcher","_EventsTree__WEBPACK_IMPORTED_MODULE_7__","onAddNewEvent","_SearchPanel__WEBPACK_IMPORTED_MODULE_21__","searchPanel","_EmptyEventsPlaceholder__WEBPACK_IMPORTED_MODULE_18__","_InlineParameterEditor__WEBPACK_IMPORTED_MODULE_13__","_this4$state$editedPa","setParameter","_UI_Menu_ContextMenu__WEBPACK_IMPORTED_MODULE_14__","hasClipboardEvents","_EventsContextAnalyzerDialog__WEBPACK_IMPORTED_MODULE_20__","_EventsFunctionExtractor_EventsFunctionExtractorDialog__WEBPACK_IMPORTED_MODULE_26__","_InstructionEditor_EventTextDialog__WEBPACK_IMPORTED_MODULE_10__","_UI_Messages_InfoBar__WEBPACK_IMPORTED_MODULE_29__","touchScreenMessage","_ParameterFields_DefaultField__WEBPACK_IMPORTED_MODULE_1__","_ParameterFields_RelationalOperatorField__WEBPACK_IMPORTED_MODULE_2__","_ParameterFields_OperatorField__WEBPACK_IMPORTED_MODULE_3__","_ParameterFields_MouseField__WEBPACK_IMPORTED_MODULE_4__","_ParameterFields_KeyField__WEBPACK_IMPORTED_MODULE_5__","_ParameterFields_ObjectField__WEBPACK_IMPORTED_MODULE_6__","_ParameterFields_YesNoField__WEBPACK_IMPORTED_MODULE_7__","_ParameterFields_TrueFalseField__WEBPACK_IMPORTED_MODULE_8__","_ParameterFields_ExpressionField__WEBPACK_IMPORTED_MODULE_9__","_ParameterFields_StringField__WEBPACK_IMPORTED_MODULE_10__","_ParameterFields_StringWithSelectorField__WEBPACK_IMPORTED_MODULE_11__","_ParameterFields_BehaviorField__WEBPACK_IMPORTED_MODULE_12__","_ParameterFields_SceneVariableField__WEBPACK_IMPORTED_MODULE_13__","_ParameterFields_GlobalVariableField__WEBPACK_IMPORTED_MODULE_14__","_ParameterFields_ObjectVariableField__WEBPACK_IMPORTED_MODULE_15__","_ParameterFields_LayerField__WEBPACK_IMPORTED_MODULE_16__","_ParameterFields_AudioResourceField__WEBPACK_IMPORTED_MODULE_17__","_ParameterFields_VideoResourceField__WEBPACK_IMPORTED_MODULE_18__","_ParameterFields_JsonResourceField__WEBPACK_IMPORTED_MODULE_19__","_ParameterFields_ColorExpressionField__WEBPACK_IMPORTED_MODULE_20__","_ParameterFields_ForceMultiplierField__WEBPACK_IMPORTED_MODULE_21__","_ParameterFields_SceneNameField__WEBPACK_IMPORTED_MODULE_22__","DefaultField","mouse","ObjectField","relationalOperator","operator","yesorno","trueorfalse","string","stringWithSelector","scenevar","globalvar","objectvar","musicfile","soundfile","videoResource","jsonResource","ColorExpressionField","police","joyaxis","forceMultiplier","sceneName","inlineRenderers","renderInlineObjectWithThumbnail","fieldType","rawType","_allowedObjectType","_ObjectsList_ObjectSelector__WEBPACK_IMPORTED_MODULE_9__","allowedObjectType","errorTextIfInvalid","iconPath","_RenderedInstance","RenderedIconInstance","react_dom__WEBPACK_IMPORTED_MODULE_0__","react_dom__WEBPACK_IMPORTED_MODULE_0___default","buttonRef","HTMLButtonElement","getElementsByTagName","_UI_Theme_ThemeConsumer__WEBPACK_IMPORTED_MODULE_11__","_UI_ScrollView__WEBPACK_IMPORTED_MODULE_16__","_UI_List__WEBPACK_IMPORTED_MODULE_8__","_UI_Grid__WEBPACK_IMPORTED_MODULE_17__","_UI_EmptyMessage__WEBPACK_IMPORTED_MODULE_15__","scrollView","targetElement","yPosition","scrollViewElement","scrollViewYPosition","scrollTop","getNamespaceSeparator","InfoBar","_Reponsive_ScreenTypeMeasurer__WEBPACK_IMPORTED_MODULE_10__","_MainFrame_Preferences_PreferencesContext__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_Snackbar__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_8__","viewX","viewY","viewRotation","multiselect","unselectInstance","timeFunction","fn","onResult","t0","promiseFn","t1","random","enumerateVariables","enumerateVariableAndChildrenNames","names","getAllChildrenNames","childName","getNameAt","VariableField","variableName","OpenInNew_default","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_0__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__","closeButtonWidth","imageThumbnail","selectedBorderColor","groupTextColor","deprecatedGroupTextColor","createMuiTheme","typography","common","paper","light","lighten","main","dark","darken","contrastText","overrides","MuiTypography","h6","MuiInput","underline","&:before","MuiAppBar","colorPrimary","MuiIconButton","MuiListItemIcon","MuiTabs","MuiTab","textColorPrimary","MuiButtonBase","MuiButton","SortableVariableRow","SortableAddVariableRow","VariablesListBody","SortableVariablesListBody","VariablesList","selectedVariables","_selectVariable","variableAndName","serializedVariable","paste","newVariable","Variable","otherVariableAndName","removeRecursively","_updateOrDefineVariable","_getVariableOrigin","parentVariable","_renderVariableAndChildrenRows","parentOrigin","renameChild","rename","_renderVariableChildren","containerInheritedVariablesTree","containerVariablesTree","editRow","TreeTableRow","TreeTableCell","lodash_values__WEBPACK_IMPORTED_MODULE_1__","lodash_values__WEBPACK_IMPORTED_MODULE_1___default","addError","extraExplanation","chip","chipsList","SearchbarWithChips","_material_ui_core_Chip__WEBPACK_IMPORTED_MODULE_7__","randomColor","seed","luminosity","SPRITE_SIZE","spriteThumbnail","checkboxContainer","_UI_Theme_ThemeConsumer__WEBPACK_IMPORTED_MODULE_3__","_UI_Checkbox__WEBPACK_IMPORTED_MODULE_2__","editorBarHeight","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_4__","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_5__","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_5___default","appBar","displayLeftCloseButton","_UI_Grid__WEBPACK_IMPORTED_MODULE_4__","_UI_Text__WEBPACK_IMPORTED_MODULE_5__","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_3__","_UI_BackgroundText__WEBPACK_IMPORTED_MODULE_6__","_UI_FlatButton__WEBPACK_IMPORTED_MODULE_2__","EventsEditor","getLayoutSerializedElements","_UI_SemiControlledTextField__WEBPACK_IMPORTED_MODULE_6__","ObjectSelector","rest","objectAndGroups","_UI_ListIcon__WEBPACK_IMPORTED_MODULE_10__","groups","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_6__","getObjectsAndGroupsDataSource","hasValidChoice","_UI_SemiControlledAutoComplete__WEBPACK_IMPORTED_MODULE_9__","loadedFontFamilies","loadedTextures","invalidTexture","asImageResource","isSmooth","baseTexture","NEAREST","onComplete","loader","removeAllListeners","allResources","totalCount","loadingCount","once","loadedResources","_initializeTexture","fromVideo","LINEAR","slugs","fullFilename","loadedFace","getDefaultValue","_UI_List__WEBPACK_IMPORTED_MODULE_1__","_UI_ListIcon__WEBPACK_IMPORTED_MODULE_2__","_Keys__WEBPACK_IMPORTED_MODULE_3__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_toArray__WEBPACK_IMPORTED_MODULE_0__","initiallyOpenedKey","restOfInitiallyOpenedPath","instructionInformation","_UI_List__WEBPACK_IMPORTED_MODULE_2__","_UI_ListIcon__WEBPACK_IMPORTED_MODULE_3__","groupOfInstructionInformation","_UI_Subheader__WEBPACK_IMPORTED_MODULE_4__","ParameterMetadataTools","getObjectParameterIndexFor","shortenString","maxLength","react_dnd__WEBPACK_IMPORTED_MODULE_1__","InnerDragSourceAndDropTarget","DragSource","connect","dragSource","getItem","shallow","_Utils_Clipboard__WEBPACK_IMPORTED_MODULE_0__","_SelectionHandler__WEBPACK_IMPORTED_MODULE_1__","_Utils_Serializer__WEBPACK_IMPORTED_MODULE_2__","eventsCount","conditionsCount","actionsCount","conditionsList","clipboardContent","insertInstructions","InnerDropTarget","emptyContainer","parametersContainer","invertToggle","isParameterVisible","_firstVisibleField","isDirty","_openExtension","getExtensionAndConditionMetadata","getExtension","getExtensionAndActionMetadata","_getVisibleParametersCount","_UI_EmptyMessage__WEBPACK_IMPORTED_MODULE_10__","helpPage","instructionExtraInformation","setParametersCount","setupInstruction","parameterFieldIndex","_UI_Text__WEBPACK_IMPORTED_MODULE_20__","_UI_IconButton__WEBPACK_IMPORTED_MODULE_18__","_material_ui_icons_OpenInNew__WEBPACK_IMPORTED_MODULE_17___default","_UI_AlertMessage__WEBPACK_IMPORTED_MODULE_14__","parameterMetadataType","isFirstVisibleParameterField","_UI_Toggle__WEBPACK_IMPORTED_MODULE_8__","_Utils_TagsHelper__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Chip__WEBPACK_IMPORTED_MODULE_2__","chipContainer","undoHistory","redoHistory","maxSize","newUndoHistory","newCurrent","setFunctionType","Action","parameterGroups","referencedObjectOrGroupName","parameterGroupNames","parameterObjectNames","newParameter","EventsFunctionParametersEditor","longDescriptionShownIndexes","_addParameter","_removeParameter","removeFromVectorParameterMetadata","_addLongDescription","_removeLongDescription","setLongDescription","react__WEBPACK_IMPORTED_MODULE_8__","isParameterDisabled","isParameterDescriptionAndTypeShown","isParameterLongDescriptionShown","parametersIndexOffset","_UI_MiniToolbar__WEBPACK_IMPORTED_MODULE_20__","_UI_SemiControlledTextField__WEBPACK_IMPORTED_MODULE_19__","validateParameterName","_UI_Menu_ElementWithMenu__WEBPACK_IMPORTED_MODULE_16__","_UI_SelectField__WEBPACK_IMPORTED_MODULE_10__","_UI_SelectOption__WEBPACK_IMPORTED_MODULE_11__","_ObjectTypeSelector__WEBPACK_IMPORTED_MODULE_22__","_BehaviorTypeSelector__WEBPACK_IMPORTED_MODULE_23__","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_13__","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_26___default","_UI_HelpButton__WEBPACK_IMPORTED_MODULE_18__","ObjectTypeSelector","getDefaultName","flexSrink","getSentenceErrorText","sentence","missingParameters","isBehavior","expectedString","getFullNameHintText","getDescriptionHintText","EventsFunctionPropertiesEditor","_UI_EmptyMessage__WEBPACK_IMPORTED_MODULE_14__","_UI_Layout__WEBPACK_IMPORTED_MODULE_16__","setSentence","_UI_HelpButton__WEBPACK_IMPORTED_MODULE_11__","CloseButton","react_mosaic_component__WEBPACK_IMPORTED_MODULE_8__","mosaicActions","mosaicWindowActions","getPath","_onBehaviorEdited","_EventsFunctionsExtensionEditor__WEBPACK_IMPORTED_MODULE_6__","ObjectGroupEditorDialog","___WEBPACK_IMPORTED_MODULE_8__","ObjectGroup","layoutChooserOpen","setAssociatedLayout","openLayoutChooser","getAssociatedLayout","_EventsSheet__WEBPACK_IMPORTED_MODULE_8__","_UI_PlaceholderMessage__WEBPACK_IMPORTED_MODULE_11__","_LayoutChooserDialog__WEBPACK_IMPORTED_MODULE_13__","helpText","LayoutChooserDialog","selectedLayoutName","_material_ui_core_RadioGroup__WEBPACK_IMPORTED_MODULE_10__","chooseLayout","_material_ui_core_FormControlLabel__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core_Radio__WEBPACK_IMPORTED_MODULE_9__","getAssociatedSettings","getUiSettings","getInitialInstances","uiSettings","_SceneEditor__WEBPACK_IMPORTED_MODULE_9__","initialUiSettings","_UI_Grid__WEBPACK_IMPORTED_MODULE_14__","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_8__","INSTANCES_CLIPBOARD_KIND","FullSizeInstancesEditor","InstancesEditor","layersDrawerPaperProps","instancesDrawerPaperProps","initialEditors","initialEditorsSmallWindow","SceneEditor","showObjectsListInfoBar","showPropertiesInfoBar","instancesListOpen","layersListOpen","setupGridOpen","openSceneProperties","scenePropertiesDialogOpen","openObjectEditor","hasSelectedInstances","selectedInstanceObjectName","editObjectByName","variablesEditedInstance","editObjectVariables","variablesEditedObject","editLayoutVariables","layoutVariablesDialogOpen","editedObject","editedObjectWithContext","setUiSettings","forceRemount","_onObjectSelected","selectedObjectName","_createNewObjectAndInstanceUnderCursor","newObjectInstanceSceneCoordinates","_objectsList","newObjectDialogOpen","_onAddInstanceUnderCursor","objectSelected","_addInstance","_onInstancesAdded","_onInstancesSelected","uniq","forceUpdatePropertiesEditor","_onInstancesMoved","_onInstancesResized","_onInstancesRotated","_onSelectInstances","centerViewOn","_addInstanceForNewObject","_onRemoveLayer","layerRemoveDialogOpen","onCloseLayerRemoveDialog","newLayer","removeAllInstancesOnLayer","moveInstancesToLayer","_onRenameLayer","_onDeleteObject","globalObjectOrGroupRemoved","objectOrGroupRemovedInLayout","_onRenameEditedObject","_onRenameObject","globalObjectOrGroupRenamed","objectOrGroupRenamedInLayout","_onContextMenu","useLastCursorPosition","serializedSelection","serializedInstance","forceUpdateObjectsList","_propertiesEditor","reloadResourcesFor","resourcesInUse","ResourcesInUseHelper","exposeResources","objectResourceNames","getAllImages","loadTextures","objectsListOpen","zOrderFinder","_Toolbar__WEBPACK_IMPORTED_MODULE_23__","_InstancesEditor_InstancePropertiesEditor__WEBPACK_IMPORTED_MODULE_13__","propertiesEditor","instances-editor","_UI_Reponsive_ScreenTypeMeasurer__WEBPACK_IMPORTED_MODULE_42__","objects-list","_UI_EditorMosaic_TagsButton__WEBPACK_IMPORTED_MODULE_39__","_UI_EditorMosaic_CloseButton__WEBPACK_IMPORTED_MODULE_40__","_ObjectsList__WEBPACK_IMPORTED_MODULE_9__","onDeleteObject","onObjectCreated","onObjectSelected","onRenameObject","onObjectPasted","onChangeSelectedObjectTags","getAllObjectTags","objectsList","object-groups-list","_ObjectGroupsList__WEBPACK_IMPORTED_MODULE_10__","_UI_Reponsive_ResponsiveWindowMeasurer__WEBPACK_IMPORTED_MODULE_43__","_UI_EditorMosaic__WEBPACK_IMPORTED_MODULE_29__","_ObjectEditor_ObjectEditorDialog__WEBPACK_IMPORTED_MODULE_18__","_ObjectGroupEditor_ObjectGroupEditorDialog__WEBPACK_IMPORTED_MODULE_19__","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_28__","_UI_EditorBar__WEBPACK_IMPORTED_MODULE_30__","_InstancesEditor_InstancesList__WEBPACK_IMPORTED_MODULE_14__","_LayersList__WEBPACK_IMPORTED_MODULE_15__","_UI_Messages_InfoBar__WEBPACK_IMPORTED_MODULE_31__","_SetupGridDialog__WEBPACK_IMPORTED_MODULE_21__","_VariablesList_VariablesEditorDialog__WEBPACK_IMPORTED_MODULE_17__","_LayersList_LayerRemoveDialog__WEBPACK_IMPORTED_MODULE_16__","_ScenePropertiesDialog__WEBPACK_IMPORTED_MODULE_22__","_UI_Menu_ContextMenu__WEBPACK_IMPORTED_MODULE_32__","targetTouches","_lastPinchCenterX","_lastPinchCenterY","_startPinch","_onPinchMove","centerX","centerY","_getZoomFactor","_viewPosition","_setZoomFactor","_endPinch","_unregisterCanvasPinchDetector","onPinchStart","onPinchMove","onPinchEnd","lastPinch","dx","dy","distance","sqrt","date","newCenter","scaleChange","registerCanvasPinchDetector","gridSize","gridOffset","SpriteSelector","_UI_Layout__WEBPACK_IMPORTED_MODULE_12__","_UI_Toggle__WEBPACK_IMPORTED_MODULE_9__","getPointer","SceneEditorContainer","_SceneEditor__WEBPACK_IMPORTED_MODULE_7__","getUserUsages","getUserLimits","getUserSubscription","_ApiConfigs__WEBPACK_IMPORTED_MODULE_1__","GDevelopUsageApi","newSubscriptionDetails","i18nModule","admob","usedExtensions","advanced-shape-based-painter","animation-speed-scale","asteroids","basic-ai-with-pathfinding","basic-artificial-intelligence","basic-topdown-car-driving","bbtext-object-demo","betabox-basics-learning-experience","bomb-the-crate","bouncing-ball-and-rope","breakout","buttons","car-physics","center-object-within-another","change-position-of-object","change-scale-of-sprites","change-sprite-animation","change-sprite-color","character-selection","count-down-timer","create-object-with-mouseclick","create-random-object","custom-font","custom-mouse-pointer","customize-keys-with-lastpressedkey","device-orientation-ballgame","device-orientation-compass","device-vibration","dialogue-tree-with-yarn","downhill-bike-physics-demo","drag-camera-with-mouse","drop-collect-items-from-storage","endless-up-runner","exit-app","facebook-instant-game","filesystem-create-directory","find-diagonals","geodash","geometry-monster","health-bar","infinite-scrolling-background","inventory-system","isometric-game","javascript-blocks-in-platformer","keyboard-practice","level-editor","level-selection-unlock","load-image-from-url","magnet","manipulate-text-object","menu-with-functions-and-text-effects","move-camera-to-position","move-object-back-and-forth","move-object-in-circle","move-object-toward-position","move-object-with-mouse-joint","move-object-with-physics","multi-language-menu","multiplayer-platformer-with-gamepads","multitouch","object-gravity","object-selection","objects-timers","open-url-in-browser","pairs","parallax","parallax-scrolling","parse-json-from-api","parse-json-string","particles-explosions","particles-various-effects","pathfinding","pathfinding-basics","physics","physics-joints-demo","physics-joints-settings-demo","pin-object-to-another","pin-object-to-another-multiple-parents","pixel-perfect-platform-game","plane-and-clouds","platformer","platformer-double-jump","play-music-on-mobile","play-stop-sprite-animation","racing-game","ragdoll","rain","random-color-picker","rotate-toward-mouse","rotate-toward-position","rotate-with-keypress","save-load","screen-shake","shoot-bullet-in-parabola","shoot-bullets","shooting-bullets-explanation","simple-space-shooter","snap-object-to-grid","space-invaders","space-shooter","splash-screen","sprite-fade-in-out","take-screenshot","text-entry-object","text-fade-in-out","text-to-speech","toggle-music-play-sound","type-on-text-effect","unlock-items","video-player","z-depth","zombie-laser","ExplanationHeader","_UI_Text__WEBPACK_IMPORTED_MODULE_2__","DoneFooter","renderGameButton","_UI_AlertMessage__WEBPACK_IMPORTED_MODULE_7__","_UI_FlatButton__WEBPACK_IMPORTED_MODULE_5__","_UI_AlertMessage__WEBPACK_IMPORTED_MODULE_4__","_UI_FlatButton__WEBPACK_IMPORTED_MODULE_4__","SetupExportHeader","exportState","updateExportState","targetName","prevExportState","react__WEBPACK_IMPORTED_MODULE_3__","_lingui_react__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_SvgIcon__WEBPACK_IMPORTED_MODULE_1__","runExtensionSanityTests","jsExtensionModule","testResults","rawError","loadExtension","createExtension","ex","testsResult","emptyStorageProvider","createOperations","computeInitialFileMetadataToOpen","defaultStorageProvider","appArguments","candidates","currentStorageProvider","getFileMetadataFromAppArguments","ProjectStorageProviders","renderDialog","_setDialog","_useStorageProvider","currentStorageProviderOperations","setDialog","closeDialog","_React$PureComponent","onPlay","onPause","canPlay","canPause","onOpenProfiler","UI_Toolbar","ToolbarSeparator","InspectorsList","gameData","getInspectorDescriptions","inspectorDescription","fullInspectorPath","getSubInspectors","onChooseInspector","_renderInspectorList","transformVariable","_isStructure","_children","mapValues","_stringDirty","_value","_str","VariablesContainerInspector","main_default","collapsed","_variables","items","enableClipboard","displayDataTypes","displayObjectSize","onCall","namespace","new_value","handleEdit","groupArraysAfterLength","RuntimeObjectInspector","runtimeObject","X position","Y position","Angle","Layer","Z order","Is hidden?","hidden","transformLayer","Camera rotation (in deg)","_cameraRotation","Camera zoom","_zoomFactor","Layer is hidden","_hidden","Camera X position","_cameraX","Camera Y position","_cameraY","Time scale","_timeScale","runtimeScene","_timeManager","Layers","_layers","RuntimeSceneInspector","_objects","gdjsRuntimeGame","renderInspector","gdjsStack","_name","RuntimeSceneInspector_RuntimeSceneInspector","instancesList","RawContentInspector","MeasuresTable","collapsedPaths","_convertToDataRows","parentSection","section","profilerMeasures","parentPercent","totalPercent","isCollapsed","_isSectionCollapsed","hasSubsections","subsections","flatMap","subsection","subsectionName","_toggleSection","_renderSectionNameCell","rowData","ChevronRight_default","ExpandMore_default","dataRows","cellRenderer","tableContainer","Profiler","onStart","onStop","profilerOutput","profilingInProgress","stats","framesCount","LinearProgress","MeasuresTable_MeasuresTable","framesAverageMeasures","DebuggerContent","selectedInspector","selectedInspectorFullPath","rawMode","_editors","openProfiler","onStartProfiler","onStopProfiler","inspectors","InspectorsList_InspectorsList","selected-inspector","FlashOn_default","FlashOff_default","profiler","Profiler_Profiler","DebuggerSelector","hasDebuggers","debuggerIds","selectedId","onChooseDebugger","ipcRenderer","Debugger","debuggerServerStarted","debuggerServerError","debuggerGameData","profilerOutputs","_debuggerContents","_removeServerListeners","_startServer","remainingDebuggerIds","debuggerId","_handleMessage","send","command","payload","_play","_pause","_refresh","_edit","_call","_startProfiler","_stopProfiler","_hasSelectedDebugger","Debugger_Toolbar","DebuggerSelector_DebuggerSelector","DebuggerContent_DebuggerContent","debuggerContent","DebuggerEditor","subscriptionChecked","_checkHasSubscription","Debugger_Debugger","buildTypesConfig","cordova-build","estimatedTimeInSeconds","completeDescription","electron-build","web-build","BuildProgress","onDownload","config","secondsSinceLastUpdate","difference_in_seconds","updatedAt","estimatedRemainingTime","buildContainer","BuildsList","builds","isOld","difference_in_calendar_days","ms","BuildsWatcher","runningWatchers","nextWatcherId","_pollBuild","_callee","waitTime","watcherId","_this$userProfile","regenerator_default","wrap","_context","prev","abrupt","sent","onBuildUpdated","Builds","buildsWatcher","_startBuildsWatcher","newBuild","oldBuild","_refreshBuilds","_this$props$userProfi","onBuildsUpdated","_download","BuildsDialog","_onBuildsUpdated","Builds_Builds","LimitDisplayer","limit","hasSubscription","noSubscription","limitReached","stepper","linearProgress","BuildStepsProgress","exportStep","stepMaxProgress","stepCurrentProgress","hasBuildStep","showSeeAllMyBuildsExplanation","Stepper","activeStep","StepLabel","StepContent","ExportLauncher","compressionOutput","doneFooterOpen","exportPipeline","getInitialExportState","_updateStepProgress","_startBuildWatch","launchWholeExport","sendExportLaunched","handleError","exportPipelineContext","updateStepProgress","prepareExporter","preparedExporter","launchExport","exportOutput","launchResourcesDownload","resourcesDownloadOutput","launchCompression","launchUpload","launchOnlineBuild","uploadBucketKey","_downloadBuild","_closeDoneFooter","_updateExportState","updater","prevState","getBuildLimit","onlineBuildType","renderLaunchButtonLabel","canLaunchBuild","renderDoneFooter","useOnlineStatus","navigator","onLine","onlineStatus","setOnlineStatus","goOnline","goOffline","OnlineStatus","ExportDialog","chosenExporterKey","showExperimental","buildsDialogOpen","chooseExporter","_showExperimental","_openBuildsDialog","_renderExporterListItem","exporter","forceDisable","allExportersRequireOnline","exporters","cantExportBecauseOffline","advanced","experimental","ExportLauncher_ExportLauncher","BuildsDialog_BuildsDialog","DragAndDropContextProvider","DragDropContext","MultiBackend","HTML5toTouch","RightLoader","getEmailErrorText","getPasswordErrorText","CreateAccountDialog","form","password","_onCreateAccount","createAccountInProgress","onGoToLogin","LoginDialog","_onLogin","_onForgotPassword","onForgotPassword","onGoToCreateAccount","loginInProgress","resetPasswordDialogOpen","onCloseResetPasswordDialog","forgotPasswordInProgress","watchPromiseInState","stateField","UserProfileProvider","loginDialogOpen","createAccountDialogOpen","loginError","_fetchUserProfile","authentification","getUserProfile","unauthenticated","_doLogout","logout","_resetUserProfile","_doLogin","assertThisInitialized","login","openLoginDialog","_doCreateAccount","createAccount","sendSignupDone","_doForgotPassword","forgotPassword","openResetPassword","openCreateAccountDialog","onUserChange","Provider","LoginDialog_LoginDialog","CreateAccountDialog_CreateAccountDialog","PreferencesProvider","_loadValuesFromLocalStorage","_setLanguage","_setThemeName","_setCodeEditorThemeName","_setAutoDownloadUpdates","_checkUpdates","_setAutoDisplayChangelog","_showAlertMessage","_verifyIfIsNewVersion","_setEventsSheetShowObjectThumbnails","_setAutosaveOnPreview","_setUseNewInstructionEditorDialog","_setUseGDJSDevelopmentWatcher","_setEventsSheetUseAssignmentOperators","_setShowEffectParameterNames","_persistValuesToLocalStorage","_this7","_this8","_this9","_this10","_this11","_this12","_this13","forceDownload","disableCheckForUpdates","_this14","currentVersion","_this15","persistedState","localStorage","setItem","EventsFunctionsExtensionsProvider","_loadProjectEventsFunctionsExtensions","_unloadProjectEventsFunctionsExtensions","_reloadProjectEventsFunctionsExtensions","Providers","DragAndDrop_DragAndDropContextProvider","PreferencesProvider_PreferencesProvider","getTheme","ThemeProvider","UserProfileProvider_UserProfileProvider","EventsFunctionsExtensionsProvider_EventsFunctionsExtensionsProvider","TomorrowNight","base","inherit","rules","foreground","token","editor.foreground","editor.background","editor.selectionBackground","editor.lineHighlightBackground","editorCursor.foreground","editorWhitespace.foreground","Monokai","editorIndentGuide.activeBackground","editor.selectionHighlightBorder","Tomorrow","SolarizedDark","SolarizedLight","VibrantInk","GitHub","themes","previewContainer","GenericIconPreview","ResourcePreview","Audiotrack_default","InsertDriveFile_default","VideoLibrary_default","FontDownload_default","imagePreview","ResourcePropertiesEditor","_chooseResourcePath","onResourcePathUpdated","resourceSchema","ResourcePreview_ResourcePreview","_renderPreview","_renderResourcesProperties","canDelete","onOpenProjectFolder","onOpenProperties","ResourcesEditor","_resourcesList","deleteResource","openProjectFolder","_onResourceSelected","ResourcesEditor_Toolbar","ResourcePropertiesEditor_ResourcePropertiesEditor","resources-list","resourcesList","ResourcesEditor_ResourcesEditor","resolveExtensionUrl","trimmedUrl","GDevelopExtensionApi","getExtensionsRegistry","getExtensionHeader","extensionShortHeader","headerUrl","extensionHeader","PlaceholderError","onRetry","ExtensionInstallDialog","_loadExtensionheader","isInstalling","onInstall","alreadyInstalled","shortDescription","extensionsRegistry","selectedExtensionShortHeader","chosenTag","_loadExtensionsRegistry","_install","extensionShortHeaders","behaviorsFilteredHeaders","filterExtensionShortHeaders","ExtensionInstallDialog_ExtensionInstallDialog","ObjectListItem","NewObjectDialog","experimentalObjectsInformation","experimentalObjects","NewObjectDialog_ObjectListItem","EditTagsDialog","_tagsField","getObjectWithContextName","isObjectWithContextGlobal","getPasteLabel","isGlobalObject","clipboardObjectName","ObjectsList","_displayedObjectWithContextsList","renamedObjectWithContext","tagEditedObject","insertNewObject","onAddNewObject","_deleteObject","_copyObject","_cutObject","_duplicateObject","_pasteAndRename","_paste","pasteObject","copiedObject","newObject","getObjectPosition","_editVariables","_canMoveSelectionTo","destinationObjectWithContext","movedObjectWithContext","moveObject","_setAsGlobalObject","moveObjectToAnotherContainer","_openEditTagDialog","_changeObjectTags","_selectObject","_getObjectThumbnail","_renderObjectMenuTemplate","lists","selectedObjects","NewObjectDialog_NewObjectDialog","EditTagsDialog_EditTagsDialog","ChangelogRenderer","releases","currentReleaseName","openReleaseNote","currentRelease","findRelease","currentVersionHasBreakingChange","_onUpdated","GDevelopReleaseApi","last","Changelog_ChangelogRenderer","searchableExamplesInformation","ExamplesInformation","exampleName","exampleInformation","searchableDescription","LocalExamples","changeSearchText","chooseExtensionName","exampleNames","extensionUsage","exampleFullName","getExampleInformation","compareString","searchTextIndex","fuzzyFilter","fuzzyOrEmptyFilter","onCreateFromExample","_submitExample","hint","GDevelop default","Dark","DarkTheme","Tutorials","sendTutorialOpened","CreateProjectDialog","_showExamples","_onExamplesLoaded","ExamplesComponent","examplesComponent","StartersComponent","startersComponent","onShowExamples","onExamplesLoaded","Tutorials_Tutorials","GroupRow","isGlobalGroup","onSetAsGlobalGroup","SortableGroupRow","GroupRow_GroupRow","SortableAddGroupRow","GroupsList","onAddGroup","renamedGroupWithScope","SortableGroupsList","withRef","GroupsListContainer","objectGroupsList","globalObjectGroupsList","addGroup","_onDelete","_this2$props2","getWrappedInstance","_onRename","_this2$props3","_onMove","_this2$props4","globalObjectGroupsOldIndex","globalObjectGroupsNewIndex","_setAsGlobalGroup","_this2$props5","MainFrameToolbar","_UI_Reponsive_ResponsiveWindowMeasurer__WEBPACK_IMPORTED_MODULE_12__","_lingui_react__WEBPACK_IMPORTED_MODULE_11__","firstChild","_UI_ToolbarIcon__WEBPACK_IMPORTED_MODULE_7__","_UI_ToolbarSeparator__WEBPACK_IMPORTED_MODULE_8__","ProjectTitlebar","titleElements","setTitle","_UI_Theme_ThemeConsumer__WEBPACK_IMPORTED_MODULE_6__","setTitleBarColor","PreferencesDialog","setCurrentTab","_React$useContext","useContext","react__WEBPACK_IMPORTED_MODULE_2___default","_UI_Tabs__WEBPACK_IMPORTED_MODULE_15__","_UI_SelectField__WEBPACK_IMPORTED_MODULE_3__","_UI_SelectOption__WEBPACK_IMPORTED_MODULE_5__","_UI_Toggle__WEBPACK_IMPORTED_MODULE_6__"],"mappings":"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,GAC7BxjB,SAAU,SAACuD,EAAGmV,EAAG3Y,GAAP,OAAiBvC,EAAKK,MAAMmC,SAASD,IAC/CmC,UAAWnC,OAAQiE,EAAY1F,EAAAC,EAAAC,cAACM,EAAA,MAAD,CAAAC,GAAA,8BAE/BT,EAAAC,EAAAC,cAACklB,EAAA,EAAD,CAAc3jB,MAAM,OAAOc,YAAa,CAAA9B,GAAA,oBACxCT,EAAAC,EAAAC,cAACklB,EAAA,EAAD,CAAc3jB,MAAM,QAAQc,YAAa,CAAA9B,GAAA,uBACzCT,EAAAC,EAAAC,cAACklB,EAAA,EAAD,CACE3jB,MAAM,SACNc,YAAa,CAAA9B,GAAA,iEA1BiBoQ,aA0C3B6U,EAAoB,SAAAzkB,GAGG,IAFlCQ,EAEkCR,EAFlCQ,MACA+hB,EACkCviB,EADlCuiB,sBAEA,OAAO/hB,GAGLzB,EAAAC,EAAAC,cAACsjB,EAAD,CAAuB8B,SAAO,GAC5BtlB,EAAAC,EAAAC,cAACM,EAAA,MAAD,CAAAC,GAAA,6MClDAklB,EAAW,CACf,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,WACA,WACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,QACA,SACA,OACA,MACA,SACA,WACA,MACA,OACA,SACA,SACA,MACA,WACA,WACA,SACA,OACA,QACA,KACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,QACA,WACA,WACA,OACA,OACA,SACA,UAGIC,EAAa,SAACtlB,GAAD,OAA4C,IAA3BqlB,EAAStb,QAAQ/J,IAEhCulB,kLAIbxmB,KAAKslB,QAAQtlB,KAAKslB,OAAOC,yCAGtB,IAAA1lB,EAAAG,KAAAC,EACkDD,KAAKE,MAAtDkC,EADDnC,EACCmC,MAAOC,EADRpC,EACQoC,SAAUqjB,EADlBzlB,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AO,qBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,YAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,UAET,CACED,WAAY,SACZC,MAAO,yBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,uBAET,CACED,WAAY,SACZztD,WAAY,SACZ0tD,MAAO,WAET,CACED,WAAY,SACZztD,WAAY,SACZ0tD,MAAO,kBAET,CACED,WAAY,SACZztD,WAAY,SACZ0tD,MAAO,uBAGX9iK,OAAQ,CACN+iK,oBAAqB,UACrBC,oBAAqB,UACrBC,6BAA8B,UAC9BC,iCAAkC,UAClCC,0BAA2B,UAC3BC,8BAA+B,aCrCpBC,EAAA,CACbthM,KAAM,UACN2rH,UAAW,UACXF,UAhJgB,CAChBk1E,KAAM,UACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,UAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZj6L,UAAW,SACXk6L,MAAO,gBAET,CACED,WAAY,SACZj6L,UAAW,YACXk6L,MAAO,qBAET,CACED,WAAY,SACZj6L,UAAW,mBACXk6L,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZj6L,UAAW,SACXk6L,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZj6L,UAAW,SACXk6L,MAAO,gBAET,CACED,WAAY,SACZj6L,UAAW,SACXk6L,MAAO,iBAET,CACED,WAAY,SACZztD,WAAY,SACZ0tD,MAAO,WAET,CACED,WAAY,SACZztD,WAAY,SACZ0tD,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,4DAET,CACED,WAAY,SACZC,MAAO,aAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,sDAET,CACED,WAAY,SACZC,MAAO,uCAGX9iK,OAAQ,CACN+iK,oBAAqB,UACrBC,oBAAqB,UACrBC,6BAA8B,UAC9BC,iCAAkC,UAClCC,0BAA2B,UAC3BC,8BAA+B,UAC/BE,qCAAsC,UACtCC,kCAAmC,aCyCxBC,EAAA,CACbzhM,KAAM,WACN2rH,UAAW,WACXF,UArLgB,CAChBk1E,KAAM,KACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,4BAET,CACED,WAAY,SACZC,MAAO,YAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,YAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,UAET,CACED,WAAY,SACZC,MAAO,yBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZztD,WAAY,SACZ0tD,MAAO,WAET,CACED,WAAY,SACZztD,WAAY,SACZ0tD,MAAO,kBAET,CACED,WAAY,SACZztD,WAAY,SACZ0tD,MAAO,uBAGX9iK,OAAQ,CACN+iK,oBAAqB,UACrBC,oBAAqB,UACrBC,6BAA8B,UAC9BC,iCAAkC,UAClCC,0BAA2B,UAC3BC,8BAA+B,aCxCpBK,EAAA,CACb1hM,KAAM,iBACN2rH,UAAW,iBACXF,UAzIgB,CAChBk1E,KAAM,UACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZj6L,UAAW,SACXk6L,MAAO,WAET,CACED,WAAY,SACZC,MAAO,UAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZj6L,UAAW,OACXk6L,MAAO,WAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,mCAET,CACED,WAAY,SACZC,MAAO,sCAET,CACED,WAAY,SACZC,MAAO,oCAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,8BAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZj6L,UAAW,OACXk6L,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,8BAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,sCAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,2BAGX9iK,OAAQ,CACN+iK,oBAAqB,UACrBC,oBAAqB,UACrBC,6BAA8B,UAC9BC,iCAAkC,UAClCC,0BAA2B,UAC3BC,8BAA+B,aCGpBM,EAAA,CACb3hM,KAAM,kBACN2rH,UAAW,kBACXF,UAxIgB,CAChBk1E,KAAM,KACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,UAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZj6L,UAAW,OACXk6L,MAAO,WAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,mCAET,CACED,WAAY,SACZC,MAAO,sCAET,CACED,WAAY,SACZC,MAAO,oCAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,8BAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZj6L,UAAW,OACXk6L,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,oCAET,CACED,WAAY,SACZC,MAAO,kCAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,sCAET,CACED,WAAY,SACZC,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,2BAGX9iK,OAAQ,CACN+iK,oBAAqB,UACrBC,oBAAqB,UACrBC,6BAA8B,UAC9BC,iCAAkC,UAClCC,0BAA2B,UAC3BC,8BAA+B,aC0EpBO,EAAA,CACb5hM,KAAM,cACN2rH,UAAW,cACXF,UA9MgB,CAChBk1E,KAAM,UACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZztD,WAAY,SACZ0tD,MAAO,QAET,CACE1tD,WAAY,SACZ0tD,MAAO,mCAET,CACED,WAAY,SACZztD,WAAY,SACZ0tD,MAAO,kBAET,CACED,WAAY,SACZztD,WAAY,SACZ0tD,MAAO,WAET,CACED,WAAY,SACZztD,WAAY,SACZ0tD,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZztD,WAAY,SACZ0tD,MAAO,UAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,YAET,CACED,WAAY,SACZC,MAAO,WAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,kCAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,4BAET,CACEl6L,UAAW,SACXk6L,MAAO,sBAET,CACED,WAAY,SACZztD,WAAY,SACZ0tD,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,UAET,CACED,WAAY,SACZC,MAAO,oCAET,CACED,WAAY,SACZztD,WAAY,SACZ0tD,MAAO,uBAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,iDAET,CACEl6L,UAAW,YACXk6L,MAAO,qBAET,CACEl6L,UAAW,YACXk6L,MAAO,oBAET,CACEl6L,UAAW,mBACXk6L,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,4BAET,CACED,WAAY,SACZC,MAAO,2BAET,CACED,WAAY,SACZj6L,UAAW,SACXk6L,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZC,MAAO,gDAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,sCAET,CACED,WAAY,SACZC,MAAO,yCAET,CACED,WAAY,SACZC,MAAO,kCAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,gCAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,qCAET,CACED,WAAY,SACZC,MAAO,uBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,8BAET,CACED,WAAY,SACZC,MAAO,0CAGX9iK,OAAQ,CACN+iK,oBAAqB,UACrBC,oBAAqB,UACrBC,6BAA8B,UAC9BC,iCAAkC,UAClCC,0BAA2B,UAC3BC,8BAA+B,aC6CpBQ,EAAA,CACb7hM,KAAM,SACN2rH,UAAW,SACXF,UAvPgB,CAChBk1E,KAAM,KACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZj6L,UAAW,SACXk6L,MAAO,WAET,CACED,WAAY,SACZj6L,UAAW,OACXk6L,MAAO,8BAET,CACED,WAAY,SACZj6L,UAAW,cACXk6L,MAAO,yBAET,CACED,WAAY,SACZj6L,UAAW,cACXk6L,MAAO,+BAET,CACED,WAAY,SACZztD,WAAY,SACZ0tD,MAAO,mBAET,CACEl6L,UAAW,OACXk6L,MAAO,WAET,CACEl6L,UAAW,OACXk6L,MAAO,WAET,CACEl6L,UAAW,OACXk6L,MAAO,oBAET,CACEl6L,UAAW,OACXk6L,MAAO,qBAET,CACEl6L,UAAW,OACXk6L,MAAO,oBAET,CACED,WAAY,SACZj6L,UAAW,OACXk6L,MAAO,gBAET,CACED,WAAY,SACZj6L,UAAW,OACXk6L,MAAO,gBAET,CACED,WAAY,SACZC,MAAO,+BAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,qBAET,CACED,WAAY,SACZj6L,UAAW,OACXk6L,MAAO,oBAET,CACED,WAAY,SACZj6L,UAAW,OACXk6L,MAAO,gCAET,CACED,WAAY,SACZj6L,UAAW,OACXk6L,MAAO,iBAET,CACED,WAAY,SACZC,MAAO,2BAET,CACED,WAAY,SACZC,MAAO,6BAET,CACED,WAAY,SACZC,MAAO,yBAET,CACED,WAAY,SACZC,MAAO,wBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,mCAET,CACED,WAAY,SACZC,MAAO,uBAET,CACED,WAAY,SACZC,MAAO,mBAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,oBAET,CACED,WAAY,SACZC,MAAO,kBAET,CACED,WAAY,SACZC,MAAO,0BAET,CACED,WAAY,SACZC,MAAO,sBAET,CACED,WAAY,SACZC,MA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","file":"static/js/1.af39f4e8.chunk.js","sourcesContent":["// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { PureComponent } from 'react';\nimport { List, ListItem } from '../UI/List';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport { Column, Line } from '../UI/Grid';\nimport Window from '../Utils/Window';\nimport Text from '../UI/Text';\nimport PreferencesContext from './Preferences/PreferencesContext';\nimport {\n  getUpdateStatusLabel,\n  getUpdateButtonLabel,\n  canDownloadUpdate,\n  type UpdateStatus,\n} from './UpdaterTools';\nimport Changelog from './Changelog';\nimport { getIDEVersion, getGDCoreVersion } from '../Version';\n\ntype Props = {\n  open: boolean,\n  onClose: Function,\n  updateStatus: UpdateStatus,\n};\n\ntype State = {|\n  currentTab: string,\n|};\n\nconst styles = {\n  logo: {\n    width: '100%',\n  },\n};\n\n// There must be missing tons of people.\n// If you contributed to GDevelop but you're not in the list, please\n// send a Pull Request on GitHub or open an issue ;)\nconst contributors = [\n  // GitHub contributors\n  {\n    name: 'Victor Levasseur',\n    description:\n      'Numerous contributions to GDevelop core and various extensions',\n  },\n  {\n    name: 'Lizard-13',\n    description:\n      'Numerous contributions to GDevelop (particle engine, bugfixes, new conditions, examples, tutorials...)',\n  },\n  {\n    name: \"Christina 'Castpixel' Antoinette Neofotistou\",\n    description: 'Art and assets for the 8-bit Space Shooter example.',\n    link: 'https://www.patreon.com/castpixel',\n  },\n  { name: 'ale26reg', description: 'Contributions to GDevelop' },\n  { name: 'dos1', description: 'Contributions to GDevelop' },\n  { name: 'Bouh', description: 'Contributions to GDevelop' },\n  {\n    name: 'Todor Imreorov',\n    description:\n      'Numerous contributions to GDevelop, added Piskel sprite editor and jfxr',\n  },\n  { name: 'brylie', description: 'Contributions to GDevelop' },\n  { name: 'Nnarol', description: 'Contributions to GDevelop' },\n  { name: 'wild-master', description: 'Contributions to GDevelop' },\n  { name: 'RandomShaper', description: 'Contributions to GDevelop' },\n  { name: 'RyanNerd', description: 'Contributions to GDevelop' },\n  { name: 'greater', description: 'Contributions to GDevelop' },\n  { name: 'triptych', description: 'Contributions to GDevelop' },\n  {\n    name: 'Wend1go',\n    description: 'Contributions to GDevelop, Tutorials, Examples',\n  },\n  { name: 'mattiascibien', description: 'Contributions to GDevelop' },\n  { name: 'araujo921', description: 'Contributions to GDevelop' },\n  { name: 'ronnystandtke', description: 'Contributions to GDevelop' },\n  {\n    name: 'Thomas Flecy',\n    description: 'Contributions to GDevelop (original sound object extension)',\n  },\n\n  // Community members:\n  {\n    name: 'ddabrahim',\n    description: 'Lots of examples bundled with GDevelop',\n    link: 'https://gametemplates.itch.io/',\n  },\n  {\n    name: 'Gametemplates',\n    description: 'Examples bundled with GDevelop',\n    link: 'https://gametemplates.itch.io/',\n  },\n  { name: 'Mats', description: 'Tutorials, Examples' },\n  { name: 'erdo', description: 'Tutorials, Examples' },\n  { name: 'Jubileuksen3', description: 'Tutorials, Examples' },\n  { name: 'LucaTexas', description: 'Tutorials, Examples' },\n  { name: 'Kink', description: 'Forum moderator, tutorials, Examples' },\n  { name: 'RicoTrooper', description: 'Tutorials' },\n  { name: 'kalel', description: 'Tutorials' },\n  { name: 'mtarzaim', description: 'Tutorials' },\n  { name: 'Darkhog', description: 'Examples' },\n  { name: 'Ricardo Graca', description: 'Tutorials, Examples' },\n  { name: 'Diego Schiavon', description: 'Indiegogo Ubuntu contributor' },\n  { name: 'conceptgame', description: 'Indiegogo super contributor' },\n  {\n    name: 'Jose David Cuartas Correa',\n    description:\n      'Author of Digitopolis (a book on how to make games with GDevelop4)',\n  },\n\n  {\n    name: 'François Dumortier',\n    description: 'GDevelop logo design',\n    link: 'http://www.fdumortier.com',\n  },\n  {\n    name: 'Constantine Shvetsov',\n    description: 'Design of all the awesome icons',\n  },\n  {\n    name: 'MillionthVector',\n    description: 'Assets of various examples',\n  },\n];\n\nexport default class AboutDialog extends PureComponent<Props, State> {\n  state = {\n    currentTab: 'about',\n  };\n\n  _openContributePage = () => {\n    Window.openExternalURL('https://gdevelop-app.com/contribute/');\n  };\n\n  _openLink = (link: string) => {\n    if (!link) return;\n\n    Window.openExternalURL(link);\n  };\n\n  _changeTab = (currentTab: string) => {\n    this.setState({ currentTab });\n  };\n\n  render() {\n    const { open, onClose, updateStatus } = this.props;\n    const { currentTab } = this.state;\n    if (!open) return null;\n\n    const updateStatusString = getUpdateStatusLabel(updateStatus.status);\n    const updateButtonLabel = getUpdateButtonLabel(updateStatus.status);\n\n    return (\n      <Dialog\n        actions={[\n          <FlatButton\n            key=\"website\"\n            label={<Trans>GDevelop Website</Trans>}\n            primary={false}\n            onClick={() => Window.openExternalURL('http://gdevelop-app.com')}\n          />,\n          <FlatButton\n            key=\"close\"\n            label={<Trans>Close</Trans>}\n            primary={false}\n            onClick={onClose}\n          />,\n        ]}\n        onRequestClose={onClose}\n        open={open}\n        maxWidth=\"sm\"\n        noMargin\n      >\n        <PreferencesContext.Consumer>\n          {({ values, checkUpdates }) => (\n            <Column noMargin>\n              <img\n                src=\"res/GD-logo.png\"\n                alt=\"GDevelop logo\"\n                style={styles.logo}\n              />\n              <Tabs value={currentTab} onChange={this._changeTab}>\n                <Tab label={<Trans>About GDevelop</Trans>} value=\"about\" />\n                <Tab label={<Trans>What's new?</Trans>} value=\"changelog\" />\n                <Tab label={<Trans>Contributors</Trans>} value=\"contributors\" />\n              </Tabs>\n              {currentTab === 'about' && (\n                <React.Fragment>\n                  <Column>\n                    <Line>\n                      <Text>\n                        <Trans>\n                          GDevelop {getIDEVersion()} based on GDevelop.js{' '}\n                          {getGDCoreVersion()}\n                        </Trans>\n                      </Text>\n                    </Line>\n                    <Line>\n                      <Text>{updateStatusString}</Text>\n                    </Line>\n                    <Line justifyContent=\"center\">\n                      {!!updateStatusString && (\n                        <FlatButton\n                          label={updateButtonLabel}\n                          onClick={() =>\n                            checkUpdates(canDownloadUpdate(updateStatus.status))\n                          }\n                        />\n                      )}\n                    </Line>\n                  </Column>\n                </React.Fragment>\n              )}\n              {currentTab === 'changelog' && (\n                <Column>\n                  <Changelog />\n                </Column>\n              )}\n              {currentTab === 'contributors' && (\n                <React.Fragment>\n                  <Column>\n                    <Text>\n                      <Trans>\n                        GDevelop was created by Florian \"4ian\" Rival.\n                      </Trans>\n                    </Text>\n                    <Text>\n                      <Trans>Contributors, in no particular order:</Trans>\n                    </Text>\n                  </Column>\n                  <List>\n                    {contributors.map(contributor => (\n                      <ListItem\n                        key={contributor.name}\n                        primaryText={contributor.name}\n                        secondaryText={contributor.description}\n                        secondaryTextLines={\n                          contributor.description.length < 30 ? 1 : 2\n                        }\n                        displayLinkButton={contributor.link ? true : false}\n                        onOpenLink={() =>\n                          this._openLink(contributor.link || '')\n                        }\n                      />\n                    ))}\n                  </List>\n                  <Column expand>\n                    <Text>\n                      <Trans>\n                        Thanks to all users of GDevelop! There must be missing\n                        tons of people, please send your name if you've\n                        contributed and you're not listed.\n                      </Trans>\n                    </Text>\n                    <Line alignItems=\"center\" justifyContent=\"center\">\n                      <FlatButton\n                        label={<Trans>Contribute to GDevelop</Trans>}\n                        onClick={this._openContributePage}\n                      />\n                    </Line>\n                  </Column>\n                </React.Fragment>\n              )}\n            </Column>\n          )}\n        </PreferencesContext.Consumer>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { TreeTableRow, TreeTableCell } from '../UI/TreeTable';\nimport DragHandle from '../UI/DragHandle';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport Checkbox from '../UI/Checkbox';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport SubdirectoryArrowRight from '@material-ui/icons/SubdirectoryArrowRight';\nimport TextField from '../UI/TextField';\nimport IconButton from '../UI/IconButton';\nimport Replay from '@material-ui/icons/Replay';\nimport styles from './styles';\nimport { type VariableOrigin } from './VariablesList.flow';\nimport ThemeConsumer from '../UI/Theme/ThemeConsumer';\nimport Text from '../UI/Text';\n\n//TODO: Refactor into TreeTable?\nconst Indent = ({ width }) => (\n  <div style={{ ...styles.indent, width }}>\n    <SubdirectoryArrowRight htmlColor={styles.indentIconColor} />\n  </div>\n);\n\ntype Props = {|\n  name: string,\n  variable: gdVariable,\n  depth: number,\n  errorText?: ?string,\n  onBlur: () => void,\n  onRemove: () => void,\n  onAddChild: () => void,\n  onChangeValue: string => void,\n  onResetToDefaultValue: () => void,\n  children?: React.Node,\n  showHandle: boolean,\n  showSelectionCheckbox: boolean,\n  isSelected: boolean,\n  onSelect: boolean => void,\n  origin: VariableOrigin,\n|};\n\nconst VariableRow = ({\n  name,\n  variable,\n  depth,\n  errorText,\n  onBlur,\n  onRemove,\n  onAddChild,\n  onChangeValue,\n  onResetToDefaultValue,\n  children,\n  showHandle,\n  showSelectionCheckbox,\n  isSelected,\n  onSelect,\n  origin,\n}: Props) => {\n  const isStructure = variable.isStructure();\n  const key = '' + depth + name;\n\n  const limitEditing = origin === 'parent' || origin === 'inherited';\n\n  const columns = [\n    <TreeTableCell key=\"name\">\n      {depth > 0 && (\n        <Indent width={(depth + 1) * styles.tableChildIndentation} />\n      )}\n      {depth === 0 && showHandle && <DragHandle />}\n      {showSelectionCheckbox && !limitEditing && (\n        <Checkbox\n          checked={isSelected}\n          onCheck={(e, checked) => onSelect(checked)}\n        />\n      )}\n      <TextField\n        margin=\"none\"\n        style={{\n          fontStyle: origin !== 'inherited' ? 'normal' : 'italic',\n        }}\n        fullWidth\n        name={key + 'name'}\n        defaultValue={name}\n        errorText={errorText}\n        onBlur={onBlur}\n        disabled={origin === 'parent'}\n      />\n    </TreeTableCell>,\n  ];\n  if (!isStructure) {\n    columns.push(\n      <TreeTableCell key=\"value\">\n        <SemiControlledTextField\n          margin=\"none\"\n          commitOnBlur\n          fullWidth\n          name={key + 'value'}\n          value={variable.getString()}\n          onChange={text => {\n            if (variable.getString() !== text) {\n              onChangeValue(text);\n            }\n          }}\n          multiLine\n          disabled={origin === 'parent' && depth !== 0}\n        />\n      </TreeTableCell>\n    );\n  } else {\n    columns.push(\n      <TreeTableCell\n        key=\"value\"\n        style={limitEditing ? styles.fadedButton : undefined}\n      >\n        <Text>(Structure)</Text>\n      </TreeTableCell>\n    );\n  }\n  columns.push(\n    <TreeTableCell key=\"tools\" style={styles.toolColumn}>\n      {origin === 'inherited' && depth === 0 && (\n        <IconButton\n          onClick={onResetToDefaultValue}\n          style={isStructure ? undefined : styles.fadedButton}\n          tooltip={t`Reset`}\n        >\n          <Replay />\n        </IconButton>\n      )}\n      {!(origin === 'inherited' && depth === 0) && origin !== 'parent' && (\n        <IconButton\n          onClick={onAddChild}\n          style={isStructure ? undefined : styles.fadedButton}\n          tooltip={t`Add child variable`}\n        >\n          <AddCircle />\n        </IconButton>\n      )}\n    </TreeTableCell>\n  );\n\n  return (\n    <ThemeConsumer>\n      {muiTheme => (\n        <div>\n          <TreeTableRow\n            style={{ backgroundColor: muiTheme.list.itemsBackgroundColor }}\n          >\n            {columns}\n          </TreeTableRow>\n          {children}\n        </div>\n      )}\n    </ThemeConsumer>\n  );\n};\n\nexport default VariableRow;\n","// @flow\n/**\n * Export functions to manipulate a selection of objects.\n */\n\nimport values from 'lodash/values';\n\ntype ObjectType = { ptr: number };\n\ntype SelectionState<T> = {\n  [number]: ?T,\n};\n\nexport const getInitialSelection = () => ({});\n\nexport const clearSelection = () => getInitialSelection();\n\nexport const getSelection = <T: ObjectType>(\n  selection: SelectionState<T>\n): Array<T> => values(selection).filter(value => !!value);\n\nexport const addToSelection = <T: ObjectType>(\n  selection: SelectionState<T>,\n  object: T,\n  select: boolean = true\n): SelectionState<T> => {\n  console.log(object, select);\n  return {\n    ...selection,\n    [object.ptr]: select ? object : null,\n  };\n};\n\nexport const isSelected = <T: ObjectType>(\n  selection: SelectionState<T>,\n  object: T\n): boolean => !!selection[object.ptr];\n\nexport const hasSelection = <T: ObjectType>(\n  selection: SelectionState<T>\n): boolean => {\n  return !!values(selection).filter(value => !!value).length;\n};\n","export const CLIPBOARD_KIND = 'Variables';\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport Dialog from '../UI/Dialog';\nimport { Line } from '../UI/Grid';\nimport ResourcesLoader from '../ResourcesLoader';\nimport ResourceSelectorWithThumbnail from '../ResourcesList/ResourceSelectorWithThumbnail';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport { resizeImage, isResizeSupported } from './ImageResizer';\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport Text from '../UI/Text';\nconst path = optionalRequire('path');\nconst gd = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  open: boolean,\n  onClose: Function,\n  onApply: Function,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n|};\n\ntype State = {|\n  desktopIconResourceNames: Array<string>,\n  androidIconResourceNames: Array<string>,\n  iosIconResourceNames: Array<string>,\n|};\n\nconst desktopSizes = [512];\nconst androidSizes = [192, 144, 96, 72, 48, 36];\nconst iosSizes = [\n  180,\n  167,\n  152,\n  144,\n  120,\n  114,\n  100,\n  80,\n  76,\n  72,\n  60,\n  58,\n  57,\n  50,\n  40,\n  29,\n];\n\nexport default class PlatformSpecificAssetsDialog extends React.Component<\n  Props,\n  State\n> {\n  constructor(props: Props) {\n    super(props);\n    this.state = this._loadFrom(props.project);\n  }\n\n  _loadFrom(project: gdProject): State {\n    return {\n      desktopIconResourceNames: desktopSizes.map(size =>\n        project.getPlatformSpecificAssets().get('desktop', `icon-${size}`)\n      ),\n      androidIconResourceNames: androidSizes.map(size =>\n        project.getPlatformSpecificAssets().get('android', `icon-${size}`)\n      ),\n      iosIconResourceNames: iosSizes.map(size =>\n        project.getPlatformSpecificAssets().get('ios', `icon-${size}`)\n      ),\n    };\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      (!this.props.open && newProps.open) ||\n      (newProps.open && this.props.project !== newProps.project)\n    ) {\n      this.setState(this._loadFrom(newProps.project));\n    }\n  }\n\n  _generateFromFile = () => {\n    const { project, resourceSources, onChooseResource } = this.props;\n\n    const sources = resourceSources.filter(source => source.kind === 'image');\n    if (!sources.length) return;\n\n    onChooseResource(sources[0].name, false).then(resources => {\n      if (!resources.length || !path) {\n        return;\n      }\n\n      const resourcesManager = project.getResourcesManager();\n      const projectPath = path.dirname(project.getProjectFile());\n      const fullPath = path.resolve(projectPath, resources[0].getFile());\n\n      // Important, we are responsible for deleting the resources that were given to us.\n      // Otherwise we have a memory leak.\n      resources.forEach(resource => resource.delete());\n\n      Promise.all([\n        ...desktopSizes.map(size =>\n          resizeImage(\n            fullPath,\n            path.join(projectPath, `desktop-icon-${size}.png`),\n            {\n              width: size,\n              height: size,\n            }\n          )\n        ),\n        ...androidSizes.map(size =>\n          resizeImage(\n            fullPath,\n            path.join(projectPath, `android-icon-${size}.png`),\n            {\n              width: size,\n              height: size,\n            }\n          )\n        ),\n        ...iosSizes.map(size =>\n          resizeImage(\n            fullPath,\n            path.join(projectPath, `ios-icon-${size}.png`),\n            {\n              width: size,\n              height: size,\n            }\n          )\n        ),\n      ]).then(results => {\n        if (results.indexOf(false) !== -1) {\n          showErrorBox('Some icons could not be generated!');\n          return;\n        }\n\n        // Add resources to the game\n        const allResourcesNames = [\n          ...desktopSizes.map(size => `desktop-icon-${size}.png`),\n          ...androidSizes.map(size => `android-icon-${size}.png`),\n          ...iosSizes.map(size => `ios-icon-${size}.png`),\n        ];\n        allResourcesNames.forEach(resourceName => {\n          if (!resourcesManager.hasResource(resourceName)) {\n            const imageResource = new gd.ImageResource();\n            imageResource.setFile(resourceName);\n            imageResource.setName(resourceName);\n\n            resourcesManager.addResource(imageResource);\n\n            // Important, we are responsible for deleting the resources that we created\n            // Otherwise we have a memory leak, as calling addResource is making a copy of the resource.\n            imageResource.delete();\n          } else {\n            resourcesManager.getResource(resourceName).setFile(resourceName);\n          }\n        });\n\n        // Make sure the resources are (re)loaded.\n        ResourcesLoader.burstUrlsCacheForResources(project, allResourcesNames);\n        setTimeout(() => {\n          this.setState({\n            desktopIconResourceNames: desktopSizes.map(\n              size => `desktop-icon-${size}.png`\n            ),\n            androidIconResourceNames: androidSizes.map(\n              size => `android-icon-${size}.png`\n            ),\n            iosIconResourceNames: iosSizes.map(size => `ios-icon-${size}.png`),\n          });\n        }, 200 /* Let a bit of time so that image files can be found */);\n      });\n    });\n  };\n\n  _onApply = () => {\n    const { project } = this.props;\n    const {\n      desktopIconResourceNames,\n      androidIconResourceNames,\n      iosIconResourceNames,\n    } = this.state;\n\n    desktopSizes.forEach((size, index) => {\n      project\n        .getPlatformSpecificAssets()\n        .set('desktop', `icon-${size}`, desktopIconResourceNames[index]);\n    });\n    androidSizes.forEach((size, index) => {\n      project\n        .getPlatformSpecificAssets()\n        .set('android', `icon-${size}`, androidIconResourceNames[index]);\n    });\n    iosSizes.forEach((size, index) => {\n      project\n        .getPlatformSpecificAssets()\n        .set('ios', `icon-${size}`, iosIconResourceNames[index]);\n    });\n\n    this.props.onApply();\n  };\n\n  render() {\n    const actions = [\n      <FlatButton\n        key=\"cancel\"\n        label={<Trans>Cancel</Trans>}\n        primary={false}\n        onClick={this.props.onClose}\n      />,\n      <FlatButton\n        key=\"apply\"\n        label={<Trans>Apply</Trans>}\n        primary={true}\n        keyboardFocused={true}\n        onClick={this._onApply}\n      />,\n    ];\n    const {\n      project,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n    } = this.props;\n    const {\n      desktopIconResourceNames,\n      androidIconResourceNames,\n      iosIconResourceNames,\n    } = this.state;\n\n    return (\n      <Dialog\n        title={<Trans>Project icons</Trans>}\n        actions={actions}\n        open={this.props.open}\n        onRequestClose={this.props.onClose}\n      >\n        <Line justifyContent=\"center\">\n          {isResizeSupported() ? (\n            <RaisedButton\n              primary\n              label={<Trans>Generate icons from a file</Trans>}\n              onClick={this._generateFromFile}\n            />\n          ) : (\n            <Text>\n              <Trans>\n                Download GDevelop desktop version to generate the Android and\n                iOS icons of your game.\n              </Trans>\n            </Text>\n          )}\n        </Line>\n        <Text>\n          <Trans>Desktop (Windows, macOS and Linux) icon:</Trans>\n        </Text>\n        {desktopSizes.map((size, index) => (\n          <ResourceSelectorWithThumbnail\n            key={size}\n            floatingLabelText={`Desktop icon (${size}x${size} px)`}\n            project={project}\n            resourceSources={resourceSources}\n            onChooseResource={onChooseResource}\n            resourceExternalEditors={resourceExternalEditors}\n            resourceKind=\"image\"\n            resourceName={desktopIconResourceNames[index]}\n            onChange={resourceName => {\n              const newIcons = [...desktopIconResourceNames];\n              newIcons[index] = resourceName;\n              this.setState({\n                desktopIconResourceNames: newIcons,\n              });\n            }}\n          />\n        ))}\n        <Text>\n          <Trans>Android icons:</Trans>\n        </Text>\n        {androidSizes.map((size, index) => (\n          <ResourceSelectorWithThumbnail\n            key={size}\n            floatingLabelText={`Android icon (${size}x${size} px)`}\n            project={project}\n            resourceSources={resourceSources}\n            onChooseResource={onChooseResource}\n            resourceExternalEditors={resourceExternalEditors}\n            resourceKind=\"image\"\n            resourceName={androidIconResourceNames[index]}\n            onChange={resourceName => {\n              const newIcons = [...androidIconResourceNames];\n              newIcons[index] = resourceName;\n              this.setState({\n                androidIconResourceNames: newIcons,\n              });\n            }}\n          />\n        ))}\n        <Text>\n          <Trans>iOS (iPhone and iPad) icons:</Trans>\n        </Text>\n        {iosSizes.map((size, index) => (\n          <ResourceSelectorWithThumbnail\n            key={size}\n            floatingLabelText={`iOS icon (${size}x${size} px)`}\n            project={project}\n            resourceSources={resourceSources}\n            onChooseResource={onChooseResource}\n            resourceKind=\"image\"\n            resourceName={iosIconResourceNames[index]}\n            resourceExternalEditors={resourceExternalEditors}\n            onChange={resourceName => {\n              const newIcons = [...iosIconResourceNames];\n              newIcons[index] = resourceName;\n              this.setState({\n                iosIconResourceNames: newIcons,\n              });\n            }}\n          />\n        ))}\n      </Dialog>\n    );\n  }\n}\n","//@flow\nimport optionalRequire from '../Utils/OptionalRequire';\nconst Jimp = optionalRequire('jimp');\n\nexport const isResizeSupported = () => !!Jimp;\n\nexport const resizeImage = (\n  inputFile: string,\n  outputFile: string,\n  { width, height }: { width: number, height: number }\n): Promise<any> => {\n  if (!Jimp) return Promise.resolve(false);\n\n  return Jimp.read(inputFile)\n    .then(function(jimpImage) {\n      return jimpImage.contain(width, height).write(outputFile);\n    })\n    .then(() => {\n      return true;\n    })\n    .catch(function(err) {\n      console.error(err);\n      return false;\n    });\n};\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst loaderSize = 50;\n\nexport default props => {\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0,0,0,0.5)',\n        zIndex: 2000, // 2000 is higher than any Material-UI modal\n        pointerEvents: props.show ? 'cursor' : 'none',\n        display: props.show ? 'block' : 'none',\n      }}\n    >\n      <div\n        style={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          marginTop: -loaderSize / 2,\n          marginLeft: -loaderSize / 2,\n          width: loaderSize,\n          height: loaderSize,\n        }}\n      >\n        {props.show /* Don't render CircularProgress to avoid it to use a timeout that would wake regularly the CPU  */ && (\n          <CircularProgress size={loaderSize} disableShrink />\n        )}\n      </div>\n    </div>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport Window from '../Utils/Window';\nconst electron = optionalRequire('electron');\n\ntype Props = {|\n  shouldPrompt: boolean,\n|};\n\nexport default class CloseConfirmDialog extends React.Component<Props, *> {\n  _delayElectronClose = true;\n\n  componentDidMount() {\n    this._setup(this.props);\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (newProps.shouldPrompt !== this.props.shouldPrompt)\n      this._setup(newProps);\n  }\n\n  _setup(props: Props) {\n    if (Window.isDev()) return; // Don't prevent live-reload in development\n\n    const { shouldPrompt } = props;\n    const message =\n      'Are you sure you want to quit GDevelop? Any unsaved changes will be lost.';\n\n    if (electron) {\n      window.onbeforeunload = e => {\n        if (this._delayElectronClose && shouldPrompt) {\n          // Use setTimeout to avoiding blocking the thread with the \"confirm\" dialog,\n          // which would make Electron to close the window for some weird reason.\n          // See https://github.com/electron/electron/issues/7977\n          setTimeout(() => {\n            //eslint-disable-next-line\n            const answer = confirm(message);\n            if (answer) {\n              // If answer is positive, re-trigger the close\n              this._delayElectronClose = false;\n              electron.remote.getCurrentWindow().close();\n            }\n          }, 10);\n\n          // Prevents closing the window immediately. See https://github.com/electron/electron/blob/master/docs/api/browser-window.md#event-close\n          e.returnValue = true; //\"It is recommended to always set the event.returnValue explicitly, instead of only returning a value, as the former works more consistently within Electron.\"\"\n          return false; //\"In Electron, returning any value other than undefined would cancel the close\"\n        } else {\n          // Returning undefined will let the window close\n        }\n      };\n    } else if (window) {\n      if (shouldPrompt) {\n        window.onbeforeunload = () => message;\n      } else {\n        window.onbeforeunload = null;\n      }\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n","// @flow\nimport React, { Component, useEffect, type Node, useRef } from 'react';\nimport Close from '@material-ui/icons/Close';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport ThemeConsumer from './Theme/ThemeConsumer';\nimport ContextMenu from './Menu/ContextMenu';\n\nconst styles = {\n  tabsContainerStyle: {\n    maxWidth: '100%',\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  tabContentContainer: {\n    width: '100%',\n    position: 'relative',\n    textAlign: 'initial',\n    height: '100%',\n    display: 'flex',\n    flex: 1,\n  },\n  tabLabel: {\n    maxWidth: 400,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    marginTop: 6,\n    marginBottom: 6,\n    marginLeft: 10,\n    marginRight: 10,\n    fontSize: '15px', // Same as in Mosaic.css (for mosaic-window-title)\n  },\n  closeButton: {\n    marginTop: 7,\n    marginBottom: 7,\n    marginRight: 5,\n    marginLeft: 5,\n  },\n};\n\ntype TabContentContainerProps = {|\n  active: boolean,\n  children: Node,\n|};\n\n/**\n * Contains the content of a tab. Two important things:\n *\n * 1) Instead of setting the \"height\" of hidden tabs to \"0\", we set \"display\" to \"none\" to avoid\n * messing with components (in particular components where you can scroll: when collapsed because of height=0,\n * they will lose they scrolling position).\n *\n * 2) shouldComponentUpdate is used to avoid updating the content of a tab that is not selected.\n */\nexport class TabContentContainer extends Component<TabContentContainerProps> {\n  shouldComponentUpdate(nextProps: TabContentContainerProps) {\n    return this.props.active || nextProps.active;\n  }\n\n  render() {\n    const { children, active } = this.props;\n    return (\n      <div\n        style={{\n          ...styles.tabContentContainer,\n          ...(active ? undefined : { display: 'none' }),\n        }}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\ntype ClosableTabsProps = {|\n  hideLabels?: boolean,\n  children: Node,\n|};\n\nexport class ClosableTabs extends Component<ClosableTabsProps> {\n  render() {\n    const { hideLabels, children } = this.props;\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => {\n          const tabItemContainerStyle = {\n            maxWidth: '100%', // Tabs should take all width\n            flexShrink: 0, // Tabs height should never be reduced\n            display: hideLabels ? 'none' : 'flex',\n            flexWrap: 'nowrap', // Single line of tab...\n            overflowX: 'auto', // ...scroll horizontally if needed\n            backgroundColor: muiTheme.closableTabs.backgroundColor,\n          };\n\n          return <div style={tabItemContainerStyle}>{children}</div>;\n        }}\n      </ThemeConsumer>\n    );\n  }\n}\n\ntype ClosableTabProps = {|\n  active: boolean,\n  label: Node,\n  closable: boolean,\n  onClose: () => void,\n  onCloseOthers: () => void,\n  onCloseAll: () => void,\n  onClick: () => void,\n  onActivated: () => void,\n|};\n\nexport function ClosableTab({\n  active,\n  onClose,\n  onCloseOthers,\n  onCloseAll,\n  label,\n  closable,\n  onClick,\n  onActivated,\n}: ClosableTabProps) {\n  useEffect(\n    () => {\n      if (active) {\n        onActivated();\n      }\n    },\n    [active]\n  );\n  const contextMenu = useRef<ContextMenu>(null);\n\n  const openContextMenu = event => {\n    event.stopPropagation();\n    if (contextMenu.current) {\n      contextMenu.current.open(event.clientX, event.clientY);\n    }\n  };\n\n  return (\n    <ThemeConsumer>\n      {muiTheme => {\n        const textColor = !active\n          ? muiTheme.closableTabs.textColor\n          : muiTheme.closableTabs.selectedTextColor;\n\n        return (\n          <React.Fragment>\n            <span\n              style={{\n                flexShrink: 0, // Tabs are never resized to fit in flex container\n                position: 'relative',\n                display: 'inline-block',\n                backgroundColor: !active\n                  ? muiTheme.closableTabs.backgroundColor\n                  : muiTheme.closableTabs.selectedBackgroundColor,\n              }}\n            >\n              <ButtonBase\n                onClick={onClick}\n                onContextMenu={openContextMenu}\n                focusRipple\n              >\n                <span\n                  style={{\n                    ...styles.tabLabel,\n                    color: textColor,\n                    fontFamily: muiTheme.closableTabs.fontFamily,\n                  }}\n                >\n                  {label}\n                </span>\n              </ButtonBase>\n              {closable && (\n                <ButtonBase\n                  onClick={onClose}\n                  onContextMenu={openContextMenu}\n                  focusRipple\n                >\n                  <Close\n                    style={{\n                      ...styles.closeButton,\n                      width: muiTheme.closableTabs.height / 2,\n                      height: muiTheme.closableTabs.height / 2,\n                    }}\n                    htmlColor={textColor}\n                  />\n                </ButtonBase>\n              )}\n            </span>\n            <ContextMenu\n              ref={contextMenu}\n              buildMenuTemplate={() => [\n                {\n                  label: 'Close',\n                  click: onClose,\n                  enabled: closable,\n                },\n                {\n                  label: 'Close others',\n                  click: onCloseOthers,\n                },\n                {\n                  label: 'Close all',\n                  click: onCloseAll,\n                },\n              ]}\n            />\n          </React.Fragment>\n        );\n      }}\n    </ThemeConsumer>\n  );\n}\n","// @flow\nimport findIndex from 'lodash/findIndex';\nimport EventsEditor from './Editors/EventsEditor';\nimport DebuggerEditor from './Editors/DebuggerEditor';\nimport EventsFunctionsExtensionEditorWrapper from './Editors/EventsFunctionsExtensionEditor';\nimport ExternalEventsEditor from './Editors/ExternalEventsEditor';\nimport ExternalLayoutEditor from './Editors/ExternalLayoutEditor';\nimport ResourcesEditor from './Editors/ResourcesEditor';\nimport SceneEditor from './Editors/SceneEditor';\n\n// Supported editors\ntype EditorRef =\n  | DebuggerEditor\n  | EventsEditor\n  | EventsFunctionsExtensionEditorWrapper\n  | ExternalEventsEditor\n  | ExternalLayoutEditor\n  | ResourcesEditor\n  | SceneEditor;\n\nexport type EditorTab = {|\n  render: (isCurrentTab: boolean) => React$Element<*>,\n  editorRef: ?EditorRef,\n  name: string,\n  key: string,\n  closable: boolean,\n|};\n\nexport type EditorTabsState = {\n  editors: Array<EditorTab>,\n  currentTab: number,\n};\n\nexport const getEditorTabsInitialState = (): EditorTabsState => {\n  return {\n    editors: [],\n    currentTab: 0,\n  };\n};\n\ntype renderEditorProps = {|\n  isActive: boolean,\n  editorRef: Function,\n|};\n\nexport const openEditorTab = (\n  state: EditorTabsState,\n  {\n    name,\n    renderEditor,\n    key,\n    dontFocusTab,\n    closable,\n  }: {\n    name: string,\n    renderEditor: (props: renderEditorProps) => React$Element<*>,\n    key: string,\n    dontFocusTab?: boolean,\n    closable?: boolean,\n  }\n): EditorTabsState => {\n  const existingEditorId = findIndex(\n    state.editors,\n    editor => editor.key === key\n  );\n  if (existingEditorId !== -1) {\n    return {\n      ...state,\n      currentTab: dontFocusTab ? state.currentTab : existingEditorId,\n    };\n  }\n\n  const editorTab: EditorTab = {\n    render: (isCurrentTab: boolean) =>\n      renderEditor({\n        isActive: isCurrentTab,\n        editorRef: editorRef => (editorTab.editorRef = editorRef),\n      }),\n    editorRef: null,\n    name,\n    key,\n    closable: typeof closable === 'undefined' ? true : !!closable,\n  };\n\n  return {\n    ...state,\n    editors: [...state.editors, editorTab],\n    currentTab: dontFocusTab ? state.currentTab : state.editors.length,\n  };\n};\n\nexport const changeCurrentTab = (\n  state: EditorTabsState,\n  newTabId: number\n): EditorTabsState => {\n  return {\n    ...state,\n    currentTab: Math.max(0, Math.min(newTabId, state.editors.length - 1)),\n  };\n};\n\nexport const closeAllEditorTabs = (state: EditorTabsState): EditorTabsState => {\n  return changeCurrentTab(\n    {\n      ...state,\n      editors: state.editors.filter(editorTab => !editorTab.closable),\n    },\n    0\n  );\n};\n\nexport const closeEditorTab = (\n  state: EditorTabsState,\n  chosenEditorTab: EditorTab\n): EditorTabsState => {\n  return changeCurrentTab(\n    {\n      ...state,\n      editors: state.editors.filter(editorTab => editorTab !== chosenEditorTab),\n    },\n    state.currentTab\n  );\n};\n\nexport const closeOtherEditorTabs = (\n  state: EditorTabsState,\n  chosenEditorTab: EditorTab\n): EditorTabsState => {\n  return changeCurrentTab(\n    {\n      ...state,\n      editors: state.editors.filter(\n        editorTab => !editorTab.closable || editorTab === chosenEditorTab\n      ),\n    },\n    state.currentTab\n  );\n};\n\nexport const getEditors = (state: EditorTabsState): Array<EditorTab> => {\n  return state.editors;\n};\n\nexport const getCurrentTabIndex = (state: EditorTabsState): number => {\n  return state.currentTab;\n};\n\nexport const getCurrentTab = (state: EditorTabsState): EditorTab => {\n  return state.editors[state.currentTab];\n};\n\nexport const closeProjectTabs = (\n  state: EditorTabsState,\n  project: ?gdProject\n) => {\n  return changeCurrentTab(\n    {\n      ...state,\n      editors: state.editors.filter(editorTab => {\n        const editorProject =\n          editorTab.editorRef && editorTab.editorRef.getProject();\n        return !editorProject || editorProject !== project;\n      }),\n    },\n    state.currentTab\n  );\n};\n\n/*\n * Ask the editors to persist their UI settings\n * to the project.\n */\nexport const saveUiSettings = (state: EditorTabsState) => {\n  state.editors.forEach(editorTab => {\n    if (editorTab.editorRef && editorTab.editorRef.saveUiSettings) {\n      editorTab.editorRef.saveUiSettings();\n    }\n  });\n};\n\nexport const closeLayoutTabs = (state: EditorTabsState, layout: gdLayout) => {\n  return changeCurrentTab(\n    {\n      ...state,\n      editors: state.editors.filter(editorTab => {\n        const editorLayout =\n          editorTab.editorRef && editorTab.editorRef.getLayout();\n        return !editorLayout || editorLayout !== layout;\n      }),\n    },\n    state.currentTab\n  );\n};\n\nexport const closeExternalLayoutTabs = (\n  state: EditorTabsState,\n  externalLayout: gdExternalLayout\n) => {\n  return changeCurrentTab(\n    {\n      ...state,\n      editors: state.editors.filter(editorTab => {\n        const editor = editorTab.editorRef;\n\n        if (editor instanceof ExternalLayoutEditor) {\n          return (\n            !editor.getExternalLayout() ||\n            editor.getExternalLayout() !== externalLayout\n          );\n        }\n\n        return true;\n      }),\n    },\n    state.currentTab\n  );\n};\n\nexport const closeExternalEventsTabs = (\n  state: EditorTabsState,\n  externalEvents: gdExternalEvents\n) => {\n  return changeCurrentTab(\n    {\n      ...state,\n      editors: state.editors.filter(editorTab => {\n        const editor = editorTab.editorRef;\n        if (editor instanceof ExternalEventsEditor) {\n          return (\n            !editor.getExternalEvents() ||\n            editor.getExternalEvents() !== externalEvents\n          );\n        }\n\n        return true;\n      }),\n    },\n    state.currentTab\n  );\n};\n\nexport const closeEventsFunctionsExtensionTabs = (\n  state: EditorTabsState,\n  eventsFunctionsExtension: gdEventsFunctionsExtension\n) => {\n  return changeCurrentTab(\n    {\n      ...state,\n      editors: state.editors.filter(editorTab => {\n        const editor = editorTab.editorRef;\n        if (editor instanceof EventsFunctionsExtensionEditorWrapper) {\n          return (\n            !editor.getEventsFunctionsExtension() ||\n            editor.getEventsFunctionsExtension() !== eventsFunctionsExtension\n          );\n        }\n\n        return true;\n      }),\n    },\n    state.currentTab\n  );\n};\n\nexport const getEventsFunctionsExtensionEditor = (\n  state: EditorTabsState,\n  eventsFunctionsExtension: gdEventsFunctionsExtension\n): ?{| editor: EventsFunctionsExtensionEditorWrapper, tabIndex: number |} => {\n  for (let tabIndex = 0; tabIndex < state.editors.length; ++tabIndex) {\n    const editor = state.editors[tabIndex].editorRef;\n    if (\n      editor instanceof EventsFunctionsExtensionEditorWrapper &&\n      editor.getEventsFunctionsExtension() === eventsFunctionsExtension\n    ) {\n      return { editor, tabIndex };\n    }\n  }\n\n  return null;\n};\n","// @flow\nimport React, { Component, type Node } from 'react';\nimport findIndex from 'lodash/findIndex';\nimport {\n  SortableTreeWithoutDndContext,\n  getNodeAtPath,\n} from 'react-sortable-tree';\nimport { mapFor } from '../../Utils/MapFor';\nimport { getInitialSelection, isEventSelected } from '../SelectionHandler';\nimport EventsRenderingService from './EventsRenderingService';\nimport EventHeightsCache from './EventHeightsCache';\nimport classNames from 'classnames';\nimport { eventsTree, eventsTreeWithSearchResults, icon } from './ClassNames';\nimport {\n  type SelectionState,\n  type EventContext,\n  type InstructionsListContext,\n  type InstructionContext,\n  type ParameterContext,\n} from '../SelectionHandler';\nimport { type EventsScope } from '../EventsScope.flow';\nimport getObjectByName from '../../Utils/GetObjectByName';\nimport ObjectsRenderingService from '../../ObjectsRendering/ObjectsRenderingService';\nimport { type ScreenType } from '../../UI/Reponsive/ScreenTypeMeasurer';\nimport { type WidthType } from '../../UI/Reponsive/ResponsiveWindowMeasurer';\n\n// Import default style of react-sortable-tree and the override made for EventsSheet.\nimport 'react-sortable-tree/style.css';\nimport './style.css';\nimport ThemeConsumer from '../../UI/Theme/ThemeConsumer';\n\nconst getThumbnail = ObjectsRenderingService.getThumbnail.bind(\n  ObjectsRenderingService\n);\n\nconst gd = global.gd;\n\nconst indentWidth = 22;\n\nconst styles = {\n  container: { flex: 1 },\n};\n\ntype EventsContainerProps = {|\n  eventsHeightsCache: EventHeightsCache,\n  event: gdBaseEvent,\n  leftIndentWidth: number,\n  disabled: boolean,\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  selection: SelectionState,\n  onAddNewInstruction: InstructionsListContext => void,\n  onPasteInstructions: InstructionsListContext => void,\n  onMoveToInstruction: (destinationContext: InstructionContext) => void,\n  onMoveToInstructionsList: (\n    destinationContext: InstructionsListContext\n  ) => void,\n  onInstructionClick: InstructionContext => void,\n  onInstructionDoubleClick: InstructionContext => void,\n  onInstructionContextMenu: (x: number, y: number, InstructionContext) => void,\n  onInstructionsListContextMenu: (\n    x: number,\n    y: number,\n    InstructionsListContext\n  ) => void,\n  onParameterClick: ParameterContext => void,\n\n  onEventClick: (eventContext: EventContext) => void,\n  onEventContextMenu: (x: number, y: number) => void,\n  onOpenExternalEvents: string => void,\n  onOpenLayout: string => void,\n  renderObjectThumbnail: string => Node,\n\n  screenType: ScreenType,\n  windowWidth: WidthType,\n|};\n\n/**\n * The component containing an event.\n * It will report the rendered event height so that the EventsTree can\n * update accordingly.\n */\nclass EventContainer extends Component<EventsContainerProps, {||}> {\n  _container: ?any;\n  componentDidMount() {\n    const height = this._container ? this._container.offsetHeight : 0;\n    this.props.eventsHeightsCache.setEventHeight(this.props.event, height);\n  }\n\n  componentDidUpdate() {\n    const height = this._container ? this._container.offsetHeight : 0;\n    this.props.eventsHeightsCache.setEventHeight(this.props.event, height);\n  }\n\n  _onEventUpdated = () => {\n    this.forceUpdate();\n  };\n\n  _onEventContextMenu = (domEvent: any) => {\n    domEvent.preventDefault();\n    this.props.onEventContextMenu(domEvent.clientX, domEvent.clientY);\n  };\n\n  render() {\n    const { event, project, scope, disabled } = this.props;\n    const EventComponent = EventsRenderingService.getEventComponent(event);\n\n    return (\n      <div\n        ref={container => (this._container = container)}\n        onClick={this.props.onEventClick}\n        onContextMenu={this._onEventContextMenu}\n      >\n        {EventComponent && (\n          <EventComponent\n            project={project}\n            scope={scope}\n            event={event}\n            globalObjectsContainer={this.props.globalObjectsContainer}\n            objectsContainer={this.props.objectsContainer}\n            selected={isEventSelected(this.props.selection, event)}\n            selection={this.props.selection}\n            leftIndentWidth={this.props.leftIndentWidth}\n            onUpdate={this._onEventUpdated}\n            onAddNewInstruction={this.props.onAddNewInstruction}\n            onPasteInstructions={this.props.onPasteInstructions}\n            onMoveToInstruction={this.props.onMoveToInstruction}\n            onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n            onInstructionClick={this.props.onInstructionClick}\n            onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n            onInstructionContextMenu={this.props.onInstructionContextMenu}\n            onInstructionsListContextMenu={\n              this.props.onInstructionsListContextMenu\n            }\n            onParameterClick={this.props.onParameterClick}\n            onOpenExternalEvents={this.props.onOpenExternalEvents}\n            onOpenLayout={this.props.onOpenLayout}\n            disabled={\n              disabled /* Use disabled (not event.disabled) as it is true if a parent event is disabled*/\n            }\n            renderObjectThumbnail={this.props.renderObjectThumbnail}\n            screenType={this.props.screenType}\n            windowWidth={this.props.windowWidth}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst getNodeKey = ({ treeIndex }) => treeIndex;\n\nconst SortableTree = ({ className, ...otherProps }) => (\n  <ThemeConsumer>\n    {muiTheme => (\n      <SortableTreeWithoutDndContext\n        className={`${eventsTree} ${\n          muiTheme.eventsSheetRootClassName\n        } ${className}`}\n        {...otherProps}\n      />\n    )}\n  </ThemeConsumer>\n);\n\nconst noop = () => {};\n\ntype EventsTreeProps = {|\n  events: gdEventsList,\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  selection: SelectionState,\n  onAddNewInstruction: InstructionsListContext => void,\n  onPasteInstructions: InstructionsListContext => void,\n  onMoveToInstruction: (destinationContext: InstructionContext) => void,\n  onMoveToInstructionsList: (\n    destinationContext: InstructionsListContext\n  ) => void,\n  onInstructionClick: InstructionContext => void,\n  onInstructionDoubleClick: InstructionContext => void,\n  onInstructionContextMenu: (x: number, y: number, InstructionContext) => void,\n  onInstructionsListContextMenu: (\n    x: number,\n    y: number,\n    InstructionsListContext\n  ) => void,\n  onParameterClick: ParameterContext => void,\n\n  onEventClick: (eventContext: EventContext) => void,\n  onEventContextMenu: (\n    x: number,\n    y: number,\n    eventContext: EventContext\n  ) => void,\n  onAddNewEvent: (eventContext: EventContext) => void,\n  onOpenExternalEvents: string => void,\n  onOpenLayout: string => void,\n  showObjectThumbnails: boolean,\n\n  searchResults: ?Array<gdBaseEvent>,\n  searchFocusOffset: ?number,\n\n  onEventMoved: () => void,\n  onScroll?: () => void,\n\n  screenType: ScreenType,\n  windowWidth: WidthType,\n|};\n\ntype SortableTreeNode = {\n  eventsList: gdEventsList,\n  event: gdBaseEvent,\n  depth: number,\n  disabled: boolean,\n  isCondition: boolean,\n  indexInList: number,\n};\n\n/**\n * Display a tree of event. Builtin on react-sortable-tree so that event\n * can be drag'n'dropped and events rows are virtualized.\n */\nexport default class ThemableEventsTree extends Component<EventsTreeProps, *> {\n  static defaultProps = {\n    selection: getInitialSelection(),\n  };\n  _list: ?any;\n  eventsHeightsCache: EventHeightsCache;\n\n  constructor(props: EventsTreeProps) {\n    super(props);\n\n    this.eventsHeightsCache = new EventHeightsCache(this);\n    this.state = {\n      ...this._eventsToTreeData(props.events),\n    };\n  }\n\n  componentDidMount() {\n    this.onHeightsChanged();\n  }\n\n  /**\n   * Should be called whenever an event height has changed\n   */\n  onHeightsChanged(cb: ?() => void) {\n    this.forceUpdate(() => {\n      if (this._list && this._list.wrappedInstance.current) {\n        this._list.wrappedInstance.current.recomputeRowHeights();\n      }\n      if (cb) cb();\n    });\n  }\n\n  /**\n   * Should be called whenever events changed (new event...)\n   * from outside this component.\n   */\n  forceEventsUpdate(cb: ?() => void) {\n    this.setState(this._eventsToTreeData(this.props.events), () => {\n      if (this._list && this._list.wrappedInstance.current) {\n        this._list.wrappedInstance.current.recomputeRowHeights();\n      }\n      if (cb) cb();\n    });\n  }\n\n  scrollToEvent(event: gdBaseEvent) {\n    const row = this._getEventRow(event);\n    if (row !== -1) {\n      if (this._list && this._list.wrappedInstance.current) {\n        this._list.wrappedInstance.current.scrollToRow(row);\n      }\n    }\n  }\n\n  /**\n   * Unfold events so that the given one is visible\n   */\n  unfoldForEvent(event: gdBaseEvent) {\n    gd.EventsListUnfolder.unfoldWhenContaining(this.props.events, event);\n    this.forceEventsUpdate();\n  }\n\n  _getEventRow(searchedEvent: gdBaseEvent) {\n    // TODO: flatData could be replaced by a hashmap of events to row index\n    return findIndex(\n      this.state.flatData,\n      event => event.ptr === searchedEvent.ptr\n    );\n  }\n\n  _eventsToTreeData = (\n    eventsList: gdEventsList,\n    flatData: Array<gdBaseEvent> = [],\n    depth: number = 0,\n    parentDisabled: boolean = false\n  ) => {\n    const treeData = mapFor<any>(0, eventsList.getEventsCount(), i => {\n      const event = eventsList.getEventAt(i);\n      flatData.push(event);\n\n      const disabled = parentDisabled || event.isDisabled();\n\n      return {\n        title: this._renderEvent,\n        event,\n        eventsList,\n        indexInList: i,\n        expanded: !event.isFolded(),\n        disabled,\n        depth,\n        key: event.ptr, //TODO: useless?\n        children: this._eventsToTreeData(\n          event.getSubEvents(),\n          // flatData is a flat representation of events, one for each line.\n          // Hence it should not contain the folded events.\n          !event.isFolded() ? flatData : [],\n          depth + 1,\n          disabled\n        ).treeData,\n      };\n    });\n\n    return {\n      treeData,\n      flatData,\n    };\n  };\n\n  _onMoveNode = ({\n    treeData,\n    path,\n    node,\n  }: {\n    treeData: any,\n    path: Array<any>,\n    node: SortableTreeNode,\n  }) => {\n    // Get the event list where the event should be moved to.\n    const targetPath = path.slice(0, -1);\n    const target = getNodeAtPath({\n      getNodeKey,\n      treeData: treeData,\n      path: targetPath,\n    });\n    const targetNode = target.node;\n    const targetEventsList =\n      targetNode && targetNode.event\n        ? targetNode.event.getSubEvents()\n        : this.props.events;\n    const targetPosition =\n      targetNode && targetNode.children ? targetNode.children.indexOf(node) : 0;\n\n    // Get the moved event and its list from the moved node.\n    const { event, eventsList } = node;\n\n    // Do the move\n    const newEvent = event.clone();\n    eventsList.removeEvent(event);\n    targetEventsList.insertEvent(newEvent, targetPosition);\n    newEvent.delete();\n\n    this.forceEventsUpdate();\n    this.props.onEventMoved();\n  };\n\n  _canDrop = ({ nextParent }: { nextParent: ?SortableTreeNode }) => {\n    if (nextParent && nextParent.event)\n      return nextParent.event.canHaveSubEvents();\n\n    return true;\n  };\n\n  _onVisibilityToggle = ({ node }: { node: SortableTreeNode }) => {\n    const { event } = node;\n\n    event.setFolded(!event.isFolded());\n    this.forceEventsUpdate();\n  };\n\n  _renderObjectThumbnail = (objectName: string) => {\n    const { project, scope, showObjectThumbnails } = this.props;\n    if (!showObjectThumbnails) return null;\n\n    const object = getObjectByName(project, scope.layout, objectName);\n    if (!object) return null;\n\n    return (\n      <img\n        className={classNames({\n          [icon]: true,\n        })}\n        alt=\"\"\n        src={getThumbnail(project, object)}\n        crossOrigin=\"anonymous\"\n      />\n    );\n  };\n\n  _renderEvent = ({ node }: { node: SortableTreeNode }) => {\n    const { event, depth, disabled } = node;\n\n    return (\n      <EventContainer\n        project={this.props.project}\n        scope={this.props.scope}\n        globalObjectsContainer={this.props.globalObjectsContainer}\n        objectsContainer={this.props.objectsContainer}\n        event={event}\n        key={event.ptr}\n        eventsHeightsCache={this.eventsHeightsCache}\n        selection={this.props.selection}\n        leftIndentWidth={depth * indentWidth}\n        onAddNewInstruction={this.props.onAddNewInstruction}\n        onPasteInstructions={this.props.onPasteInstructions}\n        onMoveToInstruction={this.props.onMoveToInstruction}\n        onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n        onInstructionClick={this.props.onInstructionClick}\n        onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n        onParameterClick={this.props.onParameterClick}\n        onEventClick={() =>\n          this.props.onEventClick({\n            eventsList: node.eventsList,\n            event: node.event,\n            indexInList: node.indexInList,\n            isCondition: node.isCondition,\n          })\n        }\n        onEventContextMenu={(x, y) =>\n          this.props.onEventContextMenu(x, y, {\n            eventsList: node.eventsList,\n            event: node.event,\n            indexInList: node.indexInList,\n            isCondition: node.isCondition,\n          })\n        }\n        onInstructionContextMenu={this.props.onInstructionContextMenu}\n        onInstructionsListContextMenu={this.props.onInstructionsListContextMenu}\n        onOpenExternalEvents={this.props.onOpenExternalEvents}\n        onOpenLayout={this.props.onOpenLayout}\n        disabled={\n          disabled /* Use node.disabled (not event.disabled) as it is true if a parent event is disabled*/\n        }\n        renderObjectThumbnail={this._renderObjectThumbnail}\n        screenType={this.props.screenType}\n        windowWidth={this.props.windowWidth}\n      />\n    );\n  };\n\n  _treeSearchMethod = ({\n    node,\n    searchQuery,\n  }: {\n    node: SortableTreeNode,\n    searchQuery: ?Array<gdBaseEvent>,\n  }) => {\n    const searchResults = searchQuery;\n    if (!searchResults) return false;\n    const { event } = node;\n\n    return searchResults.find(highlightedEvent =>\n      gd.compare(highlightedEvent, event)\n    );\n  };\n\n  render() {\n    // react-sortable-tree does the rendering by transforming treeData\n    // into a flat array, the result being memoized. This hack forces\n    // a re-rendering of events, by discarding the memoized flat array\n    // (otherwise, no re-rendering would be done).\n    const treeData = this.state.treeData ? [...this.state.treeData] : null;\n\n    return (\n      <div style={styles.container}>\n        <SortableTree\n          treeData={treeData}\n          scaffoldBlockPxWidth={indentWidth}\n          onChange={noop}\n          onVisibilityToggle={this._onVisibilityToggle}\n          onMoveNode={this._onMoveNode}\n          canDrop={this._canDrop}\n          rowHeight={({ node }: { node: SortableTreeNode }) => {\n            if (!node.event) return 0;\n\n            return this.eventsHeightsCache.getEventHeight(node.event);\n          }}\n          searchMethod={this._treeSearchMethod}\n          searchQuery={this.props.searchResults}\n          searchFocusOffset={this.props.searchFocusOffset}\n          className={\n            this.props.searchResults ? eventsTreeWithSearchResults : ''\n          }\n          reactVirtualizedListProps={{\n            ref: list => (this._list = list),\n            onScroll: this.props.onScroll,\n          }}\n        />\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport InstructionsList from '../InstructionsList';\nimport classNames from 'classnames';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  executableEventContainer,\n} from '../ClassNames';\nimport { type EventRendererProps } from './EventRenderer';\nimport ConditionsActionsColumns from '../ConditionsActionsColumns';\nconst gd = global.gd;\n\nconst styles = {\n  actionsList: {\n    flex: 1,\n  },\n};\n\nexport default class StandardEvent extends React.Component<\n  EventRendererProps,\n  *\n> {\n  render() {\n    var standardEvent = gd.asStandardEvent(this.props.event);\n\n    return (\n      <ConditionsActionsColumns\n        leftIndentWidth={this.props.leftIndentWidth}\n        windowWidth={this.props.windowWidth}\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n          [executableEventContainer]: true,\n        })}\n        renderConditionsList={({ style, className }) => (\n          <InstructionsList\n            instrsList={standardEvent.getConditions()}\n            style={style}\n            className={className}\n            selection={this.props.selection}\n            areConditions\n            onAddNewInstruction={this.props.onAddNewInstruction}\n            onPasteInstructions={this.props.onPasteInstructions}\n            onMoveToInstruction={this.props.onMoveToInstruction}\n            onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n            onInstructionClick={this.props.onInstructionClick}\n            onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n            onInstructionContextMenu={this.props.onInstructionContextMenu}\n            onInstructionsListContextMenu={\n              this.props.onInstructionsListContextMenu\n            }\n            onParameterClick={this.props.onParameterClick}\n            disabled={this.props.disabled}\n            renderObjectThumbnail={this.props.renderObjectThumbnail}\n            screenType={this.props.screenType}\n            windowWidth={this.props.windowWidth}\n          />\n        )}\n        renderActionsList={({ className }) => (\n          <InstructionsList\n            instrsList={standardEvent.getActions()}\n            style={\n              {\n                ...styles.actionsList,\n              } /* TODO: Use a new object to force update - somehow updates are not always propagated otherwise */\n            }\n            className={className}\n            selection={this.props.selection}\n            areConditions={false}\n            onAddNewInstruction={this.props.onAddNewInstruction}\n            onPasteInstructions={this.props.onPasteInstructions}\n            onMoveToInstruction={this.props.onMoveToInstruction}\n            onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n            onInstructionClick={this.props.onInstructionClick}\n            onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n            onInstructionContextMenu={this.props.onInstructionContextMenu}\n            onInstructionsListContextMenu={\n              this.props.onInstructionsListContextMenu\n            }\n            onParameterClick={this.props.onParameterClick}\n            disabled={this.props.disabled}\n            renderObjectThumbnail={this.props.renderObjectThumbnail}\n            screenType={this.props.screenType}\n            windowWidth={this.props.windowWidth}\n          />\n        )}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { mapFor } from '../../Utils/MapFor';\nimport classNames from 'classnames';\nimport {\n  selectedArea,\n  selectableArea,\n  subInstructionsContainer,\n  instructionParameter,\n  disabledText,\n  icon,\n} from './ClassNames';\nimport {\n  type InstructionsListContext,\n  type InstructionContext,\n} from '../SelectionHandler';\nimport InstructionsList from './InstructionsList';\nimport DropIndicator from './DropIndicator';\nimport ParameterRenderingService from '../ParameterRenderingService';\nimport InvalidParameterValue from './InvalidParameterValue';\nimport { makeDragSourceAndDropTarget } from '../../UI/DragAndDrop/DragSourceAndDropTarget';\nimport { type ScreenType } from '../../UI/Reponsive/ScreenTypeMeasurer';\nimport { type WidthType } from '../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport PreferencesContext from '../../MainFrame/Preferences/PreferencesContext';\nconst gd = global.gd;\nconst instrFormatter = gd.InstructionSentenceFormatter.get();\ninstrFormatter.loadTypesFormattingFromConfig();\n\nconst styles = {\n  container: {\n    whiteSpace: 'normal',\n    wordWrap: 'break-word',\n    cursor: 'pointer',\n    marginBottom: 1,\n  },\n};\n\nexport const reactDndInstructionType = 'GD_DRAGGED_INSTRUCTION';\n\nconst capitalize = (str: string) => {\n  if (!str) return '';\n\n  return str[0].toUpperCase() + str.substr(1);\n};\n\nconst DragSourceAndDropTarget = makeDragSourceAndDropTarget<{\n  isCondition: boolean,\n}>(reactDndInstructionType);\n\ntype Props = {|\n  instruction: gdInstruction,\n  isCondition: boolean,\n  onClick: Function,\n  selected: boolean,\n  disabled: boolean,\n  onDoubleClick: () => void,\n  onContextMenu: (x: number, y: number) => void,\n  onMoveToInstruction: () => void,\n\n  // For potential sub-instructions list:\n  selection: Object,\n  onAddNewSubInstruction: InstructionsListContext => void,\n  onPasteSubInstructions: InstructionsListContext => void,\n  onMoveToSubInstruction: (destinationContext: InstructionContext) => void,\n  onMoveToSubInstructionsList: (\n    destinationContext: InstructionsListContext\n  ) => void,\n  onSubInstructionClick: InstructionContext => void,\n  onSubInstructionDoubleClick: InstructionContext => void,\n  onSubInstructionsListContextMenu: (\n    x: number,\n    y: number,\n    instructionsListContext: InstructionsListContext\n  ) => void,\n  onSubParameterClick: Function,\n  onSubInstructionContextMenu: (\n    x: number,\n    y: number,\n    instructionContext: InstructionContext\n  ) => void,\n  onParameterClick: (event: any, parameterIndex: number) => void,\n  renderObjectThumbnail: string => React.Node,\n\n  screenType: ScreenType,\n  windowWidth: WidthType,\n|};\n\nconst Instruction = (props: Props) => {\n  const { instruction, isCondition, onClick, onMoveToInstruction } = props;\n\n  const preferences = React.useContext(PreferencesContext);\n  const useAssignmentOperators =\n    preferences.values.eventsSheetUseAssignmentOperators;\n\n  /**\n   * Render the different parts of the text of the instruction.\n   * Parameter can have formatting, be hovered and clicked. The rest\n   * has not particular styling.\n   */\n  const renderInstructionText = (metadata: gdInstructionMetadata) => {\n    const { instruction, disabled, renderObjectThumbnail } = props;\n    const formattedTexts = instrFormatter.getAsFormattedText(\n      instruction,\n      metadata\n    );\n    const parametersCount = metadata.getParametersCount();\n\n    return (\n      <span\n        className={classNames({\n          [disabledText]: disabled,\n        })}\n      >\n        {mapFor(0, formattedTexts.size(), i => {\n          const formatting = formattedTexts.getTextFormatting(i);\n          const parameterIndex = formatting.getUserData();\n          const isParameter =\n            parameterIndex >= 0 && parameterIndex < parametersCount;\n\n          if (!isParameter) {\n            return (\n              <span key={i}>\n                {i === 0\n                  ? capitalize(formattedTexts.getString(i))\n                  : formattedTexts.getString(i)}\n              </span>\n            );\n          }\n\n          const parameterMetadata = metadata.getParameter(parameterIndex);\n          const parameterType = parameterMetadata.getType();\n          return (\n            <span\n              key={i}\n              className={classNames({\n                [selectableArea]: true,\n                [instructionParameter]: true,\n                [parameterType]: true,\n              })}\n              onClick={domEvent => {\n                props.onParameterClick(domEvent, parameterIndex);\n\n                // On touchscreen, don't propagate the click to the instruction div,\n                // as it's listening for taps to simulate double \"clicks\".\n                if (props.screenType === 'touch') {\n                  domEvent.stopPropagation();\n                }\n              }}\n              onKeyPress={event => {\n                if (event.key === 'Enter' || event.key === ' ') {\n                  props.onParameterClick(event, parameterIndex);\n                  event.stopPropagation();\n                  event.preventDefault();\n                }\n              }}\n              tabIndex={0}\n            >\n              {ParameterRenderingService.renderInlineParameter({\n                value: formattedTexts.getString(i),\n                parameterMetadata,\n                renderObjectThumbnail,\n                InvalidParameterValue,\n                useAssignmentOperators,\n              })}\n            </span>\n          );\n        })}\n      </span>\n    );\n  };\n\n  //TODO: Metadata could be cached for performance boost.\n  const metadata = isCondition\n    ? gd.MetadataProvider.getConditionMetadata(\n        gd.JsPlatform.get(),\n        instruction.getType()\n      )\n    : gd.MetadataProvider.getActionMetadata(\n        gd.JsPlatform.get(),\n        instruction.getType()\n      );\n\n  return (\n    <DragSourceAndDropTarget\n      beginDrag={() => {\n        onClick(); // Select the dragged instruction\n\n        // No need to save here what is being dragged,\n        // as its the entire selection that is considered to be dragged.\n        return {\n          isCondition,\n        };\n      }}\n      canDrop={draggedItem => draggedItem.isCondition === isCondition}\n      drop={() => {\n        onMoveToInstruction();\n      }}\n    >\n      {({ connectDragSource, connectDropTarget, isOver, canDrop }) => {\n        // The instruction itself can be dragged and is a target for\n        // another instruction to be dropped. It's IMPORTANT NOT to have\n        // the subinstructions list inside the connectDropTarget/connectDragSource\n        // as otherwise this can confuse react-dnd (\"Expected to find a valid target\")\n        // (surely due to components re-mounting/rerendering ?).\n        const instructionElement = connectDropTarget(\n          connectDragSource(\n            <div\n              style={styles.container}\n              className={classNames({\n                [selectableArea]: true,\n                [selectedArea]: props.selected,\n              })}\n              onClick={e => {\n                e.stopPropagation();\n\n                if (props.screenType === 'touch' && props.selected) {\n                  // On touch screens, tapping again a selected instruction should edit it.\n                  props.onDoubleClick();\n                } else {\n                  props.onClick();\n                }\n              }}\n              onDoubleClick={e => {\n                e.stopPropagation();\n                props.onDoubleClick();\n              }}\n              onContextMenu={e => {\n                e.stopPropagation();\n                props.onContextMenu(e.clientX, e.clientY);\n              }}\n              onKeyPress={event => {\n                if (event.key === 'Enter') {\n                  props.onDoubleClick();\n                  event.stopPropagation();\n                  event.preventDefault();\n                } else if (event.key === ' ') {\n                  props.onClick();\n                  event.stopPropagation();\n                  event.preventDefault();\n                }\n              }}\n              tabIndex={0}\n            >\n              {instruction.isInverted() && (\n                <img\n                  className={classNames({\n                    [icon]: true,\n                  })}\n                  src=\"res/contraire.png\"\n                  alt=\"Condition is negated\"\n                />\n              )}\n              <img\n                className={classNames({\n                  [icon]: true,\n                })}\n                src={metadata.getSmallIconFilename()}\n                alt=\"\"\n              />\n              {renderInstructionText(metadata)}\n            </div>\n          )\n        );\n\n        return (\n          <React.Fragment>\n            {isOver && <DropIndicator canDrop={canDrop} />}\n            {instructionElement}\n            {metadata.canHaveSubInstructions() && (\n              <InstructionsList\n                style={\n                  {} /* TODO: Use a new object to force update - somehow updates are not always propagated otherwise */\n                }\n                className={subInstructionsContainer}\n                instrsList={instruction.getSubInstructions()}\n                areConditions={props.isCondition}\n                selection={props.selection}\n                onAddNewInstruction={props.onAddNewSubInstruction}\n                onPasteInstructions={props.onPasteSubInstructions}\n                onMoveToInstruction={props.onMoveToSubInstruction}\n                onMoveToInstructionsList={props.onMoveToSubInstructionsList}\n                onInstructionClick={props.onSubInstructionClick}\n                onInstructionDoubleClick={props.onSubInstructionDoubleClick}\n                onInstructionContextMenu={props.onSubInstructionContextMenu}\n                onInstructionsListContextMenu={\n                  props.onSubInstructionsListContextMenu\n                }\n                onParameterClick={props.onSubParameterClick}\n                addButtonLabel={<Trans>Add a sub-condition</Trans>}\n                disabled={props.disabled}\n                renderObjectThumbnail={props.renderObjectThumbnail}\n                screenType={props.screenType}\n                windowWidth={props.windowWidth}\n              />\n            )}\n          </React.Fragment>\n        );\n      }}\n    </DragSourceAndDropTarget>\n  );\n};\n\nexport default Instruction;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\n\nexport default class RelationalOperatorField extends Component<ParameterFieldProps> {\n  _field: ?SelectField;\n  focus() {\n    if (this._field && this._field.focus) this._field.focus();\n  }\n\n  render() {\n    const { parameterMetadata } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    return (\n      <SelectField\n        margin={this.props.isInline ? 'none' : 'dense'}\n        fullWidth\n        floatingLabelText={description}\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        value={this.props.value}\n        onChange={(e, i, value: string) => this.props.onChange(value)}\n        ref={field => (this._field = field)}\n        hintText={t`Choose an operator`}\n      >\n        <SelectOption value=\"=\" primaryText={t`= (equal to)`} />\n        <SelectOption value=\"<\" primaryText={t`< (less than)`} />\n        <SelectOption value=\">\" primaryText={t`> (greater than)`} />\n        <SelectOption value=\"<=\" primaryText={t`≤ (less or equal to)`} />\n        <SelectOption value=\">=\" primaryText={t`≥ (greater or equal to)`} />\n        <SelectOption value=\"!=\" primaryText={t`≠ (not equal to)`} />\n      </SelectField>\n    );\n  }\n}\n\nexport const renderInlineRelationalOperator = ({\n  value,\n  InvalidParameterValue,\n}: ParameterInlineRendererProps) => {\n  if (!value) {\n    return (\n      <InvalidParameterValue isEmpty>\n        <Trans>Choose an operator</Trans>\n      </InvalidParameterValue>\n    );\n  }\n\n  if (\n    value !== '=' &&\n    value !== '<' &&\n    value !== '>' &&\n    value !== '<=' &&\n    value !== '>=' &&\n    value !== '!='\n  ) {\n    return <InvalidParameterValue>{value}</InvalidParameterValue>;\n  }\n\n  if (value === '<=') return '\\u2264';\n  if (value === '>=') return '\\u2265';\n  else if (value === '!=') return '\\u2260';\n\n  return value;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\n\nexport default class OperatorField extends Component<ParameterFieldProps> {\n  _field: ?SelectField;\n  focus() {\n    if (this._field && this._field.focus) this._field.focus();\n  }\n\n  render() {\n    const { parameterMetadata } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    return (\n      <SelectField\n        margin={this.props.isInline ? 'none' : 'dense'}\n        fullWidth\n        floatingLabelText={description}\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        value={this.props.value}\n        onChange={(e, i, value: string) => this.props.onChange(value)}\n        ref={field => (this._field = field)}\n        hintText={t`Choose an operator`}\n      >\n        <SelectOption value=\"=\" primaryText={t`= (set to)`} />\n        <SelectOption value=\"+\" primaryText={t`+ (add)`} />\n        <SelectOption value=\"-\" primaryText={t`- (subtract)`} />\n        <SelectOption value=\"*\" primaryText={t`* (multiply by)`} />\n        <SelectOption value=\"/\" primaryText={t`/ (divide by)`} />\n      </SelectField>\n    );\n  }\n}\n\nexport const renderInlineOperator = ({\n  value,\n  InvalidParameterValue,\n  useAssignmentOperators,\n}: ParameterInlineRendererProps) => {\n  if (!value) {\n    return (\n      <InvalidParameterValue isEmpty>\n        <Trans>Choose an operator</Trans>\n      </InvalidParameterValue>\n    );\n  }\n\n  if (useAssignmentOperators) {\n    if (value === '=') return '=';\n    else if (value === '+') return '+=';\n    else if (value === '-') return '-=';\n    else if (value === '/') return '/=';\n    else if (value === '*') return '*=';\n  } else {\n    if (value === '=') return <Trans>set to</Trans>;\n    else if (value === '+') return <Trans>add</Trans>;\n    else if (value === '-') return <Trans>subtract</Trans>;\n    else if (value === '/') return <Trans>divide by</Trans>;\n    else if (value === '*') return <Trans>multiply by</Trans>;\n  }\n\n  return <InvalidParameterValue>{value}</InvalidParameterValue>;\n};\n","import { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport React, { Component } from 'react';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\n\nexport default class MouseField extends Component {\n  focus() {}\n\n  render() {\n    const { parameterMetadata, value } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    return (\n      <SelectField\n        margin={this.props.isInline ? 'none' : 'dense'}\n        fullWidth\n        floatingLabelText={description}\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        value={value}\n        ref={field => (this._field = field)}\n        onChange={(e, i, value) => this.props.onChange(value)}\n        errorText={value ? undefined : <Trans>You must select a button</Trans>}\n      >\n        <SelectOption value=\"Left\" primaryText={t`Left (primary)`} />\n        <SelectOption value=\"Right\" primaryText={t`Right (secondary)`} />\n        <SelectOption\n          value=\"Middle\"\n          primaryText={t`Middle (Auxiliary button, usually the wheel button)`}\n        />\n        {/* TODO: Add support for these buttons in the game engine\n         <SelectOption\n          value=\"XButton1\"\n          primaryText={t`Special button #1`}\n        />\n        <SelectOption\n          value=\"XButton2\"\n          primaryText={t`Special button #2`}\n        /> */}\n      </SelectField>\n    );\n  }\n}\n\nexport const renderInlineMouse = ({\n  value,\n  InvalidParameterValue,\n}: ParameterInlineRendererProps) => {\n  return value ? (\n    value\n  ) : (\n    <InvalidParameterValue isEmpty>\n      <Trans>Choose a mouse button</Trans>\n    </InvalidParameterValue>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport React, { Component } from 'react';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport SemiControlledAutoComplete from '../../UI/SemiControlledAutoComplete';\n\nconst keyNames = [\n  'Num0',\n  'Num1',\n  'Num2',\n  'Num3',\n  'Num4',\n  'Num5',\n  'Num6',\n  'Num7',\n  'Num8',\n  'Num9',\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z',\n  'LBracket',\n  'RBracket',\n  'SemiColon',\n  'Numpad0',\n  'Numpad1',\n  'Numpad2',\n  'Numpad3',\n  'Numpad4',\n  'Numpad5',\n  'Numpad6',\n  'Numpad7',\n  'Numpad8',\n  'Numpad9',\n  'Escape',\n  'Space',\n  'Return',\n  'Back',\n  'Tab',\n  'PageUp',\n  'PageDown',\n  'End',\n  'Home',\n  'Insert',\n  'Delete',\n  'Add',\n  'Subtract',\n  'Multiply',\n  'Divide',\n  'Left',\n  'Right',\n  'Up',\n  'Down',\n  'F1',\n  'F2',\n  'F3',\n  'F4',\n  'F5',\n  'F6',\n  'F7',\n  'F8',\n  'F9',\n  'F10',\n  'F11',\n  'F12',\n  'Pause',\n  'RControl',\n  'LControl',\n  'RAlt',\n  'LAlt',\n  'RShift',\n  'LShift',\n];\n\nconst isKeyValid = (key: string) => keyNames.indexOf(key) !== -1;\n\nexport default class KeyField extends Component<ParameterFieldProps, {||}> {\n  _field: ?any;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const { value, onChange, isInline, parameterMetadata } = this.props;\n\n    return (\n      <SemiControlledAutoComplete\n        margin={this.props.isInline ? 'none' : 'dense'}\n        floatingLabelText={\n          parameterMetadata ? parameterMetadata.getDescription() : undefined\n        }\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        fullWidth\n        value={value}\n        onChange={onChange}\n        dataSource={keyNames.map(keyName => ({\n          text: keyName,\n          value: keyName,\n        }))}\n        openOnFocus={!isInline}\n        ref={field => (this._field = field)}\n        errorText={\n          !value ? (\n            <Trans>You must select a key.</Trans>\n          ) : !isKeyValid(value) ? (\n            <Trans>You must select a valid key. \"{value}\" is not valid.</Trans>\n          ) : (\n            undefined\n          )\n        }\n      />\n    );\n  }\n}\n\nexport const renderInlineKey = ({\n  value,\n  InvalidParameterValue,\n}: ParameterInlineRendererProps) => {\n  if (!value) {\n    return (\n      <InvalidParameterValue isEmpty>\n        <Trans>Choose a key</Trans>\n      </InvalidParameterValue>\n    );\n  }\n\n  return isKeyValid(value) ? (\n    value\n  ) : (\n    <InvalidParameterValue>{value}</InvalidParameterValue>\n  );\n};\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js';\n\n/**\n * Objects with an unknown type are rendered with a placeholder rectangle.\n *\n * @extends RenderedInstance\n * @class RenderedUnknownInstance\n * @constructor\n */\nfunction RenderedUnknownInstance(\n  project,\n  layout,\n  instance,\n  associatedObject,\n  pixiContainer,\n  pixiResourcesLoader\n) {\n  RenderedInstance.call(\n    this,\n    project,\n    layout,\n    instance,\n    associatedObject,\n    pixiContainer,\n    pixiResourcesLoader\n  );\n\n  //This renderer show a placeholder for the object:\n  this._pixiObject = new PIXI.Graphics();\n  this._pixiContainer.addChild(this._pixiObject);\n\n  var width = instance.hasCustomSize() ? instance.getCustomWidth() : 32;\n  var height = instance.hasCustomSize() ? instance.getCustomHeight() : 32;\n\n  this._pixiObject.beginFill(0x0033ff);\n  this._pixiObject.lineStyle(1, 0xffd900, 1);\n  this._pixiObject.moveTo(0, 0);\n  this._pixiObject.lineTo(width, 0);\n  this._pixiObject.lineTo(width, height);\n  this._pixiObject.lineTo(0, height);\n  this._pixiObject.endFill();\n}\nRenderedUnknownInstance.prototype = Object.create(RenderedInstance.prototype);\nRenderedUnknownInstance.getThumbnail = function(\n  project,\n  resourcesLoader,\n  object\n) {\n  return 'res/unknown32.png';\n};\n\nRenderedUnknownInstance.prototype.update = function() {\n  this._pixiObject.position.x = this._instance.getX();\n  this._pixiObject.position.y = this._instance.getY();\n  this._pixiObject.rotation = (this._instance.getAngle() * Math.PI) / 180.0;\n};\n\nexport default RenderedUnknownInstance;\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js';\nconst gd = global.gd;\n\n/**\n * Renderer for gd.SpriteObject\n *\n * @extends RenderedInstance\n * @class RenderedSpriteInstance\n * @constructor\n */\nfunction RenderedSpriteInstance(\n  project,\n  layout,\n  instance,\n  associatedObject,\n  pixiContainer,\n  pixiResourcesLoader\n) {\n  RenderedInstance.call(\n    this,\n    project,\n    layout,\n    instance,\n    associatedObject,\n    pixiContainer,\n    pixiResourcesLoader\n  );\n\n  this._renderedAnimation = 0;\n  this._renderedDirection = 0;\n  this._centerX = 0;\n  this._centerY = 0;\n  this._originX = 0;\n  this._originY = 0;\n\n  //Setup the PIXI object:\n  this._pixiObject = new PIXI.Sprite(\n    this._pixiResourcesLoader.getInvalidPIXITexture()\n  );\n  this._pixiContainer.addChild(this._pixiObject);\n  this.updatePIXITexture();\n  this.updatePIXISprite();\n}\nRenderedSpriteInstance.prototype = Object.create(RenderedInstance.prototype);\n\n/**\n * Return a URL for thumbnail of the specified object.\n */\nRenderedSpriteInstance.getThumbnail = function(\n  project,\n  resourcesLoader,\n  object\n) {\n  const spriteObject = gd.asSpriteObject(object);\n\n  if (\n    spriteObject.getAnimationsCount() > 0 &&\n    spriteObject.getAnimation(0).getDirectionsCount() > 0 &&\n    spriteObject\n      .getAnimation(0)\n      .getDirection(0)\n      .getSpritesCount() > 0\n  ) {\n    const imageName = spriteObject\n      .getAnimation(0)\n      .getDirection(0)\n      .getSprite(0)\n      .getImageName();\n    return resourcesLoader.getResourceFullUrl(project, imageName);\n  }\n\n  return 'res/unknown32.png';\n};\n\nRenderedSpriteInstance.prototype.updatePIXISprite = function() {\n  this._pixiObject.anchor.x =\n    this._centerX / this._pixiObject.texture.frame.width;\n  this._pixiObject.anchor.y =\n    this._centerY / this._pixiObject.texture.frame.height;\n  this._pixiObject.rotation = this._shouldNotRotate\n    ? 0\n    : RenderedInstance.toRad(this._instance.getAngle());\n  if (this._instance.hasCustomSize()) {\n    this._pixiObject.scale.x =\n      this._instance.getCustomWidth() / this._pixiObject.texture.frame.width;\n    this._pixiObject.scale.y =\n      this._instance.getCustomHeight() / this._pixiObject.texture.frame.height;\n  } else {\n    this._pixiObject.scale.x = 1;\n    this._pixiObject.scale.y = 1;\n  }\n  this._pixiObject.position.x =\n    this._instance.getX() +\n    (this._centerX - this._originX) * Math.abs(this._pixiObject.scale.x);\n  this._pixiObject.position.y =\n    this._instance.getY() +\n    (this._centerY - this._originY) * Math.abs(this._pixiObject.scale.y);\n};\n\nRenderedSpriteInstance.prototype.updateSprite = function() {\n  this._sprite = null;\n  this._shouldNotRotate = false;\n\n  const spriteObject = gd.asSpriteObject(this._associatedObject);\n  if (spriteObject.hasNoAnimations()) return false;\n\n  this._renderedAnimation = this._instance.getRawFloatProperty('animation');\n  if (this._renderedAnimation >= spriteObject.getAnimationsCount())\n    this._renderedAnimation = 0;\n\n  const animation = spriteObject.getAnimation(this._renderedAnimation);\n  if (animation.hasNoDirections()) return false;\n\n  this._renderedDirection = 0;\n  if (animation.useMultipleDirections()) {\n    let normalizedAngle = Math.floor(this._instance.getAngle()) % 360;\n    if (normalizedAngle < 0) normalizedAngle += 360;\n\n    this._renderedDirection = Math.round(normalizedAngle / 45) % 8;\n  }\n\n  if (this._renderedDirection >= animation.getDirectionsCount())\n    this._renderedDirection = 0;\n\n  const direction = animation.getDirection(this._renderedDirection);\n\n  if (direction.getSpritesCount() === 0) return false;\n\n  this._shouldNotRotate = animation.useMultipleDirections();\n  this._sprite = direction.getSprite(0);\n  return true;\n};\n\nRenderedSpriteInstance.prototype.updatePIXITexture = function() {\n  this.updateSprite();\n  if (!this._sprite) return;\n\n  this._pixiObject.texture = this._pixiResourcesLoader.getPIXITexture(\n    this._project,\n    this._sprite.getImageName()\n  );\n\n  const origin = this._sprite.getOrigin();\n  this._originX = origin.getX();\n  this._originY = origin.getY();\n\n  if (this._sprite.isDefaultCenterPoint()) {\n    if (this._pixiObject.texture.noFrame) {\n      var that = this;\n      // We might have to wait for the texture to load\n      this._pixiObject.texture.on('update', function() {\n        that._centerX = that._pixiObject.texture.width / 2;\n        that._centerY = that._pixiObject.texture.height / 2;\n        that._pixiObject.texture.off('update', this);\n      });\n    } else {\n      this._centerX = this._pixiObject.texture.width / 2;\n      this._centerY = this._pixiObject.texture.height / 2;\n    }\n  } else {\n    const center = this._sprite.getCenter();\n    this._centerX = center.getX();\n    this._centerY = center.getY();\n  }\n};\n\nRenderedSpriteInstance.prototype.update = function() {\n  const animation = this._instance.getRawFloatProperty('animation');\n  if (this._renderedAnimation !== animation) this.updatePIXITexture();\n\n  this.updatePIXISprite();\n};\n\nRenderedSpriteInstance.prototype.getOriginX = function() {\n  if (!this._sprite || !this._pixiObject) return 0;\n\n  return this._sprite.getOrigin().getX() * this._pixiObject.scale.x;\n};\n\nRenderedSpriteInstance.prototype.getOriginY = function() {\n  if (!this._sprite || !this._pixiObject) return 0;\n\n  return this._sprite.getOrigin().getY() * this._pixiObject.scale.y;\n};\n\nRenderedSpriteInstance.prototype.getDefaultWidth = function() {\n  return Math.abs(this._pixiObject.width);\n};\n\nRenderedSpriteInstance.prototype.getDefaultHeight = function() {\n  return Math.abs(this._pixiObject.height);\n};\n\nexport default RenderedSpriteInstance;\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js';\nconst gd = global.gd;\n\n/**\n * Renderer for gd.TiledSpriteObject\n *\n * @extends RenderedInstance\n * @class RenderedTiledSpriteInstance\n * @constructor\n */\nfunction RenderedTiledSpriteInstance(\n  project,\n  layout,\n  instance,\n  associatedObject,\n  pixiContainer,\n  pixiResourcesLoader\n) {\n  RenderedInstance.call(\n    this,\n    project,\n    layout,\n    instance,\n    associatedObject,\n    pixiContainer,\n    pixiResourcesLoader\n  );\n\n  //Setup the PIXI object:\n  var tiledSprite = gd.asTiledSpriteObject(associatedObject);\n  this._texture = tiledSprite.getTexture();\n  this._pixiObject = new PIXI.extras.TilingSprite(\n    this._pixiResourcesLoader.getPIXITexture(project, tiledSprite.getTexture()),\n    tiledSprite.getWidth(),\n    tiledSprite.getHeight()\n  );\n  this._pixiObject.anchor.x = 0.5;\n  this._pixiObject.anchor.y = 0.5;\n  this._pixiContainer.addChild(this._pixiObject);\n}\nRenderedTiledSpriteInstance.prototype = Object.create(\n  RenderedInstance.prototype\n);\n\n/**\n * Return a URL for thumbnail of the specified object.\n */\nRenderedTiledSpriteInstance.getThumbnail = function(\n  project,\n  resourcesLoader,\n  object\n) {\n  var tiledSprite = gd.asTiledSpriteObject(object);\n\n  return resourcesLoader.getResourceFullUrl(project, tiledSprite.getTexture());\n};\n\nRenderedTiledSpriteInstance.prototype.update = function() {\n  var tiledSprite = gd.asTiledSpriteObject(this._associatedObject);\n  if (this._instance.hasCustomSize()) {\n    this._pixiObject.width = this._instance.getCustomWidth();\n    this._pixiObject.height = this._instance.getCustomHeight();\n  } else {\n    this._pixiObject.width = tiledSprite.getWidth();\n    this._pixiObject.height = tiledSprite.getHeight();\n  }\n\n  if (this._texture !== tiledSprite.getTexture()) {\n    this._texture = tiledSprite.getTexture();\n    this._pixiObject.texture = this._pixiResourcesLoader.getPIXITexture(\n      this._project,\n      tiledSprite.getTexture()\n    );\n  }\n\n  this._pixiObject.x = this._instance.getX() + this._pixiObject.width / 2;\n  this._pixiObject.y = this._instance.getY() + this._pixiObject.height / 2;\n  this._pixiObject.rotation = RenderedInstance.toRad(this._instance.getAngle());\n};\n\nRenderedTiledSpriteInstance.prototype.getDefaultWidth = function() {\n  var tiledSprite = gd.asTiledSpriteObject(this._associatedObject);\n  return tiledSprite.getWidth();\n};\n\nRenderedTiledSpriteInstance.prototype.getDefaultHeight = function() {\n  var tiledSprite = gd.asTiledSpriteObject(this._associatedObject);\n  return tiledSprite.getHeight();\n};\n\nexport default RenderedTiledSpriteInstance;\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js';\nconst gd = global.gd;\n\n/**\n * Renderer for gd.PanelSpriteObject\n *\n * Heavily inspired from the GDJS PIXI renderer for PanelSprite objects.\n * TODO: Find a way to factor GDJS objects and IDE instances renderers.\n *\n * @extends RenderedInstance\n * @class RenderedPanelSpriteInstance\n * @constructor\n */\nfunction RenderedPanelSpriteInstance(\n  project,\n  layout,\n  instance,\n  associatedObject,\n  pixiContainer,\n  pixiResourcesLoader\n) {\n  RenderedInstance.call(\n    this,\n    project,\n    layout,\n    instance,\n    associatedObject,\n    pixiContainer,\n    pixiResourcesLoader\n  );\n\n  this.makeObjects();\n  this.updateTexture();\n}\nRenderedPanelSpriteInstance.prototype = Object.create(\n  RenderedInstance.prototype\n);\n\nRenderedPanelSpriteInstance.prototype.update = function() {\n  //TODO\n  // if (this._pixiObject.visible && this._wasRendered) {\n  //   this._pixiObject.cacheAsBitmap = true;\n  // }\n  // this._wasRendered = true;\n\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n  if (panelSprite.isTiled() !== this._tiled) {\n    this.makeObjects();\n  }\n  if (panelSprite.getTexture() !== this._textureName) {\n    this.updateTexture();\n  }\n\n  this.updateAngle();\n  this.updatePosition();\n\n  const oldWidth = this._width;\n  const oldHeight = this._height;\n  if (this._instance.hasCustomSize()) {\n    this._width = this._instance.getCustomWidth();\n    this._height = this._instance.getCustomHeight();\n  } else {\n    var tiledSprite = gd.asPanelSpriteObject(this._associatedObject);\n    this._width = tiledSprite.getWidth();\n    this._height = tiledSprite.getHeight();\n  }\n\n  if (this._width !== oldWidth || this._height !== oldHeight) {\n    this.updateWidthHeight();\n  }\n};\n\nRenderedPanelSpriteInstance.prototype.makeObjects = function() {\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n  this._textureName = panelSprite.getTexture();\n  const texture = this._pixiResourcesLoader.getPIXITexture(\n    this._project,\n    this._textureName\n  );\n\n  this._tiled = panelSprite.isTiled();\n  var StretchedSprite = !this._tiled ? PIXI.Sprite : PIXI.extras.TilingSprite;\n\n  if (!this._pixiObject) {\n    this._pixiObject = new PIXI.Container();\n    this._pixiContainer.addChild(this._pixiObject);\n  }\n  this._centerSprite = new StretchedSprite(new PIXI.Texture(texture));\n  this._borderSprites = [\n    new StretchedSprite(new PIXI.Texture(texture)), //Right\n    new PIXI.Sprite(texture), //Top-Right\n    new StretchedSprite(new PIXI.Texture(texture)), //Top\n    new PIXI.Sprite(texture), //Top-Left\n    new StretchedSprite(new PIXI.Texture(texture)), //Left\n    new PIXI.Sprite(texture), //Bottom-Left\n    new StretchedSprite(new PIXI.Texture(texture)), //Bottom\n    new PIXI.Sprite(texture), //Bottom-Right\n  ];\n\n  this._pixiObject.removeChildren();\n  this._pixiObject.addChild(this._centerSprite);\n  for (var i = 0; i < this._borderSprites.length; ++i) {\n    this._pixiObject.addChild(this._borderSprites[i]);\n  }\n};\n\nRenderedPanelSpriteInstance.prototype.updateAngle = function() {\n  this._pixiObject.rotation = RenderedInstance.toRad(this._instance.getAngle());\n};\n\nRenderedPanelSpriteInstance.prototype.updatePosition = function() {\n  this._pixiObject.x = this._instance.getX() + this._width / 2;\n  this._pixiObject.y = this._instance.getY() + this._height / 2;\n};\n\nRenderedPanelSpriteInstance.prototype._updateLocalPositions = function() {\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n\n  this._centerSprite.position.x = panelSprite.getLeftMargin();\n  this._centerSprite.position.y = panelSprite.getTopMargin();\n\n  //Right\n  this._borderSprites[0].position.x =\n    this._width - panelSprite.getRightMargin();\n  this._borderSprites[0].position.y = panelSprite.getTopMargin();\n\n  //Top-right\n  this._borderSprites[1].position.x =\n    this._width - this._borderSprites[1].width;\n  this._borderSprites[1].position.y = 0;\n\n  //Top\n  this._borderSprites[2].position.x = panelSprite.getLeftMargin();\n  this._borderSprites[2].position.y = 0;\n\n  //Top-Left\n  this._borderSprites[3].position.x = 0;\n  this._borderSprites[3].position.y = 0;\n\n  //Left\n  this._borderSprites[4].position.x = 0;\n  this._borderSprites[4].position.y = panelSprite.getTopMargin();\n\n  //Bottom-Left\n  this._borderSprites[5].position.x = 0;\n  this._borderSprites[5].position.y =\n    this._height - this._borderSprites[5].height;\n\n  //Bottom\n  this._borderSprites[6].position.x = panelSprite.getLeftMargin();\n  this._borderSprites[6].position.y =\n    this._height - panelSprite.getBottomMargin();\n\n  //Bottom-Right\n  this._borderSprites[7].position.x =\n    this._width - this._borderSprites[7].width;\n  this._borderSprites[7].position.y =\n    this._height - this._borderSprites[7].height;\n};\n\nRenderedPanelSpriteInstance.prototype._updateSpritesAndTexturesSize = function() {\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n  this._centerSprite.width = Math.max(\n    this._width - panelSprite.getRightMargin() - panelSprite.getLeftMargin(),\n    0\n  );\n  this._centerSprite.height = Math.max(\n    this._height - panelSprite.getTopMargin() - panelSprite.getBottomMargin(),\n    0\n  );\n\n  //Right\n  this._borderSprites[0].width = panelSprite.getRightMargin();\n  this._borderSprites[0].height = Math.max(\n    this._height - panelSprite.getTopMargin() - panelSprite.getBottomMargin(),\n    0\n  );\n\n  //Top\n  this._borderSprites[2].height = panelSprite.getTopMargin();\n  this._borderSprites[2].width = Math.max(\n    this._width - panelSprite.getRightMargin() - panelSprite.getLeftMargin(),\n    0\n  );\n\n  //Left\n  this._borderSprites[4].width = panelSprite.getLeftMargin();\n  this._borderSprites[4].height = Math.max(\n    this._height - panelSprite.getTopMargin() - panelSprite.getBottomMargin(),\n    0\n  );\n\n  //Bottom\n  this._borderSprites[6].height = panelSprite.getBottomMargin();\n  this._borderSprites[6].width = Math.max(\n    this._width - panelSprite.getRightMargin() - panelSprite.getLeftMargin(),\n    0\n  );\n\n  this._wasRendered = true;\n  this._pixiObject.cacheAsBitmap = false;\n};\n\nRenderedPanelSpriteInstance.prototype.updateTexture = function() {\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n  this._textureName = panelSprite.getTexture();\n  const texture = this._pixiResourcesLoader.getPIXITexture(\n    this._project,\n    this._textureName\n  );\n\n  if (texture.noFrame) {\n    //Post pone texture update if texture is not loaded\n    const renderer = this;\n    texture.on('update', function() {\n      renderer.updateTexture();\n      texture.off('update', this);\n    });\n\n    return;\n  }\n\n  console.log('Updating PanelSprite instance texture');\n  function makeInsideTexture(rect) {\n    if (rect.width < 0) rect.width = 0;\n    if (rect.height < 0) rect.height = 0;\n    if (rect.x < 0) rect.x = 0;\n    if (rect.y < 0) rect.y = 0;\n    if (rect.x > texture.width) rect.x = texture.width;\n    if (rect.y > texture.height) rect.y = texture.height;\n    if (rect.x + rect.width > texture.width)\n      rect.width = texture.width - rect.x;\n    if (rect.y + rect.height > texture.height)\n      rect.height = texture.height - rect.y;\n\n    return rect;\n  }\n\n  this._centerSprite.texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        panelSprite.getLeftMargin(),\n        panelSprite.getTopMargin(),\n        texture.width -\n          panelSprite.getLeftMargin() -\n          panelSprite.getRightMargin(),\n        texture.height -\n          panelSprite.getTopMargin() -\n          panelSprite.getBottomMargin()\n      )\n    )\n  );\n\n  //Right\n  this._borderSprites[0].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        texture.width - panelSprite.getRightMargin(),\n        panelSprite.getTopMargin(),\n        panelSprite.getRightMargin(),\n        texture.height -\n          panelSprite.getTopMargin() -\n          panelSprite.getBottomMargin()\n      )\n    )\n  );\n\n  //Top-right\n  this._borderSprites[1].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        this._borderSprites[1].width - panelSprite.getRightMargin(),\n        0,\n        panelSprite.getRightMargin(),\n        panelSprite.getTopMargin()\n      )\n    )\n  );\n\n  //Top\n  this._borderSprites[2].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        panelSprite.getLeftMargin(),\n        0,\n        texture.width -\n          panelSprite.getLeftMargin() -\n          panelSprite.getRightMargin(),\n        panelSprite.getTopMargin()\n      )\n    )\n  );\n\n  //Top-Left\n  this._borderSprites[3].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        0,\n        0,\n        panelSprite.getLeftMargin(),\n        panelSprite.getTopMargin()\n      )\n    )\n  );\n\n  //Left\n  this._borderSprites[4].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        0,\n        panelSprite.getTopMargin(),\n        panelSprite.getLeftMargin(),\n        texture.height -\n          panelSprite.getTopMargin() -\n          panelSprite.getBottomMargin()\n      )\n    )\n  );\n\n  //Bottom-Left\n  this._borderSprites[5].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        0,\n        this._borderSprites[5].height - panelSprite.getBottomMargin(),\n        panelSprite.getLeftMargin(),\n        panelSprite.getBottomMargin()\n      )\n    )\n  );\n\n  //Bottom\n  this._borderSprites[6].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        panelSprite.getLeftMargin(),\n        texture.height - panelSprite.getBottomMargin(),\n        texture.width -\n          panelSprite.getLeftMargin() -\n          panelSprite.getRightMargin(),\n        panelSprite.getBottomMargin()\n      )\n    )\n  );\n\n  //Bottom-Right\n  this._borderSprites[7].texture = new PIXI.Texture(\n    texture,\n    makeInsideTexture(\n      new PIXI.Rectangle(\n        this._borderSprites[7].width - panelSprite.getRightMargin(),\n        this._borderSprites[7].height - panelSprite.getBottomMargin(),\n        panelSprite.getRightMargin(),\n        panelSprite.getBottomMargin()\n      )\n    )\n  );\n\n  this._updateSpritesAndTexturesSize();\n  this._updateLocalPositions();\n  this.updatePosition();\n};\n\nRenderedPanelSpriteInstance.prototype.updateWidthHeight = function() {\n  this._pixiObject.pivot.x = this._width / 2;\n  this._pixiObject.pivot.y = this._height / 2;\n  this._updateSpritesAndTexturesSize();\n  this._updateLocalPositions();\n  this.updatePosition();\n};\n\nRenderedPanelSpriteInstance.prototype.getDefaultWidth = function() {\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n  return panelSprite.getWidth();\n};\n\nRenderedPanelSpriteInstance.prototype.getDefaultHeight = function() {\n  const panelSprite = gd.asPanelSpriteObject(this._associatedObject);\n  return panelSprite.getHeight();\n};\n\n/**\n * Return a URL for thumbnail of the specified object.\n */\nRenderedPanelSpriteInstance.getThumbnail = function(\n  project,\n  resourcesLoader,\n  object\n) {\n  const panelSprite = gd.asPanelSpriteObject(object);\n\n  return resourcesLoader.getResourceFullUrl(project, panelSprite.getTexture());\n};\n\nexport default RenderedPanelSpriteInstance;\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js';\nconst gd = global.gd;\n\n/**\n * Renderer for a Text object.\n *\n * @extends RenderedInstance\n * @class RenderedTextInstance\n * @constructor\n */\nfunction RenderedTextInstance(\n  project,\n  layout,\n  instance,\n  associatedObject,\n  pixiContainer,\n  pixiResourcesLoader\n) {\n  RenderedInstance.call(\n    this,\n    project,\n    layout,\n    instance,\n    associatedObject,\n    pixiContainer,\n    pixiResourcesLoader\n  );\n\n  //Setup the PIXI object:\n  const textObject = gd.asTextObject(this._associatedObject);\n  this._pixiObject = new PIXI.Text(' ', { align: 'left' });\n  this._pixiObject.anchor.x = 0.5;\n  this._pixiObject.anchor.y = 0.5;\n  this._pixiContainer.addChild(this._pixiObject);\n  this._styleFontDirty = true;\n  this._fontFamily = this._pixiResourcesLoader.getFontFamily(\n    this._project,\n    textObject.getFontName()\n  );\n  this.update();\n}\nRenderedTextInstance.prototype = Object.create(RenderedInstance.prototype);\n\n/**\n * Return a URL for thumbnail of the specified object.\n */\nRenderedTextInstance.getThumbnail = function(project, resourcesLoader, object) {\n  return 'CppPlatform/Extensions/texticon24.png';\n};\n\nRenderedTextInstance.prototype.update = function() {\n  const textObject = gd.asTextObject(this._associatedObject);\n  this._pixiObject.text = textObject.getString();\n\n  //Update style, only if needed to avoid destroying text rendering performances\n  if (\n    textObject.isItalic() !== this._isItalic ||\n    textObject.isBold() !== this._isBold ||\n    textObject.getCharacterSize() !== this._characterSize ||\n    this._instance.hasCustomSize() !== this._wrapping ||\n    (this._instance.getCustomWidth() !== this._wrappingWidth && this._wrapping)\n  ) {\n    this._isItalic = textObject.isItalic();\n    this._isBold = textObject.isBold();\n    this._characterSize = textObject.getCharacterSize();\n    this._wrapping = this._instance.hasCustomSize();\n    this._wrappingWidth = this._instance.getCustomWidth();\n    this._styleFontDirty = true;\n  }\n\n  if (this._fontName !== textObject.getFontName()) {\n    //Avoid calling loadFontFamily if the font didn't changed.\n    this._fontName = textObject.getFontName();\n    this._pixiResourcesLoader\n      .loadFontFamily(this._project, textObject.getFontName())\n      .then(fontFamily => {\n        // Once the font is loaded, we can use the given fontFamily.\n        this._fontFamily = fontFamily;\n        this._styleFontDirty = true;\n      })\n      .catch(err => {\n        // Ignore errors\n        console.warn('Unable to load font family', err);\n      });\n  }\n\n  if (this._styleFontDirty) {\n    this._pixiObject.style.fontFamily = this._fontFamily || 'Arial';\n    this._pixiObject.style.fontSize = Math.max(1, this._characterSize) + 'px';\n    this._pixiObject.style.fontStyle = this._isItalic ? 'italic' : 'normal';\n    this._pixiObject.style.fontWeight = this._isBold ? 'bold' : 'normal';\n    this._pixiObject.style.wordWrap = this._wrapping;\n    this._pixiObject.style.wordWrapWidth =\n      this._wrappingWidth <= 1 ? 1 : this._wrappingWidth;\n    this._pixiObject.style.breakWords = true;\n\n    // Manually ask the PIXI object to re-render as we changed a style property\n    // see http://www.html5gamedevs.com/topic/16924-change-text-style-post-render/\n    this._pixiObject.dirty = true;\n    this._styleFontDirty = false;\n  }\n\n  if (\n    textObject.getColorR() !== this._colorR ||\n    textObject.getColorG() !== this._colorG ||\n    textObject.getColorB() !== this._colorB\n  ) {\n    this._colorR = textObject.getColorR();\n    this._colorG = textObject.getColorG();\n    this._colorB = textObject.getColorB();\n    this._pixiObject.style.fill =\n      'rgb(' + this._colorR + ',' + this._colorG + ',' + this._colorB + ')';\n\n    // Manually ask the PIXI object to re-render as we changed a style property\n    // see http://www.html5gamedevs.com/topic/16924-change-text-style-post-render/\n    this._pixiObject.dirty = true;\n  }\n\n  this._pixiObject.position.x =\n    this._instance.getX() + this._pixiObject.width / 2;\n  this._pixiObject.position.y =\n    this._instance.getY() + this._pixiObject.height / 2;\n  this._pixiObject.rotation = RenderedInstance.toRad(this._instance.getAngle());\n};\n\nRenderedTextInstance.prototype.getDefaultWidth = function() {\n  return this._pixiObject.width;\n};\n\nRenderedTextInstance.prototype.getDefaultHeight = function() {\n  return this._pixiObject.height;\n};\n\nexport default RenderedTextInstance;\n","import makeRenderer from './RenderedIconInstance';\nexport default makeRenderer('CppPlatform/Extensions/primitivedrawingicon.png');\n","import makeRenderer from './RenderedIconInstance';\nexport default makeRenderer('CppPlatform/Extensions/textentry.png');\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js';\nimport { rgbToHexNumber } from '../../Utils/ColorTransformer';\nconst gd = global.gd;\n\n/**\n * Renderer for an ParticleEmitter object.\n *\n * @extends RenderedInstance\n * @class RenderedParticleEmitterInstance\n * @constructor\n */\nfunction RenderedParticleEmitterInstance(\n  project,\n  layout,\n  instance,\n  associatedObject,\n  pixiContainer,\n  pixiResourcesLoader\n) {\n  RenderedInstance.call(\n    this,\n    project,\n    layout,\n    instance,\n    associatedObject,\n    pixiContainer,\n    pixiResourcesLoader\n  );\n\n  this._pixiObject = new PIXI.Graphics();\n  this._pixiContainer.addChild(this._pixiObject);\n  this.updateGraphics();\n}\nRenderedParticleEmitterInstance.prototype = Object.create(\n  RenderedInstance.prototype\n);\n\n/**\n * Return a URL for thumbnail of the specified object.\n */\nRenderedParticleEmitterInstance.getThumbnail = function(\n  project,\n  resourcesLoader,\n  object\n) {\n  return 'CppPlatform/Extensions/particleSystemicon.png';\n};\n\nRenderedParticleEmitterInstance.prototype.update = function() {\n  this._pixiObject.position.x = this._instance.getX();\n  this._pixiObject.position.y = this._instance.getY();\n  this.updateGraphics();\n};\n\n/**\n * Render the preview of the particle emitter according to the setup of the object\n */\nRenderedParticleEmitterInstance.prototype.updateGraphics = function() {\n  const particleEmitterObject = gd.asParticleEmitterObject(\n    this._associatedObject\n  );\n\n  this._pixiObject.clear();\n\n  const emitterAngle = (this._instance.getAngle() / 180) * 3.14159;\n  const sprayConeAngle = particleEmitterObject.getConeSprayAngle();\n  const line1Angle = emitterAngle - (sprayConeAngle / 2.0 / 180.0) * 3.14159;\n  const line2Angle = emitterAngle + (sprayConeAngle / 2.0 / 180.0) * 3.14159;\n  const length = 64;\n\n  this._pixiObject.beginFill(0, 0);\n  this._pixiObject.lineStyle(\n    3,\n    rgbToHexNumber(\n      particleEmitterObject.getParticleRed2(),\n      particleEmitterObject.getParticleGreen2(),\n      particleEmitterObject.getParticleBlue2()\n    ),\n    1\n  );\n  this._pixiObject.moveTo(0, 0);\n  this._pixiObject.lineTo(\n    Math.cos(line1Angle) * length,\n    Math.sin(line1Angle) * length\n  );\n  this._pixiObject.moveTo(0, 0);\n  this._pixiObject.lineTo(\n    Math.cos(line2Angle) * length,\n    Math.sin(line2Angle) * length\n  );\n  this._pixiObject.endFill();\n\n  this._pixiObject.lineStyle(0, 0x000000, 1);\n  this._pixiObject.beginFill(\n    rgbToHexNumber(\n      particleEmitterObject.getParticleRed1(),\n      particleEmitterObject.getParticleGreen1(),\n      particleEmitterObject.getParticleBlue1()\n    )\n  );\n  this._pixiObject.drawCircle(0, 0, 8);\n  this._pixiObject.endFill();\n};\n\nRenderedParticleEmitterInstance.prototype.getDefaultWidth = function() {\n  return 128;\n};\n\nRenderedParticleEmitterInstance.prototype.getDefaultHeight = function() {\n  return 128;\n};\n\nRenderedParticleEmitterInstance.prototype.getOriginX = function() {\n  return 64;\n};\n\nRenderedParticleEmitterInstance.prototype.getOriginY = function() {\n  return 64;\n};\n\nexport default RenderedParticleEmitterInstance;\n","import makeRenderer from './RenderedIconInstance';\nexport default makeRenderer('JsPlatform/Extensions/skeletonicon24.png');\n","import FontFaceObserver from 'fontfaceobserver';\n\n/**\n * A simple wrapper around FontFace (if supported) or @font-face + FontFaceObserver\n * to load a font from an url and be notified when loading is done (or failed).\n * @param {*} fontFamily\n * @param {*} src\n * @param {*} descriptors\n */\nexport const loadFontFace = (fontFamily, src, descriptors = {}) => {\n  if (typeof FontFace !== 'undefined') {\n    // Load the given font using CSS Font Loading API.\n    const fontFace = new FontFace(fontFamily, src, descriptors);\n    document.fonts.add(fontFace);\n    return fontFace.load();\n  } else {\n    // Add @font-face and use FontFaceObserver to be notified when the\n    // font is ready.\n    const newStyle = document.createElement('style');\n    newStyle.appendChild(\n      document.createTextNode(\n        `@font-face {\n          font-family: ${fontFamily};\n          src: ${src};\n        }`\n      )\n    );\n\n    document.head.appendChild(newStyle);\n    return new FontFaceObserver(fontFamily, descriptors).load().catch(err => {\n      console.warn(`Error while loading font ${fontFamily}`, err);\n\n      throw err;\n    });\n  }\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport React, { Component } from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Line, Column } from '../../UI/Grid';\nimport {\n  type ParameterFieldProps,\n  getParameterValueOrDefault,\n} from './ParameterFieldCommons';\nimport { focusButton } from '../../UI/Button';\nimport Text from '../../UI/Text';\n\nconst styles = {\n  button: {\n    margin: 5,\n  },\n  description: {\n    display: 'inline-block',\n    marginRight: 5,\n  },\n};\n\nexport default class YesNoField extends Component<ParameterFieldProps, void> {\n  _yesButton = React.createRef<RaisedButton>();\n\n  focus() {\n    focusButton(this._yesButton);\n  }\n\n  render() {\n    const { parameterMetadata, value } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n    const effectiveValue = getParameterValueOrDefault(value, parameterMetadata);\n\n    return (\n      <Line>\n        <Text style={styles.description}>{description}</Text>\n        <Column noMargin>\n          <RaisedButton\n            style={styles.button}\n            label={<Trans>Yes</Trans>}\n            primary={effectiveValue === 'yes'}\n            onClick={() => this.props.onChange('yes')}\n            ref={this._yesButton}\n          />\n        </Column>\n        <Column noMargin>\n          <RaisedButton\n            style={styles.button}\n            label={<Trans>No</Trans>}\n            primary={effectiveValue !== 'yes'}\n            onClick={() => this.props.onChange('no')}\n          />\n        </Column>\n      </Line>\n    );\n  }\n}\n\nexport const renderInlineYesNo = ({\n  value,\n  parameterMetadata,\n}: ParameterInlineRendererProps) => {\n  if (getParameterValueOrDefault(value, parameterMetadata) === 'yes') {\n    return <Trans>yes</Trans>;\n  } else {\n    return <Trans>no</Trans>;\n  }\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport React, { Component } from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Line, Column } from '../../UI/Grid';\nimport {\n  type ParameterFieldProps,\n  getParameterValueOrDefault,\n} from './ParameterFieldCommons';\nimport { focusButton } from '../../UI/Button';\nimport Text from '../../UI/Text';\n\nconst styles = {\n  button: {\n    margin: 5,\n  },\n  description: {\n    display: 'inline-block',\n    marginRight: 5,\n  },\n};\n\nexport default class TrueFalseField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _trueButton = React.createRef<RaisedButton>();\n\n  focus() {\n    focusButton(this._trueButton);\n  }\n\n  render() {\n    const { parameterMetadata, value } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n    const effectiveValue = getParameterValueOrDefault(value, parameterMetadata);\n\n    return (\n      <Line>\n        <Text style={styles.description}>{description}</Text>\n        <Column noMargin>\n          <RaisedButton\n            style={styles.button}\n            label={<Trans>True</Trans>}\n            primary={effectiveValue === 'True'}\n            onClick={() => this.props.onChange('True')}\n            ref={this._trueButton}\n          />\n        </Column>\n        <Column noMargin>\n          <RaisedButton\n            style={styles.button}\n            label={<Trans>False</Trans>}\n            primary={effectiveValue !== 'True'}\n            onClick={() => this.props.onChange('False')}\n          />\n        </Column>\n      </Line>\n    );\n  }\n}\n\nexport const renderInlineTrueFalse = ({\n  value,\n  parameterMetadata,\n}: ParameterInlineRendererProps) => {\n  if (getParameterValueOrDefault(value, parameterMetadata) === 'True') {\n    return <Trans>true</Trans>;\n  } else {\n    return <Trans>false</Trans>;\n  }\n};\n","// @flow\nimport React, { Component } from 'react';\nimport GenericExpressionField from './GenericExpressionField';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\nexport default class ExpressionField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?GenericExpressionField;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    return (\n      <GenericExpressionField\n        expressionType=\"number\"\n        ref={field => (this._field = field)}\n        {...this.props}\n      />\n    );\n  }\n}\n","// @flow\nimport React, { Component } from 'react';\nimport { enumerateExpressions } from './EnumerateExpressions';\nimport InstructionOrExpressionSelector from './index';\nimport { createTree, type InstructionOrExpressionTreeNode } from './CreateTree';\nimport {\n  type EnumeratedInstructionOrExpressionMetadata,\n  filterEnumeratedInstructionOrExpressionMetadataByScope,\n} from './EnumeratedInstructionOrExpressionMetadata.js';\nimport { type EventsScope } from '../../EventsScope.flow';\n\ntype Props = {|\n  expressionType: string,\n  focusOnMount?: boolean,\n  selectedType: string,\n  onChoose: (type: string, EnumeratedInstructionOrExpressionMetadata) => void,\n  scope: EventsScope,\n|};\n\nconst style = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n};\n\nexport default class ExpressionSelector extends Component<Props, {||}> {\n  instructionsInfo: Array<EnumeratedInstructionOrExpressionMetadata> = filterEnumeratedInstructionOrExpressionMetadataByScope(\n    enumerateExpressions(this.props.expressionType).allExpressions,\n    this.props.scope\n  );\n  instructionsInfoTree: InstructionOrExpressionTreeNode = createTree(\n    this.instructionsInfo\n  );\n\n  render() {\n    const { expressionType, scope, ...otherProps } = this.props;\n    return (\n      <InstructionOrExpressionSelector\n        style={style}\n        instructionsInfo={this.instructionsInfo}\n        instructionsInfoTree={this.instructionsInfoTree}\n        iconSize={16}\n        {...otherProps}\n      />\n    );\n  }\n}\n","// @flow\nimport {\n  type EnumeratedInstructionOrExpressionMetadata,\n  type InstructionOrExpressionScope,\n} from './EnumeratedInstructionOrExpressionMetadata.js';\nconst gd = global.gd;\n\nconst GROUP_DELIMITER = '/';\n\nconst enumerateExtensionExpressions = (\n  prefix: string,\n  expressions: gdMapStringExpressionMetadata,\n  scope: InstructionOrExpressionScope\n): Array<EnumeratedInstructionOrExpressionMetadata> => {\n  const allExpressions = [];\n\n  //Get the map containing the metadata of the expression provided by the extension...\n  var expressionsTypes = expressions.keys();\n\n  //... and add each instruction\n  for (var j = 0; j < expressionsTypes.size(); ++j) {\n    var exprMetadata = expressions.get(expressionsTypes.get(j));\n    if (!exprMetadata.isShown()) {\n      //Skip hidden expressions\n      continue;\n    }\n\n    var parameters = [];\n    for (var i = 0; i < exprMetadata.getParametersCount(); i++) {\n      if (scope.objectMetadata && i === 0) continue;\n      if (scope.behaviorMetadata && i <= 1) continue; //Skip object and behavior parameters\n      if (exprMetadata.getParameter(i).isCodeOnly()) continue;\n\n      parameters.push(exprMetadata.getParameter(i));\n    }\n\n    const displayedName = exprMetadata.getFullName();\n    const groupName = exprMetadata.getGroup();\n    const iconFilename = exprMetadata.getSmallIconFilename();\n    const fullGroupName = prefix + groupName;\n\n    allExpressions.push({\n      type: expressionsTypes.get(j),\n      name: expressionsTypes.get(j),\n      displayedName,\n      fullGroupName,\n      iconFilename,\n      metadata: exprMetadata,\n      parameters: parameters,\n      scope,\n      isPrivate: exprMetadata.isPrivate(),\n    });\n  }\n\n  return allExpressions;\n};\n\nexport const enumerateExpressions = (type: string) => {\n  const freeExpressions = [];\n  const objectsExpressions = [];\n  const behaviorsExpressions = [];\n\n  const allExtensions = gd\n    .asPlatform(gd.JsPlatform.get())\n    .getAllPlatformExtensions();\n  for (var i = 0; i < allExtensions.size(); ++i) {\n    var extension = allExtensions.get(i);\n    var allObjectsTypes = extension.getExtensionObjectsTypes();\n    var allBehaviorsTypes = extension.getBehaviorsTypes();\n\n    let prefix = '';\n    if (allObjectsTypes.size() > 0 || allBehaviorsTypes.size() > 0) {\n      prefix =\n        extension.getName() === 'BuiltinObject'\n          ? 'Common expressions for all objects'\n          : extension.getFullName();\n      prefix += GROUP_DELIMITER;\n    }\n\n    //Check which type of expression we want to autocomplete.\n    var allFreeExpressionsGetter = extension.getAllExpressions;\n    var allObjectExpressionsGetter = extension.getAllExpressionsForObject;\n    var allBehaviorExpressionsGetter = extension.getAllExpressionsForBehavior;\n    if (type === 'string') {\n      allFreeExpressionsGetter = extension.getAllStrExpressions;\n      allObjectExpressionsGetter = extension.getAllStrExpressionsForObject;\n      allBehaviorExpressionsGetter = extension.getAllStrExpressionsForBehavior;\n    }\n\n    //Free expressions\n    freeExpressions.push.apply(\n      freeExpressions,\n      enumerateExtensionExpressions(\n        prefix,\n        allFreeExpressionsGetter.call(extension),\n        {\n          objectMetadata: undefined,\n          behaviorMetadata: undefined,\n        }\n      )\n    );\n\n    //Objects expressions:\n    for (var j = 0; j < allObjectsTypes.size(); ++j) {\n      const objectType = allObjectsTypes.get(j);\n      const objectMetadata = extension.getObjectMetadata(objectType);\n      objectsExpressions.push.apply(\n        objectsExpressions,\n        enumerateExtensionExpressions(\n          prefix,\n          allObjectExpressionsGetter.call(extension, objectType),\n          { objectMetadata }\n        )\n      );\n    }\n\n    //Behaviors expressions:\n    for (var k = 0; k < allBehaviorsTypes.size(); ++k) {\n      const behaviorType = allBehaviorsTypes.get(k);\n      const behaviorMetadata = extension.getBehaviorMetadata(behaviorType);\n      behaviorsExpressions.push.apply(\n        behaviorsExpressions,\n        enumerateExtensionExpressions(\n          prefix,\n          allBehaviorExpressionsGetter.call(extension, behaviorType),\n          { behaviorMetadata }\n        )\n      );\n    }\n  }\n\n  return {\n    allExpressions: [\n      ...freeExpressions,\n      ...objectsExpressions,\n      ...behaviorsExpressions,\n    ],\n    freeExpressions,\n    objectsExpressions,\n    behaviorsExpressions,\n  };\n};\n\nexport const filterExpressions = (\n  list: Array<EnumeratedInstructionOrExpressionMetadata>,\n  searchText: string\n): Array<EnumeratedInstructionOrExpressionMetadata> => {\n  if (!searchText) return list;\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list.filter(enumeratedExpression => {\n    return (\n      enumeratedExpression.type.toLowerCase().indexOf(lowercaseSearchText) !==\n      -1\n    );\n  });\n};\n","//@flow\nimport { type EnumeratedInstructionOrExpressionMetadata } from '../../InstructionEditor/InstructionOrExpressionSelector/EnumeratedInstructionOrExpressionMetadata.js';\nimport { type ParameterValues } from './ExpressionParametersEditorDialog';\n\nconst filterOutCodeOnlyParameters = (\n  array: Array<string>,\n  expressionMetadata: Object,\n  firstParameterIndex: number\n) => {\n  const parametersCount = expressionMetadata.getParametersCount();\n\n  return array.filter((parameter, index) => {\n    if (index < firstParameterIndex) return false;\n\n    return (\n      index < parametersCount &&\n      !expressionMetadata.getParameter(index).isCodeOnly()\n    );\n  });\n};\n\nexport const formatExpressionCall = (\n  expressionInfo: EnumeratedInstructionOrExpressionMetadata,\n  parameterValues: ParameterValues\n): string => {\n  const functionName = expressionInfo.name || '';\n\n  if (expressionInfo.scope.objectMetadata) {\n    const objectName = parameterValues[0];\n\n    const functionArgs = filterOutCodeOnlyParameters(\n      parameterValues,\n      expressionInfo.metadata,\n      1\n    ).join(', ');\n    return `${objectName}.${functionName}(${functionArgs})`;\n  } else if (expressionInfo.scope.behaviorMetadata) {\n    const objectName = parameterValues[0];\n    const behaviorName = parameterValues[1];\n\n    const functionArgs = filterOutCodeOnlyParameters(\n      parameterValues,\n      expressionInfo.metadata,\n      2\n    ).join(', ');\n    return `${objectName}.${behaviorName}::${functionName}(${functionArgs})`;\n  } else {\n    const functionArgs = filterOutCodeOnlyParameters(\n      parameterValues,\n      expressionInfo.metadata,\n      0\n    ).join(', ');\n    return `${functionName}(${functionArgs})`;\n  }\n};\n","// @flow\nimport * as React from 'react';\n\nexport type Highlight = {|\n  begin: number,\n  end: number,\n  type?: 'error',\n  message: string,\n|};\n\ntype Props = {|\n  value: string,\n  style: Object,\n  highlights: Array<Highlight>,\n|};\n\nconst defaultStyle = {\n  width: '100%',\n  position: 'absolute',\n  whiteSpace: 'pre-wrap',\n  wordWrap: 'break-word',\n  color: 'transparent',\n};\n\nconst highlightedText = {\n  backgroundColor: 'rgba(244, 67, 54, 0.15)',\n  borderSizing: 'border-box',\n  borderBottom: '3px solid rgba(244, 67, 54, 0.7)',\n};\n\nexport default ({ value, style, highlights }: Props) => {\n  const sortedHighlights = highlights\n    .slice()\n    .sort((highlight1, highlight2) => highlight1.begin - highlight2.begin);\n\n  const elements = [];\n  let lastPos = 0;\n\n  sortedHighlights.forEach((highlight, i) => {\n    const startPos = Math.max(highlight.begin, lastPos);\n    if (startPos !== lastPos) {\n      elements.push(\n        <span key={`defaultText-${i}`}>\n          {value.substring(lastPos, startPos)}\n        </span>\n      );\n    }\n\n    if (lastPos < highlight.end) {\n      elements.push(\n        <span key={`highlightedText-${i}`} style={highlightedText}>\n          {value.substring(startPos, highlight.end)}\n        </span>\n      );\n      lastPos = highlight.end;\n    }\n  });\n  if (lastPos < value.length) {\n    elements.push(\n      <span key={`defaultText-end`}>{value.substring(lastPos)}</span>\n    );\n  }\n\n  return <div style={{ ...defaultStyle, ...style }}>{elements}</div>;\n};\n","// @flow\nimport React, { Component } from 'react';\nimport GenericExpressionField from './GenericExpressionField';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\nexport default class StringField extends Component<ParameterFieldProps, void> {\n  _field: ?GenericExpressionField;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    return (\n      <GenericExpressionField\n        expressionType=\"string\"\n        ref={field => (this._field = field)}\n        {...this.props}\n      />\n    );\n  }\n}\n","// @flow\nimport React, { Component } from 'react';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport SemiControlledAutoComplete from '../../UI/SemiControlledAutoComplete';\n\nconst getChoices = (parameterMetadata: ?gdParameterMetadata) => {\n  if (!parameterMetadata) {\n    return [];\n  }\n\n  try {\n    return JSON.parse(parameterMetadata.getExtraInfo());\n  } catch (exception) {\n    console.error(\n      'The parameter seems misconfigured, as an array of choices could not be extracted - verify that your properly wrote a list of choices in JSON format. Full exception is:',\n      exception\n    );\n  }\n\n  return [];\n};\n\nexport default class StringWithSelectorField extends Component<\n  ParameterFieldProps,\n  {||}\n> {\n  _field: ?any;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const { value, onChange, isInline, parameterMetadata } = this.props;\n\n    return (\n      <SemiControlledAutoComplete\n        margin={this.props.isInline ? 'none' : 'dense'}\n        floatingLabelText={\n          parameterMetadata ? parameterMetadata.getDescription() : undefined\n        }\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        fullWidth\n        value={value}\n        onChange={onChange}\n        dataSource={getChoices(parameterMetadata).map(choice => ({\n          text: '\"' + choice + '\"',\n          value: '\"' + choice + '\"',\n        }))}\n        openOnFocus={!isInline}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport { getLastObjectParameterValue } from './ParameterMetadataTools';\nimport SemiControlledAutoComplete from '../../UI/SemiControlledAutoComplete';\nconst gd = global.gd;\n\ntype State = {|\n  errorText: ?string,\n|};\n\nexport default class BehaviorField extends React.Component<\n  ParameterFieldProps,\n  State\n> {\n  state = { errorText: null };\n  _description: ?string;\n  _longDescription: ?string;\n  _behaviorTypeAllowed: ?string;\n  _behaviorNames: Array<string> = [];\n  _field: ?SemiControlledAutoComplete;\n\n  constructor(props: ParameterFieldProps) {\n    super(props);\n\n    const { parameterMetadata } = this.props;\n    this._description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    this._longDescription = parameterMetadata\n      ? parameterMetadata.getLongDescription()\n      : undefined;\n\n    this._behaviorTypeAllowed = parameterMetadata\n      ? parameterMetadata.getExtraInfo()\n      : undefined;\n  }\n\n  _updateBehaviorsList() {\n    const {\n      instructionMetadata,\n      instruction,\n      expressionMetadata,\n      expression,\n      parameterIndex,\n    } = this.props;\n\n    const objectName = getLastObjectParameterValue({\n      instructionMetadata,\n      instruction,\n      expressionMetadata,\n      expression,\n      parameterIndex,\n    });\n    if (!objectName) return;\n\n    this._behaviorNames = gd\n      .getBehaviorsOfObject(\n        this.props.globalObjectsContainer,\n        this.props.objectsContainer,\n        objectName,\n        true\n      )\n      .toJSArray()\n      .filter(behaviorName => {\n        return (\n          !this._behaviorTypeAllowed ||\n          gd.getTypeOfBehavior(\n            this.props.globalObjectsContainer,\n            this.props.objectsContainer,\n            behaviorName\n          ) === this._behaviorTypeAllowed\n        );\n      });\n  }\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  _getError = (value?: string) => {\n    if (!value && !this.props.value) return null;\n\n    const isValidChoice =\n      this._behaviorNames.filter(choice => this.props.value === choice)\n        .length !== 0;\n\n    if (!isValidChoice) return 'This behavior is not attached to the object';\n\n    return null;\n  };\n\n  _doValidation = (value?: string) => {\n    this.setState({ errorText: this._getError(value) });\n  };\n\n  _forceChooseBehavior = () => {\n    // This is a bit hacky:\n    // force the behavior selection if there is only one selectable behavior\n    if (this._behaviorNames.length === 1) {\n      if (this.props.value !== this._behaviorNames[0]) {\n        this.props.onChange(this._behaviorNames[0]);\n      }\n    }\n  };\n\n  componentDidUpdate() {\n    this._forceChooseBehavior();\n  }\n\n  componentDidMount() {\n    this._forceChooseBehavior();\n  }\n\n  render() {\n    this._updateBehaviorsList();\n\n    const noBehaviorErrorText =\n      this._behaviorTypeAllowed !== '' ? (\n        <Trans>\n          The behavior is not attached to this object. Please select another\n          object or add this behavior.\n        </Trans>\n      ) : (\n        <Trans>\n          This object has no behaviors: please add this behavior to the object\n          first.\n        </Trans>\n      );\n\n    return (\n      <SemiControlledAutoComplete\n        margin={this.props.isInline ? 'none' : 'dense'}\n        floatingLabelText={this._description}\n        helperMarkdownText={this._longDescription}\n        fullWidth\n        errorText={\n          !this._behaviorNames.length\n            ? noBehaviorErrorText\n            : this.state.errorText\n        }\n        value={this.props.value}\n        onChange={this.props.onChange}\n        onBlur={event => {\n          this._doValidation(event.currentTarget.value);\n        }}\n        dataSource={this._behaviorNames.map(behaviorName => ({\n          text: behaviorName,\n          value: behaviorName,\n        }))}\n        openOnFocus={!this.props.isInline}\n        disabled={this._behaviorNames.length <= 1}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport VariableField, { renderVariableWithIcon } from './VariableField';\nimport VariablesEditorDialog from '../../VariablesList/VariablesEditorDialog';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\ntype State = {|\n  editorOpen: boolean,\n|};\n\nexport default class SceneVariableField extends React.Component<\n  ParameterFieldProps,\n  State\n> {\n  _field: ?VariableField;\n  state = {\n    editorOpen: false,\n  };\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const { scope } = this.props;\n    const { layout } = scope;\n\n    return (\n      <React.Fragment>\n        <VariableField\n          variablesContainer={layout ? layout.getVariables() : null}\n          parameterMetadata={this.props.parameterMetadata}\n          value={this.props.value}\n          onChange={this.props.onChange}\n          isInline={this.props.isInline}\n          ref={field => (this._field = field)}\n          onOpenDialog={() => this.setState({ editorOpen: true })}\n          globalObjectsContainer={this.props.globalObjectsContainer}\n          objectsContainer={this.props.objectsContainer}\n          scope={scope}\n        />\n        {this.state.editorOpen && layout && (\n          <VariablesEditorDialog\n            open\n            variablesContainer={layout.getVariables()}\n            onCancel={() => this.setState({ editorOpen: false })}\n            onApply={() => {\n              this.setState({ editorOpen: false });\n            }}\n            emptyExplanationMessage={\n              <Trans>\n                Scene variables can be used to store any value or text during\n                the game.\n              </Trans>\n            }\n            emptyExplanationSecondMessage={\n              <Trans>\n                For example, you can have a variable called Score representing\n                the current score of the player.\n              </Trans>\n            }\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport const renderInlineSceneVariable = ({\n  value,\n}: ParameterInlineRendererProps) => {\n  return renderVariableWithIcon(\n    value,\n    'res/types/scenevar.png',\n    'scene variable'\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport VariableField, { renderVariableWithIcon } from './VariableField';\nimport VariablesEditorDialog from '../../VariablesList/VariablesEditorDialog';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\ntype State = {|\n  editorOpen: boolean,\n|};\n\nexport default class GlobalVariableField extends React.Component<\n  ParameterFieldProps,\n  State\n> {\n  _field: ?VariableField;\n  state = {\n    editorOpen: false,\n  };\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const { project, scope } = this.props;\n\n    return (\n      <React.Fragment>\n        <VariableField\n          variablesContainer={project ? project.getVariables() : null}\n          parameterMetadata={this.props.parameterMetadata}\n          value={this.props.value}\n          onChange={this.props.onChange}\n          isInline={this.props.isInline}\n          ref={field => (this._field = field)}\n          onOpenDialog={() => this.setState({ editorOpen: true })}\n          globalObjectsContainer={this.props.globalObjectsContainer}\n          objectsContainer={this.props.objectsContainer}\n          scope={scope}\n        />\n        {this.state.editorOpen && project && (\n          <VariablesEditorDialog\n            open={this.state.editorOpen}\n            variablesContainer={project.getVariables()}\n            onCancel={() => this.setState({ editorOpen: false })}\n            onApply={() => {\n              this.setState({ editorOpen: false });\n            }}\n            emptyExplanationMessage={\n              <Trans>\n                Global variables are variables that are persisted across the\n                scenes during the game.\n              </Trans>\n            }\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport const renderInlineGlobalVariable = ({\n  value,\n}: ParameterInlineRendererProps) => {\n  return renderVariableWithIcon(\n    value,\n    'res/types/globalvar.png',\n    'global variable'\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport VariableField, { renderVariableWithIcon } from './VariableField';\nimport VariablesEditorDialog from '../../VariablesList/VariablesEditorDialog';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport { getLastObjectParameterValue } from './ParameterMetadataTools';\n\ntype State = {|\n  editorOpen: boolean,\n|};\n\nexport default class ObjectVariableField extends React.Component<\n  ParameterFieldProps,\n  State\n> {\n  _field: ?VariableField;\n  state = {\n    editorOpen: false,\n  };\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const {\n      project,\n      scope,\n      instructionMetadata,\n      instruction,\n      expressionMetadata,\n      expression,\n      parameterIndex,\n    } = this.props;\n\n    const objectName = getLastObjectParameterValue({\n      instructionMetadata,\n      instruction,\n      expressionMetadata,\n      expression,\n      parameterIndex,\n    });\n\n    let variablesContainer = null;\n    if (objectName) {\n      const { layout } = scope;\n      if (layout && layout.hasObjectNamed(objectName)) {\n        variablesContainer = layout.getObject(objectName).getVariables();\n      } else if (project && project.hasObjectNamed(objectName)) {\n        variablesContainer = project.getObject(objectName).getVariables();\n      }\n    }\n\n    return (\n      <React.Fragment>\n        <VariableField\n          variablesContainer={variablesContainer}\n          parameterMetadata={this.props.parameterMetadata}\n          value={this.props.value}\n          onChange={this.props.onChange}\n          isInline={this.props.isInline}\n          ref={field => (this._field = field)}\n          onOpenDialog={() => this.setState({ editorOpen: true })}\n          globalObjectsContainer={this.props.globalObjectsContainer}\n          objectsContainer={this.props.objectsContainer}\n          scope={scope}\n        />\n        {this.state.editorOpen && variablesContainer && (\n          <VariablesEditorDialog\n            open={this.state.editorOpen}\n            variablesContainer={variablesContainer}\n            onCancel={() => this.setState({ editorOpen: false })}\n            onApply={() => {\n              this.setState({ editorOpen: false });\n            }}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport const renderInlineObjectVariable = ({\n  value,\n}: ParameterInlineRendererProps) => {\n  return renderVariableWithIcon(\n    value,\n    'res/types/objectvar.png',\n    'object variable'\n  );\n};\n","// @flow\nimport React, { Component } from 'react';\nimport { mapFor } from '../../Utils/MapFor';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport SemiControlledAutoComplete from '../../UI/SemiControlledAutoComplete';\n\nexport default class LayerField extends Component<ParameterFieldProps, {||}> {\n  _field: ?SemiControlledAutoComplete;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const { value, onChange, isInline, scope, parameterMetadata } = this.props;\n    const { layout } = scope;\n    const layerNames = layout\n      ? mapFor(0, layout.getLayersCount(), i => {\n          const layer = layout.getLayerAt(i);\n          return layer.getName();\n        })\n      : [];\n\n    return (\n      <SemiControlledAutoComplete\n        margin={this.props.isInline ? 'none' : 'dense'}\n        floatingLabelText={\n          parameterMetadata ? parameterMetadata.getDescription() : undefined\n        }\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        fullWidth\n        value={value}\n        onChange={onChange}\n        openOnFocus={isInline}\n        dataSource={layerNames.map(layerName => ({\n          text: layerName ? `\"${layerName}\"` : '\"\" (Base layer)',\n          value: `\"${layerName}\"`,\n        }))}\n        hintText={'\"\"'}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport ResourceSelector from '../../ResourcesList/ResourceSelector';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\nexport default class AudioResourceField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?ResourceSelector;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    if (\n      !this.props.resourceSources ||\n      !this.props.onChooseResource ||\n      !this.props.resourceExternalEditors ||\n      !this.props.project\n    ) {\n      console.error(\n        'Missing project, resourceSources, onChooseResource or resourceExternalEditors for AudioResourceField'\n      );\n      return null;\n    }\n\n    return (\n      <ResourceSelector\n        margin={this.props.isInline ? 'none' : 'dense'}\n        project={this.props.project}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        resourcesLoader={ResourcesLoader}\n        resourceKind=\"audio\"\n        fullWidth\n        initialResourceName={this.props.value}\n        onChange={this.props.onChange}\n        floatingLabelText={<Trans>Choose the audio file to use</Trans>}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport ResourceSelector from '../../ResourcesList/ResourceSelector';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\nexport default class VideoResourceField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?ResourceSelector;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    if (\n      !this.props.resourceSources ||\n      !this.props.onChooseResource ||\n      !this.props.resourceExternalEditors ||\n      !this.props.project\n    ) {\n      console.error(\n        'Missing project, resourceSources, onChooseResource or resourceExternalEditors for VideoResourceField'\n      );\n      return null;\n    }\n\n    return (\n      <ResourceSelector\n        margin={this.props.isInline ? 'none' : 'dense'}\n        project={this.props.project}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        resourcesLoader={ResourcesLoader}\n        resourceKind=\"video\"\n        fullWidth\n        initialResourceName={this.props.value}\n        onChange={this.props.onChange}\n        floatingLabelText={<Trans>Choose the video file to use</Trans>}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport ResourceSelector from '../../ResourcesList/ResourceSelector';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\nexport default class JsonResourceField extends Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?ResourceSelector;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    if (\n      !this.props.resourceSources ||\n      !this.props.onChooseResource ||\n      !this.props.resourceExternalEditors ||\n      !this.props.project\n    ) {\n      console.error(\n        'Missing project, resourceSources, onChooseResource or resourceExternalEditors for JsonResourceField'\n      );\n      return null;\n    }\n\n    return (\n      <ResourceSelector\n        margin={this.props.isInline ? 'none' : 'dense'}\n        project={this.props.project}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        resourcesLoader={ResourcesLoader}\n        resourceKind=\"json\"\n        fullWidth\n        initialResourceName={this.props.value}\n        onChange={this.props.onChange}\n        floatingLabelText={<Trans>Choose the json file to use</Trans>}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport React, { Component } from 'react';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport GenericExpressionField from './GenericExpressionField';\nimport ColorPicker from '../../UI/ColorField/ColorPicker';\n\nconst parseColor = (rgbColor: string) => {\n  const colors = rgbColor.replace(/\"/g, '').split(';');\n  if (colors.length !== 3) {\n    return null;\n  }\n\n  const r = parseInt(colors[0], 10);\n  const g = parseInt(colors[1], 10);\n  const b = parseInt(colors[2], 10);\n\n  // Check if parsing of number was done properly (if not,\n  // we receive NaN which is not equal to itself).\n  // eslint-disable-next-line\n  if (r !== r || g !== g || b !== b) return null;\n\n  return {\n    r,\n    g,\n    b,\n    a: 255,\n  };\n};\n\nexport default class ParameterColorField extends Component<ParameterFieldProps> {\n  _field: ?GenericExpressionField;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    return (\n      <GenericExpressionField\n        expressionType=\"string\"\n        ref={field => (this._field = field)}\n        renderExtraButton={({ style }) => (\n          <ColorPicker\n            style={style}\n            disableAlpha\n            color={parseColor(this.props.value)}\n            onChangeComplete={color => {\n              this.props.onChange(\n                '\"' + color.rgb.r + ';' + color.rgb.g + ';' + color.rgb.b + '\"'\n              );\n            }}\n          />\n        )}\n        {...this.props}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport React, { Component } from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Line, Column } from '../../UI/Grid';\nimport { makeNonBreakable } from '../../Utils/StringHelpers';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport GenericExpressionField from './GenericExpressionField';\nimport BackgroundText from '../../UI/BackgroundText';\nimport { focusButton } from '../../UI/Button';\nimport Text from '../../UI/Text';\n\ntype State = {|\n  showDeprecatedNumericValue: boolean,\n|};\n\nexport default class ForceMultiplierField extends Component<\n  ParameterFieldProps,\n  State\n> {\n  _instantButton = React.createRef<RaisedButton>();\n  state = {\n    showDeprecatedNumericValue:\n      this.props.value !== '' &&\n      this.props.value !== '1' &&\n      this.props.value !== '0',\n  };\n\n  focus() {\n    focusButton(this._instantButton);\n  }\n\n  render() {\n    const { showDeprecatedNumericValue } = this.state;\n    return (\n      <Column expand noMargin>\n        <Line expand alignItems=\"center\">\n          <Column>\n            <RaisedButton\n              label={makeNonBreakable('Instant')}\n              primary={this.props.value === '' || this.props.value === '0'}\n              onClick={() => this.props.onChange('0')}\n              ref={this._instantButton}\n            />\n          </Column>\n          <Column>\n            <Text>\n              <Trans>\n                The force will only push the object during the time of one\n                frame. Typically used in an event with no conditions or with\n                conditions that stay valid for a certain amount of time.\n              </Trans>\n            </Text>\n          </Column>\n        </Line>\n        <Line expand alignItems=\"center\">\n          <Column>\n            <RaisedButton\n              label={<Trans>Permanent</Trans>}\n              primary={this.props.value === '1'}\n              onClick={() => this.props.onChange('1')}\n            />\n          </Column>\n          <Column>\n            <Text>\n              <Trans>\n                The force will push the object forever, unless you use the\n                action \"Stop the object\". Typically used in an event with\n                conditions that are only true once, or with a \"Trigger Once\"\n                condition.\n              </Trans>\n            </Text>\n          </Column>\n        </Line>\n        {showDeprecatedNumericValue && (\n          <React.Fragment>\n            <BackgroundText>\n              <Trans>or</Trans>\n            </BackgroundText>\n            <Line expand>\n              <Column expand>\n                <GenericExpressionField\n                  expressionType=\"number\"\n                  {...this.props}\n                />\n              </Column>\n            </Line>\n            <BackgroundText>\n              <Trans>\n                The usage of a number or expression is deprecated. Please now\n                use only \"Permanent\" or \"Instant\" for configuring forces.\n              </Trans>\n            </BackgroundText>\n          </React.Fragment>\n        )}\n      </Column>\n    );\n  }\n}\n\nexport const renderInlineForceMultiplier = ({\n  value,\n}: ParameterInlineRendererProps) => {\n  if (value === '1') return 'a permanent';\n  else if (value === '0' || value === '') return 'an instant';\n\n  return 'a (multiplier: ' + value + ')';\n};\n","// @flow\nimport React, { Component } from 'react';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport SemiControlledAutoComplete from '../../UI/SemiControlledAutoComplete';\nimport { enumerateLayouts } from '../../ProjectManager/EnumerateProjectItems';\n\nexport default class SceneNameField extends Component<\n  ParameterFieldProps,\n  {||}\n> {\n  _field: ?SemiControlledAutoComplete;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const {\n      value,\n      onChange,\n      isInline,\n      project,\n      parameterMetadata,\n    } = this.props;\n    const layoutNames = project\n      ? enumerateLayouts(project).map(layout => layout.getName())\n      : [];\n\n    return (\n      <SemiControlledAutoComplete\n        margin={this.props.isInline ? 'none' : 'dense'}\n        floatingLabelText={\n          parameterMetadata ? parameterMetadata.getDescription() : undefined\n        }\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        fullWidth\n        value={value}\n        onChange={onChange}\n        openOnFocus={isInline}\n        dataSource={layoutNames.map(layoutName => ({\n          text: `\"${layoutName}\"`,\n          value: `\"${layoutName}\"`,\n        }))}\n        hintText={'\"\"'}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { instructionInvalidParameter } from './ClassNames';\n\ntype Props = {| children: React.Node, isEmpty?: boolean |};\n\n/**\n * Displayed when a parameter is invalid\n */\nexport default ({ children, isEmpty }: Props) =>\n  isEmpty ? (\n    <span className={instructionInvalidParameter}>&lt; {children} &gt;</span>\n  ) : (\n    <span className={instructionInvalidParameter}>{children}</span>\n  );\n","// @flow\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport TextField from '../../../UI/TextField';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  selectableArea,\n  disabledText,\n} from '../ClassNames';\nimport { type EventRendererProps } from './EventRenderer';\nconst gd = global.gd;\n\nconst styles = {\n  container: {\n    height: 40,\n    display: 'flex',\n    alignItems: 'center',\n    padding: 5,\n    overflow: 'hidden',\n  },\n  title: {\n    fontSize: 18,\n  },\n};\n\nexport default class GroupEvent extends React.Component<EventRendererProps, *> {\n  state = {\n    editing: false,\n  };\n  _textField: ?TextField = null;\n\n  edit = () => {\n    this.setState(\n      {\n        editing: true,\n      },\n      () => {\n        if (this._textField) this._textField.focus();\n      }\n    );\n  };\n\n  endEditing = () => {\n    this.setState({\n      editing: false,\n    });\n  };\n\n  render() {\n    var groupEvent = gd.asGroupEvent(this.props.event);\n\n    const r = groupEvent.getBackgroundColorR(),\n      g = groupEvent.getBackgroundColorG(),\n      b = groupEvent.getBackgroundColorB();\n\n    const textColor = (r + g + b) / 3 > 200 ? 'black' : 'white';\n\n    return (\n      <div\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n        })}\n        style={{\n          ...styles.container,\n          backgroundColor: `rgb(${r}, ${g}, ${b})`,\n        }}\n        onClick={this.edit}\n      >\n        {this.state.editing ? (\n          <TextField\n            ref={textField => (this._textField = textField)}\n            value={groupEvent.getName()}\n            hintText={t`<Enter group name>`}\n            onBlur={this.endEditing}\n            onChange={(e, text) => {\n              groupEvent.setName(text);\n              this.forceUpdate();\n            }}\n            style={styles.title}\n            inputStyle={{\n              color: textColor,\n              WebkitTextFillColor: textColor,\n            }}\n            underlineFocusStyle={{\n              borderColor: textColor,\n            }}\n            fullWidth\n            id=\"group-title\"\n          />\n        ) : (\n          <span\n            className={classNames({\n              [selectableArea]: true,\n              [disabledText]: this.props.disabled,\n            })}\n            style={{ ...styles.title, color: textColor }}\n          >\n            {groupEvent.getName() || '<Enter group name>'}\n          </span>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport TextField from '../../../UI/TextField';\nimport { rgbToHex } from '../../../Utils/ColorTransformer';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  selectableArea,\n  disabledText,\n} from '../ClassNames';\nimport { type EventRendererProps } from './EventRenderer';\nconst gd = global.gd;\n\nconst commentTextStyle = {\n  width: '100%',\n  fontSize: 14,\n};\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    padding: 5,\n    overflow: 'hidden',\n    minHeight: 35,\n  },\n  commentTextField: commentTextStyle,\n  commentSpan: {\n    ...commentTextStyle,\n    boxSizing: 'border-box',\n    alignItems: 'center',\n    height: '100%',\n    whiteSpace: 'initial',\n    lineHeight: 1.5,\n    border: 1,\n  },\n};\n\ntype State = {|\n  editing: boolean,\n|};\n\nexport default class CommentEvent extends React.Component<\n  EventRendererProps,\n  State\n> {\n  state = {\n    editing: false,\n  };\n\n  _selectable: ?HTMLSpanElement;\n  _textField: ?TextField;\n\n  edit = () => {\n    this.setState(\n      {\n        editing: true,\n      },\n      () => {\n        if (this._textField) this._textField.focus();\n      }\n    );\n  };\n\n  onEvent = (e: any, text: string) => {\n    const commentEvent = gd.asCommentEvent(this.props.event);\n    commentEvent.setComment(text);\n\n    this.props.onUpdate();\n    this.forceUpdate();\n  };\n\n  endEditing = () => {\n    if (!this._textField) return;\n\n    this.setState(\n      {\n        editing: false,\n      },\n      () => this.props.onUpdate()\n    );\n  };\n\n  _getCommentHTML = () => {\n    const commentEvent = gd.asCommentEvent(this.props.event);\n    return commentEvent\n      .getComment()\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\\n/g, '<br>');\n  };\n\n  render() {\n    const commentEvent = gd.asCommentEvent(this.props.event);\n\n    const backgroundColor = rgbToHex(\n      commentEvent.getBackgroundColorRed(),\n      commentEvent.getBackgroundColorGreen(),\n      commentEvent.getBackgroundColorBlue()\n    );\n\n    const textColor = rgbToHex(\n      commentEvent.getTextColorRed(),\n      commentEvent.getTextColorGreen(),\n      commentEvent.getTextColorBlue()\n    );\n\n    return (\n      <div\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n        })}\n        style={{\n          ...styles.container,\n          backgroundColor: `#${backgroundColor}`,\n        }}\n        onClick={this.edit}\n      >\n        {this.state.editing ? (\n          <TextField\n            multiLine\n            margin=\"none\"\n            ref={textField => (this._textField = textField)}\n            value={commentEvent.getComment()}\n            hintText={t`<Enter comment>`}\n            onBlur={this.endEditing}\n            onChange={this.onEvent}\n            style={styles.commentTextField}\n            inputStyle={{\n              color: `#${textColor}`,\n              padding: 0,\n              lineHeight: 1.5,\n            }}\n            underlineFocusStyle={{\n              borderColor: `#${textColor}`,\n            }}\n            fullWidth\n            id=\"comment-title\"\n          />\n        ) : (\n          <span\n            ref={selectable => (this._selectable = selectable)}\n            className={classNames({\n              [selectableArea]: true,\n              [disabledText]: this.props.disabled,\n            })}\n            style={{\n              ...styles.commentSpan,\n              color: `#${textColor}`,\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this._getCommentHTML(),\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport InstructionsList from '../InstructionsList.js';\nimport classNames from 'classnames';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  selectableArea,\n  executableEventContainer,\n  disabledText,\n} from '../ClassNames';\nimport InlinePopover from '../../InlinePopover';\nimport ObjectField from '../../ParameterFields/ObjectField';\nimport { type EventRendererProps } from './EventRenderer';\nimport ConditionsActionsColumns from '../ConditionsActionsColumns';\nconst gd = global.gd;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  instructionsContainer: {\n    display: 'flex',\n  },\n  actionsList: {\n    flex: 1,\n  },\n};\n\nexport default class ForEachEvent extends React.Component<\n  EventRendererProps,\n  *\n> {\n  state = {\n    editing: false,\n    anchorEl: null,\n  };\n\n  edit = (domEvent: any) => {\n    // We should not need to stop the event propagation, but\n    // if we don't do this, the InlinePopover's clickaway listener\n    // is immediately picking up the event and closing.\n    // Caveat: we can open multiple InlinePopover.\n    // Search the rest of the codebase for onlinepopover-event-hack\n    domEvent.preventDefault();\n    domEvent.stopPropagation();\n\n    this.setState({\n      editing: true,\n      anchorEl: domEvent.currentTarget,\n    });\n  };\n\n  endEditing = () => {\n    this.setState({\n      editing: false,\n      anchorEl: null,\n    });\n  };\n\n  render() {\n    var forEachEvent = gd.asForEachEvent(this.props.event);\n\n    const objectName = forEachEvent.getObjectToPick();\n    return (\n      <div\n        style={styles.container}\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n          [executableEventContainer]: true,\n        })}\n      >\n        <div>\n          <span\n            className={classNames({\n              [selectableArea]: true,\n              [disabledText]: this.props.disabled,\n            })}\n            onClick={this.edit}\n          >\n            {objectName ? (\n              `Repeat for each instance of ${objectName}:`\n            ) : (\n              <i>\n                Click to choose for which objects this event will be repeated\n              </i>\n            )}\n          </span>\n        </div>\n        <ConditionsActionsColumns\n          leftIndentWidth={this.props.leftIndentWidth}\n          windowWidth={this.props.windowWidth}\n          renderConditionsList={({ style, className }) => (\n            <InstructionsList\n              instrsList={forEachEvent.getConditions()}\n              style={style}\n              className={className}\n              selection={this.props.selection}\n              areConditions\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onInstructionsListContextMenu={\n                this.props.onInstructionsListContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n          renderActionsList={({ className }) => (\n            <InstructionsList\n              instrsList={forEachEvent.getActions()}\n              style={\n                {\n                  ...styles.actionsList,\n                } /* TODO: Use a new object to force update - somehow updates are not always propagated otherwise */\n              }\n              className={className}\n              selection={this.props.selection}\n              areConditions={false}\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onInstructionsListContextMenu={\n                this.props.onInstructionsListContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n        />\n        <InlinePopover\n          open={this.state.editing}\n          anchorEl={this.state.anchorEl}\n          onRequestClose={this.endEditing}\n        >\n          <ObjectField\n            project={this.props.project}\n            scope={this.props.scope}\n            globalObjectsContainer={this.props.globalObjectsContainer}\n            objectsContainer={this.props.objectsContainer}\n            value={objectName}\n            onChange={text => {\n              forEachEvent.setObjectToPick(text);\n              this.props.onUpdate();\n            }}\n            isInline\n          />\n        </InlinePopover>\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport InstructionsList from '../InstructionsList.js';\nimport classNames from 'classnames';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  selectableArea,\n  executableEventContainer,\n  disabledText,\n} from '../ClassNames';\nimport InlinePopover from '../../InlinePopover';\nimport DefaultField from '../../ParameterFields/DefaultField';\nimport { type EventRendererProps } from './EventRenderer';\nimport ConditionsActionsColumns from '../ConditionsActionsColumns';\nconst gd = global.gd;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  instructionsContainer: {\n    display: 'flex',\n  },\n  actionsList: {\n    flex: 1,\n  },\n};\n\nexport default class RepeatEvent extends React.Component<\n  EventRendererProps,\n  *\n> {\n  state = {\n    editing: false,\n    anchorEl: null,\n  };\n\n  edit = (domEvent: any) => {\n    // We should not need to stop the event propagation, but\n    // if we don't do this, the InlinePopover's clickaway listener\n    // is immediately picking up the event and closing.\n    // Caveat: we can open multiple InlinePopover.\n    // Search the rest of the codebase for onlinepopover-event-hack\n    domEvent.preventDefault();\n    domEvent.stopPropagation();\n\n    this.setState({\n      editing: true,\n      anchorEl: domEvent.currentTarget,\n    });\n  };\n\n  endEditing = () => {\n    this.setState({\n      editing: false,\n      anchorEl: null,\n    });\n  };\n\n  render() {\n    var repeatEvent = gd.asRepeatEvent(this.props.event);\n\n    const expression = repeatEvent.getRepeatExpression();\n    return (\n      <div\n        style={styles.container}\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n          [executableEventContainer]: true,\n        })}\n      >\n        <div>\n          <span\n            className={classNames({\n              [selectableArea]: true,\n              [disabledText]: this.props.disabled,\n            })}\n            onClick={this.edit}\n          >\n            {expression ? (\n              `Repeat ${expression} times:`\n            ) : (\n              <i>Click to choose how many times will be repeated</i>\n            )}\n          </span>\n        </div>\n        <ConditionsActionsColumns\n          leftIndentWidth={this.props.leftIndentWidth}\n          windowWidth={this.props.windowWidth}\n          renderConditionsList={({ style, className }) => (\n            <InstructionsList\n              instrsList={repeatEvent.getConditions()}\n              style={style}\n              className={className}\n              selection={this.props.selection}\n              areConditions\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onInstructionsListContextMenu={\n                this.props.onInstructionsListContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n          renderActionsList={({ className }) => (\n            <InstructionsList\n              instrsList={repeatEvent.getActions()}\n              style={\n                {\n                  ...styles.actionsList,\n                } /* TODO: Use a new object to force update - somehow updates are not always propagated otherwise */\n              }\n              className={className}\n              selection={this.props.selection}\n              areConditions={false}\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onInstructionsListContextMenu={\n                this.props.onInstructionsListContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n        />\n        <InlinePopover\n          open={this.state.editing}\n          anchorEl={this.state.anchorEl}\n          onRequestClose={this.endEditing}\n        >\n          <DefaultField\n            project={this.props.project}\n            scope={this.props.scope}\n            globalObjectsContainer={this.props.globalObjectsContainer}\n            objectsContainer={this.props.objectsContainer}\n            value={expression}\n            onChange={text => {\n              repeatEvent.setRepeatExpression(text);\n              this.props.onUpdate();\n            }}\n            isInline\n          />\n        </InlinePopover>\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport InstructionsList from '../InstructionsList';\nimport classNames from 'classnames';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  executableEventContainer,\n  disabledText,\n  conditionsContainer,\n} from '../ClassNames';\nimport { type EventRendererProps } from './EventRenderer';\nimport ConditionsActionsColumns from '../ConditionsActionsColumns';\nconst gd = global.gd;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  instructionsContainer: {\n    display: 'flex',\n  },\n  actionsList: {\n    flex: 1,\n  },\n};\n\nexport default class ForEachEvent extends React.Component<\n  EventRendererProps,\n  *\n> {\n  render() {\n    var whileEvent = gd.asWhileEvent(this.props.event);\n\n    return (\n      <div\n        style={styles.container}\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n          [executableEventContainer]: true,\n        })}\n      >\n        <div\n          className={classNames({\n            [disabledText]: this.props.disabled,\n          })}\n        >\n          While these conditions are true:\n        </div>\n        <InstructionsList\n          instrsList={whileEvent.getWhileConditions()}\n          style={\n            {} /* TODO: Use a new object to force update - somehow updates are not always propagated otherwise */\n          }\n          className={conditionsContainer}\n          selection={this.props.selection}\n          areConditions\n          onAddNewInstruction={this.props.onAddNewInstruction}\n          onPasteInstructions={this.props.onPasteInstructions}\n          onMoveToInstruction={this.props.onMoveToInstruction}\n          onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n          onInstructionClick={this.props.onInstructionClick}\n          onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n          onInstructionContextMenu={this.props.onInstructionContextMenu}\n          onInstructionsListContextMenu={\n            this.props.onInstructionsListContextMenu\n          }\n          onParameterClick={this.props.onParameterClick}\n          disabled={this.props.disabled}\n          renderObjectThumbnail={this.props.renderObjectThumbnail}\n          screenType={this.props.screenType}\n          windowWidth={this.props.windowWidth}\n        />\n        <div\n          className={classNames({\n            [disabledText]: this.props.disabled,\n          })}\n        >\n          Repeat these:\n        </div>\n        <ConditionsActionsColumns\n          leftIndentWidth={this.props.leftIndentWidth}\n          windowWidth={this.props.windowWidth}\n          renderConditionsList={({ style, className }) => (\n            <InstructionsList\n              instrsList={whileEvent.getConditions()}\n              style={style}\n              className={className}\n              selection={this.props.selection}\n              areConditions\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onInstructionsListContextMenu={\n                this.props.onInstructionsListContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n          renderActionsList={({ className }) => (\n            <InstructionsList\n              instrsList={whileEvent.getActions()}\n              style={\n                {\n                  ...styles.actionsList,\n                } /* TODO: Use a new object to force update - somehow updates are not always propagated otherwise */\n              }\n              className={className}\n              selection={this.props.selection}\n              areConditions={false}\n              onAddNewInstruction={this.props.onAddNewInstruction}\n              onPasteInstructions={this.props.onPasteInstructions}\n              onMoveToInstruction={this.props.onMoveToInstruction}\n              onMoveToInstructionsList={this.props.onMoveToInstructionsList}\n              onInstructionClick={this.props.onInstructionClick}\n              onInstructionDoubleClick={this.props.onInstructionDoubleClick}\n              onInstructionContextMenu={this.props.onInstructionContextMenu}\n              onInstructionsListContextMenu={\n                this.props.onInstructionsListContextMenu\n              }\n              onParameterClick={this.props.onParameterClick}\n              disabled={this.props.disabled}\n              renderObjectThumbnail={this.props.renderObjectThumbnail}\n              screenType={this.props.screenType}\n              windowWidth={this.props.windowWidth}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport * as React from 'react';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport IconButton from '../../../UI/IconButton';\nimport classNames from 'classnames';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  selectableArea,\n  linkContainer,\n  disabledText,\n} from '../ClassNames';\nimport InlinePopover from '../../InlinePopover';\nimport ExternalEventsField from '../../ParameterFields/ExternalEventsField';\nimport { showWarningBox } from '../../../UI/Messages/MessageBox';\nimport { type EventRendererProps } from './EventRenderer';\nconst gd = global.gd;\n\nconst styles = {\n  container: {\n    height: 60,\n    display: 'flex',\n    alignItems: 'center',\n    padding: 5,\n  },\n  title: {\n    fontSize: 18,\n  },\n};\n\nexport default class LinkEvent extends React.Component<EventRendererProps, *> {\n  _externalEventsField = null;\n\n  state = {\n    editing: false,\n    anchorEl: null,\n  };\n\n  edit = (domEvent: any) => {\n    // We should not need to stop the event propagation, but\n    // if we don't do this, the InlinePopover's clickaway listener\n    // is immediately picking up the event and closing.\n    // Caveat: we can open multiple InlinePopover.\n    // Search the rest of the codebase for onlinepopover-event-hack\n    domEvent.preventDefault();\n    domEvent.stopPropagation();\n\n    this.setState(\n      {\n        editing: true,\n        anchorEl: domEvent.currentTarget,\n      },\n      () => {\n        if (this._externalEventsField) this._externalEventsField.focus();\n      }\n    );\n  };\n\n  openTarget = (i18n: I18nType) => {\n    const { project, event, onOpenLayout, onOpenExternalEvents } = this.props;\n    const linkEvent = gd.asLinkEvent(event);\n    const target = linkEvent.getTarget();\n\n    if (project.hasExternalEventsNamed(target)) {\n      onOpenExternalEvents(target);\n    } else if (project.hasLayoutNamed(target)) {\n      onOpenLayout(target);\n    } else {\n      showWarningBox(\n        i18n._(\n          t`The specified external events do not exist in the game. Be sure that the name is correctly spelled or create them using the project manager.`\n        )\n      );\n    }\n  };\n\n  endEditing = () => {\n    this.setState({\n      editing: false,\n      anchorEl: null,\n    });\n  };\n\n  render() {\n    const linkEvent = gd.asLinkEvent(this.props.event);\n    const target = linkEvent.getTarget();\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <div\n            className={classNames({\n              [largeSelectableArea]: true,\n              [largeSelectedArea]: this.props.selected,\n              [linkContainer]: true,\n            })}\n            style={styles.container}\n          >\n            <span\n              style={styles.title}\n              className={classNames({\n                [disabledText]: this.props.disabled,\n              })}\n            >\n              <Trans>Include events from</Trans>{' '}\n              <i\n                className={classNames({\n                  [selectableArea]: true,\n                })}\n                onClick={this.edit}\n              >\n                {target || (\n                  <Trans>&lt; Enter the name of external events &gt;</Trans>\n                )}\n              </i>\n            </span>\n            <IconButton\n              onClick={() => this.openTarget(i18n)}\n              disabled={!target}\n            >\n              <OpenInNew />\n            </IconButton>\n            <InlinePopover\n              open={this.state.editing}\n              anchorEl={this.state.anchorEl}\n              onRequestClose={this.endEditing}\n            >\n              <ExternalEventsField\n                project={this.props.project}\n                scope={this.props.scope}\n                globalObjectsContainer={this.props.globalObjectsContainer}\n                objectsContainer={this.props.objectsContainer}\n                value={target}\n                onChange={text => {\n                  linkEvent.setTarget(text);\n                  this.props.onUpdate();\n                }}\n                isInline\n                ref={externalEventsField =>\n                  (this._externalEventsField = externalEventsField)\n                }\n              />\n            </InlinePopover>\n          </div>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport {\n  enumerateLayouts,\n  enumerateExternalEvents,\n} from '../../ProjectManager/EnumerateProjectItems';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport SemiControlledAutoComplete, {\n  type DataSource,\n} from '../../UI/SemiControlledAutoComplete';\n\nconst getList = (project: ?gdProject): DataSource => {\n  if (!project) {\n    return [];\n  }\n\n  const externalEvents = enumerateExternalEvents(project).map(\n    externalEvents => ({\n      text: externalEvents.getName(),\n      value: externalEvents.getName(),\n    })\n  );\n  const layouts = enumerateLayouts(project).map(layout => ({\n    text: layout.getName(),\n    value: layout.getName(),\n  }));\n  return [...externalEvents, { type: 'separator' }, ...layouts];\n};\n\nexport default class ExternalEventsField extends React.Component<\n  ParameterFieldProps,\n  {||}\n> {\n  _field: ?any;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const {\n      value,\n      onChange,\n      isInline,\n      project,\n      parameterMetadata,\n    } = this.props;\n\n    return (\n      <SemiControlledAutoComplete\n        margin={this.props.isInline ? 'none' : 'dense'}\n        floatingLabelText={\n          parameterMetadata ? parameterMetadata.getDescription() : undefined\n        }\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        fullWidth\n        id=\"external-events-field\"\n        value={value}\n        onChange={onChange}\n        dataSource={getList(project)}\n        openOnFocus={!isInline}\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport InlinePopover from '../../InlinePopover';\nimport ObjectField from '../../ParameterFields/ObjectField';\nimport {\n  largeSelectedArea,\n  largeSelectableArea,\n  selectableArea,\n} from '../ClassNames';\nimport { getHelpLink } from '../../../Utils/HelpLink';\nimport { type EventRendererProps } from './EventRenderer';\nimport Measure from 'react-measure';\nimport { CodeEditor } from '../../../CodeEditor';\nconst gd = global.gd;\n\nconst fontFamily = '\"Lucida Console\", Monaco, monospace';\n\nconst styles = {\n  container: {\n    minHeight: 30,\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#1e1e1e',\n  },\n  wrappingText: {\n    fontFamily,\n    fontSize: '12px',\n    paddingLeft: 5,\n    paddingRight: 5,\n    margin: 0,\n    backgroundColor: '#1e1e1e',\n    color: '#d4d4d4',\n    overflowX: 'hidden',\n    maxWidth: '100%',\n  },\n  comment: {\n    color: '#777',\n  },\n  commentLink: {\n    cursor: 'pointer',\n    color: '#777',\n    textDecoration: 'underline',\n  },\n};\n\ntype State = {|\n  width: number,\n  editing: boolean,\n  editingObject: boolean,\n  anchorEl: ?any,\n|};\n\nexport default class JsCodeEvent extends React.Component<\n  EventRendererProps,\n  State\n> {\n  state = {\n    width: 0,\n    editing: false,\n    editingObject: false,\n    anchorEl: null,\n  };\n\n  _input: ?any;\n  _container: ?any;\n\n  edit = () => {\n    if (!this._container) return;\n\n    this.setState(\n      {\n        editing: true,\n      },\n      () => {\n        // $FlowFixMe\n        const input: ?HTMLInputElement = ReactDOM.findDOMNode(this._input);\n        if (input) {\n          input.focus();\n          input.value = gd.asJsCodeEvent(this.props.event).getInlineCode();\n        }\n      }\n    );\n  };\n\n  endEditing = () => {\n    const jsCodeEvent = gd.asJsCodeEvent(this.props.event);\n\n    // $FlowFixMe\n    const input: ?HTMLInputElement = ReactDOM.findDOMNode(this._input);\n    if (input) jsCodeEvent.setInlineCode(input.value);\n\n    this.setState(\n      {\n        editing: false,\n      },\n      () => this.props.onUpdate()\n    );\n  };\n\n  onChange = (newValue: string) => {\n    const jsCodeEvent = gd.asJsCodeEvent(this.props.event);\n    jsCodeEvent.setInlineCode(newValue);\n  };\n\n  editObject = (domEvent: any) => {\n    // We should not need to stop the event propagation, but\n    // if we don't do this, the InlinePopover's clickaway listener\n    // is immediately picking up the event and closing.\n    // Caveat: we can open multiple InlinePopover.\n    // Search the rest of the codebase for onlinepopover-event-hack\n    domEvent.preventDefault();\n    domEvent.stopPropagation();\n\n    this.setState({\n      editingObject: true,\n      anchorEl: domEvent.currentTarget,\n    });\n  };\n\n  endObjectEditing = () => {\n    this.setState({\n      editingObject: false,\n      anchorEl: null,\n    });\n  };\n\n  render() {\n    const jsCodeEvent = gd.asJsCodeEvent(this.props.event);\n    const parameterObjects = jsCodeEvent.getParameterObjects();\n    const objects = (\n      <span\n        className={classNames({\n          [selectableArea]: true,\n        })}\n        onClick={this.editObject}\n      >\n        {parameterObjects\n          ? `, objects /*${parameterObjects}*/`\n          : ' /* Click here to choose objects to pass to JavaScript */'}\n      </span>\n    );\n\n    const eventsFunctionContext = this.props.scope.eventsFunction ? (\n      <span>, eventsFunctionContext</span>\n    ) : null;\n\n    const functionStart = (\n      <p style={styles.wrappingText}>\n        <span>{'(function(runtimeScene'}</span>\n        {objects}\n        {eventsFunctionContext}\n        <span>{') {'}</span>\n      </p>\n    );\n    const functionEnd = (\n      <p style={styles.wrappingText}>\n        <span>{'})(runtimeScene'}</span>\n        {objects}\n        {eventsFunctionContext}\n        <span>{');'}</span>\n        <span style={styles.comment}>\n          {' // '}\n          <a\n            href={getHelpLink('/events/js-code')}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={styles.commentLink}\n          >\n            Read the documentation and help\n          </a>\n        </span>\n      </p>\n    );\n\n    return (\n      <Measure onMeasure={({ width }) => this.setState({ width })}>\n        <div\n          style={styles.container}\n          className={classNames({\n            [largeSelectableArea]: true,\n            [largeSelectedArea]: this.props.selected,\n          })}\n          ref={container => (this._container = container)}\n        >\n          {functionStart}\n          <CodeEditor\n            value={jsCodeEvent.getInlineCode()}\n            onChange={this.onChange}\n            width={this.state.width}\n            onEditorMounted={() => this.props.onUpdate()}\n          />\n          {functionEnd}\n          <InlinePopover\n            open={this.state.editingObject}\n            anchorEl={this.state.anchorEl}\n            onRequestClose={this.endObjectEditing}\n          >\n            <ObjectField\n              project={this.props.project}\n              scope={this.props.scope}\n              globalObjectsContainer={this.props.globalObjectsContainer}\n              objectsContainer={this.props.objectsContainer}\n              value={parameterObjects}\n              onChange={text => {\n                jsCodeEvent.setParameterObjects(text);\n                this.props.onUpdate();\n              }}\n              isInline\n            />\n          </InlinePopover>\n        </div>\n      </Measure>\n    );\n  }\n}\n","// @flow\n\ntype WatchedComponent = {\n  +onHeightsChanged: Function => void,\n};\n\n/**\n * Store the height of events and notify a component whenever\n * heights have changed.\n * Needed for EventsTree as we need to tell it when heights have changed\n * so it can recompute the internal row heights of the react-virtualized List.\n */\nexport default class EventHeightsCache {\n  eventHeights = {};\n  updateTimeoutId: ?TimeoutID = null;\n  component: ?WatchedComponent = null;\n\n  constructor(component: WatchedComponent) {\n    this.component = component;\n  }\n\n  _notifyComponent() {\n    if (this.updateTimeoutId) {\n      return; // An update is already scheduled.\n    }\n\n    // Notify the component, on the next tick, that heights have changed\n    this.updateTimeoutId = setTimeout(() => {\n      if (this.component) {\n        this.component.onHeightsChanged(() => (this.updateTimeoutId = null));\n      } else {\n        this.updateTimeoutId = null;\n      }\n    }, 0);\n  }\n\n  setEventHeight(event: gdBaseEvent, height: number) {\n    const cachedHeight = this.eventHeights[event.ptr];\n    if (cachedHeight === undefined || cachedHeight !== height) {\n      // console.log(event.ptr, 'has a new height', height, 'old:', cachedHeight);\n      this._notifyComponent();\n    }\n\n    this.eventHeights[event.ptr] = height;\n  }\n\n  getEventHeight(event: gdBaseEvent): number {\n    return this.eventHeights[event.ptr] || 60;\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../../ResourcesList/ResourceExternalEditor.flow';\nimport InstructionParametersEditor from './InstructionParametersEditor';\nimport InstructionOrObjectSelector, {\n  type TabName,\n} from './InstructionOrObjectSelector';\nimport { Column } from '../../UI/Grid';\nimport {\n  createTree,\n  type InstructionOrExpressionTreeNode,\n} from './InstructionOrExpressionSelector/CreateTree';\nimport {\n  type EnumeratedInstructionOrExpressionMetadata,\n  filterEnumeratedInstructionOrExpressionMetadataByScope,\n} from './InstructionOrExpressionSelector/EnumeratedInstructionOrExpressionMetadata.js';\nimport InstructionOrExpressionSelector from './InstructionOrExpressionSelector';\nimport {\n  enumerateObjectInstructions,\n  enumerateInstructions,\n  getObjectParameterIndex,\n} from './InstructionOrExpressionSelector/EnumerateInstructions';\nimport HelpButton from '../../UI/HelpButton';\nimport Background from '../../UI/Background';\nimport { type EventsScope } from '../EventsScope.flow';\nimport { SelectColumns } from '../../UI/Reponsive/SelectColumns';\nimport {\n  ResponsiveWidthMeasurer,\n  type WidthType,\n} from '../../UI/Reponsive/ResponsiveWidthMeasurer';\nconst gd = global.gd;\n\nconst styles = {\n  fullHeightSelector: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n};\n\ntype StepName =\n  | 'object-or-free-instructions'\n  | 'object-instructions'\n  | 'parameters';\n\ntype Props = {|\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  instruction: gdInstruction,\n  isCondition: boolean,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  style?: Object,\n  isNewInstruction: boolean,\n  onCancel: () => void,\n  onSubmit: () => void,\n  open: boolean,\n  openInstructionOrExpression: (\n    extension: gdPlatformExtension,\n    type: string\n  ) => void,\n|};\ntype State = {|\n  step: StepName,\n  chosenObjectName: ?string,\n  chosenObjectInstructionsInfo: ?Array<EnumeratedInstructionOrExpressionMetadata>,\n  chosenObjectInstructionsInfoTree: ?InstructionOrExpressionTreeNode,\n  currentInstructionOrObjectSelectorTab: TabName,\n|};\n\nconst findInstruction = (\n  list: Array<EnumeratedInstructionOrExpressionMetadata>,\n  instructionType: string\n): ?EnumeratedInstructionOrExpressionMetadata => {\n  return list.find(({ type }) => type === instructionType);\n};\n\nexport default class NewInstructionEditorDialog extends React.Component<\n  Props,\n  State\n> {\n  state = this._getInitialState();\n  _instructionParametersEditor: ?InstructionParametersEditor;\n\n  _getInitialState(): State {\n    const { isNewInstruction, isCondition, instruction } = this.props;\n\n    if (!isNewInstruction) {\n      // Check if the instruction is an object/behavior instruction. If yes\n      // select the object, which is the first parameter of the instruction.\n      const allInstructions = enumerateInstructions(isCondition);\n      const instructionType: string = instruction.getType();\n      const enumeratedInstructionMetadata = findInstruction(\n        allInstructions,\n        instructionType\n      );\n      if (\n        enumeratedInstructionMetadata &&\n        (enumeratedInstructionMetadata.scope.objectMetadata ||\n          enumeratedInstructionMetadata.scope.behaviorMetadata)\n      ) {\n        const objectParameterIndex = getObjectParameterIndex(\n          enumeratedInstructionMetadata.metadata\n        );\n        if (objectParameterIndex !== -1) {\n          return {\n            ...this._getChosenObjectState(\n              instruction.getParameter(objectParameterIndex),\n              false /* Even if the instruction is invalid for the object, show it as it's what we have already */\n            ),\n            step: isNewInstruction\n              ? 'object-or-free-instructions'\n              : 'parameters',\n            currentInstructionOrObjectSelectorTab: 'objects',\n          };\n        }\n      }\n    }\n\n    // We're either making a new instruction or editing a free instruction.\n    return {\n      chosenObjectName: null,\n      chosenObjectInstructionsInfo: null,\n      chosenObjectInstructionsInfoTree: null,\n      step: isNewInstruction ? 'object-or-free-instructions' : 'parameters',\n      currentInstructionOrObjectSelectorTab: isNewInstruction\n        ? 'objects'\n        : 'free-instructions',\n    };\n  }\n\n  _chooseFreeInstruction = (type: string) => {\n    const { instruction } = this.props;\n    instruction.setType(type);\n    this.setState(\n      {\n        chosenObjectName: null,\n        chosenObjectInstructionsInfo: null,\n        chosenObjectInstructionsInfoTree: null,\n      },\n      () => this._stepToParameters()\n    );\n  };\n\n  _getChosenObjectState(\n    objectName: string,\n    discardInstructionTypeIfNotInObjectInstructions: boolean\n  ): State {\n    const {\n      globalObjectsContainer,\n      objectsContainer,\n      isCondition,\n      scope,\n      instruction,\n    } = this.props;\n\n    const chosenObjectInstructionsInfo = filterEnumeratedInstructionOrExpressionMetadataByScope(\n      enumerateObjectInstructions(\n        isCondition,\n        globalObjectsContainer,\n        objectsContainer,\n        objectName\n      ),\n      scope\n    );\n\n    // As we changed to a new object, verify if the instruction is still valid for this object. If not,\n    // discard the chosen instruction - this is to avoid the user creating invalid instructions.\n    if (\n      instruction.getType() &&\n      discardInstructionTypeIfNotInObjectInstructions\n    ) {\n      const instructionMetadata = findInstruction(\n        chosenObjectInstructionsInfo,\n        instruction.getType()\n      );\n      if (!instructionMetadata) {\n        instruction.setType('');\n      }\n    }\n\n    return {\n      step: 'object-instructions',\n      chosenObjectName: objectName,\n      chosenObjectInstructionsInfo,\n      chosenObjectInstructionsInfoTree: createTree(\n        chosenObjectInstructionsInfo\n      ),\n      currentInstructionOrObjectSelectorTab: 'objects',\n    };\n  }\n\n  _chooseObjectInstruction = (type: string) => {\n    const { instruction } = this.props;\n    instruction.setType(type);\n    this._stepToParameters();\n  };\n\n  _stepBackFrom = (origin: StepName, width: WidthType) => {\n    if (origin === 'parameters' && this.state.chosenObjectName) {\n      return this.setState({\n        // \"medium\" displays 2 columns, so \"Back\" button should go back to the first screen.\n        step:\n          width === 'medium'\n            ? 'object-or-free-instructions'\n            : 'object-instructions',\n      });\n    } else {\n      return this.setState({\n        step: 'object-or-free-instructions',\n      });\n    }\n  };\n\n  _stepToParameters = () => {\n    this.setState(\n      {\n        step: 'parameters',\n      },\n      () => {\n        if (this._instructionParametersEditor) {\n          this._instructionParametersEditor.focus();\n        }\n      }\n    );\n  };\n\n  // TODO: This was copied from InstructionParametersEditor. Move this to a helper\n  // or pass it down.\n  _getInstructionMetadata = (): ?gdInstructionMetadata => {\n    const { instruction, isCondition, project } = this.props;\n    const type = instruction.getType();\n    if (!type) return null;\n\n    return isCondition\n      ? gd.MetadataProvider.getConditionMetadata(\n          project.getCurrentPlatform(),\n          type\n        )\n      : gd.MetadataProvider.getActionMetadata(\n          project.getCurrentPlatform(),\n          type\n        );\n  };\n\n  _changeTab = (currentInstructionOrObjectSelectorTab: TabName) =>\n    this.setState({\n      currentInstructionOrObjectSelectorTab,\n    });\n\n  _forceUpdate = () => {\n    this.forceUpdate(); /*Force update to ensure dialog is properly positioned*/\n  };\n\n  _chooseObject = (objectName: string) => {\n    this.setState(this._getChosenObjectState(objectName, true));\n  };\n\n  render() {\n    const {\n      project,\n      scope,\n      globalObjectsContainer,\n      objectsContainer,\n      onCancel,\n      onSubmit,\n      open,\n      instruction,\n      isCondition,\n    } = this.props;\n    const {\n      step,\n      chosenObjectName,\n      chosenObjectInstructionsInfo,\n      chosenObjectInstructionsInfoTree,\n      currentInstructionOrObjectSelectorTab,\n    } = this.state;\n    const instructionType: string = instruction.getType();\n\n    const instructionMetadata = this._getInstructionMetadata();\n    const instructionHelpPage = instructionMetadata\n      ? instructionMetadata.getHelpPath()\n      : undefined;\n\n    const renderInstructionOrObjectSelector = () => (\n      <Background noFullHeight key=\"instruction-or-object-selector\">\n        <InstructionOrObjectSelector\n          style={styles.fullHeightSelector}\n          project={project}\n          currentTab={currentInstructionOrObjectSelectorTab}\n          onChangeTab={this._changeTab}\n          globalObjectsContainer={globalObjectsContainer}\n          objectsContainer={objectsContainer}\n          isCondition={isCondition}\n          chosenInstructionType={\n            !chosenObjectName ? instructionType : undefined\n          }\n          onChooseInstruction={this._chooseFreeInstruction}\n          chosenObjectName={chosenObjectName}\n          onChooseObject={this._chooseObject}\n          focusOnMount={!instructionType}\n          onSearchStartOrReset={this._forceUpdate}\n        />\n      </Background>\n    );\n\n    const renderParameters = () => (\n      <Column expand justifyContent=\"center\" key=\"parameters\">\n        <InstructionParametersEditor\n          project={project}\n          scope={scope}\n          globalObjectsContainer={globalObjectsContainer}\n          objectsContainer={objectsContainer}\n          objectName={chosenObjectName}\n          isCondition={isCondition}\n          instruction={instruction}\n          resourceSources={this.props.resourceSources}\n          onChooseResource={this.props.onChooseResource}\n          resourceExternalEditors={this.props.resourceExternalEditors}\n          openInstructionOrExpression={this.props.openInstructionOrExpression}\n          ref={instructionParametersEditor =>\n            (this._instructionParametersEditor = instructionParametersEditor)\n          }\n          focusOnMount={!!instructionType}\n          noHelpButton\n        />\n      </Column>\n    );\n\n    const renderObjectInstructionSelector = () =>\n      chosenObjectInstructionsInfoTree && chosenObjectInstructionsInfo ? (\n        <InstructionOrExpressionSelector\n          key=\"object-instruction-selector\"\n          style={styles.fullHeightSelector}\n          instructionsInfo={chosenObjectInstructionsInfo}\n          instructionsInfoTree={chosenObjectInstructionsInfoTree}\n          iconSize={24}\n          onChoose={this._chooseObjectInstruction}\n          selectedType={instructionType}\n          useSubheaders\n          focusOnMount={!instructionType}\n          searchPlaceholderObjectName={chosenObjectName}\n          searchPlaceholderIsCondition={isCondition}\n        />\n      ) : null;\n\n    return (\n      <ResponsiveWidthMeasurer>\n        {width => (\n          <Dialog\n            actions={[\n              <FlatButton\n                label={<Trans>Cancel</Trans>}\n                primary={false}\n                onClick={onCancel}\n                key=\"cancel\"\n              />,\n              <FlatButton\n                label={<Trans>Ok</Trans>}\n                primary={true}\n                keyboardFocused={false}\n                disabled={!instructionType}\n                onClick={onSubmit}\n                key=\"ok\"\n              />,\n            ]}\n            secondaryActions={[\n              width !== 'large' && step !== 'object-or-free-instructions' ? (\n                <FlatButton\n                  label={<Trans>Back</Trans>}\n                  primary={false}\n                  onClick={() => this._stepBackFrom(step, width)}\n                  key=\"back\"\n                />\n              ) : null,\n              <HelpButton\n                key=\"help\"\n                helpPagePath={instructionHelpPage || '/events'}\n                label={\n                  !instructionHelpPage ||\n                  (width === 'small' ||\n                    step === 'object-or-free-instructions') ? (\n                    <Trans>Help</Trans>\n                  ) : this.props.isCondition ? (\n                    <Trans>Help for this condition</Trans>\n                  ) : (\n                    <Trans>Help for this action</Trans>\n                  )\n                }\n              />,\n            ]}\n            open={open}\n            onRequestClose={onCancel}\n            maxWidth={false}\n            noMargin\n            flexRowBody\n          >\n            <SelectColumns\n              columnsRenderer={{\n                'instruction-or-object-selector': renderInstructionOrObjectSelector,\n                'object-instruction-selector': renderObjectInstructionSelector,\n                parameters: renderParameters,\n              }}\n              getColumns={() => {\n                if (width === 'large') {\n                  if (chosenObjectName) {\n                    return [\n                      'instruction-or-object-selector',\n                      'object-instruction-selector',\n                      'parameters',\n                    ];\n                  } else {\n                    return ['instruction-or-object-selector', 'parameters'];\n                  }\n                } else if (width === 'medium') {\n                  if (step === 'object-or-free-instructions') {\n                    return ['instruction-or-object-selector'];\n                  } else {\n                    if (chosenObjectName) {\n                      return ['object-instruction-selector', 'parameters'];\n                    } else {\n                      return ['parameters'];\n                    }\n                  }\n                } else {\n                  if (step === 'object-or-free-instructions') {\n                    return ['instruction-or-object-selector'];\n                  } else if (step === 'object-instructions') {\n                    return ['object-instruction-selector'];\n                  } else {\n                    return ['parameters'];\n                  }\n                }\n              }}\n            />\n          </Dialog>\n        )}\n      </ResponsiveWidthMeasurer>\n    );\n  }\n}\n","// @flow\n\n/*\n * Case Sensitive Slug method\n * Inspired by Aaron Stannard module (https://github.com/Aaronontheweb/node-slugs)\n */\nexport const caseSensitiveSlug = (\n  incString: string,\n  separator?: string,\n  preserved?: Array<string>\n): string => {\n  var p = ['.', '=', '-'];\n  var s = '-';\n\n  if (typeof preserved != 'undefined') {\n    p = preserved;\n  }\n\n  if (typeof separator != 'undefined') {\n    s = separator;\n  }\n\n  return incString\n    .replace(/ü/g, 'ue')\n    .replace(/ä/g, 'ae')\n    .replace(/ö/g, 'oe')\n    .replace(/ß/g, 'ss')\n    .replace(new RegExp('[' + p.join('') + ']', 'g'), ' ') //  replace preserved characters with spaces\n    .replace(/-{2,}/g, ' ') //  remove duplicate spaces\n    .replace(/^\\s\\s*/, '')\n    .replace(/\\s\\s*$/, '') //  trim both sides of string\n    .replace(/[^\\w ]/gi, '') //  replaces all non-alphanumeric with empty string\n    .replace(/[ ]/gi, s); //  Convert spaces to dashes\n};\n","// @flow\nimport * as React from 'react';\nimport { Line } from '../Grid';\n\ntype Props<TColumnName> = {|\n  columnsRenderer: { [TColumnName]: () => React.Node },\n  getColumns: () => Array<TColumnName>,\n|};\n\nexport const SelectColumns = (props: Props<string>) => {\n  const columns = props.getColumns();\n  return (\n    <Line noMargin expand>\n      {columns.map(columnName =>\n        props.columnsRenderer[columnName]\n          ? props.columnsRenderer[columnName]()\n          : null\n      )}\n    </Line>\n  );\n};\n","// @flow\nimport * as React from 'react';\n\nexport type WidthType = 'small' | 'medium' | 'large';\n\ntype Props = {|\n  children: (width: WidthType) => React.Node,\n|};\n\n/**\n * Pass the proper size to the children according to the window size.\n * This is only considering the window width.\n */\nexport const ResponsiveWidthMeasurer = ({ children }: Props) => {\n  if (typeof window === 'undefined') {\n    return children('medium');\n  }\n\n  return children(\n    window.innerWidth < 750\n      ? 'small'\n      : window.innerWidth < 1150\n      ? 'medium'\n      : 'large'\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport { Line, Column } from '../../UI/Grid';\nimport ColorPicker, { type RGBColor } from '../../UI/ColorField/ColorPicker';\nimport MiniToolbar, { MiniToolbarText } from '../../UI/MiniToolbar';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\n\nconst gd = global.gd;\n\nconst styles = {\n  sizeTextField: {\n    width: 90,\n  },\n};\n\ntype Props = {|\n  event: gdBaseEvent,\n  onClose: () => void,\n  onApply: () => void,\n|};\n\ntype State = {|\n  textValue: string,\n  textColor: RGBColor,\n  backgroundColor: RGBColor,\n|};\n\nconst white: RGBColor = {\n  r: 255,\n  g: 255,\n  b: 255,\n};\n\nconst black: RGBColor = {\n  r: 0,\n  g: 0,\n  b: 0,\n};\n\nexport const filterEditableWithEventTextDialog = (\n  events: Array<gdBaseEvent>\n): Array<gdBaseEvent> => {\n  return events.filter(event =>\n    [\n      'BuiltinCommonInstructions::Group',\n      'BuiltinCommonInstructions::Comment',\n    ].includes(event.getType())\n  );\n};\n\nexport default class EventTextDialog extends React.Component<Props, State> {\n  _applyChangesOnEvent = () => {\n    const { event } = this.props;\n    const { textValue, textColor, backgroundColor } = this.state;\n    const eventType = event.getType();\n\n    if (eventType === 'BuiltinCommonInstructions::Comment') {\n      //Text value\n      gd.asCommentEvent(event).setComment(textValue);\n\n      //Text color\n      gd.asCommentEvent(event).setTextColor(\n        textColor.r,\n        textColor.g,\n        textColor.b\n      );\n      //Background color\n      gd.asCommentEvent(event).setBackgroundColor(\n        backgroundColor.r,\n        backgroundColor.g,\n        backgroundColor.b\n      );\n    } else if (eventType === 'BuiltinCommonInstructions::Group') {\n      //Text value\n      gd.asGroupEvent(event).setName(textValue);\n\n      //Text color for group not supported in Core, instead GroupEvent.js handle this\n      //Background color\n      gd.asGroupEvent(event).setBackgroundColor(\n        backgroundColor.r,\n        backgroundColor.g,\n        backgroundColor.b\n      );\n      return;\n    }\n  };\n\n  _getInitialStateFromEvent = (): State => {\n    const { event } = this.props;\n    const eventType = event.getType();\n\n    let textValue: string = '';\n    let textColor = black;\n    let backgroundColor = black;\n\n    if (eventType === 'BuiltinCommonInstructions::Comment') {\n      const commentEvent = gd.asCommentEvent(event);\n      textColor = {\n        r: commentEvent.getTextColorRed(),\n        g: commentEvent.getTextColorGreen(),\n        b: commentEvent.getTextColorBlue(),\n      };\n\n      backgroundColor = {\n        r: commentEvent.getBackgroundColorRed(),\n        g: commentEvent.getBackgroundColorGreen(),\n        b: commentEvent.getBackgroundColorBlue(),\n      };\n\n      textValue = gd.asCommentEvent(event).getComment();\n    } else if (eventType === 'BuiltinCommonInstructions::Group') {\n      var groupEvent = gd.asGroupEvent(event);\n      const r = groupEvent.getBackgroundColorR(),\n        g = groupEvent.getBackgroundColorG(),\n        b = groupEvent.getBackgroundColorB();\n\n      // Text color is automatically chosen for groups.\n      textColor = (r + g + b) / 3 > 200 ? black : white;\n\n      backgroundColor = {\n        r: groupEvent.getBackgroundColorR(),\n        g: groupEvent.getBackgroundColorG(),\n        b: groupEvent.getBackgroundColorB(),\n      };\n\n      textValue = gd.asGroupEvent(event).getName();\n    } else {\n      console.error(\n        'Dialog was opened for an unsupported event type: ' + eventType\n      );\n    }\n\n    return {\n      textValue,\n      textColor,\n      backgroundColor,\n    };\n  };\n\n  state = this._getInitialStateFromEvent();\n\n  render() {\n    const { event, onApply, onClose } = this.props;\n    const { textValue, textColor, backgroundColor } = this.state;\n    const eventType = event.getType();\n\n    return (\n      <Dialog\n        title={<Trans>Edit the event text</Trans>}\n        onRequestClose={onClose}\n        open\n        noMargin\n        actions={[\n          <FlatButton\n            key=\"close\"\n            label={<Trans>Cancel</Trans>}\n            primary={false}\n            onClick={onClose}\n          />,\n          <FlatButton\n            key={'Apply'}\n            label={<Trans>Apply</Trans>}\n            primary\n            keyboardFocused\n            onClick={() => {\n              this._applyChangesOnEvent();\n              onApply();\n            }}\n          />,\n        ]}\n      >\n        <Column noMargin>\n          <MiniToolbar>\n            <MiniToolbarText>\n              <Trans>Background color:</Trans>\n            </MiniToolbarText>\n            <ColorPicker\n              style={styles.sizeTextField}\n              disableAlpha\n              color={backgroundColor}\n              onChangeComplete={color => {\n                this.setState({ backgroundColor: color.rgb });\n              }}\n            />\n\n            {eventType === 'BuiltinCommonInstructions::Comment' && (\n              <React.Fragment>\n                <MiniToolbarText>\n                  <Trans>Text color:</Trans>\n                </MiniToolbarText>\n                <ColorPicker\n                  style={styles.sizeTextField}\n                  disableAlpha\n                  color={textColor}\n                  onChangeComplete={color => {\n                    this.setState({ textColor: color.rgb });\n                  }}\n                />\n              </React.Fragment>\n            )}\n          </MiniToolbar>\n          <Line noMargin>\n            <Column expand>\n              <Line>\n                <SemiControlledTextField\n                  commitOnBlur\n                  hintText={t`Enter the text to be displayed`}\n                  fullWidth\n                  multiLine\n                  rows={8}\n                  rowsMax={30}\n                  value={textValue}\n                  onChange={value => {\n                    this.setState({\n                      textValue: value,\n                    });\n                  }}\n                />\n              </Line>\n            </Column>\n          </Line>\n        </Column>\n      </Dialog>\n    );\n  }\n}\n","//@flow\nimport { t } from '@lingui/macro';\nimport React, { PureComponent } from 'react';\nimport { ToolbarGroup } from '../UI/Toolbar';\nimport ToolbarSeparator from '../UI/ToolbarSeparator';\nimport ToolbarIcon from '../UI/ToolbarIcon';\nimport ElementWithMenu from '../UI/Menu/ElementWithMenu';\nimport { type EventMetadata } from './EnumerateEventsMetadata';\n\ntype Props = {|\n  showPreviewButton: boolean,\n  onPreview: () => void,\n  showNetworkPreviewButton: boolean,\n  onNetworkPreview: () => void,\n  onOpenDebugger: () => void,\n  showPreviewButton: boolean,\n  onAddStandardEvent: () => void,\n  onAddSubEvent: () => void,\n  canAddSubEvent: boolean,\n  onAddCommentEvent: () => void,\n  allEventsMetadata: Array<EventMetadata>,\n  onAddEvent: (eventType: string) => void,\n  onRemove: () => void,\n  canRemove: boolean,\n  undo: () => void,\n  canUndo: boolean,\n  redo: () => void,\n  canRedo: boolean,\n  onToggleSearchPanel: () => void,\n  onOpenSettings?: ?() => void,\n|};\n\nexport class Toolbar extends PureComponent<Props> {\n  render() {\n    return (\n      <ToolbarGroup lastChild>\n        {this.props.showPreviewButton && (\n          <ToolbarIcon\n            onClick={this.props.onPreview}\n            src=\"res/ribbon_default/preview32.png\"\n            tooltip={t`Launch a preview of the scene`}\n          />\n        )}\n        {this.props.showNetworkPreviewButton && (\n          <ElementWithMenu\n            element={\n              <ToolbarIcon\n                src=\"res/ribbon_default/bug32.png\"\n                tooltip={t`Advanced preview options (debugger, network preview...)`}\n              />\n            }\n            buildMenuTemplate={() => [\n              {\n                label: 'Network preview (Preview over WiFi/LAN)',\n                click: () => this.props.onNetworkPreview(),\n              },\n              { type: 'separator' },\n              {\n                label: 'Preview with debugger and performance profiler',\n                click: () => this.props.onOpenDebugger(),\n              },\n            ]}\n          />\n        )}\n        {this.props.showPreviewButton && <ToolbarSeparator />}\n        <ToolbarIcon\n          onClick={this.props.onAddStandardEvent}\n          src=\"res/ribbon_default/eventadd32.png\"\n          tooltip={t`Add a new empty event`}\n        />\n        <ToolbarIcon\n          onClick={this.props.onAddSubEvent}\n          src=\"res/ribbon_default/subeventadd32.png\"\n          disabled={!this.props.canAddSubEvent}\n          tooltip={t`Add a sub-event to the selected event`}\n        />\n        <ToolbarIcon\n          onClick={this.props.onAddCommentEvent}\n          src=\"res/ribbon_default/commentaireadd32.png\"\n          tooltip={t`Add a comment`}\n        />\n        <ElementWithMenu\n          element={\n            <ToolbarIcon\n              src=\"res/ribbon_default/add32.png\"\n              tooltip={t`Choose and add an event`}\n            />\n          }\n          buildMenuTemplate={() =>\n            this.props.allEventsMetadata.map(metadata => {\n              return {\n                label: metadata.fullName,\n                click: () => this.props.onAddEvent(metadata.type),\n              };\n            })\n          }\n        />\n        <ToolbarSeparator />\n        <ToolbarIcon\n          onClick={this.props.onRemove}\n          src=\"res/ribbon_default/deleteselected32.png\"\n          disabled={!this.props.canRemove}\n          tooltip={t`Delete the selected event(s)`}\n        />\n        <ToolbarIcon\n          onClick={this.props.undo}\n          src=\"res/ribbon_default/undo32.png\"\n          disabled={!this.props.canUndo}\n          tooltip={t`Undo the last changes`}\n        />\n        <ToolbarIcon\n          onClick={this.props.redo}\n          src=\"res/ribbon_default/redo32.png\"\n          disabled={!this.props.canRedo}\n          tooltip={t`Redo the last changes`}\n        />\n        <ToolbarSeparator />\n        <ToolbarIcon\n          onClick={() => this.props.onToggleSearchPanel()}\n          src=\"res/ribbon_default/search32.png\"\n          tooltip={t`Search in events`}\n          acceleratorString={'CmdOrCtrl+F'}\n        />\n        {this.props.onOpenSettings && <ToolbarSeparator />}\n        {this.props.onOpenSettings && (\n          <ToolbarIcon\n            onClick={this.props.onOpenSettings}\n            src=\"res/ribbon_default/pref32.png\"\n            tooltip={t`Open settings`}\n          />\n        )}\n      </ToolbarGroup>\n    );\n  }\n}\n\nexport default Toolbar;\n","// @flow\nimport { isMacLike } from '../../Utils/Platform';\n\nconst LEFT_KEY = 37;\nconst UP_KEY = 38;\nconst RIGHT_KEY = 39;\nconst DOWN_KEY = 40;\nconst BACKSPACE_KEY = 8;\nconst DELETE_KEY = 46;\nconst EQUAL_KEY = 187;\nconst MINUS_KEY = 189;\nconst NUMPAD_ADD = 107;\nconst NUMPAD_SUBSTRACT = 109;\nconst C_KEY = 67;\nconst F_KEY = 70;\nconst V_KEY = 86;\nconst X_KEY = 88;\nconst Y_KEY = 89;\nconst Z_KEY = 90;\n\ntype ShortcutCallbacks = {|\n  onDelete?: () => void,\n  onMove?: (number, number) => void,\n  onCopy?: () => void,\n  onCut?: () => void,\n  onPaste?: () => void,\n  onUndo?: () => void,\n  onRedo?: () => void,\n  onSearch?: () => void,\n  onZoomOut?: () => void,\n  onZoomIn?: () => void,\n|};\n\ntype ConstructorArgs = {|\n  isActive?: () => boolean,\n  shortcutCallbacks: ShortcutCallbacks,\n|};\n\n/**\n * Listen to keyboard shorcuts and call callbacks according to them.\n * Also store the state of the modifier keys (shift, ctrl, alt, meta) to know\n * if some special operations (multi selection, selection duplication) must\n * be done.\n *\n * `onKeyDown`, `onKeyUp` and other methods handling events (`onDragOver`...)\n * must be binded to the `div` element containing your component. We're not\n * using `document` to avoid issues with shortcuts being detected while a\n * component is not focused.\n */\nexport default class KeyboardShortcuts {\n  _shortcutCallbacks: ShortcutCallbacks;\n  _isActive: ?() => boolean;\n  _shiftPressed = false;\n  _ctrlPressed = false;\n  _altPressed = false;\n  _metaPressed = false;\n\n  constructor({ isActive, shortcutCallbacks }: ConstructorArgs) {\n    this._shortcutCallbacks = shortcutCallbacks;\n    this._isActive = isActive;\n  }\n\n  shouldCloneInstances() {\n    return this._isControlOrCmdPressed();\n  }\n\n  shouldMultiSelect() {\n    return this._shiftPressed;\n  }\n\n  _updateModifiersFromEvent = (evt: KeyboardEvent | DragEvent) => {\n    this._metaPressed = evt.metaKey;\n    this._altPressed = evt.altKey;\n    this._ctrlPressed = evt.ctrlKey;\n    this._shiftPressed = evt.shiftKey;\n  };\n\n  _isControlOrCmdPressed = () => {\n    // On macOS, meta key (Apple/Command key) acts as Control key on Windows/Linux.\n    return this._metaPressed || this._ctrlPressed;\n  };\n\n  onDragOver = (evt: DragEvent) => {\n    this._updateModifiersFromEvent(evt);\n  };\n\n  onKeyUp = (evt: KeyboardEvent) => {\n    this._updateModifiersFromEvent(evt);\n  };\n\n  onKeyDown = (evt: KeyboardEvent) => {\n    this._updateModifiersFromEvent(evt);\n\n    if (this._isActive && !this._isActive()) return;\n\n    const textEditorSelectors = 'textarea, input, [contenteditable=\"true\"]';\n    // $FlowFixMe\n    if (evt.target && evt.target.closest(textEditorSelectors)) {\n      return; // Something else is currently being edited.\n    }\n\n    const {\n      onDelete,\n      onMove,\n      onCopy,\n      onCut,\n      onPaste,\n      onUndo,\n      onRedo,\n      onSearch,\n      onZoomOut,\n      onZoomIn,\n    } = this._shortcutCallbacks;\n\n    if (onMove) {\n      if (evt.which === UP_KEY) {\n        onMove(0, -1);\n      } else if (evt.which === DOWN_KEY) {\n        onMove(0, 1);\n      } else if (evt.which === LEFT_KEY) {\n        onMove(-1, 0);\n      } else if (evt.which === RIGHT_KEY) {\n        onMove(1, 0);\n      }\n    }\n    if (onDelete && (evt.which === BACKSPACE_KEY || evt.which === DELETE_KEY)) {\n      onDelete();\n    }\n    if (onCopy && this._isControlOrCmdPressed() && evt.which === C_KEY) {\n      onCopy();\n    }\n    if (onCut && this._isControlOrCmdPressed() && evt.which === X_KEY) {\n      onCut();\n    }\n    if (onPaste && this._isControlOrCmdPressed() && evt.which === V_KEY) {\n      onPaste();\n    }\n    if (onUndo && this._isControlOrCmdPressed() && evt.which === Z_KEY) {\n      onUndo();\n    }\n    if (\n      onRedo &&\n      this._isControlOrCmdPressed() &&\n      evt.shiftKey &&\n      evt.which === Z_KEY\n    ) {\n      onRedo();\n    }\n    if (onRedo && this._isControlOrCmdPressed() && evt.which === Y_KEY) {\n      onRedo();\n    }\n    if (onSearch && this._isControlOrCmdPressed() && evt.which === F_KEY) {\n      onSearch();\n    }\n\n    if (isMacLike()) {\n      //Mac specific shortcuts -- zooming done differently on windows and linux\n      if (\n        onZoomOut &&\n        this._isControlOrCmdPressed() &&\n        evt.which === MINUS_KEY\n      ) {\n        onZoomOut();\n      }\n      if (\n        onZoomIn &&\n        this._isControlOrCmdPressed() &&\n        evt.which === EQUAL_KEY\n      ) {\n        onZoomIn();\n      }\n      if (onZoomOut && evt.which === NUMPAD_SUBSTRACT) {\n        onZoomOut();\n      }\n      if (onZoomIn && evt.which === NUMPAD_ADD) {\n        onZoomIn();\n      }\n    }\n  };\n}\n","// @flow\nimport * as React from 'react';\nimport InlinePopover from './InlinePopover';\nimport ParameterRenderingService from './ParameterRenderingService';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport { type EventsScope } from './EventsScope.flow';\nconst gd = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n\n  open: boolean,\n  onRequestClose: () => void,\n  onChange: string => void,\n\n  instruction: ?gdInstruction,\n  isCondition: boolean,\n  parameterIndex: number,\n\n  anchorEl: ?any,\n\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n|};\n\ntype State = {|\n  parameterMetadata: ?gdParameterMetadata,\n  instructionMetadata: ?gdInstructionMetadata,\n  ParameterComponent: ?any,\n|};\n\nexport default class InlineParameterEditor extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    parameterMetadata: null,\n    instructionMetadata: null,\n    ParameterComponent: null,\n  };\n\n  _field: ?any;\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      (newProps.open && !this.props.open) ||\n      newProps.instruction !== this.props.instruction\n    ) {\n      this._loadComponentFromInstruction(newProps);\n    }\n  }\n\n  _unload() {\n    this.setState({\n      ParameterComponent: null,\n      parameterMetadata: null,\n      instructionMetadata: null,\n    });\n  }\n\n  _loadComponentFromInstruction(props: Props) {\n    const { project, isCondition, instruction, parameterIndex } = props;\n    if (!instruction) return this._unload();\n\n    const type = instruction.getType();\n    const instructionMetadata = isCondition\n      ? gd.MetadataProvider.getConditionMetadata(\n          project.getCurrentPlatform(),\n          type\n        )\n      : gd.MetadataProvider.getActionMetadata(\n          project.getCurrentPlatform(),\n          type\n        );\n\n    if (parameterIndex >= instructionMetadata.getParametersCount())\n      return this._unload();\n\n    const parameterMetadata = instructionMetadata.getParameter(parameterIndex);\n    const ParameterComponent = ParameterRenderingService.getParameterComponent(\n      parameterMetadata.getType()\n    );\n    this.setState(\n      {\n        ParameterComponent,\n        parameterMetadata,\n        instructionMetadata,\n      },\n      () => {\n        // Give a bit of time for the popover to mount itself\n        setTimeout(() => {\n          if (this._field && this._field.focus) this._field.focus();\n        }, 10);\n      }\n    );\n  }\n\n  render() {\n    if (!this.state.ParameterComponent || !this.props.open) return null;\n    const instruction = this.props.instruction;\n    if (!instruction) return null;\n\n    const { ParameterComponent } = this.state;\n\n    return (\n      <InlinePopover\n        open={this.props.open}\n        anchorEl={this.props.anchorEl}\n        onRequestClose={this.props.onRequestClose}\n      >\n        <ParameterComponent\n          instruction={instruction}\n          instructionMetadata={this.state.instructionMetadata}\n          parameterMetadata={this.state.parameterMetadata}\n          parameterIndex={this.props.parameterIndex}\n          value={instruction.getParameter(this.props.parameterIndex)}\n          onChange={this.props.onChange}\n          project={this.props.project}\n          scope={this.props.scope}\n          globalObjectsContainer={this.props.globalObjectsContainer}\n          objectsContainer={this.props.objectsContainer}\n          key={instruction.ptr}\n          ref={field => (this._field = field)}\n          parameterRenderingService={ParameterRenderingService}\n          isInline\n          resourceSources={this.props.resourceSources}\n          onChooseResource={this.props.onChooseResource}\n          resourceExternalEditors={this.props.resourceExternalEditors}\n        />\n      </InlinePopover>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport PlaceholderMessage from '../UI/PlaceholderMessage';\nimport HelpButton from '../UI/HelpButton';\nimport Text from '../UI/Text';\n\nconst EmptyEventsPlaceholder = () => (\n  <PlaceholderMessage>\n    <Text>\n      <Trans>\n        There are no events here. Events are composed of conditions and actions.\n      </Trans>\n    </Text>\n    <Text>\n      <Trans>\n        Add your first event using the first buttons of the toolbar.\n      </Trans>\n    </Text>\n    <HelpButton helpPagePath=\"/events\" />\n  </PlaceholderMessage>\n);\n\nexport default EmptyEventsPlaceholder;\n","//@flow\nconst gd = global.gd;\n\nexport const ensureSingleOnceInstructions = (\n  instructionsList: gdInstructionsList\n) => {\n  let hasEndingOnceInstruction = false;\n  let hasInvalidOnce = false;\n  for (let i = instructionsList.size() - 1; i >= 0; --i) {\n    const instruction = instructionsList.get(i);\n    if (i === instructionsList.size() - 1) {\n      if (instruction.getType() === 'BuiltinCommonInstructions::Once') {\n        hasEndingOnceInstruction = true;\n      }\n    } else {\n      if (instruction.getType() === 'BuiltinCommonInstructions::Once') {\n        instructionsList.removeAt(i);\n        hasInvalidOnce = true;\n      }\n    }\n  }\n\n  if (hasInvalidOnce && !hasEndingOnceInstruction) {\n    const onceInstruction = new gd.Instruction();\n    onceInstruction.setType('BuiltinCommonInstructions::Once');\n    instructionsList.insert(onceInstruction, instructionsList.size());\n    onceInstruction.delete();\n  }\n\n  return hasInvalidOnce;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport Text from '../UI/Text';\n\nexport type EventsContextResult = {|\n  objectsNames: Array<string>,\n  objectOrGroupNames: Array<string>,\n  objectOrGroupBehaviorNames: {\n    [string]: Array<string>,\n  },\n|};\n\n// Store in a EventsContextResult the content of a gd.EventsContext.\n// In theory not necessary, but easier than storing,\n// passing around, and properly delete a gd.EventsContext.\nexport const toEventsContextResult = (\n  eventsContext: gdEventsContext\n): EventsContextResult => {\n  const objectsNames = eventsContext\n    .getObjectNames()\n    .toNewVectorString()\n    .toJSArray();\n  const objectOrGroupNames = eventsContext\n    .getReferencedObjectOrGroupNames()\n    .toNewVectorString()\n    .toJSArray();\n\n  const objectOrGroupBehaviorNames = {};\n  objectOrGroupNames.forEach(objectOrGroupName => {\n    const behaviorNames = eventsContext\n      .getBehaviorNamesOfObjectOrGroup(objectOrGroupName)\n      .toNewVectorString()\n      .toJSArray();\n\n    if (behaviorNames.length) {\n      objectOrGroupBehaviorNames[objectOrGroupName] = behaviorNames;\n    }\n  });\n\n  return {\n    objectsNames,\n    objectOrGroupNames,\n    objectOrGroupBehaviorNames,\n  };\n};\n\ntype Props = {|\n  onClose: () => void,\n  eventsContextResult: EventsContextResult,\n|};\n\nexport default class EventsContextAnalyzerDialog extends React.Component<\n  Props,\n  {}\n> {\n  render() {\n    const { onClose, eventsContextResult } = this.props;\n    const actions = [\n      <FlatButton\n        key=\"close\"\n        label={<Trans>Close</Trans>}\n        primary={true}\n        onClick={this.props.onClose}\n      />,\n    ];\n\n    return (\n      <Dialog actions={actions} open onRequestClose={onClose}>\n        <Text>\n          <Trans>\n            Objects or groups being directly referenced in the events:{' '}\n            {eventsContextResult.objectOrGroupNames.join(', ')}\n          </Trans>\n        </Text>\n        <Text>\n          <Trans>\n            All objects potentially used in events:{' '}\n            {eventsContextResult.objectsNames.join(', ')}\n          </Trans>\n        </Text>\n        <Text>\n          <Trans>All behaviors being directly referenced in the events:</Trans>{' '}\n          {Object.keys(eventsContextResult.objectOrGroupBehaviorNames).map(\n            objectOrGroupName => {\n              return (\n                <Trans key={objectOrGroupName}>\n                  Behaviors of {objectOrGroupName}:{' '}\n                  {eventsContextResult.objectOrGroupBehaviorNames[\n                    objectOrGroupName\n                  ].join(', ')}\n                  ;{' '}\n                </Trans>\n              );\n            }\n          )}\n        </Text>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport React, { PureComponent } from 'react';\nimport Background from '../UI/Background';\nimport TextField from '../UI/TextField';\nimport { Line, Column, Spacer } from '../UI/Grid';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport IconButton from '../UI/IconButton';\nimport InlineCheckbox from '../UI/InlineCheckbox';\nimport Text from '../UI/Text';\nimport {\n  type SearchInEventsInputs,\n  type ReplaceInEventsInputs,\n} from './EventsSearcher';\nimport RaisedButton from '../UI/RaisedButton';\n\ntype Props = {|\n  onSearchInEvents: SearchInEventsInputs => void,\n  onReplaceInEvents: ReplaceInEventsInputs => void,\n  resultsCount: ?number,\n  hasEventSelected: boolean,\n  onGoToPreviousSearchResult: () => ?gdBaseEvent,\n  onGoToNextSearchResult: () => ?gdBaseEvent,\n|};\ntype State = {|\n  searchText: string,\n  replaceText: string,\n  matchCase: boolean,\n  searchInActions: boolean,\n  searchInConditions: boolean,\n  searchInSelection: boolean,\n|};\n\nexport default class SearchPanel extends PureComponent<Props, State> {\n  searchTextField: ?TextField;\n  state = {\n    searchText: '',\n    replaceText: '',\n    matchCase: false,\n    searchInActions: true,\n    searchInConditions: true,\n    searchInSelection: false,\n  };\n\n  focus = () => {\n    if (this.searchTextField) {\n      this.searchTextField.focus();\n    }\n  };\n\n  launchSearch = () => {\n    const {\n      searchText,\n      searchInSelection,\n      matchCase,\n      searchInActions,\n      searchInConditions,\n    } = this.state;\n    this.props.onSearchInEvents({\n      searchInSelection,\n      searchText,\n      matchCase,\n      searchInActions,\n      searchInConditions,\n    });\n  };\n\n  launchReplace = () => {\n    const {\n      searchText,\n      replaceText,\n      searchInSelection,\n      matchCase,\n      searchInActions,\n      searchInConditions,\n    } = this.state;\n\n    this.launchSearch();\n\n    this.props.onReplaceInEvents({\n      searchInSelection,\n      searchText,\n      replaceText,\n      matchCase,\n      searchInActions,\n      searchInConditions,\n    });\n  };\n\n  render() {\n    const {\n      resultsCount,\n      hasEventSelected,\n      onGoToPreviousSearchResult,\n      onGoToNextSearchResult,\n    } = this.props;\n    const { searchText, replaceText, searchInSelection } = this.state;\n\n    return (\n      <Background noFullHeight noExpand>\n        <Column>\n          <Line alignItems=\"baseline\" noMargin>\n            <TextField\n              margin=\"dense\"\n              ref={_searchTextField =>\n                (this.searchTextField = _searchTextField)\n              }\n              hintText={t`Text to search in parameters`}\n              onChange={(e, searchText) => this.setState({ searchText })}\n              value={searchText}\n              fullWidth\n            />\n            <Spacer />\n            <RaisedButton\n              disabled={!searchText}\n              primary\n              label={<Trans>Search</Trans>}\n              onClick={this.launchSearch}\n            />\n          </Line>\n          <Line alignItems=\"baseline\" noMargin>\n            <TextField\n              margin=\"dense\"\n              hintText={t`Text to replace in parameters`}\n              onChange={(e, replaceText) => this.setState({ replaceText })}\n              value={replaceText}\n              fullWidth\n            />\n            <Spacer />\n            <RaisedButton\n              disabled={\n                !replaceText ||\n                !searchText ||\n                (!hasEventSelected && searchInSelection)\n              }\n              label={<Trans>Replace</Trans>}\n              onClick={this.launchReplace}\n            />\n          </Line>\n          <Line noMargin alignItems=\"center\" justifyContent=\"space-between\">\n            <Line noMargin alignItems=\"center\">\n              <InlineCheckbox\n                label={<Trans>Case insensitive</Trans>}\n                checked={!this.state.matchCase}\n                onCheck={(e, checked) => this.setState({ matchCase: !checked })}\n              />\n              <Text>\n                <Trans>Filter by</Trans>\n              </Text>\n              <Spacer />\n              <InlineCheckbox\n                label={<Trans>Conditions</Trans>}\n                checked={this.state.searchInConditions}\n                onCheck={(e, checked) =>\n                  this.setState({ searchInConditions: checked })\n                }\n              />\n              <InlineCheckbox\n                label={<Trans>Actions</Trans>}\n                checked={this.state.searchInActions}\n                onCheck={(e, checked) =>\n                  this.setState({ searchInActions: checked })\n                }\n              />\n              {/* <InlineCheckbox //TODO: Implement search/replace in selection\n                label={<Trans>Replace in selection</Trans>}\n                checked={this.state.searchInSelection}\n                onCheck={(e, checked) =>\n                  this.setState({ searchInSelection: checked })}\n              /> */}\n            </Line>\n            <Line noMargin alignItems=\"center\">\n              <Text>\n                {resultsCount === null || resultsCount === undefined\n                  ? ''\n                  : resultsCount !== 0\n                  ? `${resultsCount} results`\n                  : `No results`}\n              </Text>\n              <IconButton\n                disabled={!resultsCount}\n                onClick={() => {\n                  onGoToPreviousSearchResult();\n                }}\n              >\n                <ChevronLeft />\n              </IconButton>\n              <IconButton\n                disabled={!resultsCount}\n                onClick={() => {\n                  onGoToNextSearchResult();\n                }}\n              >\n                <ChevronRight />\n              </IconButton>\n            </Line>\n          </Line>\n        </Column>\n      </Background>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { type SelectionState } from './SelectionHandler';\nimport { mapFor } from '../Utils/MapFor';\nimport uniqBy from 'lodash/uniqBy';\nconst gd = global.gd;\n\nexport type SearchInEventsInputs = {|\n  searchInSelection: boolean,\n  searchText: string,\n  matchCase: boolean,\n  searchInConditions: boolean,\n  searchInActions: boolean,\n|};\n\nexport type ReplaceInEventsInputs = {|\n  searchInSelection: boolean,\n  searchText: string,\n  replaceText: ?string,\n  matchCase: boolean,\n  searchInConditions: boolean,\n  searchInActions: boolean,\n|};\n\ntype State = {|\n  eventsSearchResults: ?gdVectorEventsSearchResult,\n  searchFocusOffset: ?number,\n|};\n\ntype Props = {|\n  globalObjectsContainer: gdProject,\n  objectsContainer: gdLayout,\n  events: gdEventsList,\n  selection: SelectionState,\n  children: (props: {|\n    eventsSearchResultEvents: ?Array<gdBaseEvent>,\n    searchFocusOffset: ?number,\n    searchInEvents: (SearchInEventsInputs, cb: () => void) => void,\n    replaceInEvents: ReplaceInEventsInputs => void,\n    goToNextSearchResult: () => ?gdBaseEvent,\n    goToPreviousSearchResult: () => ?gdBaseEvent,\n  |}) => React.Node,\n|};\n\n/**\n * Component allowing to do search in events and pass the results\n * to its children components, as well as methods to browse the results.\n */\nexport default class EventsSearcher extends React.Component<Props, State> {\n  state = {\n    eventsSearchResults: null, // The list of results\n    searchFocusOffset: null,\n  };\n\n  // The list containing the raw events results. Should be derived from this.state.eventsSearchResults using\n  // this._updateListOfResultEvents before being used.\n  _resultEvents: ?Array<gdBaseEvent> = null;\n\n  componentWillUnmount() {\n    if (this.state.eventsSearchResults) this.state.eventsSearchResults.delete();\n  }\n\n  reset() {\n    if (this.state.eventsSearchResults) this.state.eventsSearchResults.delete();\n\n    this._resultEvents = null;\n    this.setState({\n      eventsSearchResults: null,\n      searchFocusOffset: null,\n    });\n  }\n\n  _doReplaceInEvents = ({\n    searchInSelection,\n    searchText,\n    replaceText,\n    matchCase,\n    searchInConditions,\n    searchInActions,\n  }: ReplaceInEventsInputs) => {\n    const { globalObjectsContainer, objectsContainer, events } = this.props;\n\n    if (searchInSelection) {\n      // Replace in selection is a bit tricky to implement as it requires to have a list\n      // of events (gd.EventsList) pointing to the same events. Need some workaround/helper\n      // function to be done in C++.\n      console.error('Replace in selection is not implemented yet');\n    }\n\n    gd.EventsRefactorer.replaceStringInEvents(\n      globalObjectsContainer,\n      objectsContainer,\n      events,\n      searchText,\n      replaceText,\n      matchCase,\n      searchInConditions,\n      searchInActions\n    );\n  };\n\n  _doSearchInEvents = (\n    {\n      searchInSelection,\n      searchText,\n      matchCase,\n      searchInConditions,\n      searchInActions,\n    }: SearchInEventsInputs,\n    cb: () => void\n  ) => {\n    const { globalObjectsContainer, objectsContainer, events } = this.props;\n\n    if (searchInSelection) {\n      // Search in selection is a bit tricky to implement as it requires to have a list\n      // of events (gd.EventsList) pointing to the same events. Need some workaround/helper\n      // function to be done in C++.\n      console.error('Search in selection is not implemented yet');\n    }\n\n    const newEventsSearchResults = gd.EventsRefactorer.searchInEvents(\n      globalObjectsContainer,\n      objectsContainer,\n      events,\n      searchText,\n      matchCase,\n      searchInConditions,\n      searchInActions\n    );\n\n    if (this.state.eventsSearchResults) {\n      this.state.eventsSearchResults.delete();\n    }\n    this.setState(\n      {\n        eventsSearchResults: newEventsSearchResults.clone(),\n        searchFocusOffset: null,\n      },\n      () => {\n        this._updateListOfResultEvents();\n        cb();\n      }\n    );\n  };\n\n  _updateListOfResultEvents = () => {\n    const { eventsSearchResults } = this.state;\n    if (!eventsSearchResults) {\n      this._resultEvents = null;\n      return;\n    }\n\n    const resultEventsWithDuplicates = mapFor(\n      0,\n      eventsSearchResults.size(),\n      i => {\n        const eventsSearchResult = eventsSearchResults.at(i);\n        return eventsSearchResult.isEventValid()\n          ? eventsSearchResult.getEvent()\n          : null;\n      }\n    ).filter(Boolean);\n\n    // Store a list of unique events, because browsing for results in the events\n    // tree is made event by event.\n    this._resultEvents = uniqBy(resultEventsWithDuplicates, event => event.ptr);\n  };\n\n  _goToSearchResults = (step: number): ?gdBaseEvent => {\n    this._updateListOfResultEvents();\n    if (!this._resultEvents || this._resultEvents.length === 0) {\n      this.setState({ searchFocusOffset: null });\n      return null;\n    }\n\n    let newSearchFocusOffset =\n      this.state.searchFocusOffset === null\n        ? 0\n        : ((this.state.searchFocusOffset || 0) + step) %\n          this._resultEvents.length;\n    if (newSearchFocusOffset < 0)\n      newSearchFocusOffset += this._resultEvents.length;\n\n    const event = this._resultEvents[newSearchFocusOffset];\n    setTimeout(\n      // Change the offset on next tick to give a chance to children to unfold events before focusing it.\n      () => this.setState({ searchFocusOffset: newSearchFocusOffset }),\n      0\n    );\n    return event;\n  };\n\n  _goToPreviousSearchResult = (): ?gdBaseEvent => {\n    return this._goToSearchResults(-1);\n  };\n\n  _goToNextSearchResult = (): ?gdBaseEvent => {\n    return this._goToSearchResults(+1);\n  };\n\n  render() {\n    return this.props.children({\n      eventsSearchResultEvents: this._resultEvents,\n      searchFocusOffset: this.state.searchFocusOffset,\n      searchInEvents: this._doSearchInEvents,\n      replaceInEvents: this._doReplaceInEvents,\n      goToNextSearchResult: this._goToNextSearchResult,\n      goToPreviousSearchResult: this._goToPreviousSearchResult,\n    });\n  }\n}\n","const gd = global.gd;\n\nexport const containsSubInstructions = (\n  instruction: gdInstruction,\n  instructionsList: gdInstructionsList\n) => {\n  const subInstructionsList = instruction.getSubInstructions();\n  if (gd.compare(subInstructionsList, instructionsList)) return true;\n\n  for (let i = 0; i < subInstructionsList.size(); ++i) {\n    const subInstruction = subInstructionsList.get(i);\n    if (containsSubInstructions(subInstruction, instructionsList)) return true;\n  }\n\n  return false;\n};\n","// @flow\n\nimport flatten from 'lodash/flatten';\nimport { mapFor } from '../Utils/MapFor';\nconst gd = global.gd;\n\nexport type EventMetadata = {|\n  type: string,\n  fullName: string,\n  description: string,\n|};\n\nexport const enumerateEventsMetadata = (): Array<EventMetadata> => {\n  const allExtensions = gd\n    .asPlatform(gd.JsPlatform.get())\n    .getAllPlatformExtensions();\n\n  return flatten(\n    mapFor(0, allExtensions.size(), i => {\n      const extension = allExtensions.get(i);\n      const extensionEvents = extension.getAllEvents();\n\n      return extensionEvents\n        .keys()\n        .toJSArray()\n        .map(type => {\n          const metadata = extensionEvents.get(type);\n          return {\n            type,\n            fullName: metadata.getFullName(),\n            description: metadata.getDescription(),\n          };\n        });\n    })\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport { enumerateEventsFunctionsExtensions } from '../../ProjectManager/EnumerateProjectItems';\nimport { Line, Column, Spacer } from '../../UI/Grid';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\nimport {\n  setupFunctionFromEvents,\n  canCreateEventsFunction,\n  functionHasLotsOfParameters,\n  validateExtensionNameUniqueness,\n  validateExtensionName,\n  validateEventsFunctionNameUniqueness,\n  validateEventsFunctionName,\n} from '.';\nimport AlertMessage from '../../UI/AlertMessage';\nimport DismissableAlertMessage from '../../UI/DismissableAlertMessage';\nimport EventsFunctionParametersEditor from '../../EventsFunctionsExtensionEditor/EventsFunctionConfigurationEditor/EventsFunctionParametersEditor';\nimport EventsFunctionPropertiesEditor from '../../EventsFunctionsExtensionEditor/EventsFunctionConfigurationEditor/EventsFunctionPropertiesEditor';\nimport HelpButton from '../../UI/HelpButton';\nconst gd = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  serializedEvents: Object,\n  onClose: () => void,\n  onCreate: (extensionName: string, eventsFunction: gdEventsFunction) => void,\n|};\n\ntype State = {|\n  eventsFunction: ?gdEventsFunction,\n  extensionName: string,\n  createNewExtension: boolean,\n|};\n\nconst CREATE_NEW_EXTENSION_PLACEHOLDER = '<create a new extension>';\n\nexport default class EventsFunctionExtractorDialog extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    eventsFunction: null,\n    extensionName: '',\n    createNewExtension: false,\n  };\n\n  componentDidMount() {\n    const {\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      serializedEvents,\n    } = this.props;\n\n    // Set up the function\n    const eventsFunction = new gd.EventsFunction();\n    setupFunctionFromEvents({\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      serializedEvents,\n      eventsFunction,\n    });\n    this.setState({\n      eventsFunction,\n    });\n\n    // Prepopulate the form\n    const eventsFunctionsExtensions = enumerateEventsFunctionsExtensions(\n      project\n    );\n    if (eventsFunctionsExtensions.length === 0) {\n      this.setState({\n        createNewExtension: true,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const { eventsFunction } = this.state;\n    if (eventsFunction) eventsFunction.delete();\n  }\n\n  render() {\n    const { project, onClose, onCreate } = this.props;\n    const { eventsFunction, extensionName, createNewExtension } = this.state;\n    if (!eventsFunction) return null;\n\n    const eventsFunctionsExtensions = enumerateEventsFunctionsExtensions(\n      project\n    );\n    const hasLotsOfParameters = functionHasLotsOfParameters(eventsFunction);\n\n    return (\n      <Dialog\n        title={<Trans>Extract the events in a function</Trans>}\n        secondaryActions={\n          <HelpButton helpPagePath=\"/events/functions/extract-events\" />\n        }\n        actions={[\n          <FlatButton\n            key=\"cancel\"\n            label={<Trans>Cancel</Trans>}\n            onClick={onClose}\n          />,\n          <FlatButton\n            key=\"create\"\n            label={<Trans>Create</Trans>}\n            primary\n            disabled={\n              !canCreateEventsFunction(project, extensionName, eventsFunction)\n            }\n            onClick={() => onCreate(extensionName, eventsFunction)}\n          />,\n        ]}\n        open\n        onRequestClose={onClose}\n        noMargin\n      >\n        <Column noMargin>\n          <Column>\n            <DismissableAlertMessage\n              identifier=\"function-extractor-explanation\"\n              kind=\"info\"\n            >\n              After creating a function, it will be usable in the events sheet.\n              Functions are grouped by extensions. Choose, or enter the name of\n              a new extension, and a function name, then configure the function\n              and its parameters.\n            </DismissableAlertMessage>\n            <Line noMargin>\n              <Column noMargin expand>\n                <SelectField\n                  floatingLabelText={\n                    <Trans>Extension (storing the function)</Trans>\n                  }\n                  value={\n                    createNewExtension\n                      ? CREATE_NEW_EXTENSION_PLACEHOLDER\n                      : extensionName\n                  }\n                  onChange={(e, i, extensionName) => {\n                    if (extensionName === CREATE_NEW_EXTENSION_PLACEHOLDER) {\n                      this.setState({\n                        createNewExtension: true,\n                        extensionName: '',\n                      });\n                    } else {\n                      this.setState({\n                        createNewExtension: false,\n                        extensionName,\n                      });\n                    }\n                  }}\n                  fullWidth\n                >\n                  {eventsFunctionsExtensions.map(eventsFunctionsExtension => (\n                    <SelectOption\n                      key={eventsFunctionsExtension.getName()}\n                      value={eventsFunctionsExtension.getName()}\n                      primaryText={eventsFunctionsExtension.getFullName()}\n                    />\n                  ))}\n                  <SelectOption\n                    value={CREATE_NEW_EXTENSION_PLACEHOLDER}\n                    primaryText={t`<Create a New Extension>`}\n                  />\n                </SelectField>\n              </Column>\n              {createNewExtension ? (\n                <Column noMargin expand>\n                  <SemiControlledTextField\n                    commitOnBlur\n                    value={extensionName}\n                    floatingLabelText={<Trans>New extension name</Trans>}\n                    onChange={(extensionName: string) =>\n                      this.setState({ extensionName })\n                    }\n                    fullWidth\n                    errorText={\n                      !validateExtensionNameUniqueness(\n                        project,\n                        extensionName\n                      ) ? (\n                        <Trans>\n                          This name is already taken by another extension.\n                        </Trans>\n                      ) : !validateExtensionName(extensionName) ? (\n                        <Trans>\n                          This name is not valid. Only use alphanumeric\n                          characters (0-9, a-z) and underscores.\n                        </Trans>\n                      ) : (\n                        undefined\n                      )\n                    }\n                  />\n                </Column>\n              ) : null}\n            </Line>\n            <Line>\n              <SemiControlledTextField\n                commitOnBlur\n                value={eventsFunction.getName()}\n                floatingLabelText={<Trans>Function name</Trans>}\n                onChange={(functionName: string) => {\n                  eventsFunction.setName(functionName);\n                  this.forceUpdate();\n                }}\n                fullWidth\n                errorText={\n                  !validateEventsFunctionNameUniqueness(\n                    project,\n                    extensionName,\n                    eventsFunction\n                  ) ? (\n                    <Trans>\n                      This name is already taken by another function. Choose\n                      another name.\n                    </Trans>\n                  ) : !validateEventsFunctionName(eventsFunction.getName()) ? (\n                    <Trans>\n                      This name is not valid. Only use alphanumeric characters\n                      (0-9, a-z) and underscores.\n                    </Trans>\n                  ) : (\n                    undefined\n                  )\n                }\n              />\n            </Line>\n            {hasLotsOfParameters ? (\n              <Line>\n                <AlertMessage kind=\"warning\">\n                  <Trans>\n                    This function will have a lot of parameters. Consider\n                    creating groups or functions for a smaller set of objects so\n                    that the function is easier to reuse.\n                  </Trans>\n                </AlertMessage>\n              </Line>\n            ) : null}\n          </Column>\n          <EventsFunctionPropertiesEditor\n            eventsFunction={eventsFunction}\n            eventsBasedBehavior={null}\n            onConfigurationUpdated={() => {\n              // Force re-running logic to see if Create button is disabled.\n              this.forceUpdate();\n            }}\n            freezeEventsFunctionType\n          />\n          <Spacer />\n          <EventsFunctionParametersEditor\n            project={project}\n            eventsFunction={eventsFunction}\n            eventsBasedBehavior={null}\n            onParametersUpdated={() => {\n              // Force the dialog to adapt its size\n              this.forceUpdate();\n            }}\n            freezeParameters\n          />\n        </Column>\n      </Dialog>\n    );\n  }\n}\n","// @flow\n\nexport default function getObjectGroupByName(\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  objectGroupName: string\n): ?gdObjectGroup {\n  if (objectsContainer.getObjectGroups().has(objectGroupName)) {\n    return objectsContainer.getObjectGroups().get(objectGroupName);\n  } else if (globalObjectsContainer.getObjectGroups().has(objectGroupName)) {\n    return globalObjectsContainer.getObjectGroups().get(objectGroupName);\n  }\n\n  return null;\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport {\n  type EnumeratedBehaviorMetadata,\n  enumerateBehaviorsMetadata,\n} from '../BehaviorsEditor/EnumerateBehaviorsMetadata';\n\ntype Props = {|\n  project: gdProject,\n  value: string,\n  onChange: string => void,\n  disabled?: boolean,\n|};\ntype State = {|\n  behaviorMetadata: Array<EnumeratedBehaviorMetadata>,\n|};\n\nexport default class BehaviorTypeSelector extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    behaviorMetadata: enumerateBehaviorsMetadata(\n      this.props.project.getCurrentPlatform(),\n      this.props.project\n    ),\n  };\n\n  render() {\n    const { disabled, value, onChange } = this.props;\n    const { behaviorMetadata } = this.state;\n\n    // If the behavior type is not in the list, we'll still\n    // add a menu item for it so that the value is displayed\n    // on screen.\n    const valueIsListed = !!behaviorMetadata.find(({ type }) => type === value);\n\n    return (\n      <SelectField\n        floatingLabelText={<Trans>Behavior type</Trans>}\n        value={value}\n        onChange={(e, i, value: string) => {\n          onChange(value);\n        }}\n        disabled={disabled}\n        fullWidth\n      >\n        {behaviorMetadata.map((metadata: EnumeratedBehaviorMetadata) => (\n          <SelectOption\n            key={metadata.type}\n            value={metadata.type}\n            primaryText={metadata.fullName}\n          />\n        ))}\n        {!valueIsListed && value && (\n          <SelectOption value={value} primaryText={value} />\n        )}\n      </SelectField>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport * as React from 'react';\nimport EventsSheet from '../EventsSheet';\nimport EditorMosaic from '../UI/EditorMosaic';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport EventsFunctionConfigurationEditor from './EventsFunctionConfigurationEditor';\nimport EventsFunctionsList from '../EventsFunctionsList';\nimport EventsBasedBehaviorsList from '../EventsBasedBehaviorsList';\nimport Background from '../UI/Background';\nimport OptionsEditorDialog from './OptionsEditorDialog';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport EventsBasedBehaviorEditorDialog from '../EventsBasedBehaviorEditor/EventsBasedBehaviorEditorDialog';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport BehaviorMethodSelectorDialog from './BehaviorMethodSelectorDialog';\nimport { isBehaviorLifecycleFunction } from '../EventsFunctionsExtensionsLoader/MetadataDeclarationHelpers';\nimport FlatButton from '../UI/FlatButton';\nimport { Line } from '../UI/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport { ResponsiveWindowMeasurer } from '../UI/Reponsive/ResponsiveWindowMeasurer';\nimport EditorNavigator from '../UI/EditorMosaic/EditorNavigator';\nimport ChooseEventsFunctionsExtensionEditor from './ChooseEventsFunctionsExtensionEditor';\nimport Check from '@material-ui/icons/Check';\nimport Tune from '@material-ui/icons/Tune';\nconst gd = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  setToolbar: (?React.Node) => void,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  openInstructionOrExpression: (\n    extension: gdPlatformExtension,\n    type: string\n  ) => void,\n  onCreateEventsFunction: (\n    extensionName: string,\n    eventsFunction: gdEventsFunction\n  ) => void,\n  onBehaviorEdited?: () => void,\n  initiallyFocusedFunctionName: ?string,\n  initiallyFocusedBehaviorName: ?string,\n|};\n\ntype State = {|\n  selectedEventsFunction: ?gdEventsFunction,\n  selectedEventsBasedBehavior: ?gdEventsBasedBehavior,\n  editedEventsBasedBehavior: ?gdEventsBasedBehavior,\n  editOptionsDialogOpen: boolean,\n  behaviorMethodSelectorDialogOpen: boolean,\n  onAddEventsFunctionCb: ?(doAdd: boolean, name: ?string) => void,\n|};\n\nexport default class EventsFunctionsExtensionEditor extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    selectedEventsFunction: null,\n    selectedEventsBasedBehavior: null,\n    editedEventsBasedBehavior: null,\n    editOptionsDialogOpen: false,\n    behaviorMethodSelectorDialogOpen: false,\n    onAddEventsFunctionCb: null,\n  };\n  editor: ?EventsSheet;\n  _editorMosaic: ?EditorMosaic;\n  // $FlowFixMe\n  _editorNavigator: ?EditorNavigator;\n  _globalObjectsContainer: ?gdObjectsContainer;\n  _objectsContainer: ?gdObjectsContainer;\n\n  componentDidMount() {\n    if (this.props.initiallyFocusedFunctionName) {\n      this.selectEventsFunctionByName(\n        this.props.initiallyFocusedFunctionName,\n        this.props.initiallyFocusedBehaviorName\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._globalObjectsContainer) this._globalObjectsContainer.delete();\n    if (this._objectsContainer) this._objectsContainer.delete();\n  }\n\n  _loadEventsFunctionFrom = (\n    project: gdProject,\n    eventsFunction: gdEventsFunction\n  ) => {\n    // Create an empty \"context\" of objects.\n    // Avoid recreating containers if they were already created, so that\n    // we keep the same objects in memory and avoid remounting components\n    // (like ObjectGroupsList) because objects \"ptr\" changed.\n    if (!this._globalObjectsContainer) {\n      this._globalObjectsContainer = new gd.ObjectsContainer();\n    }\n\n    if (!this._objectsContainer) {\n      this._objectsContainer = new gd.ObjectsContainer();\n    }\n\n    // Initialize this \"context\" of objects with the function\n    // (as done during code generation).\n    gd.EventsFunctionTools.eventsFunctionToObjectsContainer(\n      project,\n      eventsFunction,\n      this._globalObjectsContainer,\n      this._objectsContainer\n    );\n  };\n\n  updateToolbar = () => {\n    if (this.editor) {\n      this.editor.updateToolbar();\n    } else {\n      this.props.setToolbar(<div />);\n    }\n  };\n\n  selectEventsFunctionByName = (\n    functionName: string,\n    behaviorName: ?string\n  ) => {\n    const { eventsFunctionsExtension } = this.props;\n\n    if (behaviorName) {\n      // Behavior function\n      const eventsBasedBehaviors = eventsFunctionsExtension.getEventsBasedBehaviors();\n      if (eventsBasedBehaviors.has(behaviorName)) {\n        const eventsBasedBehavior = eventsBasedBehaviors.get(behaviorName);\n        const behaviorEventsFunctions = eventsBasedBehavior.getEventsFunctions();\n        if (behaviorEventsFunctions.hasEventsFunctionNamed(functionName)) {\n          this._selectEventsFunction(\n            behaviorEventsFunctions.getEventsFunction(functionName),\n            eventsBasedBehavior\n          );\n        }\n      }\n    } else {\n      // Free function\n      if (eventsFunctionsExtension.hasEventsFunctionNamed(functionName)) {\n        this._selectEventsFunction(\n          eventsFunctionsExtension.getEventsFunction(functionName),\n          null\n        );\n      }\n    }\n  };\n\n  _selectEventsFunction = (\n    selectedEventsFunction: ?gdEventsFunction,\n    selectedEventsBasedBehavior: ?gdEventsBasedBehavior\n  ) => {\n    if (!selectedEventsFunction) {\n      this.setState(\n        {\n          selectedEventsFunction: null,\n          selectedEventsBasedBehavior,\n        },\n        () => this.updateToolbar()\n      );\n      return;\n    }\n\n    this._loadEventsFunctionFrom(this.props.project, selectedEventsFunction);\n    this.setState(\n      {\n        selectedEventsFunction,\n        selectedEventsBasedBehavior,\n      },\n      () => {\n        this.updateToolbar();\n\n        if (this._editorNavigator) {\n          // Open the parameters of the function if it's a new, empty function.\n          if (\n            selectedEventsFunction &&\n            !selectedEventsFunction.getEvents().getEventsCount()\n          ) {\n            this._editorNavigator.openEditor('parameters');\n          } else {\n            this._editorNavigator.openEditor('events-sheet');\n          }\n        }\n      }\n    );\n  };\n\n  _makeRenameFreeEventsFunction = (i18n: I18nType) => (\n    eventsFunction: gdEventsFunction,\n    newName: string,\n    done: boolean => void\n  ) => {\n    if (!gd.Project.validateObjectName(newName)) {\n      showWarningBox(\n        i18n._(\n          t`This name contains forbidden characters: please only use alphanumeric characters (0-9, a-z) and underscores in your function name.`\n        )\n      );\n      return;\n    }\n\n    const { project, eventsFunctionsExtension } = this.props;\n    gd.WholeProjectRefactorer.renameEventsFunction(\n      project,\n      eventsFunctionsExtension,\n      eventsFunction.getName(),\n      newName\n    );\n\n    done(true);\n  };\n\n  _makeRenameBehaviorEventsFunction = (i18n: I18nType) => (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    eventsFunction: gdEventsFunction,\n    newName: string,\n    done: boolean => void\n  ) => {\n    if (!gd.Project.validateObjectName(newName)) {\n      showWarningBox(\n        i18n._(\n          t`This name contains forbidden characters: please only use alphanumeric characters (0-9, a-z) and underscores in your function name.`\n        )\n      );\n      return done(false);\n    }\n    if (isBehaviorLifecycleFunction(newName)) {\n      showWarningBox(\n        i18n._(\n          t`This name is reserved for a lifecycle method of the behavior. Choose another name for your custom function.`\n        )\n      );\n      return done(false);\n    }\n\n    const { project, eventsFunctionsExtension } = this.props;\n    gd.WholeProjectRefactorer.renameBehaviorEventsFunction(\n      project,\n      eventsFunctionsExtension,\n      eventsBasedBehavior,\n      eventsFunction.getName(),\n      newName\n    );\n\n    done(true);\n  };\n\n  _onDeleteEventsFunction = (\n    eventsFunction: gdEventsFunction,\n    cb: boolean => void\n  ) => {\n    if (\n      this.state.selectedEventsFunction &&\n      gd.compare(eventsFunction, this.state.selectedEventsFunction)\n    ) {\n      this._selectEventsFunction(null, this.state.selectedEventsBasedBehavior);\n    }\n\n    cb(true);\n  };\n\n  _selectEventsBasedBehavior = (\n    selectedEventsBasedBehavior: ?gdEventsBasedBehavior\n  ) => {\n    this.setState(\n      {\n        selectedEventsBasedBehavior,\n        selectedEventsFunction: null,\n      },\n      () => {\n        this.updateToolbar();\n        if (selectedEventsBasedBehavior) {\n          if (this._editorMosaic)\n            this._editorMosaic.openEditor('behavior-functions-list', 'end', 75);\n          if (this._editorNavigator)\n            this._editorNavigator.openEditor('behavior-functions-list');\n        }\n      }\n    );\n  };\n\n  _makeRenameEventsBasedBehavior = (i18n: I18nType) => (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    newName: string,\n    done: boolean => void\n  ) => {\n    if (!gd.Project.validateObjectName(newName)) {\n      showWarningBox(\n        i18n._(\n          t`This name contains forbidden characters: please only use alphanumeric characters (0-9, a-z) and underscores in your function name.`\n        )\n      );\n      return;\n    }\n\n    const { project, eventsFunctionsExtension } = this.props;\n    gd.WholeProjectRefactorer.renameEventsBasedBehavior(\n      project,\n      eventsFunctionsExtension,\n      eventsBasedBehavior.getName(),\n      newName\n    );\n\n    done(true);\n  };\n\n  _onEventsBasedBehaviorRenamed = () => {\n    // Name of a behavior changed, so notify parent\n    // that a behavior was edited (to trigger reload of extensions)\n    if (this.props.onBehaviorEdited) this.props.onBehaviorEdited();\n\n    // Reload the selected events function, if any, as the behavior was\n    // changed so objects containers need to be re-created (otherwise,\n    // objects from objects containers will still refer to the old behavior name,\n    // done before the call to gd.WholeProjectRefactorer.renameEventsBasedBehavior).\n    if (this.state.selectedEventsFunction) {\n      this._loadEventsFunctionFrom(\n        this.props.project,\n        this.state.selectedEventsFunction\n      );\n    }\n  };\n\n  _onDeleteEventsBasedBehavior = (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    cb: boolean => void\n  ) => {\n    if (\n      this.state.selectedEventsBasedBehavior &&\n      gd.compare(eventsBasedBehavior, this.state.selectedEventsBasedBehavior)\n    ) {\n      this._selectEventsBasedBehavior(null);\n    }\n\n    cb(true);\n  };\n\n  _onAddFreeEventsFunction = (cb: (doAdd: boolean, name: ?string) => void) => {\n    cb(true, null); // Proceed with the an autogenerated name\n  };\n\n  _onAddBehaviorEventsFunction = (\n    onAddEventsFunctionCb: (doAdd: boolean, name: ?string) => void\n  ) => {\n    this.setState({\n      behaviorMethodSelectorDialogOpen: true,\n      onAddEventsFunctionCb,\n    });\n  };\n\n  _onCloseBehaviorMethodSelectorDialog = (doAdd: boolean, name: ?string) => {\n    const { onAddEventsFunctionCb } = this.state;\n    this.setState(\n      {\n        behaviorMethodSelectorDialogOpen: false,\n        onAddEventsFunctionCb: null,\n      },\n      () => {\n        if (onAddEventsFunctionCb) onAddEventsFunctionCb(doAdd, name);\n      }\n    );\n  };\n\n  _onBehaviorEventsFunctionAdded = (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    eventsFunction: gdEventsFunction\n  ) => {\n    // This will create the mandatory parameters for the newly added function.\n    gd.WholeProjectRefactorer.ensureBehaviorEventsFunctionsProperParameters(\n      this.props.eventsFunctionsExtension,\n      eventsBasedBehavior\n    );\n  };\n\n  _onBehaviorPropertyRenamed = (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    oldName: string,\n    newName: string\n  ) => {\n    const { project, eventsFunctionsExtension } = this.props;\n    gd.WholeProjectRefactorer.renameBehaviorProperty(\n      project,\n      eventsFunctionsExtension,\n      eventsBasedBehavior,\n      oldName,\n      newName\n    );\n  };\n\n  _editOptions = (open: boolean = true) => {\n    this.setState({\n      editOptionsDialogOpen: open,\n    });\n  };\n\n  _editBehavior = (editedEventsBasedBehavior: ?gdEventsBasedBehavior) => {\n    this.setState(\n      state => {\n        // If we're closing the properties of a behavior, ensure parameters\n        // are up-to-date in all event functions of the behavior (the object\n        // type might have changed).\n        if (state.editedEventsBasedBehavior && !editedEventsBasedBehavior) {\n          gd.WholeProjectRefactorer.ensureBehaviorEventsFunctionsProperParameters(\n            this.props.eventsFunctionsExtension,\n            state.editedEventsBasedBehavior\n          );\n        }\n\n        return {\n          editedEventsBasedBehavior,\n        };\n      },\n      () => {\n        if (!editedEventsBasedBehavior) {\n          // If we're closing the properties of a behavior, notify parent\n          // that a behavior was edited (to trigger reload of extensions)\n          if (this.props.onBehaviorEdited) {\n            this.props.onBehaviorEdited();\n          }\n\n          // Reload the selected events function, if any, as the behavior was\n          // changed so objects containers need to be re-created. Notably, the\n          // type of the object that is handled by the behavior may have changed.\n          if (this.state.selectedEventsFunction) {\n            this._loadEventsFunctionFrom(\n              this.props.project,\n              this.state.selectedEventsFunction\n            );\n          }\n        }\n      }\n    );\n  };\n\n  _openFreeFunctionsListEditor = () => {\n    if (this._editorNavigator)\n      this._editorNavigator.openEditor('free-functions-list');\n  };\n\n  _openBehaviorsListEditor = () => {\n    if (this._editorNavigator)\n      this._editorNavigator.openEditor('behaviors-list');\n  };\n\n  render() {\n    const { project, eventsFunctionsExtension } = this.props;\n    const {\n      selectedEventsFunction,\n      selectedEventsBasedBehavior,\n      editOptionsDialogOpen,\n      behaviorMethodSelectorDialogOpen,\n      editedEventsBasedBehavior,\n    } = this.state;\n\n    const editors = {\n      'choose-editor': {\n        type: 'primary',\n        noTitleBar: true,\n        renderEditor: () => (\n          <ChooseEventsFunctionsExtensionEditor\n            eventsFunctionsExtension={eventsFunctionsExtension}\n            onEditFreeFunctions={this._openFreeFunctionsListEditor}\n            onEditBehaviors={this._openBehaviorsListEditor}\n            onEditExtensionOptions={this._editOptions}\n          />\n        ),\n      },\n      parameters: {\n        type: 'primary',\n        title: <Trans>Function Configuration</Trans>,\n        toolbarControls: [],\n        renderEditor: () => (\n          <Background>\n            {selectedEventsFunction &&\n            this._globalObjectsContainer &&\n            this._objectsContainer ? (\n              <EventsFunctionConfigurationEditor\n                project={project}\n                eventsFunction={selectedEventsFunction}\n                eventsBasedBehavior={selectedEventsBasedBehavior}\n                globalObjectsContainer={this._globalObjectsContainer}\n                objectsContainer={this._objectsContainer}\n                helpPagePath={\n                  !!selectedEventsBasedBehavior\n                    ? '/behaviors/events-based-behaviors'\n                    : '/events/functions'\n                }\n                onParametersOrGroupsUpdated={() => {\n                  this._loadEventsFunctionFrom(project, selectedEventsFunction);\n                  this.forceUpdate();\n                }}\n              />\n            ) : (\n              <EmptyMessage>\n                <Trans>\n                  Choose a function, or a function of a behavior, to set the\n                  parameters that it accepts.\n                </Trans>\n              </EmptyMessage>\n            )}\n          </Background>\n        ),\n      },\n      'events-sheet': {\n        type: 'primary',\n        noTitleBar: true,\n        renderEditor: () =>\n          selectedEventsFunction &&\n          this._globalObjectsContainer &&\n          this._objectsContainer ? (\n            <Background>\n              <EventsSheet\n                key={selectedEventsFunction.ptr}\n                ref={editor => (this.editor = editor)}\n                project={project}\n                scope={{\n                  layout: null,\n                  eventsFunctionsExtension,\n                  eventsBasedBehavior: selectedEventsBasedBehavior,\n                  eventsFunction: selectedEventsFunction,\n                }}\n                globalObjectsContainer={this._globalObjectsContainer}\n                objectsContainer={this._objectsContainer}\n                events={selectedEventsFunction.getEvents()}\n                showPreviewButton={false}\n                onPreview={options => {}}\n                showNetworkPreviewButton={false}\n                onOpenExternalEvents={() => {}}\n                onOpenLayout={() => {}}\n                resourceSources={this.props.resourceSources}\n                onChooseResource={this.props.onChooseResource}\n                resourceExternalEditors={this.props.resourceExternalEditors}\n                openInstructionOrExpression={\n                  this.props.openInstructionOrExpression\n                }\n                setToolbar={this.props.setToolbar}\n                onOpenDebugger={() => {}}\n                onCreateEventsFunction={this.props.onCreateEventsFunction}\n                onOpenSettings={this._editOptions} //TODO: Move this extra toolbar outside of EventsSheet toolbar\n              />\n            </Background>\n          ) : (\n            <Background>\n              <EmptyMessage>\n                <Trans>\n                  Choose a function, or a function of a behavior, to edit its\n                  events.\n                </Trans>\n              </EmptyMessage>\n            </Background>\n          ),\n      },\n      'free-functions-list': {\n        type: 'primary',\n        title: <Trans>Functions</Trans>,\n        toolbarControls: [],\n        renderEditor: () => (\n          <I18n>\n            {({ i18n }) => (\n              <EventsFunctionsList\n                project={project}\n                eventsFunctionsContainer={eventsFunctionsExtension}\n                selectedEventsFunction={selectedEventsFunction}\n                onSelectEventsFunction={selectedEventsFunction =>\n                  this._selectEventsFunction(selectedEventsFunction, null)\n                }\n                onDeleteEventsFunction={this._onDeleteEventsFunction}\n                canRename={() => true}\n                onRenameEventsFunction={this._makeRenameFreeEventsFunction(\n                  i18n\n                )}\n                onAddEventsFunction={this._onAddFreeEventsFunction}\n                onEventsFunctionAdded={() => {}}\n                renderHeader={() => (\n                  <React.Fragment>\n                    <Line justifyContent=\"center\">\n                      <FlatButton\n                        label={<Trans>Edit extension options</Trans>}\n                        primary\n                        onClick={() => this._editOptions()}\n                      />\n                    </Line>\n                    <Divider />\n                  </React.Fragment>\n                )}\n              />\n            )}\n          </I18n>\n        ),\n      },\n      'behavior-functions-list': {\n        type: 'primary',\n        title: <Trans>Behavior functions</Trans>,\n        renderEditor: () =>\n          selectedEventsBasedBehavior ? (\n            <I18n>\n              {({ i18n }) => (\n                <EventsFunctionsList\n                  project={project}\n                  eventsFunctionsContainer={selectedEventsBasedBehavior.getEventsFunctions()}\n                  selectedEventsFunction={selectedEventsFunction}\n                  onSelectEventsFunction={selectedEventsFunction =>\n                    this._selectEventsFunction(\n                      selectedEventsFunction,\n                      selectedEventsBasedBehavior\n                    )\n                  }\n                  onDeleteEventsFunction={this._onDeleteEventsFunction}\n                  canRename={(eventsFunction: gdEventsFunction) => {\n                    return !isBehaviorLifecycleFunction(\n                      eventsFunction.getName()\n                    );\n                  }}\n                  onRenameEventsFunction={(\n                    eventsFunction: gdEventsFunction,\n                    newName: string,\n                    done: boolean => void\n                  ) =>\n                    this._makeRenameBehaviorEventsFunction(i18n)(\n                      selectedEventsBasedBehavior,\n                      eventsFunction,\n                      newName,\n                      done\n                    )\n                  }\n                  onAddEventsFunction={this._onAddBehaviorEventsFunction}\n                  onEventsFunctionAdded={eventsFunction =>\n                    this._onBehaviorEventsFunctionAdded(\n                      selectedEventsBasedBehavior,\n                      eventsFunction\n                    )\n                  }\n                  renderHeader={() => (\n                    <React.Fragment>\n                      <Line justifyContent=\"center\">\n                        <FlatButton\n                          label={<Trans>Edit behavior properties</Trans>}\n                          primary\n                          onClick={() =>\n                            this._editBehavior(selectedEventsBasedBehavior)\n                          }\n                        />\n                      </Line>\n                      <Divider />\n                    </React.Fragment>\n                  )}\n                />\n              )}\n            </I18n>\n          ) : (\n            <Background>\n              <EmptyMessage>\n                <Trans>\n                  Select a behavior to display the functions inside this\n                  behavior.\n                </Trans>\n              </EmptyMessage>\n            </Background>\n          ),\n      },\n\n      'behaviors-list': {\n        type: 'secondary',\n        title: <Trans>Behaviors</Trans>,\n        toolbarControls: [],\n        renderEditor: () => (\n          <I18n>\n            {({ i18n }) => (\n              <EventsBasedBehaviorsList\n                project={project}\n                eventsBasedBehaviorsList={eventsFunctionsExtension.getEventsBasedBehaviors()}\n                selectedEventsBasedBehavior={selectedEventsBasedBehavior}\n                onSelectEventsBasedBehavior={this._selectEventsBasedBehavior}\n                onDeleteEventsBasedBehavior={this._onDeleteEventsBasedBehavior}\n                onRenameEventsBasedBehavior={this._makeRenameEventsBasedBehavior(\n                  i18n\n                )}\n                onEventsBasedBehaviorRenamed={\n                  this._onEventsBasedBehaviorRenamed\n                }\n                onEditProperties={this._editBehavior}\n              />\n            )}\n          </I18n>\n        ),\n      },\n    };\n\n    return (\n      <React.Fragment>\n        <ResponsiveWindowMeasurer>\n          {windowWidth =>\n            windowWidth === 'small' ? (\n              <EditorNavigator\n                ref={editorNavigator =>\n                  (this._editorNavigator = editorNavigator)\n                }\n                editors={editors}\n                initialEditorName={'choose-editor'}\n                transitions={{\n                  'behaviors-list': {\n                    previousEditor: 'choose-editor',\n                  },\n                  'behavior-functions-list': {\n                    previousEditor: 'behaviors-list',\n                  },\n                  'free-functions-list': {\n                    previousEditor: 'choose-editor',\n                  },\n                  'events-sheet': {\n                    nextIcon: <Tune />,\n                    nextLabel: <Trans>Parameters</Trans>,\n                    nextEditor: 'parameters',\n                    previousEditor: () => {\n                      if (selectedEventsBasedBehavior)\n                        return 'behavior-functions-list';\n                      return 'free-functions-list';\n                    },\n                  },\n                  parameters: {\n                    nextIcon: <Check />,\n                    nextLabel: <Trans>Validate these parameters</Trans>,\n                    nextEditor: 'events-sheet',\n                  },\n                }}\n                onEditorChanged={editorName => {\n                  this.updateToolbar();\n\n                  if (editorName === 'behaviors-list') {\n                    this._selectEventsBasedBehavior(null);\n                  } else if (\n                    editorName === 'free-functions-list' ||\n                    editorName === 'behavior-functions-list'\n                  ) {\n                    this._selectEventsFunction(\n                      null,\n                      selectedEventsBasedBehavior\n                    );\n                  }\n                }}\n              />\n            ) : (\n              <EditorMosaic\n                ref={editorMosaic => (this._editorMosaic = editorMosaic)}\n                editors={editors}\n                initialNodes={{\n                  direction: 'row',\n                  first: {\n                    direction: 'column',\n                    first: 'free-functions-list',\n                    second: 'behaviors-list',\n                    splitPercentage: 50,\n                  },\n                  second: {\n                    direction: 'column',\n                    first: 'parameters',\n                    second: 'events-sheet',\n                    splitPercentage: 25,\n                  },\n                  splitPercentage: 25,\n                }}\n              />\n            )\n          }\n        </ResponsiveWindowMeasurer>\n        {editOptionsDialogOpen && (\n          <OptionsEditorDialog\n            eventsFunctionsExtension={eventsFunctionsExtension}\n            open\n            onClose={() => this._editOptions(false)}\n          />\n        )}\n        {behaviorMethodSelectorDialogOpen && selectedEventsBasedBehavior && (\n          <BehaviorMethodSelectorDialog\n            eventsBasedBehavior={selectedEventsBasedBehavior}\n            onCancel={() =>\n              this._onCloseBehaviorMethodSelectorDialog(false, null)\n            }\n            onChoose={name =>\n              this._onCloseBehaviorMethodSelectorDialog(true, name)\n            }\n          />\n        )}\n        {editedEventsBasedBehavior && (\n          <EventsBasedBehaviorEditorDialog\n            project={project}\n            eventsFunctionsExtension={eventsFunctionsExtension}\n            eventsBasedBehavior={editedEventsBasedBehavior}\n            onApply={() => this._editBehavior(null)}\n            onRenameProperty={(oldName, newName) =>\n              this._onBehaviorPropertyRenamed(\n                editedEventsBasedBehavior,\n                oldName,\n                newName\n              )\n            }\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport ObjectGroupsListWithObjectGroupEditor from '../../ObjectGroupsList/ObjectGroupsListWithObjectGroupEditor';\nimport { Tabs, Tab } from '../../UI/Tabs';\nimport EventsFunctionParametersEditor from './EventsFunctionParametersEditor';\nimport EventsFunctionPropertiesEditor from './EventsFunctionPropertiesEditor';\nimport ScrollView from '../../UI/ScrollView';\nimport { Column } from '../../UI/Grid';\nimport { showWarningBox } from '../../UI/Messages/MessageBox';\nimport { type GroupWithContext } from '../../ObjectsList/EnumerateObjects';\nconst gd = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  eventsFunction: gdEventsFunction,\n  eventsBasedBehavior: ?gdEventsBasedBehavior,\n  onParametersOrGroupsUpdated: () => void,\n  helpPagePath?: string,\n  onConfigurationUpdated?: () => void,\n  renderConfigurationHeader?: () => React.Node,\n  freezeParameters?: boolean,\n  freezeEventsFunctionType?: boolean,\n|};\n\ntype TabNames = 'config' | 'parameters' | 'groups';\n\ntype State = {|\n  currentTab: TabNames,\n|};\n\nexport default class EventsFunctionConfigurationEditor extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    currentTab: 'config',\n  };\n\n  _canObjectOrGroupUseNewName = (newName: string) => {\n    const { objectsContainer, globalObjectsContainer } = this.props;\n\n    if (\n      objectsContainer.hasObjectNamed(newName) ||\n      globalObjectsContainer.hasObjectNamed(newName) ||\n      objectsContainer.getObjectGroups().has(newName) ||\n      globalObjectsContainer.getObjectGroups().has(newName)\n    ) {\n      showWarningBox(\n        'Another object or group with this name already exists in this function.'\n      );\n      return false;\n    } else if (!gd.Project.validateObjectName(newName)) {\n      showWarningBox(\n        'This name contains forbidden characters: please only use alphanumeric characters (0-9, a-z) and underscores in your object name.'\n      );\n      return false;\n    }\n\n    return true;\n  };\n\n  _onDeleteGroup = (\n    groupWithContext: GroupWithContext,\n    done: boolean => void\n  ) => {\n    const { group } = groupWithContext;\n    const {\n      project,\n      eventsFunction,\n      globalObjectsContainer,\n      objectsContainer,\n    } = this.props;\n\n    //eslint-disable-next-line\n    const answer = confirm(\n      'Do you want to remove all references to this group in events (actions and conditions using the group)?'\n    );\n\n    gd.WholeProjectRefactorer.objectOrGroupRemovedInEventsFunction(\n      project,\n      eventsFunction,\n      globalObjectsContainer,\n      objectsContainer,\n      group.getName(),\n      /* isObjectGroup=*/ true,\n      !!answer\n    );\n    done(true);\n  };\n\n  _onRenameGroup = (\n    groupWithContext: GroupWithContext,\n    newName: string,\n    done: boolean => void\n  ) => {\n    const { group } = groupWithContext;\n    const {\n      project,\n      eventsFunction,\n      globalObjectsContainer,\n      objectsContainer,\n    } = this.props;\n\n    // newName is supposed to have been already validated\n\n    // Avoid triggering renaming refactoring if name has not really changed\n    if (group.getName() !== newName) {\n      gd.WholeProjectRefactorer.objectOrGroupRenamedInEventsFunction(\n        project,\n        eventsFunction,\n        globalObjectsContainer,\n        objectsContainer,\n        group.getName(),\n        newName,\n        /* isObjectGroup=*/ true\n      );\n    }\n\n    done(true);\n  };\n\n  _chooseTab = (currentTab: TabNames) =>\n    this.setState({\n      currentTab,\n    });\n\n  render() {\n    const {\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      eventsFunction,\n      eventsBasedBehavior,\n      freezeEventsFunctionType,\n      onConfigurationUpdated,\n      onParametersOrGroupsUpdated,\n      freezeParameters,\n      helpPagePath,\n      renderConfigurationHeader,\n    } = this.props;\n\n    return (\n      <Column expand noMargin>\n        <Tabs value={this.state.currentTab} onChange={this._chooseTab}>\n          <Tab\n            label={<Trans>Configuration</Trans>}\n            value={('config': TabNames)}\n          />\n          <Tab\n            label={<Trans>Parameters</Trans>}\n            value={('parameters': TabNames)}\n          />\n          <Tab\n            label={<Trans>Object groups</Trans>}\n            value={('groups': TabNames)}\n          />\n        </Tabs>\n        {this.state.currentTab === 'config' ? (\n          <ScrollView>\n            <EventsFunctionPropertiesEditor\n              eventsFunction={eventsFunction}\n              eventsBasedBehavior={eventsBasedBehavior}\n              helpPagePath={helpPagePath}\n              onConfigurationUpdated={onConfigurationUpdated}\n              renderConfigurationHeader={renderConfigurationHeader}\n              freezeEventsFunctionType={freezeEventsFunctionType}\n            />\n          </ScrollView>\n        ) : null}\n        {this.state.currentTab === 'parameters' ? (\n          <ScrollView>\n            <EventsFunctionParametersEditor\n              project={project}\n              eventsFunction={eventsFunction}\n              eventsBasedBehavior={eventsBasedBehavior}\n              onParametersUpdated={onParametersOrGroupsUpdated}\n              helpPagePath={helpPagePath}\n              freezeParameters={freezeParameters}\n            />\n          </ScrollView>\n        ) : null}\n        {this.state.currentTab === 'groups' ? (\n          <ObjectGroupsListWithObjectGroupEditor\n            project={project}\n            globalObjectsContainer={globalObjectsContainer}\n            objectsContainer={objectsContainer}\n            globalObjectGroups={globalObjectsContainer.getObjectGroups()}\n            objectGroups={eventsFunction.getObjectGroups()}\n            canRenameGroup={this._canObjectOrGroupUseNewName}\n            onRenameGroup={this._onRenameGroup}\n            onDeleteGroup={this._onDeleteGroup}\n            onGroupsUpdated={onParametersOrGroupsUpdated}\n            canSetAsGlobalGroup={false}\n          />\n        ) : null}\n      </Column>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ObjectGroupsList from '.';\nimport { ObjectGroupEditorDialog } from '../ObjectGroupEditor/ObjectGroupEditorDialog';\nimport { type GroupWithContext } from '../ObjectsList/EnumerateObjects';\n\ntype Props = {|\n  project: ?gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  globalObjectGroups: gdObjectGroupsContainer,\n  objectGroups: gdObjectGroupsContainer,\n  canRenameGroup: (newName: string) => boolean,\n  onDeleteGroup: (\n    groupWithScope: GroupWithContext,\n    done: (boolean) => void\n  ) => void,\n  onRenameGroup: (\n    groupWithScope: GroupWithContext,\n    newName: string,\n    done: (boolean) => void\n  ) => void,\n  onGroupsUpdated?: () => void,\n  canSetAsGlobalGroup?: boolean,\n|};\n\ntype State = {|\n  editedGroup: ?gdObjectGroup,\n|};\n\n/**\n * Helper showing the list of groups and embedding the editor to edit a group.\n */\nexport default class ObjectGroupsListWithObjectGroupEditor extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    editedGroup: null,\n  };\n\n  editGroup = (editedGroup: ?gdObjectGroup) => this.setState({ editedGroup });\n\n  render() {\n    const {\n      project,\n      objectsContainer,\n      globalObjectsContainer,\n      objectGroups,\n      globalObjectGroups,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <ObjectGroupsList\n          globalObjectGroups={globalObjectGroups}\n          objectGroups={objectGroups}\n          onEditGroup={this.editGroup}\n          onDeleteGroup={this.props.onDeleteGroup}\n          onRenameGroup={this.props.onRenameGroup}\n          canRenameGroup={this.props.canRenameGroup}\n          onGroupAdded={this.props.onGroupsUpdated}\n          onGroupRemoved={this.props.onGroupsUpdated}\n          onGroupRenamed={this.props.onGroupsUpdated}\n          canSetAsGlobalGroup={this.props.canSetAsGlobalGroup}\n        />\n        <ObjectGroupEditorDialog\n          project={project}\n          key={globalObjectsContainer.ptr + ';' + objectsContainer.ptr}\n          open={!!this.state.editedGroup}\n          group={this.state.editedGroup}\n          globalObjectsContainer={globalObjectsContainer}\n          objectsContainer={objectsContainer}\n          onCancel={() => this.editGroup(null)}\n          onApply={() => {\n            if (this.props.onGroupsUpdated) this.props.onGroupsUpdated();\n            this.editGroup(null);\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { List, ListItem } from '../UI/List';\nimport ObjectSelector from '../ObjectsList/ObjectSelector';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport { Column } from '../UI/Grid';\nconst gd = global.gd;\n\ntype Props = {|\n  project: ?gdProject,\n  group: gdObjectGroup,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  onSizeUpdated?: () => void,\n|};\n\ntype State = {|\n  newObjectName: string,\n|};\n\nexport default class ObjectGroupEditor extends React.Component<Props, State> {\n  state = {\n    newObjectName: '',\n  };\n\n  removeObject = (objectName: string) => {\n    const { group, onSizeUpdated } = this.props;\n\n    group.removeObject(objectName);\n\n    this.forceUpdate();\n    if (onSizeUpdated) onSizeUpdated();\n  };\n\n  addObject = (objectName: string) => {\n    const { group, onSizeUpdated } = this.props;\n\n    group.addObject(objectName);\n    this.setState({\n      newObjectName: '',\n    });\n    if (onSizeUpdated) onSizeUpdated();\n  };\n\n  _renderExplanation() {\n    const { group, globalObjectsContainer, objectsContainer } = this.props;\n\n    let type = undefined;\n    group\n      .getAllObjectsNames()\n      .toJSArray()\n      .forEach(objectName => {\n        const objectType = gd.getTypeOfObject(\n          globalObjectsContainer,\n          objectsContainer,\n          objectName,\n          false\n        );\n        if (type === undefined || objectType === type) type = objectType;\n        else type = '';\n      });\n\n    let message = '';\n    if (type === undefined) {\n      message = 'This group is empty';\n    } else if (type === '') {\n      message =\n        \"This group contains objects of different kinds. You'll only be able to use actions and conditions common to all objects with this group.\";\n    } else {\n      message = `This group contains objects of the same kind (${type}). You can use actions and conditions related to this kind of objects in events with this group.`;\n    }\n\n    return <EmptyMessage>{message}</EmptyMessage>;\n  }\n\n  render() {\n    const {\n      project,\n      group,\n      globalObjectsContainer,\n      objectsContainer,\n    } = this.props;\n\n    return (\n      <div>\n        {this._renderExplanation()}\n        <List>\n          {group\n            .getAllObjectsNames()\n            .toJSArray()\n            .map(objectName => {\n              return (\n                <ListItem\n                  key={objectName}\n                  primaryText={objectName}\n                  displayRemoveButton\n                  onRemove={() => this.removeObject(objectName)}\n                />\n              );\n            })}\n        </List>\n        <Column>\n          <ObjectSelector\n            project={project}\n            globalObjectsContainer={globalObjectsContainer}\n            objectsContainer={objectsContainer}\n            value={this.state.newObjectName}\n            onChange={name => this.setState({ newObjectName: name })}\n            onChoose={this.addObject}\n            openOnFocus\n            noGroups\n            hintText={t`Choose an object to add to the group`}\n            fullWidth\n          />\n        </Column>\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport TextField from '../UI/TextField';\nimport CloudUpload from '@material-ui/icons/CloudUpload';\nimport { Column, Line } from '../UI/Grid';\nimport Dialog from '../UI/Dialog';\nimport HelpButton from '../UI/HelpButton';\nimport EventsFunctionsExtensionsContext, {\n  type EventsFunctionsExtensionsState,\n} from '../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext';\nimport RaisedButton from '../UI/RaisedButton';\nimport Window from '../Utils/Window';\nimport Text from '../UI/Text';\n\ntype Props = {|\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  onClose: () => void,\n  open: boolean,\n|};\ntype State = {|\n  exportDialogOpen: boolean,\n|};\n\nconst exportExtension = (\n  eventsFunctionsExtensionsState: EventsFunctionsExtensionsState,\n  eventsFunctionsExtension: gdEventsFunctionsExtension\n) => {\n  const eventsFunctionsExtensionWriter = eventsFunctionsExtensionsState.getEventsFunctionsExtensionWriter();\n  if (!eventsFunctionsExtensionWriter)\n    return Promise.reject(new Error('Not supported'));\n\n  return eventsFunctionsExtensionWriter\n    .chooseEventsFunctionExtensionFile()\n    .then(pathOrUrl => {\n      if (!pathOrUrl) return;\n\n      eventsFunctionsExtensionWriter\n        .writeEventsFunctionsExtension(eventsFunctionsExtension, pathOrUrl)\n        .then();\n    });\n};\n\nconst openGitHubIssue = () => {\n  const body = `\n**⚠️ Please edit and complete this before submitting your extension:**\n\n## Describe the extension\nA clear and concise description of what the extension is, how useful it is.\n\n## Checklist\n\n- [ ] Extension has a proper name and description.\n- [ ] Extension has tags (for example: \"platform, brick, breakable\").\n- [ ] All behaviors have a description.\n- [ ] All functions (actions, conditions, expressions) have descriptions.\n- [ ] I confirm that this extension can be intergrated to this GitHub repository, distributed and MIT licensed.\n\n## Extension file\n\nFinally, attach the .json file of your extension here.\n\nYou also may have to create an account on GitHub before posting.\nIf your extension is high quality and useful, it will be added to the list of GDevelop community extensions.\nWhen you're ready, remove this last paragraph and click on \"Submit new issue\". Thanks 🙌`;\n  Window.openExternalURL(\n    `https://github.com/4ian/GDevelop-extensions/issues/new?body=${encodeURIComponent(\n      body\n    )}&title=New%20extension`\n  );\n};\n\nexport default class OptionsEditorDialog extends React.Component<Props, State> {\n  state = {\n    exportDialogOpen: false,\n  };\n\n  render() {\n    const { eventsFunctionsExtension } = this.props;\n    const { exportDialogOpen } = this.state;\n\n    return (\n      <EventsFunctionsExtensionsContext.Consumer>\n        {eventsFunctionsExtensionsState => {\n          const eventsFunctionsExtensionWriter = eventsFunctionsExtensionsState.getEventsFunctionsExtensionWriter();\n          return (\n            <Dialog\n              secondaryActions={[\n                <HelpButton key=\"help\" helpPagePath=\"/extensions/create\" />,\n                eventsFunctionsExtensionWriter ? (\n                  <FlatButton\n                    icon={<CloudUpload />}\n                    key=\"export\"\n                    label={<Trans>Export extension</Trans>}\n                    onClick={() => this.setState({ exportDialogOpen: true })}\n                  />\n                ) : null,\n              ]}\n              actions={[\n                <FlatButton\n                  label={<Trans>Close</Trans>}\n                  primary={true}\n                  keyboardFocused={true}\n                  onClick={() => this.props.onClose()}\n                  key={'close'}\n                />,\n              ]}\n              open={this.props.open}\n              title={<Trans>Edit Extension Options</Trans>}\n              onRequestClose={this.props.onClose}\n            >\n              <Column>\n                <TextField\n                  floatingLabelText={<Trans>Name</Trans>}\n                  value={eventsFunctionsExtension.getName()}\n                  disabled\n                  fullWidth\n                />\n                <TextField\n                  floatingLabelText={<Trans>Name displayed in editor</Trans>}\n                  value={eventsFunctionsExtension.getFullName()}\n                  onChange={(e, text) => {\n                    eventsFunctionsExtension.setFullName(text);\n                    this.forceUpdate();\n                  }}\n                  fullWidth\n                />\n                <TextField\n                  floatingLabelText={<Trans>Short description</Trans>}\n                  value={eventsFunctionsExtension.getShortDescription()}\n                  onChange={(e, text) => {\n                    eventsFunctionsExtension.setShortDescription(text);\n                    this.forceUpdate();\n                  }}\n                  multiLine\n                  fullWidth\n                  rows={2}\n                  rowsMax={2}\n                />\n                <TextField\n                  floatingLabelText={\n                    <Trans>Description (markdown supported)</Trans>\n                  }\n                  value={eventsFunctionsExtension.getDescription()}\n                  onChange={(e, text) => {\n                    eventsFunctionsExtension.setDescription(text);\n                    this.forceUpdate();\n                  }}\n                  multiLine\n                  fullWidth\n                  rows={5}\n                  rowsMax={5}\n                />\n                <TextField\n                  floatingLabelText={<Trans>Version</Trans>}\n                  value={eventsFunctionsExtension.getVersion()}\n                  onChange={(e, text) => {\n                    eventsFunctionsExtension.setVersion(text);\n                    this.forceUpdate();\n                  }}\n                  fullWidth\n                />\n                <TextField\n                  floatingLabelText={<Trans>Tags (comma separated)</Trans>}\n                  value={eventsFunctionsExtension.getTags()}\n                  onChange={(e, text) => {\n                    eventsFunctionsExtension.setTags(text);\n                    this.forceUpdate();\n                  }}\n                  fullWidth\n                />\n                <TextField\n                  floatingLabelText={\n                    <Trans>Author (Name, email or GitHub handle)</Trans>\n                  }\n                  value={eventsFunctionsExtension.getAuthor()}\n                  onChange={(e, text) => {\n                    eventsFunctionsExtension.setAuthor(text);\n                    this.forceUpdate();\n                  }}\n                  fullWidth\n                />\n              </Column>\n              {exportDialogOpen && (\n                <Dialog\n                  secondaryActions={[\n                    <HelpButton key=\"help\" helpPagePath=\"/extensions/share\" />,\n                  ]}\n                  actions={[\n                    <FlatButton\n                      label={<Trans>Close</Trans>}\n                      keyboardFocused={true}\n                      onClick={() => this.setState({ exportDialogOpen: false })}\n                      key={'close'}\n                    />,\n                  ]}\n                  open\n                  onRequestClose={() =>\n                    this.setState({ exportDialogOpen: false })\n                  }\n                >\n                  <Column expand>\n                    <Line>\n                      <Text>\n                        <Trans>\n                          You can export the extension to a file to easily\n                          import it in another project. If your extension is\n                          providing useful and reusable functions or behaviors,\n                          consider sharing it with the GDevelop community!\n                        </Trans>\n                      </Text>\n                    </Line>\n                    <Line>\n                      <RaisedButton\n                        icon={<CloudUpload />}\n                        primary\n                        label={<Trans>Export to a file</Trans>}\n                        onClick={() => {\n                          exportExtension(\n                            eventsFunctionsExtensionsState,\n                            eventsFunctionsExtension\n                          );\n                        }}\n                      />\n                      <FlatButton\n                        label={<Trans>Submit extension to the community</Trans>}\n                        onClick={openGitHubIssue}\n                      />\n                    </Line>\n                  </Column>\n                </Dialog>\n              )}\n            </Dialog>\n          );\n        }}\n      </EventsFunctionsExtensionsContext.Consumer>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport EventsBasedBehaviorEditor from './index';\nimport HelpButton from '../UI/HelpButton';\n\ntype Props = {|\n  onApply: () => void,\n  project: gdProject,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  eventsBasedBehavior: gdEventsBasedBehavior,\n  onRenameProperty: (oldName: string, newName: string) => void,\n|};\n\nexport default class EventsBasedBehaviorEditorDialog extends React.Component<\n  Props,\n  {||}\n> {\n  render() {\n    const {\n      onApply,\n      eventsBasedBehavior,\n      eventsFunctionsExtension,\n      project,\n    } = this.props;\n\n    return (\n      <Dialog\n        noMargin\n        secondaryActions={[\n          <HelpButton\n            key=\"help\"\n            helpPagePath=\"/behaviors/events-based-behaviors\"\n          />,\n        ]}\n        actions={[\n          <FlatButton\n            label={<Trans>Apply</Trans>}\n            primary\n            keyboardFocused\n            onClick={onApply}\n            key={'Apply'}\n          />,\n        ]}\n        modal\n        open\n        onRequestClose={onApply}\n        title={<Trans>Edit the behavior</Trans>}\n      >\n        <EventsBasedBehaviorEditor\n          project={project}\n          eventsFunctionsExtension={eventsFunctionsExtension}\n          eventsBasedBehavior={eventsBasedBehavior}\n          onTabChanged={\n            () =>\n              this.forceUpdate() /*Force update to ensure dialog is properly positioned*/\n          }\n          onPropertiesUpdated={\n            () =>\n              this.forceUpdate() /*Force update to ensure dialog is properly positioned*/\n          }\n          onRenameProperty={this.props.onRenameProperty}\n        />\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport TextField from '../UI/TextField';\nimport { Column, Spacer } from '../UI/Grid';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport ObjectTypeSelector from '../ObjectTypeSelector';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport DismissableAlertMessage from '../UI/DismissableAlertMessage';\nimport AlertMessage from '../UI/AlertMessage';\nimport EventsBasedBehaviorPropertiesEditor from './EventsBasedBehaviorPropertiesEditor';\nconst gd = global.gd;\n\ntype TabName = 'configuration' | 'properties';\n\ntype Props = {|\n  project: gdProject,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  eventsBasedBehavior: gdEventsBasedBehavior,\n  onPropertiesUpdated: () => void,\n  onRenameProperty: (oldName: string, newName: string) => void,\n  onTabChanged: () => void,\n|};\n\ntype State = {|\n  currentTab: TabName,\n|};\n\nexport default class EventsBasedBehaviorEditor extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    currentTab: 'configuration',\n  };\n\n  // An array containing all the object types that are using the behavior\n  _allObjectTypes: Array<string> = gd.WholeProjectRefactorer.getAllObjectTypesUsingEventsBasedBehavior(\n    this.props.project,\n    this.props.eventsFunctionsExtension,\n    this.props.eventsBasedBehavior\n  )\n    .toNewVectorString()\n    .toJSArray();\n\n  _changeTab = (newTab: TabName) =>\n    this.setState(\n      {\n        currentTab: newTab,\n      },\n      () => this.props.onTabChanged()\n    );\n\n  render() {\n    const { currentTab } = this.state;\n    const { eventsBasedBehavior, project } = this.props;\n\n    return (\n      <React.Fragment>\n        <Tabs value={currentTab} onChange={this._changeTab}>\n          <Tab label={<Trans>Configuration</Trans>} value=\"configuration\" />\n          <Tab label={<Trans>Properties</Trans>} value=\"properties\" />\n        </Tabs>\n        {currentTab === 'configuration' && (\n          <Column>\n            <DismissableAlertMessage\n              identifier=\"events-based-behavior-explanation\"\n              kind=\"info\"\n            >\n              This is the configuration of your behavior. Make sure to choose a\n              proper internal name as it's hard to change it later. Enter a\n              description explaining what the behavior is doing to the object.\n            </DismissableAlertMessage>\n            <TextField\n              floatingLabelText={<Trans>Internal Name</Trans>}\n              value={eventsBasedBehavior.getName()}\n              disabled\n              fullWidth\n            />\n            <SemiControlledTextField\n              commitOnBlur\n              floatingLabelText={<Trans>Name displayed in editor</Trans>}\n              value={eventsBasedBehavior.getFullName()}\n              onChange={text => {\n                eventsBasedBehavior.setFullName(text);\n                this.forceUpdate();\n              }}\n              fullWidth\n            />\n            <SemiControlledTextField\n              commitOnBlur\n              floatingLabelText={<Trans>Description</Trans>}\n              floatingLabelFixed\n              hintText={t`The description of the behavior should explain what the behavior is doing to the object, and, briefly, how to use it.`}\n              value={eventsBasedBehavior.getDescription()}\n              onChange={text => {\n                eventsBasedBehavior.setDescription(text);\n                this.forceUpdate();\n              }}\n              multiLine\n              fullWidth\n              rows={3}\n            />\n            <ObjectTypeSelector\n              floatingLabelText={\n                <Trans>Object on which this behavior can be used</Trans>\n              }\n              project={project}\n              value={eventsBasedBehavior.getObjectType()}\n              onChange={(objectType: string) => {\n                eventsBasedBehavior.setObjectType(objectType);\n                this.forceUpdate();\n              }}\n              allowedObjectTypes={\n                this._allObjectTypes.length === 0\n                  ? undefined /* Allow anything as the behavior is not used */\n                  : this._allObjectTypes.length === 1\n                  ? [\n                      '',\n                      this._allObjectTypes[0],\n                    ] /* Allow only the type of the objects using the behavior */\n                  : [\n                      '',\n                    ] /* More than one type of object are using the behavior. Only \"any object\" can be used on this behavior */\n              }\n            />\n            {this._allObjectTypes.length > 1 && (\n              <AlertMessage kind=\"info\">\n                <Trans>\n                  This behavior is being used by multiple types of objects.\n                  Thus, you can't restrict its usage to any particular object\n                  type. All the object types using this behavior are listed\n                  here:\n                  {this._allObjectTypes.join(', ')}\n                </Trans>\n              </AlertMessage>\n            )}\n            {eventsBasedBehavior\n              .getEventsFunctions()\n              .getEventsFunctionsCount() === 0 && (\n              <DismissableAlertMessage\n                identifier=\"empty-events-based-behavior-explanation\"\n                kind=\"info\"\n              >\n                <Trans>\n                  Once you're done, close this dialog and start adding some\n                  functions to the behavior. Then, test the behavior by adding\n                  it to an object in a scene.\n                </Trans>\n              </DismissableAlertMessage>\n            )}\n            <Spacer />\n          </Column>\n        )}\n        {currentTab === 'properties' && (\n          <EventsBasedBehaviorPropertiesEditor\n            project={project}\n            eventsBasedBehavior={eventsBasedBehavior}\n            onPropertiesUpdated={this.props.onPropertiesUpdated}\n            onRenameProperty={this.props.onRenameProperty}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport { Column, Line } from '../UI/Grid';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport { mapVector } from '../Utils/MapFor';\nimport RaisedButton from '../UI/RaisedButton';\nimport IconButton from '../UI/IconButton';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport ElementWithMenu from '../UI/Menu/ElementWithMenu';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport MiniToolbar from '../UI/MiniToolbar';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport InlineCheckbox from '../UI/InlineCheckbox';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Add from '@material-ui/icons/Add';\n\nconst gd = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  eventsBasedBehavior: gdEventsBasedBehavior,\n  onPropertiesUpdated: () => void,\n  onRenameProperty: (oldName: string, newName: string) => void,\n|};\n\nconst styles = {\n  propertiesContainer: {\n    flex: 1,\n  },\n};\n\nconst validatePropertyName = (\n  i18n: I18nType,\n  properties: gdNamedPropertyDescriptorsList,\n  newName: string\n) => {\n  if (!newName) {\n    showWarningBox(i18n._(t`The name of a property cannot be empty.`));\n    return false;\n  }\n  if (newName === 'name' || newName === 'type') {\n    showWarningBox(\n      i18n._(\n        t`The name of a property cannot be \"name\" or \"type\", as they are used by GDevelop internally.`\n      )\n    );\n    return false;\n  }\n  if (properties.has(newName)) {\n    showWarningBox(\n      i18n._(\n        t`This name is already used by another property. Choose a unique name for each property.`\n      )\n    );\n    return false;\n  }\n  if (!gd.Project.validateObjectName(newName)) {\n    showWarningBox(\n      i18n._(\n        t`This name contains forbidden characters: please only use alphanumeric characters (0-9, a-z) and underscores in your parameter name.`\n      )\n    );\n    return false;\n  }\n\n  return true;\n};\n\nexport default class EventsBasedBehaviorPropertiesEditor extends React.Component<\n  Props,\n  {||}\n> {\n  _addProperty = () => {\n    const { eventsBasedBehavior } = this.props;\n    const properties = eventsBasedBehavior.getPropertyDescriptors();\n\n    const newName = newNameGenerator('Property', name => properties.has(name));\n    const property = properties.insertNew(newName, properties.getCount());\n    property.setType('Number');\n    this.forceUpdate();\n    this.props.onPropertiesUpdated();\n  };\n\n  _removeProperty = (name: string) => {\n    const { eventsBasedBehavior } = this.props;\n    const properties = eventsBasedBehavior.getPropertyDescriptors();\n\n    properties.remove(name);\n    this.forceUpdate();\n    this.props.onPropertiesUpdated();\n  };\n\n  _moveProperty = (oldIndex: number, newIndex: number) => {\n    const { eventsBasedBehavior } = this.props;\n    const properties = eventsBasedBehavior.getPropertyDescriptors();\n\n    properties.move(oldIndex, newIndex);\n    this.forceUpdate();\n    this.props.onPropertiesUpdated();\n  };\n\n  render() {\n    const { eventsBasedBehavior } = this.props;\n\n    const properties = eventsBasedBehavior.getPropertyDescriptors();\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Column noMargin>\n            <Line noMargin>\n              <div style={styles.propertiesContainer}>\n                {mapVector(\n                  properties,\n                  (property: gdNamedPropertyDescriptor, i: number) => (\n                    <React.Fragment key={i}>\n                      <MiniToolbar>\n                        <Column expand noMargin>\n                          <SemiControlledTextField\n                            margin=\"none\"\n                            commitOnBlur\n                            hintText={t`Enter the property name`}\n                            value={property.getName()}\n                            onChange={newName => {\n                              if (newName === property.getName()) return;\n                              if (\n                                !validatePropertyName(i18n, properties, newName)\n                              )\n                                return;\n\n                              this.props.onRenameProperty(\n                                property.getName(),\n                                newName\n                              );\n\n                              property.setName(newName);\n                              this.forceUpdate();\n                              this.props.onPropertiesUpdated();\n                            }}\n                            fullWidth\n                          />\n                        </Column>\n                        <InlineCheckbox\n                          label={\n                            property.isHidden() ? (\n                              <Trans>Hidden</Trans>\n                            ) : (\n                              <Trans>Visible in editor</Trans>\n                            )\n                          }\n                          checked={!property.isHidden()}\n                          onCheck={(e, checked) => {\n                            property.setHidden(!checked);\n                            this.forceUpdate();\n                            this.props.onPropertiesUpdated();\n                          }}\n                          checkedIcon={<Visibility />}\n                          uncheckedIcon={<VisibilityOff />}\n                        />\n                        <ElementWithMenu\n                          element={\n                            <IconButton>\n                              <MoreVert />\n                            </IconButton>\n                          }\n                          buildMenuTemplate={() => [\n                            {\n                              label: i18n._(t`Delete`),\n                              click: () =>\n                                this._removeProperty(property.getName()),\n                            },\n                            { type: 'separator' },\n                            {\n                              label: i18n._(t`Move up`),\n                              click: () => this._moveProperty(i, i - 1),\n                              enabled: i - 1 >= 0,\n                            },\n                            {\n                              label: i18n._(t`Move down`),\n                              click: () => this._moveProperty(i, i + 1),\n                              enabled: i + 1 < properties.getCount(),\n                            },\n                          ]}\n                        />\n                      </MiniToolbar>\n                      <Line expand noMargin>\n                        <Column expand>\n                          <SelectField\n                            floatingLabelText={<Trans>Type</Trans>}\n                            value={property.getType()}\n                            onChange={(e, i, value: string) => {\n                              property.setType(value);\n                              this.forceUpdate();\n                              this.props.onPropertiesUpdated();\n                            }}\n                            fullWidth\n                          >\n                            <SelectOption\n                              value=\"Number\"\n                              primaryText={t`Number`}\n                            />\n                            <SelectOption\n                              value=\"String\"\n                              primaryText={t`String`}\n                            />\n                            <SelectOption\n                              value=\"Boolean\"\n                              primaryText={t`Boolean (checkbox)`}\n                            />\n                          </SelectField>\n                        </Column>\n                        <Column expand>\n                          {(property.getType() === 'String' ||\n                            property.getType() === 'Number') && (\n                            <SemiControlledTextField\n                              commitOnBlur\n                              floatingLabelText={<Trans>Default value</Trans>}\n                              hintText={\n                                property.getType() === 'Number' ? '123' : 'ABC'\n                              }\n                              value={property.getValue()}\n                              onChange={newValue => {\n                                property.setValue(newValue);\n                                this.forceUpdate();\n                                this.props.onPropertiesUpdated();\n                              }}\n                              fullWidth\n                            />\n                          )}\n                          {property.getType() === 'Boolean' && (\n                            <SelectField\n                              floatingLabelText={<Trans>Default value</Trans>}\n                              value={\n                                property.getValue() === 'true'\n                                  ? 'true'\n                                  : 'false'\n                              }\n                              onChange={(e, i, value) => {\n                                property.setValue(value);\n                                this.forceUpdate();\n                                this.props.onPropertiesUpdated();\n                              }}\n                              fullWidth\n                            >\n                              <SelectOption\n                                value=\"true\"\n                                primaryText={t`True (checked)`}\n                              />\n                              <SelectOption\n                                value=\"false\"\n                                primaryText={t`False (not checked)`}\n                              />\n                            </SelectField>\n                          )}\n                        </Column>\n                      </Line>\n                      <Line expand noMargin>\n                        <Column expand>\n                          <SemiControlledTextField\n                            commitOnBlur\n                            floatingLabelText={\n                              <Trans>Label, shown in the editor</Trans>\n                            }\n                            hintText={t`This should make the purpose of the property easy to understand`}\n                            floatingLabelFixed\n                            value={property.getLabel()}\n                            onChange={text => {\n                              property.setLabel(text);\n                              this.forceUpdate();\n                            }}\n                            fullWidth\n                          />\n                        </Column>\n                      </Line>\n                    </React.Fragment>\n                  )\n                )}\n                {properties.getCount() === 0 ? (\n                  <EmptyMessage>\n                    <Trans>\n                      No properties for this behavior. Add one to store data\n                      inside this behavior (for example: health, ammo, speed,\n                      etc...)\n                    </Trans>\n                  </EmptyMessage>\n                ) : null}\n                <Column>\n                  <Line justifyContent=\"flex-end\" expand>\n                    <RaisedButton\n                      primary\n                      label={<Trans>Add a property</Trans>}\n                      onClick={this._addProperty}\n                      labelPosition=\"before\"\n                      icon={<Add />}\n                    />\n                  </Line>\n                </Column>\n              </div>\n            </Line>\n          </Column>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { type Editor } from '.';\nimport { Column, Line } from '../Grid';\nimport FlatButton from '../FlatButton';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport Background from '../Background';\n\ntype Props = {|\n  initialEditorName: string,\n  editors: {\n    [string]: Editor,\n  },\n  transitions: {\n    [string]: {|\n      nextEditor?: string | (() => string),\n      nextLabel?: React.Node,\n      nextIcon?: React.Node,\n      previousEditor?: string | (() => string),\n    |},\n  },\n  onEditorChanged: (editorName: string) => void,\n|};\n\ntype Interface = {| openEditor: (editorName: string) => void |};\n\n// Flow types might have to be changed/removed if upgrading Flow\n// (see example at https://github.com/wgao19/flow-notes/blob/master/react/react-memo.md)\n\nexport default React.forwardRef<Props, Interface>(\n  (\n    { initialEditorName, editors, transitions, onEditorChanged }: Props,\n    ref\n  ) => {\n    const [currentEditorName, setCurrentEditorName] = React.useState(\n      initialEditorName\n    );\n    React.useImperativeHandle(ref, () => ({\n      openEditor: editorName => {\n        setCurrentEditorName(editorName);\n      },\n    }));\n    React.useEffect(\n      () => {\n        onEditorChanged(currentEditorName);\n      },\n      [currentEditorName]\n    );\n\n    const transition = transitions[currentEditorName];\n    let buttonLineJustifyContent = 'space-between';\n    if (transition) {\n      if (transition.previousEditor && !transition.nextEditor) {\n        buttonLineJustifyContent = 'flex-start';\n      }\n      if (!transition.previousEditor && transition.nextEditor) {\n        buttonLineJustifyContent = 'flex-end';\n      }\n    }\n\n    return (\n      <Column noMargin expand>\n        {transition && (\n          <Background maxWidth noExpand noFullHeight>\n            <Column>\n              <Line justifyContent={buttonLineJustifyContent}>\n                {transition.previousEditor && (\n                  <FlatButton\n                    label={<Trans>Back</Trans>}\n                    onClick={() => {\n                      if (transition.previousEditor)\n                        setCurrentEditorName(transition.previousEditor);\n                    }}\n                    icon={<ArrowBack />}\n                  />\n                )}\n                {transition.nextLabel && transition.nextEditor && (\n                  <FlatButton\n                    label={transition.nextLabel}\n                    onClick={() => {\n                      if (transition.nextEditor)\n                        setCurrentEditorName(transition.nextEditor);\n                    }}\n                    icon={transition.nextIcon}\n                  />\n                )}\n              </Line>\n            </Column>\n          </Background>\n        )}\n        {editors[currentEditorName]\n          ? editors[currentEditorName].renderEditor()\n          : null}\n      </Column>\n    );\n  }\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport * as React from 'react';\nimport Background from '../UI/Background';\nimport { Column, Spacer } from '../UI/Grid';\nimport Text from '../UI/Text';\nimport RaisedButton from '../UI/RaisedButton';\nimport FlatButton from '../UI/FlatButton';\n\ntype Props = {|\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  onEditFreeFunctions: () => void,\n  onEditBehaviors: () => void,\n  onEditExtensionOptions: () => void,\n|};\n\nexport default (props: Props) => {\n  const eventsFunctionsCount = props.eventsFunctionsExtension.getEventsFunctionsCount();\n  const eventsBasedBehaviorsCount = props.eventsFunctionsExtension\n    .getEventsBasedBehaviors()\n    .getCount();\n\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Background>\n          <Column>\n            <Text>\n              <Trans>\n                Extensions can provide functions (which can be actions,\n                conditions or expressions) or new behaviors.\n              </Trans>\n            </Text>\n            <RaisedButton\n              label={i18n._(\n                t`Edit functions (not attached to behaviors) (${eventsFunctionsCount})`\n              )}\n              onClick={props.onEditFreeFunctions}\n              primary\n            />\n            <Spacer />\n            <RaisedButton\n              label={i18n._(t`Edit behaviors (${eventsBasedBehaviorsCount})`)}\n              onClick={props.onEditBehaviors}\n              primary\n            />\n            <Spacer />\n            <FlatButton\n              label={<Trans>Edit extension options</Trans>}\n              onClick={props.onEditExtensionOptions}\n            />\n          </Column>\n        </Background>\n      )}\n    </I18n>\n  );\n};\n","import gesture from 'pixi-simple-gesture';\nimport ObjectsRenderingService from '../../ObjectsRendering/ObjectsRenderingService';\nimport getObjectByName from '../../Utils/GetObjectByName';\n\nimport * as PIXI from 'pixi.js';\nimport { shouldBeHandledByPinch } from '../PinchHandler';\nconst gd = global.gd;\n\nexport default class LayerRenderer {\n  constructor({\n    project,\n    layout,\n    layer,\n    viewPosition,\n    instances,\n    onInstanceClicked,\n    onOverInstance,\n    onOutInstance,\n    onMoveInstance,\n    onMoveInstanceEnd,\n    onDownInstance,\n  }) {\n    this.project = project;\n    this.instances = instances;\n    this.layout = layout;\n    this.layer = layer; // /!\\ Don't store any other reference.\n    // `layer` can be changed at any moment (see InstancesRenderer).\n    this.viewPosition = viewPosition;\n    this.onInstanceClicked = onInstanceClicked;\n    this.onOverInstance = onOverInstance;\n    this.onOutInstance = onOutInstance;\n    this.onMoveInstance = onMoveInstance;\n    this.onMoveInstanceEnd = onMoveInstanceEnd;\n    this.onDownInstance = onDownInstance;\n\n    this.viewTopLeft = [0, 0]; // Used for instances culling on rendering\n    this.viewBottomRight = [0, 0]; // Used for instances culling on rendering\n\n    this.renderedInstances = {};\n    this.pixiContainer = new PIXI.Container();\n\n    // Functor used to render an instance\n    this.instancesRenderer = new gd.InitialInstanceJSFunctor();\n    this.instancesRenderer.invoke = instancePtr => {\n      const instance = gd.wrapPointer(instancePtr, gd.InitialInstance);\n\n      //Get the \"RendereredInstance\" object associated to the instance and tell it to update.\n      var renderedInstance = this.getRendererOfInstance(instance);\n      if (!renderedInstance) return;\n\n      const pixiObject = renderedInstance.getPixiObject();\n      if (pixiObject) pixiObject.zOrder = instance.getZOrder();\n      if (pixiObject) pixiObject.interactive = !instance.isLocked();\n\n      // \"Culling\" improves rendering performance of large levels\n      const isVisible = this._isInstanceVisible(instance);\n      if (pixiObject) pixiObject.visible = isVisible;\n      if (isVisible) renderedInstance.update();\n\n      renderedInstance.wasUsed = true;\n    };\n  }\n\n  getPixiContainer() {\n    return this.pixiContainer;\n  }\n\n  getInstanceLeft = instance => {\n    return (\n      instance.getX() -\n      (this.renderedInstances[instance.ptr]\n        ? this.renderedInstances[instance.ptr].getOriginX()\n        : 0)\n    );\n  };\n\n  getInstanceTop = instance => {\n    return (\n      instance.getY() -\n      (this.renderedInstances[instance.ptr]\n        ? this.renderedInstances[instance.ptr].getOriginY()\n        : 0)\n    );\n  };\n\n  getInstanceWidth = instance => {\n    if (instance.hasCustomSize()) return instance.getCustomWidth();\n\n    return this.renderedInstances[instance.ptr]\n      ? this.renderedInstances[instance.ptr].getDefaultWidth()\n      : 0;\n  };\n\n  getInstanceHeight = instance => {\n    if (instance.hasCustomSize()) return instance.getCustomHeight();\n\n    return this.renderedInstances[instance.ptr]\n      ? this.renderedInstances[instance.ptr].getDefaultHeight()\n      : 0;\n  };\n\n  getRendererOfInstance = instance => {\n    var renderedInstance = this.renderedInstances[instance.ptr];\n    if (renderedInstance === undefined) {\n      //No renderer associated yet, the instance must have been just created!...\n      const associatedObjectName = instance.getObjectName();\n      const associatedObject = getObjectByName(\n        this.project,\n        this.layout,\n        associatedObjectName\n      );\n      if (!associatedObject) return;\n\n      //...so let's create a renderer.\n      renderedInstance = this.renderedInstances[\n        instance.ptr\n      ] = ObjectsRenderingService.createNewInstanceRenderer(\n        this.project,\n        this.layout,\n        instance,\n        associatedObject,\n        this.pixiContainer\n      );\n\n      renderedInstance._pixiObject.interactive = true;\n      gesture.panable(renderedInstance._pixiObject);\n      renderedInstance._pixiObject.on('click', () => {\n        this.onInstanceClicked(instance);\n      });\n      renderedInstance._pixiObject.on('mouseover', () => {\n        this.onOverInstance(instance);\n      });\n      renderedInstance._pixiObject.on('mousedown', () => {\n        this.onDownInstance(instance);\n      });\n      renderedInstance._pixiObject.on('touchstart', event => {\n        if (shouldBeHandledByPinch(event.data && event.data.originalEvent)) {\n          return;\n        }\n\n        this.onDownInstance(instance);\n      });\n      renderedInstance._pixiObject.on('mouseout', () => {\n        this.onOutInstance(instance);\n      });\n      renderedInstance._pixiObject.on('panmove', event => {\n        if (shouldBeHandledByPinch(event.data && event.data.originalEvent)) {\n          return;\n        }\n\n        this.onMoveInstance(instance, event.deltaX, event.deltaY);\n      });\n      renderedInstance._pixiObject.on('panend', event => {\n        this.onMoveInstanceEnd();\n      });\n    }\n\n    return renderedInstance;\n  };\n\n  /**\n   * This returns true if an instance is visible according to the viewPosition.\n   * The approach is a naive bounding box testing but save rendering time on large\n   * levels.\n   * @param {*} instance\n   */\n  _isInstanceVisible(instance) {\n    //TODO: Properly handle rotation\n    const left = this.getInstanceLeft(instance);\n    const top = this.getInstanceTop(instance);\n    if (\n      left + this.getInstanceWidth(instance) < this.viewTopLeft[0] ||\n      top + this.getInstanceHeight(instance) < this.viewTopLeft[1] ||\n      left > this.viewBottomRight[0] ||\n      top > this.viewBottomRight[1]\n    )\n      return false;\n\n    return true;\n  }\n\n  _computeViewBounds() {\n    // Add a margin of 100 pixels around the view. Culling will hide PIXI objects,\n    // and hidden objects won't respond to events. Hence, a margin allow the cursor to go\n    // slightly out of the canvas when moving an instance, and still have the instance\n    // to follow the cursor.\n    const margin = 100;\n    this.viewTopLeft = this.viewPosition.toSceneCoordinates(-margin, -margin);\n    this.viewBottomRight = this.viewPosition.toSceneCoordinates(\n      this.viewPosition.getWidth() + margin,\n      this.viewPosition.getHeight() + margin\n    );\n  }\n\n  render() {\n    this._computeViewBounds();\n    this.instances.iterateOverInstancesWithZOrdering(\n      this.instancesRenderer,\n      this.layer.getName()\n    );\n    this._updatePixiObjectsZOrder();\n    this._updateVisibility();\n    this._cleanRenderers();\n  }\n\n  _updatePixiObjectsZOrder() {\n    this.pixiContainer.children.sort((a, b) => {\n      a.zOrder = a.zOrder || 0;\n      b.zOrder = b.zOrder || 0;\n      return a.zOrder - b.zOrder;\n    });\n  }\n\n  _updateVisibility() {\n    this.pixiContainer.visible = this.layer.getVisibility();\n  }\n\n  /**\n   * Delete instance renderers of the specified objects, which will then be recreated during\n   * the next render.\n   * @param {string} objectName The name of the object for which instance must be re-rendered.\n   */\n  resetRenderersFor(objectName) {\n    for (let i in this.renderedInstances) {\n      if (this.renderedInstances.hasOwnProperty(i)) {\n        const renderedInstance = this.renderedInstances[i];\n        if (renderedInstance.getInstance().getObjectName() === objectName) {\n          renderedInstance.instanceRemovedFromScene();\n          delete this.renderedInstances[i];\n        }\n      }\n    }\n  }\n\n  /**\n   * Clean up rendered instances that are not associated to any instance anymore\n   * (this can happen after an instance has been deleted).\n   */\n  _cleanRenderers() {\n    for (let i in this.renderedInstances) {\n      if (this.renderedInstances.hasOwnProperty(i)) {\n        const renderedInstance = this.renderedInstances[i];\n        if (!renderedInstance.wasUsed) {\n          renderedInstance.instanceRemovedFromScene();\n          delete this.renderedInstances[i];\n        } else renderedInstance.wasUsed = false;\n      }\n    }\n  }\n\n  delete() {\n    this.instancesRenderer.delete();\n  }\n}\n","import * as PIXI from 'pixi.js';\nconst gd = global.gd;\n\nexport default class SelectionRectangle {\n  constructor({\n    instances,\n    instanceMeasurer,\n    toSceneCoordinates,\n    toCanvasCoordinates,\n  }) {\n    this.instances = instances;\n    this.instanceMeasurer = instanceMeasurer;\n    this.toSceneCoordinates = toSceneCoordinates;\n\n    this.pixiRectangle = new PIXI.Graphics();\n    this.pixiRectangle.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n    this.selectionRectangleStart = null;\n    this.selectionRectangleEnd = null;\n    this._instancesInSelectionRectangle = [];\n\n    this.selector = new gd.InitialInstanceJSFunctor();\n    this.selector.invoke = instancePtr => {\n      const instance = gd.wrapPointer(instancePtr, gd.InitialInstance);\n      const x = this.instanceMeasurer.getInstanceLeft(instance);\n      const y = this.instanceMeasurer.getInstanceTop(instance);\n      const instanceHeight = this.instanceMeasurer.getInstanceHeight(instance);\n      const instanceWidth = this.instanceMeasurer.getInstanceWidth(instance);\n\n      if (!this.selectionRectangleStart || !this.selectionRectangleEnd) return;\n\n      const selectionSceneStart = toSceneCoordinates(\n        this.selectionRectangleStart.x,\n        this.selectionRectangleStart.y\n      );\n      const selectionSceneEnd = toSceneCoordinates(\n        this.selectionRectangleEnd.x,\n        this.selectionRectangleEnd.y\n      );\n\n      if (\n        selectionSceneStart[0] <= x &&\n        x + instanceWidth <= selectionSceneEnd[0] &&\n        selectionSceneStart[1] <= y &&\n        y + instanceHeight <= selectionSceneEnd[1]\n      ) {\n        this._instancesInSelectionRectangle.push(instance);\n      }\n    };\n  }\n\n  hasStartedSelectionRectangle() {\n    return this.selectionRectangleStart;\n  }\n\n  startSelectionRectangle = (x, y) => {\n    this.selectionRectangleStart = { x, y };\n    this.selectionRectangleEnd = { x, y };\n  };\n\n  updateSelectionRectangle = (lastX, lastY) => {\n    if (!this.selectionRectangleStart)\n      this.selectionRectangleStart = { x: lastX, y: lastY };\n\n    this.selectionRectangleEnd = { x: lastX, y: lastY };\n  };\n\n  endSelectionRectangle = () => {\n    if (!this.selectionRectangleStart) return [];\n\n    this._instancesInSelectionRectangle.length = 0;\n    if (this.selectionRectangleStart.x > this.selectionRectangleEnd.x) {\n      const tmp = this.selectionRectangleStart.x;\n      this.selectionRectangleStart.x = this.selectionRectangleEnd.x;\n      this.selectionRectangleEnd.x = tmp;\n    }\n    if (this.selectionRectangleStart.y > this.selectionRectangleEnd.y) {\n      const tmp = this.selectionRectangleStart.y;\n      this.selectionRectangleStart.y = this.selectionRectangleEnd.y;\n      this.selectionRectangleEnd.y = tmp;\n    }\n\n    this.instances.iterateOverInstances(this.selector);\n\n    this.selectionRectangleStart = null;\n    return this._instancesInSelectionRectangle;\n  };\n\n  getPixiObject() {\n    return this.pixiRectangle;\n  }\n\n  render() {\n    if (!this.selectionRectangleStart) {\n      this.pixiRectangle.visible = false;\n      return;\n    }\n\n    let x1 = this.selectionRectangleStart.x;\n    let y1 = this.selectionRectangleStart.y;\n    let x2 = this.selectionRectangleEnd.x;\n    let y2 = this.selectionRectangleEnd.y;\n\n    this.pixiRectangle.visible = true;\n    this.pixiRectangle.clear();\n    this.pixiRectangle.beginFill(0x6868e8);\n    this.pixiRectangle.lineStyle(1, 0x6868e8, 1);\n    this.pixiRectangle.fillAlpha = 0.1;\n    this.pixiRectangle.alpha = 0.8;\n    this.pixiRectangle.drawRect(\n      Math.min(x1, x2),\n      Math.min(y1, y2),\n      Math.abs(x2 - x1),\n      Math.abs(y2 - y1)\n    );\n    this.pixiRectangle.endFill();\n  }\n\n  delete() {\n    this.selector.delete();\n  }\n}\n","// @flow\nimport { roundPosition } from '../Utils/GridHelpers';\nconst gd = global.gd;\n\ntype Props = {|\n  instances: gdInitialInstancesContainer,\n  options: Object,\n|};\n\nconst roundPositionsToGrid = (\n  pos: [number, number],\n  options: Object\n): [number, number] => {\n  const newPos = pos;\n\n  if (options.grid && options.snap) {\n    newPos[0] = roundPosition(\n      newPos[0],\n      options.gridWidth,\n      options.gridOffsetX\n    );\n    newPos[1] = roundPosition(\n      newPos[1],\n      options.gridHeight,\n      options.gridOffsetY\n    );\n  } else {\n    newPos[0] = Math.round(newPos[0]);\n    newPos[1] = Math.round(newPos[1]);\n  }\n\n  return newPos;\n};\n\n/**\n * Allow to add instances on the scene. Supports \"temporary\" instances,\n * which are real instances but can be deleted as long as they are not \"committed\".\n */\nexport default class InstancesAdder {\n  _instances: gdInitialInstancesContainer;\n  _temporaryInstances: Array<gdInitialInstance>;\n  _options: Object;\n  _zOrderFinder = new gd.HighestZOrderFinder();\n\n  constructor({ instances, options }: Props) {\n    this._instances = instances;\n    this._options = options;\n    this._temporaryInstances = [];\n  }\n\n  setOptions(options: Object) {\n    this._options = options;\n  }\n\n  /**\n   * Immediately create new instance at the specified position\n   * (specified in scene coordinates).\n   */\n  addInstances = (pos: [number, number], objectNames: Array<string>) => {\n    this._instances.iterateOverInstances(this._zOrderFinder);\n    const zOrder = this._zOrderFinder.getHighestZOrder() + 1;\n\n    const newPos = roundPositionsToGrid(pos, this._options);\n    objectNames.map(objectName => {\n      const instance: gdInitialInstance = this._instances.insertNewInitialInstance();\n      instance.setObjectName(objectName);\n      instance.setX(newPos[0]);\n      instance.setY(newPos[1]);\n      instance.setZOrder(zOrder);\n\n      return instance;\n    });\n  };\n\n  /**\n   * Create temporary instances at the specified position\n   * (specified in scene coordinates).\n   */\n  createOrUpdateTemporaryInstancesFromObjectNames = (\n    pos: [number, number],\n    objectNames: Array<string>\n  ) => {\n    if (!objectNames.length) return;\n\n    if (!this._temporaryInstances.length) {\n      this._createTemporaryInstancesFromObjectNames(pos, objectNames);\n    } else {\n      this.updateTemporaryInstancePositions(pos);\n    }\n  };\n\n  _createTemporaryInstancesFromObjectNames = (\n    pos: [number, number],\n    objectNames: Array<string>\n  ) => {\n    this.deleteTemporaryInstances();\n\n    this._instances.iterateOverInstances(this._zOrderFinder);\n    const zOrder = this._zOrderFinder.getHighestZOrder() + 1;\n\n    const newPos = roundPositionsToGrid(pos, this._options);\n    this._temporaryInstances = objectNames.map(objectName => {\n      const instance: gdInitialInstance = this._instances.insertNewInitialInstance();\n      instance.setObjectName(objectName);\n      instance.setX(newPos[0]);\n      instance.setY(newPos[1]);\n      instance.setZOrder(zOrder);\n\n      return instance;\n    });\n  };\n\n  /**\n   * Update the temporary instances  positions\n   * (specified in scene coordinates). Useful when dragging these instances.\n   */\n  updateTemporaryInstancePositions = (pos: [number, number]) => {\n    const newPos = roundPositionsToGrid(pos, this._options);\n    this._temporaryInstances.forEach(instance => {\n      instance.setX(Math.round(newPos[0]));\n      instance.setY(Math.round(newPos[1]));\n    });\n  };\n\n  /**\n   * Delete the temporary instances.\n   */\n  deleteTemporaryInstances() {\n    this._temporaryInstances.forEach(instance => {\n      this._instances.removeInstance(instance);\n    });\n    this._temporaryInstances = [];\n  }\n\n  /**\n   * Consider the temporary instances as not temporary anymore.\n   */\n  commitTemporaryInstances() {\n    this._temporaryInstances = [];\n  }\n\n  unmount() {\n    this._zOrderFinder.delete();\n\n    // Nothing to do for temporaries instances, that should have been deleted/commited by this moment.\n    // Don't take the risk to delete them now as this._instances might have been deleted/invalidated\n    // already.\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Background from '../../UI/Background';\nimport enumerateLayers from '../../LayersList/EnumerateLayers';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport PropertiesEditor from '../../PropertiesEditor';\nimport propertiesMapToSchema from '../../PropertiesEditor/PropertiesMapToSchema';\nimport { type Schema } from '../../PropertiesEditor';\nimport VariablesList from '../../VariablesList';\nimport getObjectByName from '../../Utils/GetObjectByName';\nimport IconButton from '../../UI/IconButton';\nimport { Line, Column } from '../../UI/Grid';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport Text from '../../UI/Text';\n\ntype Props = {|\n  project: gdProject,\n  layout: gdLayout,\n  instances: Array<gdInitialInstance>,\n  onEditObjectByName: string => void,\n  editObjectVariables: (?gdObject) => void,\n  editInstanceVariables: gdInitialInstance => void,\n|};\n\nexport default class InstancePropertiesEditor extends React.Component<Props> {\n  _instanceVariablesList: { current: null | VariablesList } = React.createRef();\n  schema: Schema = [\n    {\n      name: 'Object name',\n      valueType: 'string',\n      disabled: true,\n      getValue: (instance: gdInitialInstance) => instance.getObjectName(),\n      setValue: (instance: gdInitialInstance, newValue: string) =>\n        instance.setObjectName(newValue),\n      onEditButtonClick: (instance: gdInitialInstance) =>\n        this.props.onEditObjectByName(instance.getObjectName()),\n    },\n    {\n      name: 'Position',\n      type: 'row',\n      children: [\n        {\n          name: 'X',\n          valueType: 'number',\n          getValue: (instance: gdInitialInstance) => instance.getX(),\n          setValue: (instance: gdInitialInstance, newValue: number) =>\n            instance.setX(newValue),\n        },\n        {\n          name: 'Y',\n          valueType: 'number',\n          getValue: (instance: gdInitialInstance) => instance.getY(),\n          setValue: (instance: gdInitialInstance, newValue: number) =>\n            instance.setY(newValue),\n        },\n      ],\n    },\n    {\n      name: 'Angle',\n      valueType: 'number',\n      getValue: (instance: gdInitialInstance) => instance.getAngle(),\n      setValue: (instance: gdInitialInstance, newValue: number) =>\n        instance.setAngle(newValue),\n    },\n    {\n      name: 'Lock position/angle in the editor',\n      valueType: 'boolean',\n      getValue: (instance: gdInitialInstance) => instance.isLocked(),\n      setValue: (instance: gdInitialInstance, newValue: boolean) =>\n        instance.setLocked(newValue),\n    },\n    {\n      name: 'Z Order',\n      valueType: 'number',\n      getValue: (instance: gdInitialInstance) => instance.getZOrder(),\n      setValue: (instance: gdInitialInstance, newValue: number) =>\n        instance.setZOrder(newValue),\n    },\n    {\n      name: 'Layer',\n      valueType: 'string',\n      getChoices: () => enumerateLayers(this.props.layout),\n      getValue: (instance: gdInitialInstance) => instance.getLayer(),\n      setValue: (instance: gdInitialInstance, newValue: string) =>\n        instance.setLayer(newValue),\n    },\n    {\n      name: 'Custom size',\n      type: 'row',\n      children: [\n        {\n          name: 'Width',\n          valueType: 'number',\n          getValue: (instance: gdInitialInstance) => instance.getCustomWidth(),\n          setValue: (instance: gdInitialInstance, newValue: number) =>\n            instance.setCustomWidth(newValue),\n        },\n        {\n          name: 'Height',\n          valueType: 'number',\n          getValue: (instance: gdInitialInstance) => instance.getCustomHeight(),\n          setValue: (instance: gdInitialInstance, newValue: number) =>\n            instance.setCustomHeight(newValue),\n        },\n      ],\n    },\n    {\n      name: 'Custom size?',\n      valueType: 'boolean',\n      getValue: (instance: gdInitialInstance) => instance.hasCustomSize(),\n      setValue: (instance: gdInitialInstance, newValue: boolean) =>\n        instance.setHasCustomSize(newValue),\n    },\n  ];\n\n  _renderEmpty() {\n    return (\n      <EmptyMessage>\n        <Trans>\n          Click on an instance in the scene to display its properties\n        </Trans>\n      </EmptyMessage>\n    );\n  }\n\n  _renderInstancesProperties() {\n    const { project, layout, instances } = this.props;\n    const instance = instances[0];\n    const associatedObjectName = instance.getObjectName();\n    const object = getObjectByName(project, layout, associatedObjectName);\n    //TODO: multiple instances support\n    const properties = instance.getCustomProperties(project, layout);\n    const instanceSchema = propertiesMapToSchema(\n      properties,\n      (instance: gdInitialInstance) =>\n        instance.getCustomProperties(project, layout),\n      (instance: gdInitialInstance, name, value) =>\n        instance.updateCustomProperty(name, value, project, layout)\n    );\n\n    return (\n      <div\n        style={{ overflowY: 'scroll', overflowX: 'hidden' }}\n        key={instances\n          .map((instance: gdInitialInstance) => '' + instance.ptr)\n          .join(';')}\n      >\n        <Column>\n          <PropertiesEditor\n            schema={this.schema.concat(instanceSchema)}\n            instances={instances}\n          />\n          <Line alignItems=\"center\" justifyContent=\"space-between\">\n            <Text>\n              <Trans>Instance Variables</Trans>\n            </Text>\n            <IconButton\n              onClick={() => {\n                this.props.editInstanceVariables(instance);\n              }}\n            >\n              <OpenInNew />\n            </IconButton>\n          </Line>\n        </Column>\n        <VariablesList\n          inheritedVariablesContainer={object ? object.getVariables() : null}\n          variablesContainer={instance.getVariables()}\n          onSizeUpdated={\n            () =>\n              this.forceUpdate() /*Force update to ensure dialog is properly positionned*/\n          }\n          ref={this._instanceVariablesList}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { instances } = this.props;\n\n    return (\n      <Background>\n        {!instances || !instances.length\n          ? this._renderEmpty()\n          : this._renderInstancesProperties()}\n      </Background>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport {\n  AutoSizer,\n  Table as RVTable,\n  Column as RVColumn,\n} from 'react-virtualized';\nimport ThemeConsumer from '../../UI/Theme/ThemeConsumer';\nimport SearchBar from '../../UI/SearchBar';\nconst gd = global.gd;\n\ntype State = {|\n  searchText: string,\n|};\n\ntype Props = {|\n  instances: gdInitialInstancesContainer,\n  selectedInstances: Array<gdInitialInstance>,\n  onSelectInstances: (Array<gdInitialInstance>) => void,\n  freezeUpdate: boolean,\n  style?: ?Object,\n|};\n\ntype RenderedRowInfo = {\n  instance: gdInitialInstance,\n  name: string,\n  locked: string,\n  x: string,\n  y: string,\n  angle: string,\n  layer: string,\n  zOrder: string,\n};\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'stretch',\n  },\n};\n\nexport default class InstancesList extends Component<Props, State> {\n  state = {\n    searchText: '',\n  };\n  renderedRows: Array<RenderedRowInfo> = [];\n  instanceRowRenderer: ?typeof gd.InitialInstanceJSFunctor;\n  table: ?typeof RVTable;\n  _searchBar = React.createRef<SearchBar>();\n\n  shouldComponentUpdate(nextProps: Props) {\n    // Rendering the component is costly as it iterates over\n    // every instances, so the prop freezeUpdate allows to ask the component to stop\n    // updating, for example when hidden.\n    return !nextProps.freezeUpdate;\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    // If the component was frozen and is now allowed to update,\n    // force the table to be refreshed to reflect changes (new instances,\n    // or selection changes).\n    if (!nextProps.freezeUpdate && this.props.freezeUpdate) {\n      if (this.table) this.table.forceUpdateGrid();\n    }\n  }\n\n  componentDidMount() {\n    if (this._searchBar.current) this._searchBar.current.focus();\n  }\n\n  componentWillMount() {\n    // Functor used to display an instance row\n    this.instanceRowRenderer = new gd.InitialInstanceJSFunctor();\n    this.instanceRowRenderer.invoke = instancePtr => {\n      const { searchText } = this.state;\n      const instance = gd.wrapPointer(instancePtr, gd.InitialInstance);\n\n      const name: string = instance.getObjectName();\n      if (\n        !searchText ||\n        name.toLowerCase().indexOf(searchText.toLowerCase()) !== -1\n      ) {\n        this.renderedRows.push({\n          instance,\n          name,\n          locked: instance.isLocked() ? '🔒' : '',\n          x: instance.getX().toFixed(2),\n          y: instance.getY().toFixed(2),\n          angle: instance.getAngle().toFixed(2),\n          layer: instance.getLayer(),\n          zOrder: instance.getZOrder(),\n        });\n      }\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.instanceRowRenderer) this.instanceRowRenderer.delete();\n  }\n\n  _onRowClick = ({ index }: { index: number }) => {\n    if (!this.renderedRows[index]) return;\n    this.props.onSelectInstances([this.renderedRows[index].instance]);\n  };\n\n  _rowGetter = ({ index }: { index: number }) => {\n    return this.renderedRows[index];\n  };\n\n  _rowClassName = ({ index }: { index: number }) => {\n    if (index < 0) {\n      return 'tableHeaderRow';\n    } else {\n      const row = this.renderedRows[index];\n      if (row && this.props.selectedInstances.indexOf(row.instance) !== -1)\n        return 'tableSelectedRow';\n\n      return index % 2 === 0 ? 'tableEvenRow' : 'tableOddRow';\n    }\n  };\n\n  _selectFirstInstance = () => {\n    if (this.renderedRows.length) {\n      this.props.onSelectInstances([this.renderedRows[0].instance]);\n    }\n  };\n\n  render() {\n    const { searchText } = this.state;\n    const { instances, style } = this.props;\n\n    this.renderedRows.length = 0;\n    instances.iterateOverInstances(this.instanceRowRenderer);\n\n    // Force RVTable component to be mounted again if instances\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const tableKey = instances.ptr;\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <div style={{ ...styles.container, ...style }}>\n            <div style={{ flex: 1 }}>\n              <AutoSizer>\n                {({ height, width }) => (\n                  <RVTable\n                    ref={table => (this.table = table)}\n                    key={tableKey}\n                    headerHeight={30}\n                    height={height}\n                    className={muiTheme.tableRootClassName}\n                    headerClassName={'tableHeaderColumn'}\n                    rowCount={this.renderedRows.length}\n                    rowGetter={this._rowGetter}\n                    rowHeight={35}\n                    onRowClick={this._onRowClick}\n                    rowClassName={this._rowClassName}\n                    width={width}\n                  >\n                    <RVColumn\n                      label={<Trans>Object name</Trans>}\n                      dataKey=\"name\"\n                      width={width * 0.35}\n                      className={'tableColumn'}\n                    />\n                    <RVColumn\n                      label=\"\"\n                      dataKey=\"locked\"\n                      width={width * 0.05}\n                      className={'tableColumn'}\n                    />\n                    <RVColumn\n                      label={<Trans>X</Trans>}\n                      dataKey=\"x\"\n                      width={width * 0.1}\n                      className={'tableColumn'}\n                    />\n                    <RVColumn\n                      label={<Trans>Y</Trans>}\n                      dataKey=\"y\"\n                      width={width * 0.1}\n                      className={'tableColumn'}\n                    />\n                    <RVColumn\n                      label={<Trans>Angle</Trans>}\n                      dataKey=\"angle\"\n                      width={width * 0.1}\n                      className={'tableColumn'}\n                    />\n                    <RVColumn\n                      label={<Trans>Layer</Trans>}\n                      dataKey=\"layer\"\n                      width={width * 0.2}\n                      className={'tableColumn'}\n                    />\n                    <RVColumn\n                      label={<Trans>Z Order</Trans>}\n                      dataKey=\"zOrder\"\n                      width={width * 0.1}\n                      className={'tableColumn'}\n                    />\n                  </RVTable>\n                )}\n              </AutoSizer>\n            </div>\n            <SearchBar\n              value={searchText}\n              onChange={searchText =>\n                this.setState({\n                  searchText,\n                })\n              }\n              onRequestSearch={this._selectFirstInstance}\n              ref={this._searchBar}\n            />\n          </div>\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport enumerateLayers from './EnumerateLayers';\n\nexport default class VariablesEditorDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedLayer: '',\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (!this.props.open && newProps.open) {\n      this.setState({\n        selectedLayer: '',\n      });\n    }\n  }\n\n  render() {\n    if (!this.props.layersContainer || !this.props.open) return null;\n\n    const actions = [\n      <FlatButton\n        key=\"cancel\"\n        label={<Trans>Cancel</Trans>}\n        keyboardFocused={true}\n        onClick={() => this.props.onClose(false)}\n      />,\n      <FlatButton\n        key=\"remove\"\n        label={<Trans>Remove objects</Trans>}\n        onClick={() => this.props.onClose(true, null)}\n      />,\n      <FlatButton\n        key=\"move\"\n        label={<Trans>Move objects</Trans>}\n        primary={true}\n        onClick={() => this.props.onClose(true, this.state.selectedLayer)}\n      />,\n    ];\n\n    const layers = enumerateLayers(this.props.layersContainer);\n    const choices = layers\n      .filter(({ value }) => {\n        return value !== this.props.layerRemoved;\n      })\n      .map(({ value, label }) => (\n        <SelectOption key={value} value={value} primaryText={label} />\n      ));\n\n    return (\n      <Dialog\n        title={<Trans>Objects on {this.props.layerRemoved}</Trans>}\n        actions={actions}\n        modal={true}\n        open={this.props.open}\n        onRequestClose={this.props.onCancel}\n      >\n        <div>\n          <Trans>Move objects on layer {this.props.layerRemoved} to:</Trans>\n        </div>\n        <SelectField\n          value={this.state.selectedLayer}\n          onChange={(event, index, newValue) => {\n            this.setState({ selectedLayer: newValue });\n          }}\n        >\n          {choices}\n        </SelectField>\n      </Dialog>\n    );\n  }\n}\n","// @flow weak\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport ObjectsEditorService from './ObjectsEditorService';\nimport Dialog from '../UI/Dialog';\nimport HelpButton from '../UI/HelpButton';\nimport BehaviorsEditor from '../BehaviorsEditor';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport { withSerializableObject } from '../Utils/SerializableObjectEditorContainer';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport MiniToolbar, { MiniToolbarText } from '../UI/MiniToolbar';\n\ntype StateType = {|\n  currentTab: string,\n  newObjectName: string,\n|};\n\nexport class ObjectEditorDialog extends Component<*, StateType> {\n  state = {\n    currentTab: 'properties',\n    newObjectName: this.props.objectName,\n  };\n\n  _onChangeTab = (value: string) => {\n    this.setState({\n      currentTab: value,\n    });\n  };\n\n  render() {\n    const actions = [\n      <FlatButton\n        key=\"cancel\"\n        label={<Trans>Cancel</Trans>}\n        onClick={this.props.onCancel}\n      />,\n      <FlatButton\n        key=\"apply\"\n        label={<Trans>Apply</Trans>}\n        primary\n        keyboardFocused\n        onClick={() => {\n          this.props.onApply();\n          // Do the renaming *after* applying changes, as \"withSerializableObject\"\n          // HOC will unserialize the object to apply modifications, which will\n          // override the name.\n          this.props.onRename(this.state.newObjectName);\n        }}\n      />,\n    ];\n\n    const EditorComponent = this.props.editorComponent;\n    const { currentTab } = this.state;\n\n    return (\n      <Dialog\n        key={this.props.object && this.props.object.ptr}\n        secondaryActions={<HelpButton helpPagePath={this.props.helpPagePath} />}\n        actions={actions}\n        noMargin\n        modal\n        onRequestClose={this.props.onCancel}\n        open={this.props.open}\n        noTitleMargin\n        title={\n          <div>\n            <Tabs value={currentTab} onChange={this._onChangeTab}>\n              <Tab\n                label={<Trans>Properties</Trans>}\n                value={'properties'}\n                key={'properties'}\n              />\n              <Tab\n                label={<Trans>Behaviors</Trans>}\n                value={'behaviors'}\n                key={'behaviors'}\n              />\n            </Tabs>\n          </div>\n        }\n      >\n        <MiniToolbar alignItems=\"baseline\">\n          <MiniToolbarText>\n            <Trans>Object name:</Trans>\n          </MiniToolbarText>\n          <SemiControlledTextField\n            fullWidth\n            commitOnBlur\n            margin=\"none\"\n            value={this.state.newObjectName}\n            hintText={t`Object Name`}\n            onChange={text => {\n              if (text === this.state.newObjectName) return;\n\n              if (this.props.canRenameObject(text)) {\n                this.setState({ newObjectName: text });\n              }\n            }}\n          />\n        </MiniToolbar>\n        {currentTab === 'properties' && EditorComponent && (\n          <EditorComponent\n            object={this.props.object}\n            project={this.props.project}\n            resourceSources={this.props.resourceSources}\n            onChooseResource={this.props.onChooseResource}\n            resourceExternalEditors={this.props.resourceExternalEditors}\n            onSizeUpdated={\n              () =>\n                this.forceUpdate() /*Force update to ensure dialog is properly positionned*/\n            }\n            objectName={this.props.objectName}\n          />\n        )}\n        {currentTab === 'behaviors' && (\n          <BehaviorsEditor\n            object={this.props.object}\n            project={this.props.project}\n            resourceSources={this.props.resourceSources}\n            onChooseResource={this.props.onChooseResource}\n            resourceExternalEditors={this.props.resourceExternalEditors}\n            onSizeUpdated={\n              () =>\n                this.forceUpdate() /*Force update to ensure dialog is properly positionned*/\n            }\n          />\n        )}\n      </Dialog>\n    );\n  }\n}\n\ntype ContainerStateType = {|\n  dialogComponent: ?Class<*>,\n  editorComponent: ?Class<*>,\n  castToObjectType: ?Function,\n  helpPagePath: ?string,\n  objectName: string,\n|};\n\nexport default class ObjectEditorDialogContainer extends Component<*, *> {\n  state: ContainerStateType = {\n    dialogComponent: null,\n    editorComponent: null,\n    castToObjectType: null,\n    helpPagePath: null,\n    objectName: '',\n  };\n\n  componentWillMount() {\n    this._loadFrom(this.props.object);\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (\n      (!this.props.open && newProps.open) ||\n      (newProps.open && this.props.object !== newProps.object)\n    ) {\n      this._loadFrom(newProps.object);\n    }\n  }\n\n  _loadFrom(object) {\n    if (!object) return;\n\n    const editorConfiguration = ObjectsEditorService.getEditorConfiguration(\n      object.getType()\n    );\n    if (!editorConfiguration) {\n      return this.setState({\n        dialogComponent: null,\n        editorComponent: null,\n        castToObjectType: null,\n      });\n    }\n\n    this.setState({\n      dialogComponent: withSerializableObject(ObjectEditorDialog, {\n        propName: 'object',\n        newObjectCreator: () => editorConfiguration.createNewObject(object),\n        useProjectToUnserialize: true,\n      }),\n      editorComponent: editorConfiguration.component,\n      helpPagePath: editorConfiguration.helpPagePath,\n      castToObjectType: editorConfiguration.castToObjectType,\n      objectName: object.getName(),\n    });\n  }\n\n  render() {\n    if (\n      !this.props.object ||\n      !this.state.dialogComponent ||\n      !this.state.castToObjectType\n    )\n      return null;\n\n    const EditorDialog: Class<*> = this.state.dialogComponent;\n    const { editorComponent, castToObjectType, helpPagePath } = this.state;\n\n    return (\n      <EditorDialog\n        editorComponent={editorComponent}\n        key={this.props.object && this.props.object.ptr}\n        helpPagePath={helpPagePath}\n        {...this.props}\n        object={castToObjectType(this.props.object)}\n        objectName={this.state.objectName}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Checkbox from '../../UI/Checkbox';\nimport { Line, Column } from '../../UI/Grid';\nimport ColorPicker from '../../UI/ColorField/ColorPicker';\nimport MiniToolbar, { MiniToolbarText } from '../../UI/MiniToolbar';\nimport ResourceSelector from '../../ResourcesList/ResourceSelector';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { type EditorProps } from './EditorProps.flow';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nconst gd = global.gd;\n\nconst toolbarItemStyle = {\n  marginRight: 10,\n};\n\nconst styles = {\n  sizeTextField: {\n    width: 90,\n    ...toolbarItemStyle,\n  },\n  toolbarItem: toolbarItemStyle,\n  checkbox: toolbarItemStyle,\n};\n\nexport default class TextEditor extends React.Component<EditorProps, void> {\n  render() {\n    const {\n      object,\n      project,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n    } = this.props;\n    const textObject = gd.asTextObject(object);\n\n    return (\n      <Column noMargin>\n        <MiniToolbar>\n          <MiniToolbarText>\n            <Trans>Size:</Trans>\n          </MiniToolbarText>\n          <SemiControlledTextField\n            commitOnBlur\n            type=\"number\"\n            margin=\"none\"\n            style={styles.sizeTextField}\n            value={textObject.getCharacterSize()}\n            onChange={value => {\n              textObject.setCharacterSize(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <MiniToolbarText>\n            <Trans>Color:</Trans>\n          </MiniToolbarText>\n          <ColorPicker\n            style={styles.toolbarItem}\n            disableAlpha\n            color={{\n              r: textObject.getColorR(),\n              g: textObject.getColorG(),\n              b: textObject.getColorB(),\n              a: 255,\n            }}\n            onChangeComplete={color => {\n              textObject.setColor(color.rgb.r, color.rgb.g, color.rgb.b);\n              this.forceUpdate();\n            }}\n          />\n          <Checkbox\n            label={<Trans>Bold</Trans>}\n            checked={textObject.isBold()}\n            onCheck={(e, checked) => {\n              textObject.setBold(checked);\n              this.forceUpdate();\n            }}\n            style={styles.checkbox}\n          />\n          <Checkbox\n            label={<Trans>Italic</Trans>}\n            checked={textObject.isItalic()}\n            onCheck={(e, checked) => {\n              textObject.setItalic(checked);\n              this.forceUpdate();\n            }}\n            style={styles.checkbox}\n          />\n          <ResourceSelector\n            margin=\"none\"\n            project={project}\n            resourceSources={resourceSources}\n            onChooseResource={onChooseResource}\n            resourceExternalEditors={resourceExternalEditors}\n            resourcesLoader={ResourcesLoader}\n            resourceKind=\"font\"\n            fullWidth\n            canBeReset\n            initialResourceName={textObject.getFontName()}\n            onChange={resourceName => {\n              textObject.setFontName(resourceName);\n              this.forceUpdate();\n            }}\n            hintText={<Trans>Choose a font</Trans>}\n          />\n        </MiniToolbar>\n        <Line noMargin>\n          <Column expand>\n            <Line>\n              <SemiControlledTextField\n                floatingLabelText={<Trans>Initial text to display</Trans>}\n                floatingLabelFixed\n                commitOnBlur\n                hintText={t`Enter the text to be displayed by the object`}\n                fullWidth\n                multiLine\n                rows={8}\n                rowsMax={8}\n                value={textObject.getString()}\n                onChange={value => {\n                  textObject.setString(value);\n                  this.forceUpdate();\n                  this.props.onSizeUpdated();\n                }}\n              />\n            </Line>\n          </Column>\n        </Line>\n      </Column>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport { Line, Column } from '../../UI/Grid';\nimport ResourceSelectorWithThumbnail from '../../ResourcesList/ResourceSelectorWithThumbnail';\nimport { type EditorProps } from './EditorProps.flow';\nimport { ResponsiveLineStackLayout } from '../../UI/Layout';\nconst gd = global.gd;\n\nexport default class TiledSpriteEditor extends React.Component<\n  EditorProps,\n  void\n> {\n  render() {\n    const {\n      object,\n      project,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n    } = this.props;\n    const tiledSpriteObject = gd.asTiledSpriteObject(object);\n\n    return (\n      <Column>\n        <Line>\n          <ResourceSelectorWithThumbnail\n            project={project}\n            resourceSources={resourceSources}\n            onChooseResource={onChooseResource}\n            resourceKind=\"image\"\n            resourceName={tiledSpriteObject.getTexture()}\n            resourceExternalEditors={resourceExternalEditors}\n            onChange={resourceName => {\n              tiledSpriteObject.setTexture(resourceName);\n              this.forceUpdate();\n            }}\n            floatingLabelText={<Trans>Select an image</Trans>}\n          />\n        </Line>\n        <ResponsiveLineStackLayout>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Default width (in pixels)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={tiledSpriteObject.getWidth()}\n            onChange={value => {\n              tiledSpriteObject.setWidth(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Default height (in pixels)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={tiledSpriteObject.getHeight()}\n            onChange={value => {\n              tiledSpriteObject.setHeight(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n      </Column>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Checkbox from '../../UI/Checkbox';\nimport { Line, Column } from '../../UI/Grid';\nimport ResourceSelectorWithThumbnail from '../../ResourcesList/ResourceSelectorWithThumbnail';\nimport { type EditorProps } from './EditorProps.flow';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport { ResponsiveLineStackLayout } from '../../UI/Layout';\nconst gd = global.gd;\n\nexport default class PanelSpriteEditor extends React.Component<\n  EditorProps,\n  void\n> {\n  render() {\n    const {\n      object,\n      project,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n    } = this.props;\n    const panelSpriteObject = gd.asPanelSpriteObject(object);\n\n    return (\n      <Column>\n        <Line>\n          <ResourceSelectorWithThumbnail\n            project={project}\n            resourceSources={resourceSources}\n            onChooseResource={onChooseResource}\n            resourceExternalEditors={resourceExternalEditors}\n            resourceKind=\"image\"\n            resourceName={panelSpriteObject.getTexture()}\n            onChange={resourceName => {\n              panelSpriteObject.setTexture(resourceName);\n              this.forceUpdate();\n            }}\n            floatingLabelText={<Trans>Select an image</Trans>}\n          />\n        </Line>\n        <Line>\n          <Checkbox\n            label={\n              <Trans>\n                Repeat borders and center textures (instead of stretching them)\n              </Trans>\n            }\n            checked={panelSpriteObject.isTiled()}\n            onCheck={(e, checked) => {\n              panelSpriteObject.setTiled(checked);\n              this.forceUpdate();\n            }}\n          />\n        </Line>\n        <ResponsiveLineStackLayout>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Top margin</Trans>}\n            fullWidth\n            type=\"number\"\n            value={panelSpriteObject.getTopMargin()}\n            onChange={value => {\n              panelSpriteObject.setTopMargin(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Bottom margin</Trans>}\n            fullWidth\n            type=\"number\"\n            value={panelSpriteObject.getBottomMargin()}\n            onChange={value => {\n              panelSpriteObject.setBottomMargin(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Left margin</Trans>}\n            fullWidth\n            type=\"number\"\n            value={panelSpriteObject.getLeftMargin()}\n            onChange={value => {\n              panelSpriteObject.setLeftMargin(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Right margin</Trans>}\n            fullWidth\n            type=\"number\"\n            value={panelSpriteObject.getRightMargin()}\n            onChange={value => {\n              panelSpriteObject.setRightMargin(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Default width (in pixels)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={panelSpriteObject.getWidth()}\n            onChange={value => {\n              panelSpriteObject.setWidth(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Default height (in pixels)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={panelSpriteObject.getHeight()}\n            onChange={value => {\n              panelSpriteObject.setHeight(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n      </Column>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport SpritesList from './SpritesList';\nimport Add from '@material-ui/icons/Add';\nimport Delete from '@material-ui/icons/Delete';\nimport IconButton from '../../../UI/IconButton';\nimport FlatButton from '../../../UI/FlatButton';\nimport RaisedButton from '../../../UI/RaisedButton';\nimport { mapFor } from '../../../Utils/MapFor';\nimport SemiControlledTextField from '../../../UI/SemiControlledTextField';\nimport Dialog from '../../../UI/Dialog';\nimport HelpButton from '../../../UI/HelpButton';\nimport EmptyMessage from '../../../UI/EmptyMessage';\nimport MiniToolbar, { MiniToolbarText } from '../../../UI/MiniToolbar';\nimport DragHandle from '../../../UI/DragHandle';\nimport ContextMenu from '../../../UI/Menu/ContextMenu';\nimport { showWarningBox } from '../../../UI/Messages/MessageBox';\nimport ResourcesLoader from '../../../ResourcesLoader';\nimport PointsEditor from './PointsEditor';\nimport CollisionMasksEditor from './CollisionMasksEditor';\nimport {\n  deleteSpritesFromAnimation,\n  duplicateSpritesInAnimation,\n} from './Utils/SpriteObjectHelper';\nimport { type EditorProps } from '../EditorProps.flow';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../../../ResourcesList/ResourceExternalEditor.flow';\nimport { Column, Line } from '../../../UI/Grid';\nimport { ResponsiveLineStackLayout } from '../../../UI/Layout';\n\nconst gd = global.gd;\n\nconst styles = {\n  gridList: {\n    overflowY: 'auto',\n  },\n  animationTitle: {\n    flex: 1,\n  },\n  animationTools: {\n    flexShrink: 0,\n  },\n};\n\nconst AddAnimationLine = ({ onAdd, extraTools }) => (\n  <Column expand>\n    <Line justifyContent=\"space-between\">\n      {extraTools}\n      <RaisedButton\n        label={<Trans>Add an animation</Trans>}\n        primary\n        onClick={onAdd}\n        labelPosition=\"before\"\n        icon={<Add />}\n      />\n    </Line>\n  </Column>\n);\n\ntype AnimationProps = {|\n  animation: gdAnimation,\n  id: number,\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  onRemove: () => void,\n  resourcesLoader: typeof ResourcesLoader,\n  onSpriteContextMenu: (x: number, y: number, sprite: gdSprite) => void,\n  selectedSprites: {\n    [number]: boolean,\n  },\n  onSelectSprite: (sprite: gdSprite, selected: boolean) => void,\n  onReplaceDirection: (\n    directionIndex: number,\n    newDirection: gdDirection\n  ) => void,\n  objectName: string,\n  onChangeName: string => void,\n|};\n\nclass Animation extends React.Component<AnimationProps, void> {\n  render() {\n    const {\n      animation,\n      id,\n      project,\n      resourceSources,\n      onRemove,\n      onChooseResource,\n      resourceExternalEditors,\n      resourcesLoader,\n      onSpriteContextMenu,\n      selectedSprites,\n      onSelectSprite,\n      onReplaceDirection,\n      objectName,\n      onChangeName,\n    } = this.props;\n\n    const animationName = animation.getName();\n    return (\n      <div>\n        <MiniToolbar smallest>\n          <DragHandle />\n          <MiniToolbarText>Animation #{id} </MiniToolbarText>\n          <Column expand margin>\n            <SemiControlledTextField\n              commitOnBlur\n              margin=\"none\"\n              value={animation.getName()}\n              hintText={t`Optional animation name`}\n              onChange={text => onChangeName(text)}\n              fullWidth\n            />\n          </Column>\n          <IconButton onClick={onRemove}>\n            <Delete />\n          </IconButton>\n        </MiniToolbar>\n        {mapFor(0, animation.getDirectionsCount(), i => {\n          const direction = animation.getDirection(i);\n          return (\n            <SpritesList\n              direction={direction}\n              key={i}\n              project={project}\n              resourcesLoader={resourcesLoader}\n              resourceSources={resourceSources}\n              onChooseResource={onChooseResource}\n              resourceExternalEditors={resourceExternalEditors}\n              onSpriteContextMenu={onSpriteContextMenu}\n              selectedSprites={selectedSprites}\n              onSelectSprite={onSelectSprite}\n              onReplaceByDirection={newDirection =>\n                onReplaceDirection(i, newDirection)\n              }\n              objectName={objectName}\n              animationName={animationName}\n              onChangeName={onChangeName}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst SortableAnimation = SortableElement(Animation);\n\nconst SortableAnimationsList = SortableContainer(\n  ({\n    spriteObject,\n    objectName,\n    onAddAnimation,\n    onRemoveAnimation,\n    onChangeAnimationName,\n    project,\n    resourcesLoader,\n    resourceSources,\n    onChooseResource,\n    resourceExternalEditors,\n    extraBottomTools,\n    onSpriteContextMenu,\n    selectedSprites,\n    onSelectSprite,\n    onReplaceDirection,\n  }) => {\n    return (\n      <div style={styles.gridList}>\n        {[\n          ...mapFor(0, spriteObject.getAnimationsCount(), i => {\n            const animation = spriteObject.getAnimation(i);\n            return (\n              <SortableAnimation\n                key={i}\n                index={i}\n                id={i}\n                animation={animation}\n                project={project}\n                resourcesLoader={resourcesLoader}\n                resourceSources={resourceSources}\n                onChooseResource={onChooseResource}\n                resourceExternalEditors={resourceExternalEditors}\n                onRemove={() => onRemoveAnimation(i)}\n                onChangeName={newName => onChangeAnimationName(i, newName)}\n                onSpriteContextMenu={onSpriteContextMenu}\n                selectedSprites={selectedSprites}\n                onSelectSprite={onSelectSprite}\n                onReplaceDirection={(directionId, newDirection) =>\n                  onReplaceDirection(i, directionId, newDirection)\n                }\n                objectName={objectName}\n              />\n            );\n          }),\n          <AddAnimationLine\n            onAdd={onAddAnimation}\n            key=\"add-animation-line\"\n            disabled\n            index={spriteObject.getAnimationsCount()}\n            extraTools={extraBottomTools}\n          />,\n        ]}\n      </div>\n    );\n  }\n);\n\ntype AnimationsListContainerProps = {|\n  spriteObject: gdSpriteObject,\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  resourcesLoader: typeof ResourcesLoader,\n  extraBottomTools: React.Node,\n  onSizeUpdated: () => void,\n  objectName: string,\n|};\n\ntype AnimationsListContainerState = {|\n  selectedSprites: {\n    [number]: boolean,\n  },\n|};\n\nclass AnimationsListContainer extends React.Component<\n  AnimationsListContainerProps,\n  AnimationsListContainerState\n> {\n  state = {\n    selectedSprites: {},\n  };\n  spriteContextMenu: ?ContextMenu;\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    this.props.spriteObject.moveAnimation(oldIndex, newIndex);\n    this.forceUpdate();\n  };\n\n  addAnimation = () => {\n    const emptyAnimation = new gd.Animation();\n    emptyAnimation.setDirectionsCount(1);\n    this.props.spriteObject.addAnimation(emptyAnimation);\n    this.forceUpdate();\n    this.props.onSizeUpdated();\n  };\n\n  removeAnimation = i => {\n    //eslint-disable-next-line\n    const answer = confirm('Are you sure you want to remove this animation?');\n\n    if (answer) {\n      this.props.spriteObject.removeAnimation(i);\n      this.forceUpdate();\n      this.props.onSizeUpdated();\n    }\n  };\n\n  changeAnimationName = (i, newName) => {\n    const { spriteObject } = this.props;\n\n    const otherNames = mapFor(0, spriteObject.getAnimationsCount(), index => {\n      return index === i\n        ? undefined // Don't check the current animation name as we're changing it.\n        : spriteObject.getAnimation(index).getName();\n    });\n\n    if (newName !== '' && otherNames.filter(name => name === newName).length) {\n      showWarningBox(\n        'Another animation with this name already exists. Please use another name.'\n      );\n      return;\n    }\n\n    spriteObject.getAnimation(i).setName(newName);\n    this.forceUpdate();\n  };\n\n  deleteSelection = () => {\n    const { spriteObject } = this.props;\n\n    mapFor(0, spriteObject.getAnimationsCount(), index => {\n      const animation = spriteObject.getAnimation(index);\n      deleteSpritesFromAnimation(animation, this.state.selectedSprites);\n    });\n\n    this.setState({\n      selectedSprites: {},\n    });\n  };\n\n  duplicateSelection = () => {\n    const { spriteObject } = this.props;\n\n    mapFor(0, spriteObject.getAnimationsCount(), index => {\n      const animation = spriteObject.getAnimation(index);\n      duplicateSpritesInAnimation(animation, this.state.selectedSprites);\n    });\n\n    this.setState({\n      selectedSprites: {},\n    });\n  };\n\n  openSpriteContextMenu = (x, y, sprite, index) => {\n    this.selectSprite(sprite, true);\n    if (this.spriteContextMenu) this.spriteContextMenu.open(x, y);\n  };\n\n  selectSprite = (sprite, selected) => {\n    this.setState({\n      selectedSprites: {\n        ...this.state.selectedSprites,\n        [sprite.ptr]: selected,\n      },\n    });\n  };\n\n  replaceDirection = (animationId, directionId, newDirection) => {\n    this.props.spriteObject\n      .getAnimation(animationId)\n      .setDirection(newDirection, directionId);\n    this.forceUpdate();\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.spriteObject.getAnimationsCount() === 0 && (\n          <EmptyMessage>\n            <Trans>\n              This object has no animations containing images. Start by adding\n              an animation.\n            </Trans>\n          </EmptyMessage>\n        )}\n        <SortableAnimationsList\n          spriteObject={this.props.spriteObject}\n          objectName={this.props.objectName}\n          helperClass=\"sortable-helper\"\n          project={this.props.project}\n          onSortEnd={this.onSortEnd}\n          onAddAnimation={this.addAnimation}\n          onChangeAnimationName={this.changeAnimationName}\n          onRemoveAnimation={this.removeAnimation}\n          onReplaceDirection={this.replaceDirection}\n          onSpriteContextMenu={this.openSpriteContextMenu}\n          selectedSprites={this.state.selectedSprites}\n          onSelectSprite={this.selectSprite}\n          resourcesLoader={this.props.resourcesLoader}\n          resourceSources={this.props.resourceSources}\n          resourceExternalEditors={this.props.resourceExternalEditors}\n          onChooseResource={this.props.onChooseResource}\n          extraBottomTools={this.props.extraBottomTools}\n          useDragHandle\n          lockAxis=\"y\"\n          axis=\"y\"\n        />\n        <ContextMenu\n          ref={spriteContextMenu =>\n            (this.spriteContextMenu = spriteContextMenu)\n          }\n          buildMenuTemplate={() => [\n            {\n              label: 'Delete selection',\n              click: () => this.deleteSelection(),\n            },\n            {\n              label: 'Duplicate selection',\n              click: () => this.duplicateSelection(),\n            },\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\ntype State = {|\n  pointsEditorOpen: boolean,\n  collisionMasksEditorOpen: boolean,\n|};\n\nexport default class SpriteEditor extends React.Component<EditorProps, State> {\n  state = {\n    pointsEditorOpen: false,\n    collisionMasksEditorOpen: false,\n  };\n\n  resourcesLoader: typeof ResourcesLoader;\n\n  constructor(props: EditorProps) {\n    super(props);\n\n    this.resourcesLoader = ResourcesLoader;\n  }\n\n  openPointsEditor = (open: boolean = true) => {\n    this.setState({\n      pointsEditorOpen: open,\n    });\n  };\n\n  openCollisionMasksEditor = (open: boolean = true) => {\n    this.setState({\n      collisionMasksEditorOpen: open,\n    });\n  };\n\n  render() {\n    const {\n      object,\n      project,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n      onSizeUpdated,\n      objectName,\n    } = this.props;\n    const spriteObject = gd.asSpriteObject(object);\n\n    return (\n      <div>\n        <AnimationsListContainer\n          spriteObject={spriteObject}\n          resourcesLoader={this.resourcesLoader}\n          resourceSources={resourceSources}\n          onChooseResource={onChooseResource}\n          resourceExternalEditors={resourceExternalEditors}\n          project={project}\n          objectName={objectName}\n          onSizeUpdated={onSizeUpdated}\n          extraBottomTools={\n            <ResponsiveLineStackLayout noMargin>\n              <RaisedButton\n                label={<Trans>Edit hitboxes</Trans>}\n                primary={false}\n                onClick={() => this.openCollisionMasksEditor(true)}\n                disabled={spriteObject.getAnimationsCount() === 0}\n              />\n              <RaisedButton\n                label={<Trans>Edit points</Trans>}\n                primary={false}\n                onClick={() => this.openPointsEditor(true)}\n                disabled={spriteObject.getAnimationsCount() === 0}\n              />\n            </ResponsiveLineStackLayout>\n          }\n        />\n        {this.state.pointsEditorOpen && (\n          <Dialog\n            actions={\n              <FlatButton\n                label={<Trans>Close</Trans>}\n                primary\n                onClick={() => this.openPointsEditor(false)}\n              />\n            }\n            secondaryActions={[\n              <HelpButton\n                helpPagePath=\"/objects/sprite/edit-points\"\n                key=\"help\"\n              />,\n            ]}\n            noMargin\n            modal\n            onRequestClose={() => this.openPointsEditor(false)}\n            open={this.state.pointsEditorOpen}\n          >\n            <PointsEditor\n              object={spriteObject}\n              resourcesLoader={this.resourcesLoader}\n              project={project}\n              onPointsUpdated={\n                () =>\n                  this.forceUpdate() /*Force update to ensure dialog is properly positioned*/\n              }\n            />\n          </Dialog>\n        )}\n        {this.state.collisionMasksEditorOpen && (\n          <Dialog\n            actions={\n              <FlatButton\n                label={<Trans>Close</Trans>}\n                primary\n                onClick={() => this.openCollisionMasksEditor(false)}\n              />\n            }\n            secondaryActions={[\n              <HelpButton\n                helpPagePath=\"/objects/sprite/collision-mask\"\n                key=\"help\"\n              />,\n            ]}\n            noMargin\n            modal\n            onRequestClose={() => this.openCollisionMasksEditor(false)}\n            open={this.state.collisionMasksEditorOpen}\n          >\n            <CollisionMasksEditor\n              object={spriteObject}\n              resourcesLoader={this.resourcesLoader}\n              project={project}\n              onCollisionMasksUpdated={\n                () =>\n                  this.forceUpdate() /*Force update to ensure dialog is properly positioned*/\n              }\n            />\n          </Dialog>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\r\nimport { Trans } from '@lingui/macro';\r\n\r\nimport React, { Component } from 'react';\r\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\r\nimport { mapFor } from '../../../Utils/MapFor';\r\nimport Add from '@material-ui/icons/Add';\r\nimport DirectionTools from './DirectionTools';\r\nimport MiniToolbar from '../../../UI/MiniToolbar';\r\nimport ImageThumbnail, {\r\n  thumbnailContainerStyle,\r\n} from '../../../ResourcesList/ResourceThumbnail/ImageThumbnail';\r\nimport {\r\n  copySpritePoints,\r\n  copySpritePolygons,\r\n  allDirectionSpritesHaveSamePointsAs,\r\n  allDirectionSpritesHaveSameCollisionMasksAs,\r\n} from './Utils/SpriteObjectHelper';\r\nimport ResourcesLoader from '../../../ResourcesLoader';\r\nimport {\r\n  type ResourceSource,\r\n  type ChooseResourceFunction,\r\n} from '../../../ResourcesList/ResourceSource.flow';\r\nimport { type ResourceExternalEditor } from '../../../ResourcesList/ResourceExternalEditor.flow';\r\nimport { applyResourceDefaults } from '../../../ResourcesList/ResourceUtils';\r\nimport FlatButton from '../../../UI/FlatButton';\r\nimport ThemeConsumer from '../../../UI/Theme/ThemeConsumer';\r\nconst gd = global.gd;\r\nconst path = require('path');\r\n\r\nconst SPRITE_SIZE = 100; //TODO: Factor with Thumbnail\r\n\r\nconst styles = {\r\n  spritesList: {\r\n    whiteSpace: 'nowrap',\r\n    overflowY: 'hidden',\r\n  },\r\n  thumbnailExtraStyle: {\r\n    marginRight: 10,\r\n  },\r\n  spriteThumbnailImage: {\r\n    maxWidth: SPRITE_SIZE,\r\n    maxHeight: SPRITE_SIZE,\r\n    verticalAlign: 'middle',\r\n  },\r\n};\r\n\r\nconst AddSpriteButton = SortableElement(({ displayHint, onAdd }) => {\r\n  return (\r\n    <ThemeConsumer>\r\n      {muiTheme => (\r\n        <div\r\n          style={{\r\n            ...thumbnailContainerStyle,\r\n            backgroundColor: muiTheme.list.itemsBackgroundColor,\r\n          }}\r\n        >\r\n          <FlatButton\r\n            onClick={onAdd}\r\n            label={<Trans>Add</Trans>}\r\n            icon={<Add />}\r\n          />\r\n        </div>\r\n      )}\r\n    </ThemeConsumer>\r\n  );\r\n});\r\n\r\nconst SortableSpriteThumbnail = SortableElement(\r\n  ({ sprite, project, resourcesLoader, selected, onSelect, onContextMenu }) => {\r\n    return (\r\n      <ImageThumbnail\r\n        selectable\r\n        selected={selected}\r\n        onSelect={onSelect}\r\n        onContextMenu={onContextMenu}\r\n        resourceName={sprite.getImageName()}\r\n        resourcesLoader={resourcesLoader}\r\n        project={project}\r\n        style={styles.thumbnailExtraStyle}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nconst SortableList = SortableContainer(\r\n  ({\r\n    direction,\r\n    project,\r\n    resourcesLoader,\r\n    onAddSprite,\r\n    selectedSprites,\r\n    onSelectSprite,\r\n    onSpriteContextMenu,\r\n  }) => {\r\n    const spritesCount = direction.getSpritesCount();\r\n    return (\r\n      <div style={styles.spritesList}>\r\n        {[\r\n          ...mapFor(0, spritesCount, i => {\r\n            const sprite = direction.getSprite(i);\r\n            return (\r\n              <SortableSpriteThumbnail\r\n                sprite={sprite}\r\n                key={sprite.ptr}\r\n                index={i}\r\n                selected={!!selectedSprites[sprite.ptr]}\r\n                onContextMenu={(x, y) => onSpriteContextMenu(x, y, sprite)}\r\n                onSelect={selected => onSelectSprite(sprite, selected)}\r\n                resourcesLoader={resourcesLoader}\r\n                project={project}\r\n              />\r\n            );\r\n          }),\r\n          <AddSpriteButton\r\n            displayHint={!direction.getSpritesCount()}\r\n            key=\"add-sprite-button\"\r\n            disabled\r\n            index={spritesCount}\r\n            onAdd={onAddSprite}\r\n          />,\r\n        ]}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\n/**\r\n * Check if all sprites of the given direction have the same points and collision masks\r\n */\r\nconst checkDirectionPointsAndCollisionsMasks = (direction: gdDirection) => {\r\n  let allDirectionSpritesHaveSamePoints = false;\r\n  let allDirectionSpritesHaveSameCollisionMasks = false;\r\n  if (direction.getSpritesCount() !== 0) {\r\n    allDirectionSpritesHaveSamePoints = allDirectionSpritesHaveSamePointsAs(\r\n      direction.getSprite(0),\r\n      direction\r\n    );\r\n    allDirectionSpritesHaveSameCollisionMasks = allDirectionSpritesHaveSameCollisionMasksAs(\r\n      direction.getSprite(0),\r\n      direction\r\n    );\r\n  }\r\n\r\n  return {\r\n    allDirectionSpritesHaveSamePoints,\r\n    allDirectionSpritesHaveSameCollisionMasks,\r\n  };\r\n};\r\n\r\ntype Props = {|\r\n  direction: gdDirection,\r\n  project: gdProject,\r\n  resourcesLoader: typeof ResourcesLoader,\r\n  resourceSources: Array<ResourceSource>,\r\n  resourceExternalEditors: Array<ResourceExternalEditor>,\r\n  onChooseResource: ChooseResourceFunction,\r\n  onSpriteContextMenu: (x: number, y: number, sprite: gdSprite) => void,\r\n  selectedSprites: {\r\n    [number]: boolean,\r\n  },\r\n  onSelectSprite: (sprite: gdSprite, selected: boolean) => void,\r\n  onReplaceByDirection: (newDirection: gdDirection) => void,\r\n  onChangeName: (newAnimationName: string) => void, // Used by piskel to set the name, if there is no name\r\n  objectName: string, // This is used for the default name of images created with Piskel.\r\n  animationName: string, // This is used for the default name of images created with Piskel.\r\n|};\r\n\r\nexport default class SpritesList extends Component<Props, void> {\r\n  onSortEnd = ({\r\n    oldIndex,\r\n    newIndex,\r\n  }: {\r\n    oldIndex: number,\r\n    newIndex: number,\r\n  }) => {\r\n    this.props.direction.moveSprite(oldIndex, newIndex);\r\n    this.forceUpdate();\r\n  };\r\n\r\n  onAddSprite = () => {\r\n    const {\r\n      resourceSources,\r\n      onChooseResource,\r\n      project,\r\n      direction,\r\n    } = this.props;\r\n    if (!resourceSources) return;\r\n    const sources = resourceSources.filter(source => source.kind === 'image');\r\n    if (!sources.length) return;\r\n\r\n    const {\r\n      allDirectionSpritesHaveSameCollisionMasks,\r\n      allDirectionSpritesHaveSamePoints,\r\n    } = checkDirectionPointsAndCollisionsMasks(direction);\r\n\r\n    onChooseResource(sources[0].name).then(resources => {\r\n      resources.forEach(resource => {\r\n        applyResourceDefaults(project, resource);\r\n        project.getResourcesManager().addResource(resource);\r\n\r\n        const sprite = new gd.Sprite();\r\n        sprite.setImageName(resource.getName());\r\n        if (allDirectionSpritesHaveSamePoints) {\r\n          copySpritePoints(direction.getSprite(0), sprite);\r\n        }\r\n        if (allDirectionSpritesHaveSameCollisionMasks) {\r\n          copySpritePolygons(direction.getSprite(0), sprite);\r\n        }\r\n        direction.addSprite(sprite);\r\n      });\r\n\r\n      // Important, we are responsible for deleting the resources that were given to us.\r\n      // Otherwise we have a memory leak, as calling addResource is making a copy of the resource.\r\n      resources.forEach(resource => resource.delete());\r\n\r\n      this.forceUpdate();\r\n    });\r\n  };\r\n\r\n  editWith = (externalEditor: ResourceExternalEditor) => {\r\n    const {\r\n      project,\r\n      direction,\r\n      resourcesLoader,\r\n      onReplaceByDirection,\r\n      onChangeName,\r\n      objectName,\r\n      animationName,\r\n    } = this.props;\r\n    const resourceNames = mapFor(0, direction.getSpritesCount(), i => {\r\n      return direction.getSprite(i).getImageName();\r\n    });\r\n\r\n    const {\r\n      allDirectionSpritesHaveSameCollisionMasks,\r\n      allDirectionSpritesHaveSamePoints,\r\n    } = checkDirectionPointsAndCollisionsMasks(direction);\r\n\r\n    let externalEditorData = {};\r\n    const metadataRaw = direction.getMetadata();\r\n    if (metadataRaw) {\r\n      try {\r\n        externalEditorData = JSON.parse(metadataRaw);\r\n      } catch (e) {\r\n        console.error('Malformed metadata', e);\r\n      }\r\n    }\r\n\r\n    externalEditor.edit({\r\n      project,\r\n      resourcesLoader,\r\n      singleFrame: false,\r\n      resourceNames,\r\n      extraOptions: {\r\n        fps:\r\n          direction.getTimeBetweenFrames() > 0\r\n            ? 1 / direction.getTimeBetweenFrames()\r\n            : 1,\r\n        name:\r\n          animationName ||\r\n          (resourceNames.length > 0\r\n            ? path.basename(resourceNames[0], path.extname(resourceNames[0]))\r\n            : objectName),\r\n        isLooping: direction.isLooping(),\r\n        externalEditorData,\r\n      },\r\n      onChangesSaved: resources => {\r\n        const newDirection = new gd.Direction();\r\n        newDirection.setTimeBetweenFrames(direction.getTimeBetweenFrames());\r\n        newDirection.setLoop(direction.isLooping());\r\n        resources.forEach(resource => {\r\n          const sprite = new gd.Sprite();\r\n          sprite.setImageName(resource.name);\r\n          // Restore collision masks and points\r\n          if (resource.originalIndex !== undefined) {\r\n            const originalSprite = direction.getSprite(resource.originalIndex);\r\n            copySpritePoints(originalSprite, sprite);\r\n            copySpritePolygons(originalSprite, sprite);\r\n          } else {\r\n            if (allDirectionSpritesHaveSamePoints) {\r\n              copySpritePoints(direction.getSprite(0), sprite);\r\n            }\r\n            if (allDirectionSpritesHaveSameCollisionMasks) {\r\n              copySpritePolygons(direction.getSprite(0), sprite);\r\n            }\r\n          }\r\n          newDirection.addSprite(sprite);\r\n          sprite.delete();\r\n        });\r\n\r\n        // set metadata if there is such on the direction\r\n        if (resources[0].metadata) {\r\n          newDirection.setMetadata(JSON.stringify(resources[0].metadata));\r\n        }\r\n\r\n        // Burst the ResourcesLoader cache to force images to be reloaded (and not cached by the browser).\r\n        resourcesLoader.burstUrlsCacheForResources(project, resourceNames);\r\n        onReplaceByDirection(newDirection);\r\n        // Set optional animation name if the user hasn't done so\r\n        if (resources[0].newAnimationName) {\r\n          onChangeName(resources[0].newAnimationName);\r\n        }\r\n        newDirection.delete();\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MiniToolbar justifyContent=\"flex-end\" smallest>\r\n          <DirectionTools\r\n            direction={this.props.direction}\r\n            resourcesLoader={this.props.resourcesLoader}\r\n            project={this.props.project}\r\n            resourceExternalEditors={this.props.resourceExternalEditors}\r\n            onEditWith={this.editWith}\r\n          />\r\n        </MiniToolbar>\r\n        <SortableList\r\n          resourcesLoader={this.props.resourcesLoader}\r\n          direction={this.props.direction}\r\n          project={this.props.project}\r\n          onSortEnd={this.onSortEnd}\r\n          onAddSprite={this.onAddSprite}\r\n          selectedSprites={this.props.selectedSprites}\r\n          onSelectSprite={this.props.onSelectSprite}\r\n          onSpriteContextMenu={this.props.onSpriteContextMenu}\r\n          helperClass=\"sortable-helper\"\r\n          lockAxis=\"x\"\r\n          axis=\"x\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport EmptyMessage from '../../../../UI/EmptyMessage';\nimport { Line, Column } from '../../../../UI/Grid';\nimport { mapFor } from '../../../../Utils/MapFor';\nimport PointsList from './PointsList';\nimport PointsPreview from './PointsPreview';\nimport ImagePreview from '../../../../ResourcesList/ResourcePreview/ImagePreview';\nimport {\n  getCurrentElements,\n  allSpritesHaveSamePointsAs,\n  copyAnimationsSpritePoints,\n} from '../Utils/SpriteObjectHelper';\nimport SpriteSelector from '../Utils/SpriteSelector';\nimport every from 'lodash/every';\nconst gd = global.gd;\n\nexport default class PointsEditor extends Component {\n  state = {\n    animationIndex: 0,\n    directionIndex: 0,\n    spriteIndex: 0,\n    samePointsForAnimations: true,\n    samePointsForSprites: true,\n  };\n\n  componentDidMount() {\n    this._updateSamePointsToggles();\n  }\n\n  _updatePoints = () => {\n    const { object } = this.props;\n    const { animationIndex, directionIndex, spriteIndex } = this.state;\n    const spriteObject = gd.asSpriteObject(object);\n\n    const { animation, sprite } = getCurrentElements(\n      spriteObject,\n      animationIndex,\n      directionIndex,\n      spriteIndex\n    );\n\n    if (animation && sprite) {\n      if (this.state.samePointsForAnimations) {\n        mapFor(0, spriteObject.getAnimationsCount(), i => {\n          const otherAnimation = spriteObject.getAnimation(i);\n          copyAnimationsSpritePoints(sprite, otherAnimation);\n        });\n      } else if (this.state.samePointsForSprites) {\n        copyAnimationsSpritePoints(sprite, animation);\n      }\n    }\n\n    this.forceUpdate(); // Refresh the preview\n    if (this.props.onPointsUpdated) this.props.onPointsUpdated();\n  };\n\n  chooseAnimation = index => {\n    this.setState(\n      {\n        animationIndex: index,\n        directionIndex: 0,\n        spriteIndex: 0,\n      },\n      () => this._updateSamePointsToggles()\n    );\n  };\n\n  chooseDirection = index => {\n    this.setState({\n      directionIndex: index,\n      spriteIndex: 0,\n    });\n  };\n\n  chooseSprite = index => {\n    this.setState({\n      spriteIndex: index,\n    });\n  };\n\n  _updateSamePointsToggles = () => {\n    const { object } = this.props;\n    const { animationIndex, directionIndex, spriteIndex } = this.state;\n    const spriteObject = gd.asSpriteObject(object);\n\n    const { animation, sprite } = getCurrentElements(\n      spriteObject,\n      animationIndex,\n      directionIndex,\n      spriteIndex\n    );\n    if (!animation || !sprite) return;\n\n    this.setState({\n      samePointsForAnimations: every(\n        mapFor(0, spriteObject.getAnimationsCount(), i => {\n          const otherAnimation = spriteObject.getAnimation(i);\n          return allSpritesHaveSamePointsAs(sprite, otherAnimation);\n        })\n      ),\n      samePointsForSprites: allSpritesHaveSamePointsAs(sprite, animation),\n    });\n  };\n\n  _setSamePointsForAllAnimations = enable => {\n    if (enable) {\n      // eslint-disable-next-line\n      const answer = confirm(\n        \"Having the same points for all animations will erase and reset all the other animations points. This can't be undone. Are you sure you want to share these points amongst all the animations of the object?\"\n      );\n      if (!answer) return;\n    }\n\n    this.setState(\n      {\n        samePointsForAnimations: enable,\n        samePointsForSprites: enable ? true : this.state.samePointsForSprites,\n      },\n      () => {\n        this._updatePoints();\n      }\n    );\n  };\n\n  _setSamePointsForAllSprites = enable => {\n    if (enable) {\n      // eslint-disable-next-line\n      const answer = confirm(\n        \"Having the same points for all frames will erase and reset all the other frames points. This can't be undone. Are you sure you want to share these points amongst all the frames of the animation?\"\n      );\n      if (!answer) return;\n    }\n\n    this.setState(\n      {\n        samePointsForAnimations: enable\n          ? this.state.samePointsForAnimations\n          : false,\n        samePointsForSprites: enable,\n      },\n      () => {\n        this._updatePoints();\n      }\n    );\n  };\n\n  render() {\n    const { object, resourcesLoader, project } = this.props;\n    const {\n      samePointsForAnimations,\n      samePointsForSprites,\n      animationIndex,\n      directionIndex,\n      spriteIndex,\n    } = this.state;\n    const spriteObject = gd.asSpriteObject(object);\n\n    if (!object.getAnimationsCount()) return null;\n    const { hasValidSprite, sprite } = getCurrentElements(\n      spriteObject,\n      animationIndex,\n      directionIndex,\n      spriteIndex\n    );\n\n    return (\n      <div>\n        <ImagePreview\n          resourceName={hasValidSprite ? sprite.getImageName() : ''}\n          resourcesLoader={resourcesLoader}\n          project={project}\n          renderOverlay={({ imageWidth, imageHeight, imageZoomFactor }) =>\n            hasValidSprite && (\n              <PointsPreview\n                imageWidth={imageWidth}\n                imageHeight={imageHeight}\n                imageZoomFactor={imageZoomFactor}\n                pointsContainer={sprite}\n                onPointsUpdated={this._updatePoints}\n              />\n            )\n          }\n        />\n        <Line>\n          <Column expand>\n            <SpriteSelector\n              spriteObject={spriteObject}\n              animationIndex={animationIndex}\n              directionIndex={directionIndex}\n              spriteIndex={spriteIndex}\n              chooseAnimation={this.chooseAnimation}\n              chooseDirection={this.chooseDirection}\n              chooseSprite={this.chooseSprite}\n              sameForAllAnimations={samePointsForAnimations}\n              sameForAllSprites={samePointsForSprites}\n              setSameForAllAnimations={this._setSamePointsForAllAnimations}\n              setSameForAllSprites={this._setSamePointsForAllSprites}\n              setSameForAllAnimationsLabel={\n                <Trans>Share same points for all animations</Trans>\n              }\n              setSameForAllSpritesLabel={\n                <Trans>\n                  Share same points for all sprites of this animation\n                </Trans>\n              }\n            />\n          </Column>\n        </Line>\n        {!!sprite && (\n          <PointsList\n            pointsContainer={sprite}\n            onPointsUpdated={this._updatePoints}\n          />\n        )}\n        {!sprite && (\n          <EmptyMessage>\n            <Trans>Choose an animation and frame to edit the points</Trans>\n          </EmptyMessage>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableHeaderColumn,\n  TableRow,\n  TableRowColumn,\n} from '../../../../UI/Table';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport newNameGenerator from '../../../../Utils/NewNameGenerator';\nimport { mapVector } from '../../../../Utils/MapFor';\nimport styles from './styles';\nimport PointRow from './PointRow';\nimport AddPointRow from './AddPointRow';\nconst gd = global.gd;\n\nconst SortableAddPointRow = SortableElement(AddPointRow);\nconst SortablePointRow = SortableElement(PointRow);\n\nclass PointsListBody extends Component {\n  state = {\n    nameErrors: {},\n  };\n\n  _onPointsUpdated() {\n    this.forceUpdate();\n    this.props.onPointsUpdated();\n  }\n\n  updateOriginPointX = newValue => {\n    this.props.pointsContainer.getOrigin().setX(newValue);\n    this._onPointsUpdated();\n  };\n\n  updateOriginPointY = newValue => {\n    this.props.pointsContainer.getOrigin().setY(newValue);\n    this._onPointsUpdated();\n  };\n\n  updateCenterPointX = newValue => {\n    this.props.pointsContainer.getCenter().setX(newValue);\n    this._onPointsUpdated();\n  };\n\n  updateCenterPointY = newValue => {\n    this.props.pointsContainer.getCenter().setY(newValue);\n    this._onPointsUpdated();\n  };\n\n  updatePointX = (point, newValue) => {\n    point.setX(newValue);\n    this._onPointsUpdated();\n  };\n\n  updatePointY = (point, newValue) => {\n    point.setY(newValue);\n    this._onPointsUpdated();\n  };\n\n  render() {\n    const { pointsContainer } = this.props;\n\n    const nonDefaultPoints = pointsContainer.getAllNonDefaultPoints();\n    const pointsRows = mapVector(nonDefaultPoints, (point, i) => {\n      const pointName = point.getName();\n\n      return (\n        <SortablePointRow\n          index={i}\n          disabled\n          key={'point-' + pointName}\n          pointX={point.getX()}\n          pointY={point.getY()}\n          onChangePointX={newValue => this.updatePointX(point, newValue)}\n          onChangePointY={newValue => this.updatePointY(point, newValue)}\n          pointName={pointName}\n          nameError={this.state.nameErrors[pointName]}\n          onBlur={event => {\n            const newName = event.target.value;\n            if (pointName === newName) return;\n\n            let success = true;\n            if (pointsContainer.hasPoint(newName)) {\n              success = false;\n            } else {\n              point.setName(newName);\n            }\n\n            this.setState({\n              nameErrors: {\n                ...this.state.nameErrors,\n                [pointName]: !success,\n              },\n            });\n          }}\n          onRemove={() => {\n            //eslint-disable-next-line\n            const answer = confirm(\n              \"Are you sure you want to remove this point? This can't be undone.\"\n            );\n            if (!answer) return;\n\n            pointsContainer.delPoint(pointName);\n            this._onPointsUpdated();\n          }}\n        />\n      );\n    });\n\n    const originPoint = pointsContainer.getOrigin();\n    const centerPoint = pointsContainer.getCenter();\n\n    const originRow = (\n      <SortablePointRow\n        index={0}\n        key={'origin-point-row'}\n        pointName=\"Origin\"\n        pointX={originPoint.getX()}\n        pointY={originPoint.getY()}\n        onChangePointX={this.updateOriginPointX}\n        onChangePointY={this.updateOriginPointY}\n        disabled\n      />\n    );\n    const centerRow = (\n      <SortablePointRow\n        index={1}\n        key={'center-point-row'}\n        pointName=\"Center\"\n        isAutomatic={pointsContainer.isDefaultCenterPoint()}\n        pointX={centerPoint.getX()}\n        pointY={centerPoint.getY()}\n        onChangePointX={this.updateCenterPointX}\n        onChangePointY={this.updateCenterPointY}\n        disabled\n        onEdit={\n          pointsContainer.isDefaultCenterPoint()\n            ? () => {\n                pointsContainer.setDefaultCenterPoint(false);\n                this._onPointsUpdated();\n              }\n            : null\n        }\n        onRemove={\n          !pointsContainer.isDefaultCenterPoint()\n            ? () => {\n                pointsContainer.setDefaultCenterPoint(true);\n                this._onPointsUpdated();\n              }\n            : null\n        }\n      />\n    );\n\n    const addRow = (\n      <SortableAddPointRow\n        index={0}\n        key={'add-point-row'}\n        disabled\n        onAdd={() => {\n          const name = newNameGenerator('Point', name =>\n            pointsContainer.hasPoint(name)\n          );\n          const point = new gd.Point(name);\n          pointsContainer.addPoint(point);\n          point.delete();\n          this._onPointsUpdated();\n        }}\n      />\n    );\n\n    return (\n      <TableBody>{[originRow, centerRow, ...pointsRows, addRow]}</TableBody>\n    );\n  }\n}\n\nconst SortablePointsListBody = SortableContainer(PointsListBody);\nSortablePointsListBody.muiName = 'TableBody';\n\nexport default class PointsList extends Component {\n  render() {\n    return (\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHeaderColumn style={styles.handleColumn} />\n            <TableHeaderColumn>Point name</TableHeaderColumn>\n            <TableHeaderColumn style={styles.coordinateColumn}>\n              X\n            </TableHeaderColumn>\n            <TableHeaderColumn style={styles.coordinateColumn}>\n              Y\n            </TableHeaderColumn>\n            <TableRowColumn style={styles.toolColumn} />\n          </TableRow>\n        </TableHeader>\n        <SortablePointsListBody\n          pointsContainer={this.props.pointsContainer}\n          onPointsUpdated={this.props.onPointsUpdated}\n          onSortEnd={({ oldIndex, newIndex }) => {\n            // Reordering points is not supported for now\n          }}\n          helperClass=\"sortable-helper\"\n          useDragHandle\n          lockToContainerEdges\n        />\n      </Table>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport React from 'react';\nimport { TableRow, TableRowColumn } from '../../../../UI/Table';\nimport IconButton from '../../../../UI/IconButton';\nimport Delete from '@material-ui/icons/Delete';\nimport Edit from '@material-ui/icons/Edit';\nimport TextField from '../../../../UI/TextField';\nimport styles from './styles';\nimport ThemeConsumer from '../../../../UI/Theme/ThemeConsumer';\nimport Text from '../../../../UI/Text';\n\nconst PointRow = ({\n  pointName,\n  nameError,\n  onBlur,\n  onRemove,\n  pointX,\n  pointY,\n  onChangePointX,\n  onChangePointY,\n  onEdit,\n  isAutomatic,\n}) => (\n  <ThemeConsumer>\n    {muiTheme => (\n      <TableRow\n        style={{\n          backgroundColor: muiTheme.list.itemsBackgroundColor,\n        }}\n      >\n        <TableRowColumn style={styles.handleColumn}>\n          {/* <DragHandle /> Reordering point is not supported for now */}\n        </TableRowColumn>\n        <TableRowColumn>\n          <TextField\n            margin=\"none\"\n            defaultValue={pointName || 'Base layer'}\n            id={pointName}\n            fullWidth\n            errorText={nameError ? 'This name is already taken' : undefined}\n            disabled={!onBlur}\n            onBlur={onBlur}\n          />\n        </TableRowColumn>\n        <TableRowColumn style={styles.coordinateColumn}>\n          {!isAutomatic ? (\n            <TextField\n              margin=\"none\"\n              value={pointX}\n              type=\"number\"\n              id=\"point-x\"\n              onChange={(e, value) =>\n                onChangePointX(parseFloat(value || 0, 10))\n              }\n            />\n          ) : (\n            <Text>\n              <Trans>(auto)</Trans>\n            </Text>\n          )}\n        </TableRowColumn>\n        <TableRowColumn style={styles.coordinateColumn}>\n          {!isAutomatic ? (\n            <TextField\n              margin=\"none\"\n              value={pointY}\n              type=\"number\"\n              id=\"point-y\"\n              onChange={(e, value) =>\n                onChangePointY(parseFloat(value || 0, 10))\n              }\n            />\n          ) : (\n            <Text>\n              <Trans>(auto)</Trans>\n            </Text>\n          )}\n        </TableRowColumn>\n        <TableRowColumn style={styles.toolColumn}>\n          {!!onRemove && (\n            <IconButton onClick={onRemove}>\n              <Delete />\n            </IconButton>\n          )}\n          {!!onEdit && (\n            <IconButton onClick={onEdit}>\n              <Edit />\n            </IconButton>\n          )}\n        </TableRowColumn>\n      </TableRow>\n    )}\n  </ThemeConsumer>\n);\n\nexport default PointRow;\n","import React from 'react';\nimport { TableRow, TableRowColumn } from '../../../../UI/Table';\nimport Add from '@material-ui/icons/Add';\nimport IconButton from '../../../../UI/IconButton';\nimport styles from './styles';\n\nconst AddPointRow = ({ onAdd }) => (\n  <TableRow>\n    <TableRowColumn style={styles.handleColumn} />\n    <TableRowColumn />\n    <TableRowColumn style={styles.coordinateColumn} />\n    <TableRowColumn style={styles.coordinateColumn} />\n    <TableRowColumn style={styles.toolColumn}>\n      <IconButton onClick={onAdd}>\n        <Add />\n      </IconButton>\n    </TableRowColumn>\n  </TableRow>\n);\n\nexport default AddPointRow;\n","// @flow\nimport React from 'react';\nimport { mapVector } from '../../../../Utils/MapFor';\n\nconst styles = {\n  container: {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n  },\n};\n\nconst pointKindIdentifiers = {\n  NORMAL: 1,\n  ORIGIN: 2,\n  CENTER: 3,\n};\ntype PointKind = 1 | 2 | 3;\n\ntype Props = {|\n  pointsContainer: gdSprite, // Could potentially be generalized to other things than Sprite in the future.\n  imageWidth: number,\n  imageHeight: number,\n  imageZoomFactor: number,\n  onPointsUpdated: () => void,\n|};\n\ntype State = {|\n  draggedPoint: ?gdPoint,\n  draggedPointKind: ?PointKind,\n|};\n\nexport default class PointsPreview extends React.Component<Props, State> {\n  _container: ?any;\n  state = {\n    draggedPoint: null,\n    draggedPointKind: null,\n  };\n\n  _onStartDragPoint = (draggedPoint: gdPoint, draggedPointKind: PointKind) => {\n    if (this.state.draggedPoint) return;\n\n    this.setState({\n      draggedPoint,\n      draggedPointKind,\n    });\n  };\n\n  _onEndDragPoint = () => {\n    const draggingWasDone = !!this.state.draggedPoint;\n    this.setState(\n      {\n        draggedPoint: null,\n        draggedPointKind: null,\n      },\n      () => {\n        if (draggingWasDone) this.props.onPointsUpdated();\n      }\n    );\n  };\n\n  /**\n   * Move a point with the mouse. A similar dragging implementation is done in\n   * CollisionMasksPreview (but with svg elements).\n   *\n   * TODO: This could be optimized by avoiding the forceUpdate (not sure if worth it though).\n   */\n  _onMouseMove = (event: any) => {\n    const { draggedPoint, draggedPointKind } = this.state;\n    if (!draggedPoint || !this._container) return;\n\n    const containerBoundingRect = this._container.getBoundingClientRect();\n    const xOnContainer = event.clientX - containerBoundingRect.left;\n    const yOnContainer = event.clientY - containerBoundingRect.top;\n\n    if (draggedPointKind === pointKindIdentifiers.CENTER) {\n      this.props.pointsContainer.setDefaultCenterPoint(false);\n    }\n    draggedPoint.setX(xOnContainer / this.props.imageZoomFactor);\n    draggedPoint.setY(yOnContainer / this.props.imageZoomFactor);\n    this.forceUpdate();\n  };\n\n  _renderPoint = (\n    name: string,\n    x: number,\n    y: number,\n    kind: PointKind,\n    point: gdPoint\n  ) => {\n    const imageSrc =\n      kind === pointKindIdentifiers.ORIGIN\n        ? 'res/originPoint.png'\n        : kind === pointKindIdentifiers.CENTER\n        ? 'res/centerPoint.png'\n        : 'res/point.png';\n    return (\n      <img\n        src={imageSrc}\n        style={{\n          position: 'absolute',\n          left: x,\n          top: y,\n          transform: 'translate(-6px, -5px)',\n          cursor: 'move',\n        }}\n        alt=\"\"\n        key={name}\n        onPointerDown={() => {\n          this._onStartDragPoint(point, kind);\n        }}\n      />\n    );\n  };\n\n  render() {\n    const {\n      pointsContainer,\n      imageWidth,\n      imageHeight,\n      imageZoomFactor,\n    } = this.props;\n    const nonDefaultPoints = pointsContainer.getAllNonDefaultPoints();\n    const points = mapVector(nonDefaultPoints, (point, i) =>\n      this._renderPoint(\n        point.getName(),\n        point.getX() * imageZoomFactor,\n        point.getY() * imageZoomFactor,\n        pointKindIdentifiers.NORMAL,\n        point\n      )\n    );\n\n    const originPoint = pointsContainer.getOrigin();\n    const centerPoint = pointsContainer.getCenter();\n    const automaticCenterPosition = pointsContainer.isDefaultCenterPoint();\n\n    return (\n      <div\n        style={styles.container}\n        onPointerMove={this._onMouseMove}\n        onPointerUp={this._onEndDragPoint}\n        ref={container => (this._container = container)}\n      >\n        {points}\n        {this._renderPoint(\n          'Origin',\n          originPoint.getX() * imageZoomFactor,\n          originPoint.getY() * imageZoomFactor,\n          pointKindIdentifiers.ORIGIN,\n          originPoint\n        )}\n        {this._renderPoint(\n          'Center',\n          (!automaticCenterPosition ? centerPoint.getX() : imageWidth / 2) *\n            imageZoomFactor,\n          (!automaticCenterPosition ? centerPoint.getY() : imageHeight / 2) *\n            imageZoomFactor,\n          pointKindIdentifiers.CENTER,\n          centerPoint\n        )}\n      </div>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport FlatButton from '../../../../UI/FlatButton';\nimport EmptyMessage from '../../../../UI/EmptyMessage';\nimport { Line, Column } from '../../../../UI/Grid';\nimport { mapFor } from '../../../../Utils/MapFor';\nimport PolygonsList from './PolygonsList';\nimport CollisionMasksPreview from './CollisionMasksPreview';\nimport ImagePreview from '../../../../ResourcesList/ResourcePreview/ImagePreview';\nimport {\n  getCurrentElements,\n  allSpritesHaveSameCollisionMasksAs,\n  copyAnimationsSpriteCollisionMasks,\n} from '../Utils/SpriteObjectHelper';\nimport SpriteSelector from '../Utils/SpriteSelector';\nimport every from 'lodash/every';\nconst gd = global.gd;\n\nexport default class CollisionMasksEditor extends Component {\n  state = {\n    animationIndex: 0,\n    directionIndex: 0,\n    spriteIndex: 0,\n    sameCollisionMasksForAnimations: true,\n    sameCollisionMasksForSprites: true,\n    spriteWidth: 0,\n    spriteHeight: 0,\n  };\n\n  componentDidMount() {\n    this._updateSameCollisionMasksToggles();\n  }\n\n  _updateCollisionMasks = () => {\n    const { object } = this.props;\n    const { animationIndex, directionIndex, spriteIndex } = this.state;\n    const spriteObject = gd.asSpriteObject(object);\n\n    const { animation, sprite } = getCurrentElements(\n      spriteObject,\n      animationIndex,\n      directionIndex,\n      spriteIndex\n    );\n\n    if (animation && sprite) {\n      if (this.state.sameCollisionMasksForAnimations) {\n        mapFor(0, spriteObject.getAnimationsCount(), i => {\n          const otherAnimation = spriteObject.getAnimation(i);\n          copyAnimationsSpriteCollisionMasks(sprite, otherAnimation);\n        });\n      } else if (this.state.sameCollisionMasksForSprites) {\n        copyAnimationsSpriteCollisionMasks(sprite, animation);\n      }\n    }\n\n    this.forceUpdate(); // Refresh the preview and the list\n    if (this.props.onCollisionMasksUpdated)\n      this.props.onCollisionMasksUpdated();\n  };\n\n  chooseAnimation = index => {\n    this.setState(\n      {\n        animationIndex: index,\n        directionIndex: 0,\n        spriteIndex: 0,\n      },\n      () => this._updateSameCollisionMasksToggles()\n    );\n  };\n\n  chooseDirection = index => {\n    this.setState({\n      directionIndex: index,\n      spriteIndex: 0,\n    });\n  };\n\n  chooseSprite = index => {\n    this.setState({\n      spriteIndex: index,\n    });\n  };\n\n  _updateSameCollisionMasksToggles = () => {\n    const { object } = this.props;\n    const { animationIndex, directionIndex, spriteIndex } = this.state;\n    const spriteObject = gd.asSpriteObject(object);\n\n    const { animation, sprite } = getCurrentElements(\n      spriteObject,\n      animationIndex,\n      directionIndex,\n      spriteIndex\n    );\n    if (!animation || !sprite) return;\n\n    this.setState({\n      sameCollisionMasksForAnimations: every(\n        mapFor(0, spriteObject.getAnimationsCount(), i => {\n          const otherAnimation = spriteObject.getAnimation(i);\n          return allSpritesHaveSameCollisionMasksAs(sprite, otherAnimation);\n        })\n      ),\n      sameCollisionMasksForSprites: allSpritesHaveSameCollisionMasksAs(\n        sprite,\n        animation\n      ),\n    });\n  };\n\n  _onSetCollisionMaskAutomatic = (automatic: boolean = true) => {\n    const { object } = this.props;\n    const { animationIndex, directionIndex, spriteIndex } = this.state;\n    const spriteObject = gd.asSpriteObject(object);\n\n    const { sprite } = getCurrentElements(\n      spriteObject,\n      animationIndex,\n      directionIndex,\n      spriteIndex\n    );\n    if (!sprite) return;\n\n    sprite.setCollisionMaskAutomatic(automatic);\n    this._updateCollisionMasks();\n  };\n\n  _setSameCollisionMasksForAllAnimations = enable => {\n    if (enable) {\n      // eslint-disable-next-line\n      const answer = confirm(\n        \"Having the same collision masks for all animations will erase and reset all the other animations collision masks. This can't be undone. Are you sure you want to share these collision masks amongst all the animations of the object?\"\n      );\n      if (!answer) return;\n    }\n\n    this.setState(\n      {\n        sameCollisionMasksForAnimations: enable,\n        sameCollisionMasksForSprites: enable\n          ? true\n          : this.state.sameCollisionMasksForSprites,\n      },\n      () => {\n        this._updateCollisionMasks();\n      }\n    );\n  };\n\n  _setSameCollisionMasksForAllSprites = enable => {\n    if (enable) {\n      // eslint-disable-next-line\n      const answer = confirm(\n        \"Having the same collision masks for all frames will erase and reset all the other frames collision masks. This can't be undone. Are you sure you want to share these collision masks amongst all the frames of the animation?\"\n      );\n      if (!answer) return;\n    }\n\n    this.setState(\n      {\n        sameCollisionMasksForAnimations: enable\n          ? this.state.sameCollisionMasksForAnimations\n          : false,\n        sameCollisionMasksForSprites: enable,\n      },\n      () => {\n        this._updateCollisionMasks();\n      }\n    );\n  };\n\n  _setCurrentSpriteSize = (spriteWidth: number, spriteHeight: number) => {\n    this.setState({\n      spriteWidth,\n      spriteHeight,\n    });\n  };\n\n  render() {\n    const { object, resourcesLoader, project } = this.props;\n    const {\n      sameCollisionMasksForAnimations,\n      sameCollisionMasksForSprites,\n      animationIndex,\n      directionIndex,\n      spriteIndex,\n      spriteWidth,\n      spriteHeight,\n    } = this.state;\n    const spriteObject = gd.asSpriteObject(object);\n\n    if (!object.getAnimationsCount()) return null;\n    const { hasValidSprite, sprite } = getCurrentElements(\n      spriteObject,\n      animationIndex,\n      directionIndex,\n      spriteIndex\n    );\n\n    return (\n      <div>\n        <ImagePreview\n          resourceName={hasValidSprite ? sprite.getImageName() : ''}\n          resourcesLoader={resourcesLoader}\n          project={project}\n          onSize={this._setCurrentSpriteSize}\n          renderOverlay={({ imageWidth, imageHeight, imageZoomFactor }) =>\n            hasValidSprite && (\n              <CollisionMasksPreview\n                imageWidth={imageWidth}\n                imageHeight={imageHeight}\n                imageZoomFactor={imageZoomFactor}\n                isDefaultBoundingBox={sprite.isCollisionMaskAutomatic()}\n                polygons={sprite.getCustomCollisionMask()}\n                onPolygonsUpdated={this._updateCollisionMasks}\n              />\n            )\n          }\n        />\n        <Line>\n          <Column expand>\n            <SpriteSelector\n              spriteObject={spriteObject}\n              animationIndex={animationIndex}\n              directionIndex={directionIndex}\n              spriteIndex={spriteIndex}\n              chooseAnimation={this.chooseAnimation}\n              chooseDirection={this.chooseDirection}\n              chooseSprite={this.chooseSprite}\n              sameForAllAnimations={sameCollisionMasksForAnimations}\n              sameForAllSprites={sameCollisionMasksForSprites}\n              setSameForAllAnimations={\n                this._setSameCollisionMasksForAllAnimations\n              }\n              setSameForAllSprites={this._setSameCollisionMasksForAllSprites}\n              setSameForAllAnimationsLabel={\n                <Trans>Share same collision masks for all animations</Trans>\n              }\n              setSameForAllSpritesLabel={\n                <Trans>\n                  Share same collision masks for all sprites of this animation\n                </Trans>\n              }\n            />\n          </Column>\n        </Line>\n        {!!sprite && !sprite.isCollisionMaskAutomatic() && (\n          <React.Fragment>\n            <PolygonsList\n              polygons={sprite.getCustomCollisionMask()}\n              onPolygonsUpdated={this._updateCollisionMasks}\n              spriteWidth={spriteWidth}\n              spriteHeight={spriteHeight}\n            />\n            <Line justifyContent=\"center\">\n              <FlatButton\n                label={<Trans>Restore the default collision mask</Trans>}\n                primary={false}\n                onClick={() => this._onSetCollisionMaskAutomatic(true)}\n              />\n            </Line>\n          </React.Fragment>\n        )}\n        {!!sprite && sprite.isCollisionMaskAutomatic() && (\n          <React.Fragment>\n            <EmptyMessage>\n              <Trans>\n                This sprite uses the default collision mask, a rectangle that is\n                as large as the sprite.\n              </Trans>\n            </EmptyMessage>\n            <Line justifyContent=\"center\">\n              <FlatButton\n                label={<Trans>Use a custom collision mask</Trans>}\n                primary={false}\n                onClick={() => this._onSetCollisionMaskAutomatic(false)}\n              />\n            </Line>\n          </React.Fragment>\n        )}\n        {!sprite && (\n          <EmptyMessage>\n            <Trans>\n              Choose an animation and frame to edit the collision masks\n            </Trans>\n          </EmptyMessage>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\nimport React, { Component } from 'react';\nimport flatten from 'lodash/flatten';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableHeaderColumn,\n  TableRow,\n  TableRowColumn,\n} from '../../../../UI/Table';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport { mapVector } from '../../../../Utils/MapFor';\nimport styles from './styles';\nimport VerticeRow from './VerticeRow';\nimport PolygonRow from './PolygonRow';\nimport AddVerticeRow from './AddVerticeRow';\nimport AddPolygonRow from './AddPolygonRow';\nconst gd = global.gd;\n\nconst SortableAddPolygonRow = SortableElement(AddPolygonRow);\nconst SortableAddVerticeRow = SortableElement(AddVerticeRow);\nconst SortableVerticeRow = SortableElement(VerticeRow);\nconst SortablePolygonRow = SortableElement(PolygonRow);\n\ntype PolygonsListBodyProps = {|\n  polygons: gdVectorPolygon2d,\n  onPolygonsUpdated: () => void,\n\n  // Sprite size is useful to make sure polygon vertices\n  // are not put outside the sprite bounding box, which is not supported:\n  spriteWidth: number,\n  spriteHeight: number,\n|};\n\nclass PolygonsListBody extends Component<PolygonsListBodyProps, void> {\n  _onPolygonUpdated() {\n    this.forceUpdate();\n    this.props.onPolygonsUpdated();\n  }\n\n  updateVerticeX = (vertice, newValue) => {\n    // Ensure vertice stays inside the sprite bounding box.\n    vertice.set_x(Math.min(this.props.spriteWidth, Math.max(newValue, 0)));\n    this._onPolygonUpdated();\n  };\n\n  updateVerticeY = (vertice, newValue) => {\n    // Ensure vertice stays inside the sprite bounding box.\n    vertice.set_y(Math.min(this.props.spriteHeight, Math.max(newValue, 0)));\n    this._onPolygonUpdated();\n  };\n\n  render() {\n    const { polygons } = this.props;\n\n    const polygonRows = flatten(\n      mapVector(polygons, (polygon, i) => {\n        const vertices = polygon.getVertices();\n        const isConvex = polygon.isConvex();\n\n        return [\n          <SortablePolygonRow\n            index={i}\n            disabled\n            key={'polygon-' + i}\n            polygon={polygon}\n            onRemove={() => {\n              gd.removeFromVectorPolygon2d(polygons, i);\n              this._onPolygonUpdated();\n            }}\n            isConvex={isConvex}\n            verticesCount={vertices.size()}\n          />,\n          mapVector(vertices, (vertice, j) => (\n            <SortableVerticeRow\n              index={i}\n              disabled\n              key={`polygon-${i}-vertice-${j}`}\n              verticeX={vertice.get_x()}\n              verticeY={vertice.get_y()}\n              onChangeVerticeX={newValue =>\n                this.updateVerticeX(vertice, newValue)\n              }\n              onChangeVerticeY={newValue =>\n                this.updateVerticeY(vertice, newValue)\n              }\n              onRemove={() => {\n                gd.removeFromVectorVector2f(polygon.getVertices(), j);\n                this._onPolygonUpdated();\n              }}\n              canRemove={vertices.size() > 3}\n              hasWarning={!isConvex}\n            />\n          )),\n          <SortableAddVerticeRow\n            index={0}\n            key={`polygon-${i}-add-vertice-row`}\n            disabled\n            onAdd={() => {\n              const newVertice = new gd.Vector2f();\n              polygon.getVertices().push_back(newVertice);\n              newVertice.delete();\n\n              this._onPolygonUpdated();\n            }}\n          />,\n        ];\n      })\n    );\n\n    const addRow = (\n      <SortableAddPolygonRow\n        index={0}\n        key={'add-polygon-row'}\n        disabled\n        onAdd={() => {\n          const newPolygon = gd.Polygon2d.createRectangle(32, 32);\n          newPolygon.move(\n            this.props.spriteWidth / 2,\n            this.props.spriteHeight / 2\n          );\n          polygons.push_back(newPolygon);\n\n          this._onPolygonUpdated();\n        }}\n      />\n    );\n\n    return <TableBody>{[...polygonRows, addRow]}</TableBody>;\n  }\n}\n\nconst SortablePolygonsListBody = SortableContainer(PolygonsListBody);\nSortablePolygonsListBody.muiName = 'TableBody';\n\ntype Props = {|\n  polygons: gdVectorPolygon2d,\n  onPolygonsUpdated: () => void,\n  spriteWidth: number,\n  spriteHeight: number,\n|};\n\nexport default class PolygonsList extends Component<Props, void> {\n  render() {\n    return (\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHeaderColumn style={styles.handleColumn} />\n            <TableHeaderColumn>Polygon</TableHeaderColumn>\n            <TableHeaderColumn style={styles.coordinateColumn}>\n              X\n            </TableHeaderColumn>\n            <TableHeaderColumn style={styles.coordinateColumn}>\n              Y\n            </TableHeaderColumn>\n            <TableRowColumn style={styles.toolColumn} />\n          </TableRow>\n        </TableHeader>\n        <SortablePolygonsListBody\n          polygons={this.props.polygons}\n          onPolygonsUpdated={this.props.onPolygonsUpdated}\n          spriteWidth={this.props.spriteWidth}\n          spriteHeight={this.props.spriteHeight}\n          onSortEnd={({ oldIndex, newIndex }) => {\n            // Reordering polygons is not supported for now\n          }}\n          helperClass=\"sortable-helper\"\n          useDragHandle\n          lockToContainerEdges\n        />\n      </Table>\n    );\n  }\n}\n","import React from 'react';\nimport { TableRow, TableRowColumn } from '../../../../UI/Table';\nimport IconButton from '../../../../UI/IconButton';\nimport Delete from '@material-ui/icons/Delete';\nimport TextField from '../../../../UI/TextField';\nimport Warning from '@material-ui/icons/Warning';\nimport styles from './styles';\nimport ThemeConsumer from '../../../../UI/Theme/ThemeConsumer';\n\nconst VerticeRow = ({\n  hasWarning,\n  canRemove,\n  onRemove,\n  verticeX,\n  verticeY,\n  onChangeVerticeX,\n  onChangeVerticeY,\n}) => (\n  <ThemeConsumer>\n    {muiTheme => (\n      <TableRow\n        style={{\n          backgroundColor: muiTheme.list.itemsBackgroundColor,\n        }}\n      >\n        <TableRowColumn style={styles.handleColumn}>\n          {/* <DragHandle /> Reordering vertices is not supported for now */}\n        </TableRowColumn>\n        <TableRowColumn>{hasWarning && <Warning />}</TableRowColumn>\n        <TableRowColumn style={styles.coordinateColumn}>\n          <TextField\n            margin=\"none\"\n            value={verticeX}\n            type=\"number\"\n            id=\"vertice-x\"\n            onChange={(e, value) =>\n              onChangeVerticeX(parseFloat(value || 0, 10))\n            }\n          />\n        </TableRowColumn>\n        <TableRowColumn style={styles.coordinateColumn}>\n          <TextField\n            margin=\"none\"\n            value={verticeY}\n            type=\"number\"\n            id=\"vertice-y\"\n            onChange={(e, value) =>\n              onChangeVerticeY(parseFloat(value || 0, 10))\n            }\n          />\n        </TableRowColumn>\n        <TableRowColumn style={styles.toolColumn}>\n          {!!onRemove && (\n            <IconButton onClick={onRemove} disabled={!canRemove}>\n              <Delete />\n            </IconButton>\n          )}\n        </TableRowColumn>\n      </TableRow>\n    )}\n  </ThemeConsumer>\n);\n\nexport default VerticeRow;\n","import React from 'react';\nimport { TableRow, TableRowColumn } from '../../../../UI/Table';\nimport IconButton from '../../../../UI/IconButton';\nimport Delete from '@material-ui/icons/Delete';\nimport styles from './styles';\nimport ThemeConsumer from '../../../../UI/Theme/ThemeConsumer';\n\nconst PolygonRow = ({ onRemove, isConvex, verticesCount }) => {\n  return (\n    <ThemeConsumer>\n      {muiTheme => (\n        <TableRow\n          style={{\n            backgroundColor: muiTheme.list.itemsBackgroundColor,\n          }}\n        >\n          <TableRowColumn style={styles.handleColumn}>\n            {/* <DragHandle /> Reordering polygons is not supported for now */}\n          </TableRowColumn>\n          {isConvex && (\n            <TableRowColumn>\n              {verticesCount === 3 && `Triangle`}\n              {verticesCount === 4 && `Quadrilateral`}\n              {verticesCount >= 5 && `Polygon with ${verticesCount} vertices`}\n            </TableRowColumn>\n          )}\n          {!isConvex && <TableRowColumn>Polygon is not convex!</TableRowColumn>}\n          <TableRowColumn style={styles.coordinateColumn} />\n          <TableRowColumn style={styles.coordinateColumn} />\n          <TableRowColumn style={styles.toolColumn}>\n            {!!onRemove && (\n              <IconButton onClick={onRemove}>\n                <Delete />\n              </IconButton>\n            )}\n          </TableRowColumn>\n        </TableRow>\n      )}\n    </ThemeConsumer>\n  );\n};\n\nexport default PolygonRow;\n","import React from 'react';\nimport { TableRow, TableRowColumn } from '../../../../UI/Table';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport IconButton from '../../../../UI/IconButton';\nimport styles from './styles';\n\nconst AddVerticeRow = ({ onAdd }) => (\n  <TableRow>\n    <TableRowColumn style={styles.handleColumn} />\n    <TableRowColumn />\n    <TableRowColumn style={styles.coordinateColumn} />\n    <TableRowColumn style={styles.coordinateColumn} />\n    <TableRowColumn style={styles.toolColumn}>\n      <IconButton onClick={onAdd}>\n        <AddCircle />\n      </IconButton>\n    </TableRowColumn>\n  </TableRow>\n);\n\nexport default AddVerticeRow;\n","import React from 'react';\nimport { TableRow, TableRowColumn } from '../../../../UI/Table';\nimport Add from '@material-ui/icons/Add';\nimport IconButton from '../../../../UI/IconButton';\nimport styles from './styles';\n\nconst AddPolygonRow = ({ onAdd }) => (\n  <TableRow>\n    <TableRowColumn style={styles.handleColumn} />\n    <TableRowColumn />\n    <TableRowColumn style={styles.coordinateColumn} />\n    <TableRowColumn style={styles.coordinateColumn} />\n    <TableRowColumn style={styles.toolColumn}>\n      <IconButton onClick={onAdd}>\n        <Add />\n      </IconButton>\n    </TableRowColumn>\n  </TableRow>\n);\n\nexport default AddPolygonRow;\n","// @flow\nimport * as React from 'react';\nimport { mapVector } from '../../../../Utils/MapFor';\n\nconst styles = {\n  container: {\n    position: 'relative',\n  },\n  svg: {\n    width: '100%',\n    height: '100%',\n  },\n  vertexCircle: {\n    cursor: 'move',\n  },\n};\n\ntype Props = {|\n  polygons: gdVectorPolygon2d,\n  isDefaultBoundingBox: boolean,\n  imageWidth: number,\n  imageHeight: number,\n  imageZoomFactor: number,\n  onPolygonsUpdated: () => void,\n|};\n\ntype State = {|\n  draggedVertex: ?gdVector2f,\n|};\n\nexport default class CollisionMasksPreview extends React.Component<\n  Props,\n  State\n> {\n  _svg: any;\n  state = {\n    draggedVertex: null,\n  };\n\n  _onStartDragVertex = (draggedVertex: gdVector2f) => {\n    if (this.state.draggedVertex) return;\n\n    this.setState({\n      draggedVertex,\n    });\n  };\n\n  _onEndDragVertex = () => {\n    const draggingWasDone = !!this.state.draggedVertex;\n    this.setState(\n      {\n        draggedVertex: null,\n      },\n      () => {\n        if (draggingWasDone) this.props.onPolygonsUpdated();\n      }\n    );\n  };\n\n  /**\n   * Move a vertex with the mouse. A similar dragging implementation is done in\n   * PointsPreview (but with div and img elements).\n   *\n   * TODO: This could be optimized by avoiding the forceUpdate (not sure if worth it though).\n   */\n  _onPointerMove = (event: any) => {\n    const { draggedVertex } = this.state;\n    if (!draggedVertex) return;\n\n    const pointOnScreen = this._svg.createSVGPoint();\n    pointOnScreen.x = event.clientX;\n    pointOnScreen.y = event.clientY;\n    const screenToSvgMatrix = this._svg.getScreenCTM().inverse();\n    const pointOnSvg = pointOnScreen.matrixTransform(screenToSvgMatrix);\n\n    draggedVertex.set_x(pointOnSvg.x / this.props.imageZoomFactor);\n    draggedVertex.set_y(pointOnSvg.y / this.props.imageZoomFactor);\n    this.forceUpdate();\n  };\n\n  _renderBoundingBox() {\n    const { imageWidth, imageHeight, imageZoomFactor } = this.props;\n\n    return (\n      <polygon\n        fill=\"rgba(255,0,0,0.2)\"\n        stroke=\"rgba(255,0,0,0.5)\"\n        strokeWidth={1}\n        fileRule=\"evenodd\"\n        points={`0,0 ${imageWidth * imageZoomFactor},0 ${imageWidth *\n          imageZoomFactor},${imageHeight * imageZoomFactor} 0,${imageHeight *\n          imageZoomFactor}`}\n      />\n    );\n  }\n\n  _renderPolygons() {\n    const { polygons, imageZoomFactor } = this.props;\n\n    return (\n      <React.Fragment>\n        {mapVector(polygons, (polygon, i) => {\n          const vertices = polygon.getVertices();\n          return (\n            <polygon\n              key={`polygon-${i}`}\n              fill=\"rgba(255,0,0,0.2)\"\n              stroke=\"rgba(255,0,0,0.5)\"\n              strokeWidth={1}\n              fileRule=\"evenodd\"\n              points={mapVector(\n                vertices,\n                (vertex, j) =>\n                  `${vertex.get_x() * imageZoomFactor},${vertex.get_y() *\n                    imageZoomFactor}`\n              ).join(' ')}\n            />\n          );\n        })}\n        {mapVector(polygons, (polygon, i) => {\n          const vertices = polygon.getVertices();\n          return mapVector(vertices, (vertex, j) => (\n            <circle\n              onPointerDown={event => this._onStartDragVertex(vertex)}\n              key={`polygon-${i}-vertex-${j}`}\n              fill=\"rgba(255,0,0,0.75)\"\n              strokeWidth={1}\n              cx={vertex.get_x() * imageZoomFactor}\n              cy={vertex.get_y() * imageZoomFactor}\n              r={5}\n              style={styles.vertexCircle}\n            />\n          ));\n        })}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const { isDefaultBoundingBox } = this.props;\n\n    return (\n      <svg\n        onPointerMove={this._onPointerMove}\n        onPointerUp={this._onEndDragVertex}\n        width={this.props.imageWidth * this.props.imageZoomFactor}\n        height={this.props.imageHeight * this.props.imageZoomFactor}\n        style={styles.svg}\n        ref={svg => (this._svg = svg)}\n      >\n        {isDefaultBoundingBox && this._renderBoundingBox()}\n        {!isDefaultBoundingBox && this._renderPolygons()}\n      </svg>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { type EditorProps } from './EditorProps.flow';\nimport { Line, Column } from '../../UI/Grid';\nimport EmptyMessage from '../../UI/EmptyMessage';\n\nexport default class EmptyEditor extends React.Component<EditorProps, void> {\n  render() {\n    return (\n      <Column>\n        <Line>\n          <EmptyMessage>\n            <Trans>\n              This object does not have any specific configuration. Add it on\n              the scene and use events to interact with it.\n            </Trans>\n          </EmptyMessage>\n        </Line>\n      </Column>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Checkbox from '../../UI/Checkbox';\nimport { Line, Column } from '../../UI/Grid';\nimport ColorField from '../../UI/ColorField';\nimport { type EditorProps } from './EditorProps.flow';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport { ResponsiveLineStackLayout } from '../../UI/Layout';\nconst gd = global.gd;\n\nexport default class PanelSpriteEditor extends React.Component<\n  EditorProps,\n  void\n> {\n  render() {\n    const { object } = this.props;\n    const shapePainterObject = gd.asShapePainterObject(object);\n\n    return (\n      <Column>\n        <Line>\n          <Checkbox\n            label={\n              <Trans>\n                Draw the shapes relative to the object position on the scene\n              </Trans>\n            }\n            checked={!shapePainterObject.areCoordinatesAbsolute()}\n            onCheck={(e, checked) => {\n              if (!checked) shapePainterObject.setCoordinatesAbsolute();\n              else shapePainterObject.setCoordinatesRelative();\n              this.forceUpdate();\n            }}\n          />\n        </Line>\n        <ResponsiveLineStackLayout>\n          <ColorField\n            floatingLabelText={<Trans>Outline color</Trans>}\n            disableAlpha\n            fullWidth\n            color={{\n              r: shapePainterObject.getOutlineColorR(),\n              g: shapePainterObject.getOutlineColorG(),\n              b: shapePainterObject.getOutlineColorB(),\n              a: 255,\n            }}\n            onChangeComplete={color => {\n              shapePainterObject.setOutlineColor(\n                color.rgb.r,\n                color.rgb.g,\n                color.rgb.b\n              );\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Outline opacity (0-255)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={shapePainterObject.getOutlineOpacity()}\n            onChange={value => {\n              shapePainterObject.setOutlineOpacity(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Outline size (in pixels)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={shapePainterObject.getOutlineSize()}\n            onChange={value => {\n              shapePainterObject.setOutlineSize(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout>\n          <ColorField\n            floatingLabelText={<Trans>Fill color</Trans>}\n            disableAlpha\n            fullWidth\n            color={{\n              r: shapePainterObject.getFillColorR(),\n              g: shapePainterObject.getFillColorG(),\n              b: shapePainterObject.getFillColorB(),\n              a: 255,\n            }}\n            onChangeComplete={color => {\n              shapePainterObject.setFillColor(\n                color.rgb.r,\n                color.rgb.g,\n                color.rgb.b\n              );\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Fill opacity (0-255)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={shapePainterObject.getFillOpacity()}\n            onChange={value => {\n              shapePainterObject.setFillOpacity(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n      </Column>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Checkbox from '../../UI/Checkbox';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\nimport { Line, Column } from '../../UI/Grid';\nimport ColorField from '../../UI/ColorField';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport { type EditorProps } from './EditorProps.flow';\nimport ResourceSelectorWithThumbnail from '../../ResourcesList/ResourceSelectorWithThumbnail';\nimport { ResponsiveLineStackLayout } from '../../UI/Layout';\nconst gd = global.gd;\n\nexport default class ParticleEmitterEditor extends React.Component<\n  EditorProps,\n  void\n> {\n  render() {\n    const {\n      object,\n      project,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n    } = this.props;\n    const particleEmitterObject = gd.asParticleEmitterObject(object);\n\n    return (\n      <Column>\n        <Line>\n          <Column expand noMargin>\n            <SelectField\n              fullWidth\n              floatingLabelText={<Trans>Particles kind</Trans>}\n              value={particleEmitterObject.getRendererType()}\n              onChange={(e, i, value: string) => {\n                const rendererType = parseInt(value, 10) || 0;\n                particleEmitterObject.setRendererType(rendererType);\n                if (rendererType !== gd.ParticleEmitterObject.Quad) {\n                  particleEmitterObject.setParticleTexture('');\n                }\n                this.forceUpdate();\n              }}\n            >\n              <SelectOption\n                value={gd.ParticleEmitterObject.Point}\n                primaryText={t`Point`}\n              />\n              <SelectOption\n                value={gd.ParticleEmitterObject.Line}\n                primaryText={t`Line`}\n              />\n              <SelectOption\n                value={gd.ParticleEmitterObject.Quad}\n                primaryText={t`Textured`}\n              />\n            </SelectField>\n          </Column>\n        </Line>\n        {particleEmitterObject.getRendererType() ===\n          gd.ParticleEmitterObject.Point && (\n          <Line>\n            <Column expand noMargin>\n              <SemiControlledTextField\n                commitOnBlur\n                floatingLabelText={<Trans>Size</Trans>}\n                fullWidth\n                type=\"number\"\n                value={particleEmitterObject.getRendererParam1()}\n                onChange={value => {\n                  particleEmitterObject.setRendererParam1(parseFloat(value));\n                  this.forceUpdate();\n                }}\n              />\n            </Column>\n          </Line>\n        )}\n        {particleEmitterObject.getRendererType() ===\n          gd.ParticleEmitterObject.Line && (\n          <ResponsiveLineStackLayout>\n            <SemiControlledTextField\n              commitOnBlur\n              floatingLabelText={<Trans>Lines length</Trans>}\n              fullWidth\n              type=\"number\"\n              value={particleEmitterObject.getRendererParam1()}\n              onChange={value => {\n                particleEmitterObject.setRendererParam1(parseFloat(value));\n                this.forceUpdate();\n              }}\n            />\n            <SemiControlledTextField\n              commitOnBlur\n              floatingLabelText={<Trans>Lines thickness</Trans>}\n              fullWidth\n              type=\"number\"\n              value={particleEmitterObject.getRendererParam2()}\n              onChange={value => {\n                particleEmitterObject.setRendererParam2(parseFloat(value));\n                this.forceUpdate();\n              }}\n            />\n          </ResponsiveLineStackLayout>\n        )}\n        {particleEmitterObject.getRendererType() ===\n          gd.ParticleEmitterObject.Quad && (\n          <React.Fragment>\n            <Line>\n              <ResourceSelectorWithThumbnail\n                project={project}\n                resourceSources={resourceSources}\n                onChooseResource={onChooseResource}\n                resourceKind=\"image\"\n                resourceName={particleEmitterObject.getParticleTexture()}\n                resourceExternalEditors={resourceExternalEditors}\n                onChange={resourceName => {\n                  particleEmitterObject.setParticleTexture(resourceName);\n                  this.forceUpdate();\n                }}\n                floatingLabelText={<Trans>Select an image</Trans>}\n              />\n            </Line>\n            <ResponsiveLineStackLayout>\n              <SemiControlledTextField\n                commitOnBlur\n                floatingLabelText={<Trans>Particles start width</Trans>}\n                fullWidth\n                type=\"number\"\n                value={particleEmitterObject.getRendererParam1()}\n                onChange={value => {\n                  particleEmitterObject.setRendererParam1(\n                    Math.max(0, parseFloat(value))\n                  );\n                  this.forceUpdate();\n                }}\n              />\n              <SemiControlledTextField\n                commitOnBlur\n                floatingLabelText={<Trans>Particles start height</Trans>}\n                fullWidth\n                type=\"number\"\n                value={particleEmitterObject.getRendererParam2()}\n                onChange={value => {\n                  particleEmitterObject.setRendererParam2(\n                    Math.max(0, parseFloat(value))\n                  );\n                  this.forceUpdate();\n                }}\n              />\n            </ResponsiveLineStackLayout>\n          </React.Fragment>\n        )}\n        <ResponsiveLineStackLayout>\n          <ColorField\n            floatingLabelText={<Trans>Particles start color</Trans>}\n            disableAlpha\n            fullWidth\n            color={{\n              r: particleEmitterObject.getParticleRed1(),\n              g: particleEmitterObject.getParticleGreen1(),\n              b: particleEmitterObject.getParticleBlue1(),\n              a: 255,\n            }}\n            onChangeComplete={color => {\n              particleEmitterObject.setParticleRed1(color.rgb.r);\n              particleEmitterObject.setParticleGreen1(color.rgb.g);\n              particleEmitterObject.setParticleBlue1(color.rgb.b);\n\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Start opacity (0-255)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleAlpha1()}\n            onChange={value => {\n              particleEmitterObject.setParticleAlpha1(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout>\n          <ColorField\n            floatingLabelText={<Trans>Particles end color</Trans>}\n            disableAlpha\n            fullWidth\n            color={{\n              r: particleEmitterObject.getParticleRed2(),\n              g: particleEmitterObject.getParticleGreen2(),\n              b: particleEmitterObject.getParticleBlue2(),\n              a: 255,\n            }}\n            onChangeComplete={color => {\n              particleEmitterObject.setParticleRed2(color.rgb.r);\n              particleEmitterObject.setParticleGreen2(color.rgb.g);\n              particleEmitterObject.setParticleBlue2(color.rgb.b);\n\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>End opacity (0-255)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleAlpha2()}\n            onChange={value => {\n              particleEmitterObject.setParticleAlpha2(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <Line>\n          <Checkbox\n            label={<Trans>Additive rendering</Trans>}\n            checked={particleEmitterObject.isRenderingAdditive()}\n            onCheck={(e, checked) => {\n              if (checked) particleEmitterObject.setRenderingAdditive();\n              else particleEmitterObject.setRenderingAlpha();\n              this.forceUpdate();\n            }}\n          />\n        </Line>\n        <Line>\n          <Checkbox\n            label={<Trans>Delete when out of particles</Trans>}\n            checked={particleEmitterObject.getDestroyWhenNoParticles()}\n            onCheck={(e, checked) => {\n              particleEmitterObject.setDestroyWhenNoParticles(checked);\n              this.forceUpdate();\n            }}\n          />\n        </Line>\n        <ResponsiveLineStackLayout>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Maximum number of particles displayed</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getMaxParticleNb()}\n            onChange={value => {\n              particleEmitterObject.setMaxParticleNb(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Number of particles in tank (-1 for infinite)</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getTank()}\n            onChange={value => {\n              particleEmitterObject.setTank(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Flow of particles (particles/seconds)</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getFlow()}\n            onChange={value => {\n              particleEmitterObject.setFlow(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Minimum emitter force applied on particles</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getEmitterForceMin()}\n            onChange={value => {\n              particleEmitterObject.setEmitterForceMin(\n                parseInt(value, 10) || 0\n              );\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Maximum emitter force applied on particles</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getEmitterForceMax()}\n            onChange={value => {\n              particleEmitterObject.setEmitterForceMax(\n                parseInt(value, 10) || 0\n              );\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Spray cone angle (in degrees)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getConeSprayAngle()}\n            onChange={value => {\n              particleEmitterObject.setConeSprayAngle(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Radius of the emitter</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getZoneRadius()}\n            onChange={value => {\n              particleEmitterObject.setZoneRadius(parseInt(value, 10) || 0);\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Gravity on particles on X axis</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleGravityX()}\n            onChange={value => {\n              particleEmitterObject.setParticleGravityX(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Gravity on particles on Y axis</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleGravityY()}\n            onChange={value => {\n              particleEmitterObject.setParticleGravityY(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <Line>\n          <Column expand noMargin>\n            <SemiControlledTextField\n              commitOnBlur\n              floatingLabelText={<Trans>Friction on particles</Trans>}\n              fullWidth\n              type=\"number\"\n              value={particleEmitterObject.getFriction()}\n              onChange={value => {\n                particleEmitterObject.setFriction(parseFloat(value));\n                this.forceUpdate();\n              }}\n            />\n          </Column>\n        </Line>\n        <ResponsiveLineStackLayout>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Particle minimum lifetime (in seconds)</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleLifeTimeMin()}\n            onChange={value => {\n              particleEmitterObject.setParticleLifeTimeMin(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Particle maximum lifetime (in seconds)</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleLifeTimeMax()}\n            onChange={value => {\n              particleEmitterObject.setParticleLifeTimeMax(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Particle start size (in percents)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleSize1()}\n            onChange={value => {\n              particleEmitterObject.setParticleSize1(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={<Trans>Particle end size (in percents)</Trans>}\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleSize2()}\n            onChange={value => {\n              particleEmitterObject.setParticleSize2(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n        <ResponsiveLineStackLayout>\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Particle minimum rotation speed (degrees/second)</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleAngle1()}\n            onChange={value => {\n              particleEmitterObject.setParticleAngle1(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n          <SemiControlledTextField\n            commitOnBlur\n            floatingLabelText={\n              <Trans>Particle maximum rotation speed (degrees/second)</Trans>\n            }\n            fullWidth\n            type=\"number\"\n            value={particleEmitterObject.getParticleAngle2()}\n            onChange={value => {\n              particleEmitterObject.setParticleAngle2(parseFloat(value));\n              this.forceUpdate();\n            }}\n          />\n        </ResponsiveLineStackLayout>\n      </Column>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\n\nimport * as React from 'react';\nimport PropertiesEditor from '../../PropertiesEditor';\nimport propertiesMapToSchema from '../../PropertiesEditor/PropertiesMapToSchema';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport { type EditorProps } from './EditorProps.flow';\nimport { Column, Line } from '../../UI/Grid';\nimport { getExtraObjectsInformation } from '../../Hints';\nimport AlertMessage from '../../UI/AlertMessage';\n\ntype Props = EditorProps;\n\nexport default class ObjectPropertiesEditor extends React.Component<Props> {\n  render() {\n    const {\n      object,\n      project,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n    } = this.props;\n    const properties = object.getProperties(project);\n\n    const propertiesSchema = propertiesMapToSchema(\n      properties,\n      object => object.getProperties(project),\n      (object, name, value) => object.updateProperty(name, value, project)\n    );\n\n    const extraInformation = getExtraObjectsInformation()[object.getType()];\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Column>\n            {propertiesSchema.length ? (\n              <React.Fragment>\n                {extraInformation ? (\n                  <Line>\n                    <Column noMargin>\n                      {extraInformation.map(({ kind, message }, index) => (\n                        <AlertMessage kind={kind} key={index}>\n                          {i18n._(message)}\n                        </AlertMessage>\n                      ))}\n                    </Column>\n                  </Line>\n                ) : null}\n                <PropertiesEditor\n                  schema={propertiesSchema}\n                  instances={[object]}\n                  project={project}\n                  resourceSources={resourceSources}\n                  onChooseResource={onChooseResource}\n                  resourceExternalEditors={resourceExternalEditors}\n                />\n              </React.Fragment>\n            ) : (\n              <EmptyMessage>\n                <Trans>\n                  There is nothing to configure for this object. You can still\n                  use events to interact with the object.\n                </Trans>\n              </EmptyMessage>\n            )}\n          </Column>\n        )}\n      </I18n>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport TextField from '../UI/TextField';\nimport Add from '@material-ui/icons/Add';\nimport Delete from '@material-ui/icons/Delete';\nimport IconButton from '../UI/IconButton';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport MiniToolbar, { MiniToolbarText } from '../UI/MiniToolbar';\nimport HelpIcon from '../UI/HelpIcon';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport NewBehaviorDialog from './NewBehaviorDialog';\nimport { getBehaviorHelpPagePath } from './BehaviorsHelpPagePaths';\nimport BehaviorsEditorService from './BehaviorsEditorService';\nimport { isNullPtr } from '../Utils/IsNullPtr';\nimport { Column, Line } from '../UI/Grid';\nimport RaisedButton from '../UI/RaisedButton';\nconst gd = global.gd;\n\nconst styles = {\n  addBehaviorLine: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  addBehaviorText: {\n    justifyContent: 'flex-end',\n  },\n  behaviorTitle: {\n    flex: 1,\n  },\n  behaviorTools: {\n    flexShrink: 0,\n  },\n};\nconst AddBehaviorLine = ({ onAdd }) => (\n  <Column>\n    <Line justifyContent=\"flex-end\" expand>\n      <RaisedButton\n        label={<Trans>Add a behavior to the object</Trans>}\n        primary\n        onClick={onAdd}\n        labelPosition=\"before\"\n        icon={<Add />}\n      />\n    </Line>\n  </Column>\n);\n\nexport default class BehaviorsEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { newBehaviorDialogOpen: false };\n  }\n\n  componentWillMount() {\n    this._loadFrom(this.props.object);\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (this.props.object !== newProps.object) {\n      this._loadFrom(newProps.object);\n    }\n  }\n\n  _loadFrom(object) {\n    if (!object) return;\n  }\n\n  chooseNewBehavior = () => {\n    this.setState({\n      newBehaviorDialogOpen: true,\n    });\n  };\n\n  _hasBehaviorWithType = type => {\n    const { object } = this.props;\n    const allBehaviorNames = object.getAllBehaviorNames().toJSArray();\n\n    return allBehaviorNames\n      .map(behaviorName => object.getBehavior(behaviorName))\n      .map(behavior => behavior.getTypeName())\n      .filter(behaviorType => behaviorType === type).length;\n  };\n\n  addBehavior = (type, defaultName) => {\n    const { object, project } = this.props;\n\n    this.setState(\n      {\n        newBehaviorDialogOpen: false,\n      },\n      () => {\n        if (this._hasBehaviorWithType(type)) {\n          //eslint-disable-next-line\n          const answer = confirm(\n            \"There is already a behavior of this type attached to the object. It's possible to add again this behavior but it's unusual and may not be always supported properly. Are you sure you want to add again this behavior?\"\n          );\n\n          if (!answer) return;\n        }\n\n        const name = newNameGenerator(defaultName, name =>\n          object.hasBehaviorNamed(name)\n        );\n        object.addNewBehavior(project, type, name);\n\n        this.forceUpdate();\n        if (this.props.onSizeUpdated) this.props.onSizeUpdated();\n      }\n    );\n  };\n\n  _onChangeBehaviorName = (behaviorContent, newName) => {\n    // TODO: This is disabled for now as there is no proper refactoring\n    // of events after a behavior renaming. Once refactoring is available,\n    // the text field can be enabled again and refactoring calls added here\n    // (or in a parent).\n    // Renaming a behavior is something that is really rare anyway! :)\n\n    const { object } = this.props;\n    if (object.hasBehaviorNamed(newName)) return;\n\n    object.renameBehavior(behaviorContent.getName(), newName);\n    this.forceUpdate();\n  };\n\n  _onRemoveBehavior = behaviorName => {\n    const { object } = this.props;\n    //eslint-disable-next-line\n    const answer = confirm(\n      \"Are you sure you want to remove this behavior? This can't be undone.\"\n    );\n\n    if (answer) {\n      object.removeBehavior(behaviorName);\n      this.forceUpdate();\n      if (this.props.onSizeUpdated) this.props.onSizeUpdated();\n    }\n  };\n\n  render() {\n    const { object, project } = this.props;\n    const allBehaviorNames = object.getAllBehaviorNames().toJSArray();\n\n    return (\n      <div>\n        {allBehaviorNames\n          .map((behaviorName, index) => {\n            const behaviorContent = object.getBehavior(behaviorName);\n            const behavior = gd.JsPlatform.get().getBehavior(\n              behaviorContent.getTypeName()\n            );\n            if (isNullPtr(gd, behavior)) {\n              return (\n                <div key={index}>\n                  <MiniToolbar>\n                    <span style={styles.behaviorTitle}>\n                      <Trans>Unknown behavior</Trans>{' '}\n                      <TextField value={behaviorName} disabled />\n                    </span>\n                    <span style={styles.behaviorTools}>\n                      <IconButton\n                        onClick={() => this._onRemoveBehavior(behaviorName)}\n                      >\n                        <Delete />\n                      </IconButton>\n                    </span>\n                  </MiniToolbar>\n                  <EmptyMessage>\n                    <Trans>\n                      This behavior is unknown. It might be a behavior that was\n                      defined in an extension and that was later removed. You\n                      should delete it.\n                    </Trans>\n                  </EmptyMessage>\n                </div>\n              );\n            }\n\n            const BehaviorComponent = BehaviorsEditorService.getEditor(\n              behaviorContent.getTypeName()\n            );\n\n            return (\n              <div key={index}>\n                <MiniToolbar>\n                  <MiniToolbarText>\n                    <Trans>Behavior</Trans>{' '}\n                  </MiniToolbarText>\n                  <Column noMargin expand>\n                    <TextField\n                      value={behaviorName}\n                      hintText={t`Behavior name`}\n                      margin=\"none\"\n                      fullWidth\n                      disabled\n                      onChange={(e, text) =>\n                        this._onChangeBehaviorName(behaviorContent, text)\n                      }\n                    />\n                  </Column>\n                  <IconButton\n                    onClick={() => this._onRemoveBehavior(behaviorName)}\n                  >\n                    <Delete />\n                  </IconButton>\n                  <HelpIcon helpPagePath={getBehaviorHelpPagePath(behavior)} />\n                </MiniToolbar>\n                <BehaviorComponent\n                  behavior={behavior}\n                  behaviorContent={behaviorContent}\n                  project={project}\n                  resourceSources={this.props.resourceSources}\n                  onChooseResource={this.props.onChooseResource}\n                  resourceExternalEditors={this.props.resourceExternalEditors}\n                />\n              </div>\n            );\n          })\n          .concat(\n            <AddBehaviorLine\n              key=\"add-behavior-line\"\n              onAdd={this.chooseNewBehavior}\n            />\n          )}\n        {this.state.newBehaviorDialogOpen && (\n          <NewBehaviorDialog\n            open={this.state.newBehaviorDialogOpen}\n            objectType={object.getType()}\n            onClose={() => this.setState({ newBehaviorDialogOpen: false })}\n            onChoose={this.addBehavior}\n            project={project}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\nimport React from 'react';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport IconButton from '../IconButton';\nimport { getHelpLink } from '../../Utils/HelpLink';\nimport Window from '../../Utils/Window';\n\ntype PropsType = {\n  helpPagePath: ?string,\n};\n\n/**\n * The icon that can be used in any dialog to open a help page\n */\nexport default (props: PropsType) => {\n  const { helpPagePath } = props;\n  if (!helpPagePath) return null;\n\n  return (\n    <IconButton\n      onClick={() => Window.openExternalURL(getHelpLink(helpPagePath))}\n    >\n      <HelpOutline />\n    </IconButton>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport React, { Component } from 'react';\nimport Dialog from '../UI/Dialog';\nimport HelpButton from '../UI/HelpButton';\nimport FlatButton from '../UI/FlatButton';\nimport Subheader from '../UI/Subheader';\nimport ListIcon from '../UI/ListIcon';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport { List, ListItem } from '../UI/List';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Create from '@material-ui/icons/Create';\nimport { Line } from '../UI/Grid';\nimport { showMessageBox } from '../UI/Messages/MessageBox';\nimport { getDeprecatedBehaviorsInformation } from '../Hints';\nimport { getHelpLink } from '../Utils/HelpLink';\nimport {\n  type EnumeratedBehaviorMetadata,\n  enumerateBehaviorsMetadata,\n  filterEnumeratedBehaviorMetadata,\n} from './EnumerateBehaviorsMetadata';\nimport SearchBar from '../UI/SearchBar';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport ExtensionsSearch from '../ExtensionsSearch';\nimport Window from '../Utils/Window';\n\nconst styles = {\n  disabledItem: { opacity: 0.6 },\n};\n\nconst BehaviorListItem = ({\n  behaviorMetadata,\n  onClick,\n  disabled,\n}: {|\n  behaviorMetadata: EnumeratedBehaviorMetadata,\n  onClick: () => void,\n  disabled: boolean,\n|}) => (\n  <ListItem\n    leftIcon={\n      <ListIcon\n        src={behaviorMetadata.iconFilename}\n        iconSize={40}\n        isGDevelopIcon\n      />\n    }\n    key={behaviorMetadata.type}\n    primaryText={behaviorMetadata.fullName}\n    secondaryText={behaviorMetadata.description}\n    secondaryTextLines={2}\n    onClick={onClick}\n    style={disabled ? styles.disabledItem : undefined}\n    disabled={disabled}\n  />\n);\n\ntype TabName = 'installed' | 'search';\n\ntype Props = {|\n  project: gdProject,\n  objectType: string,\n  open: boolean,\n  onClose: () => void,\n  onChoose: (type: string, defaultName: string) => void,\n|};\ntype State = {|\n  behaviorMetadata: Array<EnumeratedBehaviorMetadata>,\n  showDeprecated: boolean,\n  searchText: string,\n  currentTab: TabName,\n|};\n\nexport default class NewBehaviorDialog extends Component<Props, State> {\n  state = {\n    ...this._loadFrom(this.props.project),\n    showDeprecated: false,\n    searchText: '',\n    currentTab: 'installed',\n  };\n  _searchBar = React.createRef<SearchBar>();\n\n  componentDidMount() {\n    setTimeout(() => {\n      if (this._searchBar.current) this._searchBar.current.focus();\n    }, 20 /* Be sure that the search bar is shown */);\n  }\n\n  _loadFrom(\n    project: gdProject\n  ): {| behaviorMetadata: Array<EnumeratedBehaviorMetadata> |} {\n    const platform = project.getCurrentPlatform();\n    return {\n      behaviorMetadata:\n        project && platform\n          ? enumerateBehaviorsMetadata(platform, project)\n          : [],\n    };\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      (!this.props.open && newProps.open) ||\n      (newProps.open && this.props.project !== newProps.project)\n    ) {\n      this.setState(this._loadFrom(newProps.project));\n    }\n  }\n\n  _showDeprecated = (showDeprecated: boolean = true) => {\n    this.setState({\n      showDeprecated,\n    });\n  };\n\n  _onNewExtensionInstalled = () => {\n    // Reload behaviors\n    this.setState(this._loadFrom(this.props.project), () => {\n      this._changeTab('installed');\n    });\n  };\n\n  _changeTab = (newTab: TabName) =>\n    this.setState({\n      currentTab: newTab,\n    });\n\n  render() {\n    const { project, open, onClose, objectType } = this.props;\n    const {\n      showDeprecated,\n      behaviorMetadata,\n      searchText,\n      currentTab,\n    } = this.state;\n    if (!open || !project) return null;\n\n    const deprecatedBehaviorsInformation = getDeprecatedBehaviorsInformation();\n\n    const filteredBehaviorMetadata = filterEnumeratedBehaviorMetadata(\n      behaviorMetadata,\n      searchText\n    );\n    const behaviors = filteredBehaviorMetadata.filter(\n      ({ type }) => !deprecatedBehaviorsInformation[type]\n    );\n    const deprecatedBehaviors = filteredBehaviorMetadata.filter(\n      ({ type }) => !!deprecatedBehaviorsInformation[type]\n    );\n\n    const chooseBehavior = (\n      i18n: I18nType,\n      { type, defaultName }: EnumeratedBehaviorMetadata\n    ) => {\n      if (deprecatedBehaviorsInformation[type]) {\n        showMessageBox(i18n._(deprecatedBehaviorsInformation[type].warning));\n      }\n\n      return this.props.onChoose(type, defaultName);\n    };\n\n    const canBehaviorBeUsed = (\n      behaviorMetadata: EnumeratedBehaviorMetadata\n    ) => {\n      // An empty object type means the base object, i.e: any object.\n      return (\n        behaviorMetadata.objectType === '' ||\n        behaviorMetadata.objectType === objectType\n      );\n    };\n\n    const hasSearchNoResult =\n      !!searchText && !behaviors.length && !deprecatedBehaviors.length;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Dialog\n            title={<Trans>Add a new behavior to the object</Trans>}\n            actions={[\n              <FlatButton\n                key=\"close\"\n                label={<Trans>Close</Trans>}\n                primary={false}\n                onClick={onClose}\n              />,\n            ]}\n            secondaryActions={<HelpButton helpPagePath=\"/behaviors\" />}\n            open={open}\n            noMargin\n          >\n            <Tabs value={currentTab} onChange={this._changeTab}>\n              <Tab\n                label={<Trans>Installed Behaviors</Trans>}\n                value=\"installed\"\n              />\n              <Tab label={<Trans>Search New Behaviors</Trans>} value=\"search\" />\n            </Tabs>\n            {currentTab === 'installed' && (\n              <React.Fragment>\n                <SearchBar\n                  value={searchText}\n                  onRequestSearch={() => {\n                    if (behaviors.length) {\n                      chooseBehavior(i18n, behaviors[0]);\n                    } else if (showDeprecated && deprecatedBehaviors.length) {\n                      chooseBehavior(i18n, deprecatedBehaviors[0]);\n                    }\n                  }}\n                  onChange={text =>\n                    this.setState({\n                      searchText: text,\n                    })\n                  }\n                  ref={this._searchBar}\n                />\n                {hasSearchNoResult && (\n                  <EmptyMessage>\n                    <Trans>\n                      No behavior found for your search. Try another search, or\n                      search for new behaviors to install.\n                    </Trans>\n                  </EmptyMessage>\n                )}\n                <List>\n                  {behaviors.map((behaviorMetadata, index) => (\n                    <BehaviorListItem\n                      key={index}\n                      behaviorMetadata={behaviorMetadata}\n                      onClick={() => chooseBehavior(i18n, behaviorMetadata)}\n                      disabled={!canBehaviorBeUsed(behaviorMetadata)}\n                    />\n                  ))}\n                  {showDeprecated && !!deprecatedBehaviors.length && (\n                    <Subheader>\n                      Deprecated (old, prefer not to use anymore)\n                    </Subheader>\n                  )}\n                  {showDeprecated &&\n                    deprecatedBehaviors.map((behaviorMetadata, index) => (\n                      <BehaviorListItem\n                        key={index}\n                        behaviorMetadata={behaviorMetadata}\n                        onClick={() => chooseBehavior(i18n, behaviorMetadata)}\n                        disabled={!canBehaviorBeUsed(behaviorMetadata)}\n                      />\n                    ))}\n                </List>\n                <Line justifyContent=\"center\" alignItems=\"center\">\n                  {!showDeprecated ? (\n                    <FlatButton\n                      key=\"toggle-experimental\"\n                      icon={<Visibility />}\n                      primary={false}\n                      onClick={() => this._showDeprecated(true)}\n                      label={<Trans>Show deprecated (old) behaviors</Trans>}\n                    />\n                  ) : (\n                    <FlatButton\n                      key=\"toggle-experimental\"\n                      icon={<VisibilityOff />}\n                      primary={false}\n                      onClick={() => this._showDeprecated(false)}\n                      label={<Trans>Show deprecated (old) behaviors</Trans>}\n                    />\n                  )}\n                </Line>\n                <Line justifyContent=\"center\" alignItems=\"center\">\n                  <FlatButton\n                    icon={<Create />}\n                    primary={false}\n                    onClick={() =>\n                      Window.openExternalURL(\n                        getHelpLink('/behaviors/events-based-behaviors')\n                      )\n                    }\n                    label={<Trans>Create your own behavior</Trans>}\n                  />\n                </Line>\n              </React.Fragment>\n            )}\n            {currentTab === 'search' && (\n              <ExtensionsSearch\n                project={project}\n                onNewExtensionInstalled={this._onNewExtensionInstalled}\n                showOnlyWithBehaviors\n              />\n            )}\n          </Dialog>\n        )}\n      </I18n>\n    );\n  }\n}\n","/**\n * Return the help page for the given behavior\n * @param {*} behavior\n */\nexport const getBehaviorHelpPagePath = behavior => {\n  if (!behavior) return null;\n\n  switch (behavior.getTypeName()) {\n    case 'DraggableBehavior::Draggable':\n      return '/behaviors/draggable';\n    case 'PlatformBehavior::PlatformerObjectBehavior':\n      return '/behaviors/platformer';\n    case 'PlatformBehavior::PlatformBehavior':\n      return '/behaviors/platformer';\n    default:\n      return '';\n  }\n};\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport TextField from '../UI/TextField';\nimport Dialog from '../UI/Dialog';\n\nexport default class SetupGridDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...props.gridOptions };\n  }\n\n  _onApply = () => {\n    this.props.onApply({\n      gridWidth: this.state.gridWidth,\n      gridHeight: this.state.gridHeight,\n      gridOffsetX: this.state.gridOffsetX,\n      gridOffsetY: this.state.gridOffsetY,\n    });\n  };\n\n  render() {\n    const actions = [\n      <FlatButton\n        key=\"cancel\"\n        label={<Trans>Cancel</Trans>}\n        primary={false}\n        onClick={this.props.onCancel}\n      />,\n      <FlatButton\n        key=\"apply\"\n        label={<Trans>Apply</Trans>}\n        primary={true}\n        keyboardFocused={true}\n        onClick={this._onApply}\n      />,\n    ];\n\n    return (\n      <Dialog\n        actions={actions}\n        open={this.props.open}\n        onRequestClose={this.props.onCancel}\n      >\n        <TextField\n          floatingLabelText={<Trans>Cell width (in pixels)</Trans>}\n          type=\"number\"\n          value={this.state.gridWidth}\n          onChange={(e, value) =>\n            this.setState({ gridWidth: parseInt(value, 10) })\n          }\n        />\n        <TextField\n          floatingLabelText={<Trans>Cell height (in pixels)</Trans>}\n          type=\"number\"\n          value={this.state.gridHeight}\n          onChange={(e, value) =>\n            this.setState({ gridHeight: parseInt(value, 10) })\n          }\n        />\n        <TextField\n          floatingLabelText={<Trans>X offset (in pixels)</Trans>}\n          type=\"number\"\n          value={this.state.gridOffsetX}\n          onChange={(e, value) =>\n            this.setState({ gridOffsetX: parseInt(value, 10) })\n          }\n        />\n        <TextField\n          floatingLabelText={<Trans>Y offset (in pixels)</Trans>}\n          type=\"number\"\n          value={this.state.gridOffsetY}\n          onChange={(e, value) =>\n            this.setState({ gridOffsetY: parseInt(value, 10) })\n          }\n        />\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport TextField from '../UI/TextField';\nimport RaisedButton from '../UI/RaisedButton';\nimport Dialog from '../UI/Dialog';\nimport ColorField from '../UI/ColorField';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport PropertiesEditor from '../PropertiesEditor';\nimport propertiesMapToSchema from '../PropertiesEditor/PropertiesMapToSchema';\nimport some from 'lodash/some';\nimport Checkbox from '../UI/Checkbox';\nimport { isNullPtr } from '../Utils/IsNullPtr';\nconst gd = global.gd;\n\ntype Props = {|\n  open: boolean,\n  layout: gdLayout,\n  project: gdProject,\n  onApply?: () => void,\n  onClose: () => void,\n  onOpenMoreSettings: () => void,\n  onEditVariables: () => void,\n|};\n\ntype State = {|\n  windowTitle: string,\n  shouldStopSoundsOnStartup: boolean,\n  backgroundColor: {\n    r: number,\n    g: number,\n    b: number,\n    a: number,\n  },\n|};\n\nexport default class ScenePropertiesDialog extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = this._loadFrom(props.layout);\n  }\n\n  _loadFrom(layout: gdLayout): State {\n    return {\n      windowTitle: layout.getWindowDefaultTitle(),\n      shouldStopSoundsOnStartup: layout.stopSoundsOnStartup(),\n      backgroundColor: {\n        r: layout.getBackgroundColorRed(),\n        g: layout.getBackgroundColorGreen(),\n        b: layout.getBackgroundColorBlue(),\n        a: 1,\n      },\n    };\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      (!this.props.open && newProps.open) ||\n      (newProps.open && this.props.layout !== newProps.layout)\n    ) {\n      this.setState(this._loadFrom(newProps.layout));\n    }\n  }\n\n  _onApply = () => {\n    this.props.layout.setWindowDefaultTitle(this.state.windowTitle);\n    this.props.layout.setStopSoundsOnStartup(\n      this.state.shouldStopSoundsOnStartup\n    );\n    this.props.layout.setBackgroundColor(\n      this.state.backgroundColor.r,\n      this.state.backgroundColor.g,\n      this.state.backgroundColor.b\n    );\n    if (this.props.onApply) this.props.onApply();\n  };\n\n  render() {\n    const { layout, project } = this.props;\n    const actions = [\n      // TODO: Add support for cancelling modifications made to BehaviorSharedData\n      // (either by enhancing a function like propertiesMapToSchema or using copies)\n      // and then re-enable cancel button.\n      // <FlatButton\n      //   label={<Trans>Cancel</Trans>}\n      //   primary={false}\n      //   onClick={this.props.onClose}\n      // />,\n      <FlatButton\n        label={<Trans>Ok</Trans>}\n        key=\"ok\"\n        primary={true}\n        keyboardFocused={true}\n        onClick={this._onApply}\n      />,\n    ];\n\n    const allBehaviorSharedDataNames = layout\n      .getAllBehaviorSharedDataNames()\n      .toJSArray();\n\n    const propertiesEditors = allBehaviorSharedDataNames\n      .map(name => {\n        const sharedDataContent = layout.getBehaviorSharedData(name);\n        const type = sharedDataContent.getTypeName();\n\n        const behaviorSharedData = gd.JsPlatform.get().getBehaviorSharedDatas(\n          type\n        );\n        if (isNullPtr(gd, behaviorSharedData)) return null;\n\n        const properties = behaviorSharedData.getProperties(\n          sharedDataContent.getContent(),\n          project\n        );\n        const propertiesSchema = propertiesMapToSchema(\n          properties,\n          sharedDataContent =>\n            behaviorSharedData.getProperties(\n              sharedDataContent.getContent(),\n              project\n            ),\n          (sharedDataContent, name, value) =>\n            behaviorSharedData.updateProperty(\n              sharedDataContent.getContent(),\n              name,\n              value,\n              project\n            )\n        );\n\n        return (\n          !!propertiesSchema.length && (\n            <PropertiesEditor\n              key={name}\n              schema={propertiesSchema}\n              instances={[sharedDataContent]}\n            />\n          )\n        );\n      })\n      .filter(Boolean);\n\n    return (\n      <Dialog\n        title={<Trans>Scene properties</Trans>}\n        actions={actions}\n        secondaryActions={\n          <RaisedButton\n            label={<Trans>Edit scene variables</Trans>}\n            fullWidth\n            onClick={() => {\n              this.props.onEditVariables();\n              this.props.onClose();\n            }}\n          />\n        }\n        open={this.props.open}\n        onRequestClose={this.props.onClose}\n        maxWidth=\"sm\"\n      >\n        <TextField\n          floatingLabelText={<Trans>Window title</Trans>}\n          fullWidth\n          type=\"text\"\n          value={this.state.windowTitle}\n          onChange={(e, value) => this.setState({ windowTitle: value })}\n        />\n        <Checkbox\n          checked={this.state.shouldStopSoundsOnStartup}\n          label={<Trans>Stop musics and sounds on startup</Trans>}\n          onCheck={(e, check) =>\n            this.setState({\n              shouldStopSoundsOnStartup: check,\n            })\n          }\n        />\n        <ColorField\n          floatingLabelText={<Trans>Scene background color</Trans>}\n          fullWidth\n          disableAlpha\n          color={this.state.backgroundColor}\n          onChangeComplete={color =>\n            this.setState({ backgroundColor: color.rgb })\n          }\n        />\n        {!some(propertiesEditors) && (\n          <EmptyMessage>\n            <Trans>\n              Any additional properties will appear here if you add behaviors to\n              objects, like Physics behavior.\n            </Trans>\n          </EmptyMessage>\n        )}\n        {propertiesEditors}\n        {this.props.onOpenMoreSettings && (\n          <RaisedButton\n            label={<Trans>Open advanced settings</Trans>}\n            fullWidth\n            onClick={() => {\n              this.props.onOpenMoreSettings();\n              this.props.onClose();\n            }}\n          />\n        )}\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport React, { PureComponent } from 'react';\nimport { ToolbarGroup } from '../UI/Toolbar';\nimport ToolbarSeparator from '../UI/ToolbarSeparator';\nimport ToolbarIcon from '../UI/ToolbarIcon';\nimport ElementWithMenu from '../UI/Menu/ElementWithMenu';\nimport InstancesSelection from './InstancesSelection';\n\ntype Props = {|\n  showPreviewButton: boolean,\n  onPreview: () => void,\n  showNetworkPreviewButton: boolean,\n  onNetworkPreview: () => void,\n  onOpenDebugger: () => void,\n  showPreviewButton: boolean,\n  openObjectsList: () => void,\n  openObjectGroupsList: () => void,\n  openProperties: () => void,\n  undo: () => void,\n  canUndo: boolean,\n  redo: () => void,\n  canRedo: boolean,\n  deleteSelection: () => void,\n  instancesSelection: InstancesSelection,\n  toggleInstancesList: () => void,\n  toggleLayersList: () => void,\n  isWindowMaskShown: () => boolean,\n  toggleWindowMask: () => void,\n  isGridShown: () => boolean,\n  toggleGrid: () => void,\n  openSetupGrid: () => void,\n  zoomIn: () => void,\n  zoomOut: () => void,\n  centerView: () => void,\n  setZoomFactor: number => void,\n  onOpenSettings?: ?() => void,\n|};\n\nexport class Toolbar extends PureComponent<Props> {\n  render() {\n    return (\n      <ToolbarGroup lastChild>\n        {this.props.showPreviewButton && (\n          <ToolbarIcon\n            onClick={this.props.onPreview}\n            src=\"res/ribbon_default/preview32.png\"\n            tooltip={t`Launch a preview of the scene`}\n          />\n        )}\n        {this.props.showNetworkPreviewButton && (\n          <ElementWithMenu\n            element={\n              <ToolbarIcon\n                src=\"res/ribbon_default/bug32.png\"\n                tooltip={t`Advanced preview options (debugger, network preview...)`}\n              />\n            }\n            buildMenuTemplate={() => [\n              {\n                label: 'Network preview (Preview over WiFi/LAN)',\n                click: () => this.props.onNetworkPreview(),\n              },\n              { type: 'separator' },\n              {\n                label: 'Preview with debugger and performance profiler',\n                click: () => this.props.onOpenDebugger(),\n              },\n            ]}\n          />\n        )}\n        {this.props.showPreviewButton && <ToolbarSeparator />}\n        <ToolbarIcon\n          onClick={this.props.openObjectsList}\n          src=\"res/ribbon_default/objects64.png\"\n          tooltip={t`Open the objects editor`}\n        />\n        <ToolbarIcon\n          onClick={this.props.openObjectGroupsList}\n          src={'res/ribbon_default/objectsgroups64.png'}\n          tooltip={t`Open the objects groups editor`}\n        />\n        <ToolbarIcon\n          onClick={this.props.openProperties}\n          src=\"res/ribbon_default/editprop32.png\"\n          tooltip={t`Open the properties panel`}\n        />\n        <ToolbarSeparator />\n        <ToolbarIcon\n          onClick={this.props.undo}\n          src=\"res/ribbon_default/undo32.png\"\n          disabled={!this.props.canUndo}\n          tooltip={t`Undo the last changes`}\n        />\n        <ToolbarIcon\n          onClick={this.props.redo}\n          src=\"res/ribbon_default/redo32.png\"\n          disabled={!this.props.canRedo}\n          tooltip={t`Redo the last changes`}\n        />\n        <ToolbarSeparator />\n        <ToolbarIcon\n          onClick={this.props.deleteSelection}\n          src=\"res/ribbon_default/deleteselected32.png\"\n          disabled={\n            !this.props.instancesSelection.getSelectedInstances().length\n          }\n          tooltip={t`Delete the selected instances from the scene`}\n        />\n        <ToolbarIcon\n          onClick={this.props.toggleInstancesList}\n          src=\"res/ribbon_default/ObjectsPositionsList32.png\"\n          tooltip={t`Open the list of instances`}\n        />\n        <ToolbarIcon\n          onClick={this.props.toggleLayersList}\n          src=\"res/ribbon_default/layers32.png\"\n          tooltip={t`Open the layers editor`}\n        />\n        <ToolbarSeparator />\n        <ElementWithMenu\n          element={\n            <ToolbarIcon\n              src=\"res/ribbon_default/grid32.png\"\n              tooltip={t`Toggle/edit grid`}\n            />\n          }\n          buildMenuTemplate={() => [\n            {\n              type: 'checkbox',\n              label: 'Show Mask',\n              checked: this.props.isWindowMaskShown(),\n              click: () => this.props.toggleWindowMask(),\n            },\n            {\n              type: 'checkbox',\n              label: 'Show grid',\n              checked: this.props.isGridShown(),\n              click: () => this.props.toggleGrid(),\n            },\n            { type: 'separator' },\n            {\n              label: 'Setup grid',\n              click: () => this.props.openSetupGrid(),\n            },\n          ]}\n        />\n        <ElementWithMenu\n          element={\n            <ToolbarIcon\n              src=\"res/ribbon_default/zoom32.png\"\n              tooltip={t`Change editor zoom`}\n            />\n          }\n          buildMenuTemplate={() => [\n            {\n              label: 'Zoom in',\n              click: this.props.zoomIn,\n              accelerator: 'CmdOrCtrl++',\n            },\n            {\n              label: 'Zoom out',\n              click: this.props.zoomOut,\n              accelerator: 'CmdOrCtrl+-',\n            },\n            {\n              label: 'Center View',\n              click: () => this.props.centerView(),\n            },\n            { type: 'separator' },\n            { label: '5%', click: () => this.props.setZoomFactor(0.05) },\n            { label: '10%', click: () => this.props.setZoomFactor(0.1) },\n            { label: '25%', click: () => this.props.setZoomFactor(0.25) },\n            { label: '50%', click: () => this.props.setZoomFactor(0.5) },\n            { label: '100%', click: () => this.props.setZoomFactor(1.0) },\n            { label: '150%', click: () => this.props.setZoomFactor(1.5) },\n            { label: '200%', click: () => this.props.setZoomFactor(2.0) },\n            { label: '400%', click: () => this.props.setZoomFactor(4.0) },\n          ]}\n        />\n      </ToolbarGroup>\n    );\n  }\n}\n\nexport default Toolbar;\n","import React, { Component } from 'react';\nimport Measure from 'react-measure';\n\nconst styles = {\n  flexContainer: { display: 'flex', flex: 1, position: 'relative' },\n  absoluteContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: 'hidden',\n  },\n};\n\n/**\n * Take a component and pass the maximum size that the component can take\n * as width and height props.\n * @param {*} WrappedComponent\n * @param {*} options\n */\nexport const passFullSize = (WrappedComponent, { useFlex }) => {\n  return class FullSizeMeasurer extends Component {\n    state = {\n      width: undefined,\n      height: undefined,\n    };\n\n    render() {\n      const { wrappedComponentRef, ...otherProps } = this.props;\n\n      return (\n        <Measure\n          onMeasure={({ width, height }) => this.setState({ width, height })}\n        >\n          <div\n            style={useFlex ? styles.flexContainer : styles.absoluteContainer}\n          >\n            {this.state.width !== undefined &&\n              this.state.height !== undefined && (\n                <WrappedComponent\n                  width={this.state.width}\n                  height={this.state.height}\n                  ref={ref => wrappedComponentRef && wrappedComponentRef(ref)}\n                  {...otherProps}\n                />\n              )}\n          </div>\n        </Measure>\n      );\n    }\n  };\n};\n","// @flow\nimport React, { Component } from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport ViewPosition from './ViewPosition';\nimport throttle from 'lodash/throttle';\nimport { ScreenTypeMeasurer } from '../UI/Reponsive/ScreenTypeMeasurer';\n\nconst styles = {\n  container: {\n    overflow: 'hidden',\n  },\n  xScrollbar: {\n    position: 'absolute',\n    top: -11,\n    left: 0,\n    right: 0,\n  },\n  yScrollbar: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: -11,\n    transform: 'rotate(180deg)',\n  },\n};\n\ntype ScrollableComponent = {\n  scrollTo: (number, number) => void,\n  getViewPosition: () => ?ViewPosition,\n};\n\ntype Props = {\n  wrappedEditorRef: ?(?ScrollableComponent) => void,\n};\n\ntype State = {\n  xValue: number,\n  yValue: number,\n  xMin: number,\n  xMax: number,\n  yMin: number,\n  yMax: number,\n};\n\nconst noop = () => {};\n\n/**\n * Add scrollbars that track the viewPosition of the wrapped component\n * @param {*} WrappedComponent\n * @param {*} options\n */\nexport const addScrollbars = (WrappedComponent: any) => {\n  return class ScrollbarContainer extends Component<Props, State> {\n    _editor: ?ScrollableComponent = null;\n\n    state: State = {\n      xValue: 0,\n      yValue: 0,\n      xMin: -5000,\n      xMax: +5000,\n      yMin: -5000,\n      yMax: +5000,\n    };\n\n    componentDidMount() {\n      if (this._editor) {\n        this._handleViewPositionChange(this._editor.getViewPosition());\n      }\n    }\n\n    _handleXChange = (e: any, value: number) => {\n      const { xMin, xMax } = this.state;\n      const xValue = xMin + ((xMax - xMin) * value) / 100;\n      this.setState(\n        {\n          xValue,\n        },\n        () => {\n          if (this._editor) {\n            this._editor.scrollTo(this.state.xValue, this.state.yValue);\n          }\n        }\n      );\n    };\n\n    _handleYChange = (e: any, value: number) => {\n      const { yMin, yMax } = this.state;\n      // Substract the value from 100 as the slider is 180deg rotated. Not perfect though\n      // as it breaks when using the keyboard arrow keys (when focusing the slider).\n      const yValue = yMin + ((yMax - yMin) * (100 - value)) / 100;\n      this.setState(\n        {\n          yValue,\n        },\n        () => {\n          if (this._editor) {\n            this._editor.scrollTo(this.state.xValue, this.state.yValue);\n          }\n        }\n      );\n    };\n\n    _setAndAdjust = ({\n      xValue,\n      yValue,\n    }: {\n      xValue: number,\n      yValue: number,\n    }) => {\n      const xMax = Math.max(Math.abs(xValue) + 100, this.state.xMax);\n      const yMax = Math.max(Math.abs(yValue) + 100, this.state.yMax);\n\n      this.setState({\n        xMax,\n        yMax,\n        xMin: -xMax,\n        yMin: -yMax,\n        xValue,\n        yValue,\n      });\n    };\n\n    _handleViewPositionChange = throttle(\n      (viewPosition: ?ViewPosition) => {\n        if (!viewPosition) return;\n\n        this._setAndAdjust({\n          xValue: viewPosition.getViewX(),\n          yValue: viewPosition.getViewY(),\n        });\n      },\n      500, // Throttle the updates after a scroll to avoid make lots of updates in a row that would kill CPU\n      { leading: false, trailing: true }\n    );\n\n    render() {\n      const { wrappedEditorRef, ...otherProps } = this.props;\n\n      return (\n        <ScreenTypeMeasurer>\n          {screenType => (\n            <div style={styles.container}>\n              <WrappedComponent\n                onViewPositionChanged={\n                  screenType !== 'touch' ? this._handleViewPositionChange : noop\n                }\n                ref={(editorRef: ?ScrollableComponent) => {\n                  wrappedEditorRef && wrappedEditorRef(editorRef);\n                  this._editor = editorRef;\n                }}\n                {...otherProps}\n              />\n              {screenType !== 'touch' && (\n                <Slider\n                  value={\n                    ((this.state.xValue - this.state.xMin) /\n                      (this.state.xMax - this.state.xMin)) *\n                    100\n                  }\n                  onChange={this._handleXChange}\n                  style={styles.xScrollbar}\n                  orientation=\"horizontal\"\n                />\n              )}\n              {screenType !== 'touch' && (\n                <Slider\n                  value={\n                    ((this.state.yValue - this.state.yMin) /\n                      (this.state.yMax - this.state.yMin)) *\n                    100\n                  }\n                  onChange={this._handleYChange}\n                  style={styles.yScrollbar}\n                  orientation=\"vertical\"\n                />\n              )}\n            </div>\n          )}\n        </ScreenTypeMeasurer>\n      );\n    }\n  };\n};\n","// @flow\nimport React, { Component } from 'react';\nimport IconButton from '../IconButton';\nimport FilterList from '@material-ui/icons/FilterList';\nimport ElementWithMenu from '../Menu/ElementWithMenu';\n\nconst styles = {\n  container: {\n    padding: 0,\n    width: 32,\n    height: 32,\n  },\n  icon: {\n    width: 16,\n    height: 16,\n  },\n};\n\ntype Props = {\n  buildMenuTemplate: () => Array<any>,\n};\n\nexport default class TagsButton extends Component<Props, {||}> {\n  render() {\n    return (\n      <ElementWithMenu\n        element={\n          <IconButton style={styles.container}>\n            <FilterList htmlColor=\"white\" style={styles.icon} />\n          </IconButton>\n        }\n        buildMenuTemplate={this.props.buildMenuTemplate}\n      />\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { AutoSizer } from 'react-virtualized';\nimport SortableVirtualizedItemList from '../UI/SortableVirtualizedItemList';\nimport Background from '../UI/Background';\nimport SearchBar from '../UI/SearchBar';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport { filterResourcesList } from './EnumerateResources';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport {\n  createOrUpdateResource,\n  getLocalResourceFullPath,\n  getResourceFilePathStatus,\n  RESOURCE_EXTENSIONS,\n} from './ResourceUtils.js';\nimport { type ResourceKind } from './ResourceSource.flow';\n\nconst path = optionalRequire('path');\nconst glob = optionalRequire('glob');\nconst electron = optionalRequire('electron');\nconst hasElectron = electron ? true : false;\n\nconst gd = global.gd;\n\nconst styles = {\n  listContainer: {\n    flex: 1,\n  },\n};\n\nconst getResourceName = (resource: gdResource) => resource.getName();\n\ntype State = {|\n  renamedResource: ?gdResource,\n  searchText: string,\n  resourcesWithErrors: { [string]: '' | 'error' | 'warning' },\n|};\n\ntype Props = {|\n  project: gdProject,\n  selectedResource: ?gdResource,\n  onSelectResource: (resource: ?gdResource) => void,\n  onDeleteResource: (resource: gdResource) => void,\n  onRenameResource: (\n    resource: gdResource,\n    newName: string,\n    cb: (boolean) => void\n  ) => void,\n|};\n\nexport default class ResourcesList extends React.Component<Props, State> {\n  sortableList: any;\n  state: State = {\n    renamedResource: null,\n    searchText: '',\n    resourcesWithErrors: {},\n  };\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    // The component is costly to render, so avoid any re-rendering as much\n    // as possible.\n    // We make the assumption that no changes to resources list is made outside\n    // from the component.\n    // If a change is made, the component won't notice it: you have to manually\n    // call forceUpdate.\n\n    if (\n      this.state.renamedResource !== nextState.renamedResource ||\n      this.state.searchText !== nextState.searchText\n    )\n      return true;\n\n    if (\n      this.props.project !== nextProps.project ||\n      this.props.selectedResource !== nextProps.selectedResource\n    )\n      return true;\n\n    return false;\n  }\n\n  _deleteResource = (resource: gdResource) => {\n    this.props.onDeleteResource(resource);\n  };\n\n  _locateResourceFile = (resource: gdResource) => {\n    const resourceFolderPath = path.dirname(\n      getLocalResourceFullPath(this.props.project, resource.getName())\n    );\n    electron.shell.openItem(resourceFolderPath);\n  };\n\n  _openResourceFile = (resource: gdResource) => {\n    const resourceFilePath = getLocalResourceFullPath(\n      this.props.project,\n      resource.getName()\n    );\n    electron.shell.openItem(resourceFilePath);\n  };\n\n  _copyResourceFilePath = (resource: gdResource) => {\n    const resourceFilePath = getLocalResourceFullPath(\n      this.props.project,\n      resource.getName()\n    );\n    electron.clipboard.writeText(resourceFilePath);\n  };\n\n  _scanForNewResources = (\n    extensions: string,\n    createResource: () => gdResource\n  ) => {\n    const project = this.props.project;\n    const resourcesManager = project.getResourcesManager();\n    const projectPath = path.dirname(project.getProjectFile());\n\n    const getDirectories = (src, callback) => {\n      glob(src + '/**/*.{' + extensions + '}', callback);\n    };\n    getDirectories(projectPath, (err, res) => {\n      if (err) {\n        console.error('Error loading ', err);\n      } else {\n        res.forEach(pathFound => {\n          const fileName = path.relative(projectPath, pathFound);\n          if (!resourcesManager.hasResource(fileName)) {\n            createOrUpdateResource(project, createResource(), fileName);\n            console.info(`${fileName} added to project.`);\n          }\n        });\n      }\n      this.forceUpdate();\n    });\n  };\n\n  _removeUnusedResources = (resourceType: ResourceKind) => {\n    const { project } = this.props;\n    gd.ProjectResourcesAdder.getAllUseless(project, resourceType)\n      .toJSArray()\n      .forEach(resourceName => {\n        console.info(\n          `Removing unused` + resourceType + ` resource: ${resourceName}`\n        );\n      });\n    gd.ProjectResourcesAdder.removeAllUseless(project, resourceType);\n    this.forceUpdate();\n  };\n\n  _removeAllResourcesWithInvalidPath = () => {\n    const { project } = this.props;\n    const resourcesManager = project.getResourcesManager();\n    resourcesManager\n      .getAllResourceNames()\n      .toJSArray()\n      .forEach(resourceName => {\n        if (getResourceFilePathStatus(project, resourceName) === 'error') {\n          resourcesManager.removeResource(resourceName);\n          console.info('Removed due to invalid path: ' + resourceName);\n        }\n      });\n    this.forceUpdate();\n  };\n\n  _editName = (resource: ?gdResource) => {\n    this.setState(\n      {\n        renamedResource: resource,\n      },\n      () => {\n        if (this.sortableList) this.sortableList.forceUpdateGrid();\n      }\n    );\n  };\n\n  _rename = (resource: gdResource, newName: string) => {\n    const { project } = this.props;\n    this.setState({\n      renamedResource: null,\n    });\n\n    if (resource.getName() === newName) return;\n\n    if (project.getResourcesManager().hasResource(newName)) {\n      showWarningBox('Another resource with this name already exists');\n      return;\n    }\n\n    // eslint-disable-next-line\n    const answer = confirm(\n      'Are you sure you want to rename this resource? \\nGame objects using the old name will no longer be able to find it!'\n    );\n    if (!answer) return;\n\n    this.props.onRenameResource(resource, newName, doRename => {\n      if (!doRename) return;\n      resource.setName(newName);\n      this.forceUpdate();\n    });\n  };\n\n  _moveSelectionTo = (destinationResource: gdResource) => {\n    const { project, selectedResource } = this.props;\n    if (!selectedResource) return;\n\n    const resourcesManager = project.getResourcesManager();\n    resourcesManager.moveResource(\n      resourcesManager.getResourcePosition(selectedResource.getName()),\n      resourcesManager.getResourcePosition(destinationResource.getName())\n    );\n    this.forceUpdateList();\n  };\n\n  forceUpdateList = () => {\n    this.forceUpdate();\n    if (this.sortableList) this.sortableList.forceUpdateGrid();\n  };\n\n  _renderResourceMenuTemplate = (resource: gdResource, _index: number) => {\n    return [\n      {\n        label: 'Rename',\n        click: () => this._editName(resource),\n      },\n      {\n        label: 'Remove',\n        click: () => this._deleteResource(resource),\n      },\n      { type: 'separator' },\n      {\n        label: 'Open File',\n        click: () => this._openResourceFile(resource),\n        enabled: hasElectron,\n      },\n      {\n        label: 'Locate File',\n        click: () => this._locateResourceFile(resource),\n        enabled: hasElectron,\n      },\n      {\n        label: 'Copy File Path',\n        click: () => this._copyResourceFilePath(resource),\n        enabled: hasElectron,\n      },\n      { type: 'separator' },\n      {\n        label: 'Scan for Images',\n        click: () => {\n          this._scanForNewResources(\n            RESOURCE_EXTENSIONS.image,\n            () => new gd.ImageResource()\n          );\n        },\n        enabled: hasElectron,\n      },\n      {\n        label: 'Scan for Audio',\n        click: () => {\n          this._scanForNewResources(\n            RESOURCE_EXTENSIONS.audio,\n            () => new gd.AudioResource()\n          );\n        },\n        enabled: hasElectron,\n      },\n      {\n        label: 'Scan for Fonts',\n        click: () => {\n          this._scanForNewResources(\n            RESOURCE_EXTENSIONS.font,\n            () => new gd.FontResource()\n          );\n        },\n        enabled: hasElectron,\n      },\n      {\n        label: 'Scan for Videos',\n        click: () => {\n          this._scanForNewResources(\n            RESOURCE_EXTENSIONS.video,\n            () => new gd.VideoResource()\n          );\n        },\n        enabled: hasElectron,\n      },\n      { type: 'separator' },\n      {\n        label: 'Remove Unused Images',\n        click: () => {\n          this._removeUnusedResources('image');\n        },\n      },\n      {\n        label: 'Remove Unused Audio',\n        click: () => {\n          this._removeUnusedResources('audio');\n        },\n      },\n      {\n        label: 'Remove Unused Fonts',\n        click: () => {\n          this._removeUnusedResources('font');\n        },\n      },\n      {\n        label: 'Remove Resources with Invalid Path',\n        click: () => {\n          this._removeAllResourcesWithInvalidPath();\n        },\n        enabled: hasElectron,\n      },\n    ];\n  };\n\n  checkMissingPaths = () => {\n    const { project } = this.props;\n    const resourcesManager = project.getResourcesManager();\n    const resourceNames = resourcesManager.getAllResourceNames().toJSArray();\n    const resourcesWithErrors = {};\n    resourceNames.forEach(resourceName => {\n      resourcesWithErrors[resourceName] = getResourceFilePathStatus(\n        project,\n        resourceName\n      );\n    });\n    this.setState({ resourcesWithErrors });\n    this.forceUpdateList();\n  };\n\n  componentDidMount() {\n    this.checkMissingPaths();\n  }\n\n  render() {\n    const { project, selectedResource, onSelectResource } = this.props;\n    const { searchText } = this.state;\n\n    const resourcesManager = project.getResourcesManager();\n    const allResourcesList = resourcesManager\n      .getAllResourceNames()\n      .toJSArray()\n      .map(resourceName => resourcesManager.getResource(resourceName));\n    const filteredList = filterResourcesList(allResourcesList, searchText);\n\n    // Force List component to be mounted again if project\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const listKey = project.ptr;\n\n    return (\n      <Background>\n        <div style={styles.listContainer}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <SortableVirtualizedItemList\n                key={listKey}\n                ref={sortableList => (this.sortableList = sortableList)}\n                fullList={filteredList}\n                width={width}\n                height={height}\n                getItemName={getResourceName}\n                selectedItems={selectedResource ? [selectedResource] : []}\n                onItemSelected={onSelectResource}\n                renamedItem={this.state.renamedResource}\n                onRename={this._rename}\n                onMoveSelectionToItem={this._moveSelectionTo}\n                buildMenuTemplate={this._renderResourceMenuTemplate}\n                erroredItems={this.state.resourcesWithErrors}\n                reactDndType=\"GD_RESOURCE\"\n              />\n            )}\n          </AutoSizer>\n        </div>\n        <SearchBar\n          value={searchText}\n          onRequestSearch={() => {}}\n          onChange={text =>\n            this.setState({\n              searchText: text,\n            })\n          }\n        />\n      </Background>\n    );\n  }\n}\n","// @flow\n\nexport const filterResourcesList = (\n  list: Array<gdResource>,\n  searchText: string\n): Array<gdResource> => {\n  if (!searchText) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list.filter((resource: gdResource) => {\n    return (\n      resource\n        .getName()\n        .toLowerCase()\n        .indexOf(lowercaseSearchText) !== -1\n    );\n  });\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport ReactErrorBoundary from 'react-error-boundary';\nimport BugReport from '@material-ui/icons/BugReport';\nimport PlaceholderMessage from './PlaceholderMessage';\nimport Divider from '@material-ui/core/Divider';\nimport RaisedButton from './RaisedButton';\nimport { sendErrorMessage } from '../Utils/Analytics/EventSender';\nimport Window from '../Utils/Window';\nimport Text from './Text';\nimport { Line, Spacer } from './Grid';\n\nconst errorHandler = (error: Error, componentStack: string) => {\n  console.error('Error catched by Boundary:', error, componentStack);\n  sendErrorMessage('Error catched by error boundary', 'error-boundary', {\n    error,\n    componentStack,\n  });\n};\n\nexport const ErrorFallbackComponent = ({\n  componentStack,\n  error,\n}: {\n  componentStack: string,\n  error: Error,\n}) => (\n  <PlaceholderMessage>\n    <Line>\n      <BugReport fontSize=\"large\" />\n      <Spacer />\n      <Text size=\"title\">This editor encountered a problem.</Text>\n    </Line>\n    <Divider />\n    <Text>\n      Something wrong happened :(\n      <br />\n      Please <b>backup your game file</b> and save your game to ensure that you\n      don't lose anything.\n    </Text>\n    <Text>\n      The error was automatically reported.\n      <br />\n      To make sure it's fixed, you may report it on GitHub, the platform where\n      GDevelop is developed:\n    </Text>\n    <RaisedButton\n      label={<Trans>Report the issue on GitHub</Trans>}\n      onClick={() => {\n        const body = `\n=> Please write here a short description of when the error occured and how to reproduce it.\nYou also may have to create an account on GitHub before posting.\n\nWhen you're ready, click on \"Submit new issue\". Don't change the rest of the message. Thanks!\n\n## Error stack (don't write anything here)\n\\`\\`\\`\n${error ? error.stack : 'No error found'}\n\\`\\`\\`\n\n## Component stack (don't write anything here)\n\\`\\`\\`\n${componentStack || 'No component stack found'}\n\\`\\`\\`\n        `;\n        Window.openExternalURL(\n          `https://github.com/4ian/GDevelop/issues/new?body=${encodeURIComponent(\n            body\n          )}&title=Crash%20while%20using%20an%20editor`\n        );\n      }}\n    />\n  </PlaceholderMessage>\n);\n\ntype Props = {|\n  children: React.Node,\n|};\n\nconst ErrorBoundary = (props: Props) => (\n  <ReactErrorBoundary\n    FallbackComponent={ErrorFallbackComponent}\n    onError={errorHandler}\n  >\n    {props.children}\n  </ReactErrorBoundary>\n);\n\nexport default ErrorBoundary;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport SelectField from '../../UI/SelectField';\nimport FlatButton from '../../UI/FlatButton';\nimport SelectOption from '../../UI/SelectOption';\nimport Dialog from '../../UI/Dialog';\nimport { Column, Line } from '../../UI/Grid';\nimport Window from '../../Utils/Window';\nimport PreferencesContext from './PreferencesContext';\nimport AlertMessage from '../../UI/AlertMessage';\nimport LocalesMetadata from '../../locales/LocalesMetadata';\nimport { I18n } from '@lingui/react';\nimport Divider from '@material-ui/core/Divider';\n\ntype Props = {|\n  open: boolean,\n  onClose: (languageDidChange: boolean) => void,\n|};\n\ntype State = {|\n  languageDidChange: boolean,\n|};\n\nconst displayLocaleMetadata = localeMetadata => {\n  if (localeMetadata.languageCode === 'en') return false;\n  if (localeMetadata.languageCode === 'pseudo_LOCALE') return Window.isDev();\n\n  return true;\n};\n\nconst renderLanguageSelectOption = localeMetadata => {\n  const translationRatio = localeMetadata.translationRatio || 0;\n  const percent = (100 * localeMetadata.translationRatio).toFixed(0);\n  const isStarted = translationRatio > 0;\n\n  return (\n    <SelectOption\n      value={localeMetadata.languageCode}\n      primaryText={\n        localeMetadata.languageNativeName +\n        ' (' +\n        localeMetadata.languageName +\n        ')' +\n        (isStarted ? ` - ~${percent}%` : '')\n      }\n      disabled={!isStarted}\n      key={localeMetadata.languageCode}\n    />\n  );\n};\n\nexport default class LanguageDialog extends Component<Props, State> {\n  state = {\n    languageDidChange: false,\n  };\n\n  render() {\n    const { open, onClose } = this.props;\n    if (!open) return null;\n\n    const localesToDisplay = LocalesMetadata.filter(displayLocaleMetadata);\n    const goodProgressLocales = localesToDisplay.filter(\n      localeMetadata => localeMetadata.translationRatio > 0.5\n    );\n    const startedLocales = localesToDisplay.filter(\n      localeMetadata => localeMetadata.translationRatio < 0.5\n    );\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <PreferencesContext.Consumer>\n            {({ values, setLanguage }) => {\n              const isLoadingLanguage = i18n.language !== values.language;\n\n              return (\n                <Dialog\n                  actions={[\n                    <FlatButton\n                      label={\n                        isLoadingLanguage ? (\n                          <Trans>Loading...</Trans>\n                        ) : (\n                          <Trans>Close</Trans>\n                        )\n                      }\n                      primary={false}\n                      onClick={() => {\n                        onClose(this.state.languageDidChange);\n                      }}\n                      disabled={isLoadingLanguage}\n                      key=\"close\"\n                    />,\n                  ]}\n                  secondaryActions={[\n                    <FlatButton\n                      label={<Trans>Report a wrong translation</Trans>}\n                      key=\"report-wrong-translation\"\n                      primary={false}\n                      onClick={() =>\n                        Window.openExternalURL(\n                          'https://github.com/4ian/GDevelop/issues/969'\n                        )\n                      }\n                    />,\n                  ]}\n                  onRequestClose={() => onClose(this.state.languageDidChange)}\n                  open={open}\n                  title={<Trans>Language</Trans>}\n                >\n                  <Column>\n                    <Line>\n                      <AlertMessage kind=\"info\">\n                        <Trans>\n                          Support for translations is still new and in beta.\n                          GDevelop needs your help to be translated in your\n                          language!\n                        </Trans>\n                      </AlertMessage>\n                    </Line>\n                    <Line expand>\n                      <SelectField\n                        floatingLabelText={\n                          <Trans>Choose GDevelop language</Trans>\n                        }\n                        value={values.language}\n                        onChange={(e, i, value: string) => {\n                          setLanguage(value);\n                          this.setState({\n                            languageDidChange: true,\n                          });\n                        }}\n                        fullWidth\n                      >\n                        <SelectOption\n                          value=\"en\"\n                          primaryText=\"English (default)\"\n                        />\n                        {goodProgressLocales.map(localeMetadata =>\n                          renderLanguageSelectOption(localeMetadata)\n                        )}\n                        <Divider />\n                        {startedLocales.map(localeMetadata =>\n                          renderLanguageSelectOption(localeMetadata)\n                        )}\n                      </SelectField>\n                    </Line>\n                    <Line expand>\n                      <FlatButton\n                        primary\n                        label={\n                          <Trans>Help to translate GD in your language</Trans>\n                        }\n                        onClick={() =>\n                          Window.openExternalURL(\n                            'https://crowdin.com/project/gdevelop'\n                          )\n                        }\n                        fullWidth\n                      />\n                    </Line>\n                  </Column>\n                </Dialog>\n              );\n            }}\n          </PreferencesContext.Consumer>\n        )}\n      </I18n>\n    );\n  }\n}\n","// This file is generated by compile-translations.js script\n// prettier-ignore\nmodule.exports = [\n  {\n    \"languageCode\": \"af_ZA\",\n    \"languageName\": \"Afrikaans\",\n    \"languageNativeName\": \"Afrikaans\",\n    \"translationRatio\": 0.008290387631637919\n  },\n  {\n    \"languageCode\": \"ar_SA\",\n    \"languageName\": \"Arabic\",\n    \"languageNativeName\": \"اللغة العربية\",\n    \"translationRatio\": 0.11942639480170292\n  },\n  {\n    \"languageCode\": \"az_AZ\",\n    \"languageName\": \"Azerbaijani\",\n    \"languageNativeName\": \"azərbaycan dili\",\n    \"translationRatio\": 0.02240645305848088\n  },\n  {\n    \"languageCode\": \"bg_BG\",\n    \"languageName\": \"Bulgarian\",\n    \"languageNativeName\": \"български език\",\n    \"translationRatio\": 0.06408245574725524\n  },\n  {\n    \"languageCode\": \"bn_BD\",\n    \"languageName\": \"Bengali\",\n    \"languageNativeName\": \"বাংলা\",\n    \"translationRatio\": 0.035402195832399785\n  },\n  {\n    \"languageCode\": \"ca_ES\",\n    \"languageName\": \"Catalan\",\n    \"languageNativeName\": \"català\",\n    \"translationRatio\": 0.08940174770333853\n  },\n  {\n    \"languageCode\": \"cs_CZ\",\n    \"languageName\": \"Czech\",\n    \"languageNativeName\": \"čeština\",\n    \"translationRatio\": 0.11628949137351552\n  },\n  {\n    \"languageCode\": \"da_DK\",\n    \"languageName\": \"Danish\",\n    \"languageNativeName\": \"dansk\",\n    \"translationRatio\": 0.02823213085368581\n  },\n  {\n    \"languageCode\": \"de_DE\",\n    \"languageName\": \"German\",\n    \"languageNativeName\": \"Deutsch\",\n    \"translationRatio\": 0.7306744342370604\n  },\n  {\n    \"languageCode\": \"el_GR\",\n    \"languageName\": \"Greek\",\n    \"languageNativeName\": \"Ελληνικά\",\n    \"translationRatio\": 0.19807304503697065\n  },\n  {\n    \"languageCode\": \"en\",\n    \"languageName\": \"English\",\n    \"languageNativeName\": \"English\",\n    \"translationRatio\": 0.0395299145299145\n  },\n  {\n    \"languageCode\": \"eo_UY\",\n    \"languageName\": \"Esperanto\",\n    \"languageNativeName\": \"Esperanto\",\n    \"translationRatio\": 0.010082903876316385\n  },\n  {\n    \"languageCode\": \"es_ES\",\n    \"languageName\": \"Spanish\",\n    \"languageNativeName\": \"Español\",\n    \"translationRatio\": 0.887743670177011\n  },\n  {\n    \"languageCode\": \"fa_IR\",\n    \"languageName\": \"Persian\",\n    \"languageNativeName\": \"فارسی\",\n    \"translationRatio\": 0.24714317723504364\n  },\n  {\n    \"languageCode\": \"fi_FI\",\n    \"languageName\": \"Finnish\",\n    \"languageNativeName\": \"suomi\",\n    \"translationRatio\": 0.3363208604077974\n  },\n  {\n    \"languageCode\": \"fil_PH\",\n    \"languageName\": \"Filipino\",\n    \"languageNativeName\": \"Mga Filipino\",\n    \"translationRatio\": 0.6500112032265293\n  },\n  {\n    \"languageCode\": \"fr_FR\",\n    \"languageName\": \"French\",\n    \"languageNativeName\": \"Français\",\n    \"translationRatio\": 0.7851221151691687\n  },\n  {\n    \"languageCode\": \"ha_HG\",\n    \"languageName\": \"Hausa\",\n    \"languageNativeName\": \"هَوُسَ\",\n    \"translationRatio\": 0.008290387631637919\n  },\n  {\n    \"languageCode\": \"he_IL\",\n    \"languageName\": \"Hebrew\",\n    \"languageNativeName\": \"עברית\",\n    \"translationRatio\": 0.015908581671521427\n  },\n  {\n    \"languageCode\": \"hi_IN\",\n    \"languageName\": \"Hindi\",\n    \"languageNativeName\": \"हिन्दी\",\n    \"translationRatio\": 0.042124131749944005\n  },\n  {\n    \"languageCode\": \"hu_HU\",\n    \"languageName\": \"Hungarian\",\n    \"languageNativeName\": \"magyar\",\n    \"translationRatio\": 0.13600717006497876\n  },\n  {\n    \"languageCode\": \"id_ID\",\n    \"languageName\": \"Indonesian\",\n    \"languageNativeName\": \"Indonesian\",\n    \"translationRatio\": 0.46851893345283446\n  },\n  {\n    \"languageCode\": \"it_IT\",\n    \"languageName\": \"Italian\",\n    \"languageNativeName\": \"Italiano\",\n    \"translationRatio\": 0.7091642393009187\n  },\n  {\n    \"languageCode\": \"ja_JP\",\n    \"languageName\": \"Japanese\",\n    \"languageNativeName\": \"日本語\",\n    \"translationRatio\": 0.6686085592650683\n  },\n  {\n    \"languageCode\": \"ko_KR\",\n    \"languageName\": \"Korean\",\n    \"languageNativeName\": \"한국어\",\n    \"translationRatio\": 0.19628052879229219\n  },\n  {\n    \"languageCode\": \"lt_LT\",\n    \"languageName\": \"Lithuanian\",\n    \"languageNativeName\": \"lietuvių kalba\",\n    \"translationRatio\": 0.009858839345731618\n  },\n  {\n    \"languageCode\": \"mr_IN\",\n    \"languageName\": \"Marathi\",\n    \"languageNativeName\": \"मराठी\",\n    \"translationRatio\": 0.00896258122339233\n  },\n  {\n    \"languageCode\": \"ms_MY\",\n    \"languageName\": \"Malay\",\n    \"languageNativeName\": \"هاس ملايو‎\",\n    \"translationRatio\": 0.054671745462693266\n  },\n  {\n    \"languageCode\": \"my_MM\",\n    \"languageName\": \"Burmese\",\n    \"languageNativeName\": \"ဗမာစာ\",\n    \"translationRatio\": 0.00896258122339233\n  },\n  {\n    \"languageCode\": \"nl_NL\",\n    \"languageName\": \"Dutch\",\n    \"languageNativeName\": \"Nederlands\",\n    \"translationRatio\": 0.4107102845619538\n  },\n  {\n    \"languageCode\": \"no_NO\",\n    \"languageName\": \"Norwegian\",\n    \"languageNativeName\": \"Norsk\",\n    \"translationRatio\": 0.14384942863544703\n  },\n  {\n    \"languageCode\": \"pl_PL\",\n    \"languageName\": \"Polish\",\n    \"languageNativeName\": \"język polski\",\n    \"translationRatio\": 0.511091194263948\n  },\n  {\n    \"languageCode\": \"pseudo_LOCALE\",\n    \"languageName\": \"for development only\",\n    \"languageNativeName\": \"Pseudolocalization\",\n    \"translationRatio\": 0.9903846153846154\n  },\n  {\n    \"languageCode\": \"pt_BR\",\n    \"languageName\": \"Brazilian Portuguese\",\n    \"languageNativeName\": \"Português brasileiro\",\n    \"translationRatio\": 0.9901411606542684\n  },\n  {\n    \"languageCode\": \"pt_PT\",\n    \"languageName\": \"Portuguese\",\n    \"languageNativeName\": \"Português\",\n    \"translationRatio\": 0.6874299798341923\n  },\n  {\n    \"languageCode\": \"ro_RO\",\n    \"languageName\": \"Romanian\",\n    \"languageNativeName\": \"Română\",\n    \"translationRatio\": 0.031593098812457976\n  },\n  {\n    \"languageCode\": \"ru_RU\",\n    \"languageName\": \"Russian\",\n    \"languageNativeName\": \"Русский\",\n    \"translationRatio\": 0.7978937934125028\n  },\n  {\n    \"languageCode\": \"sk_SK\",\n    \"languageName\": \"Slovak\",\n    \"languageNativeName\": \"slovenčina\",\n    \"translationRatio\": 0.018149226977369537\n  },\n  {\n    \"languageCode\": \"sl_SI\",\n    \"languageName\": \"Slovene\",\n    \"languageNativeName\": \"slovenski jezik\",\n    \"translationRatio\": 0.899395025767421\n  },\n  {\n    \"languageCode\": \"sr_CS\",\n    \"languageName\": \"Serbian (Latin)\",\n    \"languageNativeName\": \"srpski\",\n    \"translationRatio\": 0.3634326686085593\n  },\n  {\n    \"languageCode\": \"sr_SP\",\n    \"languageName\": \"Serbian\",\n    \"languageNativeName\": \"српски језик\",\n    \"translationRatio\": 0.7645081783553663\n  },\n  {\n    \"languageCode\": \"sv_SE\",\n    \"languageName\": \"Swedish\",\n    \"languageNativeName\": \"svenska\",\n    \"translationRatio\": 0.1608783329598924\n  },\n  {\n    \"languageCode\": \"th_TH\",\n    \"languageName\": \"Thai\",\n    \"languageNativeName\": \"ไทย\",\n    \"translationRatio\": 0.053327358279184445\n  },\n  {\n    \"languageCode\": \"tr_TR\",\n    \"languageName\": \"Turkish\",\n    \"languageNativeName\": \"Türkçe\",\n    \"translationRatio\": 0.4212413174994398\n  },\n  {\n    \"languageCode\": \"uk_UA\",\n    \"languageName\": \"Ukrainian\",\n    \"languageNativeName\": \"Українська\",\n    \"translationRatio\": 0.8639928299350212\n  },\n  {\n    \"languageCode\": \"ur_PK\",\n    \"languageName\": \"Urdu\",\n    \"languageNativeName\": \"اردو\",\n    \"translationRatio\": 0.016804839793860604\n  },\n  {\n    \"languageCode\": \"yo_NG\",\n    \"languageName\": \"Yoruba\",\n    \"languageNativeName\": \"Yorùbá\",\n    \"translationRatio\": 0.7219359175442528\n  },\n  {\n    \"languageCode\": \"zh_CN\",\n    \"languageName\": \"Chinese Simplified\",\n    \"languageNativeName\": \"简化字\",\n    \"translationRatio\": 0.6137127492717902\n  },\n  {\n    \"languageCode\": \"zh_TW\",\n    \"languageName\": \"Chinese Traditional\",\n    \"languageNativeName\": \"正體字\",\n    \"translationRatio\": 0.2146538203002465\n  }\n];\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport { type StorageProvider } from '.';\nimport { List, ListItem } from '../UI/List';\nimport RaisedButton from '../UI/RaisedButton';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport BackgroundText from '../UI/BackgroundText';\nimport { Column, Line } from '../UI/Grid';\nconst electron = optionalRequire('electron');\n\ntype Props = {|\n  storageProviders: Array<StorageProvider>,\n  onChooseProvider: StorageProvider => void,\n  onClose: () => void,\n  onCreateNewProject: () => void,\n|};\n\nexport default ({\n  onClose,\n  storageProviders,\n  onChooseProvider,\n  onCreateNewProject,\n}: Props) => {\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Dialog\n          title={<Trans>Choose where to load the project from</Trans>}\n          onRequestClose={onClose}\n          actions={[\n            <FlatButton\n              label={<Trans>Cancel</Trans>}\n              key=\"close\"\n              primary={false}\n              onClick={onClose}\n            />,\n          ]}\n          secondaryActions={[\n            <RaisedButton\n              label={<Trans>Create a new project</Trans>}\n              key=\"create-new-project\"\n              primary\n              onClick={onCreateNewProject}\n            />,\n          ]}\n          open\n          noMargin\n          maxWidth=\"sm\"\n        >\n          <List>\n            {storageProviders\n              .filter(storageProvider => !storageProvider.hiddenInOpenDialog)\n              .map(storageProvider => (\n                <ListItem\n                  key={storageProvider.internalName}\n                  disabled={!!storageProvider.disabled}\n                  primaryText={i18n._(storageProvider.name)}\n                  leftIcon={\n                    storageProvider.renderIcon\n                      ? storageProvider.renderIcon()\n                      : undefined\n                  }\n                  onClick={() => onChooseProvider(storageProvider)}\n                />\n              ))}\n          </List>\n          {!electron && (\n            <Line>\n              <Column>\n                <BackgroundText>\n                  <Trans>\n                    If you have a popup blocker interrupting the opening, allow\n                    the popups and try a second time to open the project.\n                  </Trans>\n                </BackgroundText>\n              </Column>\n            </Line>\n          )}\n        </Dialog>\n      )}\n    </I18n>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport { type StorageProvider } from '.';\nimport { List, ListItem } from '../UI/List';\n\ntype Props = {|\n  storageProviders: Array<StorageProvider>,\n  onChooseProvider: StorageProvider => void,\n  onClose: () => void,\n|};\n\nexport default ({\n  onClose,\n  storageProviders,\n  onChooseProvider,\n  onCreateNewProject,\n}: Props) => {\n  return (\n    <I18n>\n      {({ i18n }) => (\n        <Dialog\n          title={<Trans>Choose where to save the project to</Trans>}\n          onRequestClose={onClose}\n          actions={[\n            <FlatButton\n              label={<Trans>Cancel</Trans>}\n              key=\"close\"\n              primary={false}\n              onClick={onClose}\n            />,\n          ]}\n          open\n          noMargin\n          maxWidth=\"sm\"\n        >\n          <List>\n            {storageProviders\n              .filter(storageProvider => !storageProvider.hiddenInSaveDialog)\n              .map(storageProvider => (\n                <ListItem\n                  key={storageProvider.internalName}\n                  disabled={!!storageProvider.disabled}\n                  primaryText={i18n._(storageProvider.name)}\n                  leftIcon={\n                    storageProvider.renderIcon\n                      ? storageProvider.renderIcon()\n                      : undefined\n                  }\n                  onClick={() => onChooseProvider(storageProvider)}\n                />\n              ))}\n          </List>\n        </Dialog>\n      )}\n    </I18n>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport BackgroundText from '../UI/BackgroundText';\nimport { Column, Line } from '../UI/Grid';\nimport Text from '../UI/Text';\n\ntype Props = {|\n  onClose: () => void,\n  onConfirm: () => void,\n|};\n\nexport default ({ onClose, onConfirm }: Props) => {\n  return (\n    <Dialog\n      title={<Trans>Confirm the opening</Trans>}\n      actions={[\n        <FlatButton\n          label={<Trans>Cancel</Trans>}\n          key=\"close\"\n          primary={false}\n          onClick={onClose}\n        />,\n        <RaisedButton\n          label={<Trans>Open the project</Trans>}\n          key=\"open-project\"\n          primary\n          onClick={onConfirm}\n        />,\n      ]}\n      open\n      maxWidth=\"sm\"\n    >\n      <Line>\n        <Column>\n          <Text>\n            <Trans>\n              You're about to open a project. Click on \"Open the Project\" to\n              continue.\n            </Trans>\n          </Text>\n        </Column>\n      </Line>\n      <Line>\n        <Column>\n          <BackgroundText>\n            <Trans>\n              If you have a popup blocker interrupting the opening, allow the\n              popups and try a second time to open the project.\n            </Trans>\n          </BackgroundText>\n        </Column>\n      </Line>\n    </Dialog>\n  );\n};\n","// @flow\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\n\nexport default function verifyProjectContent(\n  i18n: I18nType,\n  content: Object\n): boolean {\n  if (!content.gdVersion && content.eventsFunctions) {\n    showErrorBox(\n      [\n        i18n._(t`Unable to open this file.`),\n        i18n._(\n          t`This file is an extension file for GDevelop 5. You should instead import it, using the window to add a new extension to your project.`\n        ),\n      ].join('\\n')\n    );\n    return false;\n  }\n\n  if (!content.gdVersion && !content.eventsFunctions) {\n    showErrorBox(\n      [\n        i18n._(t`Unable to open this file.`),\n        i18n._(\n          t`This file is not recognized as a GDevelop 5 project. Be sure to open a file that was saved using GDevelop.`\n        ),\n      ].join('\\n')\n    );\n    return false;\n  }\n  return true;\n}\n","// @flow\nimport React, { Component } from 'react';\nimport { mapVector } from '../Utils/MapFor';\nimport TextField from '../UI/TextField';\nimport SearchbarWithChips from '../UI/SearchbarWithChips';\nconst gd = global.gd;\n\ntype Props = {|\n  value: string,\n  onChange: string => void,\n  chosenExtensionName: string,\n  onExtensionNameChosen: string => void,\n|};\n\nexport default class ExamplesSearchbar extends Component<Props> {\n  _chips: Array<{| text: string, value: string |}> = [];\n  _textField: ?TextField;\n\n  constructor(props: Props) {\n    super(props);\n\n    const extensions = gd.JsPlatform.get().getAllPlatformExtensions();\n    this._chips = mapVector(extensions, extension => {\n      if (\n        extension.isBuiltin() ||\n        extension.getFullName().indexOf('(deprecated)') !== -1\n      )\n        return null;\n\n      return {\n        text: extension.getFullName(),\n        value: extension.getName(),\n      };\n    }).filter(Boolean);\n  }\n\n  render() {\n    const {\n      chosenExtensionName,\n      onExtensionNameChosen,\n      value,\n      onChange,\n    } = this.props;\n    return (\n      <SearchbarWithChips\n        value={value}\n        onChange={onChange}\n        chips={this._chips}\n        chosenChip={chosenExtensionName}\n        onChooseChip={onExtensionNameChosen}\n        onRequestSearch={() => {}}\n      />\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { I18nProvider } from '@lingui/react';\nimport { setupI18n } from '@lingui/core';\nimport { getTranslationFunction } from './getTranslationFunction';\nimport { type I18n as I18nType } from '@lingui/core';\nconst gd = global.gd;\n\ntype Catalog = any;\ntype Catalogs = {\n  [string]: Catalog,\n};\n\ntype Props = {|\n  language: string,\n  children: React.Node,\n|};\n\ntype State = {\n  language: string,\n  i18n: ?I18nType,\n  catalogs: Catalogs,\n};\n\nexport default class GDI18nProvider extends React.Component<Props, State> {\n  state = {\n    language: 'en',\n    catalogs: {},\n    i18n: null,\n  };\n\n  componentDidMount() {\n    this._loadLanguage(this.props.language);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.language !== this.props.language) {\n      this._loadLanguage(this.props.language);\n    }\n  }\n\n  _loadCatalog = (language: string): Promise<Catalogs> => {\n    if (this.state.catalogs[language]) {\n      return Promise.resolve(this.state.catalogs);\n    }\n\n    return import(/* webpackMode: \"lazy\", webpackChunkName: \"locales-[request]\" */\n    `../../locales/${language}/messages`).then(\n      catalog => {\n        return { ...this.state.catalogs, [language]: catalog };\n      },\n      (error: Error) => {\n        console.error('Error while loading language=' + language, error);\n        return this.state.catalogs;\n      }\n    );\n  };\n\n  _loadLanguage(language: string) {\n    this._loadCatalog(language).then(catalogs => {\n      this.setState(\n        {\n          language,\n          catalogs,\n          i18n: setupI18n({\n            language: language,\n            catalogs,\n          }),\n        },\n        () => {\n          const { i18n } = this.state;\n          gd.getTranslation = getTranslationFunction(i18n);\n          console.info(`Loaded \"${language}\" language`);\n        }\n      );\n    });\n  }\n\n  render() {\n    // Use language from the state, as it is synchronized with the catalogs,\n    // while the language from props is the \"target language\", and sometime\n    // can be a language for which the catalog is not loaded yet (which would\n    // create warning and a \"flash\" effect when changing language).\n    const { i18n, catalogs, language } = this.state;\n    const { children } = this.props;\n\n    if (!i18n) return null; // Skip rendering when catalog isn't loaded.\n\n    return (\n      <I18nProvider i18n={i18n} language={language} catalogs={catalogs}>\n        {children}\n      </I18nProvider>\n    );\n  }\n}\n","var map = {\n\t\"./af_ZA/messages\": [\n\t\t2046,\n\t\t5\n\t],\n\t\"./ar_SA/messages\": [\n\t\t2047,\n\t\t6\n\t],\n\t\"./az_AZ/messages\": [\n\t\t2048,\n\t\t7\n\t],\n\t\"./bg_BG/messages\": [\n\t\t2049,\n\t\t8\n\t],\n\t\"./bn_BD/messages\": [\n\t\t2050,\n\t\t9\n\t],\n\t\"./ca_ES/messages\": [\n\t\t2051,\n\t\t10\n\t],\n\t\"./cs_CZ/messages\": [\n\t\t2052,\n\t\t11\n\t],\n\t\"./da_DK/messages\": [\n\t\t2053,\n\t\t12\n\t],\n\t\"./de_DE/messages\": [\n\t\t2054,\n\t\t13\n\t],\n\t\"./el_GR/messages\": [\n\t\t2055,\n\t\t14\n\t],\n\t\"./en/messages\": [\n\t\t2056,\n\t\t15\n\t],\n\t\"./eo_UY/messages\": [\n\t\t2057,\n\t\t16\n\t],\n\t\"./es_ES/messages\": [\n\t\t2058,\n\t\t17\n\t],\n\t\"./fa_IR/messages\": [\n\t\t2059,\n\t\t18\n\t],\n\t\"./fi_FI/messages\": [\n\t\t2060,\n\t\t19\n\t],\n\t\"./fil_PH/messages\": [\n\t\t2061,\n\t\t20\n\t],\n\t\"./fr_FR/messages\": [\n\t\t2062,\n\t\t21\n\t],\n\t\"./ha_HG/messages\": [\n\t\t2063,\n\t\t22\n\t],\n\t\"./he_IL/messages\": [\n\t\t2064,\n\t\t23\n\t],\n\t\"./hi_IN/messages\": [\n\t\t2065,\n\t\t24\n\t],\n\t\"./hu_HU/messages\": [\n\t\t2066,\n\t\t25\n\t],\n\t\"./id_ID/messages\": [\n\t\t2067,\n\t\t26\n\t],\n\t\"./it_IT/messages\": [\n\t\t2068,\n\t\t27\n\t],\n\t\"./ja_JP/messages\": [\n\t\t2069,\n\t\t28\n\t],\n\t\"./ko_KR/messages\": [\n\t\t2070,\n\t\t29\n\t],\n\t\"./lt_LT/messages\": [\n\t\t2071,\n\t\t30\n\t],\n\t\"./mr_IN/messages\": [\n\t\t2072,\n\t\t31\n\t],\n\t\"./ms_MY/messages\": [\n\t\t2073,\n\t\t32\n\t],\n\t\"./my_MM/messages\": [\n\t\t2074,\n\t\t33\n\t],\n\t\"./nl_NL/messages\": [\n\t\t2075,\n\t\t34\n\t],\n\t\"./no_NO/messages\": [\n\t\t2076,\n\t\t35\n\t],\n\t\"./pl_PL/messages\": [\n\t\t2077,\n\t\t36\n\t],\n\t\"./pseudo_LOCALE/messages\": [\n\t\t2078,\n\t\t37\n\t],\n\t\"./pt_BR/messages\": [\n\t\t2079,\n\t\t38\n\t],\n\t\"./pt_PT/messages\": [\n\t\t2080,\n\t\t39\n\t],\n\t\"./ro_RO/messages\": [\n\t\t2081,\n\t\t40\n\t],\n\t\"./ru_RU/messages\": [\n\t\t2082,\n\t\t41\n\t],\n\t\"./sk_SK/messages\": [\n\t\t2083,\n\t\t42\n\t],\n\t\"./sl_SI/messages\": [\n\t\t2084,\n\t\t43\n\t],\n\t\"./sr_CS/messages\": [\n\t\t2085,\n\t\t44\n\t],\n\t\"./sr_SP/messages\": [\n\t\t2086,\n\t\t45\n\t],\n\t\"./sv_SE/messages\": [\n\t\t2087,\n\t\t46\n\t],\n\t\"./th_TH/messages\": [\n\t\t2088,\n\t\t47\n\t],\n\t\"./tr_TR/messages\": [\n\t\t2089,\n\t\t48\n\t],\n\t\"./uk_UA/messages\": [\n\t\t2090,\n\t\t49\n\t],\n\t\"./ur_PK/messages\": [\n\t\t2091,\n\t\t50\n\t],\n\t\"./yo_NG/messages\": [\n\t\t2092,\n\t\t51\n\t],\n\t\"./zh_CN/messages\": [\n\t\t2093,\n\t\t52\n\t],\n\t\"./zh_TW/messages\": [\n\t\t2094,\n\t\t53\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 1831;\nmodule.exports = webpackAsyncContext;","import React from 'react';\nconst marginsSize = 4;\n\n/**\n * A Line in the standard GDevelop grid to position components.\n * Check `Layout` first to see if there is already a layout made\n * specifically for your components (like `TextFieldWithButton`).\n */\nexport const Line = props => (\n  <div\n    style={{\n      display: 'flex',\n      marginTop: props.noMargin ? 0 : marginsSize,\n      marginBottom: props.noMargin ? 0 : marginsSize,\n      alignItems: props.alignItems,\n      justifyContent: props.justifyContent,\n      flex: props.expand ? 1 : undefined,\n    }}\n  >\n    {props.children}\n  </div>\n);\n\n/**\n * A Column in the standard GDevelop grid to position components.\n * Check `Layout` first to see if there is already a layout made\n * specifically for your components (like `TextFieldWithButton`).\n */\nexport const Column = props => (\n  <div\n    style={{\n      display: 'flex',\n      marginLeft: props.noMargin ? 0 : marginsSize * 2,\n      marginRight: props.noMargin ? 0 : marginsSize * 2,\n      flexDirection: 'column',\n      alignItems: props.alignItems || 'stretch',\n      justifyContent: props.justifyContent,\n      flex: props.expand ? 1 : undefined,\n    }}\n  >\n    {props.children}\n  </div>\n);\n\n/**\n * A Spacer in the standard GDevelop grid to position components.\n * Check `Layout` first to see if there is already a layout made\n * specifically for your components (like `TextFieldWithButton`).\n */\nexport const Spacer = props => (\n  <span\n    style={{\n      width: marginsSize,\n      height: marginsSize,\n      flexShrink: 0, // Ensure the spacer is not shrinked when in a flex container\n    }}\n  />\n);\n","// @flow\nimport * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Spacer } from './Grid';\n\n// We support a subset of the props supported by Material-UI v0.x FlatButton\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  label: React.Node,\n  onClick: ?() => void,\n  primary?: boolean,\n  disabled?: boolean,\n  keyboardFocused?: boolean,\n  fullWidth?: boolean,\n  icon?: React.Node,\n  style?: {|\n    marginTop?: number,\n    marginBottom?: number,\n    marginLeft?: number,\n    marginRight?: number,\n    margin?: number,\n    flexShrink?: 0,\n  |},\n  target?: '_blank',\n|};\n\n/**\n * A \"flat\" button based on Material-UI button.\n */\nexport default class FlatButton extends React.Component<Props, {||}> {\n  render() {\n    const { label, primary, icon, keyboardFocused, ...otherProps } = this.props;\n\n    // In theory, focus ripple is only shown after a keyboard interaction\n    // (see https://github.com/mui-org/material-ui/issues/12067). However, as\n    // it's important to get focus right in the whole app, make the ripple\n    // always visible to be sure we're getting focusing right.\n    const focusRipple = true;\n\n    return (\n      <Button\n        size=\"small\"\n        color={primary ? 'primary' : 'default'}\n        autoFocus={keyboardFocused}\n        focusRipple={focusRipple}\n        {...otherProps}\n      >\n        {icon}\n        {icon && <Spacer />}\n        {label}\n      </Button>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\ntype Props = {|\n  children: ?React.Node,\n  size?: 'body' | 'title',\n  align?: 'inherit' | 'left' | 'center' | 'right' | 'justify',\n  noShrink?: boolean,\n  style?: {|\n    // Margins\n    marginLeft?: number,\n    marginRight?: number,\n    marginTop?: number,\n    marginBottom?: number,\n\n    // Allow to expand the text\n    flex?: 1,\n\n    // Allow to show the text inline\n    display?: 'inline-block',\n  |},\n|};\n\n// A Text to be displayed in the app. Prefer using this\n// than a `<p>`/`<span>` or `<div>` as this will help to maintain\n// consistency of text in the whole app.\nexport default ({ children, style, size, align, noShrink }: Props) => (\n  <Typography\n    variant={size === 'title' ? 'h6' : 'body1'}\n    style={{\n      ...style,\n      flexShrink: noShrink ? 0 : undefined,\n      marginTop: 6 + ((style && style.marginTop) || 0),\n      marginBottom: 6 + ((style && style.marginBottom) || 0),\n    }}\n    align={align || 'inherit'}\n  >\n    {children}\n  </Typography>\n);\n","// @flow\nimport * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Spacer } from './Grid';\n\n// We support a subset of the props supported by Material-UI v0.x RaisedButton\n// They should be self descriptive - refer to Material UI docs otherwise.\nexport type RaisedButtonPropsWithoutOnClick = {|\n  label?: React.Node,\n  primary?: boolean,\n  disabled?: boolean,\n  fullWidth?: boolean,\n  icon?: React.Node,\n  style?: {|\n    marginTop?: number,\n    marginBottom?: number,\n    marginLeft?: number,\n    marginRight?: number,\n    margin?: number,\n    flexShrink?: 0,\n  |},\n  labelPosition?: 'before',\n|};\n\ntype Props = {\n  ...RaisedButtonPropsWithoutOnClick,\n  onClick: ?() => void,\n};\n\n/**\n * A raised button based on Material-UI button.\n */\nexport default class RaisedButton extends React.Component<Props, {||}> {\n  render() {\n    const { label, primary, labelPosition, icon, ...otherProps } = this.props;\n\n    // In theory, focus ripple is only shown after a keyboard interaction\n    // (see https://github.com/mui-org/material-ui/issues/12067). However, as\n    // it's important to get focus right in the whole app, make the ripple\n    // always visible to be sure we're getting focusing right.\n    const focusRipple = true;\n\n    return (\n      <Button\n        variant=\"contained\"\n        size=\"small\"\n        color={primary ? 'primary' : 'default'}\n        focusRipple={focusRipple}\n        {...otherProps}\n      >\n        {labelPosition !== 'before' && icon}\n        {labelPosition !== 'before' && icon && <Spacer />}\n        {label}\n        {labelPosition === 'before' && icon && <Spacer />}\n        {labelPosition === 'before' && icon}\n      </Button>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { ResponsiveWindowMeasurer } from '../Reponsive/ResponsiveWindowMeasurer';\n\nconst styles = {\n  defaultBody: {\n    overflowX: 'hidden',\n  },\n  noMarginBody: {\n    padding: 0,\n    overflowX: 'hidden',\n  },\n  flexRowBody: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  flexBody: {\n    display: 'flex',\n  },\n  actionsContainerWithSecondaryActions: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  noTitleMargin: {\n    padding: 0,\n  },\n};\n\n// We support a subset of the props supported by Material-UI v0.x Dialog\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  open?: boolean,\n  title?: React.Node,\n  actions?: React.Node,\n  secondaryActions?: React.Node,\n  onRequestClose?: () => void,\n\n  modal?: boolean, // Force the user to use one of the actions in the Dialog. Clicking outside the Dialog will not trigger the onRequestClose.\n\n  children: React.Node, // The content of the dialog\n\n  // Display:\n  flexRowBody?: boolean, //Check if necessary\n  flexBody?: boolean,\n\n  // Size\n  maxWidth?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | false,\n\n  // Style:\n  noMargin?: boolean,\n  noTitleMargin?: boolean,\n|};\n\n/**\n * A enhanced material-ui Dialog that can have optional secondary actions\n * and no margins if required.\n */\nexport default (props: Props) => {\n  const {\n    secondaryActions,\n    actions,\n    open,\n    onRequestClose,\n    maxWidth,\n    noMargin,\n    title,\n    children,\n    flexRowBody,\n    flexBody,\n    noTitleMargin,\n  } = props;\n  const dialogActions = secondaryActions ? (\n    <React.Fragment>\n      <div key=\"secondary-actions\">{secondaryActions}</div>\n      <div key=\"actions\">{actions}</div>\n    </React.Fragment>\n  ) : (\n    actions\n  );\n\n  return (\n    <ResponsiveWindowMeasurer>\n      {size => (\n        <Dialog\n          open={open}\n          onClose={onRequestClose}\n          fullWidth\n          fullScreen={size === 'small'}\n          maxWidth={maxWidth !== undefined ? maxWidth : 'md'}\n          disableBackdropClick\n        >\n          {title && (\n            <DialogTitle\n              style={noTitleMargin ? styles.noTitleMargin : undefined}\n            >\n              {title}\n            </DialogTitle>\n          )}\n          <DialogContent\n            style={{\n              ...(noMargin ? styles.noMarginBody : styles.defaultBody),\n              ...(flexRowBody ? styles.flexRowBody : {}),\n              ...(flexBody ? styles.flexBody : {}),\n            }}\n          >\n            {children}\n          </DialogContent>\n          <DialogActions\n            style={\n              secondaryActions\n                ? styles.actionsContainerWithSecondaryActions\n                : undefined\n            }\n          >\n            {dialogActions}\n          </DialogActions>\n        </Dialog>\n      )}\n    </ResponsiveWindowMeasurer>\n  );\n};\n","// @flow\n// Note: this file does not use export/imports and use Flow comments to allow its usage from Node.js\n\nconst mapFor = /*:: <T>*/ (\n  start /*: number */,\n  end /*: number */,\n  func /*: (number) => T */\n) /*:Array<T> */ => {\n  const result = [];\n  for (let i = start; i < end; i++) {\n    result.push(func(i));\n  }\n  return result;\n};\n\nconst mapReverseFor = /*:: <T>*/ (\n  start /*: number */,\n  end /*: number */,\n  func /*: (number) => T */\n) /*:Array<T> */ => {\n  const result = [];\n  for (let i = end - 1; i >= start; i--) {\n    result.push(func(i));\n  }\n  return result;\n};\n\n/*flow-include\ntype CppVector<T> = {\n  size: () => number,\n  at: (number) => T,\n}\n*/\n\nconst mapVector = /*:: <T, U>*/ (\n  cppVector /*: CppVector<T> */,\n  func /*: (T, number) => U */\n) /*:Array<U> */ => {\n  return mapFor(0, cppVector.size(), i => func(cppVector.at(i), i));\n};\n\nmodule.exports = {\n  mapFor,\n  mapReverseFor,\n  mapVector,\n};\n","// @flow\nimport * as React from 'react';\nimport ThemeConsumer from './Theme/ThemeConsumer';\nimport BackgroundText from './BackgroundText';\n// No i18n in this file\n\nconst styles = {\n  containerStyle: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    padding: 10,\n  },\n};\n\ntype Props = {|\n  style?: Object,\n  messageStyle?: Object,\n  children: ?React.Node,\n|};\n\nconst EmptyMessage = (props: Props) => (\n  <ThemeConsumer>\n    {muiTheme => (\n      <div style={{ ...styles.containerStyle, ...props.style }}>\n        <BackgroundText style={props.messageStyle}>\n          {props.children}\n        </BackgroundText>\n      </div>\n    )}\n  </ThemeConsumer>\n);\n\nexport default EmptyMessage;\n","// @flow\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { I18n } from '@lingui/react';\nimport MUITextField from '@material-ui/core/TextField';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport { MarkdownText } from './MarkdownText';\n\ntype ValueProps =\n  // Support \"text\" and \"password\" type:\n  | {|\n      type?: 'text' | 'password',\n      value: string,\n      onChange?: (\n        event: {| target: {| value: string |} |},\n        text: string\n      ) => void,\n    |}\n  // Support \"number\" type (note that onChange returns a string):\n  | {|\n      type: 'number',\n      value: number | string,\n      onChange?: (event: {||}, value: string) => void,\n    |}\n  // Support an \"uncontrolled\" field:\n  | {| defaultValue: string |}\n  // Support an empty field with just a hint text:\n  | {| hintText?: React.Node |};\n\n// We support a subset of the props supported by Material-UI v0.x TextField\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  // Value and change handling:\n  ...ValueProps,\n\n  // DOM events:\n  onFocus?: ({\n    currentTarget: {\n      value: string,\n    },\n    preventDefault: () => void,\n  }) => void,\n  onBlur?: ({\n    currentTarget: {\n      value: string,\n    },\n  }) => void,\n  onKeyPress?: (event: {| charCode: number, key: string |}) => void,\n  onKeyUp?: (event: {| charCode: number, key: string |}) => void,\n\n  // Error handling:\n  errorText?: React.Node,\n\n  disabled?: boolean,\n  floatingLabelFixed?: boolean,\n  floatingLabelText?: React.Node,\n  name?: string,\n  hintText?: MessageDescriptor,\n  helperMarkdownText?: ?string,\n  id?: string,\n\n  // Keyboard focus:\n  autoFocus?: boolean,\n\n  // Number text field:\n  precision?: number,\n  max?: number,\n  min?: number,\n  step?: number,\n\n  // Support for multiline:\n  multiLine?: boolean,\n  rows?: number,\n  rowsMax?: number,\n\n  // Styling:\n  margin?: 'none' | 'dense',\n  fullWidth?: boolean,\n  style?: {|\n    fontSize?: 14 | 18,\n    fontStyle?: 'normal' | 'italic',\n    width?: number | '100%',\n    flex?: 1,\n    top?: number,\n    padding?: number,\n  |},\n  inputStyle?: {|\n    // Allow to customize color (replace by color prop?) // TO VERIFY\n    color?: string,\n    WebkitTextFillColor?: string,\n\n    // Allow to display monospaced font\n    fontFamily?: '\"Lucida Console\", Monaco, monospace',\n    lineHeight?: 1.4 | 1.5,\n    padding?: 0,\n  |},\n  underlineFocusStyle?: {| borderColor: string |}, // TODO\n  underlineShow?: boolean,\n|};\n\n/**\n * Compute the `variant`, `margin` and `hiddenLabel` props for a material-ui `TextField`\n * to give it the proper style according to its usage.\n *\n * 1. A traditional `TextField` is by default \"filled\"\n *    (see material-ui component doc: https://material-ui.com/components/text-fields/\n *     and [Material Design specification](https://material.io/components/text-fields/#specs)).\n *\n *   The filled background gives them more emphasize compared compared to a single underline\n *   (as done in previous GDevelop versions). They have a label indicating what they refer to.\n *\n * 2. Sometimes, a floating label would not provide more information and is considered to be\n *   obvious (thanks to the existing value, dialog title or button label).\n *\n *   In this case, not specifying a label is fine (`floatingLabelText` is undefined or empty).\n *   This will lead to a filled text field without the extra space for the label.\n *\n *   A `placeholder` should still be passed so that the user can know what the field is about\n *     when not filled.\n *   Example: this is particularly adapted to file/folder pickers (see `LocalFilePicker`,\n *     `LocalFolderPicker`) or a `SearchPanel`.\n *\n * 3. `TextField` in `MiniToolbar` are usually less changed by the user than other text fields\n *   (for example, they are the animation name or the object name in a Sprite editor.\n *   These are not changed a lot compared to behaviours or object properties).\n *\n *   They also are already in a MiniToolbar that has an \"emphasis\" with the slightly\n *   different background color of `MiniToolbar`. Finally, `MiniToolbar` is also small in height.\n *\n *   In these cases, use `none` for `margin`.\n *   This will generate a text field without filled background (just an underline).\n *\n * 4. `TextField` can be used with `margin=\"none\"` and also the underline hidden,\n *   in the very special case of an embedded text field in another form control (like `SearchBar`).\n */\nexport const computeTextFieldStyleProps = (props: {\n  margin?: 'none' | 'dense',\n  floatingLabelText?: React.Node,\n}) => {\n  return {\n    // Use \"filled\" variant by default, unless `margin` is \"none\" (see 1. and 2.)\n    variant: props.margin === 'none' ? 'standard' : 'filled',\n    // Use \"dense\" fields by default, unless `margin` is \"none\" (see 3.)\n    margin: props.margin === 'none' ? 'none' : 'dense',\n    // For variant \"standard\", if there is no label, no extra space is taken. For variant \"filled\",\n    // even when no label is passed, there is a space for it. Remove this space if no\n    // label is provided. (see 2.)\n    hiddenLabel: props.margin !== 'none' && !props.floatingLabelText,\n  };\n};\n\n/**\n * A text field based on Material-UI text field.\n */\nexport default class TextField extends React.Component<Props, {||}> {\n  _input = React.createRef<HTMLInputElement>();\n\n  focus() {\n    if (this._input.current) {\n      this._input.current.focus();\n    }\n  }\n\n  blur() {\n    if (this._input.current) {\n      this._input.current.blur();\n    }\n  }\n\n  getInputNode() {\n    if (this._input.current) {\n      return ReactDOM.findDOMNode(this._input.current);\n    }\n\n    return null;\n  }\n\n  render() {\n    const { props } = this;\n    const onChange = props.onChange || undefined;\n\n    const helperText = props.helperMarkdownText ? (\n      <MarkdownText source={props.helperMarkdownText} />\n    ) : null;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <MUITextField\n            // Value and change handling:\n            type={props.type !== undefined ? props.type : undefined}\n            value={props.value !== undefined ? props.value : undefined}\n            defaultValue={\n              props.defaultValue !== undefined ? props.defaultValue : undefined\n            }\n            onChange={\n              onChange\n                ? event => onChange(event, event.target.value)\n                : undefined\n            }\n            // Error handling:\n            error={!!props.errorText}\n            helperText={props.errorText || helperText}\n            disabled={props.disabled}\n            InputLabelProps={{\n              shrink: props.floatingLabelFixed ? true : undefined,\n            }}\n            label={props.floatingLabelText}\n            name={props.name}\n            placeholder={props.hintText ? i18n._(props.hintText) : undefined}\n            id={props.id}\n            // Keyboard focus:\n            autoFocus={props.autoFocus}\n            // Multiline:\n            multiline={props.multiLine}\n            rows={props.rows}\n            rowsMax={props.rowsMax}\n            // Styling:\n            {...computeTextFieldStyleProps(props)}\n            fullWidth={props.fullWidth}\n            InputProps={{\n              disableUnderline:\n                props.underlineShow === undefined\n                  ? false\n                  : !props.underlineShow,\n              style: {\n                fontSize: props.style ? props.style.fontSize : undefined,\n                fontStyle: props.style ? props.style.fontStyle : undefined,\n                ...props.inputStyle,\n              },\n              inputProps: {\n                onKeyPress: props.onKeyPress,\n                onKeyUp: props.onKeyUp,\n                // Number field props:\n                max: props.max,\n                min: props.min,\n                step: props.step,\n              },\n            }}\n            style={\n              props.style\n                ? {\n                    width: props.style.width || undefined,\n                    flex: props.style.flex || undefined,\n                    top: props.style.top || undefined,\n                  }\n                : undefined\n            }\n            onFocus={props.onFocus}\n            onBlur={props.onBlur}\n            inputRef={this._input}\n          />\n        )}\n      </I18n>\n    );\n  }\n}\n\n// The \"top\" offset to add to the position of the TextField when\n// it's used inside a ListItem \"primaryText\"\nexport const noMarginTextFieldInListItemTopOffset = -7;\n","// @flow\nimport * as React from 'react';\nimport { type GDevelopTheme } from '.';\nimport GDevelopThemeContext from './ThemeContext';\n\ntype Props = {|\n  children: (gdevelopTheme: GDevelopTheme) => React.Node,\n|};\n\n/**\n * Expose the Material UI theme.\n */\nconst ThemeConsumer = (props: Props) => (\n  <GDevelopThemeContext.Consumer>\n    {gdevelopTheme => props.children(gdevelopTheme)}\n  </GDevelopThemeContext.Consumer>\n);\n\nexport default ThemeConsumer;\n","import { isMacLike } from '../../Utils/Platform';\n\nconst CTRL_KEY = 17;\nconst SHIFT_KEY = 16;\nconst LEFT_KEY = 37;\nconst UP_KEY = 38;\nconst RIGHT_KEY = 39;\nconst DOWN_KEY = 40;\nconst BACKSPACE_KEY = 8;\nconst SPACE_KEY = 32;\nconst DELETE_KEY = 46;\nconst EQUAL_KEY = 187;\nconst MINUS_KEY = 189;\nconst NUMPAD_ADD = 107;\nconst NUMPAD_SUBSTRACT = 109;\nconst C_KEY = 67;\nconst F_KEY = 70;\nconst V_KEY = 86;\nconst X_KEY = 88;\nconst Y_KEY = 89;\nconst Z_KEY = 90;\nconst MID_MOUSE_BUTTON = 1;\n\n/**\n * Deprecated class to handle shortcut. Don't use this anymore, prefer the non\n * deprecated version that does not add listener on the document (risking catching events\n * when the components are not focused).\n *\n * TODO: Replace InstancesEditor shortcuts by the new `KeyboardShortcuts`.\n */\nexport default class DeprecatedKeyboardShortcuts {\n  constructor({\n    onDelete,\n    onMove,\n    onCopy,\n    onCut,\n    onPaste,\n    onUndo,\n    onRedo,\n    onSearch,\n    onZoomOut,\n    onZoomIn,\n  }) {\n    this.onDelete = onDelete || this._noop;\n    this.onMove = onMove || this._noop;\n    this.onCopy = onCopy || this._noop;\n    this.onCut = onCut || this._noop;\n    this.onPaste = onPaste || this._noop;\n    this.onUndo = onUndo || this._noop;\n    this.onRedo = onRedo || this._noop;\n    this.onZoomOut = onZoomOut || this._noop;\n    this.onZoomIn = onZoomIn || this._noop;\n    this.onSearch = onSearch || this._noop;\n    this.isFocused = false;\n    this.shiftPressed = false;\n    this.rawCtrlPressed = false;\n    this.metaPressed = false;\n    this.spacePressed = false;\n    this.mouseMidButtonPressed = false;\n    this.mount();\n  }\n\n  shouldCloneInstances() {\n    return this._isControlPressed();\n  }\n\n  shouldMultiSelect() {\n    return this.shiftPressed;\n  }\n\n  shouldFollowAxis() {\n    return this.shiftPressed;\n  }\n\n  shouldNotSnapToGrid() {\n    return this.altPressed;\n  }\n\n  shouldResizeProportionally() {\n    return this.shiftPressed;\n  }\n\n  shouldScrollHorizontally() {\n    return this.altPressed;\n  }\n\n  shouldZoom() {\n    if (isMacLike()) {\n      return this._isControlPressed();\n    } else {\n      if (!this._isControlPressed() && !this.altPressed && !this.shiftPressed) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  shouldMoveView() {\n    return this.spacePressed || this.mouseMidButtonPressed;\n  }\n\n  _isControlPressed = () => {\n    // On macOS, meta key (Apple/Command key) acts as Control key on Windows/Linux.\n    return this.metaPressed || this.rawCtrlPressed;\n  };\n\n  _onKeyDown = evt => {\n    if (!this.isFocused) return;\n\n    let preventDefault = false;\n\n    if (evt.metaKey) this.metaPressed = true;\n    if (evt.altKey) this.altPressed = true;\n    if (evt.which === CTRL_KEY) this.rawCtrlPressed = true;\n    if (evt.which === SHIFT_KEY) this.shiftPressed = true;\n    if (evt.which === SPACE_KEY) this.spacePressed = true;\n\n    const textEditorSelectors = 'textarea, input, [contenteditable=\"true\"]';\n    if (evt.target && evt.target.closest(textEditorSelectors)) {\n      return; // Something else is currently being edited.\n    }\n\n    if (this.onMove) {\n      if (evt.which === UP_KEY) {\n        this.onMove(0, -1);\n      } else if (evt.which === DOWN_KEY) {\n        this.onMove(0, 1);\n      } else if (evt.which === LEFT_KEY) {\n        this.onMove(-1, 0);\n      } else if (evt.which === RIGHT_KEY) {\n        this.onMove(1, 0);\n      }\n    }\n    if (evt.which === BACKSPACE_KEY || evt.which === DELETE_KEY) {\n      this.onDelete();\n      preventDefault = true;\n    }\n    if (this._isControlPressed() && evt.which === C_KEY) {\n      this.onCopy();\n    }\n    if (this._isControlPressed() && evt.which === X_KEY) {\n      this.onCut();\n    }\n    if (this._isControlPressed() && evt.which === V_KEY) {\n      this.onPaste();\n    }\n    if (this._isControlPressed() && evt.which === Z_KEY) {\n      this.onUndo();\n    }\n    if (this._isControlPressed() && this.shiftPressed && evt.which === Z_KEY) {\n      this.onRedo();\n    }\n    if (this._isControlPressed() && evt.which === Y_KEY) {\n      this.onRedo();\n    }\n    if (this._isControlPressed() && evt.which === F_KEY) {\n      this.onSearch();\n    }\n\n    if (isMacLike()) {\n      //Mac specific shortcuts -- zooming done differently on windows and linux\n      if (this._isControlPressed() && evt.which === MINUS_KEY) {\n        this.onZoomOut();\n      }\n      if (this._isControlPressed() && evt.which === EQUAL_KEY) {\n        this.onZoomIn();\n      }\n      if (evt.which === NUMPAD_SUBSTRACT) {\n        this.onZoomOut();\n      }\n      if (evt.which === NUMPAD_ADD) {\n        this.onZoomIn();\n      }\n    }\n\n    if (preventDefault) {\n      if (evt.preventDefault) evt.preventDefault();\n      return false;\n    }\n  };\n\n  _onKeyUp = evt => {\n    // Always handle key up event, even if we don't have the focus,\n    // for modifier keys to ensure we don't lose track of their pressed/unpressed status.\n\n    if (!evt.metaKey) this.metaPressed = false;\n    if (!evt.altKey) this.altPressed = false;\n    if (evt.which === CTRL_KEY) this.rawCtrlPressed = false;\n    if (evt.which === SHIFT_KEY) this.shiftPressed = false;\n    if (evt.which === SPACE_KEY) this.spacePressed = false;\n\n    let preventDefault = false;\n\n    if (evt.which === BACKSPACE_KEY || evt.which === DELETE_KEY) {\n      preventDefault = true;\n    }\n\n    if (preventDefault) {\n      if (evt.preventDefault) evt.preventDefault();\n      return false;\n    }\n  };\n\n  _onMouseDown = evt => {\n    if (!this.isFocused) return;\n\n    if (!isMacLike()) {\n      if (evt.button === MID_MOUSE_BUTTON) {\n        this.mouseMidButtonPressed = true;\n      } else {\n        this.mouseMidButtonPressed = false;\n      }\n    }\n  };\n\n  _onMouseUp = evt => {\n    if (!this.isFocused) return;\n\n    if (!isMacLike() && evt.button === MID_MOUSE_BUTTON) {\n      this.mouseMidButtonPressed = false;\n    }\n  };\n\n  _onKeyPress = evt => {};\n\n  _noop = () => {};\n\n  focus() {\n    this.isFocused = true;\n  }\n\n  blur() {\n    this.isFocused = false;\n  }\n\n  mount() {\n    if (typeof document === 'undefined') return;\n\n    document.addEventListener('keydown', this._onKeyDown, true);\n    document.addEventListener('keyup', this._onKeyUp, true);\n    document.addEventListener('keypress', this._onKeyPress, true);\n    document.addEventListener('mousedown', this._onMouseDown, true);\n    document.addEventListener('mouseup', this._onMouseUp, true);\n  }\n\n  unmount() {\n    if (typeof document === 'undefined') return;\n\n    document.removeEventListener('keydown', this._onKeyDown, true);\n    document.removeEventListener('keyup', this._onKeyUp, true);\n    document.removeEventListener('keypress', this._onKeyPress, true);\n    document.removeEventListener('mousedown', this._onMouseDown, true);\n    document.removeEventListener('mouseup', this._onMouseUp, true);\n  }\n}\n","import LayerRenderer from './LayerRenderer';\nimport * as PIXI from 'pixi.js';\n\nexport default class InstancesRenderer {\n  constructor({\n    project,\n    layout,\n    instances,\n    viewPosition,\n    onInstanceClicked,\n    onOverInstance,\n    onOutInstance,\n    onMoveInstance,\n    onMoveInstanceEnd,\n    onDownInstance,\n  }) {\n    this.project = project;\n    this.instances = instances;\n    this.layout = layout;\n    this.viewPosition = viewPosition;\n    this.onInstanceClicked = onInstanceClicked;\n    this.onOverInstance = onOverInstance;\n    this.onOutInstance = onOutInstance;\n    this.onMoveInstance = onMoveInstance;\n    this.onMoveInstanceEnd = onMoveInstanceEnd;\n    this.onDownInstance = onDownInstance;\n\n    this.layersRenderers = {};\n\n    this.pixiContainer = new PIXI.Container();\n    this.instanceMeasurer = {\n      getInstanceLeft: instance => {\n        const layerName = instance.getLayer();\n        const layerRenderer = this.layersRenderers[layerName];\n        if (!layerRenderer) return instance.getX();\n\n        return layerRenderer.getInstanceLeft(instance);\n      },\n      getInstanceTop: instance => {\n        const layerName = instance.getLayer();\n        const layerRenderer = this.layersRenderers[layerName];\n        if (!layerRenderer) return instance.getY();\n\n        return layerRenderer.getInstanceTop(instance);\n      },\n      getInstanceWidth: instance => {\n        if (instance.hasCustomSize()) return instance.getCustomWidth();\n\n        const layerName = instance.getLayer();\n        const layerRenderer = this.layersRenderers[layerName];\n        if (!layerRenderer) return 0;\n\n        return layerRenderer.getInstanceWidth(instance);\n      },\n\n      getInstanceHeight: instance => {\n        if (instance.hasCustomSize()) return instance.getCustomHeight();\n\n        const layerName = instance.getLayer();\n        const layerRenderer = this.layersRenderers[layerName];\n        if (!layerRenderer) return 0;\n\n        return layerRenderer.getInstanceHeight(instance);\n      },\n      getInstanceRect: instance => {\n        return {\n          x: this.instanceMeasurer.getInstanceLeft(instance),\n          y: this.instanceMeasurer.getInstanceTop(instance),\n          width: this.instanceMeasurer.getInstanceWidth(instance),\n          height: this.instanceMeasurer.getInstanceHeight(instance),\n        };\n      },\n    };\n  }\n\n  getPixiContainer() {\n    return this.pixiContainer;\n  }\n\n  getInstanceMeasurer() {\n    return this.instanceMeasurer;\n  }\n\n  render() {\n    for (let i = 0; i < this.layout.getLayersCount(); i++) {\n      const layer = this.layout.getLayerAt(i);\n      const layerName = layer.getName();\n\n      let layerRenderer = this.layersRenderers[layerName];\n      if (!layerRenderer) {\n        this.layersRenderers[layerName] = layerRenderer = new LayerRenderer({\n          project: this.project,\n          layout: this.layout,\n          instances: this.instances,\n          viewPosition: this.viewPosition,\n          layer: layer,\n          onInstanceClicked: this.onInstanceClicked,\n          onOverInstance: this.onOverInstance,\n          onOutInstance: this.onOutInstance,\n          onMoveInstance: this.onMoveInstance,\n          onMoveInstanceEnd: this.onMoveInstanceEnd,\n          onDownInstance: this.onDownInstance,\n        });\n        this.pixiContainer.addChild(layerRenderer.getPixiContainer());\n      }\n\n      // /!\\ Objects representing layers can be deleted at any moment and replaced\n      // by new one, for example when two layers are swapped.\n      // We update the layer object of the renderer so that the renderer always has\n      // a valid layer object that can be used.\n      layerRenderer.layer = layer;\n      layerRenderer.wasUsed = true;\n      layerRenderer.getPixiContainer().zOrder = i;\n      layerRenderer.render();\n    }\n\n    this._updatePixiObjectsZOrder();\n    this._cleanRenderers();\n  }\n\n  _updatePixiObjectsZOrder() {\n    this.pixiContainer.children.sort((a, b) => {\n      a.zOrder = a.zOrder || 0;\n      b.zOrder = b.zOrder || 0;\n      return a.zOrder - b.zOrder;\n    });\n  }\n\n  /**\n   * Delete instance renderers of the specified objects, which will then be recreated during\n   * the next render.\n   * @param {string} objectName The name of the object for which instance must be re-rendered.\n   */\n  resetRenderersFor(objectName) {\n    for (let i in this.layersRenderers) {\n      if (this.layersRenderers.hasOwnProperty(i)) {\n        const layerRenderer = this.layersRenderers[i];\n        layerRenderer.resetRenderersFor(objectName);\n      }\n    }\n  }\n\n  /**\n   * Clean up rendered layers that are not existing anymore\n   */\n  _cleanRenderers() {\n    for (let i in this.layersRenderers) {\n      if (this.layersRenderers.hasOwnProperty(i)) {\n        const layerRenderer = this.layersRenderers[i];\n        if (!layerRenderer.wasUsed) {\n          this.pixiContainer.removeChild(layerRenderer.getPixiContainer());\n          layerRenderer.delete();\n          delete this.layersRenderers[i];\n        } else layerRenderer.wasUsed = false;\n      }\n    }\n  }\n\n  delete() {\n    for (let i in this.layersRenderers) {\n      if (this.layersRenderers.hasOwnProperty(i)) {\n        this.layersRenderers[i].delete();\n      }\n    }\n  }\n}\n","export default function transformRect(transformPoint, { x, y, width, height }) {\n  const startPos = transformPoint(x, y);\n  const endPos = transformPoint(x + width, y + height);\n  return {\n    x: startPos[0],\n    y: startPos[1],\n    width: endPos[0] - startPos[0],\n    height: endPos[1] - startPos[1],\n  };\n}\n","// @flow\nimport gesture from 'pixi-simple-gesture';\nimport transformRect from '../Utils/TransformRect';\nimport * as PIXI from 'pixi.js';\nimport { type ScreenType } from '../UI/Reponsive/ScreenTypeMeasurer';\nimport InstancesSelection from '../SceneEditor/InstancesSelection';\n\ntype Props = {|\n  instancesSelection: InstancesSelection,\n  instanceMeasurer: Object, // To be typed in InstancesRenderer\n  onResize: (number, number) => void,\n  onResizeEnd: () => void,\n  onRotate: (number, number) => void,\n  onRotateEnd: () => void,\n  toCanvasCoordinates: (x: number, y: number) => [number, number],\n  screenType: ScreenType,\n|};\n\nconst getButtonSizes = (screenType: ScreenType) => {\n  if (screenType === 'touch') {\n    return {\n      buttonSize: 18,\n      smallButtonSize: 13,\n      buttonPadding: 5,\n    };\n  }\n\n  return {\n    buttonSize: 10,\n    smallButtonSize: 8,\n    buttonPadding: 5,\n  };\n};\n\nconst RECTANGLE_BUTTON_SHAPE = 0;\nconst CIRCLE_BUTTON_SHAPE = 1;\n\nexport default class SelectedInstances {\n  instancesSelection: InstancesSelection;\n  instanceMeasurer: Object; // To be typed in InstancesRenderer\n  onResize: (number, number) => void;\n  onResizeEnd: () => void;\n  onRotate: (number, number) => void;\n  onRotateEnd: () => void;\n  toCanvasCoordinates: (x: number, y: number) => [number, number];\n  _screenType: ScreenType;\n\n  pixiContainer = new PIXI.Container();\n  rectanglesContainer = new PIXI.Container();\n  selectedRectangles = [];\n  resizeButton = new PIXI.Graphics();\n  resizeIcon = new PIXI.Sprite.fromImage('res/actions/direction.png');\n  rightResizeButton = new PIXI.Graphics();\n  bottomResizeButton = new PIXI.Graphics();\n  rotateButton = new PIXI.Graphics();\n\n  constructor({\n    instancesSelection,\n    instanceMeasurer,\n    onResize,\n    onResizeEnd,\n    onRotate,\n    onRotateEnd,\n    toCanvasCoordinates,\n    screenType,\n  }: Props) {\n    this.instanceMeasurer = instanceMeasurer;\n    this.onResize = onResize;\n    this.onResizeEnd = onResizeEnd;\n    this.onRotate = onRotate;\n    this.onRotateEnd = onRotateEnd;\n    this.toCanvasCoordinates = toCanvasCoordinates;\n    this.instancesSelection = instancesSelection;\n    this._screenType = screenType;\n\n    this.pixiContainer.addChild(this.rectanglesContainer);\n\n    this._makeButton(\n      this.resizeButton,\n      event => {\n        this.onResize(event.deltaX, event.deltaY);\n      },\n      () => {\n        this.onResizeEnd();\n      },\n      'nwse-resize'\n    );\n    this._makeButton(\n      this.rightResizeButton,\n      event => {\n        this.onResize(event.deltaX, 0);\n      },\n      () => {\n        this.onResizeEnd();\n      },\n      'ew-resize'\n    );\n    this._makeButton(\n      this.bottomResizeButton,\n      event => {\n        this.onResize(0, event.deltaY);\n      },\n      () => {\n        this.onResizeEnd();\n      },\n      'ns-resize'\n    );\n    this._makeButton(\n      this.rotateButton,\n      event => {\n        this.onRotate(event.deltaX, event.deltaY);\n      },\n      () => {\n        this.onRotateEnd();\n      },\n      'url(\"res/actions/rotate24.png\"),auto'\n    );\n  }\n\n  setScreenType(screenType: ScreenType) {\n    this._screenType = screenType;\n  }\n\n  _makeButton(\n    objectButton: PIXI.Graphics,\n    onMove: (event: any) => void,\n    onEnd: () => void,\n    cursor: string\n  ) {\n    objectButton.interactive = true;\n    objectButton.buttonMode = true;\n    objectButton.cursor = cursor;\n    gesture.panable(objectButton);\n    objectButton.on('panmove', onMove);\n    objectButton.on('panend', onEnd);\n    this.pixiContainer.addChild(objectButton);\n  }\n\n  getPixiContainer() {\n    return this.pixiContainer;\n  }\n\n  _renderButton(\n    show: boolean,\n    buttonObject: PIXI.Graphics,\n    canvasPosition: [number, number],\n    size: number,\n    shape: 0 | 1 = RECTANGLE_BUTTON_SHAPE\n  ) {\n    buttonObject.clear();\n    if (!show) {\n      buttonObject.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n      return;\n    }\n\n    buttonObject.beginFill(0xffffff);\n    buttonObject.lineStyle(1, 0x6868e8, 1);\n    buttonObject.fillAlpha = 0.9;\n    if (shape === RECTANGLE_BUTTON_SHAPE) {\n      buttonObject.drawRect(canvasPosition[0], canvasPosition[1], size, size);\n    } else if (shape === CIRCLE_BUTTON_SHAPE) {\n      buttonObject.drawCircle(\n        canvasPosition[0] + size / 2,\n        canvasPosition[1] + size / 2,\n        size / 2\n      );\n    }\n\n    buttonObject.endFill();\n    buttonObject.hitArea = new PIXI.Rectangle(\n      canvasPosition[0],\n      canvasPosition[1],\n      size,\n      size\n    );\n  }\n\n  render() {\n    const { buttonSize, smallButtonSize, buttonPadding } = getButtonSizes(\n      this._screenType\n    );\n    const selection = this.instancesSelection.getSelectedInstances();\n    let x1 = 0;\n    let y1 = 0;\n    let x2 = 0;\n    let y2 = 0;\n\n    //Update the selection rectangle of each instance\n    for (var i = 0; i < selection.length; i++) {\n      if (this.selectedRectangles.length === i) {\n        const newRectangle = new PIXI.Graphics();\n        newRectangle.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n        this.selectedRectangles.push(newRectangle);\n        this.rectanglesContainer.addChild(newRectangle);\n      }\n\n      const instance = selection[i];\n      const instanceRect = this.instanceMeasurer.getInstanceRect(instance);\n      const selectionRectangle = transformRect(\n        this.toCanvasCoordinates,\n        instanceRect\n      );\n\n      this.selectedRectangles[i].clear();\n      this.selectedRectangles[i].beginFill(0x6868e8);\n      this.selectedRectangles[i].lineStyle(1, 0x6868e8, 1);\n      this.selectedRectangles[i].fillAlpha = 0.3;\n      this.selectedRectangles[i].alpha = 0.8;\n      this.selectedRectangles[i].drawRect(\n        selectionRectangle.x,\n        selectionRectangle.y,\n        selectionRectangle.width,\n        selectionRectangle.height\n      );\n      this.selectedRectangles[i].endFill();\n\n      if (i === 0) {\n        x1 = instanceRect.x;\n        y1 = instanceRect.y;\n        x2 = instanceRect.x + instanceRect.width;\n        y2 = instanceRect.y + instanceRect.height;\n      } else {\n        if (instanceRect.x < x1) x1 = instanceRect.x;\n        if (instanceRect.y < y1) y1 = instanceRect.y;\n        if (instanceRect.x + instanceRect.width > x2)\n          x2 = instanceRect.x + instanceRect.width;\n        if (instanceRect.y + instanceRect.height > y2)\n          y2 = instanceRect.y + instanceRect.height;\n      }\n    }\n\n    while (this.selectedRectangles.length > selection.length) {\n      this.rectanglesContainer.removeChild(this.selectedRectangles.pop());\n    }\n\n    //Position the resize button.\n    const show = selection.length !== 0;\n    const resizeButtonPos = this.toCanvasCoordinates(x2, y2);\n    resizeButtonPos[0] += buttonPadding;\n    resizeButtonPos[1] += buttonPadding;\n\n    const rightResizeButtonPos = this.toCanvasCoordinates(\n      x2,\n      y1 + (y2 - y1) / 2\n    );\n    rightResizeButtonPos[0] += buttonPadding;\n    rightResizeButtonPos[1] -= smallButtonSize / 2;\n\n    const bottomResizeButtonPos = this.toCanvasCoordinates(\n      x1 + (x2 - x1) / 2,\n      y2\n    );\n    bottomResizeButtonPos[0] -= smallButtonSize / 2;\n    bottomResizeButtonPos[1] += buttonPadding;\n\n    const rotateButtonPos = this.toCanvasCoordinates(x1 + (x2 - x1) / 2, y1);\n    rotateButtonPos[0] -= smallButtonSize / 2;\n    rotateButtonPos[1] -= buttonPadding * 4;\n\n    this._renderButton(show, this.resizeButton, resizeButtonPos, buttonSize);\n    this._renderButton(\n      show,\n      this.rightResizeButton,\n      rightResizeButtonPos,\n      smallButtonSize\n    );\n    this._renderButton(\n      show,\n      this.bottomResizeButton,\n      bottomResizeButtonPos,\n      smallButtonSize\n    );\n    this._renderButton(\n      show,\n      this.rotateButton,\n      rotateButtonPos,\n      smallButtonSize,\n      CIRCLE_BUTTON_SHAPE\n    );\n  }\n}\n","import transformRect from '../Utils/TransformRect';\nimport * as PIXI from 'pixi.js';\n\nexport default class InstancesSelection {\n  constructor({ instanceMeasurer, toCanvasCoordinates }) {\n    this.instanceMeasurer = instanceMeasurer;\n    this.toCanvasCoordinates = toCanvasCoordinates;\n\n    this.highlightedInstance = null;\n    this.highlightRectangle = new PIXI.Graphics();\n    this.highlightRectangle.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n\n    this.tooltipBackground = new PIXI.Graphics();\n    this.tooltipText = new PIXI.Text('', {\n      fontSize: 15,\n      fill: 0xffffff,\n      align: 'center',\n    });\n    this.highlightRectangle.addChild(this.tooltipBackground);\n    this.highlightRectangle.addChild(this.tooltipText);\n  }\n\n  setInstance(instance) {\n    this.highlightedInstance = instance;\n  }\n\n  getInstance() {\n    return this.highlightedInstance;\n  }\n\n  getPixiObject(instance) {\n    return this.highlightRectangle;\n  }\n\n  render() {\n    if (this.highlightedInstance === null) {\n      this.highlightRectangle.visible = false;\n      return;\n    }\n\n    const highlightRectangle = transformRect(\n      this.toCanvasCoordinates,\n      this.instanceMeasurer.getInstanceRect(this.highlightedInstance)\n    );\n\n    this.highlightRectangle.visible = true;\n    this.highlightRectangle.clear();\n    this.highlightRectangle.beginFill(0xeeeeff);\n    this.highlightRectangle.fillAlpha = 0.1;\n    this.highlightRectangle.alpha = 0.8;\n    this.highlightRectangle.lineStyle(1, 0x000000, 1);\n    this.highlightRectangle.drawRect(\n      highlightRectangle.x,\n      highlightRectangle.y,\n      highlightRectangle.width,\n      highlightRectangle.height\n    );\n    this.highlightRectangle.endFill();\n\n    const tooltipInfo =\n      this.highlightedInstance.getObjectName() +\n      '\\n' +\n      'X: ' +\n      parseInt(this.highlightedInstance.getX()) +\n      '  Y: ' +\n      parseInt(this.highlightedInstance.getY()) +\n      '\\n' +\n      'Layer: ' +\n      this.highlightedInstance.getLayer() +\n      '  Z: ' +\n      this.highlightedInstance.getZOrder() +\n      '\\n';\n    this.tooltipText.text = tooltipInfo;\n\n    this.tooltipText.x = Math.round(\n      highlightRectangle.x -\n        this.tooltipText.width / 2 +\n        highlightRectangle.width / 2\n    );\n    this.tooltipText.y = Math.round(\n      highlightRectangle.y - this.tooltipText.height\n    );\n\n    const padding = 5;\n    this.tooltipBackground.clear();\n    this.tooltipBackground.beginFill(0x000000, 0.8);\n    this.tooltipBackground.drawRoundedRect(\n      this.tooltipText.x - padding,\n      this.tooltipText.y - padding,\n      this.tooltipText.width + padding * 2,\n      this.tooltipText.height - padding,\n      4\n    );\n    this.tooltipBackground.endFill();\n  }\n}\n","export default class InstancesResizer {\n  constructor({ instanceMeasurer, options }) {\n    this.instanceMeasurer = instanceMeasurer;\n    this.options = options;\n    this.instanceSizes = {};\n    this.totalDeltaX = 0;\n    this.totalDeltaY = 0;\n  }\n\n  setOptions(options) {\n    this.options = options;\n  }\n\n  _roundWidth(width) {\n    if (!this.options.snap || !this.options.grid || this.options.gridWidth <= 0)\n      return Math.max(Math.round(width), 1);\n\n    return Math.max(\n      Math.round(width / this.options.gridWidth) * this.options.gridWidth,\n      1\n    );\n  }\n\n  _roundHeight(height) {\n    if (\n      !this.options.snap ||\n      !this.options.grid ||\n      this.options.gridHeight <= 0\n    )\n      return Math.max(Math.round(height), 1);\n\n    return Math.max(\n      Math.round(height / this.options.gridHeight) * this.options.gridHeight,\n      1\n    );\n  }\n\n  _getSizeDeltaX(proportional, initialSize) {\n    if (proportional && Math.abs(this.totalDeltaX) < Math.abs(this.totalDeltaY))\n      return (initialSize.width / initialSize.height) * this.totalDeltaY;\n\n    return this.totalDeltaX;\n  }\n\n  _getSizeDeltaY(proportional, initialSize) {\n    if (proportional && Math.abs(this.totalDeltaY) < Math.abs(this.totalDeltaX))\n      return (initialSize.height / initialSize.width) * this.totalDeltaX;\n\n    return this.totalDeltaY;\n  }\n\n  resizeBy(instances, deltaX, deltaY, proportional) {\n    this.totalDeltaX += deltaX;\n    this.totalDeltaY += deltaY;\n\n    for (let i = 0; i < instances.length; i++) {\n      const selectedInstance = instances[i];\n\n      if (!selectedInstance.hasCustomSize()) {\n        selectedInstance.setCustomWidth(\n          this.instanceMeasurer.getInstanceWidth(selectedInstance)\n        );\n        selectedInstance.setCustomHeight(\n          this.instanceMeasurer.getInstanceHeight(selectedInstance)\n        );\n      }\n\n      let initialSize = this.instanceSizes[selectedInstance.ptr];\n      if (!initialSize) {\n        initialSize = this.instanceSizes[selectedInstance.ptr] = {\n          width: selectedInstance.getCustomWidth(),\n          height: selectedInstance.getCustomHeight(),\n        };\n      }\n\n      selectedInstance.setHasCustomSize(true);\n      selectedInstance.setCustomWidth(\n        this._roundWidth(\n          initialSize.width + this._getSizeDeltaX(proportional, initialSize)\n        )\n      );\n      selectedInstance.setCustomHeight(\n        this._roundHeight(\n          initialSize.height + this._getSizeDeltaY(proportional, initialSize)\n        )\n      );\n    }\n  }\n\n  endResize() {\n    this.instanceSizes = {};\n    this.totalDeltaX = 0;\n    this.totalDeltaY = 0;\n  }\n}\n","export default class InstancesRotator {\n  constructor() {\n    this.instanceAngles = {};\n    this.totalDeltaX = 0;\n    this.totalDeltaY = 0;\n  }\n\n  _getNewAngle(proportional: boolean, initialAngle: number) {\n    const angle =\n      (Math.atan2(this.totalDeltaY, this.totalDeltaX) * 180) / Math.PI +\n      initialAngle;\n    return proportional ? Math.round(angle / 15) * 15 : angle;\n  }\n\n  rotateBy(instances, deltaX, deltaY, proportional) {\n    this.totalDeltaX += deltaX;\n    this.totalDeltaY += deltaY;\n\n    for (let i = 0; i < instances.length; i++) {\n      const selectedInstance = instances[i];\n      let initialAngle = this.instanceAngles[selectedInstance.ptr];\n      if (initialAngle === undefined) {\n        initialAngle = this.instanceAngles[\n          selectedInstance.ptr\n        ] = selectedInstance.getAngle();\n      }\n      selectedInstance.setAngle(this._getNewAngle(proportional, initialAngle));\n    }\n  }\n\n  endRotate() {\n    this.instanceAngles = {};\n    this.totalDeltaX = 0;\n    this.totalDeltaY = 0;\n  }\n}\n","import { roundPosition } from '../Utils/GridHelpers';\n\nexport default class InstancesMover {\n  constructor({ instanceMeasurer, options }) {\n    this.instanceMeasurer = instanceMeasurer;\n    this.options = options;\n    this.instancePositions = {};\n    this.totalDeltaX = 0;\n    this.totalDeltaY = 0;\n  }\n\n  setOptions(options) {\n    this.options = options;\n  }\n\n  _roundXPosition(x, noGridSnap) {\n    if (!this.options.snap || !this.options.grid || noGridSnap)\n      return Math.round(x);\n\n    return roundPosition(x, this.options.gridWidth, this.options.gridOffsetX);\n  }\n\n  _roundYPosition(y, noGridSnap) {\n    if (!this.options.snap || !this.options.grid || noGridSnap)\n      return Math.round(y);\n\n    return roundPosition(y, this.options.gridHeight, this.options.gridOffsetY);\n  }\n\n  _getMoveDeltaX(followAxis) {\n    if (followAxis && Math.abs(this.totalDeltaX) < Math.abs(this.totalDeltaY))\n      return 0;\n\n    return this.totalDeltaX;\n  }\n\n  _getMoveDeltaY(followAxis) {\n    if (followAxis && Math.abs(this.totalDeltaY) < Math.abs(this.totalDeltaX))\n      return 0;\n\n    return this.totalDeltaY;\n  }\n\n  moveBy(instances, deltaX, deltaY, followAxis, noGridSnap) {\n    this.totalDeltaX += deltaX;\n    this.totalDeltaY += deltaY;\n\n    for (var i = 0; i < instances.length; i++) {\n      const selectedInstance = instances[i];\n\n      let initialPosition = this.instancePositions[selectedInstance.ptr];\n      if (!initialPosition) {\n        initialPosition = this.instancePositions[selectedInstance.ptr] = {\n          x: selectedInstance.getX(),\n          y: selectedInstance.getY(),\n        };\n      }\n\n      selectedInstance.setX(\n        this._roundXPosition(\n          initialPosition.x + this._getMoveDeltaX(followAxis),\n          noGridSnap\n        )\n      );\n      selectedInstance.setY(\n        this._roundYPosition(\n          initialPosition.y + this._getMoveDeltaY(followAxis),\n          noGridSnap\n        )\n      );\n    }\n  }\n\n  endMove() {\n    this.instancePositions = {};\n    this.totalDeltaX = 0;\n    this.totalDeltaY = 0;\n  }\n}\n","import * as PIXI from 'pixi.js';\n\nexport default class SelectionRectangle {\n  constructor({ viewPosition, options }) {\n    this.viewPosition = viewPosition;\n    this.options = options;\n\n    this.pixiGrid = new PIXI.Graphics();\n    this.pixiGrid.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n  }\n\n  setOptions(options) {\n    this.options = options;\n  }\n\n  getPixiObject() {\n    return this.pixiGrid;\n  }\n\n  render() {\n    const options = this.options;\n\n    if (!options.grid) {\n      this.pixiGrid.visible = false;\n      return;\n    }\n\n    this.pixiGrid.visible = true;\n    this.pixiGrid.clear();\n    this.pixiGrid.beginFill(0x6868e8);\n    this.pixiGrid.lineStyle(1, 0x6868e8, 1);\n    this.pixiGrid.fillAlpha = 0.1;\n    this.pixiGrid.alpha = 0.8;\n\n    const sceneStartPoint = this.viewPosition.toSceneCoordinates(0, 0);\n    const sceneEndPoint = this.viewPosition.toSceneCoordinates(\n      this.viewPosition.getWidth(),\n      this.viewPosition.getHeight()\n    );\n\n    const startXPos =\n      Math.floor(sceneStartPoint[0] / options.gridWidth) * options.gridWidth;\n    const startYPos =\n      Math.floor(sceneStartPoint[1] / options.gridHeight) * options.gridHeight;\n\n    const endXPos =\n      Math.ceil(sceneEndPoint[0] / options.gridWidth) * options.gridWidth;\n    const endYPos =\n      Math.ceil(sceneEndPoint[1] / options.gridHeight) * options.gridHeight;\n\n    for (\n      let Xpos = startXPos + options.gridOffsetX;\n      Xpos < endXPos;\n      Xpos += options.gridWidth\n    ) {\n      const start = this.viewPosition.toCanvasCoordinates(Xpos, startYPos);\n      const end = this.viewPosition.toCanvasCoordinates(Xpos, endYPos);\n\n      this.pixiGrid.moveTo(start[0], start[1]);\n      this.pixiGrid.lineTo(end[0], end[1]);\n    }\n\n    for (\n      let Ypos = startYPos + options.gridOffsetY;\n      Ypos < endYPos;\n      Ypos += options.gridHeight\n    ) {\n      const start = this.viewPosition.toCanvasCoordinates(startXPos, Ypos);\n      const end = this.viewPosition.toCanvasCoordinates(endXPos, Ypos);\n\n      this.pixiGrid.moveTo(start[0], start[1]);\n      this.pixiGrid.lineTo(end[0], end[1]);\n    }\n\n    this.pixiGrid.endFill();\n  }\n}\n","import * as PIXI from 'pixi.js';\nimport transformRect from '../Utils/TransformRect';\nimport { rgbToHexNumber } from '../Utils/ColorTransformer';\n\nexport default class WindowBorder {\n  constructor({ project, layout, toCanvasCoordinates }) {\n    this.project = project;\n    this.layout = layout;\n    this.toCanvasCoordinates = toCanvasCoordinates;\n\n    this.pixiRectangle = new PIXI.Graphics();\n    this.pixiRectangle.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n    this.windowRectangle = {\n      x: 0,\n      y: 0,\n      width: this.project.getGameResolutionWidth(),\n      height: this.project.getGameResolutionHeight(),\n    };\n  }\n\n  getPixiObject() {\n    return this.pixiRectangle;\n  }\n\n  render() {\n    this.windowRectangle.width = this.project.getGameResolutionWidth();\n    this.windowRectangle.height = this.project.getGameResolutionHeight();\n\n    const displayedRectangle = transformRect(\n      this.toCanvasCoordinates,\n      this.windowRectangle\n    );\n\n    this.pixiRectangle.clear();\n    this.pixiRectangle.beginFill(0x000000);\n    this.pixiRectangle.lineStyle(\n      1,\n      rgbToHexNumber(\n        128 + (this.layout.getBackgroundColorRed() % 256),\n        128 + (this.layout.getBackgroundColorBlue() % 256),\n        128 + (this.layout.getBackgroundColorGreen() % 256)\n      ),\n      1\n    );\n    this.pixiRectangle.alpha = 1;\n    this.pixiRectangle.fillAlpha = 0;\n    this.pixiRectangle.drawRect(\n      displayedRectangle.x,\n      displayedRectangle.y,\n      displayedRectangle.width,\n      displayedRectangle.height\n    );\n    this.pixiRectangle.endFill();\n  }\n}\n","import * as PIXI from 'pixi.js';\nimport transformRect from '../Utils/TransformRect';\n\nexport default class WindowBorder {\n  constructor({ project, viewPosition, options }) {\n    this.project = project;\n    this.viewPosition = viewPosition;\n    this.options = options;\n\n    this.pixiRectangle = new PIXI.Graphics();\n    this.pixiRectangle.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n    this.windowRectangle = {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n    };\n  }\n\n  setOptions(options) {\n    this.options = options;\n  }\n\n  getPixiObject() {\n    return this.pixiRectangle;\n  }\n\n  render() {\n    const options = this.options;\n\n    if (!options.windowMask) {\n      this.pixiRectangle.visible = false;\n      return;\n    }\n\n    const width = this.project.getGameResolutionWidth();\n    const height = this.project.getGameResolutionHeight();\n    this.windowRectangle.x = this.viewPosition.getViewX() - width / 2;\n    this.windowRectangle.y = this.viewPosition.getViewY() - height / 2;\n    this.windowRectangle.width = width;\n    this.windowRectangle.height = height;\n\n    const displayedRectangle = transformRect(\n      this.viewPosition.toCanvasCoordinates,\n      this.windowRectangle\n    );\n\n    this.pixiRectangle.visible = true;\n    this.pixiRectangle.clear();\n    this.pixiRectangle.beginFill(0x000000);\n    this.pixiRectangle.lineStyle(1, 0x000000, 1);\n    this.pixiRectangle.alpha = 1;\n    this.pixiRectangle.fillAlpha = 0;\n    this.pixiRectangle.drawRect(\n      displayedRectangle.x,\n      displayedRectangle.y,\n      displayedRectangle.width,\n      displayedRectangle.height\n    );\n    this.pixiRectangle.endFill();\n  }\n}\n","// @flow\nimport * as PIXI from 'pixi.js';\nimport { rgbToHex } from '../Utils/ColorTransformer';\n\ntype Props = {|\n  layout: gdLayout,\n  pixiRenderer: PIXI.Renderer,\n|};\n\nexport default class BackgroundColor {\n  layout: gdLayout;\n  pixiRenderer: PIXI.Renderer;\n\n  constructor({ layout, pixiRenderer }: Props) {\n    this.layout = layout;\n    this.pixiRenderer = pixiRenderer;\n  }\n\n  render() {\n    this.pixiRenderer.backgroundColor = parseInt(\n      parseInt(\n        rgbToHex(\n          this.layout.getBackgroundColorRed(),\n          this.layout.getBackgroundColorGreen(),\n          this.layout.getBackgroundColorBlue()\n        ),\n        16\n      ),\n      10\n    );\n  }\n}\n","// @flow\n\n/**\n * Provide a method shouldUpdate that can be called in a game loop or in\n * a method used in renderAnimationFrame, and which indicate if the rendering/update\n * of the scene should be done according to the desired framerate.\n */\nexport default class FpsLimiter {\n  _lastFrameTime: number;\n  _interval: number;\n  _forceUpdate: boolean;\n\n  constructor(maxFps: number) {\n    this._lastFrameTime = Date.now();\n    this._interval = 1000 / maxFps;\n    this._forceUpdate = false;\n  }\n\n  shouldUpdate() {\n    const now = Date.now();\n    const delta = now - this._lastFrameTime;\n\n    if (delta > this._interval || this._forceUpdate) {\n      this._lastFrameTime = now - (delta % this._interval);\n      this._forceUpdate = false;\n      return true;\n    }\n\n    return false;\n  }\n\n  forceNextUpdate() {\n    this._forceUpdate = true;\n  }\n}\n","import * as PIXI from 'pixi.js';\n\n// PIXI has a ticker that is used by PIXI InteractionManager, and which\n// frequently check if interaction happened. We may want to disable it\n// when it's useless to do these interaction checks to save CPU usage.\n\n/**\n *  Stop the PIXI Ticker used to monitor interactions\n */\nexport const stopPIXITicker = () => {\n  const ticker = PIXI.ticker && PIXI.ticker.shared;\n  if (ticker) ticker.stop();\n};\n\n/**\n * Start the PIXI Ticker used to monitor interactions\n */\nexport const startPIXITicker = () => {\n  // Timeout ensure that the ticker is started even if other components\n  // call stopPIXITicker during the same tick (for example, when switching\n  // between SceneEditor tabs).\n  setTimeout(() => {\n    const ticker = PIXI.ticker && PIXI.ticker.shared;\n    if (ticker) ticker.start();\n  }, 50);\n};\n","// @flow\nimport * as PIXI from 'pixi.js';\n\ntype Props = {\n  getLastCursorSceneCoordinates: () => [number, number],\n  width: number,\n  height: number,\n};\n\nexport default class StatusBar {\n  _width: number;\n  _height: number;\n  _getLastCursorSceneCoordinates: () => [number, number];\n  _statusBarContainer: PIXI.Container;\n  _statusBarBackground: PIXI.Graphics;\n  _statusBarText: PIXI.Text;\n\n  constructor({ getLastCursorSceneCoordinates, width, height }: Props) {\n    this._getLastCursorSceneCoordinates = getLastCursorSceneCoordinates;\n    this._statusBarContainer = new PIXI.Container();\n    this._statusBarContainer.alpha = 0.8;\n    this._statusBarContainer.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n    this._statusBarBackground = new PIXI.Graphics();\n    this._statusBarText = new PIXI.Text('', {\n      fontSize: 15,\n      fill: 0xffffff,\n      align: 'left',\n    });\n    this._statusBarContainer.addChild(this._statusBarBackground);\n    this._statusBarContainer.addChild(this._statusBarText);\n    this.resize(width, height);\n  }\n\n  resize(width: number, height: number) {\n    this._width = width;\n    this._height = height;\n  }\n\n  getPixiObject(): PIXI.Container {\n    return this._statusBarContainer;\n  }\n\n  render() {\n    const padding = 5;\n    const borderRadius = 4;\n    const [x, y] = this._getLastCursorSceneCoordinates();\n    this._statusBarText.text = `${x.toFixed(0)};${y.toFixed(0)}`;\n    this._statusBarText.position.x = 0 + padding;\n    this._statusBarText.position.y = Math.round(\n      this._height - padding - this._statusBarText.height\n    );\n\n    this._statusBarBackground.clear();\n    this._statusBarBackground.beginFill(0x000000, 0.8);\n    this._statusBarBackground.drawRoundedRect(\n      0 - borderRadius,\n      this._height - padding * 2 - this._statusBarText.height,\n      this._statusBarText.width + padding * 2 + borderRadius,\n      this._statusBarText.height + padding * 2 + borderRadius,\n      borderRadius\n    );\n    this._statusBarBackground.endFill();\n  }\n}\n","// @flow\n\ntype Props = {|\n  canvas: HTMLDivElement,\n  shouldMoveView: () => boolean,\n|};\n\n/**\n * Change the cursor displayed when hovering the canvas.\n *\n * Some elements on the canvas (for example, resize buttons)\n * can also set their own cursor - this class is only for the canvas.\n */\nexport default class CanvasCursor {\n  canvas: HTMLDivElement;\n  shouldMoveView: () => boolean;\n\n  constructor({ canvas, shouldMoveView }: Props) {\n    this.canvas = canvas;\n    this.shouldMoveView = shouldMoveView;\n  }\n\n  render() {\n    if (this.shouldMoveView()) {\n      this.canvas.style.cursor = 'grab';\n      if (this.canvas.style.cursor !== 'grab') {\n        this.canvas.style.cursor = '-webkit-grab';\n      }\n      return;\n    }\n\n    this.canvas.style.cursor = 'default';\n  }\n}\n","import React, { Component } from 'react';\nimport gesture from 'pixi-simple-gesture';\nimport DeprecatedKeyboardShortcuts from '../UI/KeyboardShortcuts/DeprecatedKeyboardShortcuts';\nimport InstancesRenderer from './InstancesRenderer';\nimport ViewPosition from './ViewPosition';\nimport SelectedInstances from './SelectedInstances';\nimport HighlightedInstance from './HighlightedInstance';\nimport SelectionRectangle from './SelectionRectangle';\nimport InstancesResizer from './InstancesResizer';\nimport InstancesRotator from './InstancesRotator';\nimport InstancesMover from './InstancesMover';\nimport Grid from './Grid';\nimport WindowBorder from './WindowBorder';\nimport WindowMask from './WindowMask';\nimport BackgroundColor from './BackgroundColor';\nimport * as PIXI from 'pixi.js';\nimport FpsLimiter from './FpsLimiter';\nimport { startPIXITicker, stopPIXITicker } from '../Utils/PIXITicker';\nimport StatusBar from './StatusBar';\nimport CanvasCursor from './CanvasCursor';\nimport InstancesAdder from './InstancesAdder';\nimport { makeDropTarget } from '../UI/DragAndDrop/DropTarget';\nimport { objectWithContextReactDndType } from '../ObjectsList';\nimport PinchHandler, { shouldBeHandledByPinch } from './PinchHandler';\n\nconst styles = {\n  canvasArea: { flex: 1, position: 'absolute', overflow: 'hidden' },\n  dropCursor: { cursor: 'copy' },\n};\n\nconst DropTarget = makeDropTarget(objectWithContextReactDndType);\n\nexport default class InstancesEditorContainer extends Component {\n  lastContextMenuX = 0;\n  lastContextMenuY = 0;\n  lastCursorX = 0;\n  lastCursorY = 0;\n  fpsLimiter = new FpsLimiter(28);\n\n  componentDidMount() {\n    // Initialize the PIXI renderer, if possible\n    if (this.canvasArea && !this.pixiRenderer) {\n      this._initializeCanvasAndRenderer();\n    }\n  }\n\n  componentDidUpdate() {\n    // Initialize the PIXI renderer, if not already done.\n    // This can happen if canvasArea was not rendered\n    // just after the mount (depends on react-dnd versions?).\n    if (this.canvasArea && !this.pixiRenderer) {\n      this._initializeCanvasAndRenderer();\n    }\n  }\n\n  _initializeCanvasAndRenderer() {\n    // project can be used here for initializing stuff, but don't keep references to it.\n    // Instead, create editors in _mountEditorComponents (as they will be destroyed/recreated\n    // if the project changes).\n    const { project } = this.props;\n\n    this.pixiRenderer = PIXI.autoDetectRenderer(\n      this.props.width,\n      this.props.height,\n      { antialias: true } //fixes jaggy edges\n    );\n    this.canvasArea.appendChild(this.pixiRenderer.view);\n    this.pixiRenderer.view.addEventListener('contextmenu', e => {\n      e.preventDefault();\n\n      this.lastContextMenuX = e.offsetX;\n      this.lastContextMenuY = e.offsetY;\n      if (this.props.onContextMenu)\n        this.props.onContextMenu(e.clientX, e.clientY);\n\n      return false;\n    });\n    this.pixiRenderer.view.onmousewheel = event => {\n      if (this.keyboardShortcuts.shouldZoom()) {\n        this.zoomBy(event.wheelDelta / 5000);\n      } else if (this.keyboardShortcuts.shouldScrollHorizontally()) {\n        this.viewPosition.scrollBy(-event.wheelDelta / 10, 0);\n      } else {\n        this.viewPosition.scrollBy(event.deltaX / 10, event.deltaY / 10);\n      }\n\n      if (this.props.onViewPositionChanged) {\n        this.props.onViewPositionChanged(this.viewPosition);\n      }\n      event.preventDefault();\n    };\n    this.pixiRenderer.view.setAttribute('tabIndex', -1);\n    this.pixiRenderer.view.addEventListener('focus', e => {\n      this.keyboardShortcuts.focus();\n    });\n    this.pixiRenderer.view.addEventListener('blur', e => {\n      this.keyboardShortcuts.blur();\n    });\n    this.pixiRenderer.view.addEventListener('mouseover', e => {\n      this.keyboardShortcuts.focus();\n    });\n    this.pixiRenderer.view.addEventListener('mouseout', e => {\n      this.keyboardShortcuts.blur();\n    });\n\n    this.pixiContainer = new PIXI.Container();\n\n    this.backgroundArea = new PIXI.Container();\n    this.backgroundArea.hitArea = new PIXI.Rectangle(\n      0,\n      0,\n      this.props.width,\n      this.props.height\n    );\n    gesture.panable(this.backgroundArea);\n    this.backgroundArea.on('mousedown', event =>\n      this._onBackgroundClicked(event.data.global.x, event.data.global.y)\n    );\n    this.backgroundArea.on('touchstart', event => {\n      if (shouldBeHandledByPinch(event.data && event.data.originalEvent)) {\n        return;\n      }\n\n      this._onBackgroundClicked(event.data.global.x, event.data.global.y);\n    });\n    this.backgroundArea.on('mousemove', event =>\n      this._onMouseMove(event.data.global.x, event.data.global.y)\n    );\n    this.backgroundArea.on('panmove', event =>\n      this._onPanMove(\n        event.deltaX,\n        event.deltaY,\n        event.data.global.x,\n        event.data.global.y\n      )\n    );\n    this.backgroundArea.on('panend', event => this._onPanEnd());\n    this.pixiContainer.addChild(this.backgroundArea);\n\n    this.viewPosition = new ViewPosition({\n      initialViewX: project ? project.getGameResolutionWidth() / 2 : 0,\n      initialViewY: project ? project.getGameResolutionHeight() / 2 : 0,\n      width: this.props.width,\n      height: this.props.height,\n      options: this.props.options,\n    });\n    this.pixiContainer.addChild(this.viewPosition.getPixiContainer());\n\n    this.grid = new Grid({\n      viewPosition: this.viewPosition,\n      options: this.props.options,\n    });\n    this.pixiContainer.addChild(this.grid.getPixiObject());\n\n    this.keyboardShortcuts = new DeprecatedKeyboardShortcuts({\n      onDelete: this.props.onDeleteSelection,\n      onMove: this.moveSelection,\n      onCopy: this.props.onCopy,\n      onCut: this.props.onCut,\n      onPaste: this.props.onPaste,\n      onUndo: this.props.onUndo,\n      onRedo: this.props.onRedo,\n      onZoomOut: this.props.onZoomOut,\n      onZoomIn: this.props.onZoomIn,\n    });\n\n    this.pinchHandler = new PinchHandler({\n      canvas: this.pixiRenderer.view,\n      setZoomFactor: this.setZoomFactor,\n      getZoomFactor: this.getZoomFactor,\n      viewPosition: this.viewPosition,\n    });\n\n    this.canvasCursor = new CanvasCursor({\n      canvas: this.canvasArea,\n      shouldMoveView: () => this.keyboardShortcuts.shouldMoveView(),\n    });\n\n    this._instancesAdder = new InstancesAdder({\n      instances: this.props.initialInstances,\n      options: this.props.options,\n    });\n\n    this._mountEditorComponents(this.props);\n    this._renderScene();\n  }\n\n  /**\n   * Force the internal InstancesRenderer to be destroyed and recreated\n   * (as well as other components holding references to instances). Call\n   * this when the initial instances were recreated to ensure that there\n   * is not mismatch between renderers and the instances that were updated.\n   */\n  forceRemount() {\n    this._mountEditorComponents(this.props);\n  }\n\n  _mountEditorComponents(props) {\n    //Remove and delete any existing editor component\n    if (this.highlightedInstance) {\n      this.pixiContainer.removeChild(this.highlightedInstance.getPixiObject());\n    }\n    if (this.selectedInstances) {\n      this.pixiContainer.removeChild(this.selectedInstances.getPixiContainer());\n    }\n    if (this.instancesRenderer) {\n      this.viewPosition\n        .getPixiContainer()\n        .removeChild(this.instancesRenderer.getPixiContainer());\n      this.instancesRenderer.delete();\n    }\n    if (this.selectionRectangle) {\n      this.pixiContainer.removeChild(this.selectionRectangle.getPixiObject());\n      this.selectionRectangle.delete();\n    }\n    if (this.windowBorder) {\n      this.pixiContainer.removeChild(this.windowBorder.getPixiObject());\n    }\n    if (this.windowMask) {\n      this.pixiContainer.removeChild(this.windowMask.getPixiObject());\n    }\n    if (this.statusBar) {\n      this.pixiContainer.removeChild(this.statusBar.getPixiObject());\n    }\n\n    this.backgroundColor = new BackgroundColor({\n      layout: props.layout,\n      pixiRenderer: this.pixiRenderer,\n    });\n    this.instancesRenderer = new InstancesRenderer({\n      project: props.project,\n      layout: props.layout,\n      instances: props.initialInstances,\n      viewPosition: this.viewPosition,\n      onOverInstance: this._onOverInstance,\n      onMoveInstance: this._onMoveInstance,\n      onMoveInstanceEnd: this._onMoveInstanceEnd,\n      onDownInstance: this._onDownInstance,\n      onOutInstance: this._onOutInstance,\n      onInstanceClicked: this._onInstanceClicked,\n    });\n    this.selectionRectangle = new SelectionRectangle({\n      instances: props.initialInstances,\n      instanceMeasurer: this.instancesRenderer.getInstanceMeasurer(),\n      toSceneCoordinates: this.viewPosition.toSceneCoordinates,\n    });\n    this.selectedInstances = new SelectedInstances({\n      instancesSelection: this.props.instancesSelection,\n      onResize: this._onResize,\n      onResizeEnd: this._onResizeEnd,\n      onRotate: this._onRotate,\n      onRotateEnd: this._onRotateEnd,\n      instanceMeasurer: this.instancesRenderer.getInstanceMeasurer(),\n      toCanvasCoordinates: this.viewPosition.toCanvasCoordinates,\n      screenType: this.props.screenType,\n    });\n    this.highlightedInstance = new HighlightedInstance({\n      instanceMeasurer: this.instancesRenderer.getInstanceMeasurer(),\n      toCanvasCoordinates: this.viewPosition.toCanvasCoordinates,\n    });\n    this.instancesResizer = new InstancesResizer({\n      instanceMeasurer: this.instancesRenderer.getInstanceMeasurer(),\n      options: this.props.options,\n    });\n    this.instancesRotator = new InstancesRotator();\n    this.instancesMover = new InstancesMover({\n      instanceMeasurer: this.instancesRenderer.getInstanceMeasurer(),\n      options: this.props.options,\n    });\n    this.windowBorder = new WindowBorder({\n      project: props.project,\n      layout: props.layout,\n      toCanvasCoordinates: this.viewPosition.toCanvasCoordinates,\n    });\n    this.windowMask = new WindowMask({\n      project: props.project,\n      viewPosition: this.viewPosition,\n      options: this.props.options,\n    });\n    this.statusBar = new StatusBar({\n      width: this.props.width,\n      height: this.props.height,\n      getLastCursorSceneCoordinates: this.getLastCursorSceneCoordinates,\n    });\n\n    this.pixiContainer.addChild(this.selectionRectangle.getPixiObject());\n    this.viewPosition\n      .getPixiContainer()\n      .addChild(this.instancesRenderer.getPixiContainer());\n    this.pixiContainer.addChild(this.windowBorder.getPixiObject());\n    this.pixiContainer.addChild(this.windowMask.getPixiObject());\n    this.pixiContainer.addChild(this.selectedInstances.getPixiContainer());\n    this.pixiContainer.addChild(this.highlightedInstance.getPixiObject());\n    this.pixiContainer.addChild(this.statusBar.getPixiObject());\n  }\n\n  componentWillUnmount() {\n    // This is an antipattern and is theorically not needed, but help\n    // to protect against renders after the component is unmounted.\n    this._unmounted = true;\n\n    this.keyboardShortcuts.unmount();\n    this.selectionRectangle.delete();\n    this.instancesRenderer.delete();\n    this._instancesAdder.unmount();\n    this.pinchHandler.unmount();\n    if (this.nextFrame) cancelAnimationFrame(this.nextFrame);\n    stopPIXITicker();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.width !== this.props.width ||\n      nextProps.height !== this.props.height\n    ) {\n      this.pixiRenderer.resize(nextProps.width, nextProps.height);\n      this.viewPosition.resize(nextProps.width, nextProps.height);\n      this.statusBar.resize(nextProps.width, nextProps.height);\n      this.backgroundArea.hitArea = new PIXI.Rectangle(\n        0,\n        0,\n        nextProps.width,\n        nextProps.height\n      );\n\n      // Avoid flickering that could happen while waiting for next animation frame.\n      this.fpsLimiter.forceNextUpdate();\n      this._renderScene();\n    }\n\n    if (nextProps.options !== this.props.options) {\n      this.grid.setOptions(nextProps.options);\n      this.instancesMover.setOptions(nextProps.options);\n      this.instancesResizer.setOptions(nextProps.options);\n      this.windowMask.setOptions(nextProps.options);\n      this.viewPosition.setOptions(nextProps.options);\n      this._instancesAdder.setOptions(nextProps.options);\n    }\n\n    if (nextProps.screenType !== this.props.screenType) {\n      this.selectedInstances.setScreenType(this.props.screenType);\n    }\n\n    if (\n      this.props.layout !== nextProps.layout ||\n      this.props.initialInstances !== nextProps.initialInstances ||\n      this.props.project !== nextProps.project\n    ) {\n      this._mountEditorComponents(nextProps);\n    }\n\n    // For avoiding useless renderings, which is costly for CPU/GPU, when the editor\n    // is not displayed, `pauseRendering` prop can be set to true.\n    if (nextProps.pauseRendering && !this.props.pauseRendering)\n      this.pauseSceneRendering();\n\n    if (!nextProps.pauseRendering && this.props.pauseRendering)\n      this.restartSceneRendering();\n  }\n\n  /**\n   * Delete instance renderers of the specified objects, which will then be recreated during\n   * the next render. Call this when an object resources may have changed (for example, a modified image),\n   * and you want the instances of objects to reflect the changes.\n   * See also ResourcesLoader and PixiResourcesLoader.\n   * @param {string} objectName The name of the object for which instance must be re-rendered.\n   */\n  resetRenderersFor(objectName) {\n    if (this.instancesRenderer)\n      this.instancesRenderer.resetRenderersFor(objectName);\n  }\n\n  zoomBy(value) {\n    this.setZoomFactor(this.getZoomFactor() + value);\n  }\n\n  getZoomFactor = () => {\n    return this.props.options.zoomFactor;\n  };\n\n  setZoomFactor = zoomFactor => {\n    this.props.onChangeOptions({\n      zoomFactor: Math.max(Math.min(zoomFactor, 10), 0.01),\n    });\n  };\n\n  /**\n   * Immediately add instances for the specified objects at the given\n   * position (in scene coordinates).\n   */\n  addInstances = (\n    pos /*: [number, number] */,\n    objectNames /*: Array<string> */\n  ) => {\n    this._instancesAdder.addInstances(pos, objectNames);\n  };\n\n  _onMouseMove = (x, y) => {\n    this.lastCursorX = x;\n    this.lastCursorY = y;\n  };\n\n  _onBackgroundClicked = (x, y) => {\n    this.lastCursorX = x;\n    this.lastCursorY = y;\n    this.pixiRenderer.view.focus();\n\n    // Selection rectangle is only drawn in _onPanMove,\n    // which can happen a few milliseconds after a background\n    // click/touch - enough to have the selection rectangle being\n    // offset from the first click - which looks laggy. Set\n    // the start position now.\n    if (!this.keyboardShortcuts.shouldMoveView()) {\n      this.selectionRectangle.startSelectionRectangle(x, y);\n    }\n\n    if (\n      !this.keyboardShortcuts.shouldMultiSelect() &&\n      !this.keyboardShortcuts.shouldMoveView()\n    ) {\n      this.props.instancesSelection.clearSelection();\n      this.props.onInstancesSelected([]);\n    }\n  };\n\n  _onPanMove = (deltaX, deltaY, x, y) => {\n    if (this.keyboardShortcuts.shouldMoveView()) {\n      const sceneDeltaX = deltaX / this.getZoomFactor();\n      const sceneDeltaY = deltaY / this.getZoomFactor();\n\n      this.viewPosition.scrollBy(-sceneDeltaX, -sceneDeltaY);\n\n      if (this.props.onViewPositionChanged) {\n        this.props.onViewPositionChanged(this.viewPosition);\n      }\n    } else {\n      this.selectionRectangle.updateSelectionRectangle(x, y);\n    }\n  };\n\n  _getLayersVisibility = () => {\n    const { layout } = this.props;\n    const layersVisibility = {};\n    for (let i = 0; i < layout.getLayersCount(); i++) {\n      layersVisibility[layout.getLayerAt(i).getName()] = layout\n        .getLayerAt(i)\n        .getVisibility();\n    }\n    return layersVisibility;\n  };\n\n  _onPanEnd = () => {\n    // When a pan is ended, this can be that either the user was making\n    // a selection, or that the user was moving the view.\n    if (this.selectionRectangle.hasStartedSelectionRectangle()) {\n      let instancesSelected = this.selectionRectangle.endSelectionRectangle();\n\n      this.props.instancesSelection.selectInstances(\n        instancesSelected,\n        this.keyboardShortcuts.shouldMultiSelect(),\n        this._getLayersVisibility()\n      );\n      instancesSelected = this.props.instancesSelection.getSelectedInstances();\n      this.props.onInstancesSelected(instancesSelected);\n    }\n  };\n\n  _onInstanceClicked = instance => {\n    this.pixiRenderer.view.focus();\n  };\n\n  _onOverInstance = instance => {\n    this.highlightedInstance.setInstance(instance);\n  };\n\n  _onDownInstance = instance => {\n    if (this.keyboardShortcuts.shouldMoveView()) {\n      // If the user wants to move the view, discard the click on an instance:\n      // it's just the beginning of the user panning the view.\n      return;\n    }\n\n    if (this.keyboardShortcuts.shouldCloneInstances()) {\n      const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n      for (var i = 0; i < selectedInstances.length; i++) {\n        const instance = selectedInstances[i];\n        this.props.initialInstances.insertInitialInstance(instance);\n      }\n    } else {\n      this.props.instancesSelection.selectInstance(\n        instance,\n        this.keyboardShortcuts.shouldMultiSelect(),\n        this._getLayersVisibility()\n      );\n\n      if (this.props.onInstancesSelected) {\n        this.props.onInstancesSelected(\n          this.props.instancesSelection.getSelectedInstances()\n        );\n      }\n    }\n  };\n\n  _onOutInstance = instance => {\n    if (instance === this.highlightedInstance.getInstance())\n      this.highlightedInstance.setInstance(null);\n  };\n\n  _onMoveInstance = (instance, deltaX, deltaY) => {\n    const sceneDeltaX = deltaX / this.getZoomFactor();\n    const sceneDeltaY = deltaY / this.getZoomFactor();\n\n    // It is possible for the user to start moving an instance, then press the button\n    // to move the view, move it, then unpress it and continue to move the instance.\n    // This means that while we're in \"_onMoveInstance\", we must handle view moving.\n    if (this.keyboardShortcuts.shouldMoveView()) {\n      this.viewPosition.scrollBy(-sceneDeltaX, -sceneDeltaY);\n\n      if (this.props.onViewPositionChanged) {\n        this.props.onViewPositionChanged(this.viewPosition);\n      }\n      return;\n    }\n\n    if (!this.props.instancesSelection.isInstanceSelected(instance)) {\n      this._onInstanceClicked(instance);\n    }\n\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    this.instancesMover.moveBy(\n      selectedInstances,\n      sceneDeltaX,\n      sceneDeltaY,\n      this.keyboardShortcuts.shouldFollowAxis(),\n      this.keyboardShortcuts.shouldNotSnapToGrid()\n    );\n  };\n\n  _onMoveInstanceEnd = () => {\n    this.instancesMover.endMove();\n\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    this.props.onInstancesMoved(selectedInstances);\n  };\n\n  _onResize = (deltaX, deltaY) => {\n    const sceneDeltaX = deltaX / this.getZoomFactor();\n    const sceneDeltaY = deltaY / this.getZoomFactor();\n\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    this.instancesResizer.resizeBy(\n      selectedInstances,\n      sceneDeltaX,\n      sceneDeltaY,\n      this.keyboardShortcuts.shouldResizeProportionally()\n    );\n  };\n\n  _onResizeEnd = () => {\n    this.instancesResizer.endResize();\n\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    this.props.onInstancesResized(selectedInstances);\n  };\n\n  _onRotate = (deltaX, deltaY) => {\n    const sceneDeltaX = deltaX / this.getZoomFactor();\n    const sceneDeltaY = deltaY / this.getZoomFactor();\n\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    this.instancesRotator.rotateBy(\n      selectedInstances,\n      sceneDeltaX,\n      sceneDeltaY,\n      this.keyboardShortcuts.shouldResizeProportionally()\n    );\n  };\n\n  _onRotateEnd = () => {\n    this.instancesRotator.endRotate();\n\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    this.props.onInstancesRotated(selectedInstances);\n  };\n\n  clearHighlightedInstance = () => {\n    this.highlightedInstance.setInstance(null);\n  };\n\n  moveSelection = (x, y) => {\n    const selectedInstances = this.props.instancesSelection.getSelectedInstances();\n    selectedInstances.forEach(instance => {\n      instance.setX(instance.getX() + x);\n      instance.setY(instance.getY() + y);\n    });\n    this.props.onInstancesMoved(selectedInstances);\n  };\n\n  scrollTo(x, y) {\n    this.viewPosition.scrollTo(x, y);\n  }\n\n  centerView() {\n    const x = this.props.project.getGameResolutionWidth() / 2;\n    const y = this.props.project.getGameResolutionHeight() / 2;\n    this.viewPosition.scrollTo(x, y);\n  }\n\n  centerViewOn(instances) {\n    if (!instances.length) return;\n\n    this.viewPosition.scrollToInstance(instances[instances.length - 1]);\n    if (this.props.onViewPositionChanged) {\n      this.props.onViewPositionChanged(this.viewPosition);\n    }\n  }\n\n  getLastContextMenuSceneCoordinates = () => {\n    return this.viewPosition.toSceneCoordinates(\n      this.lastContextMenuX,\n      this.lastContextMenuY\n    );\n  };\n\n  getLastCursorSceneCoordinates = () => {\n    return this.viewPosition.toSceneCoordinates(\n      this.lastCursorX,\n      this.lastCursorY\n    );\n  };\n\n  getViewPosition = () /*: ?ViewPosition */ => {\n    return this.viewPosition;\n  };\n\n  _renderScene = () => {\n    // Protect against rendering scheduled after the component is unmounted.\n    if (this._unmounted) return;\n    if (this._renderingPaused) return;\n\n    // Avoid killing the CPU by limiting the rendering calls.\n    if (this.fpsLimiter.shouldUpdate()) {\n      this.backgroundColor.render();\n      this.viewPosition.render();\n      this.canvasCursor.render();\n      this.grid.render();\n      this.instancesRenderer.render();\n      this.highlightedInstance.render();\n      this.selectedInstances.render();\n      this.selectionRectangle.render();\n      this.windowBorder.render();\n      this.windowMask.render();\n      this.statusBar.render();\n      this.pixiRenderer.render(this.pixiContainer);\n    }\n    this.nextFrame = requestAnimationFrame(this._renderScene);\n  };\n\n  pauseSceneRendering = () => {\n    if (this.nextFrame) cancelAnimationFrame(this.nextFrame);\n    this._renderingPaused = true;\n\n    stopPIXITicker();\n  };\n\n  restartSceneRendering = () => {\n    this._renderingPaused = false;\n    this._renderScene();\n\n    startPIXITicker();\n  };\n\n  render() {\n    if (!this.props.project) return null;\n\n    return (\n      <DropTarget\n        canDrop={() => true}\n        hover={monitor => {\n          const { _instancesAdder, viewPosition, canvasArea } = this;\n          if (!_instancesAdder || !canvasArea || !viewPosition) return;\n\n          const { x, y } = monitor.getClientOffset();\n          const canvasRect = canvasArea.getBoundingClientRect();\n          const pos = viewPosition.toSceneCoordinates(\n            x - canvasRect.left,\n            y - canvasRect.top\n          );\n          _instancesAdder.createOrUpdateTemporaryInstancesFromObjectNames(\n            pos,\n            this.props.selectedObjectNames\n          );\n        }}\n        drop={monitor => {\n          const { _instancesAdder, viewPosition, canvasArea } = this;\n          if (!_instancesAdder || !canvasArea || !viewPosition) return;\n\n          if (monitor.didDrop()) {\n            // Drop was done somewhere else (in a child of the canvas:\n            // should not happen, but still handling this case).\n            _instancesAdder.deleteTemporaryInstances();\n            return;\n          }\n\n          const { x, y } = monitor.getClientOffset();\n          const canvasRect = canvasArea.getBoundingClientRect();\n          const pos = viewPosition.toSceneCoordinates(\n            x - canvasRect.left,\n            y - canvasRect.top\n          );\n          _instancesAdder.updateTemporaryInstancePositions(pos);\n          _instancesAdder.commitTemporaryInstances();\n          this.props.onInstancesAdded();\n        }}\n      >\n        {({ connectDropTarget, isOver }) => {\n          // The children are re-rendered when isOver change:\n          // take this opportunity to delete any temporary instances\n          // if the dragging is not done anymore over the canvas.\n          if (this._instancesAdder && !isOver) {\n            this._instancesAdder.deleteTemporaryInstances();\n          }\n\n          return connectDropTarget(\n            <div\n              ref={canvasArea => (this.canvasArea = canvasArea)}\n              style={{\n                ...styles.canvasArea,\n                ...(this.props.showDropCursor ? styles.dropCursor : undefined),\n              }}\n            />\n          );\n        }}\n      </DropTarget>\n    );\n  }\n}\n","//TODO: Factor with styles.js from PointsEditor.\nexport default {\n  handleColumn: {\n    width: 24,\n    paddingLeft: 8,\n    paddingRight: 0,\n  },\n  effectsColumn: {\n    width: 100,\n    textAlign: 'center',\n  },\n  toolColumn: {\n    width: 96,\n  },\n};\n","// @flow\nimport { mapFor } from '../Utils/MapFor';\nimport { type Schema } from '../PropertiesEditor';\nimport flatten from 'lodash/flatten';\n\nexport type EnumeratedEffectMetadata = {|\n  extension: gdPlatformExtension,\n  effectMetadata: gdEffectMetadata,\n  type: string,\n  fullName: string,\n  description: string,\n  parametersSchema: Schema,\n|};\n\n/**\n * Fetch all the effects available for a project, and convert them\n * to a format easier to use.\n */\nexport const enumerateEffectsMetadata = (\n  project: gdProject\n): Array<EnumeratedEffectMetadata> => {\n  const platform = project.getCurrentPlatform();\n  const extensionsList = platform.getAllPlatformExtensions();\n\n  return flatten(\n    mapFor(0, extensionsList.size(), i => {\n      const extension = extensionsList.at(i);\n\n      return extension\n        .getExtensionEffectTypes()\n        .toJSArray()\n        .map(type => extension.getEffectMetadata(type))\n        .map(effectMetadata => {\n          const effectType = effectMetadata.getType();\n\n          // Convert the effect type properties to a PropertiesEditor Schema.\n          const properties = effectMetadata.getProperties();\n          const parameterNames = properties.keys().toJSArray();\n          const parametersSchema: Schema = parameterNames\n            .map((parameterName: string) => {\n              const property = properties.get(parameterName);\n              const valueType = property.getType().toLowerCase();\n              const propertyLabel = property.getLabel();\n              const propertyDescription = property.getDescription();\n              const getLabel = () => propertyLabel;\n              const getDescription = () => propertyDescription;\n              const getExtraDescription = () => parameterName;\n\n              if (valueType === 'number') {\n                return {\n                  name: parameterName,\n                  valueType: 'number',\n                  getValue: (effect: gdEffect) =>\n                    effect.getDoubleParameter(parameterName),\n                  setValue: (effect: gdEffect, newValue: number) =>\n                    effect.setDoubleParameter(parameterName, newValue),\n                  getLabel,\n                  getDescription,\n                  getExtraDescription,\n                };\n              } else if (valueType === 'boolean') {\n                return {\n                  name: parameterName,\n                  valueType: 'boolean',\n                  getValue: (effect: gdEffect) =>\n                    effect.getBooleanParameter(parameterName),\n                  setValue: (effect: gdEffect, newValue: boolean) =>\n                    effect.setBooleanParameter(parameterName, newValue),\n                  getLabel,\n                  getDescription,\n                  getExtraDescription,\n                };\n              } else if (valueType === 'resource') {\n                // Resource is a \"string\" (with a selector in the UI)\n                const kind = property.getExtraInfo().toJSArray()[0] || '';\n                return {\n                  name: parameterName,\n                  valueType: 'resource',\n                  resourceKind: kind,\n                  getValue: (effect: gdEffect) =>\n                    effect.getStringParameter(parameterName),\n                  setValue: (effect: gdEffect, newValue: number) =>\n                    effect.setStringParameter(parameterName, newValue),\n                  getLabel,\n                  getDescription,\n                  getExtraDescription,\n                };\n              } else if (valueType === 'color') {\n                return {\n                  name: parameterName,\n                  valueType: 'color',\n                  getValue: (effect: gdEffect) =>\n                    effect.getStringParameter(parameterName),\n                  setValue: (effect: gdEffect, newValue: number) =>\n                    effect.setStringParameter(parameterName, newValue),\n                  getLabel,\n                  getDescription,\n                  getExtraDescription,\n                };\n              } else {\n                console.error(\n                  `A property with type=${valueType} could not be mapped to a field for effect ${effectType}. Ensure that this type is correct.`\n                );\n                return null;\n              }\n            })\n            .filter(Boolean);\n\n          return {\n            extension,\n            type: effectType,\n            effectMetadata,\n            fullName: effectMetadata.getFullName(),\n            description: effectMetadata.getDescription(),\n            parametersSchema,\n          };\n        });\n    })\n  );\n};\n\nexport const setEffectDefaultParameters = (\n  effect: gdEffect,\n  effectMetadata: gdEffectMetadata\n) => {\n  effect.clearParameters();\n\n  const properties = effectMetadata.getProperties();\n  const parameterNames = properties.keys().toJSArray();\n  parameterNames.forEach((parameterName: string) => {\n    const property = properties.get(parameterName);\n    const valueType = property.getType().toLowerCase();\n\n    if (valueType === 'number') {\n      effect.setDoubleParameter(\n        parameterName,\n        parseFloat(property.getValue()) || 0\n      );\n    } else if (valueType === 'boolean') {\n      effect.setBooleanParameter(parameterName, property.getValue() === 'true');\n    } else {\n      effect.setStringParameter(parameterName, property.getValue());\n    }\n  });\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport * as React from 'react';\nimport { Column, Line } from '../UI/Grid';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport { mapFor } from '../Utils/MapFor';\nimport RaisedButton from '../UI/RaisedButton';\nimport IconButton from '../UI/IconButton';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport ElementWithMenu from '../UI/Menu/ElementWithMenu';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport MiniToolbar, { MiniToolbarText } from '../UI/MiniToolbar';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport Add from '@material-ui/icons/Add';\nimport PropertiesEditor from '../PropertiesEditor';\nimport DismissableAlertMessage from '../UI/DismissableAlertMessage';\nimport BackgroundText from '../UI/BackgroundText';\nimport { MarkdownText } from '../UI/MarkdownText';\nimport useForceUpdate from '../Utils/UseForceUpdate';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport {\n  enumerateEffectsMetadata,\n  type EnumeratedEffectMetadata,\n  setEffectDefaultParameters,\n} from './EnumerateEffects';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\n\ntype Props = {|\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  effectsContainer: gdEffectsContainer,\n  onEffectsUpdated: () => void,\n|};\n\nconst getEnumeratedEffectMetadata = (\n  allEffectDescriptions: Array<EnumeratedEffectMetadata>,\n  effectType: string\n): ?EnumeratedEffectMetadata => {\n  return allEffectDescriptions.find(\n    effectMetadata => effectMetadata.type === effectType\n  );\n};\n\n/**\n * Display a list of effects and allow to add/remove/edit them.\n *\n * All available effects are fetched from the project's platform.\n */\nexport default function EffectsList(props: Props) {\n  const { effectsContainer, onEffectsUpdated } = props;\n\n  const preferences = React.useContext(PreferencesContext);\n  const showEffectParameterNames = preferences.values.showEffectParameterNames;\n  const setShowEffectParameterNames = preferences.setShowEffectParameterNames;\n\n  const allEffectMetadata = React.useMemo(\n    () => enumerateEffectsMetadata(props.project),\n    []\n  );\n\n  const forceUpdate = useForceUpdate();\n\n  const addEffect = () => {\n    const newName = newNameGenerator('Effect', name =>\n      effectsContainer.hasEffectNamed(name)\n    );\n    effectsContainer.insertNewEffect(\n      newName,\n      effectsContainer.getEffectsCount()\n    );\n\n    forceUpdate();\n    onEffectsUpdated();\n  };\n\n  const removeEffect = (name: string) => {\n    effectsContainer.removeEffect(name);\n    forceUpdate();\n    onEffectsUpdated();\n  };\n\n  const chooseEffectType = (effect: gdEffect, newEffectType: string) => {\n    effect.setEffectType(newEffectType);\n    const effectMetadata = getEnumeratedEffectMetadata(\n      allEffectMetadata,\n      newEffectType\n    );\n\n    if (effectMetadata) {\n      setEffectDefaultParameters(effect, effectMetadata.effectMetadata);\n    }\n\n    forceUpdate();\n    onEffectsUpdated();\n  };\n\n  return (\n    <I18n>\n      {({ i18n }) => {\n        return (\n          <Column noMargin expand>\n            <Line>\n              <Column>\n                <DismissableAlertMessage identifier=\"effects-usage\" kind=\"info\">\n                  <Trans>\n                    Effects can change how the layer is rendered on screen.\n                    After adding an effect, set up its parameters. Launch a\n                    preview to see the result. Using the events and the name of\n                    the effect, you can change the parameters during the game.\n                  </Trans>\n                </DismissableAlertMessage>\n              </Column>\n            </Line>\n            {effectsContainer.getEffectsCount() > 3 && (\n              <Line>\n                <Column>\n                  <DismissableAlertMessage\n                    identifier=\"too-much-effects\"\n                    kind=\"warning\"\n                  >\n                    <Trans>\n                      Using a lot of effects can have a severe negative impact\n                      on the rendering performance, especially on low-end or\n                      mobile devices. Consider using less effects if possible.\n                      You can also disable and re-enable effects as needed using\n                      events.\n                    </Trans>\n                  </DismissableAlertMessage>\n                </Column>\n              </Line>\n            )}\n            {mapFor(0, effectsContainer.getEffectsCount(), (i: number) => {\n              const effect: gdEffect = effectsContainer.getEffectAt(i);\n              const effectType = effect.getEffectType();\n              const effectMetadata = getEnumeratedEffectMetadata(\n                allEffectMetadata,\n                effectType\n              );\n\n              return (\n                <React.Fragment key={i}>\n                  <MiniToolbar>\n                    <MiniToolbarText>\n                      <Trans>Effect name:</Trans>\n                    </MiniToolbarText>\n                    <SemiControlledTextField\n                      margin=\"none\"\n                      commitOnBlur\n                      hintText={t`Enter the effect name`}\n                      value={effect.getName()}\n                      onChange={newName => {\n                        if (newName === effect.getName()) return;\n\n                        effect.setName(newName);\n                        forceUpdate();\n                        onEffectsUpdated();\n                      }}\n                      fullWidth\n                    />\n                    <MiniToolbarText>\n                      <Trans>Type:</Trans>\n                    </MiniToolbarText>\n                    <SelectField\n                      margin=\"none\"\n                      value={effectType}\n                      onChange={(e, i, newEffectType: string) =>\n                        chooseEffectType(effect, newEffectType)\n                      }\n                      fullWidth\n                      hintText={t`Choose the effect to apply`}\n                    >\n                      {allEffectMetadata.map(effectMetadata => (\n                        <SelectOption\n                          key={effectMetadata.type}\n                          value={effectMetadata.type}\n                          primaryText={effectMetadata.fullName}\n                        />\n                      ))}\n                    </SelectField>\n                    <ElementWithMenu\n                      element={\n                        <IconButton>\n                          <MoreVert />\n                        </IconButton>\n                      }\n                      buildMenuTemplate={() => [\n                        {\n                          label: i18n._(t`Delete`),\n                          click: () => removeEffect(effect.getName()),\n                        },\n                        { type: 'separator' },\n                        {\n                          type: 'checkbox',\n                          label: 'Show Parameter Names',\n                          checked: showEffectParameterNames,\n                          click: () =>\n                            setShowEffectParameterNames(\n                              !showEffectParameterNames\n                            ),\n                        },\n                      ]}\n                    />\n                  </MiniToolbar>\n                  <Line expand noMargin>\n                    <Column expand>\n                      {!!effectType && effectMetadata ? (\n                        <React.Fragment>\n                          <Line>\n                            <BackgroundText>\n                              <MarkdownText\n                                source={effectMetadata.description}\n                              />\n                            </BackgroundText>\n                          </Line>\n                          <PropertiesEditor\n                            instances={[effect]}\n                            schema={effectMetadata.parametersSchema}\n                            project={props.project}\n                            resourceSources={props.resourceSources}\n                            onChooseResource={props.onChooseResource}\n                            resourceExternalEditors={\n                              props.resourceExternalEditors\n                            }\n                            renderExtraDescriptionText={\n                              showEffectParameterNames\n                                ? parameterName =>\n                                    i18n._(\n                                      t`Parameter name in events: \\`${parameterName}\\` `\n                                    )\n                                : undefined\n                            }\n                          />\n                        </React.Fragment>\n                      ) : null}\n                    </Column>\n                  </Line>\n                </React.Fragment>\n              );\n            })}\n            {effectsContainer.getEffectsCount() === 0 ? (\n              <EmptyMessage>\n                <Trans>No effects applied.</Trans>\n              </EmptyMessage>\n            ) : null}\n            <Column>\n              <Line justifyContent=\"flex-end\" alignItems=\"center\" expand>\n                <RaisedButton\n                  primary\n                  label={<Trans>Add an effect</Trans>}\n                  onClick={addEffect}\n                  labelPosition=\"before\"\n                  icon={<Add />}\n                />\n              </Line>\n            </Column>\n          </Column>\n        );\n      }}\n    </I18n>\n  );\n}\n","// @flow\nimport * as React from 'react';\n\nexport default function useForceUpdate() {\n  const [, updateState] = React.useState();\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n\n  return forceUpdate;\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport EffectsList from './index';\nimport HelpButton from '../UI/HelpButton';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\n\ntype Props = {|\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  onApply: () => void,\n  effectsContainer: gdEffectsContainer,\n|};\n\nexport default class EffectsListDialog extends React.Component<Props, {||}> {\n  render() {\n    const { project, onApply, effectsContainer } = this.props;\n\n    return (\n      <Dialog\n        noMargin\n        secondaryActions={[\n          <HelpButton\n            key=\"help\"\n            helpPagePath=\"/interface/scene-editor/layer-effects\"\n          />,\n        ]}\n        actions={[\n          <FlatButton\n            label={<Trans>Ok</Trans>}\n            primary\n            keyboardFocused\n            onClick={onApply}\n            key={'Apply'}\n          />,\n        ]}\n        modal\n        open\n        onRequestClose={onApply}\n        title={<Trans>Effects</Trans>}\n      >\n        <EffectsList\n          project={project}\n          resourceSources={this.props.resourceSources}\n          onChooseResource={this.props.onChooseResource}\n          resourceExternalEditors={this.props.resourceExternalEditors}\n          effectsContainer={effectsContainer}\n          onEffectsUpdated={\n            () =>\n              this.forceUpdate() /*Force update to ensure dialog is properly positioned*/\n          }\n        />\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\n\nimport React from 'react';\nimport { TableRow, TableRowColumn } from '../UI/Table';\nimport TextField from '../UI/TextField';\n\nimport styles from './styles';\nimport ThemeConsumer from '../UI/Theme/ThemeConsumer';\nimport ColorPicker from '../UI/ColorField/ColorPicker';\n\ntype Props = {|\n  layout: gdLayout,\n  onBackgroundColorChanged: () => void,\n|};\n\nexport default ({ layout, onBackgroundColorChanged }: Props) => (\n  <ThemeConsumer>\n    {muiTheme => (\n      <TableRow\n        style={{\n          backgroundColor: muiTheme.list.itemsBackgroundColor,\n        }}\n      >\n        <TableRowColumn style={styles.handleColumn} />\n        <TableRowColumn>\n          <TextField hintText={t`Background color`} margin=\"none\" disabled />\n        </TableRowColumn>\n        <TableRowColumn style={styles.effectsColumn}>\n          <ColorPicker\n            disableAlpha\n            color={{\n              r: layout.getBackgroundColorRed(),\n              g: layout.getBackgroundColorGreen(),\n              b: layout.getBackgroundColorBlue(),\n              a: 255,\n            }}\n            onChangeComplete={color => {\n              layout.setBackgroundColor(color.rgb.r, color.rgb.g, color.rgb.b);\n              onBackgroundColorChanged();\n            }}\n          />\n        </TableRowColumn>\n        <TableRowColumn style={styles.toolColumn} />\n      </TableRow>\n    )}\n  </ThemeConsumer>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableHeaderColumn,\n  TableRow,\n  TableRowColumn,\n} from '../UI/Table';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport { mapReverseFor } from '../Utils/MapFor';\nimport styles from './styles';\nimport LayerRow from './LayerRow';\nimport EffectsListDialog from '../EffectsList/EffectsListDialog';\nimport BackgroundColorRow from './BackgroundColorRow';\nimport { Column, Line } from '../UI/Grid';\nimport Add from '@material-ui/icons/Add';\nimport RaisedButton from '../UI/RaisedButton';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\n\nconst SortableLayerRow = SortableElement(LayerRow);\n\ntype LayersListBodyState = {|\n  nameErrors: { [string]: boolean },\n|};\n\nclass LayersListBody extends Component<*, LayersListBodyState> {\n  state = {\n    nameErrors: {},\n  };\n\n  render() {\n    const { layersContainer, onEditEffects } = this.props;\n\n    const layersCount = layersContainer.getLayersCount();\n    const containerLayersList = mapReverseFor(0, layersCount, i => {\n      const layer = layersContainer.getLayerAt(i);\n      const layerName = layer.getName();\n\n      return (\n        <SortableLayerRow\n          index={layersCount - 1 - i}\n          key={'layer-' + layerName}\n          layer={layer}\n          layerName={layerName}\n          nameError={this.state.nameErrors[layerName]}\n          effectsCount={layer.getEffectsCount()}\n          onEditEffects={() => onEditEffects(layer)}\n          onBlur={event => {\n            const newName = event.target.value;\n            if (layerName === newName) return;\n\n            let success = true;\n            if (layersContainer.hasLayerNamed(newName)) {\n              success = false;\n            } else {\n              this.props.onRenameLayer(layerName, newName, doRename => {\n                if (doRename)\n                  layersContainer.getLayer(layerName).setName(newName);\n              });\n            }\n\n            this.setState({\n              nameErrors: {\n                ...this.state.nameErrors,\n                [layerName]: !success,\n              },\n            });\n          }}\n          onRemove={() => {\n            this.props.onRemoveLayer(layerName, doRemove => {\n              if (!doRemove) return;\n\n              layersContainer.removeLayer(layerName);\n              this.forceUpdate();\n            });\n          }}\n          isVisible={layer.getVisibility()}\n          onChangeVisibility={visible => {\n            layer.setVisibility(visible);\n            this.forceUpdate();\n          }}\n        />\n      );\n    });\n\n    return (\n      <TableBody>\n        {containerLayersList}\n        <BackgroundColorRow\n          layout={layersContainer}\n          onBackgroundColorChanged={() => this.forceUpdate()}\n        />\n      </TableBody>\n    );\n  }\n}\n\nconst SortableLayersListBody = SortableContainer(LayersListBody);\nSortableLayersListBody.muiName = 'TableBody';\n\ntype Props = {|\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  freezeUpdate: boolean,\n  layersContainer: gdLayout,\n  onRemoveLayer: (layerName: string, cb: (done: boolean) => void) => void,\n  onRenameLayer: (\n    oldName: string,\n    newName: string,\n    cb: (done: boolean) => void\n  ) => void,\n|};\ntype State = {|\n  effectsEditedLayer: ?gdLayer,\n|};\n\nexport default class LayersList extends Component<Props, State> {\n  state = {\n    effectsEditedLayer: null,\n  };\n\n  shouldComponentUpdate(nextProps: Props) {\n    // Rendering the component can be costly as it iterates over\n    // every layers, so the prop freezeUpdate allow to ask the component to stop\n    // updating, for example when hidden.\n    return !nextProps.freezeUpdate;\n  }\n\n  _editEffects = (effectsEditedLayer: ?gdLayer) => {\n    this.setState({\n      effectsEditedLayer,\n    });\n  };\n\n  _addLayer = () => {\n    const { layersContainer } = this.props;\n    const name = newNameGenerator('Layer', name =>\n      layersContainer.hasLayerNamed(name)\n    );\n    layersContainer.insertNewLayer(name, layersContainer.getLayersCount());\n    this.forceUpdate();\n  };\n\n  render() {\n    const { project } = this.props;\n    const { effectsEditedLayer } = this.state;\n\n    // Force the list to be mounted again if layersContainer\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const listKey = this.props.layersContainer.ptr;\n\n    return (\n      <React.Fragment>\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHeaderColumn style={styles.handleColumn} />\n              <TableHeaderColumn>Layer name</TableHeaderColumn>\n              <TableHeaderColumn style={styles.effectsColumn}>\n                Effects\n              </TableHeaderColumn>\n              <TableRowColumn style={styles.toolColumn} />\n            </TableRow>\n          </TableHeader>\n          <SortableLayersListBody\n            key={listKey}\n            layersContainer={this.props.layersContainer}\n            onEditEffects={layer => this._editEffects(layer)}\n            onRemoveLayer={this.props.onRemoveLayer}\n            onRenameLayer={this.props.onRenameLayer}\n            onSortEnd={({ oldIndex, newIndex }) => {\n              const layersCount = this.props.layersContainer.getLayersCount();\n              this.props.layersContainer.moveLayer(\n                layersCount - 1 - oldIndex,\n                layersCount - 1 - newIndex\n              );\n              this.forceUpdate();\n            }}\n            helperClass=\"sortable-helper\"\n            useDragHandle\n          />\n        </Table>\n        <Column>\n          <Line justifyContent=\"flex-end\" expand>\n            <RaisedButton\n              label={<Trans>Add a layer</Trans>}\n              primary\n              onClick={this._addLayer}\n              labelPosition=\"before\"\n              icon={<Add />}\n            />\n          </Line>\n        </Column>\n        {effectsEditedLayer && (\n          <EffectsListDialog\n            project={project}\n            resourceSources={this.props.resourceSources}\n            onChooseResource={this.props.onChooseResource}\n            resourceExternalEditors={this.props.resourceExternalEditors}\n            effectsContainer={effectsEditedLayer}\n            onApply={() =>\n              this.setState({\n                effectsEditedLayer: null,\n              })\n            }\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport { TableRow, TableRowColumn } from '../UI/Table';\nimport InlineCheckbox from '../UI/InlineCheckbox';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport IconButton from '../UI/IconButton';\nimport Delete from '@material-ui/icons/Delete';\nimport TextField from '../UI/TextField';\nimport FlatButton from '../UI/FlatButton';\nimport DragHandle from '../UI/DragHandle';\nimport styles from './styles';\nimport ThemeConsumer from '../UI/Theme/ThemeConsumer';\n\ntype Props = {|\n  layerName: string,\n  nameError: boolean,\n  onBlur: () => void,\n  onRemove: () => void,\n  isVisible: boolean,\n  onChangeVisibility: boolean => void,\n  effectsCount: number,\n  onEditEffects: () => void,\n  style?: ?Object,\n|};\n\nexport default ({\n  layerName,\n  nameError,\n  onBlur,\n  onRemove,\n  isVisible,\n  effectsCount,\n  onEditEffects,\n  onChangeVisibility,\n}: Props) => (\n  <ThemeConsumer>\n    {muiTheme => (\n      <TableRow\n        style={{\n          backgroundColor: muiTheme.list.itemsBackgroundColor,\n        }}\n      >\n        <TableRowColumn style={styles.handleColumn}>\n          <DragHandle />\n        </TableRowColumn>\n        <TableRowColumn>\n          <TextField\n            margin=\"none\"\n            defaultValue={layerName || 'Base layer'}\n            id={layerName}\n            errorText={\n              nameError ? <Trans>This name is already taken</Trans> : undefined\n            }\n            disabled={!layerName}\n            onBlur={onBlur}\n          />\n        </TableRowColumn>\n        <TableRowColumn style={styles.effectsColumn}>\n          <FlatButton\n            label={\n              effectsCount === 0 ? (\n                <Trans>Add effect</Trans>\n              ) : (\n                <Trans>{effectsCount} effect(s)</Trans>\n              )\n            }\n            onClick={onEditEffects}\n          />\n        </TableRowColumn>\n        <TableRowColumn style={styles.toolColumn}>\n          <InlineCheckbox\n            checked={isVisible}\n            checkedIcon={<Visibility />}\n            uncheckedIcon={<VisibilityOff />}\n            onCheck={(e, value) => onChangeVisibility(value)}\n          />\n          <IconButton onClick={onRemove} disabled={!layerName}>\n            <Delete />\n          </IconButton>\n        </TableRowColumn>\n      </TableRow>\n    )}\n  </ThemeConsumer>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default props => (\n  <SvgIcon {...props} viewBox=\"0 -3 24 24\">\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g id=\"Create\" fillRule=\"nonzero\">\n        <polygon\n          id=\"Shape\"\n          fill=\"#2B3990\"\n          points=\"24 8 18 2 18 6 14 6 14 10 18 10 18 14\"\n        />\n        <g id=\"Group-2\" fill=\"#27AAE1\">\n          <rect\n            id=\"Rectangle-path\"\n            transform=\"translate(2.999518, 3.574897) rotate(-45.000000) translate(-2.999518, -3.574897) \"\n            x=\"1.58553176\"\n            y=\"0.746924118\"\n            width=\"2.82797288\"\n            height=\"5.65594576\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            transform=\"translate(10.999518, 11.574897) rotate(-45.000000) translate(-10.999518, -11.574897) \"\n            x=\"9.58553176\"\n            y=\"8.74692412\"\n            width=\"2.82797288\"\n            height=\"5.65594576\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            transform=\"translate(2.999518, 11.574897) rotate(-135.000000) translate(-2.999518, -11.574897) \"\n            x=\"1.58553176\"\n            y=\"8.74692412\"\n            width=\"2.82797288\"\n            height=\"5.65594576\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            transform=\"translate(10.999518, 3.574897) rotate(-135.000000) translate(-10.999518, -3.574897) \"\n            x=\"9.58553176\"\n            y=\"0.746924118\"\n            width=\"2.82797288\"\n            height=\"5.65594576\"\n          />\n        </g>\n      </g>\n    </g>\n  </SvgIcon>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default props => (\n  <SvgIcon {...props} viewBox=\"0 -6 24 24\">\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g id=\"Step\" fillRule=\"nonzero\">\n        <polygon\n          id=\"Shape\"\n          fill=\"#2B3990\"\n          points=\"7.5 4.5 3 0 3 3 0 3 0 6 3 6 3 9\"\n        />\n        <circle id=\"Oval\" fill=\"#27AAE1\" cx=\"12\" cy=\"4.5\" r=\"3\" />\n        <circle id=\"Oval\" fill=\"#FFFFFF\" cx=\"12\" cy=\"4.5\" r=\"1.5\" />\n        <polygon\n          id=\"Shape\"\n          fill=\"#2B3990\"\n          points=\"24 4.5 19.5 0 19.5 3 16.5 3 16.5 6 19.5 6 19.5 9\"\n        />\n      </g>\n    </g>\n  </SvgIcon>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default props => (\n  <SvgIcon {...props} viewBox=\"0 -3 24 24\">\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g\n        id=\"Destroy\"\n        transform=\"translate(0.000000, -1.000000)\"\n        fillRule=\"nonzero\"\n      >\n        <g id=\"Group\" transform=\"translate(0.000000, 1.000000)\">\n          <polygon\n            id=\"Shape\"\n            fill=\"#2B3990\"\n            points=\"9.92307692 7.07692308 4.38461538 1.53846154 4.38461538 5.23076923 0.692307692 5.23076923 0.692307692 8.92307692 4.38461538 8.92307692 4.38461538 12.6153846\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#27AAE1\"\n            transform=\"translate(10.845138, 3.385446) rotate(-45.000000) translate(-10.845138, -3.385446) \"\n            x=\"9.53992021\"\n            y=\"0.77500965\"\n            width=\"2.6104365\"\n            height=\"5.22087301\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#27AAE1\"\n            transform=\"translate(18.229754, 10.770062) rotate(-45.000000) translate(-18.229754, -10.770062) \"\n            x=\"16.9245356\"\n            y=\"8.15962503\"\n            width=\"2.6104365\"\n            height=\"5.22087301\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#27AAE1\"\n            transform=\"translate(10.846985, 10.770246) rotate(-135.000000) translate(-10.846985, -10.770246) \"\n            x=\"9.54176636\"\n            y=\"8.15980965\"\n            width=\"2.6104365\"\n            height=\"5.22087301\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#27AAE1\"\n            transform=\"translate(18.231600, 3.385631) rotate(-135.000000) translate(-18.231600, -3.385631) \"\n            x=\"16.9263817\"\n            y=\"0.775194265\"\n            width=\"2.6104365\"\n            height=\"5.22087301\"\n          />\n        </g>\n        <g id=\"Group\" opacity=\"0.1\" transform=\"translate(2.538462, 0.692308)\">\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#000000\"\n            transform=\"translate(7.616400, 11.768538) rotate(135.000000) translate(-7.616400, -11.768538) \"\n            x=\"5.98441565\"\n            y=\"10.4633202\"\n            width=\"3.2639687\"\n            height=\"2.6104365\"\n          />\n          <polygon\n            id=\"Shape\"\n            fill=\"#FFFFFF\"\n            points=\"7.38461538 7.38461538 1.83645766 1.87268753 1.83645766 3.7132995 6.46153846 8.30769231\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#FFFFFF\"\n            transform=\"translate(8.308523, 3.693323) rotate(-135.000000) translate(-8.308523, -3.693323) \"\n            x=\"5.69808657\"\n            y=\"2.38810482\"\n            width=\"5.22087301\"\n            height=\"2.6104365\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#FFFFFF\"\n            transform=\"translate(15.693138, 11.077938) rotate(-135.000000) translate(-15.693138, -11.077938) \"\n            x=\"13.082702\"\n            y=\"9.77272021\"\n            width=\"5.22087301\"\n            height=\"2.6104365\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#FFFFFF\"\n            transform=\"translate(9.460009, 9.922714) rotate(45.000000) translate(-9.460009, -9.922714) \"\n            x=\"8.15479058\"\n            y=\"8.94333902\"\n            width=\"2.6104365\"\n            height=\"1.95875045\"\n          />\n          <rect\n            id=\"Rectangle-path\"\n            fill=\"#FFFFFF\"\n            transform=\"translate(15.693138, 3.693323) rotate(-135.000000) translate(-15.693138, -3.693323) \"\n            x=\"14.3879202\"\n            y=\"1.08288657\"\n            width=\"2.6104365\"\n            height=\"5.22087301\"\n          />\n        </g>\n      </g>\n    </g>\n  </SvgIcon>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default props => (\n  <SvgIcon {...props}>\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g id=\"Function\" fillRule=\"nonzero\">\n        <path\n          d=\"M24,14.5714286 L24,9.42857143 L21.948,9.42857143 C21.7045714,8.48742857 21.336,7.59942857 20.8525714,6.78342857 L22.3028571,5.33314286 L18.6668571,1.69542857 L17.2165714,3.14571429 C16.4005714,2.664 15.5125714,2.29371429 14.5714286,2.05028571 L14.5714286,0 L9.42857143,0 L9.42857143,2.052 C8.48742857,2.29542857 7.59942857,2.664 6.78342857,3.14742857 L5.33314286,1.69714286 L1.69714286,5.33314286 L3.14742857,6.78342857 C2.66571429,7.59942857 2.29542857,8.48742857 2.052,9.42857143 L0,9.42857143 L0,14.5714286 L2.052,14.5714286 C2.29542857,15.5125714 2.664,16.4005714 3.14742857,17.2165714 L1.69714286,18.6668571 L5.33314286,22.3045714 L6.78342857,20.8542857 C7.59942857,21.336 8.48742857,21.7062857 9.42857143,21.9497143 L9.42857143,24 L14.5714286,24 L14.5714286,21.948 C15.5125714,21.7045714 16.4005714,21.336 17.2165714,20.8525714 L18.6668571,22.3028571 L22.3028571,18.6651429 L20.8525714,17.2148571 C21.3342857,16.3988571 21.7045714,15.5108571 21.948,14.5697143 L24,14.5697143 L24,14.5714286 Z\"\n          id=\"Shape\"\n          fill=\"#27AAE1\"\n        />\n        <polygon\n          id=\"Shape\"\n          fill=\"#2B3990\"\n          points=\"17.1428571 7.71428571 10.2857143 11.1428571 10.2857143 12 12 12.8571429 15.4285714 11.1428571 15.4285714 13.7142857 12 15.456 8.57142857 13.7142857 8.57142857 10.2857143 12 8.57142857 15.4285714 6.85714286 12 5.14285714 5.14285714 8.57142857 5.14285714 15.4285714 12 18.8571429 17.5714286 16.0714286 18.8571429 15.4285714 18.8571429 15 18.8571429 8.57142857\"\n        />\n        <g id=\"Group\" opacity=\"0.1\">\n          <path\n            d=\"M3.14571429,6.78342857 C2.664,7.59942857 2.29371429,8.48742857 2.05028571,9.42857143 L0,9.42857143 L0,14.5714286 L2.052,14.5714286 C2.29542857,15.5125714 2.664,16.4005714 3.14742857,17.2165714 L1.69714286,18.6668571 L5.33314286,22.3045714 L6.78342857,20.8542857 C7.59942857,21.336 8.48742857,21.7062857 9.42857143,21.9497143 L9.42857143,24 L14.5714286,24 L14.5714286,21.948 C15.5125714,21.7045714 16.4005714,21.336 17.2165714,20.8525714 L18.6668571,22.3028571 L20.4857143,20.484 L3.51428571,3.51428571 L1.69714286,5.33314286 L3.14571429,6.78342857 Z\"\n            id=\"Shape\"\n            fill=\"#000000\"\n          />\n          <path\n            d=\"M22.3028571,18.6668571 L20.8525714,17.2165714 C21.3342857,16.4005714 21.7045714,15.5125714 21.948,14.5714286 L24,14.5714286 L24,9.42857143 L21.948,9.42857143 C21.7045714,8.48742857 21.336,7.59942857 20.8525714,6.78342857 L22.3028571,5.33314286 L18.6668571,1.69542857 L17.2165714,3.14571429 C16.4005714,2.664 15.5125714,2.29371429 14.5714286,2.05028571 L14.5714286,0 L9.42857143,0 L9.42857143,2.052 C8.48742857,2.29542857 7.59942857,2.664 6.78342857,3.14742857 L5.33314286,1.69714286 L3.51428571,3.51428571 L20.484,20.484 L22.3028571,18.6668571 Z\"\n            id=\"Shape\"\n            fill=\"#FFFFFF\"\n          />\n        </g>\n      </g>\n    </g>\n  </SvgIcon>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default props => (\n  <SvgIcon {...props} viewBox=\"0 -6 24 24\">\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g id=\"Activate\" fillRule=\"nonzero\">\n        <rect\n          id=\"Rectangle-path\"\n          fill=\"#27AAE1\"\n          x=\"0\"\n          y=\"0\"\n          width=\"24\"\n          height=\"10.2857143\"\n        />\n        <rect\n          id=\"Rectangle-path\"\n          fill=\"#2B3990\"\n          x=\"1.71428571\"\n          y=\"1.71428571\"\n          width=\"10.2857143\"\n          height=\"6.85714286\"\n        />\n        <polygon\n          id=\"Shape\"\n          fill=\"#FFFFFF\"\n          points=\"20.5710245 1.71428571 18.8571429 3.42897546 17.1432612 5.14285714 15.4285714 6.85673883 17.1432612 8.57142857 18.8571429 6.85673883 20.5710245 5.14285714 22.2857143 3.42897546\"\n        />\n        <polygon\n          id=\"Shape\"\n          fill=\"#FFFFFF\"\n          points=\"18.8567388 3.42857143 17.1428571 5.14326117 15.4289755 3.42857143 13.7142857 5.14326117 15.4289755 6.85714286 18.8567388 6.85714286 20.5714286 5.14326117\"\n        />\n      </g>\n    </g>\n  </SvgIcon>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default props => (\n  <SvgIcon {...props} viewBox=\"0 -6 24 24\">\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g id=\"Deactivate\" fillRule=\"nonzero\">\n        <rect\n          id=\"Rectangle-path\"\n          fill=\"#2B3990\"\n          x=\"0\"\n          y=\"0\"\n          width=\"24\"\n          height=\"10.2857143\"\n        />\n        <polygon\n          id=\"Shape\"\n          fill=\"#FFFFFF\"\n          points=\"6.85673883 1.71428571 5.14285714 3.42897546 3.42897546 1.71428571 1.71428571 3.42897546 3.42897546 5.14285714 1.71428571 6.85673883 3.42897546 8.57142857 5.14285714 6.85673883 6.85673883 8.57142857 8.57142857 6.85673883 6.85673883 5.14285714 8.57142857 3.42897546\"\n        />\n        <rect\n          id=\"Rectangle-path\"\n          fill=\"#27AAE1\"\n          x=\"12\"\n          y=\"1.71428571\"\n          width=\"10.2857143\"\n          height=\"6.85714286\"\n        />\n      </g>\n    </g>\n  </SvgIcon>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport Subheader from '../UI/Subheader';\nimport { List, ListItem } from '../UI/List';\nimport Dialog from '../UI/Dialog';\nimport HelpButton from '../UI/HelpButton';\nimport Create from '../UI/CustomSvgIcons/Behaviors/Create';\nimport Step from '../UI/CustomSvgIcons/Behaviors/Step';\nimport Destroy from '../UI/CustomSvgIcons/Behaviors/Destroy';\nimport Function from '../UI/CustomSvgIcons/Behaviors/Function';\nimport Activate from '../UI/CustomSvgIcons/Behaviors/Activate';\nimport Deactivate from '../UI/CustomSvgIcons/Behaviors/Deactivate';\n\ntype Props = {|\n  eventsBasedBehavior: gdEventsBasedBehavior,\n  onCancel: () => void,\n  onChoose: (functionName: ?string) => void,\n|};\ntype State = {||};\n\nconst styles = {\n  icon: { width: 40, height: 40 },\n  disabledItem: { opacity: 0.6 },\n};\n\nconst MethodListItem = ({\n  icon,\n  disabled,\n  onChoose,\n  name,\n  description,\n}: {|\n  icon: React.Node,\n  disabled: boolean,\n  onChoose: string => void,\n  name: string,\n  description: React.Node,\n|}) => {\n  return (\n    <ListItem\n      leftIcon={icon}\n      primaryText={name}\n      secondaryText={description}\n      secondaryTextLines={2}\n      onClick={() => onChoose(name)}\n      style={disabled ? styles.disabledItem : undefined}\n      disabled={disabled}\n    />\n  );\n};\n\nexport default class BehaviorMethodSelectorDialog extends React.Component<\n  Props,\n  State\n> {\n  render() {\n    const actions = [\n      <FlatButton\n        label={<Trans>Cancel</Trans>}\n        keyboardFocused={true}\n        onClick={() => this.props.onCancel()}\n        key={'close'}\n      />,\n    ];\n\n    const { eventsBasedBehavior, onChoose } = this.props;\n    const eventsFunctions = eventsBasedBehavior.getEventsFunctions();\n\n    return (\n      <Dialog\n        secondaryActions={[\n          <HelpButton\n            key=\"help\"\n            helpPagePath=\"/behaviors/events-based-behaviors\"\n          />,\n        ]}\n        actions={actions}\n        open\n        noMargin\n        title={<Trans>Choose a new behavior function (\"method\")</Trans>}\n        onRequestClose={this.props.onCancel}\n      >\n        <List>\n          <Subheader>\n            <Trans>Main lifecycle methods</Trans>\n          </Subheader>\n          <MethodListItem\n            icon={<Create style={styles.icon} />}\n            name={'onCreated'}\n            disabled={eventsFunctions.hasEventsFunctionNamed('onCreated')}\n            onChoose={onChoose}\n            description={\n              <Trans>\n                Events that will be run once, when an object is created with\n                this behavior being attached to it.\n              </Trans>\n            }\n          />\n          <MethodListItem\n            icon={<Step style={styles.icon} />}\n            name={'doStepPreEvents'}\n            disabled={eventsFunctions.hasEventsFunctionNamed('doStepPreEvents')}\n            onChoose={onChoose}\n            description={\n              <Trans>\n                Events that will be run at every frame (roughly 60 times per\n                second), for every object that has the behavior attached, before\n                the events from the events sheet are launched.\n              </Trans>\n            }\n          />\n          <MethodListItem\n            icon={<Destroy style={styles.icon} />}\n            name={'onDestroy'}\n            disabled={\n              eventsFunctions.hasEventsFunctionNamed(\n                'onOwnerRemovedFromScene'\n              ) || eventsFunctions.hasEventsFunctionNamed('onDestroy')\n            }\n            onChoose={onChoose}\n            description={\n              <Trans>\n                Events that will be run once, after the object is removed from\n                the scene and before it is entirely removed from memory.\n              </Trans>\n            }\n          />\n          <Subheader>\n            <Trans>Other lifecycle methods</Trans>\n          </Subheader>\n          <MethodListItem\n            icon={<Deactivate style={styles.icon} />}\n            name={'onDeActivate'}\n            disabled={eventsFunctions.hasEventsFunctionNamed('onDeActivate')}\n            onChoose={onChoose}\n            description={\n              <Trans>\n                Events that will be run when the behavior is deactivated on an\n                object (step events won't be run until the behavior is activated\n                again).\n              </Trans>\n            }\n          />\n          <MethodListItem\n            icon={<Activate style={styles.icon} />}\n            name={'onActivate'}\n            disabled={eventsFunctions.hasEventsFunctionNamed('onActivate')}\n            onChoose={onChoose}\n            description={\n              <Trans>\n                Events that will be run when the behavior is re-activated on an\n                object (after it was previously deactivated).\n              </Trans>\n            }\n          />\n          <MethodListItem\n            icon={<Step style={styles.icon} />}\n            name={'doStepPostEvents'}\n            disabled={eventsFunctions.hasEventsFunctionNamed(\n              'doStepPostEvents'\n            )}\n            onChoose={onChoose}\n            description={\n              <Trans>\n                Events that will be run at every frame (roughly 60 times per\n                second), for every object that has the behavior attached, after\n                the events from the events sheet.\n              </Trans>\n            }\n          />\n          <Subheader>\n            <Trans>Custom</Trans>\n          </Subheader>\n          <ListItem\n            leftIcon={<Function style={styles.icon} />}\n            primaryText={\n              <Trans>Custom (action, condition or expression)</Trans>\n            }\n            secondaryText={\n              <Trans>\n                An action, condition or expression that can be used on objects\n                that have the behavior attached to them. Use it from the events\n                sheet as any other action/condition/expression.\n              </Trans>\n            }\n            secondaryTextLines={2}\n            onClick={() => onChoose(null)}\n          />\n        </List>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport md5 from 'blueimp-md5';\n\nexport const getGravatarUrl = (\n  email: string,\n  { size }: { size: number } = { size: 40 }\n): string => {\n  const hash = md5(email.trim().toLowerCase());\n  return `https://www.gravatar.com/avatar/${hash}?s=${size}&d=retro`;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Column, Line, Spacer } from '../UI/Grid';\nimport { type Profile } from '../Utils/GDevelopServices/Authentification';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport { getGravatarUrl } from '../UI/GravatarUrl';\nimport Text from '../UI/Text';\n\ntype Props = {\n  profile: ?Profile,\n};\n\nexport default ({ profile }: Props) =>\n  profile ? (\n    <Column>\n      <Line alignItems=\"center\">\n        <Avatar src={getGravatarUrl(profile.email || '', { size: 40 })} />\n        <Spacer />\n        <Text size=\"title\">You are connected as {profile.email}</Text>\n      </Line>\n      <Line>\n        <Text>\n          <Trans>\n            An account allows you to access GDevelop services online.\n          </Trans>\n        </Text>\n      </Line>\n    </Column>\n  ) : (\n    <PlaceholderLoader />\n  );\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableHeaderColumn,\n  TableRow,\n  TableRowColumn,\n} from '../UI/Table';\nimport { type Usages } from '../Utils/GDevelopServices/Usage';\nimport { Column, Line } from '../UI/Grid';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport format from 'date-fns/format';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\n\ntype Props = { usages: ?Usages };\n\nexport default ({ usages }: Props) => (\n  <Column noMargin>\n    <Line>\n      {!usages ? (\n        <PlaceholderLoader />\n      ) : usages.length === 0 ? (\n        <EmptyMessage>\n          <Trans>You don't have any usage of the online services for now</Trans>\n        </EmptyMessage>\n      ) : (\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHeaderColumn>Date</TableHeaderColumn>\n              <TableHeaderColumn>Type</TableHeaderColumn>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {usages.map(usage => (\n              <TableRow key={usage.id}>\n                <TableRowColumn>\n                  {format(usage.createdAt, 'YYYY-MM-DD HH:mm:ss')}\n                </TableRowColumn>\n                <TableRowColumn>{usage.type}</TableRowColumn>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n    </Line>\n  </Column>\n);\n","// @flow\nimport * as React from 'react';\nimport { Column, Line } from '../UI/Grid';\nimport { type Subscription } from '../Utils/GDevelopServices/Usage';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Trans } from '@lingui/macro';\nimport Text from '../UI/Text';\n\ntype Props = {\n  subscription: ?Subscription,\n  onChangeSubscription: Function,\n};\n\nexport default ({ subscription, onChangeSubscription }: Props) =>\n  subscription && subscription.planId ? (\n    <Column>\n      <Line>\n        <Text>\n          <Trans>\n            You are subscribed to {subscription.planId}. Congratulations! You\n            have access to more online services, including building your game\n            for Android, Windows, macOS and Linux in one click!\n          </Trans>\n        </Text>\n      </Line>\n      <Line justifyContent=\"center\">\n        <RaisedButton\n          label={<Trans>Upgrade/change</Trans>}\n          primary\n          onClick={onChangeSubscription}\n        />\n      </Line>\n    </Column>\n  ) : subscription && !subscription.planId ? (\n    <Column>\n      <Line>\n        <Text>\n          <Trans>\n            If you don't have a subscription, consider getting one now. Accounts\n            allow you to access all of the online services. With just one click,\n            you can build your game for Android, Windows, macOS and Linux!\n          </Trans>\n        </Text>\n      </Line>\n      <Line justifyContent=\"center\">\n        <RaisedButton\n          label={<Trans>Choose a subscription</Trans>}\n          primary\n          onClick={onChangeSubscription}\n        />\n      </Line>\n    </Column>\n  ) : (\n    <PlaceholderLoader />\n  );\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport Dialog from '../UI/Dialog';\nimport { Column } from '../UI/Grid';\nimport CreateProfile from './CreateProfile';\nimport ProfileDetails from './ProfileDetails';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport HelpButton from '../UI/HelpButton';\nimport UsagesDetails from './UsagesDetails';\nimport SubscriptionDetails from './SubscriptionDetails';\nimport UserProfileContext, { type UserProfile } from './UserProfileContext';\n\ntype Props = {|\n  open: boolean,\n  onClose: Function,\n  onChangeSubscription: Function,\n|};\n\ntype State = {|\n  currentTab: string,\n|};\n\nexport default class ProfileDialog extends Component<Props, State> {\n  state = {\n    currentTab: 'profile',\n  };\n\n  _onChangeTab = (newTab: string) =>\n    this.setState({\n      currentTab: newTab,\n    });\n\n  render() {\n    const { open, onClose } = this.props;\n    const actions = [\n      <FlatButton\n        label={<Trans>Close</Trans>}\n        key=\"close\"\n        primary={false}\n        onClick={onClose}\n      />,\n    ];\n\n    return (\n      <UserProfileContext.Consumer>\n        {(userProfile: UserProfile) => (\n          <Dialog\n            actions={actions}\n            secondaryActions={[\n              <HelpButton key=\"help\" helpPagePath=\"/interface/profile\" />,\n              userProfile.authenticated && (\n                <FlatButton\n                  label={<Trans>Refresh</Trans>}\n                  key=\"refresh\"\n                  onClick={userProfile.onRefreshUserProfile}\n                />\n              ),\n              userProfile.authenticated && userProfile.profile && (\n                <FlatButton\n                  label={<Trans>Logout</Trans>}\n                  key=\"logout\"\n                  onClick={userProfile.onLogout}\n                />\n              ),\n            ]}\n            onRequestClose={onClose}\n            open={open}\n            noMargin\n          >\n            <Tabs value={this.state.currentTab} onChange={this._onChangeTab}>\n              <Tab label={<Trans>My Profile</Trans>} value=\"profile\" />\n              <Tab label={<Trans>Online services usage</Trans>} value=\"usage\" />\n            </Tabs>\n            {this.state.currentTab === 'profile' &&\n              (userProfile.authenticated ? (\n                <Column noMargin>\n                  <ProfileDetails profile={userProfile.profile} />\n                  <SubscriptionDetails\n                    subscription={userProfile.subscription}\n                    onChangeSubscription={this.props.onChangeSubscription}\n                  />\n                </Column>\n              ) : (\n                <Column>\n                  <CreateProfile\n                    onLogin={userProfile.onLogin}\n                    onCreateAccount={userProfile.onCreateAccount}\n                  />\n                </Column>\n              ))}\n            {this.state.currentTab === 'usage' &&\n              (userProfile.authenticated ? (\n                <Column noMargin>\n                  <UsagesDetails usages={userProfile.usages} />\n                </Column>\n              ) : (\n                <EmptyMessage>\n                  <Trans>\n                    Register to see the usage that you've made of the online\n                    services\n                  </Trans>\n                </EmptyMessage>\n              ))}\n          </Dialog>\n        )}\n      </UserProfileContext.Consumer>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport PropertiesEditor from '../../PropertiesEditor';\nimport propertiesMapToSchema from '../../PropertiesEditor/PropertiesMapToSchema';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport { Column } from '../../UI/Grid';\nimport { type BehaviorEditorProps } from './BehaviorEditorProps.flow';\n\ntype Props = BehaviorEditorProps;\n\nexport default class BehaviorPropertiesEditor extends React.Component<Props> {\n  render() {\n    const { behavior, behaviorContent, project } = this.props;\n    const properties = behavior.getProperties(\n      behaviorContent.getContent(),\n      project\n    );\n\n    const propertiesSchema = propertiesMapToSchema(\n      properties,\n      behaviorContent =>\n        behavior.getProperties(behaviorContent.getContent(), project),\n      (behaviorContent, name, value) =>\n        behavior.updateProperty(\n          behaviorContent.getContent(),\n          name,\n          value,\n          project\n        )\n    );\n\n    return (\n      <Column>\n        {propertiesSchema.length ? (\n          <PropertiesEditor\n            schema={propertiesSchema}\n            instances={[behaviorContent]}\n          />\n        ) : (\n          <EmptyMessage>\n            <Trans>\n              There is nothing to configure for this behavior. You can still use\n              events to interact with the object and this behavior.\n            </Trans>\n          </EmptyMessage>\n        )}\n      </Column>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { type Vertex } from './PolygonEditor';\n\ntype Props = {|\n  shape: string,\n  dimensionA: number,\n  dimensionB: number,\n  offsetX: number,\n  offsetY: number,\n  polygonOrigin: string,\n  vertices: Array<Vertex>,\n  width: number,\n  height: number,\n  zoomFactor: number,\n  onMoveVertex: (index: number, newX: number, newY: number) => void,\n|};\n\ntype State = {|\n  draggedVertex: ?Vertex,\n  draggedIndex: number,\n|};\n\nexport default class ShapePreview extends React.Component<Props, State> {\n  state = { draggedVertex: null, draggedIndex: -1 };\n  _svg: any;\n\n  _onVertexDown = (vertex: Vertex, index: number) => {\n    if (this.state.draggedVertex) return;\n    this.setState({ draggedVertex: vertex, draggedIndex: index });\n  };\n\n  _onMouseUp = () => {\n    const draggingWasDone = !!this.state.draggedVertex;\n    const { draggedVertex, draggedIndex } = this.state;\n    this.setState(\n      {\n        draggedVertex: null,\n      },\n      () => {\n        if (draggingWasDone)\n          this.props.onMoveVertex(\n            draggedIndex,\n            Math.round(draggedVertex ? draggedVertex.x : 0),\n            Math.round(draggedVertex ? draggedVertex.y : 0)\n          );\n      }\n    );\n  };\n\n  _onMouseMove = (event: any) => {\n    const {\n      offsetX,\n      offsetY,\n      polygonOrigin,\n      width,\n      height,\n      zoomFactor,\n    } = this.props;\n    const { draggedVertex } = this.state;\n    if (!draggedVertex) return;\n\n    const pointOnScreen = this._svg.createSVGPoint();\n    pointOnScreen.x = event.clientX;\n    pointOnScreen.y = event.clientY;\n    const screenToSvgMatrix = this._svg.getScreenCTM().inverse();\n    const pointOnSvg = pointOnScreen.matrixTransform(screenToSvgMatrix);\n\n    draggedVertex.x =\n      pointOnSvg.x / zoomFactor -\n      offsetX -\n      (polygonOrigin === 'Center' ? width / 2 : 0);\n    draggedVertex.y =\n      pointOnSvg.y / zoomFactor -\n      offsetY -\n      (polygonOrigin === 'Center' ? height / 2 : 0);\n\n    this.forceUpdate();\n  };\n\n  _renderBox() {\n    const {\n      dimensionA,\n      dimensionB,\n      width,\n      height,\n      offsetX,\n      offsetY,\n      zoomFactor,\n    } = this.props;\n    const fixedWidth = dimensionA > 0 ? dimensionA : width > 0 ? width : 1;\n    const fixedHeight = dimensionB > 0 ? dimensionB : height > 0 ? height : 1;\n\n    return (\n      <rect\n        key={'boxShape'}\n        fill=\"rgba(255,0,0,0.75)\"\n        strokeWidth={1}\n        x={(offsetX + width / 2 - fixedWidth / 2) * zoomFactor}\n        y={(offsetY + height / 2 - fixedHeight / 2) * zoomFactor}\n        width={fixedWidth * zoomFactor}\n        height={fixedHeight * zoomFactor}\n      />\n    );\n  }\n\n  _renderCircle() {\n    const {\n      dimensionA,\n      width,\n      height,\n      offsetX,\n      offsetY,\n      zoomFactor,\n    } = this.props;\n\n    return (\n      <circle\n        key={'circleShape'}\n        fill=\"rgba(255,0,0,0.75)\"\n        strokeWidth={1}\n        cx={(offsetX + width / 2) * zoomFactor}\n        cy={(offsetY + height / 2) * zoomFactor}\n        r={\n          (dimensionA > 0\n            ? dimensionA\n            : width + height > 0\n            ? (width + height) / 4\n            : 1) * zoomFactor\n        }\n      />\n    );\n  }\n\n  _renderEdge() {\n    const {\n      dimensionA,\n      dimensionB,\n      width,\n      height,\n      offsetX,\n      offsetY,\n      zoomFactor,\n    } = this.props;\n    const halfLength =\n      (dimensionA > 0 ? dimensionA : width > 0 ? width : 1) / 2;\n    const cos = Math.cos((dimensionB * Math.PI) / 180);\n    const sin = Math.sin((dimensionB * Math.PI) / 180);\n\n    return (\n      <line\n        key={'edgeShape'}\n        stroke=\"rgba(255,0,0,0.75)\"\n        strokeWidth={2}\n        x1={(offsetX + width / 2 - halfLength * cos) * zoomFactor}\n        y1={(offsetY + height / 2 - halfLength * sin) * zoomFactor}\n        x2={(offsetX + width / 2 + halfLength * cos) * zoomFactor}\n        y2={(offsetY + height / 2 + halfLength * sin) * zoomFactor}\n      />\n    );\n  }\n\n  _renderPolygon() {\n    const {\n      vertices,\n      polygonOrigin,\n      width,\n      height,\n      offsetX,\n      offsetY,\n      zoomFactor,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <polygon\n          key={'polygonShape'}\n          fill=\"rgba(255,0,0,0.75)\"\n          strokeWidth={1}\n          filerule=\"evenodd\"\n          points={vertices\n            .map(\n              vertex =>\n                `${(vertex.x +\n                  offsetX +\n                  (polygonOrigin === 'Center' ? width / 2 : 0)) *\n                  zoomFactor},${(vertex.y +\n                  offsetY +\n                  (polygonOrigin === 'Center' ? height / 2 : 0)) *\n                  zoomFactor}`\n            )\n            .join(' ')}\n        />\n        {vertices.map((vertex, index) => (\n          <circle\n            onPointerDown={event => this._onVertexDown(vertex, index)}\n            key={`vertex-${index}`}\n            fill=\"rgba(150,0,0,0.75)\"\n            strokeWidth={1}\n            style={{\n              cursor: 'move',\n            }}\n            cx={\n              (vertex.x +\n                offsetX +\n                (polygonOrigin === 'Center' ? width / 2 : 0)) *\n              zoomFactor\n            }\n            cy={\n              (vertex.y +\n                offsetY +\n                (polygonOrigin === 'Center' ? height / 2 : 0)) *\n              zoomFactor\n            }\n            r={5}\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const { shape } = this.props;\n\n    return (\n      <svg\n        onPointerMove={this._onMouseMove}\n        onPointerUp={this._onMouseUp}\n        ref={svg => (this._svg = svg)}\n        width=\"100%\"\n        height=\"100%\"\n      >\n        {shape === 'Box' && this._renderBox()}\n        {shape === 'Circle' && this._renderCircle()}\n        {shape === 'Edge' && this._renderEdge()}\n        {shape === 'Polygon' && this._renderPolygon()}\n      </svg>\n    );\n  }\n}\n","// @flow\r\nimport * as React from 'react';\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableRowColumn,\r\n  TableBody,\r\n  TableHeader,\r\n  TableHeaderColumn,\r\n} from '../../../UI/Table';\r\nimport SemiControlledTextField from '../../../UI/SemiControlledTextField';\r\nimport Warning from '@material-ui/icons/Warning';\r\nimport IconButton from '../../../UI/IconButton';\r\nimport ThemeConsumer from '../../../UI/Theme/ThemeConsumer';\r\nimport AddCircle from '@material-ui/icons/AddCircle';\r\nimport Delete from '@material-ui/icons/Delete';\r\n\r\nexport type Vertex = {|\r\n  x: number,\r\n  y: number,\r\n|};\r\n\r\ntype Props = {|\r\n  vertices: Array<Vertex>,\r\n  onChangeVertexX: (newValue: number, index: number) => void,\r\n  onChangeVertexY: (newValue: number, index: number) => void,\r\n  onAdd: () => void,\r\n  onRemove: (index: number) => void,\r\n|};\r\n\r\nexport default class PolygonEditor extends React.Component<Props> {\r\n  _isPolygonConvex(vertices: Array<Vertex>) {\r\n    // Get edges\r\n    let edges = [];\r\n    let v1 = null;\r\n    let v2 = null;\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      v1 = vertices[i];\r\n      if (i + 1 >= vertices.length) v2 = vertices[0];\r\n      else v2 = vertices[i + 1];\r\n      edges.push({ x: v2.x - v1.x, y: v2.y - v1.y });\r\n    }\r\n\r\n    // Check convexity\r\n    if (edges.length < 3) return false;\r\n\r\n    const zProductIsPositive =\r\n      edges[0].x * edges[0 + 1].y - edges[0].y * edges[0 + 1].x > 0;\r\n\r\n    for (let i = 1; i < edges.length - 1; ++i) {\r\n      let zCrossProduct =\r\n        edges[i].x * edges[i + 1].y - edges[i].y * edges[i + 1].x;\r\n      let zCrossProductIsPositive = zCrossProduct > 0;\r\n      if (zCrossProductIsPositive !== zProductIsPositive) return false;\r\n    }\r\n\r\n    let lastZCrossProduct =\r\n      edges[edges.length - 1].x * edges[0].y -\r\n      edges[edges.length - 1].y * edges[0].x;\r\n    let lastZCrossProductIsPositive = lastZCrossProduct > 0;\r\n    if (lastZCrossProductIsPositive !== zProductIsPositive) return false;\r\n\r\n    // Check for repeated vertices (would crash Box2D during the game)\r\n    for (let i = 0; i < vertices.length - 1; ++i) {\r\n      for (let j = i + 1; j < vertices.length; ++j) {\r\n        if (vertices[i].x === vertices[j].x && vertices[i].y === vertices[j].y)\r\n          return false;\r\n      }\r\n    }\r\n\r\n    // Check if all vertices are aligned (would crash Box2D during the game)\r\n    let alignedX = true;\r\n    let alignedY = true;\r\n    for (let i = 0; i < vertices.length - 1; ++i) {\r\n      if (vertices[i].x !== vertices[i + 1].x) alignedX = false;\r\n      if (vertices[i].y !== vertices[i + 1].y) alignedY = false;\r\n    }\r\n    if (alignedX || alignedY) return false;\r\n\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      vertices,\r\n      onChangeVertexX,\r\n      onChangeVertexY,\r\n      onAdd,\r\n      onRemove,\r\n    } = this.props;\r\n\r\n    return (\r\n      <ThemeConsumer>\r\n        {muiTheme => (\r\n          <Table>\r\n            <TableHeader>\r\n              <TableRow>\r\n                <TableHeaderColumn />\r\n                <TableHeaderColumn>X</TableHeaderColumn>\r\n                <TableHeaderColumn>Y</TableHeaderColumn>\r\n                <TableRowColumn />\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {vertices.map((value, index) => {\r\n                return (\r\n                  <TableRow\r\n                    key={`vertexRow${index}`}\r\n                    style={{\r\n                      backgroundColor: muiTheme.list.itemsBackgroundColor,\r\n                    }}\r\n                  >\r\n                    <TableRowColumn>\r\n                      {!this._isPolygonConvex(vertices) && <Warning />}\r\n                    </TableRowColumn>\r\n                    <TableRowColumn>\r\n                      <SemiControlledTextField\r\n                        margin=\"none\"\r\n                        fullWidth\r\n                        value={value.x.toString(10)}\r\n                        onChange={newValue =>\r\n                          onChangeVertexX(parseFloat(newValue) || 0, index)\r\n                        }\r\n                        type=\"number\"\r\n                      />\r\n                    </TableRowColumn>\r\n                    <TableRowColumn>\r\n                      <SemiControlledTextField\r\n                        margin=\"none\"\r\n                        fullWidth\r\n                        value={value.y.toString(10)}\r\n                        onChange={newValue =>\r\n                          onChangeVertexY(parseFloat(newValue) || 0, index)\r\n                        }\r\n                        type=\"number\"\r\n                      />\r\n                    </TableRowColumn>\r\n                    <TableRowColumn>\r\n                      <IconButton onClick={() => onRemove(index)}>\r\n                        <Delete />\r\n                      </IconButton>\r\n                    </TableRowColumn>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n              <TableRow>\r\n                <TableRowColumn />\r\n                <TableRowColumn />\r\n                <TableRowColumn />\r\n                <TableRowColumn>\r\n                  <IconButton onClick={onAdd}>\r\n                    <AddCircle />\r\n                  </IconButton>\r\n                </TableRowColumn>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        )}\r\n      </ThemeConsumer>\r\n    );\r\n  }\r\n}\r\n","// @flow\r\nimport { t } from '@lingui/macro';\r\nimport { Trans } from '@lingui/macro';\r\n\r\nimport * as React from 'react';\r\nimport { Line, Column } from '../../../UI/Grid';\r\nimport Checkbox from '../../../UI/Checkbox';\r\nimport SelectField from '../../../UI/SelectField';\r\nimport SelectOption from '../../../UI/SelectOption';\r\nimport SemiControlledTextField from '../../../UI/SemiControlledTextField';\r\nimport ImagePreview from '../../../ResourcesList/ResourcePreview/ImagePreview';\r\nimport ResourceSelector from '../../../ResourcesList/ResourceSelector';\r\nimport ResourcesLoader from '../../../ResourcesLoader';\r\nimport ShapePreview from './ShapePreview.js';\r\nimport PolygonEditor from './PolygonEditor.js';\r\nimport { type BehaviorEditorProps } from '../BehaviorEditorProps.flow';\r\nimport Text from '../../../UI/Text';\r\nimport DismissableAlertMessage from '../../../UI/DismissableAlertMessage';\r\nimport { ResponsiveLineStackLayout } from '../../../UI/Layout';\r\nimport EmptyMessage from '../../../UI/EmptyMessage';\r\n\r\ntype Props = BehaviorEditorProps;\r\n\r\ntype State = {|\r\n  image: string,\r\n|};\r\n\r\nfunction NumericProperty(props: {|\r\n  properties: gdMapStringPropertyDescriptor,\r\n  propertyName: string,\r\n  step: number,\r\n  onUpdate: (newValue: string) => void,\r\n|}) {\r\n  const { properties, propertyName, step, onUpdate } = props;\r\n\r\n  return (\r\n    <SemiControlledTextField\r\n      fullWidth\r\n      value={properties.get(propertyName).getValue()}\r\n      key={propertyName}\r\n      floatingLabelText={properties.get(propertyName).getLabel()}\r\n      step={step}\r\n      onChange={onUpdate}\r\n      type=\"number\"\r\n    />\r\n  );\r\n}\r\n\r\nfunction BitProperty(props: {|\r\n  enabled: boolean,\r\n  propertyName: string,\r\n  pos: number,\r\n  spacing: boolean,\r\n  onUpdate: (enabled: boolean) => void,\r\n|}) {\r\n  const { enabled, propertyName, pos, spacing, onUpdate } = props;\r\n\r\n  return (\r\n    <div style={{ width: spacing ? '7.5%' : '5%' }}>\r\n      {\r\n        <Checkbox\r\n          checked={enabled}\r\n          onCheck={(e, checked) => onUpdate(checked)}\r\n        />\r\n      }\r\n      {spacing && (\r\n        <div\r\n          style={{ width: '33%' }}\r\n          key={propertyName + '-space' + pos.toString(10)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default class Physics2Editor extends React.Component<Props, State> {\r\n  resourcesLoader = ResourcesLoader;\r\n\r\n  state = {\r\n    image: '',\r\n  };\r\n\r\n  _isBitEnabled(bitsValue: number, pos: number) {\r\n    return !!(bitsValue & (1 << pos));\r\n  }\r\n\r\n  _enableBit(bitsValue: number, pos: number, enable: boolean) {\r\n    if (enable) bitsValue |= 1 << pos;\r\n    else bitsValue &= ~(1 << pos);\r\n    return bitsValue;\r\n  }\r\n\r\n  render() {\r\n    const { behavior, behaviorContent, project } = this.props;\r\n\r\n    const properties = behavior.getProperties(\r\n      behaviorContent.getContent(),\r\n      project\r\n    );\r\n    const bits = Array(16).fill(null);\r\n    const shape = properties.get('shape').getValue();\r\n    const layersValues = parseInt(properties.get('layers').getValue(), 10);\r\n    const masksValues = parseInt(properties.get('masks').getValue(), 10);\r\n\r\n    return (\r\n      <Column>\r\n        <Line>\r\n          <SelectField\r\n            key={'bodyType'}\r\n            fullWidth\r\n            floatingLabelText={properties.get('bodyType').getLabel()}\r\n            value={properties.get('bodyType').getValue()}\r\n            onChange={(e, i, newValue: string) => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'bodyType',\r\n                newValue,\r\n                project\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          >\r\n            {[\r\n              <SelectOption\r\n                key={'dynamic'}\r\n                value={'Dynamic'}\r\n                primaryText={t`Dynamic`}\r\n              />,\r\n              <SelectOption\r\n                key={'static'}\r\n                value={'Static'}\r\n                primaryText={t`Static`}\r\n              />,\r\n              <SelectOption\r\n                key={'kinematic'}\r\n                value={'Kinematic'}\r\n                primaryText={t`Kinematic`}\r\n              />,\r\n            ]}\r\n          </SelectField>\r\n        </Line>\r\n        <ResponsiveLineStackLayout>\r\n          <Checkbox\r\n            label={properties.get('bullet').getLabel()}\r\n            checked={properties.get('bullet').getValue() === 'true'}\r\n            onCheck={(e, checked) => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'bullet',\r\n                checked ? '1' : '0',\r\n                project\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n          <Checkbox\r\n            label={properties.get('fixedRotation').getLabel()}\r\n            checked={properties.get('fixedRotation').getValue() === 'true'}\r\n            onCheck={(e, checked) => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'fixedRotation',\r\n                checked ? '1' : '0',\r\n                project\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n          <Checkbox\r\n            label={properties.get('canSleep').getLabel()}\r\n            checked={properties.get('canSleep').getValue() === 'true'}\r\n            onCheck={(e, checked) => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'canSleep',\r\n                checked ? '1' : '0',\r\n                project\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n        </ResponsiveLineStackLayout>\r\n        <Line>\r\n          <DismissableAlertMessage\r\n            identifier=\"physics2-shape-collisions\"\r\n            kind=\"info\"\r\n          >\r\n            <Trans>\r\n              The shape used in the Physics behavior is independent from the\r\n              collision mask of the object. Be sure to use the \"Collision\"\r\n              condition provided by the Physics behavior in the events. The\r\n              usual \"Collision\" condition won't take into account the shape that\r\n              you've set up here.\r\n            </Trans>\r\n          </DismissableAlertMessage>\r\n        </Line>\r\n        <Line>\r\n          <SelectField\r\n            fullWidth\r\n            floatingLabelText={properties.get('shape').getLabel()}\r\n            value={properties.get('shape').getValue()}\r\n            onChange={(e, i, newValue: string) => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'shape',\r\n                newValue,\r\n                project\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          >\r\n            <SelectOption key={'box'} value={'Box'} primaryText={t`Box`} />\r\n            <SelectOption\r\n              key={'circle'}\r\n              value={'Circle'}\r\n              primaryText={t`Circle`}\r\n            />\r\n            <SelectOption key={'edge'} value={'Edge'} primaryText={t`Edge`} />\r\n            <SelectOption\r\n              key={'polygon'}\r\n              value={'Polygon'}\r\n              primaryText={t`Polygon`}\r\n            />\r\n          </SelectField>\r\n        </Line>\r\n        <ResponsiveLineStackLayout>\r\n          {shape !== 'Polygon' && (\r\n            <SemiControlledTextField\r\n              fullWidth\r\n              value={properties\r\n                .get(shape === 'Polygon' ? 'PolygonOriginX' : 'shapeDimensionA')\r\n                .getValue()}\r\n              key={'shapeDimensionA'}\r\n              floatingLabelText={\r\n                shape === 'Circle'\r\n                  ? 'Radius'\r\n                  : shape === 'Edge'\r\n                  ? 'Length'\r\n                  : 'Width'\r\n              }\r\n              min={0}\r\n              onChange={newValue => {\r\n                behavior.updateProperty(\r\n                  behaviorContent.getContent(),\r\n                  shape === 'Polygon' ? 'PolygonOriginX' : 'shapeDimensionA',\r\n                  newValue,\r\n                  project\r\n                );\r\n                this.forceUpdate();\r\n              }}\r\n              type=\"number\"\r\n            />\r\n          )}\r\n          {shape !== 'Polygon' && shape !== 'Circle' && (\r\n            <SemiControlledTextField\r\n              fullWidth\r\n              value={properties\r\n                .get(shape === 'Polygon' ? 'PolygonOriginY' : 'shapeDimensionB')\r\n                .getValue()}\r\n              key={'shapeDimensionB'}\r\n              floatingLabelText={shape === 'Edge' ? 'Angle' : 'Height'}\r\n              min={shape === 'Edge' ? undefined : 0}\r\n              onChange={newValue => {\r\n                behavior.updateProperty(\r\n                  behaviorContent.getContent(),\r\n                  shape === 'Polygon' ? 'PolygonOriginY' : 'shapeDimensionB',\r\n                  newValue,\r\n                  project\r\n                );\r\n                this.forceUpdate();\r\n              }}\r\n              type=\"number\"\r\n            />\r\n          )}\r\n          {shape === 'Polygon' && (\r\n            <SelectField\r\n              fullWidth\r\n              floatingLabelText={properties.get('polygonOrigin').getLabel()}\r\n              value={properties.get('polygonOrigin').getValue()}\r\n              onChange={(e, i, newValue: string) => {\r\n                behavior.updateProperty(\r\n                  behaviorContent.getContent(),\r\n                  'polygonOrigin',\r\n                  newValue,\r\n                  project\r\n                );\r\n                this.forceUpdate();\r\n              }}\r\n            >\r\n              {[\r\n                <SelectOption\r\n                  key={'center'}\r\n                  value={'Center'}\r\n                  primaryText={t`Center`}\r\n                />,\r\n                <SelectOption\r\n                  key={'origin'}\r\n                  value={'Origin'}\r\n                  primaryText={t`Origin`}\r\n                />,\r\n                <SelectOption\r\n                  key={'topLeft'}\r\n                  value={'TopLeft'}\r\n                  primaryText={t`Top-Left`}\r\n                />,\r\n              ]}\r\n            </SelectField>\r\n          )}\r\n          <NumericProperty\r\n            properties={properties}\r\n            propertyName={'shapeOffsetX'}\r\n            step={1}\r\n            onUpdate={newValue => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'shapeOffsetX',\r\n                newValue,\r\n                project\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n          <NumericProperty\r\n            properties={properties}\r\n            propertyName={'shapeOffsetY'}\r\n            step={1}\r\n            onUpdate={newValue => {\r\n              this.props.behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'shapeOffsetY',\r\n                newValue,\r\n                this.props.project\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n        </ResponsiveLineStackLayout>\r\n        <Line>\r\n          <ResourceSelector\r\n            floatingLabelText={\r\n              <Trans>\r\n                A temporary image to help you visualize the shape/polygon\r\n              </Trans>\r\n            }\r\n            project={this.props.project}\r\n            resourceSources={this.props.resourceSources}\r\n            onChooseResource={this.props.onChooseResource}\r\n            resourceExternalEditors={this.props.resourceExternalEditors}\r\n            resourcesLoader={this.resourcesLoader}\r\n            resourceKind={'image'}\r\n            initialResourceName={''}\r\n            fullWidth\r\n            onChange={resourceName => {\r\n              this.setState({ image: resourceName });\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n        </Line>\r\n        {!this.state.image && (\r\n          <Line>\r\n            <EmptyMessage>\r\n              <Trans>\r\n                To preview the shape that the Physics engine will use for this\r\n                object, choose first a temporary image to use for the preview.\r\n              </Trans>\r\n            </EmptyMessage>\r\n          </Line>\r\n        )}\r\n        {this.state.image && (\r\n          <Line>\r\n            <div\r\n              style={{\r\n                width:\r\n                  '100%' /* This div prevents ImagePreview to overflow outside the parent */,\r\n              }}\r\n            >\r\n              <ImagePreview\r\n                resourceName={this.state.image}\r\n                project={this.props.project}\r\n                resourcesLoader={this.resourcesLoader}\r\n                renderOverlay={({\r\n                  imageWidth,\r\n                  imageHeight,\r\n                  imageZoomFactor,\r\n                }) => (\r\n                  <ShapePreview\r\n                    shape={properties.get('shape').getValue()}\r\n                    dimensionA={parseFloat(\r\n                      properties.get('shapeDimensionA').getValue()\r\n                    )}\r\n                    dimensionB={parseFloat(\r\n                      properties.get('shapeDimensionB').getValue()\r\n                    )}\r\n                    offsetX={parseFloat(\r\n                      properties.get('shapeOffsetX').getValue()\r\n                    )}\r\n                    offsetY={parseFloat(\r\n                      properties.get('shapeOffsetY').getValue()\r\n                    )}\r\n                    polygonOrigin={properties.get('polygonOrigin').getValue()}\r\n                    vertices={JSON.parse(properties.get('vertices').getValue())}\r\n                    width={imageWidth}\r\n                    height={imageHeight}\r\n                    zoomFactor={imageZoomFactor}\r\n                    onMoveVertex={(index, newX, newY) => {\r\n                      let vertices = JSON.parse(\r\n                        properties.get('vertices').getValue()\r\n                      );\r\n                      vertices[index].x = newX;\r\n                      vertices[index].y = newY;\r\n                      behavior.updateProperty(\r\n                        behaviorContent.getContent(),\r\n                        'vertices',\r\n                        JSON.stringify(vertices),\r\n                        project\r\n                      );\r\n                      this.forceUpdate();\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n          </Line>\r\n        )}\r\n        {shape === 'Polygon' && (\r\n          <Line>\r\n            <PolygonEditor\r\n              vertices={JSON.parse(properties.get('vertices').getValue())}\r\n              onChangeVertexX={(newValue, index) => {\r\n                let vertices = JSON.parse(\r\n                  properties.get('vertices').getValue()\r\n                );\r\n                vertices[index].x = newValue;\r\n                behavior.updateProperty(\r\n                  behaviorContent.getContent(),\r\n                  'vertices',\r\n                  JSON.stringify(vertices),\r\n                  project\r\n                );\r\n                this.forceUpdate();\r\n              }}\r\n              onChangeVertexY={(newValue, index) => {\r\n                let vertices = JSON.parse(\r\n                  properties.get('vertices').getValue()\r\n                );\r\n                vertices[index].y = newValue;\r\n                behavior.updateProperty(\r\n                  behaviorContent.getContent(),\r\n                  'vertices',\r\n                  JSON.stringify(vertices),\r\n                  project\r\n                );\r\n                this.forceUpdate();\r\n              }}\r\n              onAdd={() => {\r\n                let vertices = JSON.parse(\r\n                  properties.get('vertices').getValue()\r\n                );\r\n                if (vertices.length >= 8) return;\r\n                vertices.push({ x: 0, y: 0 });\r\n                behavior.updateProperty(\r\n                  behaviorContent.getContent(),\r\n                  'vertices',\r\n                  JSON.stringify(vertices),\r\n                  project\r\n                );\r\n                this.forceUpdate();\r\n              }}\r\n              onRemove={index => {\r\n                let vertices = JSON.parse(\r\n                  properties.get('vertices').getValue()\r\n                );\r\n                vertices.splice(index, 1);\r\n                behavior.updateProperty(\r\n                  behaviorContent.getContent(),\r\n                  'vertices',\r\n                  JSON.stringify(vertices),\r\n                  project\r\n                );\r\n                this.forceUpdate();\r\n              }}\r\n            />\r\n          </Line>\r\n        )}\r\n        <ResponsiveLineStackLayout>\r\n          <NumericProperty\r\n            properties={properties}\r\n            propertyName={'density'}\r\n            step={0.1}\r\n            onUpdate={newValue => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'density',\r\n                parseFloat(newValue) > 0 ? newValue : '0',\r\n                project\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n          <NumericProperty\r\n            properties={properties}\r\n            propertyName={'gravityScale'}\r\n            step={0.1}\r\n            onUpdate={newValue => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'gravityScale',\r\n                newValue,\r\n                project\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n        </ResponsiveLineStackLayout>\r\n        <ResponsiveLineStackLayout>\r\n          <NumericProperty\r\n            properties={properties}\r\n            propertyName={'friction'}\r\n            step={0.1}\r\n            onUpdate={newValue => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'friction',\r\n                parseFloat(newValue) > 0 ? newValue : '0',\r\n                project\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n          <NumericProperty\r\n            properties={properties}\r\n            propertyName={'restitution'}\r\n            step={0.1}\r\n            onUpdate={newValue => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'restitution',\r\n                parseFloat(newValue) > 0 ? newValue : '0',\r\n                project\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n        </ResponsiveLineStackLayout>\r\n        <ResponsiveLineStackLayout>\r\n          <NumericProperty\r\n            properties={properties}\r\n            propertyName={'linearDamping'}\r\n            step={0.05}\r\n            onUpdate={newValue => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'linearDamping',\r\n                newValue,\r\n                project\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n          <NumericProperty\r\n            properties={properties}\r\n            propertyName={'angularDamping'}\r\n            step={0.05}\r\n            onUpdate={newValue => {\r\n              behavior.updateProperty(\r\n                behaviorContent.getContent(),\r\n                'angularDamping',\r\n                newValue,\r\n                project\r\n              );\r\n              this.forceUpdate();\r\n            }}\r\n          />\r\n        </ResponsiveLineStackLayout>\r\n        <Line>\r\n          <Text>{properties.get('layers').getLabel()}</Text>\r\n          {bits.map((value, index) => {\r\n            return (\r\n              <BitProperty\r\n                enabled={this._isBitEnabled(layersValues, index)}\r\n                propertyName={'layers'}\r\n                pos={index}\r\n                spacing={index === 7}\r\n                onUpdate={enabled => {\r\n                  const newValue = this._enableBit(\r\n                    layersValues,\r\n                    index,\r\n                    enabled\r\n                  );\r\n                  this.props.behavior.updateProperty(\r\n                    behaviorContent.getContent(),\r\n                    'layers',\r\n                    newValue.toString(10),\r\n                    this.props.project\r\n                  );\r\n                  this.forceUpdate();\r\n                }}\r\n                key={`layer${index}`}\r\n              />\r\n            );\r\n          })}\r\n        </Line>\r\n        <Line>\r\n          <Text>{properties.get('masks').getLabel()}</Text>\r\n          {bits.map((value, index) => {\r\n            return (\r\n              <BitProperty\r\n                enabled={this._isBitEnabled(masksValues, index)}\r\n                propertyName={'masks'}\r\n                pos={index}\r\n                spacing={index === 7}\r\n                onUpdate={enabled => {\r\n                  const newValue = this._enableBit(masksValues, index, enabled);\r\n                  this.props.behavior.updateProperty(\r\n                    behaviorContent.getContent(),\r\n                    'masks',\r\n                    newValue.toString(10),\r\n                    this.props.project\r\n                  );\r\n                  this.forceUpdate();\r\n                }}\r\n                key={`mask${index}`}\r\n              />\r\n            );\r\n          })}\r\n        </Line>\r\n      </Column>\r\n    );\r\n  }\r\n}\r\n","// @flow\nimport BehaviorPropertiesEditor from './Editors/BehaviorPropertiesEditor';\nimport Physics2Editor from './Editors/Physics2Editor';\n\n/**\n * A service returning editor components for each behavior type.\n */\nexport default {\n  getEditor(behaviorType: string) {\n    if (!this.components[behaviorType]) {\n      return BehaviorPropertiesEditor; // Default properties editor\n    }\n    return this.components[behaviorType].component; // Custom  behavior editor\n  },\n  components: {\n    'Physics2::Physics2Behavior': {\n      component: Physics2Editor,\n    },\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport Checkbox from '../UI/Checkbox';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport Dialog from '../UI/Dialog';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport SubscriptionChecker from '../Profile/SubscriptionChecker';\nimport {\n  getErrors,\n  displayProjectErrorsBox,\n  validatePackageName,\n} from './ProjectErrorsChecker';\nimport DismissableAlertMessage from '../UI/DismissableAlertMessage';\nimport HelpButton from '../UI/HelpButton';\nimport { ResponsiveLineStackLayout } from '../UI/Layout';\nimport Text from '../UI/Text';\n\ntype Props = {|\n  project: gdProject,\n  open: boolean,\n  onClose: Function,\n  onApply: Function,\n  onChangeSubscription: () => void,\n|};\n\ntype State = {|\n  gameResolutionWidth: number,\n  gameResolutionHeight: number,\n  adaptGameResolutionAtRuntime: boolean,\n  name: string,\n  author: string,\n  version: string,\n  packageName: string,\n  orientation: string,\n  adMobAppId: string,\n  scaleMode: string,\n  sizeOnStartupMode: string,\n  showGDevelopSplash: boolean,\n  minFPS: number,\n  maxFPS: number,\n  isFolderProject: boolean,\n|};\n\nclass ProjectPropertiesDialog extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = this._loadFrom(props.project);\n  }\n\n  _subscriptionChecker: ?SubscriptionChecker = null;\n\n  _loadFrom(project: gdProject): State {\n    return {\n      gameResolutionWidth: project.getGameResolutionWidth(),\n      gameResolutionHeight: project.getGameResolutionHeight(),\n      adaptGameResolutionAtRuntime: project.getAdaptGameResolutionAtRuntime(),\n      name: project.getName(),\n      author: project.getAuthor(),\n      version: project.getVersion(),\n      packageName: project.getPackageName(),\n      orientation: project.getOrientation(),\n      adMobAppId: project.getAdMobAppId(),\n      scaleMode: project.getScaleMode(),\n      sizeOnStartupMode: project.getSizeOnStartupMode(),\n      showGDevelopSplash: project.getLoadingScreen().isGDevelopSplashShown(),\n      minFPS: project.getMinimumFPS(),\n      maxFPS: project.getMaximumFPS(),\n      isFolderProject: project.isFolderProject(),\n    };\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      (!this.props.open && newProps.open) ||\n      (newProps.open && this.props.project !== newProps.project)\n    ) {\n      this.setState(this._loadFrom(newProps.project));\n    }\n  }\n\n  _onApply = () => {\n    const t = str => str; //TODO\n    const { project } = this.props;\n    const {\n      gameResolutionWidth,\n      gameResolutionHeight,\n      adaptGameResolutionAtRuntime,\n      name,\n      author,\n      version,\n      packageName,\n      orientation,\n      adMobAppId,\n      scaleMode,\n      sizeOnStartupMode,\n      showGDevelopSplash,\n      minFPS,\n      maxFPS,\n      isFolderProject,\n    } = this.state;\n    project.setGameResolutionSize(gameResolutionWidth, gameResolutionHeight);\n    project.setAdaptGameResolutionAtRuntime(adaptGameResolutionAtRuntime);\n    project.setName(name);\n    project.setAuthor(author);\n    project.setVersion(version);\n    project.setPackageName(packageName);\n    project.setOrientation(orientation);\n    project.setAdMobAppId(adMobAppId);\n    project.setScaleMode(scaleMode);\n    project.setSizeOnStartupMode(sizeOnStartupMode);\n    project.setMinimumFPS(minFPS);\n    project.setMaximumFPS(maxFPS);\n    project.getLoadingScreen().showGDevelopSplash(showGDevelopSplash);\n    project.setFolderProject(isFolderProject);\n\n    if (!displayProjectErrorsBox(t, getErrors(t, project))) return;\n\n    this.props.onApply();\n  };\n\n  render() {\n    const {\n      name,\n      gameResolutionWidth,\n      gameResolutionHeight,\n      adaptGameResolutionAtRuntime,\n      author,\n      version,\n      packageName,\n      orientation,\n      adMobAppId,\n      scaleMode,\n      sizeOnStartupMode,\n      showGDevelopSplash,\n      minFPS,\n      maxFPS,\n      isFolderProject,\n    } = this.state;\n\n    const defaultPackageName = 'com.example.mygame';\n    const admobHint = 'ca-app-pub-XXXXXXXXXXXXXXXX/YYYYYYYYYY';\n    const defaultVersion = '1.0.0';\n\n    return (\n      <React.Fragment>\n        <Dialog\n          actions={[\n            <FlatButton\n              label={<Trans>Cancel</Trans>}\n              primary={false}\n              onClick={this.props.onClose}\n              key=\"cancel\"\n            />,\n            <FlatButton\n              label={<Trans>Apply</Trans>}\n              primary={true}\n              onClick={this._onApply}\n              key=\"apply\"\n            />,\n          ]}\n          secondaryActions={[\n            <HelpButton\n              helpPagePath=\"/interface/project-manager/properties\"\n              key=\"help\"\n            />,\n          ]}\n          title={<Trans>Project properties</Trans>}\n          open={this.props.open}\n          onRequestClose={this.props.onClose}\n        >\n          <SemiControlledTextField\n            floatingLabelText={<Trans>Game name</Trans>}\n            fullWidth\n            type=\"text\"\n            value={name}\n            onChange={value => this.setState({ name: value })}\n            autoFocus\n          />\n          <Checkbox\n            label={\n              <Trans>\n                Display GDevelop splash at startup (in exported game)\n              </Trans>\n            }\n            checked={showGDevelopSplash}\n            onCheck={(e, checked) => {\n              if (!checked) {\n                if (\n                  this._subscriptionChecker &&\n                  !this._subscriptionChecker.checkHasSubscription()\n                )\n                  return;\n              }\n\n              this.setState({\n                showGDevelopSplash: checked,\n              });\n            }}\n          />\n          <SemiControlledTextField\n            floatingLabelText={<Trans>Version number (X.Y.Z)</Trans>}\n            fullWidth\n            hintText={defaultVersion}\n            type=\"text\"\n            value={version}\n            onChange={value => this.setState({ version: value })}\n          />\n          <SemiControlledTextField\n            floatingLabelText={\n              <Trans>Package name (for iOS and Android)</Trans>\n            }\n            fullWidth\n            hintText={defaultPackageName}\n            type=\"text\"\n            value={packageName}\n            onChange={value => this.setState({ packageName: value })}\n            errorText={\n              validatePackageName(packageName) ? (\n                undefined\n              ) : (\n                <Trans>\n                  The package name is containing invalid characters or not\n                  following the convention \"xxx.yyy.zzz\" (numbers allowed after\n                  a letter only).\n                </Trans>\n              )\n            }\n          />\n          <SemiControlledTextField\n            floatingLabelText={<Trans>Author name</Trans>}\n            fullWidth\n            hintText={t`Your name`}\n            type=\"text\"\n            value={author}\n            onChange={value => this.setState({ author: value })}\n          />\n          <Text size=\"title\">\n            <Trans>Resolution and rendering</Trans>\n          </Text>\n          <ResponsiveLineStackLayout noMargin>\n            <SemiControlledTextField\n              floatingLabelText={<Trans>Game resolution width</Trans>}\n              fullWidth\n              type=\"number\"\n              value={'' + gameResolutionWidth}\n              onChange={value =>\n                this.setState({\n                  gameResolutionWidth: Math.max(1, parseInt(value, 10)),\n                })\n              }\n            />\n            <SemiControlledTextField\n              floatingLabelText={<Trans>Game resolution height</Trans>}\n              fullWidth\n              type=\"number\"\n              value={'' + gameResolutionHeight}\n              onChange={value =>\n                this.setState({\n                  gameResolutionHeight: Math.max(1, parseInt(value, 10)),\n                })\n              }\n            />\n          </ResponsiveLineStackLayout>\n          <SelectField\n            fullWidth\n            floatingLabelText={\n              <Trans>Game resolution resize mode (fullscreen or window)</Trans>\n            }\n            value={sizeOnStartupMode}\n            onChange={(e, i, value: string) =>\n              this.setState({ sizeOnStartupMode: value })\n            }\n          >\n            <SelectOption\n              value=\"\"\n              primaryText={t`No changes to the game size`}\n            />\n            <SelectOption\n              value=\"adaptWidth\"\n              primaryText={t`Change width to fit the screen or window size`}\n            />\n            <SelectOption\n              value=\"adaptHeight\"\n              primaryText={t`Change height to fit the screen or window size`}\n            />\n          </SelectField>\n          <Checkbox\n            label={\n              <Trans>\n                Update resolution during the game to fit the screen or window\n                size\n              </Trans>\n            }\n            disabled={sizeOnStartupMode === ''}\n            checked={adaptGameResolutionAtRuntime}\n            onCheck={(e, checked) => {\n              this.setState({\n                adaptGameResolutionAtRuntime: checked,\n              });\n            }}\n          />\n          <ResponsiveLineStackLayout noMargin>\n            <SemiControlledTextField\n              floatingLabelText={<Trans>Minimum FPS</Trans>}\n              fullWidth\n              type=\"number\"\n              value={'' + minFPS}\n              onChange={value =>\n                this.setState({\n                  minFPS: Math.max(0, parseInt(value, 10)),\n                })\n              }\n            />\n            <SemiControlledTextField\n              floatingLabelText={<Trans>Maximum FPS (0 to disable)</Trans>}\n              fullWidth\n              type=\"number\"\n              value={'' + maxFPS}\n              onChange={value =>\n                this.setState({\n                  maxFPS: Math.max(0, parseInt(value, 10)),\n                })\n              }\n            />\n          </ResponsiveLineStackLayout>\n          {maxFPS > 0 && maxFPS < 60 && (\n            <DismissableAlertMessage\n              identifier=\"maximum-fps-too-low\"\n              kind=\"warning\"\n            >\n              <Trans>\n                Most monitors have a refresh rate of 60 FPS. Setting a maximum\n                number of FPS under 60 will force the game to skip frames, and\n                the real number of FPS will be way below 60, making the game\n                laggy and impacting the gameplay negatively. Consider putting 60\n                or more for the maximum number or FPS, or disable it by setting\n                0.\n              </Trans>\n            </DismissableAlertMessage>\n          )}\n          {minFPS < 20 && (\n            <DismissableAlertMessage\n              identifier=\"minimum-fps-too-low\"\n              kind=\"warning\"\n            >\n              <Trans>\n                Setting the minimum number of FPS below 20 will increase a lot\n                the time that is allowed between the simulation of two frames of\n                the game. If case of a sudden slowdown, or on slow computers,\n                this can create buggy behaviors like objects passing beyond a\n                wall. Consider setting 20 as the minimum FPS.\n              </Trans>\n            </DismissableAlertMessage>\n          )}\n          <SelectField\n            fullWidth\n            floatingLabelText={\n              <Trans>Device orientation (for iOS and Android)</Trans>\n            }\n            value={orientation}\n            onChange={(e, i, value: string) =>\n              this.setState({ orientation: value })\n            }\n          >\n            <SelectOption value=\"default\" primaryText={t`Platform default`} />\n            <SelectOption value=\"landscape\" primaryText={t`Landscape`} />\n            <SelectOption value=\"portrait\" primaryText={t`Portrait`} />\n          </SelectField>\n          <SelectField\n            fullWidth\n            floatingLabelText={\n              <Trans>Scale mode (also called \"Sampling\")</Trans>\n            }\n            value={scaleMode}\n            onChange={(e, i, value: string) =>\n              this.setState({ scaleMode: value })\n            }\n          >\n            <SelectOption\n              value=\"linear\"\n              primaryText={t`Linear (antialiased rendering, good for most games)`}\n            />\n            <SelectOption\n              value=\"nearest\"\n              primaryText={t`Nearest (no antialiasing, good for pixel perfect games)`}\n            />\n          </SelectField>\n          {scaleMode === 'nearest' && (\n            <DismissableAlertMessage\n              identifier=\"use-non-smoothed-textures\"\n              kind=\"info\"\n            >\n              <Trans>\n                To obtain the best pixel-perfect effect possible, go in the\n                resources editor and disable the Smoothing for all images of\n                your game. It will be done automatically for new images added\n                from now.\n              </Trans>\n            </DismissableAlertMessage>\n          )}\n          <Text size=\"title\">\n            <Trans>AdMob</Trans>\n          </Text>\n          <SemiControlledTextField\n            floatingLabelText={\n              <Trans>AdMob application ID (for iOS and Android)</Trans>\n            }\n            fullWidth\n            hintText={admobHint}\n            type=\"text\"\n            value={adMobAppId}\n            onChange={value => this.setState({ adMobAppId: value })}\n          />\n          <Text size=\"title\">\n            <Trans>Project files</Trans>\n          </Text>\n          <SelectField\n            fullWidth\n            floatingLabelText={<Trans>Project file type</Trans>}\n            value={isFolderProject ? 'folder-project' : 'single-file'}\n            onChange={(e, i, value: string) =>\n              this.setState({ isFolderProject: value === 'folder-project' })\n            }\n          >\n            <SelectOption\n              value={'single-file'}\n              primaryText={t`Single file (default)`}\n            />\n            <SelectOption\n              value={'folder-project'}\n              primaryText={t`Multiple files, saved in folder next to the main file`}\n            />\n          </SelectField>\n        </Dialog>\n        <SubscriptionChecker\n          ref={subscriptionChecker =>\n            (this._subscriptionChecker = subscriptionChecker)\n          }\n          onChangeSubscription={() => {\n            this.props.onClose();\n            this.props.onChangeSubscription();\n          }}\n          mode=\"mandatory\"\n          id=\"Disable GDevelop splash at startup\"\n          title={<Trans>Disable GDevelop splash at startup</Trans>}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ProjectPropertiesDialog;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport React, { Component } from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport CloudDownload from '@material-ui/icons/CloudDownload';\nimport ExtensionsSearch, { addSerializedExtensionToProject } from '.';\nimport EventsFunctionsExtensionsContext, {\n  type EventsFunctionsExtensionsState,\n} from '../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext';\nimport HelpButton from '../UI/HelpButton';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\n\ntype Props = {|\n  project: gdProject,\n  onClose: () => void,\n|};\n\nconst importExtension = (\n  i18n: I18nType,\n  eventsFunctionsExtensionsState: EventsFunctionsExtensionsState,\n  project: gdProject\n) => {\n  const eventsFunctionsExtensionOpener = eventsFunctionsExtensionsState.getEventsFunctionsExtensionOpener();\n  if (!eventsFunctionsExtensionOpener) return;\n\n  return eventsFunctionsExtensionOpener\n    .chooseEventsFunctionExtensionFile()\n    .then(pathOrUrl => {\n      if (!pathOrUrl) return;\n\n      return eventsFunctionsExtensionOpener\n        .readEventsFunctionExtensionFile(pathOrUrl)\n        .then(serializedExtension => {\n          if (\n            project.hasEventsFunctionsExtensionNamed(serializedExtension.name)\n          ) {\n            //eslint-disable-next-line\n            const answer = confirm(\n              i18n._(\n                t`An extension with this name already exists in the project. Importing this extension will replace it: are you sure you want to continue?`\n              )\n            );\n            if (!answer) return;\n          }\n\n          return addSerializedExtensionToProject(\n            eventsFunctionsExtensionsState,\n            project,\n            serializedExtension\n          );\n        });\n    })\n    .catch(error => {\n      showWarningBox(\n        i18n._(\n          t`An error happened while loading this extension. Please check that it is a proper extension file and compatible with this version of GDevelop`,\n          error\n        )\n      );\n    });\n};\n\nexport default class ExtensionsSearchDialog extends Component<Props, {||}> {\n  render() {\n    const { project, onClose } = this.props;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <EventsFunctionsExtensionsContext.Consumer>\n            {eventsFunctionsExtensionsState => {\n              const eventsFunctionsExtensionOpener = eventsFunctionsExtensionsState.getEventsFunctionsExtensionOpener();\n              return (\n                <Dialog\n                  title={<Trans>Search for New Extensions</Trans>}\n                  actions={[\n                    <FlatButton\n                      key=\"close\"\n                      label={<Trans>Close</Trans>}\n                      primary\n                      onClick={onClose}\n                    />,\n                  ]}\n                  secondaryActions={[\n                    <HelpButton key=\"help\" helpPagePath=\"/extensions/search\" />,\n                    eventsFunctionsExtensionOpener ? (\n                      <FlatButton\n                        icon={<CloudDownload />}\n                        key=\"import\"\n                        label={<Trans>Import extension</Trans>}\n                        onClick={() => {\n                          importExtension(\n                            i18n,\n                            eventsFunctionsExtensionsState,\n                            project\n                          );\n                        }}\n                      />\n                    ) : null,\n                  ]}\n                  open\n                  noMargin\n                  onRequestClose={onClose}\n                >\n                  <ExtensionsSearch\n                    project={project}\n                    onNewExtensionInstalled={() => {}}\n                    onRegistryLoaded={() => {\n                      this.forceUpdate(); // Force update to ensure dialog is properly positioned.\n                    }}\n                    showOnlyWithBehaviors={false}\n                  />\n                </Dialog>\n              );\n            }}\n          </EventsFunctionsExtensionsContext.Consumer>\n        )}\n      </I18n>\n    );\n  }\n}\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\n// This is \"AccountTree\" material icon.\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M22 11V3h-7v3H9V3H2v8h7V8h2v10h4v3h7v-8h-7v3h-2V8h2v3z\" />\n  </SvgIcon>\n));\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { List, ListItem } from '../UI/List';\nimport TextField, {\n  noMarginTextFieldInListItemTopOffset,\n} from '../UI/TextField';\nimport SearchBar from '../UI/SearchBar';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport ListIcon from '../UI/ListIcon';\nimport { AddListItem, SearchListItem } from '../UI/ListCommonItem';\nimport Window from '../Utils/Window';\nimport VariablesEditorDialog from '../VariablesList/VariablesEditorDialog';\nimport ProjectPropertiesDialog from './ProjectPropertiesDialog';\nimport {\n  enumerateLayouts,\n  enumerateExternalEvents,\n  enumerateExternalLayouts,\n  enumerateEventsFunctionsExtensions,\n  filterProjectItemsList,\n} from './EnumerateProjectItems';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport Clipboard from '../Utils/Clipboard';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\nimport ThemeConsumer from '../UI/Theme/ThemeConsumer';\nimport ExtensionsSearchDialog from '../ExtensionsSearch/ExtensionsSearchDialog';\nimport Close from '@material-ui/icons/Close';\nimport SettingsApplications from '@material-ui/icons/SettingsApplications';\nimport PhotoLibrary from '@material-ui/icons/PhotoLibrary';\nimport Settings from '@material-ui/icons/Settings';\nimport Save from '@material-ui/icons/Save';\nimport VariableTree from '../UI/CustomSvgIcons/VariableTree';\nimport ArtTrack from '@material-ui/icons/ArtTrack';\nimport AddToHomeScreen from '@material-ui/icons/AddToHomeScreen';\nimport Fullscreen from '@material-ui/icons/Fullscreen';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nconst LAYOUT_CLIPBOARD_KIND = 'Layout';\nconst EXTERNAL_LAYOUT_CLIPBOARD_KIND = 'External layout';\nconst EXTERNAL_EVENTS_CLIPBOARD_KIND = 'External events';\nconst EVENTS_FUNCTIONS_EXTENSION_CLIPBOARD_KIND = 'Events Functions Extension';\n\nconst styles = {\n  container: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  list: {\n    flex: 1,\n    overflowY: 'scroll',\n    padding: 0,\n  },\n  noIndentNestedList: {\n    padding: 0,\n  },\n  itemName: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n  },\n  itemTextField: {\n    top: noMarginTextFieldInListItemTopOffset,\n  },\n};\n\ntype ProjectStructureItemProps = {|\n  autoGenerateNestedIndicator?: boolean,\n  initiallyOpen?: boolean,\n  leftIcon?: React$Element<any>,\n  indentNestedItems?: boolean,\n  renderNestedItems: () => Array<React$Element<any> | null>,\n  primaryText: React.Node,\n  error?: ?Error,\n  onRefresh?: () => void,\n  open?: boolean,\n|};\n\nconst ProjectStructureItem = (props: ProjectStructureItemProps) => (\n  <ThemeConsumer>\n    {muiTheme => {\n      const {\n        error,\n        leftIcon,\n        onRefresh,\n        indentNestedItems,\n        ...otherProps\n      } = props;\n      return (\n        <ListItem\n          style={{\n            backgroundColor: muiTheme.listItem.groupBackgroundColor,\n            borderBottom: `1px solid ${muiTheme.listItem.separatorColor}`,\n          }}\n          nestedListStyle={\n            indentNestedItems ? undefined : styles.noIndentNestedList\n          }\n          {...otherProps}\n          leftIcon={error ? <WarningIcon /> : leftIcon}\n          displayReloadButton={!!error}\n          onReload={onRefresh}\n          reloadButtonTooltip={`An error has occured in functions. Click to reload them.`}\n        />\n      );\n    }}\n  </ThemeConsumer>\n);\n\ntype ItemProps = {|\n  primaryText: string,\n  editingName: boolean,\n  onEdit: () => void,\n  onDelete: () => void,\n  addLabel: string,\n  onAdd: () => void,\n  onRename: string => void,\n  onEditName: () => void,\n  onCopy: () => void,\n  onCut: () => void,\n  onPaste: () => void,\n  canPaste: () => boolean,\n  canMoveUp: boolean,\n  onMoveUp: () => void,\n  canMoveDown: boolean,\n  onMoveDown: () => void,\n  style?: ?Object,\n|};\n\nclass Item extends React.Component<ItemProps, {||}> {\n  textField: ?Object;\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.editingName && this.props.editingName) {\n      setTimeout(() => {\n        if (this.textField) this.textField.focus();\n      }, 100);\n    }\n  }\n\n  render() {\n    const label = this.props.editingName ? (\n      <TextField\n        id=\"rename-item-field\"\n        margin=\"none\"\n        ref={textField => (this.textField = textField)}\n        defaultValue={this.props.primaryText}\n        onBlur={e => this.props.onRename(e.currentTarget.value)}\n        onKeyPress={event => {\n          if (event.charCode === 13) {\n            // enter key pressed\n            if (this.textField) this.textField.blur();\n          }\n        }}\n        fullWidth\n        style={styles.itemTextField}\n      />\n    ) : (\n      <div style={styles.itemName}>{this.props.primaryText}</div>\n    );\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <ListItem\n            style={{\n              borderBottom: `1px solid ${muiTheme.listItem.separatorColor}`,\n              ...this.props.style,\n            }}\n            primaryText={label}\n            displayMenuButton\n            buildMenuTemplate={() => [\n              {\n                label: 'Edit',\n                click: () => this.props.onEdit(),\n              },\n              {\n                label: 'Rename',\n                click: () => this.props.onEditName(),\n              },\n              {\n                label: 'Delete',\n                click: () => this.props.onDelete(),\n              },\n              {\n                label: this.props.addLabel,\n                visible: !!this.props.onAdd,\n                click: () => this.props.onAdd(),\n              },\n              { type: 'separator' },\n              {\n                label: 'Copy',\n                click: () => this.props.onCopy(),\n              },\n              {\n                label: 'Cut',\n                click: () => this.props.onCut(),\n              },\n              {\n                label: 'Paste',\n                enabled: this.props.canPaste(),\n                click: () => this.props.onPaste(),\n              },\n              { type: 'separator' },\n              {\n                label: 'Move up',\n                enabled: this.props.canMoveUp,\n                click: () => this.props.onMoveUp(),\n              },\n              {\n                label: 'Move down',\n                enabled: this.props.canMoveDown,\n                click: () => this.props.onMoveDown(),\n              },\n            ]}\n            onClick={() => {\n              // It's essential to discard clicks when editing the name,\n              // to avoid weird opening of an editor (accompanied with a\n              // closing of the project manager) when clicking on the text\n              // field.\n              if (!this.props.editingName) this.props.onEdit();\n            }}\n          />\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n\ntype Props = {|\n  project: gdProject,\n  onDeleteLayout: gdLayout => void,\n  onDeleteExternalEvents: gdExternalEvents => void,\n  onDeleteExternalLayout: gdExternalLayout => void,\n  onDeleteEventsFunctionsExtension: gdEventsFunctionsExtension => void,\n  onRenameLayout: (string, string) => void,\n  onRenameExternalEvents: (string, string) => void,\n  onRenameExternalLayout: (string, string) => void,\n  onRenameEventsFunctionsExtension: (string, string) => void,\n  onOpenLayout: string => void,\n  onOpenExternalEvents: string => void,\n  onOpenExternalLayout: string => void,\n  onOpenEventsFunctionsExtension: string => void,\n  onSaveProject: () => void,\n  onSaveProjectAs: () => void,\n  onCloseProject: () => void,\n  onExportProject: () => void,\n  onOpenPreferences: () => void,\n  onOpenProfile: () => void,\n  onOpenResources: () => void,\n  onAddLayout: () => void,\n  onAddExternalEvents: () => void,\n  onAddExternalLayout: () => void,\n  onAddEventsFunctionsExtension: () => void,\n  onOpenPlatformSpecificAssets: () => void,\n  onChangeSubscription: () => void,\n  eventsFunctionsExtensionsError: ?Error,\n  onReloadEventsFunctionsExtensions: () => void,\n  freezeUpdate: boolean,\n|};\n\ntype State = {|\n  renamedItemKind: ?string,\n  renamedItemName: string,\n  searchText: string,\n  projectPropertiesDialogOpen: boolean,\n  variablesEditorOpen: boolean,\n  extensionsSearchDialogOpen: boolean,\n|};\n\nexport default class ProjectManager extends React.Component<Props, State> {\n  _searchBar: ?SearchBar;\n\n  state = {\n    renamedItemKind: null,\n    renamedItemName: '',\n    searchText: '',\n    projectPropertiesDialogOpen: false,\n    variablesEditorOpen: false,\n    extensionsSearchDialogOpen: false,\n  };\n\n  shouldComponentUpdate(nextProps: Props) {\n    // Rendering the component is (super) costly (~20ms) as it iterates over\n    // every project layouts/external layouts/external events,\n    // so the prop freezeUpdate allow to ask the component to stop\n    // updating, for example when hidden.\n    return !nextProps.freezeUpdate;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    // Typical usage (don't forget to compare props):\n    if (!this.props.freezeUpdate && prevProps.freezeUpdate) {\n      if (this._searchBar) this._searchBar.focus();\n    }\n  }\n\n  _onEditName = (kind: ?string, name: string) => {\n    this.setState({\n      renamedItemKind: kind,\n      renamedItemName: name,\n    });\n  };\n\n  _copyLayout = (layout: gdLayout) => {\n    Clipboard.set(LAYOUT_CLIPBOARD_KIND, {\n      layout: serializeToJSObject(layout),\n      name: layout.getName(),\n    });\n  };\n\n  _cutLayout = (layout: gdLayout) => {\n    this._copyLayout(layout);\n    this.props.onDeleteLayout(layout);\n  };\n\n  _pasteLayout = (index: number) => {\n    if (!Clipboard.has(LAYOUT_CLIPBOARD_KIND)) return;\n\n    const { layout: copiedLayout, name } = Clipboard.get(LAYOUT_CLIPBOARD_KIND);\n    const { project } = this.props;\n\n    const newName = newNameGenerator(name, name =>\n      project.hasLayoutNamed(name)\n    );\n\n    const newLayout = project.insertNewLayout(newName, index);\n\n    unserializeFromJSObject(\n      newLayout,\n      copiedLayout,\n      'unserializeFrom',\n      project\n    );\n    newLayout.setName(newName); // Unserialization has overwritten the name.\n    newLayout.updateBehaviorsSharedData(project);\n\n    this.forceUpdate();\n  };\n\n  _addLayout = (index: number) => {\n    const { project } = this.props;\n\n    const newName = newNameGenerator('NewScene', name =>\n      project.hasLayoutNamed(name)\n    );\n    const newLayout = project.insertNewLayout(newName, index + 1);\n\n    newLayout.setName(newName);\n    newLayout.updateBehaviorsSharedData(project);\n\n    this.forceUpdate();\n  };\n\n  _addExternalEvents = (index: number) => {\n    const { project } = this.props;\n\n    const newName = newNameGenerator('NewExternalEvents', name =>\n      project.hasExternalEventsNamed(name)\n    );\n    project.insertNewExternalEvents(newName, index + 1);\n    this.forceUpdate();\n  };\n\n  _addExternalLayout = (index: number) => {\n    const { project } = this.props;\n\n    const newName = newNameGenerator('NewExternalLayout', name =>\n      project.hasExternalLayoutNamed(name)\n    );\n    project.insertNewExternalLayout(newName, index + 1);\n    this.forceUpdate();\n  };\n\n  _addEventsFunctionsExtension = (index: number) => {\n    const { project } = this.props;\n\n    const newName = newNameGenerator('NewExtension', name =>\n      project.hasEventsFunctionsExtensionNamed(name)\n    );\n    project.insertNewEventsFunctionsExtension(newName, index + 1);\n    this.forceUpdate();\n  };\n\n  _moveUpLayout = (index: number) => {\n    const { project } = this.props;\n    if (index <= 0) return;\n\n    project.swapLayouts(index, index - 1);\n    this.forceUpdate();\n  };\n\n  _moveDownLayout = (index: number) => {\n    const { project } = this.props;\n    if (index >= project.getLayoutsCount() - 1) return;\n\n    project.swapLayouts(index, index + 1);\n    this.forceUpdate();\n  };\n\n  _copyExternalEvents = (externalEvents: gdExternalEvents) => {\n    Clipboard.set(EXTERNAL_EVENTS_CLIPBOARD_KIND, {\n      externalEvents: serializeToJSObject(externalEvents),\n      name: externalEvents.getName(),\n    });\n  };\n\n  _cutExternalEvents = (externalEvents: gdExternalEvents) => {\n    this._copyExternalEvents(externalEvents);\n    this.props.onDeleteExternalEvents(externalEvents);\n  };\n\n  _pasteExternalEvents = (index: number) => {\n    if (!Clipboard.has(EXTERNAL_EVENTS_CLIPBOARD_KIND)) return;\n\n    const { externalEvents: copiedExternalEvents, name } = Clipboard.get(\n      EXTERNAL_EVENTS_CLIPBOARD_KIND\n    );\n    const { project } = this.props;\n\n    const newName = newNameGenerator(name, name =>\n      project.hasExternalEventsNamed(name)\n    );\n\n    const newExternalEvents = project.insertNewExternalEvents(newName, index);\n\n    unserializeFromJSObject(\n      newExternalEvents,\n      copiedExternalEvents,\n      'unserializeFrom',\n      project\n    );\n    newExternalEvents.setName(newName); // Unserialization has overwritten the name.\n\n    this.forceUpdate();\n  };\n\n  _moveUpExternalEvents = (index: number) => {\n    const { project } = this.props;\n    if (index <= 0) return;\n\n    project.swapExternalEvents(index, index - 1);\n    this.forceUpdate();\n  };\n\n  _moveDownExternalEvents = (index: number) => {\n    const { project } = this.props;\n    if (index >= project.getExternalEventsCount() - 1) return;\n\n    project.swapExternalEvents(index, index + 1);\n    this.forceUpdate();\n  };\n\n  _copyExternalLayout = (externalLayout: gdExternalLayout) => {\n    Clipboard.set(EXTERNAL_LAYOUT_CLIPBOARD_KIND, {\n      externalLayout: serializeToJSObject(externalLayout),\n      name: externalLayout.getName(),\n    });\n  };\n\n  _cutExternalLayout = (externalLayout: gdExternalLayout) => {\n    this._copyExternalLayout(externalLayout);\n    this.props.onDeleteExternalLayout(externalLayout);\n  };\n\n  _pasteExternalLayout = (index: number) => {\n    if (!Clipboard.has(EXTERNAL_LAYOUT_CLIPBOARD_KIND)) return;\n\n    const { externalLayout: copiedExternalLayout, name } = Clipboard.get(\n      EXTERNAL_LAYOUT_CLIPBOARD_KIND\n    );\n    const { project } = this.props;\n\n    const newName = newNameGenerator(name, name =>\n      project.hasExternalLayoutNamed(name)\n    );\n\n    const newExternalLayout = project.insertNewExternalLayout(newName, index);\n\n    unserializeFromJSObject(newExternalLayout, copiedExternalLayout);\n    newExternalLayout.setName(newName); // Unserialization has overwritten the name.\n\n    this.forceUpdate();\n  };\n\n  _moveUpExternalLayout = (index: number) => {\n    const { project } = this.props;\n    if (index <= 0) return;\n\n    project.swapExternalLayouts(index, index - 1);\n    this.forceUpdate();\n  };\n\n  _moveDownExternalLayout = (index: number) => {\n    const { project } = this.props;\n    if (index >= project.getExternalLayoutsCount() - 1) return;\n\n    project.swapExternalLayouts(index, index + 1);\n    this.forceUpdate();\n  };\n\n  _copyEventsFunctionsExtension = (\n    eventsFunctionsExtension: gdEventsFunctionsExtension\n  ) => {\n    Clipboard.set(EVENTS_FUNCTIONS_EXTENSION_CLIPBOARD_KIND, {\n      eventsFunctionsExtension: serializeToJSObject(eventsFunctionsExtension),\n      name: eventsFunctionsExtension.getName(),\n    });\n  };\n\n  _cutEventsFunctionsExtension = (\n    eventsFunctionsExtension: gdEventsFunctionsExtension\n  ) => {\n    this._copyEventsFunctionsExtension(eventsFunctionsExtension);\n    this.props.onDeleteEventsFunctionsExtension(eventsFunctionsExtension);\n  };\n\n  _pasteEventsFunctionsExtension = (index: number) => {\n    if (!Clipboard.has(EVENTS_FUNCTIONS_EXTENSION_CLIPBOARD_KIND)) return;\n\n    const {\n      eventsFunctionsExtension: copiedEventsFunctionsExtension,\n      name,\n    } = Clipboard.get(EVENTS_FUNCTIONS_EXTENSION_CLIPBOARD_KIND);\n    const { project } = this.props;\n\n    const newName = newNameGenerator(name, name =>\n      project.hasEventsFunctionsExtensionNamed(name)\n    );\n\n    const newEventsFunctionsExtension = project.insertNewEventsFunctionsExtension(\n      newName,\n      index\n    );\n\n    unserializeFromJSObject(\n      newEventsFunctionsExtension,\n      copiedEventsFunctionsExtension,\n      'unserializeFrom',\n      project\n    );\n    newEventsFunctionsExtension.setName(newName); // Unserialization has overwritten the name.\n\n    this.forceUpdate();\n    this.props.onReloadEventsFunctionsExtensions();\n  };\n\n  _moveUpEventsFunctionsExtension = (index: number) => {\n    const { project } = this.props;\n    if (index <= 0) return;\n\n    project.swapEventsFunctionsExtensions(index, index - 1);\n    this.forceUpdate();\n  };\n\n  _moveDownEventsFunctionsExtension = (index: number) => {\n    const { project } = this.props;\n    if (index >= project.getEventsFunctionsExtensionsCount() - 1) return;\n\n    project.swapEventsFunctionsExtensions(index, index + 1);\n    this.forceUpdate();\n  };\n\n  _renderMenu() {\n    // If there is already a main menu (as the native one made with\n    // Electron), don't show it in the Project Manager.\n    if (Window.hasMainMenu()) return null;\n\n    return (\n      <React.Fragment>\n        <ListItem\n          key=\"save\"\n          primaryText={<Trans>Save</Trans>}\n          leftIcon={<Save />}\n          onClick={() => this.props.onSaveProject()}\n        />\n        <ListItem\n          key=\"save-as\"\n          primaryText={<Trans>Save as...</Trans>}\n          leftIcon={<FileCopy />}\n          onClick={() => this.props.onSaveProjectAs()}\n        />\n        <ListItem\n          key=\"export\"\n          primaryText={<Trans>Export</Trans>}\n          leftIcon={<AddToHomeScreen />}\n          onClick={() => this.props.onExportProject()}\n        />\n        <ListItem\n          key=\"close\"\n          primaryText={<Trans>Close</Trans>}\n          leftIcon={<Close />}\n          onClick={() => this.props.onCloseProject()}\n        />\n        <ListItem\n          key=\"preferences\"\n          primaryText={<Trans>Preferences</Trans>}\n          leftIcon={<Settings />}\n          onClick={() => this.props.onOpenPreferences()}\n        />\n        <ListItem\n          key=\"profile\"\n          primaryText={<Trans>My profile</Trans>}\n          leftIcon={<AccountCircle />}\n          onClick={() => this.props.onOpenProfile()}\n        />\n        {!Window.isFullscreen() && (\n          <ListItem\n            key=\"fullscreen\"\n            primaryText={<Trans>Turn on Fullscreen</Trans>}\n            leftIcon={<Fullscreen />}\n            onClick={() => Window.requestFullscreen()}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n\n  _onSearchChange = (text: string) =>\n    this.setState({\n      searchText: text,\n    });\n\n  _onRequestSearch = () => {\n    /* Do nothing for now, but we could open the first result. */\n  };\n\n  render() {\n    const {\n      project,\n      eventsFunctionsExtensionsError,\n      onReloadEventsFunctionsExtensions,\n    } = this.props;\n    const { renamedItemKind, renamedItemName, searchText } = this.state;\n\n    const forceOpen = searchText !== '' ? true : undefined;\n\n    return (\n      <div style={styles.container}>\n        <List style={styles.list}>\n          {this._renderMenu()}\n          <ProjectStructureItem\n            primaryText={<Trans>Game settings</Trans>}\n            leftIcon={\n              <ListIcon\n                iconSize={32}\n                isGDevelopIcon\n                src=\"res/ribbon_default/projectManager32.png\"\n              />\n            }\n            initiallyOpen={false}\n            autoGenerateNestedIndicator={true}\n            indentNestedItems\n            renderNestedItems={() => [\n              <ListItem\n                key=\"properties\"\n                primaryText={<Trans>Properties</Trans>}\n                leftIcon={<SettingsApplications />}\n                onClick={() =>\n                  this.setState({ projectPropertiesDialogOpen: true })\n                }\n              />,\n              <ListItem\n                key=\"global-variables\"\n                primaryText={<Trans>Global variables</Trans>}\n                leftIcon={<VariableTree />}\n                onClick={() => this.setState({ variablesEditorOpen: true })}\n              />,\n              <ListItem\n                key=\"icons\"\n                primaryText={<Trans>Icons</Trans>}\n                leftIcon={<PhotoLibrary />}\n                onClick={() => this.props.onOpenPlatformSpecificAssets()}\n              />,\n              <ListItem\n                key=\"resources\"\n                primaryText={<Trans>Resources</Trans>}\n                leftIcon={<ArtTrack />}\n                onClick={() => {\n                  this.props.onOpenResources();\n                }}\n              />,\n            ]}\n          />\n          <ProjectStructureItem\n            primaryText={<Trans>Scenes</Trans>}\n            leftIcon={\n              <ListIcon\n                iconSize={32}\n                isGDevelopIcon\n                src=\"res/ribbon_default/sceneadd32.png\"\n              />\n            }\n            initiallyOpen={true}\n            open={forceOpen}\n            autoGenerateNestedIndicator={!forceOpen}\n            renderNestedItems={() =>\n              filterProjectItemsList(enumerateLayouts(project), searchText)\n                .map((layout: gdLayout, i: number) => {\n                  const name = layout.getName();\n                  return (\n                    <Item\n                      key={i}\n                      primaryText={name}\n                      editingName={\n                        renamedItemKind === 'layout' && renamedItemName === name\n                      }\n                      onEdit={() => this.props.onOpenLayout(name)}\n                      onDelete={() => this.props.onDeleteLayout(layout)}\n                      addLabel={'Add a New Scene'}\n                      onAdd={() => this._addLayout(i)}\n                      onRename={newName => {\n                        this.props.onRenameLayout(name, newName);\n                        this._onEditName(null, '');\n                      }}\n                      onEditName={() => this._onEditName('layout', name)}\n                      onCopy={() => this._copyLayout(layout)}\n                      onCut={() => this._cutLayout(layout)}\n                      onPaste={() => this._pasteLayout(i)}\n                      canPaste={() => Clipboard.has(LAYOUT_CLIPBOARD_KIND)}\n                      canMoveUp={i !== 0}\n                      onMoveUp={() => this._moveUpLayout(i)}\n                      canMoveDown={i !== project.getLayoutsCount() - 1}\n                      onMoveDown={() => this._moveDownLayout(i)}\n                    />\n                  );\n                })\n                .concat(\n                  <AddListItem\n                    key={'add-scene'}\n                    onClick={this.props.onAddLayout}\n                    primaryText={<Trans>Click to add a scene</Trans>}\n                  />\n                )\n            }\n          />\n          <ProjectStructureItem\n            primaryText={<Trans>External events</Trans>}\n            leftIcon={\n              <ListIcon\n                iconSize={32}\n                isGDevelopIcon\n                src=\"res/ribbon_default/externalevents32.png\"\n              />\n            }\n            initiallyOpen={false}\n            open={forceOpen}\n            autoGenerateNestedIndicator={!forceOpen}\n            renderNestedItems={() =>\n              filterProjectItemsList(\n                enumerateExternalEvents(project),\n                searchText\n              )\n                .map((externalEvents, i) => {\n                  const name = externalEvents.getName();\n                  return (\n                    <Item\n                      key={i}\n                      primaryText={name}\n                      editingName={\n                        renamedItemKind === 'external-events' &&\n                        renamedItemName === name\n                      }\n                      onEdit={() => this.props.onOpenExternalEvents(name)}\n                      onDelete={() =>\n                        this.props.onDeleteExternalEvents(externalEvents)\n                      }\n                      addLabel={'Add New External Events'}\n                      onAdd={() => this._addExternalEvents(i)}\n                      onRename={newName => {\n                        this.props.onRenameExternalEvents(name, newName);\n                        this._onEditName(null, '');\n                      }}\n                      onEditName={() =>\n                        this._onEditName('external-events', name)\n                      }\n                      onCopy={() => this._copyExternalEvents(externalEvents)}\n                      onCut={() => this._cutExternalEvents(externalEvents)}\n                      onPaste={() => this._pasteExternalEvents(i)}\n                      canPaste={() =>\n                        Clipboard.has(EXTERNAL_EVENTS_CLIPBOARD_KIND)\n                      }\n                      canMoveUp={i !== 0}\n                      onMoveUp={() => this._moveUpExternalEvents(i)}\n                      canMoveDown={i !== project.getExternalEventsCount() - 1}\n                      onMoveDown={() => this._moveDownExternalEvents(i)}\n                    />\n                  );\n                })\n                .concat(\n                  <AddListItem\n                    key={'add-external-events'}\n                    primaryText={<Trans>Click to add external events</Trans>}\n                    onClick={this.props.onAddExternalEvents}\n                  />\n                )\n            }\n          />\n          <ProjectStructureItem\n            primaryText={<Trans>External layouts</Trans>}\n            leftIcon={\n              <ListIcon\n                iconSize={32}\n                isGDevelopIcon\n                src=\"res/ribbon_default/externallayout32.png\"\n              />\n            }\n            initiallyOpen={false}\n            open={forceOpen}\n            autoGenerateNestedIndicator={!forceOpen}\n            renderNestedItems={() =>\n              filterProjectItemsList(\n                enumerateExternalLayouts(project),\n                searchText\n              )\n                .map((externalLayout, i) => {\n                  const name = externalLayout.getName();\n                  return (\n                    <Item\n                      key={i}\n                      primaryText={name}\n                      editingName={\n                        renamedItemKind === 'external-layout' &&\n                        renamedItemName === name\n                      }\n                      onEdit={() => this.props.onOpenExternalLayout(name)}\n                      onDelete={() =>\n                        this.props.onDeleteExternalLayout(externalLayout)\n                      }\n                      addLabel={'Add a New External Layout'}\n                      onAdd={() => this._addExternalLayout(i)}\n                      onRename={newName => {\n                        this.props.onRenameExternalLayout(name, newName);\n                        this._onEditName(null, '');\n                      }}\n                      onEditName={() =>\n                        this._onEditName('external-layout', name)\n                      }\n                      onCopy={() => this._copyExternalLayout(externalLayout)}\n                      onCut={() => this._cutExternalLayout(externalLayout)}\n                      onPaste={() => this._pasteExternalLayout(i)}\n                      canPaste={() =>\n                        Clipboard.has(EXTERNAL_LAYOUT_CLIPBOARD_KIND)\n                      }\n                      canMoveUp={i !== 0}\n                      onMoveUp={() => this._moveUpExternalLayout(i)}\n                      canMoveDown={i !== project.getExternalLayoutsCount() - 1}\n                      onMoveDown={() => this._moveDownExternalLayout(i)}\n                    />\n                  );\n                })\n                .concat(\n                  <AddListItem\n                    key={'add-external-layout'}\n                    primaryText={<Trans>Click to add an external layout</Trans>}\n                    onClick={this.props.onAddExternalLayout}\n                  />\n                )\n            }\n          />\n          <ProjectStructureItem\n            primaryText={<Trans>Functions/Behaviors</Trans>}\n            error={eventsFunctionsExtensionsError}\n            onRefresh={onReloadEventsFunctionsExtensions}\n            leftIcon={\n              <ListIcon\n                iconSize={32}\n                isGDevelopIcon\n                src=\"res/ribbon_default/function32.png\"\n              />\n            }\n            initiallyOpen={false}\n            open={forceOpen}\n            autoGenerateNestedIndicator={\n              !forceOpen && !eventsFunctionsExtensionsError\n            }\n            renderNestedItems={() =>\n              filterProjectItemsList(\n                enumerateEventsFunctionsExtensions(project),\n                searchText\n              )\n                .map((eventsFunctionsExtension, i) => {\n                  const name = eventsFunctionsExtension.getName();\n                  return (\n                    <Item\n                      key={i}\n                      primaryText={name}\n                      editingName={\n                        renamedItemKind === 'events-functions-extension' &&\n                        renamedItemName === name\n                      }\n                      onEdit={() =>\n                        this.props.onOpenEventsFunctionsExtension(name)\n                      }\n                      onDelete={() =>\n                        this.props.onDeleteEventsFunctionsExtension(\n                          eventsFunctionsExtension\n                        )\n                      }\n                      addLabel={'Add a New Extension'}\n                      onAdd={() => this._addEventsFunctionsExtension(i)}\n                      onRename={newName => {\n                        this.props.onRenameEventsFunctionsExtension(\n                          name,\n                          newName\n                        );\n                        this._onEditName(null, '');\n                      }}\n                      onEditName={() =>\n                        this._onEditName('events-functions-extension', name)\n                      }\n                      onCopy={() =>\n                        this._copyEventsFunctionsExtension(\n                          eventsFunctionsExtension\n                        )\n                      }\n                      onCut={() =>\n                        this._cutEventsFunctionsExtension(\n                          eventsFunctionsExtension\n                        )\n                      }\n                      onPaste={() => this._pasteEventsFunctionsExtension(i)}\n                      canPaste={() =>\n                        Clipboard.has(EVENTS_FUNCTIONS_EXTENSION_CLIPBOARD_KIND)\n                      }\n                      canMoveUp={i !== 0}\n                      onMoveUp={() => this._moveUpEventsFunctionsExtension(i)}\n                      canMoveDown={\n                        i !== project.getEventsFunctionsExtensionsCount() - 1\n                      }\n                      onMoveDown={() =>\n                        this._moveDownEventsFunctionsExtension(i)\n                      }\n                    />\n                  );\n                })\n                .concat(\n                  <AddListItem\n                    key={'add-events-functions-extension'}\n                    primaryText={\n                      <Trans>Click to add functions and behaviors</Trans>\n                    }\n                    onClick={this.props.onAddEventsFunctionsExtension}\n                  />\n                )\n                .concat(\n                  <SearchListItem\n                    key={'extensions-search'}\n                    primaryText={<Trans>Search for new extensions</Trans>}\n                    onClick={() =>\n                      this.setState({ extensionsSearchDialogOpen: true })\n                    }\n                  />\n                )\n            }\n          />\n        </List>\n        <SearchBar\n          ref={searchBar => (this._searchBar = searchBar)}\n          value={searchText}\n          onRequestSearch={this._onRequestSearch}\n          onChange={this._onSearchChange}\n        />\n        {this.state.variablesEditorOpen && (\n          <VariablesEditorDialog\n            open\n            variablesContainer={project.getVariables()}\n            onCancel={() => this.setState({ variablesEditorOpen: false })}\n            onApply={() => this.setState({ variablesEditorOpen: false })}\n            emptyExplanationMessage={\n              <Trans>\n                Global variables are variables that are shared amongst all the\n                scenes of the game.\n              </Trans>\n            }\n            emptyExplanationSecondMessage={\n              <Trans>\n                For example, you can have a variable called UnlockedLevelsCount\n                representing the number of levels unlocked by the player.\n              </Trans>\n            }\n          />\n        )}\n        {this.state.projectPropertiesDialogOpen && (\n          <ProjectPropertiesDialog\n            open={this.state.projectPropertiesDialogOpen}\n            project={project}\n            onClose={() =>\n              this.setState({ projectPropertiesDialogOpen: false })\n            }\n            onApply={() =>\n              this.setState({ projectPropertiesDialogOpen: false })\n            }\n            onChangeSubscription={this.props.onChangeSubscription}\n          />\n        )}\n        {this.state.extensionsSearchDialogOpen && (\n          <ExtensionsSearchDialog\n            project={project}\n            onClose={() => this.setState({ extensionsSearchDialogOpen: false })}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\nimport React, { Component } from 'react';\nimport InstructionOrExpressionSelector from './index';\nimport { createTree, type InstructionOrExpressionTreeNode } from './CreateTree';\nimport { enumerateInstructions } from './EnumerateInstructions';\nimport {\n  type EnumeratedInstructionOrExpressionMetadata,\n  filterEnumeratedInstructionOrExpressionMetadataByScope,\n} from './EnumeratedInstructionOrExpressionMetadata.js';\nimport { type EventsScope } from '../../EventsScope.flow';\n\ntype Props = {|\n  isCondition: boolean,\n  focusOnMount?: boolean,\n  selectedType: string,\n  onChoose: (type: string, EnumeratedInstructionOrExpressionMetadata) => void,\n  scope: EventsScope,\n|};\n\nconst style = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n};\n\nexport default class InstructionSelector extends Component<Props, {||}> {\n  instructionsInfo: Array<EnumeratedInstructionOrExpressionMetadata> = filterEnumeratedInstructionOrExpressionMetadataByScope(\n    enumerateInstructions(this.props.isCondition),\n    this.props.scope\n  );\n  instructionsInfoTree: InstructionOrExpressionTreeNode = createTree(\n    this.instructionsInfo\n  );\n\n  render() {\n    const { isCondition, scope, ...otherProps } = this.props;\n    return (\n      <InstructionOrExpressionSelector\n        style={style}\n        instructionsInfo={this.instructionsInfo}\n        instructionsInfoTree={this.instructionsInfoTree}\n        iconSize={24}\n        {...otherProps}\n      />\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport InstructionSelector from './InstructionOrExpressionSelector/InstructionSelector.js';\nimport InstructionParametersEditor from './InstructionParametersEditor.js';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../../ResourcesList/ResourceExternalEditor.flow';\nimport { type EventsScope } from '../EventsScope.flow';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 1,\n  },\n  parametersEditor: {\n    flex: 2,\n    display: 'flex',\n    paddingLeft: 16,\n    paddingRight: 16,\n    zIndex: 1, // Put the Paper shadow on the type selector\n  },\n};\n\ntype Props = {|\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  instruction: gdInstruction,\n  isCondition: boolean,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  style?: Object,\n  openInstructionOrExpression: (\n    extension: gdPlatformExtension,\n    type: string\n  ) => void,\n|};\ntype State = {||};\n\nexport default class InstructionEditor extends React.Component<Props, State> {\n  _instructionParametersEditor: ?InstructionParametersEditor;\n\n  chooseType = (type: string) => {\n    const { instruction } = this.props;\n    instruction.setType(type);\n    this.forceUpdate(() => {\n      if (this._instructionParametersEditor) {\n        this._instructionParametersEditor.focus();\n      }\n    });\n  };\n\n  render() {\n    const {\n      instruction,\n      isCondition,\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      scope,\n    } = this.props;\n\n    return (\n      <div style={styles.container}>\n        <InstructionSelector\n          isCondition={isCondition}\n          selectedType={instruction.getType()}\n          onChoose={this.chooseType}\n          focusOnMount={!instruction.getType()}\n          scope={scope}\n        />\n        <Paper style={styles.parametersEditor} square elevation={2}>\n          <InstructionParametersEditor\n            project={project}\n            scope={scope}\n            globalObjectsContainer={globalObjectsContainer}\n            objectsContainer={objectsContainer}\n            isCondition={isCondition}\n            instruction={instruction}\n            resourceSources={this.props.resourceSources}\n            onChooseResource={this.props.onChooseResource}\n            resourceExternalEditors={this.props.resourceExternalEditors}\n            openInstructionOrExpression={this.props.openInstructionOrExpression}\n            ref={instructionParametersEditor =>\n              (this._instructionParametersEditor = instructionParametersEditor)\n            }\n            focusOnMount={instruction.getType()}\n          />\n        </Paper>\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport InstructionEditor from './index.js';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../../ResourcesList/ResourceExternalEditor.flow';\nimport { type EventsScope } from '../EventsScope.flow';\n\ntype Props = {|\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  instruction: gdInstruction,\n  isCondition: boolean,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  style?: Object,\n  isNewInstruction: boolean,\n  onCancel: () => void,\n  onSubmit: () => void,\n  open: boolean,\n  openInstructionOrExpression: (\n    extension: gdPlatformExtension,\n    type: string\n  ) => void,\n|};\ntype State = {||};\n\nexport default class InstructionEditorDialog extends React.Component<\n  Props,\n  State\n> {\n  render() {\n    const {\n      isNewInstruction,\n      onCancel,\n      onSubmit,\n      open,\n      ...otherProps\n    } = this.props;\n    const actions = [\n      <FlatButton\n        key=\"cancel\"\n        label={<Trans>Cancel</Trans>}\n        primary={false}\n        onClick={onCancel}\n      />,\n      <FlatButton\n        key=\"ok\"\n        label={<Trans>Ok</Trans>}\n        primary={true}\n        keyboardFocused={false}\n        onClick={onSubmit}\n      />,\n    ];\n\n    return (\n      <Dialog\n        actions={actions}\n        open={open}\n        onRequestClose={onCancel}\n        maxWidth={false}\n        flexBody\n        noMargin\n      >\n        <InstructionEditor {...otherProps} />\n      </Dialog>\n    );\n  }\n}\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M19 2h-4.18C14.4.84 13.3 0 12 0c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm7 18H5V4h2v3h10V4h2v16z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport { TreeTableRow, TreeTableCell } from '../UI/TreeTable';\nimport Add from '@material-ui/icons/Add';\nimport IconButton from '../UI/IconButton';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport Copy from '../UI/CustomSvgIcons/Copy';\nimport Paste from '../UI/CustomSvgIcons/Paste';\nimport Delete from '@material-ui/icons/Delete';\n\nimport styles from './styles';\n\nconst EditVariableRow = ({\n  onAdd,\n  onCopy,\n  hasSelection,\n  onPaste,\n  hasClipboard,\n  onDeleteSelection,\n}) => (\n  <TreeTableRow>\n    <TreeTableCell style={styles.toolColumnHeader}>\n      <IconButton onClick={onCopy} disabled={!hasSelection}>\n        <Copy />\n      </IconButton>\n      <IconButton onClick={onPaste} disabled={!hasClipboard}>\n        <Paste />\n      </IconButton>\n      <IconButton onClick={onDeleteSelection} disabled={!hasSelection}>\n        <Delete />\n      </IconButton>\n    </TreeTableCell>\n\n    <TreeTableCell>\n      <EmptyMessage style={styles.addVariableMessage} />\n    </TreeTableCell>\n\n    <TreeTableCell style={styles.toolColumn}>\n      <IconButton onClick={onAdd}>\n        <Add />\n      </IconButton>\n    </TreeTableCell>\n  </TreeTableRow>\n);\n\nexport default EditVariableRow;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport {\n  createTree,\n  type InstructionOrExpressionTreeNode,\n  findInTree,\n} from './InstructionOrExpressionSelector/CreateTree';\nimport {\n  enumerateFreeInstructions,\n  filterInstructionsList,\n} from './InstructionOrExpressionSelector/EnumerateInstructions';\nimport { type EnumeratedInstructionOrExpressionMetadata } from './InstructionOrExpressionSelector/EnumeratedInstructionOrExpressionMetadata.js';\nimport { List, ListItem } from '../../UI/List';\nimport SearchBar from '../../UI/SearchBar';\nimport ThemeConsumer from '../../UI/Theme/ThemeConsumer';\nimport ScrollView from '../../UI/ScrollView';\nimport { Tabs, Tab } from '../../UI/Tabs';\nimport Subheader from '../../UI/Subheader';\nimport {\n  enumerateObjectsAndGroups,\n  filterObjectsList,\n  filterGroupsList,\n  enumerateObjects,\n} from '../../ObjectsList/EnumerateObjects';\nimport TagChips from '../../UI/TagChips';\nimport { renderGroupObjectsListItem } from './SelectorListItems/SelectorGroupObjectsListItem';\nimport { renderObjectListItem } from './SelectorListItems/SelectorObjectListItem';\nimport { renderInstructionOrExpressionListItem } from './SelectorListItems/SelectorInstructionOrExpressionListItem';\nimport { renderInstructionTree } from './SelectorListItems/SelectorInstructionsTreeListItem';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport {\n  buildTagsMenuTemplate,\n  getTagsFromString,\n} from '../../Utils/TagsHelper';\nimport {\n  getObjectOrObjectGroupListItemValue,\n  getInstructionListItemValue,\n} from './SelectorListItems/Keys';\n\nconst styles = {\n  searchBar: {\n    flexShrink: 0,\n  },\n};\n\nexport type TabName = 'objects' | 'free-instructions';\n\ntype State = {|\n  searchText: string,\n\n  // State for tags of objects:\n  selectedObjectTags: Array<string>,\n|};\n\ntype Props = {|\n  project: gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  currentTab: TabName,\n  onChangeTab: TabName => void,\n  isCondition: boolean,\n  focusOnMount?: boolean,\n  chosenInstructionType: ?string,\n  onChooseInstruction: (\n    type: string,\n    EnumeratedInstructionOrExpressionMetadata\n  ) => void,\n  chosenObjectName: ?string,\n  onChooseObject: (objectName: string) => void,\n  onSearchStartOrReset?: () => void,\n  style?: Object,\n|};\n\nconst iconSize = 24;\nconst minHeight = 400; // Avoid a super small list in empty scenes. 400 is enough to be displayed on an iPhone SE.\n\nexport default class InstructionOrObjectSelector extends React.PureComponent<\n  Props,\n  State\n> {\n  state = { searchText: '', selectedObjectTags: [] };\n  _searchBar = React.createRef<SearchBar>();\n  _scrollView = React.createRef<typeof ScrollView>();\n  _selectedItem = React.createRef<ListItem>();\n\n  instructionsInfo: Array<EnumeratedInstructionOrExpressionMetadata> = enumerateFreeInstructions(\n    this.props.isCondition\n  );\n  instructionsInfoTree: InstructionOrExpressionTreeNode = createTree(\n    this.instructionsInfo\n  );\n  initialInstructionTypePath = findInTree(\n    this.instructionsInfoTree,\n    this.props.chosenInstructionType\n  );\n\n  componentDidMount() {\n    if (this.props.focusOnMount && this._searchBar.current) {\n      this._searchBar.current.focus();\n    }\n    if (this._selectedItem.current && this._scrollView.current) {\n      // $FlowFixMe - improper typing of ScrollView?\n      this._scrollView.current.scrollTo(this._selectedItem.current);\n    }\n  }\n\n  _getAllObjectTags = (): Array<string> => {\n    const { globalObjectsContainer, objectsContainer } = this.props;\n\n    const tagsSet: Set<string> = new Set();\n    enumerateObjects(\n      globalObjectsContainer,\n      objectsContainer\n    ).allObjectsList.forEach(({ object }) => {\n      getTagsFromString(object.getTags()).forEach(tag => tagsSet.add(tag));\n    });\n\n    return Array.from(tagsSet);\n  };\n\n  _buildObjectTagsMenuTemplate = (i18n: I18nType): Array<any> => {\n    const { selectedObjectTags } = this.state;\n\n    return buildTagsMenuTemplate({\n      noTagLabel: i18n._(t`No tags - add a tag to an object first`),\n      getAllTags: this._getAllObjectTags,\n      selectedTags: selectedObjectTags,\n      onChange: selectedObjectTags => {\n        this.setState({ selectedObjectTags });\n      },\n    });\n  };\n\n  render() {\n    const {\n      style,\n      globalObjectsContainer,\n      objectsContainer,\n      project,\n      chosenInstructionType,\n      onChooseInstruction,\n      chosenObjectName,\n      onChooseObject,\n      isCondition,\n      currentTab,\n      onChangeTab,\n      onSearchStartOrReset,\n    } = this.props;\n    const { searchText, selectedObjectTags } = this.state;\n\n    const { allObjectsList, allGroupsList } = enumerateObjectsAndGroups(\n      globalObjectsContainer,\n      objectsContainer\n    );\n    const displayedObjectsList = filterObjectsList(allObjectsList, {\n      searchText,\n      selectedTags: selectedObjectTags,\n    });\n    const displayedObjectGroupsList = selectedObjectTags.length\n      ? []\n      : filterGroupsList(allGroupsList, searchText);\n    const displayedInstructionsList = filterInstructionsList(\n      this.instructionsInfo,\n      { searchText }\n    );\n    const isSearching = !!searchText;\n    const hasResults =\n      !isSearching ||\n      !!displayedObjectsList.length ||\n      !!displayedObjectGroupsList.length ||\n      !!displayedInstructionsList.length;\n\n    const onSubmitSearch = () => {\n      if (!isSearching) return;\n\n      if (displayedObjectsList.length > 0) {\n        onChooseObject(displayedObjectsList[0].object.getName());\n      } else if (displayedObjectGroupsList.length > 0) {\n        onChooseObject(displayedObjectGroupsList[0].group.getName());\n      } else if (displayedInstructionsList.length > 0) {\n        onChooseInstruction(\n          displayedInstructionsList[0].type,\n          displayedInstructionsList[0]\n        );\n      }\n    };\n\n    return (\n      <I18n key=\"tags\">\n        {({ i18n }) => (\n          <ThemeConsumer>\n            {muiTheme => (\n              <div\n                style={{\n                  backgroundColor: muiTheme.list.itemsBackgroundColor,\n                  minHeight,\n                  ...style,\n                }}\n              >\n                <SearchBar\n                  value={searchText}\n                  onChange={searchText => {\n                    const oldSearchText = this.state.searchText;\n                    this.setState({\n                      searchText,\n                    });\n\n                    // Notify if needed that we started or cleared a search\n                    if (\n                      (!oldSearchText && searchText) ||\n                      (oldSearchText && !searchText)\n                    ) {\n                      if (onSearchStartOrReset) onSearchStartOrReset();\n                    }\n                  }}\n                  onRequestSearch={onSubmitSearch}\n                  buildTagsMenuTemplate={() =>\n                    this._buildObjectTagsMenuTemplate(i18n)\n                  }\n                  style={styles.searchBar}\n                  ref={this._searchBar}\n                />\n                {!isSearching && (\n                  <Tabs value={currentTab} onChange={onChangeTab}>\n                    <Tab\n                      label={<Trans>Objects</Trans>}\n                      value={('objects': TabName)}\n                    />\n                    <Tab\n                      label={\n                        isCondition ? (\n                          <Trans>Other conditions</Trans>\n                        ) : (\n                          <Trans>Other actions</Trans>\n                        )\n                      }\n                      value={('free-instructions': TabName)}\n                    />\n                  </Tabs>\n                )}\n                <ScrollView\n                  ref={\n                    // $FlowFixMe - improper typing of ScrollView?\n                    this._scrollView\n                  }\n                >\n                  {!isSearching && currentTab === 'objects' && (\n                    <TagChips\n                      tags={selectedObjectTags}\n                      onChange={selectedObjectTags =>\n                        this.setState({\n                          selectedObjectTags,\n                        })\n                      }\n                    />\n                  )}\n                  {hasResults && (\n                    <List>\n                      {(isSearching || currentTab === 'objects') &&\n                        displayedObjectsList.map(objectWithContext =>\n                          renderObjectListItem({\n                            project: project,\n                            objectWithContext: objectWithContext,\n                            iconSize: iconSize,\n                            onClick: () =>\n                              onChooseObject(\n                                objectWithContext.object.getName()\n                              ),\n                            selectedValue: chosenObjectName\n                              ? getObjectOrObjectGroupListItemValue(\n                                  chosenObjectName\n                                )\n                              : undefined,\n                          })\n                        )}\n                      {(isSearching || currentTab === 'objects') &&\n                        displayedObjectGroupsList.length > 0 && (\n                          <Subheader>\n                            <Trans>Object groups</Trans>\n                          </Subheader>\n                        )}\n                      {(isSearching || currentTab === 'objects') &&\n                        displayedObjectGroupsList.map(groupWithContext =>\n                          renderGroupObjectsListItem({\n                            groupWithContext: groupWithContext,\n                            iconSize: iconSize,\n                            onClick: () =>\n                              onChooseObject(groupWithContext.group.getName()),\n                            selectedValue: chosenObjectName\n                              ? getObjectOrObjectGroupListItemValue(\n                                  chosenObjectName\n                                )\n                              : undefined,\n                          })\n                        )}\n                      {isSearching && displayedInstructionsList.length > 0 && (\n                        <Subheader>\n                          {isCondition ? (\n                            <Trans>Non-objects and other conditions</Trans>\n                          ) : (\n                            <Trans>Non-objects and other actions</Trans>\n                          )}\n                        </Subheader>\n                      )}\n                      {isSearching &&\n                        displayedInstructionsList.map(instructionMetadata =>\n                          renderInstructionOrExpressionListItem({\n                            instructionOrExpressionMetadata: instructionMetadata,\n                            iconSize: iconSize,\n                            onClick: () =>\n                              onChooseInstruction(\n                                instructionMetadata.type,\n                                instructionMetadata\n                              ),\n                            selectedValue: chosenInstructionType\n                              ? getInstructionListItemValue(\n                                  chosenInstructionType\n                                )\n                              : undefined,\n                          })\n                        )}\n                      {!isSearching &&\n                        currentTab === 'free-instructions' &&\n                        renderInstructionTree({\n                          instructionTreeNode: this.instructionsInfoTree,\n                          onChoose: onChooseInstruction,\n                          iconSize,\n                          selectedValue: chosenInstructionType\n                            ? getInstructionListItemValue(chosenInstructionType)\n                            : undefined,\n                          initiallyOpenedPath: this.initialInstructionTypePath,\n                          selectedItemRef: this._selectedItem,\n                        })}\n                    </List>\n                  )}\n                  {!isSearching &&\n                    currentTab === 'objects' &&\n                    !allObjectsList.length && (\n                      <EmptyMessage>\n                        <Trans>\n                          There is no object in your game or in this scene.\n                          Start by adding an new object in the scene editor,\n                          using the objects list.\n                        </Trans>\n                      </EmptyMessage>\n                    )}\n                  {!hasResults && (\n                    <EmptyMessage>\n                      <Trans>\n                        Nothing corresponding to your search. Choose an object\n                        first or browse the list of actions/conditions.\n                      </Trans>\n                    </EmptyMessage>\n                  )}\n                </ScrollView>\n              </div>\n            )}\n          </ThemeConsumer>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { ListItem } from '../../../UI/List';\nimport ListIcon from '../../../UI/ListIcon';\nimport ObjectsRenderingService from '../../../ObjectsRendering/ObjectsRenderingService';\nimport type { ObjectWithContext } from '../../../ObjectsList/EnumerateObjects';\nimport {\n  getObjectOrObjectGroupListItemValue,\n  getObjectListItemKey,\n} from './Keys';\n\ntype Props = {|\n  project: gdProject,\n  objectWithContext: ObjectWithContext,\n  iconSize: number,\n  onClick: () => void,\n  selectedValue: ?string,\n|};\n\nexport const renderObjectListItem = ({\n  project,\n  objectWithContext,\n  iconSize,\n  onClick,\n  selectedValue,\n}: Props) => {\n  const objectName: string = objectWithContext.object.getName();\n  return (\n    <ListItem\n      key={getObjectListItemKey(objectWithContext)}\n      selected={\n        selectedValue === getObjectOrObjectGroupListItemValue(objectName)\n      }\n      primaryText={objectName}\n      leftIcon={\n        <ListIcon\n          iconSize={iconSize}\n          src={ObjectsRenderingService.getThumbnail(\n            project,\n            objectWithContext.object\n          )}\n        />\n      }\n      onClick={onClick}\n    />\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { ListItem } from '../../../UI/List';\nimport ListIcon from '../../../UI/ListIcon';\nimport type { GroupWithContext } from '../../../ObjectsList/EnumerateObjects';\nimport {\n  getObjectGroupListItemKey,\n  getObjectOrObjectGroupListItemValue,\n} from './Keys';\n\ntype Props = {|\n  groupWithContext: GroupWithContext,\n  iconSize: number,\n  onClick: () => void,\n  selectedValue: ?string,\n|};\n\nexport const renderGroupObjectsListItem = ({\n  groupWithContext,\n  iconSize,\n  onClick,\n  selectedValue,\n}: Props) => {\n  const groupName: string = groupWithContext.group.getName();\n  return (\n    <ListItem\n      key={getObjectGroupListItemKey(groupWithContext)}\n      selected={\n        selectedValue === getObjectOrObjectGroupListItemValue(groupName)\n      }\n      primaryText={groupName}\n      leftIcon={\n        <ListIcon\n          iconSize={iconSize}\n          src=\"res/ribbon_default/objectsgroups64.png\"\n        />\n      }\n      onClick={onClick}\n    />\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport ThemeConsumer from '../../../UI/Theme/ThemeConsumer';\n\nconst styles = {\n  logo: {\n    width: '100%',\n  },\n};\n\nconst GDevelopLogo = () => (\n  <ThemeConsumer>\n    {muiTheme => <img src={muiTheme.logo.src} alt=\"\" style={styles.logo} />}\n  </ThemeConsumer>\n);\n\nexport default GDevelopLogo;\n","// @flow\nimport * as React from 'react';\nimport ThemeConsumer from '../../../UI/Theme/ThemeConsumer';\n\nconst styles = {\n  scrollContainer: {\n    flex: 1,\n    display: 'flex',\n    overflowY: 'scroll',\n  },\n};\n\ntype Props = {|\n  children: React.Node,\n|};\n\nconst ScrollBackground = ({ children }: Props) => (\n  <ThemeConsumer>\n    {muiTheme => (\n      <div\n        style={{\n          ...styles.scrollContainer,\n          backgroundColor: muiTheme.palette.canvasColor,\n        }}\n      >\n        {children}\n      </div>\n    )}\n  </ThemeConsumer>\n);\n\nexport default ScrollBackground;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\n\nimport React from 'react';\nimport FlatButton from '../../../UI/FlatButton';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '../../../UI/IconButton';\nimport Language from '@material-ui/icons/Language';\nimport BaseEditor from '../BaseEditor';\nimport Window from '../../../Utils/Window';\nimport { Line, Spacer } from '../../../UI/Grid';\nimport GDevelopLogo from './GDevelopLogo';\nimport ScrollBackground from './ScrollBackground';\nimport RaisedButton from '../../../UI/RaisedButton';\nimport Text from '../../../UI/Text';\n\nconst styles = {\n  innerContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    minHeight: 350,\n  },\n  centerContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    maxWidth: 400,\n  },\n  logoPaper: {\n    marginBottom: 10,\n    width: '100%',\n    textAlign: 'center',\n  },\n};\n\nclass StartPage extends BaseEditor {\n  constructor() {\n    super();\n\n    this.state = {\n      aboutDialogOpen: false,\n    };\n  }\n\n  getProject() {\n    return undefined;\n  }\n\n  updateToolbar() {\n    if (this.props.setToolbar) this.props.setToolbar(null);\n  }\n\n  render() {\n    const {\n      project,\n      canOpen,\n      onOpen,\n      onCreate,\n      onOpenProjectManager,\n      onCloseProject,\n      onOpenAboutDialog,\n      onOpenHelpFinder,\n      onOpenLanguageDialog,\n    } = this.props;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <ScrollBackground>\n            <div style={styles.innerContainer}>\n              <Line expand justifyContent=\"center\">\n                <div style={styles.centerContainer}>\n                  <Paper\n                    elevation={2}\n                    style={{\n                      ...styles.logoPaper,\n                    }}\n                  >\n                    <GDevelopLogo />\n                    <Text>\n                      <Trans>\n                        GDevelop is an easy-to-use game creator with no\n                        programming language to learn.\n                      </Trans>\n                    </Text>\n                  </Paper>\n                  {!project && canOpen && (\n                    <React.Fragment>\n                      <RaisedButton\n                        label={<Trans>Open a project</Trans>}\n                        fullWidth\n                        onClick={onOpen}\n                        primary\n                      />\n                      <Spacer />\n                    </React.Fragment>\n                  )}\n                  {!project && (\n                    <React.Fragment>\n                      <RaisedButton\n                        label={<Trans>Create a new project</Trans>}\n                        fullWidth\n                        onClick={onCreate}\n                        primary\n                      />\n                      <Spacer />\n                    </React.Fragment>\n                  )}\n                  {!!project && (\n                    <React.Fragment>\n                      <RaisedButton\n                        label={<Trans>Open Project Manager</Trans>}\n                        fullWidth\n                        onClick={onOpenProjectManager}\n                        primary\n                      />\n                      <Spacer />\n                    </React.Fragment>\n                  )}\n                  {!!project && (\n                    <React.Fragment>\n                      <FlatButton\n                        label={<Trans>Close project</Trans>}\n                        fullWidth\n                        onClick={onCloseProject}\n                      />\n                      <Spacer />\n                    </React.Fragment>\n                  )}\n                  {\n                    <FlatButton\n                      label={<Trans>Search the documentation</Trans>}\n                      fullWidth\n                      onClick={onOpenHelpFinder}\n                    />\n                  }\n                </div>\n              </Line>\n              <Line alignItems=\"center\" justifyContent=\"space-between\">\n                <Line>\n                  <FlatButton\n                    label={<Trans>About GDevelop</Trans>}\n                    onClick={onOpenAboutDialog}\n                  />\n                  <FlatButton\n                    label={<Trans>GDevelop Forums</Trans>}\n                    onClick={() =>\n                      Window.openExternalURL('https://forum.gdevelop-app.com')\n                    }\n                  />\n                  <FlatButton\n                    label={<Trans>Help and tutorials</Trans>}\n                    onClick={() =>\n                      Window.openExternalURL(\n                        'http://wiki.compilgames.net/doku.php/gdevelop5/start'\n                      )\n                    }\n                  />\n                </Line>\n                <Line alignItems=\"center\">\n                  <FlatButton\n                    label={i18n.language}\n                    onClick={onOpenLanguageDialog}\n                    icon={<Language />}\n                  />\n                  <IconButton\n                    className=\"icon-facebook\"\n                    onClick={() =>\n                      Window.openExternalURL(\n                        'https://www.facebook.com/GDevelopApp'\n                      )\n                    }\n                  />\n                  <IconButton\n                    className=\"icon-twitter\"\n                    onClick={() =>\n                      Window.openExternalURL('https://twitter.com/GDevelopApp')\n                    }\n                  />\n                </Line>\n              </Line>\n            </div>\n          </ScrollBackground>\n        )}\n      </I18n>\n    );\n  }\n}\n\nexport default StartPage;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport { Line, Spacer } from '../../../../UI/Grid';\nimport ImagePreview from '../../../../ResourcesList/ResourcePreview/ImagePreview';\nimport Replay from '@material-ui/icons/Replay';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport Pause from '@material-ui/icons/Pause';\nimport Timer from '@material-ui/icons/Timer';\nimport TextField from '../../../../UI/TextField';\nimport FlatButton from '../../../../UI/FlatButton';\nimport Text from '../../../../UI/Text';\n\ntype Props = {|\n  spritesContainer: Object,\n  resourcesLoader: Object,\n  project: Object,\n  timeBetweenFrames: number,\n  onChangeTimeBetweenFrames: number => void,\n|};\n\ntype State = {|\n  currentFrameIndex: number,\n  currentFrameElapsedTime: number,\n  paused: boolean,\n  fps: number,\n|};\n\nconst styles = {\n  timeField: {\n    width: 75,\n  },\n  timeIcon: {\n    paddingLeft: 6,\n    paddingRight: 8,\n  },\n};\n\nexport default class AnimationPreview extends Component<Props, State> {\n  state = {\n    currentFrameIndex: 0,\n    currentFrameElapsedTime: 0,\n    paused: false,\n    fps: Math.round(1 / this.props.timeBetweenFrames),\n  };\n\n  nextUpdate = null;\n\n  componentDidMount() {\n    this.nextUpdate = requestAnimationFrame(this._updateAnimation);\n  }\n\n  componentWillUnmount() {\n    if (this.nextUpdate) cancelAnimationFrame(this.nextUpdate);\n  }\n\n  replay = () =>\n    this.setState({\n      currentFrameIndex: 0,\n      currentFrameElapsedTime: 0,\n      paused: false,\n    });\n\n  play = () =>\n    this.setState({\n      paused: false,\n    });\n\n  pause = () =>\n    this.setState({\n      paused: true,\n    });\n\n  _updateAnimation = () => {\n    const animationSpeedScale = 1;\n\n    const { spritesContainer, timeBetweenFrames } = this.props;\n    const { currentFrameIndex, currentFrameElapsedTime, paused } = this.state;\n\n    const elapsedTime = 1 / 60;\n    let newFrameIndex = currentFrameIndex;\n    let newFrameElapsedTime = currentFrameElapsedTime;\n    newFrameElapsedTime += paused ? 0 : elapsedTime * animationSpeedScale;\n\n    if (newFrameElapsedTime > timeBetweenFrames) {\n      const count = Math.floor(newFrameElapsedTime / timeBetweenFrames);\n      newFrameIndex += count;\n      newFrameElapsedTime = newFrameElapsedTime - count * timeBetweenFrames;\n      if (newFrameElapsedTime < 0) newFrameElapsedTime = 0;\n    }\n\n    if (newFrameIndex >= spritesContainer.getSpritesCount()) {\n      newFrameIndex = spritesContainer.isLooping()\n        ? newFrameIndex % spritesContainer.getSpritesCount()\n        : spritesContainer.getSpritesCount() - 1;\n    }\n    if (newFrameIndex < 0) newFrameIndex = 0; //May happen if there is no frame.\n\n    this.setState({\n      currentFrameIndex: newFrameIndex,\n      currentFrameElapsedTime: newFrameElapsedTime,\n    });\n    this.nextUpdate = requestAnimationFrame(this._updateAnimation);\n  };\n\n  render() {\n    const {\n      spritesContainer,\n      resourcesLoader,\n      project,\n      timeBetweenFrames,\n      onChangeTimeBetweenFrames,\n    } = this.props;\n    const { currentFrameIndex, paused, fps } = this.state;\n\n    const hasValidSprite =\n      currentFrameIndex < spritesContainer.getSpritesCount();\n    const sprite = hasValidSprite\n      ? spritesContainer.getSprite(currentFrameIndex)\n      : null;\n\n    return (\n      <div>\n        <ImagePreview\n          resourceName={sprite ? sprite.getImageName() : ''}\n          resourcesLoader={resourcesLoader}\n          project={project}\n        />\n        <Line noMargin alignItems=\"center\">\n          <Text>\n            <Trans>FPS:</Trans>\n          </Text>\n          <Spacer />\n          <TextField\n            margin=\"none\"\n            value={fps}\n            onChange={(e, text) => {\n              const fps = parseFloat(text);\n              if (fps > 0) {\n                this.setState({ fps });\n                onChangeTimeBetweenFrames(parseFloat((1 / fps).toFixed(4)));\n                this.replay();\n              }\n            }}\n            id=\"direction-time-between-frames\"\n            type=\"number\"\n            step={1}\n            min={1}\n            max={100}\n            style={styles.timeField}\n            autoFocus={true}\n          />\n          <Timer style={styles.timeIcon} />\n          <TextField\n            margin=\"none\"\n            value={timeBetweenFrames}\n            onChange={(e, text) => {\n              const time = parseFloat(text);\n              if (time > 0) {\n                this.setState({ fps: Math.round(1 / time) });\n                onChangeTimeBetweenFrames(time);\n                this.replay();\n              }\n            }}\n            id=\"direction-time-between-frames\"\n            type=\"number\"\n            step={0.005}\n            precision={2}\n            min={0.01}\n            max={5}\n            style={styles.timeField}\n          />\n          <FlatButton\n            icon={<Replay />}\n            label={<Trans>Replay</Trans>}\n            onClick={this.replay}\n          />\n          <FlatButton\n            icon={paused ? <PlayArrow /> : <Pause />}\n            label={paused ? 'Play' : 'Pause'}\n            onClick={paused ? this.play : this.pause}\n          />\n        </Line>\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport Timer from '@material-ui/icons/Timer';\nimport FlatButton from '../../../UI/FlatButton';\nimport Checkbox from '../../../UI/Checkbox';\nimport Repeat from '@material-ui/icons/Repeat';\nimport Brush from '@material-ui/icons/Brush';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport TextField from '../../../UI/TextField';\nimport Dialog from '../../../UI/Dialog';\nimport AnimationPreview from './AnimationPreview';\nimport ResourcesLoader from '../../../ResourcesLoader';\nimport { type ResourceExternalEditor } from '../../../ResourcesList/ResourceExternalEditor.flow';\nimport { ResponsiveWindowMeasurer } from '../../../UI/Reponsive/ResponsiveWindowMeasurer';\n\nconst styles = {\n  container: {\n    paddingLeft: 12,\n    paddingRight: 12,\n    display: 'flex',\n    alignItems: 'center',\n  },\n  timeField: {\n    width: 75,\n  },\n  timeIcon: {\n    paddingLeft: 6,\n    paddingRight: 6,\n  },\n  repeatContainer: {\n    width: 130,\n  },\n  spacer: {\n    width: 16,\n  },\n};\n\nconst formatTime = (time: number) => Number(time.toFixed(6));\n\ntype Props = {|\n  direction: gdDirection,\n  resourcesLoader: typeof ResourcesLoader,\n  project: gdProject,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  onEditWith: ResourceExternalEditor => void,\n|};\n\ntype State = {|\n  timeBetweenFrames: number,\n  timeError: boolean,\n  previewOpen: boolean,\n|};\n\nexport default class DirectionTools extends Component<Props, State> {\n  state = {\n    timeBetweenFrames: formatTime(this.props.direction.getTimeBetweenFrames()),\n    timeError: false,\n    previewOpen: false,\n  };\n\n  componentWillReceiveProps(newProps: Props) {\n    this.setState({\n      timeBetweenFrames: formatTime(\n        this.props.direction.getTimeBetweenFrames()\n      ),\n      timeError: false,\n    });\n  }\n\n  saveTimeBetweenFrames = () => {\n    const { direction } = this.props;\n\n    const newTime = Math.max(parseFloat(this.state.timeBetweenFrames), 0.00001);\n    const newTimeIsValid = !isNaN(newTime);\n\n    if (newTimeIsValid) direction.setTimeBetweenFrames(newTime);\n    this.setState({\n      timeBetweenFrames: formatTime(\n        this.props.direction.getTimeBetweenFrames()\n      ),\n      timeError: newTimeIsValid,\n    });\n  };\n\n  setLooping = (check: boolean) => {\n    const { direction } = this.props;\n\n    direction.setLoop(!!check);\n    this.forceUpdate();\n  };\n\n  openPreview = (open: boolean) => {\n    this.setState({\n      previewOpen: open,\n    });\n    if (!open) {\n      this.saveTimeBetweenFrames();\n    }\n  };\n\n  render() {\n    const {\n      direction,\n      resourcesLoader,\n      project,\n      resourceExternalEditors,\n      onEditWith,\n    } = this.props;\n\n    const imageResourceExternalEditors = resourceExternalEditors.filter(\n      ({ kind }) => kind === 'image'\n    );\n\n    return (\n      <div style={styles.container}>\n        <ResponsiveWindowMeasurer>\n          {windowWidth =>\n            windowWidth !== 'small' &&\n            !!imageResourceExternalEditors.length && (\n              <FlatButton\n                label={imageResourceExternalEditors[0].displayName}\n                icon={<Brush />}\n                onClick={() => onEditWith(imageResourceExternalEditors[0])}\n              />\n            )\n          }\n        </ResponsiveWindowMeasurer>\n        <FlatButton\n          label={<Trans>Preview</Trans>}\n          icon={<PlayArrow />}\n          onClick={() => this.openPreview(true)}\n        />\n        <Timer style={styles.timeIcon} />\n        <TextField\n          value={this.state.timeBetweenFrames}\n          onChange={(e, text) =>\n            this.setState({ timeBetweenFrames: parseFloat(text) || 0 })\n          }\n          onBlur={() => this.saveTimeBetweenFrames()}\n          id=\"direction-time-between-frames\"\n          margin=\"none\"\n          style={styles.timeField}\n          type=\"number\"\n          step={0.005}\n          precision={2}\n          min={0.01}\n          max={5}\n        />\n        <span style={styles.spacer} />\n        <div style={styles.repeatContainer}>\n          <Checkbox\n            checkedIcon={<Repeat />}\n            uncheckedIcon={<Repeat />}\n            checked={direction.isLooping()}\n            label={\n              direction.isLooping() ? (\n                <Trans>Loop</Trans>\n              ) : (\n                <Trans>Don't loop</Trans>\n              )\n            }\n            onCheck={(e, check) => this.setLooping(check)}\n          />\n        </div>\n        {this.state.previewOpen && (\n          <Dialog\n            actions={\n              <FlatButton\n                label={<Trans>OK</Trans>}\n                primary\n                onClick={() => this.openPreview(false)}\n                key=\"ok\"\n              />\n            }\n            noMargin\n            modal\n            onRequestClose={() => this.openPreview(false)}\n            open={this.state.previewOpen}\n          >\n            <AnimationPreview\n              spritesContainer={direction}\n              resourcesLoader={resourcesLoader}\n              project={project}\n              timeBetweenFrames={this.state.timeBetweenFrames}\n              onChangeTimeBetweenFrames={text =>\n                this.setState({ timeBetweenFrames: text })\n              }\n            />\n          </Dialog>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { largeSelectedArea, largeSelectableArea } from '../ClassNames';\nimport { type EventRendererProps } from './EventRenderer';\n\nexport default class UnknownEvent extends React.Component<\n  EventRendererProps,\n  *\n> {\n  render() {\n    return (\n      <p\n        className={classNames({\n          [largeSelectableArea]: true,\n          [largeSelectedArea]: this.props.selected,\n        })}\n      >\n        {'Unknown event of type ' + this.props.event.getType()}\n      </p>\n    );\n  }\n}\n","import UnknownEvent from './Renderers/UnknownEvent';\nimport StandardEvent from './Renderers/StandardEvent';\nimport GroupEvent from './Renderers/GroupEvent';\nimport CommentEvent from './Renderers/CommentEvent';\nimport ForEachEvent from './Renderers/ForEachEvent';\nimport RepeatEvent from './Renderers/RepeatEvent';\nimport WhileEvent from './Renderers/WhileEvent';\nimport LinkEvent from './Renderers/LinkEvent';\nimport JsCodeEvent from './Renderers/JsCodeEvent';\n\nexport default {\n  components: {\n    unknownEvent: UnknownEvent,\n    'BuiltinCommonInstructions::Standard': StandardEvent,\n    'BuiltinCommonInstructions::Group': GroupEvent,\n    'BuiltinCommonInstructions::Comment': CommentEvent,\n    'BuiltinCommonInstructions::ForEach': ForEachEvent,\n    'BuiltinCommonInstructions::Repeat': RepeatEvent,\n    'BuiltinCommonInstructions::While': WhileEvent,\n    'BuiltinCommonInstructions::Link': LinkEvent,\n    'BuiltinCommonInstructions::JsCode': JsCodeEvent,\n  },\n  getEventComponent: function(event) {\n    if (this.components.hasOwnProperty(event.getType()))\n      return this.components[event.getType()];\n    else return this.components.unknownEvent;\n  },\n  registerEvent: function(eventType, renderFunction) {\n    if (!this.components.hasOwnProperty(eventType)) {\n      console.warn(\n        'Tried to register renderer for events \"' +\n          eventType +\n          '\", but a renderer already exists.'\n      );\n      return;\n    }\n\n    this.components[eventType] = renderFunction;\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport MUIList from '@material-ui/core/List';\nimport MUIListItem from '@material-ui/core/ListItem';\nimport MUIListItemIcon from '@material-ui/core/ListItemIcon';\nimport MUIListItemText from '@material-ui/core/ListItemText';\nimport MUIListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport IconButton from '@material-ui/core/IconButton';\nimport Refresh from '@material-ui/icons/Refresh';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport Remove from '@material-ui/icons/Remove';\nimport ElementWithMenu from './Menu/ElementWithMenu';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Add from '@material-ui/icons/Add';\nimport Search from '@material-ui/icons/Search';\n\nconst useDenseLists = true;\nexport const listItemWith32PxIconHeight = 40;\nexport const listItemWithoutIconHeight = 37;\n\ntype DoubleClickMouseEvent = {| button: 0 | 1 | 2 |};\n\n// Support for a bunch of different secondary actions\ntype ListItemRightButtonProps =\n  | {|\n      displayReloadButton: boolean,\n      reloadButtonTooltip: string,\n      onReload: () => void,\n    |}\n  | {|\n      displayMenuButton: boolean,\n      buildMenuTemplate: () => Array<any>,\n    |}\n  | {|\n      displayLinkButton: boolean,\n      onOpenLink: () => void,\n    |}\n  | {|\n      displayRemoveButton: true,\n      onRemove: () => void,\n    |}\n  | {|\n      displayAddIcon: true,\n    |}\n  | {|\n      displaySearchIcon: true,\n    |}\n  | {||};\n\n// We support a subset of the props supported by Material-UI v0.x ListItem\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype ListItemProps = {|\n  onClick?: () => void,\n  onDoubleClick?: (event: DoubleClickMouseEvent) => void,\n  primaryText: ?React.Node,\n  secondaryText?: React.Node,\n  selected?: boolean,\n  autoGenerateNestedIndicator?: boolean, // TODO: Rename?\n  renderNestedItems?: () => Array<React$Element<any> | null>,\n  open?: boolean,\n  initiallyOpen?: boolean,\n  disabled?: boolean,\n\n  nestedListStyle?: {|\n    padding: 0,\n  |},\n\n  style?: {|\n    color?: string,\n    backgroundColor?: string,\n    borderBottom?: string,\n    opacity?: number,\n  |},\n\n  leftIcon?: React.Node,\n  ...ListItemRightButtonProps,\n\n  secondaryTextLines?: 1 | 2,\n|};\n\ntype ListItemState = {|\n  isOpen: boolean,\n|};\n\n/**\n * A ListItem to be used in a List.\n *\n * Also used outside of a List by virtualized lists.\n */\nexport class ListItem extends React.Component<ListItemProps, ListItemState> {\n  state = {\n    isOpen: !!this.props.initiallyOpen,\n  };\n  _elementWithMenu: ?ElementWithMenu;\n\n  _renderListItemSecondaryAction = () => {\n    const { props } = this;\n    if (props.displayReloadButton) {\n      return (\n        <MUIListItemSecondaryAction>\n          <Tooltip title={props.reloadButtonTooltip}>\n            <IconButton edge=\"end\" aria-label=\"reload\" onClick={props.onReload}>\n              <Refresh />\n            </IconButton>\n          </Tooltip>\n        </MUIListItemSecondaryAction>\n      );\n    }\n    if (props.buildMenuTemplate) {\n      return props.displayMenuButton ? (\n        <MUIListItemSecondaryAction>\n          <ElementWithMenu\n            ref={elementWithMenu => (this._elementWithMenu = elementWithMenu)}\n            element={\n              <IconButton edge=\"end\" aria-label=\"menu\">\n                <MoreVert />\n              </IconButton>\n            }\n            buildMenuTemplate={props.buildMenuTemplate}\n          />\n        </MUIListItemSecondaryAction>\n      ) : (\n        <ElementWithMenu\n          ref={elementWithMenu => (this._elementWithMenu = elementWithMenu)}\n          element={\n            <div /> /* We still need a dummy div for context menu placement */\n          }\n          buildMenuTemplate={props.buildMenuTemplate}\n        />\n      );\n    }\n    if (props.displayLinkButton) {\n      return (\n        <MUIListItemSecondaryAction>\n          <IconButton\n            edge=\"end\"\n            aria-label=\"open link\"\n            onClick={props.onOpenLink}\n          >\n            <OpenInNew />\n          </IconButton>\n        </MUIListItemSecondaryAction>\n      );\n    }\n    if (props.displayRemoveButton) {\n      return (\n        <MUIListItemSecondaryAction>\n          <IconButton edge=\"end\" aria-label=\"remove\" onClick={props.onRemove}>\n            <Remove />\n          </IconButton>\n        </MUIListItemSecondaryAction>\n      );\n    }\n\n    return null;\n  };\n\n  _openContextMenu = (event: any) => {\n    if (this._elementWithMenu) {\n      this._elementWithMenu.open(event);\n    }\n  };\n\n  render() {\n    const { props, state } = this;\n    const { renderNestedItems } = props;\n\n    if (!renderNestedItems) {\n      return (\n        <MUIListItem\n          button\n          dense={useDenseLists}\n          disableRipple\n          ContainerComponent={\n            'div' /* Otherwise, when ListItemSecondaryAction is defined, we would get a li, that is not playing well in virtualized list, that are using ListItem without List */\n          }\n          onClick={props.onClick}\n          onDoubleClick={props.onDoubleClick}\n          disabled={props.disabled}\n          selected={props.selected}\n          style={props.style}\n          onContextMenu={\n            props.buildMenuTemplate ? this._openContextMenu : undefined\n          }\n          alignItems={props.secondaryTextLines === 2 ? 'flex-start' : undefined}\n        >\n          {props.leftIcon && (\n            <MUIListItemIcon>{props.leftIcon}</MUIListItemIcon>\n          )}\n          <MUIListItemText\n            primary={props.primaryText}\n            secondary={props.secondaryText}\n          />\n          {this._renderListItemSecondaryAction()}\n          {props.displayAddIcon && <Add />}\n          {props.displaySearchIcon && <Search />}\n        </MUIListItem>\n      );\n    } else {\n      const isOpen = props.open === undefined ? state.isOpen : props.open;\n      return (\n        <React.Fragment>\n          <MUIListItem\n            button\n            dense={useDenseLists}\n            disableRipple\n            onClick={() => {\n              this.setState(state => ({ isOpen: !state.isOpen }));\n              if (props.onClick) {\n                props.onClick();\n              }\n            }}\n            disabled={props.disabled}\n            style={props.style}\n          >\n            {props.leftIcon && (\n              <MUIListItemIcon>{props.leftIcon}</MUIListItemIcon>\n            )}\n            <MUIListItemText\n              primary={props.primaryText}\n              secondary={props.secondaryText}\n            />\n            {props.autoGenerateNestedIndicator ? (\n              isOpen ? (\n                <ExpandLess />\n              ) : (\n                <ExpandMore />\n              )\n            ) : null}\n            {this._renderListItemSecondaryAction()}\n          </MUIListItem>\n          {isOpen && (\n            <MUIList\n              component=\"div\"\n              disablePadding\n              style={{\n                paddingLeft: 16,\n                ...props.nestedListStyle,\n              }}\n              dense={useDenseLists}\n            >\n              {renderNestedItems()}\n            </MUIList>\n          )}\n        </React.Fragment>\n      );\n    }\n  }\n}\n\n// We support a subset of the props supported by Material-UI v0.x List\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype ListProps = {|\n  children: React.Node,\n  style?: {|\n    overflowY?: 'scroll',\n    flex?: 1,\n    padding?: number,\n  |},\n|};\n\n/**\n * List based on Material-UI List.\n */\nexport class List extends React.Component<ListProps, {||}> {\n  render() {\n    return (\n      <MUIList style={this.props.style} dense={useDenseLists}>\n        {this.props.children}\n      </MUIList>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport TextField from '../UI/TextField';\nimport FlatButton from '../UI/FlatButton';\nimport Window from '../Utils/Window';\nimport { List, ListItem } from '../UI/List';\nimport { Column } from '../UI/Grid';\nimport algoliasearch from 'algoliasearch/lite';\nimport debounce from 'lodash/debounce';\nimport Text from '../UI/Text';\n\nconst styles = {\n  dropdownMenuContainer: {\n    maxHeight: 300,\n    overflowY: 'scroll',\n  },\n};\n\ntype Props = {|\n  onChange: string => void,\n  value: string,\n|};\n\ntype AlgoliaResult = {|\n  content: string,\n  url: string,\n  hierarchy: {|\n    lvl0: ?string,\n    lvl1: ?string,\n    lvl2: ?string,\n    lvl3: ?string,\n    lvl4: ?string,\n    lvl5: ?string,\n    lvl6: ?string,\n  |},\n  objectID: string,\n|};\n\ntype State = {|\n  results: ?Array<AlgoliaResult>,\n  error: ?Error,\n|};\n\nconst indexName = 'gdevelop';\nconst appId = 'BH4D9OD16A';\nconst apiKey = '69c73fc1a710bb79543d4b91f6b81c08';\nconst algoliaOptions = { hitsPerPage: 5 };\n\nexport default class DocSearchArea extends React.Component<Props, State> {\n  // $FlowFixMe\n  client = algoliasearch(appId, apiKey, algoliaOptions);\n  state = {\n    results: null,\n    error: null,\n  };\n\n  _handleSearchTextChange = (searchText: string) => {\n    this.props.onChange(searchText);\n  };\n\n  _launchSearchRequest = debounce(() => {\n    if (this.props.value) {\n      this.client\n        // $FlowFixMe\n        .search([\n          {\n            indexName: indexName,\n            query: this.props.value,\n            params: algoliaOptions,\n          },\n        ])\n        .then(\n          data => {\n            let hits = data.results[0].hits;\n            console.log(hits);\n\n            this.setState({\n              results: hits,\n              error: null,\n            });\n          },\n          error => {\n            this.setState({\n              error,\n            });\n          }\n        );\n    }\n  }, 200);\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.value !== this.props.value && this.props.value) {\n      this._launchSearchRequest();\n    }\n  }\n\n  _renderResult = (result: AlgoliaResult) => {\n    const primaryText =\n      result.hierarchy.lvl0 ||\n      result.hierarchy.lvl1 ||\n      result.hierarchy.lvl2 ||\n      result.hierarchy.lvl3 ||\n      result.hierarchy.lvl4 ||\n      result.hierarchy.lvl5 ||\n      result.hierarchy.lvl6;\n\n    const secondaryText = [\n      result.hierarchy.lvl0,\n      result.hierarchy.lvl1,\n      result.hierarchy.lvl2,\n      result.hierarchy.lvl3,\n      result.hierarchy.lvl4,\n      result.hierarchy.lvl5,\n      result.hierarchy.lvl6,\n    ]\n      .filter(text => !!text)\n      .filter(text => text !== primaryText)\n      .join(' - ')\n      .replace(/&quot;/g, '\"');\n\n    return (\n      <ListItem\n        key={result.objectID}\n        primaryText={primaryText}\n        secondaryText={result.content || secondaryText}\n        secondaryTextLines={2}\n        onClick={() => {\n          Window.openExternalURL(result.url);\n        }}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <TextField\n          id={'help-finder-search-bar'}\n          fullWidth\n          hintText={t`Enter what you want to build.`}\n          value={this.props.value}\n          onChange={(e, text) => this.props.onChange(text)}\n        />\n        <div\n          id=\"help-finder-dropdown-menu-container\"\n          className=\"algolia-autocomplete\"\n          style={{\n            ...styles.dropdownMenuContainer,\n            visibility: !this.props.value ? 'hidden' : undefined,\n          }}\n        />\n        {this.state.error ? (\n          <Text>\n            <Trans>\n              Unable to search in the documentation. Are you sure you are online\n              and have a proper internet connection?\n            </Trans>\n          </Text>\n        ) : this.state.results ? (\n          <List>\n            {this.state.results.map(result => this._renderResult(result))}\n          </List>\n        ) : (\n          <React.Fragment>\n            <Text>\n              <Trans>Examples:</Trans>\n            </Text>\n            <Column expand>\n              <Text>\n                Coins in platformer\n                <br />\n                Export on Android\n                <br />\n                Add a score\n                <br />\n                Move enemies\n                <br />\n                ...\n                <br />\n              </Text>\n            </Column>\n          </React.Fragment>\n        )}\n        <Text align=\"right\">\n          This search is powered by{' '}\n          <FlatButton\n            onClick={() => Window.openExternalURL('http://algolia.com/')}\n            label={'Algolia'}\n          />\n        </Text>\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport Window from '../Utils/Window';\nimport DocSearchArea from './DocSearchArea';\nimport debounce from 'lodash/debounce';\nimport {\n  sendHelpFinderOpened,\n  sendHelpSearch,\n} from '../Utils/Analytics/EventSender';\n\ntype Props = {|\n  open: boolean,\n  onClose: () => void,\n|};\n\ntype State = {|\n  searchText: string,\n|};\n\nexport default class HelpFinder extends React.PureComponent<Props, State> {\n  state = {\n    searchText: '',\n  };\n\n  componentWillReceiveProps(newProps: Props) {\n    if (newProps.open && !this.props.open) {\n      sendHelpFinderOpened();\n    }\n  }\n\n  _handleSearchTextChange = (searchText: string) => {\n    this.setState({\n      searchText,\n    });\n    this._sendHelpSearch();\n  };\n\n  _sendHelpSearch = debounce(() => {\n    if (this.state.searchText) sendHelpSearch(this.state.searchText.trim());\n  }, 2900);\n\n  render() {\n    const { open, onClose } = this.props;\n\n    return (\n      <Dialog\n        title={<Trans>Help!</Trans>}\n        onRequestClose={onClose}\n        actions={[\n          <FlatButton\n            label={<Trans>Close</Trans>}\n            key=\"close\"\n            primary={false}\n            onClick={onClose}\n          />,\n        ]}\n        secondaryActions={[\n          <FlatButton\n            key=\"forum\"\n            primary={false}\n            onClick={() => {\n              Window.openExternalURL('https://forum.gdevelop-app.com');\n            }}\n            label={<Trans>Community forum</Trans>}\n          />,\n          <FlatButton\n            key=\"wiki\"\n            primary={false}\n            onClick={() => {\n              Window.openExternalURL(\n                'http://wiki.compilgames.net/doku.php/gdevelop5/start'\n              );\n            }}\n            label={<Trans>Wiki</Trans>}\n          />,\n        ]}\n        open={open}\n      >\n        <DocSearchArea\n          value={this.state.searchText}\n          onChange={this._handleSearchTextChange}\n        />\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { AutoSizer } from 'react-virtualized';\nimport SortableVirtualizedItemList from '../UI/SortableVirtualizedItemList';\nimport SearchBar from '../UI/SearchBar';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport Background from '../UI/Background';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport {\n  enumerateEventsBasedBehaviors,\n  filterEventsBasedBehaviorsList,\n} from './EnumerateEventsBasedBehaviors';\nimport Clipboard from '../Utils/Clipboard';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\n\nconst EVENTS_BASED_BEHAVIOR_CLIPBOARD_KIND = 'Events Based Behavior';\n\nconst styles = {\n  listContainer: {\n    flex: 1,\n  },\n};\n\ntype State = {|\n  renamedEventsBasedBehavior: ?gdEventsBasedBehavior,\n  searchText: string,\n|};\n\nconst getEventsBasedBehaviorName = (\n  eventsBasedBehavior: gdEventsBasedBehavior\n) => eventsBasedBehavior.getName();\n\ntype Props = {|\n  project: gdProject,\n  eventsBasedBehaviorsList: gdEventsBasedBehaviorsList,\n  selectedEventsBasedBehavior: ?gdEventsBasedBehavior,\n  onSelectEventsBasedBehavior: (\n    eventsBasedBehavior: ?gdEventsBasedBehavior\n  ) => void,\n  onDeleteEventsBasedBehavior: (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    cb: (boolean) => void\n  ) => void,\n  onRenameEventsBasedBehavior: (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    newName: string,\n    cb: (boolean) => void\n  ) => void,\n  onEventsBasedBehaviorRenamed: (\n    eventsBasedBehavior: gdEventsBasedBehavior\n  ) => void,\n  onEditProperties: (eventsBasedBehavior: gdEventsBasedBehavior) => void,\n|};\n\nexport default class EventsBasedBehaviorsList extends React.Component<\n  Props,\n  State\n> {\n  static defaultProps = {\n    onDeleteEventsBasedBehavior: (\n      eventsBasedBehavior: gdEventsBasedBehavior,\n      cb: boolean => void\n    ) => cb(true),\n    onRenameEventsBasedBehavior: (\n      eventsBasedBehavior: gdEventsBasedBehavior,\n      newName: string,\n      cb: boolean => void\n    ) => cb(true),\n  };\n\n  sortableList: ?SortableVirtualizedItemList<gdEventsFunction>;\n  state: State = {\n    renamedEventsBasedBehavior: null,\n    searchText: '',\n  };\n\n  _deleteEventsBasedBehavior = (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    { askForConfirmation }: {| askForConfirmation: boolean |}\n  ) => {\n    const { eventsBasedBehaviorsList } = this.props;\n\n    if (askForConfirmation) {\n      //eslint-disable-next-line\n      const answer = confirm(\n        \"Are you sure you want to remove this behavior? This can't be undone.\"\n      );\n      if (!answer) return;\n    }\n\n    this.props.onDeleteEventsBasedBehavior(eventsBasedBehavior, doRemove => {\n      if (!doRemove) return;\n\n      eventsBasedBehaviorsList.remove(eventsBasedBehavior.getName());\n      this.forceUpdate();\n    });\n  };\n\n  _editName = (renamedEventsBasedBehavior: ?gdEventsBasedBehavior) => {\n    this.setState(\n      {\n        renamedEventsBasedBehavior,\n      },\n      () => {\n        if (this.sortableList) this.sortableList.forceUpdateGrid();\n      }\n    );\n  };\n\n  _rename = (eventsBasedBehavior: gdEventsBasedBehavior, newName: string) => {\n    const { eventsBasedBehaviorsList } = this.props;\n    this.setState({\n      renamedEventsBasedBehavior: null,\n    });\n\n    if (eventsBasedBehavior.getName() === newName) return;\n\n    if (eventsBasedBehaviorsList.has(newName)) {\n      showWarningBox('Another behavior with this name already exists.');\n      return;\n    }\n\n    this.props.onRenameEventsBasedBehavior(\n      eventsBasedBehavior,\n      newName,\n      doRename => {\n        if (!doRename) return;\n        eventsBasedBehavior.setName(newName);\n        this.forceUpdate();\n        this.props.onEventsBasedBehaviorRenamed(eventsBasedBehavior);\n      }\n    );\n  };\n\n  _moveSelectionTo = (\n    destinationEventsBasedBehavior: gdEventsBasedBehavior\n  ) => {\n    const {\n      eventsBasedBehaviorsList,\n      selectedEventsBasedBehavior,\n    } = this.props;\n    if (!selectedEventsBasedBehavior) return;\n\n    eventsBasedBehaviorsList.move(\n      eventsBasedBehaviorsList.getPosition(selectedEventsBasedBehavior),\n      eventsBasedBehaviorsList.getPosition(destinationEventsBasedBehavior)\n    );\n\n    this.forceUpdateList();\n  };\n\n  forceUpdateList = () => {\n    this.forceUpdate();\n    if (this.sortableList) this.sortableList.forceUpdateGrid();\n  };\n\n  _copyEventsBasedBehavior = (eventsBasedBehavior: gdEventsBasedBehavior) => {\n    Clipboard.set(EVENTS_BASED_BEHAVIOR_CLIPBOARD_KIND, {\n      eventsBasedBehavior: serializeToJSObject(eventsBasedBehavior),\n      name: eventsBasedBehavior.getName(),\n    });\n  };\n\n  _cutEventsBasedBehavior = (eventsBasedBehavior: gdEventsBasedBehavior) => {\n    this._copyEventsBasedBehavior(eventsBasedBehavior);\n    this._deleteEventsBasedBehavior(eventsBasedBehavior, {\n      askForConfirmation: false,\n    });\n  };\n\n  _pasteEventsBasedBehavior = (index: number) => {\n    if (!Clipboard.has(EVENTS_BASED_BEHAVIOR_CLIPBOARD_KIND)) return;\n\n    const {\n      eventsBasedBehavior: copiedEventsBasedBehavior,\n      name,\n    } = Clipboard.get(EVENTS_BASED_BEHAVIOR_CLIPBOARD_KIND);\n    const { project, eventsBasedBehaviorsList } = this.props;\n\n    const newName = newNameGenerator(name, name =>\n      eventsBasedBehaviorsList.has(name)\n    );\n\n    const newEventsBasedBehavior = eventsBasedBehaviorsList.insertNew(\n      newName,\n      index\n    );\n\n    unserializeFromJSObject(\n      newEventsBasedBehavior,\n      copiedEventsBasedBehavior,\n      'unserializeFrom',\n      project\n    );\n    newEventsBasedBehavior.setName(newName);\n\n    this.forceUpdate();\n  };\n\n  _renderEventsBasedBehaviorMenuTemplate = (\n    eventsBasedBehavior: gdEventsBasedBehavior,\n    index: number\n  ) => {\n    return [\n      {\n        label: 'Properties',\n        click: () => this.props.onEditProperties(eventsBasedBehavior),\n      },\n      {\n        type: 'separator',\n      },\n      {\n        label: 'Rename',\n        click: () => this._editName(eventsBasedBehavior),\n      },\n      {\n        label: 'Remove',\n        click: () =>\n          this._deleteEventsBasedBehavior(eventsBasedBehavior, {\n            askForConfirmation: true,\n          }),\n      },\n      {\n        type: 'separator',\n      },\n      {\n        label: 'Copy',\n        click: () => this._copyEventsBasedBehavior(eventsBasedBehavior),\n      },\n      {\n        label: 'Cut',\n        click: () => this._cutEventsBasedBehavior(eventsBasedBehavior),\n      },\n      {\n        label: 'Paste',\n        enabled: Clipboard.has(EVENTS_BASED_BEHAVIOR_CLIPBOARD_KIND),\n        click: () => this._pasteEventsBasedBehavior(index),\n      },\n    ];\n  };\n\n  _addNewEventsBasedBehavior = () => {\n    const { eventsBasedBehaviorsList } = this.props;\n\n    const name = newNameGenerator('MyBehavior', name =>\n      eventsBasedBehaviorsList.has(name)\n    );\n    eventsBasedBehaviorsList.insertNew(\n      name,\n      eventsBasedBehaviorsList.getCount()\n    );\n    this.forceUpdate();\n  };\n\n  render() {\n    const {\n      project,\n      eventsBasedBehaviorsList,\n      selectedEventsBasedBehavior,\n      onSelectEventsBasedBehavior,\n    } = this.props;\n    const { searchText } = this.state;\n\n    const list = filterEventsBasedBehaviorsList(\n      enumerateEventsBasedBehaviors(eventsBasedBehaviorsList),\n      searchText\n    );\n\n    // Force List component to be mounted again if project or eventsBasedBehaviorsList\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const listKey = project.ptr + ';' + eventsBasedBehaviorsList.ptr;\n\n    return (\n      <Background>\n        <div style={styles.listContainer}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <SortableVirtualizedItemList\n                key={listKey}\n                ref={sortableList => (this.sortableList = sortableList)}\n                fullList={list}\n                width={width}\n                height={height}\n                onAddNewItem={this._addNewEventsBasedBehavior}\n                addNewItemLabel={<Trans>Add a new behavior</Trans>}\n                getItemName={getEventsBasedBehaviorName}\n                selectedItems={\n                  selectedEventsBasedBehavior\n                    ? [selectedEventsBasedBehavior]\n                    : []\n                }\n                onItemSelected={onSelectEventsBasedBehavior}\n                renamedItem={this.state.renamedEventsBasedBehavior}\n                onRename={this._rename}\n                onMoveSelectionToItem={this._moveSelectionTo}\n                buildMenuTemplate={this._renderEventsBasedBehaviorMenuTemplate}\n                reactDndType=\"GD_EVENTS_BASED_BEHAVIOR\"\n              />\n            )}\n          </AutoSizer>\n        </div>\n        <SearchBar\n          value={searchText}\n          onRequestSearch={() => {}}\n          onChange={text =>\n            this.setState({\n              searchText: text,\n            })\n          }\n        />\n      </Background>\n    );\n  }\n}\n","//@flow\nimport { mapVector } from '../Utils/MapFor';\n\nexport const enumerateEventsBasedBehaviors = (\n  eventsFunctionsContainer: gdEventsBasedBehaviorsList\n): Array<gdEventsBasedBehavior> =>\n  mapVector(\n    eventsFunctionsContainer,\n    eventsBasedBehavior => eventsBasedBehavior\n  );\n\nexport const filterEventsBasedBehaviorsList = (\n  list: Array<gdEventsBasedBehavior>,\n  searchText: string\n): Array<gdEventsBasedBehavior> => {\n  if (!searchText) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list.filter(\n    (item: any) =>\n      item\n        .getName()\n        .toLowerCase()\n        .indexOf(lowercaseSearchText) !== -1\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { AutoSizer } from 'react-virtualized';\nimport SortableVirtualizedItemList from '../UI/SortableVirtualizedItemList';\nimport SearchBar from '../UI/SearchBar';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport Background from '../UI/Background';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport {\n  enumerateEventsFunctions,\n  filterEventFunctionsList,\n} from './EnumerateEventsFunctions';\nimport Clipboard from '../Utils/Clipboard';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\n\nconst EVENTS_FUNCTION_CLIPBOARD_KIND = 'Events Function';\n\nconst styles = {\n  listContainer: {\n    flex: 1,\n  },\n};\n\nconst getEventsFunctionName = (eventsFunction: gdEventsFunction) =>\n  eventsFunction.getName();\n\ntype State = {|\n  renamedEventsFunction: ?gdEventsFunction,\n  searchText: string,\n|};\n\ntype Props = {|\n  project: gdProject,\n  eventsFunctionsContainer: gdEventsFunctionsContainer,\n  selectedEventsFunction: ?gdEventsFunction,\n  onSelectEventsFunction: (eventsFunction: ?gdEventsFunction) => void,\n  onDeleteEventsFunction: (\n    eventsFunction: gdEventsFunction,\n    cb: (boolean) => void\n  ) => void,\n  canRename: (eventsFunction: gdEventsFunction) => boolean,\n  onRenameEventsFunction: (\n    eventsFunction: gdEventsFunction,\n    newName: string,\n    cb: (boolean) => void\n  ) => void,\n  onAddEventsFunction: ((doAdd: boolean, name: ?string) => void) => void,\n  onEventsFunctionAdded: (eventsFunction: gdEventsFunction) => void,\n  renderHeader?: () => React.Node,\n|};\n\nexport default class EventsFunctionsList extends React.Component<Props, State> {\n  static defaultProps = {\n    onDeleteEventsFunction: (\n      eventsFunction: gdEventsFunction,\n      cb: boolean => void\n    ) => cb(true),\n    onRenameEventsFunction: (\n      eventsFunction: gdEventsFunction,\n      newName: string,\n      cb: boolean => void\n    ) => cb(true),\n  };\n\n  sortableList: any;\n  state: State = {\n    renamedEventsFunction: null,\n    searchText: '',\n  };\n\n  _deleteEventsFunction = (\n    eventsFunction: gdEventsFunction,\n    { askForConfirmation }: {| askForConfirmation: boolean |}\n  ) => {\n    const { eventsFunctionsContainer } = this.props;\n\n    if (askForConfirmation) {\n      //eslint-disable-next-line\n      const answer = confirm(\n        \"Are you sure you want to remove this function? This can't be undone.\"\n      );\n      if (!answer) return;\n    }\n\n    this.props.onDeleteEventsFunction(eventsFunction, doRemove => {\n      if (!doRemove) return;\n\n      eventsFunctionsContainer.removeEventsFunction(eventsFunction.getName());\n      this.forceUpdate();\n    });\n  };\n\n  _editName = (eventsFunction: ?gdEventsFunction) => {\n    this.setState(\n      {\n        renamedEventsFunction: eventsFunction,\n      },\n      () => {\n        if (this.sortableList) this.sortableList.forceUpdateGrid();\n      }\n    );\n  };\n\n  _rename = (eventsFunction: gdEventsFunction, newName: string) => {\n    const { eventsFunctionsContainer } = this.props;\n    this.setState({\n      renamedEventsFunction: null,\n    });\n\n    if (eventsFunction.getName() === newName) return;\n\n    if (eventsFunctionsContainer.hasEventsFunctionNamed(newName)) {\n      showWarningBox('Another function with this name already exists.');\n      return;\n    }\n\n    this.props.onRenameEventsFunction(eventsFunction, newName, doRename => {\n      if (!doRename) return;\n      eventsFunction.setName(newName);\n      this.forceUpdate();\n    });\n  };\n\n  _moveSelectionTo = (destinationEventsFunction: gdEventsFunction) => {\n    const { eventsFunctionsContainer, selectedEventsFunction } = this.props;\n    if (!selectedEventsFunction) return;\n\n    eventsFunctionsContainer.moveEventsFunction(\n      eventsFunctionsContainer.getEventsFunctionPosition(\n        selectedEventsFunction\n      ),\n      eventsFunctionsContainer.getEventsFunctionPosition(\n        destinationEventsFunction\n      )\n    );\n\n    this.forceUpdateList();\n  };\n\n  forceUpdateList = () => {\n    this.forceUpdate();\n    if (this.sortableList) this.sortableList.forceUpdateGrid();\n  };\n\n  _copyEventsFunction = (eventsFunction: gdEventsFunction) => {\n    Clipboard.set(EVENTS_FUNCTION_CLIPBOARD_KIND, {\n      eventsFunction: serializeToJSObject(eventsFunction),\n      name: eventsFunction.getName(),\n    });\n  };\n\n  _cutEventsFunction = (eventsFunction: gdEventsFunction) => {\n    this._copyEventsFunction(eventsFunction);\n    this._deleteEventsFunction(eventsFunction, { askForConfirmation: false });\n  };\n\n  _pasteEventsFunction = (index: number) => {\n    if (!Clipboard.has(EVENTS_FUNCTION_CLIPBOARD_KIND)) return;\n\n    const { eventsFunction: copiedEventsFunction, name } = Clipboard.get(\n      EVENTS_FUNCTION_CLIPBOARD_KIND\n    );\n    const { project, eventsFunctionsContainer } = this.props;\n\n    const newName = newNameGenerator(name, name =>\n      eventsFunctionsContainer.hasEventsFunctionNamed(name)\n    );\n\n    const newEventsFunction = eventsFunctionsContainer.insertNewEventsFunction(\n      newName,\n      index\n    );\n\n    unserializeFromJSObject(\n      newEventsFunction,\n      copiedEventsFunction,\n      'unserializeFrom',\n      project\n    );\n    newEventsFunction.setName(newName);\n    this.props.onEventsFunctionAdded(newEventsFunction);\n\n    this.forceUpdate();\n  };\n\n  _renderEventsFunctionMenuTemplate = (\n    eventsFunction: gdEventsFunction,\n    index: number\n  ) => {\n    return [\n      {\n        label: 'Rename',\n        click: () => this._editName(eventsFunction),\n        enabled: this.props.canRename(eventsFunction),\n      },\n      {\n        label: 'Remove',\n        click: () =>\n          this._deleteEventsFunction(eventsFunction, {\n            askForConfirmation: true,\n          }),\n      },\n      {\n        type: 'separator',\n      },\n      {\n        label: 'Copy',\n        click: () => this._copyEventsFunction(eventsFunction),\n      },\n      {\n        label: 'Cut',\n        click: () => this._cutEventsFunction(eventsFunction),\n      },\n      {\n        label: 'Paste',\n        enabled: Clipboard.has(EVENTS_FUNCTION_CLIPBOARD_KIND),\n        click: () => this._pasteEventsFunction(index),\n      },\n    ];\n  };\n\n  _addNewEventsFunction = () => {\n    const { eventsFunctionsContainer } = this.props;\n\n    this.props.onAddEventsFunction((doAdd: boolean, name: ?string) => {\n      if (!doAdd) {\n        return;\n      }\n\n      const eventsFunctionName =\n        name ||\n        newNameGenerator('Function', name =>\n          eventsFunctionsContainer.hasEventsFunctionNamed(name)\n        );\n\n      const eventsFunction = eventsFunctionsContainer.insertNewEventsFunction(\n        eventsFunctionName,\n        eventsFunctionsContainer.getEventsFunctionsCount()\n      );\n      this.props.onEventsFunctionAdded(eventsFunction);\n      this.forceUpdate();\n    });\n  };\n\n  render() {\n    const {\n      project,\n      eventsFunctionsContainer,\n      selectedEventsFunction,\n      onSelectEventsFunction,\n      renderHeader,\n    } = this.props;\n    const { searchText } = this.state;\n\n    const list = filterEventFunctionsList(\n      enumerateEventsFunctions(eventsFunctionsContainer),\n      searchText\n    );\n\n    // Force List component to be mounted again if project or objectsContainer\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const listKey = project.ptr + ';' + eventsFunctionsContainer.ptr;\n\n    return (\n      <Background>\n        {renderHeader ? renderHeader() : null}\n        <div style={styles.listContainer}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <SortableVirtualizedItemList\n                key={listKey}\n                ref={sortableList => (this.sortableList = sortableList)}\n                fullList={list}\n                width={width}\n                height={height}\n                onAddNewItem={this._addNewEventsFunction}\n                addNewItemLabel={<Trans>Add a new function</Trans>}\n                getItemName={getEventsFunctionName}\n                selectedItems={\n                  selectedEventsFunction ? [selectedEventsFunction] : []\n                }\n                onItemSelected={onSelectEventsFunction}\n                renamedItem={this.state.renamedEventsFunction}\n                onRename={this._rename}\n                onMoveSelectionToItem={this._moveSelectionTo}\n                buildMenuTemplate={this._renderEventsFunctionMenuTemplate}\n                reactDndType=\"GD_EVENTS_FUNCTION\"\n              />\n            )}\n          </AutoSizer>\n        </div>\n        <SearchBar\n          value={searchText}\n          onRequestSearch={() => {}}\n          onChange={text =>\n            this.setState({\n              searchText: text,\n            })\n          }\n        />\n      </Background>\n    );\n  }\n}\n","//@flow\nimport { mapFor } from '../Utils/MapFor';\n\nexport const enumerateEventsFunctions = (\n  eventsFunctionsContainer: gdEventsFunctionsExtension\n): Array<gdEventsFunction> =>\n  mapFor(0, eventsFunctionsContainer.getEventsFunctionsCount(), i =>\n    eventsFunctionsContainer.getEventsFunctionAt(i)\n  );\n\nexport const filterEventFunctionsList = (\n  list: Array<gdEventsFunction>,\n  searchText: string\n): Array<gdEventsFunction> => {\n  if (!searchText) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list.filter(\n    (item: any) =>\n      item\n        .getName()\n        .toLowerCase()\n        .indexOf(lowercaseSearchText) !== -1\n  );\n};\n","//@flow\nimport { findGDJS } from '../GameEngineFinder/LocalGDJSFinder';\nimport optionalRequire from '../Utils/OptionalRequire';\nconst fs = optionalRequire('fs');\nconst path = optionalRequire('path');\n\n// TODO: Replace the reading into files by an automatic generation of a .d.ts\n// using TypeScript from the game engine sources, and have a script integrate the .d.ts\n// into newIDE sources\nexport const setupAutocompletions = (monaco: any) => {\n  const importAllJsFilesFromFolder = (folderPath: string) =>\n    fs.readdir(folderPath, (error: ?Error, filenames: Array<string>) => {\n      if (error) {\n        console.error(\n          'Unable to read GDJS files for setting up autocompletions:',\n          error\n        );\n        return;\n      }\n\n      filenames.forEach(filename => {\n        if (filename.endsWith('.js')) {\n          const fullPath = path.join(folderPath, filename);\n          fs.readFile(fullPath, 'utf8', (fileError, content) => {\n            if (fileError) {\n              console.error(\n                `Unable to read ${fullPath} for setting up autocompletions:`,\n                fileError\n              );\n              return;\n            }\n\n            monaco.languages.typescript.javascriptDefaults.addExtraLib(\n              content,\n              fullPath\n            );\n          });\n        }\n      });\n    });\n\n  findGDJS().then(({ gdjsRoot }) => {\n    const runtimePath = path.join(gdjsRoot, 'Runtime');\n    const extensionsPath = path.join(runtimePath, 'Extensions');\n    const eventToolsPath = path.join(runtimePath, 'events-tools');\n\n    importAllJsFilesFromFolder(runtimePath);\n    importAllJsFilesFromFolder(eventToolsPath);\n    fs.readdir(extensionsPath, (error: ?Error, folderNames: Array<string>) => {\n      if (error) {\n        console.error(\n          'Unable to read Extensions folders for setting up autocompletions:',\n          error\n        );\n        return;\n      }\n\n      folderNames\n        .filter(\n          folderName =>\n            !folderName.endsWith('.txt') &&\n            !folderName.endsWith('.md') &&\n            !folderName.endsWith('.gitignore')\n        )\n        .forEach(folderName =>\n          importAllJsFilesFromFolder(path.join(extensionsPath, folderName))\n        );\n    });\n\n    monaco.languages.typescript.javascriptDefaults.addExtraLib(\n      `\n/** Represents the scene being played. */\nvar runtimeScene = new gdjs.RuntimeScene();\n\n/** The instances of objects that are passed to your JavaScript function.\n * @type {gdjs.RuntimeObject[]}\n */\nvar objects = new gdjs.RuntimeScene();\n\n/**\n * Get the list of instances of the specified object.\n *\n * @callback GetObjectsFunction\n * @param {string} objectName The name of the object for which instances must be returned.\n * @return {gdjs.RuntimeObject[]} Instances of the specified object.\n */\n\n/**\n * Get the Hashtable containing the lists of instances of the specified object.\n *\n * You can alter the list and this will alter the objects picked for the next conditions/actions/events.\n * If you don't need this, prefer using \\`getObjects\\`.\n *\n * @callback GetObjectsListsFunction\n * @param {string} objectName The name of the object for which instances must be returned.\n * @return {?Hashtable} Hashtable containing the lists of instances (keys are object names in the current context), or \\`null\\` if not found\n */\n\n/**\n * Create a new object from its name. The object is added to the instances\n * living on the scene.\n *\n * @callback CreateObjectFunction\n * @param {string} objectName The name of the object to be created\n * @return {gdjs.RuntimeObject} The created object\n */\n\n/**\n * Get the \"real\" behavior name, that can be used with \\`getBehavior\\`. For example:\n * \\`object.getBehavior(eventsFunctionContext.getBehaviorName(\"MyBehavior\"))\\`\n *\n * @callback GetBehaviorNameFunction\n * @param {string} behaviorName The name of the behavior, as specified in the parameters of the function.\n * @return {string} The name that can be passed to \\`getBehavior\\`.\n */\n\n/**\n * Get the value (string or number) of an argument that was passed to the events function.\n * To get objects, use \\`getObjects\\`.\n *\n * @callback GetArgumentFunction\n * @param {string} argumentName The name of the argument, as specified in the parameters of the function.\n * @return {string|number} The string or number passed for this argument\n */\n\n/** Represents the context of the events function (or the behavior method),\n * if any. If the JS code is running in a scene, this will be undefined (so you can't use this in a scene).\n *\n * @type {?{getObjects: GetObjectsFunction, getObjectsLists: GetObjectsListsFunction, getBehaviorName: GetBehaviorNameFunction, createObject: CreateObjectFunction, getArgument: GetArgumentFunction, returnValue: boolean | number | string}}\n */\nvar eventsFunctionContext = {};\n`,\n      'this-mock-the-context-of-events.js'\n    );\n  });\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { setupAutocompletions } from './LocalCodeEditorAutocompletions';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport RaisedButton from '../UI/RaisedButton';\nimport Text from '../UI/Text';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport { getAllThemes } from './Theme';\n\nexport type State = {|\n  MonacoEditor: ?any,\n  error: ?Error,\n|};\nexport type Props = {|\n  value: string,\n  onChange: string => void,\n  width: number,\n  onEditorMounted?: () => void,\n|};\n\nconst monacoEditorOptions = {\n  scrollBeyondLastLine: false,\n  minimap: {\n    enabled: false,\n  },\n};\n\n// There is only a single instance of monaco living, keep track\n// of if its initialized or not.\nlet monacoCompletionsInitialized = false;\nlet monacoThemesInitialized = false;\n\nexport class CodeEditor extends React.Component<Props, State> {\n  state = {\n    MonacoEditor: null,\n    error: null,\n  };\n\n  setupEditorThemes = (monaco: any) => {\n    if (!monacoThemesInitialized) {\n      monacoThemesInitialized = true;\n\n      getAllThemes().forEach(codeEditorTheme => {\n        // Builtin themes don't have themeData, don't redefine them.\n        if (codeEditorTheme.themeData) {\n          monaco.editor.defineTheme(\n            codeEditorTheme.themeName,\n            codeEditorTheme.themeData\n          );\n        }\n      });\n    }\n  };\n\n  setupEditorCompletions = (editor: any, monaco: any) => {\n    if (!monacoCompletionsInitialized) {\n      monacoCompletionsInitialized = true;\n\n      monaco.languages.typescript.javascriptDefaults.setCompilerOptions({\n        // noLib: true,\n        target: monaco.languages.typescript.ScriptTarget.ES6,\n        allowNonTsExtensions: true,\n        allowJs: true,\n        checkJs: true,\n      });\n      setupAutocompletions(monaco);\n    }\n\n    if (this.props.onEditorMounted) this.props.onEditorMounted();\n  };\n\n  componentDidMount() {\n    this.loadMonacoEditor();\n  }\n\n  handleLoadError(error: Error) {\n    this.setState({\n      error,\n    });\n  }\n\n  loadMonacoEditor() {\n    this.setState({\n      error: null,\n    });\n    import(/* webpackChunkName: \"react-monaco-editor\" */ 'react-monaco-editor')\n      .then(module =>\n        this.setState({\n          MonacoEditor: module.default,\n        })\n      )\n      .catch(this.handleLoadError);\n  }\n\n  _handleContextMenu = (event: SyntheticEvent<>) => {\n    // Prevent right click to bubble up and trigger the context menu\n    // of the event.\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  render() {\n    const { MonacoEditor, error } = this.state;\n    if (error) {\n      return (\n        <React.Fragment>\n          <Text>\n            <Trans>Unable to load the code editor</Trans>\n          </Text>\n          <RaisedButton\n            label={<Trans>Retry</Trans>}\n            onClick={this.loadMonacoEditor}\n          />\n        </React.Fragment>\n      );\n    }\n\n    if (!MonacoEditor) {\n      return <PlaceholderLoader />;\n    }\n\n    return (\n      <div onContextMenu={this._handleContextMenu}>\n        <PreferencesContext.Consumer>\n          {({ values }) => (\n            <MonacoEditor\n              width={this.props.width || 600}\n              height=\"400\"\n              language=\"javascript\"\n              theme={values.codeEditorThemeName}\n              value={this.props.value}\n              onChange={this.props.onChange}\n              editorWillMount={this.setupEditorThemes}\n              editorDidMount={this.setupEditorCompletions}\n              options={monacoEditorOptions}\n            />\n          )}\n        </PreferencesContext.Consumer>\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type EventsScope } from '../../EventsScope.flow';\nimport * as React from 'react';\nimport { mapFor } from '../../../Utils/MapFor';\nimport EmptyMessage from '../../../UI/EmptyMessage';\n\nexport type ParameterValues = Array<string>;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  project?: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  expressionMetadata: gdExpressionMetadata,\n  parameterValues: ParameterValues,\n  onChangeParameter: (index: number, value: string) => void,\n  parameterRenderingService?: {\n    components: any,\n    getParameterComponent: (type: string) => any,\n  },\n|};\ntype State = {||};\n\nexport default class ExpressionParametersEditor extends React.Component<\n  Props,\n  State\n> {\n  static getNonCodeOnlyParametersCount(\n    expressionMetadata: gdExpressionMetadata\n  ) {\n    return mapFor(0, expressionMetadata.getParametersCount(), i => {\n      const parameterMetadata = expressionMetadata.getParameter(i);\n      return !parameterMetadata.isCodeOnly();\n    }).filter(isVisible => isVisible).length;\n  }\n\n  render() {\n    const {\n      expressionMetadata,\n      parameterValues,\n      project,\n      scope,\n      globalObjectsContainer,\n      objectsContainer,\n      parameterRenderingService,\n    } = this.props;\n\n    if (!parameterRenderingService) {\n      console.error(\n        'Missing parameterRenderingService for ExpressionParametersEditor'\n      );\n      return null;\n    }\n\n    // Create an object mimicking Instruction interface so that it can be used by\n    // ParameterFields components.\n    const parametersCount = expressionMetadata.getParametersCount();\n    const expression = {\n      getParametersCount: () => parametersCount,\n      getParameter: index => {\n        return parameterValues[index] || '';\n      },\n    };\n\n    return (\n      <div style={styles.container}>\n        {mapFor(0, expressionMetadata.getParametersCount(), i => {\n          const parameterMetadata = expressionMetadata.getParameter(i);\n          const ParameterComponent = parameterRenderingService.getParameterComponent(\n            parameterMetadata.getType()\n          );\n\n          if (parameterMetadata.isCodeOnly()) return null;\n          return (\n            <ParameterComponent\n              expressionMetadata={expressionMetadata}\n              expression={expression}\n              parameterMetadata={parameterMetadata}\n              parameterIndex={i}\n              value={parameterValues[i]}\n              onChange={value => this.props.onChangeParameter(i, value)}\n              project={project}\n              scope={scope}\n              globalObjectsContainer={globalObjectsContainer}\n              objectsContainer={objectsContainer}\n              key={i}\n              parameterRenderingService={parameterRenderingService}\n            />\n          );\n        })}\n        {ExpressionParametersEditor.getNonCodeOnlyParametersCount(\n          expressionMetadata\n        ) === 0 && (\n          <EmptyMessage>\n            <Trans>There is nothing to configure.</Trans>\n          </EmptyMessage>\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { type EventsScope } from '../../EventsScope.flow';\nimport React, { Component } from 'react';\nimport FlatButton from '../../../UI/FlatButton';\nimport ExpressionParametersEditor from './ExpressionParametersEditor';\nimport Dialog from '../../../UI/Dialog';\nimport { Column } from '../../../UI/Grid';\n\nexport type ParameterValues = Array<string>;\n\nconst styles = {\n  minHeightContainer: {\n    // Use a minimum height that is large enough so that ExpressionSelector in\n    // GenericExpressionField can fit and display entirely.\n    minHeight: 300,\n    flex: 1,\n    flexDirection: 'column',\n  },\n};\n\ntype Props = {\n  project?: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  expressionMetadata: gdExpressionMetadata,\n  onDone: ParameterValues => void,\n  onRequestClose: () => void,\n  parameterRenderingService?: {\n    components: any,\n    getParameterComponent: (type: string) => any,\n  },\n};\n\ntype State = {\n  parameterValues: ParameterValues,\n};\n\nexport default class ExpressionParametersEditorDialog extends Component<\n  Props,\n  State\n> {\n  state = {\n    parameterValues: Array(\n      this.props.expressionMetadata.getParametersCount()\n    ).fill(''),\n  };\n\n  render() {\n    const {\n      project,\n      scope,\n      globalObjectsContainer,\n      objectsContainer,\n      expressionMetadata,\n      parameterRenderingService,\n    } = this.props;\n\n    return (\n      <Dialog\n        title={<Trans>Enter the expression parameters</Trans>}\n        open\n        actions={\n          <FlatButton\n            key=\"apply\"\n            label={<Trans>Apply</Trans>}\n            primary\n            onClick={() => this.props.onDone(this.state.parameterValues)}\n          />\n        }\n        modal\n        noMargin\n        onRequestClose={this.props.onRequestClose}\n      >\n        <Column>\n          <div style={styles.minHeightContainer}>\n            <ExpressionParametersEditor\n              project={project}\n              scope={scope}\n              globalObjectsContainer={globalObjectsContainer}\n              objectsContainer={objectsContainer}\n              expressionMetadata={expressionMetadata}\n              parameterValues={this.state.parameterValues}\n              onChangeParameter={(editedIndex, value) => {\n                this.setState({\n                  parameterValues: this.state.parameterValues.map(\n                    (oldValue, index) =>\n                      index === editedIndex ? value : oldValue\n                  ),\n                });\n              }}\n              parameterRenderingService={parameterRenderingService}\n            />\n          </div>\n        </Column>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { useEffect, useRef } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport Dialog from '../UI/Dialog';\nimport { type UserProfile } from './UserProfileContext';\nimport { Column, Line, Spacer } from '../UI/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport BackgroundText from '../UI/BackgroundText';\nimport VerifiedUser from '@material-ui/icons/VerifiedUser';\nimport Text from '../UI/Text';\n\ntype Props = {|\n  onClose: Function,\n  userProfile: UserProfile,\n|};\n\nfunction useInterval(callback: () => void, delay: number | null) {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(\n    () => {\n      function tick() {\n        if (savedCallback.current) savedCallback.current();\n      }\n\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    },\n    [delay]\n  );\n}\n\nexport default function SubscriptionPendingDialog({\n  onClose,\n  userProfile,\n}: Props) {\n  const hasPlan =\n    !!userProfile &&\n    !!userProfile.subscription &&\n    !!userProfile.subscription.planId;\n  useInterval(() => userProfile.onRefreshUserProfile(), hasPlan ? null : 3900);\n\n  return (\n    <Dialog\n      actions={[\n        hasPlan ? (\n          <RaisedButton\n            label={<Trans>Done!</Trans>}\n            key=\"close\"\n            primary\n            onClick={onClose}\n          />\n        ) : (\n          <FlatButton\n            label={<Trans>Cancel and close</Trans>}\n            key=\"close\"\n            primary={false}\n            onClick={onClose}\n          />\n        ),\n      ]}\n      title={undefined}\n      maxWidth=\"sm\"\n      open\n      noMargin\n    >\n      {!hasPlan && (\n        <Column>\n          <Line>\n            <Text>\n              <Trans>\n                Thanks for getting a subscription and supporting GDevelop!\n              </Trans>{' '}\n              {'❤️'}\n              <b>\n                <Trans>\n                  Your browser will now open to enter your payment details\n                  (handled securely by Stripe.com).\n                </Trans>\n              </b>\n            </Text>\n          </Line>\n          <Line justifyContent=\"center\" alignItems=\"center\">\n            <CircularProgress size={20} />\n            <Spacer />\n            <Text>Waiting for the subscription confirmation...</Text>\n          </Line>\n          <Spacer />\n          <Line justifyContent=\"center\">\n            <BackgroundText>\n              <Trans>\n                Once you're done, come back to GDevelop and your account will be\n                upgraded automatically, unlocking the extra exports and online\n                services.\n              </Trans>\n            </BackgroundText>\n          </Line>\n        </Column>\n      )}\n      {hasPlan && (\n        <Column>\n          <Line>\n            <Text>\n              <Trans>\n                Thanks for getting a subscription and supporting GDevelop!\n              </Trans>{' '}\n              {'❤️'}\n            </Text>\n          </Line>\n          <Line justifyContent=\"center\" alignItems=\"center\">\n            <VerifiedUser />\n            <Spacer />\n            <Text>\n              <b>\n                <Trans>Your new plan is now activated</Trans>\n              </b>\n            </Text>\n          </Line>\n          <Spacer />\n          <Line justifyContent=\"center\">\n            <BackgroundText>\n              <Trans>\n                Your account is upgraded, with the extra exports and online\n                services. If you wish to change later, come back to your profile\n                and choose another plan.\n              </Trans>\n            </BackgroundText>\n          </Line>\n        </Column>\n      )}\n    </Dialog>\n  );\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport UserProfileContext, { type UserProfile } from './UserProfileContext';\nimport { Column, Line } from '../UI/Grid';\nimport {\n  getSubscriptionPlans,\n  type PlanDetails,\n  changeUserSubscription,\n  getRedirectToCheckoutUrl,\n} from '../Utils/GDevelopServices/Usage';\nimport RaisedButton from '../UI/RaisedButton';\nimport CheckCircle from '@material-ui/icons/CheckCircle';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport { showMessageBox, showErrorBox } from '../UI/Messages/MessageBox';\nimport LeftLoader from '../UI/LeftLoader';\nimport PlaceholderMessage from '../UI/PlaceholderMessage';\nimport {\n  sendSubscriptionDialogShown,\n  sendChoosePlanClicked,\n} from '../Utils/Analytics/EventSender';\nimport SubscriptionPendingDialog from './SubscriptionPendingDialog';\nimport Window from '../Utils/Window';\nimport Text from '../UI/Text';\n\nconst styles = {\n  descriptionText: {\n    marginLeft: 16,\n    marginRight: 16,\n    marginTop: 8,\n    marginBottom: 8,\n  },\n  card: {\n    margin: 16,\n  },\n  actions: {\n    textAlign: 'right',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  bulletIcon: { width: 20, height: 20, marginLeft: 5, marginRight: 10 },\n  bulletText: { flex: 1 },\n};\n\ntype Props = {|\n  open: boolean,\n  onClose: Function,\n|};\n\ntype State = {|\n  isLoading: boolean,\n  subscriptionPendingDialogOpen: boolean,\n|};\n\nexport default class SubscriptionDialog extends React.Component<Props, State> {\n  state = { isLoading: false, subscriptionPendingDialogOpen: false };\n\n  componentDidMount() {\n    if (this.props.open) {\n      sendSubscriptionDialogShown();\n    }\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (!this.props.open && newProps.open) {\n      sendSubscriptionDialogShown();\n    }\n  }\n\n  choosePlan = (\n    i18n: I18nType,\n    userProfile: UserProfile,\n    plan: PlanDetails\n  ) => {\n    const { getAuthorizationHeader, subscription, profile } = userProfile;\n    if (!profile || !subscription) return;\n    sendChoosePlanClicked(plan.planId);\n\n    if (subscription.stripeSubscriptionId) {\n      //eslint-disable-next-line\n      const answer = confirm(\n        plan.planId\n          ? i18n._(t`Are you sure you want to subscribe to this new plan?`)\n          : i18n._(t`Are you sure you want to cancel your subscription?`)\n      );\n      if (!answer) return;\n\n      // We already have a stripe customer, change the subscription without\n      // asking for the user card.\n      this.setState({ isLoading: true });\n      changeUserSubscription(getAuthorizationHeader, profile.uid, {\n        planId: plan.planId,\n      }).then(\n        () => this.handleUpdatedSubscriptionSuccess(i18n, userProfile, plan),\n        (err: Error) => this.handleUpdatedSubscriptionFailure(i18n, err)\n      );\n    } else {\n      this.setState({\n        subscriptionPendingDialogOpen: true,\n      });\n      Window.openExternalURL(\n        getRedirectToCheckoutUrl(\n          plan.planId || '',\n          profile.uid,\n          profile.email || ''\n        )\n      );\n    }\n  };\n\n  handleUpdatedSubscriptionSuccess = (\n    i18n: I18nType,\n    userProfile: UserProfile,\n    plan: PlanDetails\n  ) => {\n    userProfile.onRefreshUserProfile();\n    this.setState({ isLoading: false });\n    if (plan.planId) {\n      showMessageBox(\n        i18n._(\n          t`Congratulations, your new subscription is now active!\\n\\nYou can now use the services unlocked with this plan.`\n        )\n      );\n    } else {\n      showMessageBox(\n        i18n._(\n          t`Your subscription was properly cancelled. Sorry to see you go!`\n        )\n      );\n    }\n  };\n\n  handleUpdatedSubscriptionFailure = (i18n: I18nType, err: Error) => {\n    this.setState({ isLoading: false });\n    showErrorBox(\n      i18n._(\n        t`Your subscription could not be updated. Please try again later!`\n      ),\n      err\n    );\n  };\n\n  _renderPrice(plan: PlanDetails): React.Node {\n    return !plan.monthlyPriceInEuros ? (\n      <Trans>Free</Trans>\n    ) : (\n      <Trans>{plan.monthlyPriceInEuros}€/month</Trans>\n    );\n  }\n\n  _isLoading = (userProfile: UserProfile) =>\n    !userProfile.subscription || !userProfile.profile || this.state.isLoading;\n\n  render() {\n    const { open, onClose } = this.props;\n    const { subscriptionPendingDialogOpen } = this.state;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <UserProfileContext.Consumer>\n            {(userProfile: UserProfile) => (\n              <Dialog\n                actions={[\n                  <FlatButton\n                    label={<Trans>Close</Trans>}\n                    key=\"close\"\n                    primary={false}\n                    onClick={onClose}\n                  />,\n                ]}\n                onRequestClose={onClose}\n                open={open}\n                noMargin\n              >\n                <Column>\n                  <Line>\n                    <Text>\n                      <Trans>\n                        Get a subscription to package your games for Android,\n                        Windows, macOS and Linux, use live preview over wifi and\n                        more. With a subscription, you're also supporting the\n                        development of GDevelop, which is an open-source\n                        software.\n                      </Trans>\n                    </Text>\n                  </Line>\n                </Column>\n                {getSubscriptionPlans().map(plan => (\n                  <Card key={plan.planId || ''} style={styles.card}>\n                    <CardHeader\n                      title={\n                        <span>\n                          <b>{plan.name}</b> - {this._renderPrice(plan)}\n                        </span>\n                      }\n                      subheader={\n                        plan.smallDescription\n                          ? i18n._(plan.smallDescription)\n                          : ''\n                      }\n                    />\n                    <CardContent>\n                      {plan.descriptionBullets.map(\n                        (descriptionBullet, index) => (\n                          <Column key={index} expand>\n                            <Line noMargin alignItems=\"center\">\n                              <CheckCircle style={styles.bulletIcon} />\n                              <Text style={styles.bulletText}>\n                                {i18n._(descriptionBullet.message)}{' '}\n                                {descriptionBullet.isLocalAppOnly && (\n                                  <Trans>(on the desktop app only)</Trans>\n                                )}\n                              </Text>\n                            </Line>\n                          </Column>\n                        )\n                      )}\n                      <Text style={styles.descriptionText}>\n                        {plan.extraDescription\n                          ? i18n._(plan.extraDescription)\n                          : ''}\n                      </Text>\n                    </CardContent>\n                    <CardActions style={styles.actions}>\n                      {userProfile.subscription &&\n                      userProfile.subscription.planId === plan.planId ? (\n                        <FlatButton\n                          disabled\n                          label={<Trans>This is your current plan</Trans>}\n                          onClick={() =>\n                            this.choosePlan(i18n, userProfile, plan)\n                          }\n                        />\n                      ) : plan.planId ? (\n                        <LeftLoader isLoading={this._isLoading(userProfile)}>\n                          <RaisedButton\n                            primary\n                            disabled={this._isLoading(userProfile)}\n                            label={<Trans>Choose this plan</Trans>}\n                            onClick={() =>\n                              this.choosePlan(i18n, userProfile, plan)\n                            }\n                          />\n                        </LeftLoader>\n                      ) : (\n                        <LeftLoader isLoading={this._isLoading(userProfile)}>\n                          <FlatButton\n                            disabled={this._isLoading(userProfile)}\n                            label={<Trans>Cancel your subscription</Trans>}\n                            onClick={() =>\n                              this.choosePlan(i18n, userProfile, plan)\n                            }\n                          />\n                        </LeftLoader>\n                      )}\n                    </CardActions>\n                  </Card>\n                ))}\n                <Column>\n                  <Line>\n                    <EmptyMessage>\n                      <Trans>\n                        Subscriptions can be stopped at any time. GDevelop uses\n                        Stripe.com for secure payment. No credit card data is\n                        stored by GDevelop: everything is managed by Stripe\n                        secure infrastructure.\n                      </Trans>\n                    </EmptyMessage>\n                  </Line>\n                </Column>\n                {!userProfile.authenticated && (\n                  <PlaceholderMessage>\n                    <Text>\n                      <Trans>\n                        Create a GDevelop account to continue. It's free and\n                        you'll be able to access to online services like\n                        one-click build for Android:\n                      </Trans>\n                    </Text>\n                    <RaisedButton\n                      label={<Trans>Create my account</Trans>}\n                      primary\n                      onClick={userProfile.onLogin}\n                    />\n                    <FlatButton\n                      label={<Trans>Not now, thanks</Trans>}\n                      onClick={onClose}\n                    />\n                  </PlaceholderMessage>\n                )}\n                {subscriptionPendingDialogOpen && (\n                  <SubscriptionPendingDialog\n                    userProfile={userProfile}\n                    onClose={() => {\n                      this.setState(\n                        {\n                          subscriptionPendingDialogOpen: false,\n                        },\n                        () => userProfile.onRefreshUserProfile()\n                      );\n                    }}\n                  />\n                )}\n              </Dialog>\n            )}\n          </UserProfileContext.Consumer>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport Changelog from '.';\nimport Text from '../../UI/Text';\n\ntype Props = {|\n  open: boolean,\n  onClose: () => void,\n|};\n\ntype State = {||};\n\nexport default class ChangelogDialog extends React.Component<Props, State> {\n  render() {\n    const { open, onClose } = this.props;\n    if (!open) {\n      // Don't render anything, to avoid in particular sending useless requests.\n      return null;\n    }\n\n    const actions = [\n      <FlatButton\n        key=\"close\"\n        label={<Trans>Close</Trans>}\n        primary={true}\n        onClick={onClose}\n      />,\n    ];\n\n    return (\n      <Dialog\n        title={<Trans>What's new in GDevelop?</Trans>}\n        actions={actions}\n        open={open}\n        onRequestClose={onClose}\n        modal\n      >\n        <Text>\n          <Trans>\n            GDevelop was upgraded to a new version! Check out the changes.\n          </Trans>\n        </Text>\n        <Changelog\n          onUpdated={() => {\n            this.forceUpdate(); /*Force update to ensure dialog is properly positionned*/\n          }}\n        />\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ChangelogDialog from './ChangelogDialog';\nimport PreferencesContext from '../Preferences/PreferencesContext';\n\ntype ContainerProps = {|\n  defaultOpen: boolean,\n|};\n\ntype ContainerState = {|\n  open: boolean,\n|};\n\nclass ChangelogDialogContainer extends React.Component<\n  ContainerProps,\n  ContainerState\n> {\n  state = {\n    open: this.props.defaultOpen,\n  };\n\n  render() {\n    const { open } = this.state;\n    return (\n      <ChangelogDialog\n        open={open}\n        onClose={() =>\n          this.setState({\n            open: false,\n          })\n        }\n      />\n    );\n  }\n}\n\n/**\n * The container showing the ChangelogDialog only if a a new version\n * of GDevelop is detected.\n */\nexport default (props: {||}) => (\n  <PreferencesContext.Consumer>\n    {({ values, verifyIfIsNewVersion }) => (\n      <ChangelogDialogContainer\n        defaultOpen={verifyIfIsNewVersion() && values.autoDisplayChangelog}\n      />\n    )}\n  </PreferencesContext.Consumer>\n);\n","// @flow\nimport * as React from 'react';\nimport MUIIconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { I18n } from '@lingui/react';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport { adaptAcceleratorString } from '../UI/AcceleratorString';\n\ntype IconProps =\n  | {|\n      children: React.Node,\n    |}\n  // Support a few specific icons from iconmoon-font.css\n  | {|\n      className: 'icon-twitter' | 'icon-facebook',\n    |};\n\n// We support a subset of the props supported by Material-UI v0.x IconButton\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  ...IconProps,\n  onClick?: () => void,\n  disabled?: boolean,\n\n  style?: {|\n    padding?: number,\n    width?: number,\n    height?: number,\n    transform?: string,\n    transition?: string,\n    opacity?: number,\n    margin?: number,\n    marginRight?: number,\n    marginLeft?: number,\n    marginTop?: number,\n    marginBottom?: number,\n  |},\n  size?: 'small',\n\n  tooltip?: MessageDescriptor,\n  acceleratorString?: string,\n|};\n\n/**\n * A button showing just an icon, based on Material-UI icon button.\n * Supports displaying a tooltip.\n */\nexport default class IconButton extends React.Component<Props, {||}> {\n  render() {\n    const { tooltip, acceleratorString, ...otherProps } = this.props;\n    const iconButton = <MUIIconButton {...otherProps} />;\n\n    return tooltip && !this.props.disabled ? (\n      <I18n>\n        {({ i18n }) => (\n          <Tooltip\n            title={\n              i18n._(tooltip) +\n              (acceleratorString\n                ? ' ' + adaptAcceleratorString(acceleratorString)\n                : '')\n            }\n            placement=\"bottom\"\n            enterDelay={300}\n          >\n            {iconButton}\n          </Tooltip>\n        )}\n      </I18n>\n    ) : (\n      iconButton\n    );\n  }\n}\n","// @flow\nimport { isMacLike, isMobile } from '../Utils/Platform';\n\nexport const adaptAcceleratorString = (accelerator: string): string => {\n  if (isMobile()) {\n    return ''; // Do not display accelerators on mobile devices\n  } else if (isMacLike()) {\n    return accelerator\n      .replace(/CmdOrCtrl\\+/, '⌘')\n      .replace(/CommandOrControl\\+/, '⌘')\n      .replace(/Super\\+/, '⌘')\n      .replace(/Shift\\+/, '⇧')\n      .replace(/Alt\\+/, '⌥')\n      .replace(/Option\\+/, '⌥')\n      .replace(/Delete/, '⌦')\n      .replace(/Backspace/, '⌫');\n  } else {\n    return accelerator\n      .replace(/CmdOrCtrl\\+/, 'Ctrl+')\n      .replace(/CommandOrControl\\+/, 'Ctrl+')\n      .replace(/Super\\+/, 'Win+')\n      .replace(/Option\\+/, 'Alt+')\n      .replace(/Delete/, 'DEL');\n  }\n};\n","// @flow\nimport * as React from 'react';\nimport TextField from './TextField';\n\ntype State = {|\n  focused: boolean,\n  text: ?any,\n|};\n\ntype Props = {|\n  onChange: string => void,\n  value: string,\n  commitOnBlur?: boolean,\n  onFocus?: ({\n    currentTarget: {\n      value: string,\n    },\n    preventDefault: () => void,\n  }) => void,\n  onBlur?: ({\n    currentTarget: {\n      value: string,\n    },\n  }) => void,\n  type?: 'text' | 'number',\n\n  // Some TextField props that can be reused:\n  margin?: 'none' | 'dense',\n  disabled?: boolean,\n  errorText?: React.Node,\n  floatingLabelFixed?: boolean,\n  floatingLabelText?: React.Node,\n  fullWidth?: boolean,\n  hintText?: React.Node,\n  helperMarkdownText?: React.Node,\n  id?: string,\n  inputStyle?: Object,\n  max?: number,\n  min?: number,\n  multiLine?: boolean,\n  name?: string,\n  step?: number,\n  style?: Object,\n  rows?: number,\n  rowsMax?: number,\n  autoFocus?: boolean,\n|};\n\n/**\n * This component works like a material-ui TextField, except that\n * the value passed as props is not forced into the text field when the user\n * is typing. This is useful if the parent component can do modifications on the value:\n * the user won't be interrupted or have the value changed until he blurs the field.\n */\nexport default class SemiControlledTextField extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    focused: false,\n    text: null,\n  };\n\n  _field: ?TextField = null;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  getInputNode() {\n    if (this._field) return this._field.getInputNode();\n  }\n\n  render() {\n    const {\n      value,\n      onChange,\n      commitOnBlur,\n      onFocus,\n      onBlur,\n      type,\n      ...otherProps\n    } = this.props;\n\n    return (\n      // $FlowFixMe\n      <TextField\n        {...otherProps}\n        type={type || 'text'}\n        ref={field => (this._field = field)}\n        value={this.state.focused ? this.state.text : value}\n        onFocus={event => {\n          this.setState({\n            focused: true,\n            text: this.props.value,\n          });\n\n          if (onFocus) onFocus(event);\n        }}\n        onChange={(event, newValue) => {\n          this.setState({\n            text: newValue,\n          });\n\n          if (!commitOnBlur) onChange(newValue);\n        }}\n        onBlur={event => {\n          onChange(event.currentTarget.value);\n          this.setState({\n            focused: false,\n            text: null,\n          });\n\n          if (onBlur) onBlur(event);\n        }}\n      />\n    );\n  }\n}\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\n\nclass UrlsCache {\n  projectCache = {};\n\n  _getProjectCache(project: gdProject) {\n    const cache = this.projectCache[project.ptr];\n    if (!cache) {\n      return (this.projectCache[project.ptr] = {});\n    }\n\n    return cache;\n  }\n\n  getCachedUrl(project: gdProject, filename: string) {\n    const cache = this._getProjectCache(project);\n    return cache[filename];\n  }\n\n  cacheUrl(project: gdProject, url: string) {\n    const cache = this._getProjectCache(project);\n    return (cache[url] = url);\n  }\n\n  burstUrl(project: gdProject, url: string) {\n    const cache = this._getProjectCache(project);\n    delete cache[url];\n  }\n\n  cacheLocalFileUrl(\n    project: gdProject,\n    filename: string,\n    systemFilename: string,\n    disableCacheBurst: boolean\n  ) {\n    const cache = this._getProjectCache(project);\n\n    if (!disableCacheBurst) {\n      // The URL is cached with an extra \"cache-bursting\" parameter.\n      // If the cache is emptied or changed, local files will have another\n      // value for this parameter, forcing the browser to reload the images.\n      return (cache[filename] = `${systemFilename}?cache=${Date.now()}`);\n    } else {\n      return (cache[filename] = systemFilename);\n    }\n  }\n}\n\n/**\n * A class globally used in the whole IDE to get URLs to resources of games\n * (notably images).\n */\nexport default class ResourcesLoader {\n  static _cache = new UrlsCache();\n\n  static _isLocalFile(filename: string): boolean {\n    return (\n      filename.indexOf('data:') !== 0 &&\n      filename.indexOf('http://') !== 0 &&\n      filename.indexOf('https://') !== 0 &&\n      filename.indexOf('ftp://') !== 0\n    );\n  }\n\n  /**\n   * Remove the specified resources resolved URLs from the cache. Useful if the\n   * file represented by these resources has changed. This force these local files to be loaded again.\n   */\n  static burstUrlsCacheForResources(\n    project: gdProject,\n    resourcesNames: Array<string>\n  ) {\n    const resourcesManager = project.getResourcesManager();\n    resourcesNames.forEach(resourceName => {\n      if (resourcesManager.hasResource(resourceName)) {\n        ResourcesLoader._cache.burstUrl(\n          project,\n          resourcesManager.getResource(resourceName).getFile()\n        );\n      }\n    });\n  }\n\n  /**\n   * Re-create a new cache for URLs. Call this to force local\n   * file to be loaded again.\n   */\n  static burstAllUrlsCache() {\n    ResourcesLoader._cache = new UrlsCache();\n  }\n\n  /**\n   * Get the fully qualified URL/filename for a URL/filename relative to the project.\n   */\n  static getFullUrl(\n    project: gdProject,\n    filename: string,\n    disableCacheBurst: boolean = false\n  ) {\n    const cachedUrl = ResourcesLoader._cache.getCachedUrl(project, filename);\n    if (cachedUrl) return cachedUrl;\n\n    if (electron && ResourcesLoader._isLocalFile(filename)) {\n      // Support local filesystem with Electron\n      const file = project.getProjectFile();\n      const projectPath = path.dirname(file);\n      const resourceAbsolutePath = path\n        .resolve(projectPath, filename)\n        .replace(/\\\\/g, '/');\n\n      console.info('Caching resolved local filename:', resourceAbsolutePath);\n      return this._cache.cacheLocalFileUrl(\n        project,\n        filename,\n        'file://' + resourceAbsolutePath,\n        disableCacheBurst\n      );\n    }\n\n    // URLs to non local files are unchanged\n    return this._cache.cacheUrl(project, filename);\n  }\n\n  /**\n   * Get the fully qualified URL/filename associated with the given resource.\n   */\n  static getResourceFullUrl(\n    project: gdProject,\n    resourceName: string,\n    disableCacheBurst: boolean = false\n  ) {\n    if (project.getResourcesManager().hasResource(resourceName)) {\n      const resourceRelativePath = project\n        .getResourcesManager()\n        .getResource(resourceName)\n        .getFile();\n      return ResourcesLoader.getFullUrl(\n        project,\n        resourceRelativePath,\n        disableCacheBurst\n      );\n    }\n\n    return resourceName;\n  }\n}\n","// @flow\n\nconst gd = global.gd;\n\n/**\n * Tool function to save a serializable object to a JS object.\n * Most gd.* objects are \"serializable\", meaning they have a serializeTo\n * and unserializeFrom method.\n *\n * @param {*} serializable\n * @param {*} methodName The name of the serialization method. \"unserializeFrom\" by default\n */\nexport function serializeToJSObject(\n  serializable: gdSerializable,\n  methodName: string = 'serializeTo'\n) {\n  const serializedElement = new gd.SerializerElement();\n  serializable[methodName](serializedElement);\n  const object = JSON.parse(gd.Serializer.toJSON(serializedElement));\n  serializedElement.delete();\n\n  return object;\n}\n\n/**\n * Tool function to save a serializable object to a JSON.\n * Most gd.* objects are \"serializable\", meaning they have a serializeTo\n * and unserializeFrom method.\n *\n * @param {*} serializable\n * @param {*} methodName The name of the serialization method. \"unserializeFrom\" by default\n */\nexport function serializeToJSON(\n  serializable: gdSerializable,\n  methodName: string = 'serializeTo'\n): string {\n  const serializedElement = new gd.SerializerElement();\n  serializable[methodName](serializedElement);\n\n  return gd.Serializer.toJSON(serializedElement);\n}\n\n/**\n * Tool function to restore a serializable object from a JS object.\n * Most gd.* objects are \"serializable\", meaning they have a serializeTo\n * and unserializeFrom method.\n * @param {*} serializable A gd.* object to restore\n * @param {*} object The JS object to be used to restore the serializable.\n * @param {*} methodName The name of the unserialization method. \"unserializeFrom\" by default\n * @param {*} optionalProject The project to pass as argument for unserialization\n */\nexport function unserializeFromJSObject(\n  serializable: gdSerializable,\n  object: Object,\n  methodName: string = 'unserializeFrom',\n  optionalProject: ?gdProject = undefined\n) {\n  const serializedElement = gd.Serializer.fromJSObject(object);\n  if (!optionalProject) {\n    serializable[methodName](serializedElement);\n  } else {\n    // It's not uncommon for unserializeFrom methods of gd.* classes\n    // to require the project to be passed as first argument.\n    serializable[methodName](optionalProject, serializedElement);\n  }\n  serializedElement.delete();\n}\n","// @flow\nimport * as React from 'react';\nimport FlatButton from '../FlatButton';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport Window from '../../Utils/Window';\nimport { getHelpLink } from '../../Utils/HelpLink';\nimport { Trans } from '@lingui/macro';\n\ntype PropsType = {\n  helpPagePath: ?string,\n  label?: React.Node,\n};\n\n/**\n * The button that can be used in any dialog to open a help page\n */\nconst HelpButton = (props: PropsType) => {\n  if (!props.helpPagePath) return null;\n\n  return (\n    <FlatButton\n      onClick={() => {\n        if (props.helpPagePath) {\n          Window.openExternalURL(getHelpLink(props.helpPagePath));\n        }\n      }}\n      target=\"_blank\"\n      label={props.label || <Trans>Help</Trans>}\n      icon={<HelpOutline />}\n    />\n  );\n};\n\nexport default HelpButton;\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { I18n } from '@lingui/react';\nimport TextField from '@material-ui/core/TextField';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport { computeTextFieldStyleProps } from './TextField';\nimport { MarkdownText } from './MarkdownText';\n\ntype ValueProps = {|\n  value: number | string,\n  // event and index should not be used, and be removed eventually\n  onChange?: (\n    event: {| target: {| value: string |} |},\n    index: number,\n    text: string // Note that even for number values, a string is returned\n  ) => void,\n|};\n\n// We support a subset of the props supported by Material-UI v0.x SelectField\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  ...ValueProps,\n  fullWidth?: boolean,\n  children: React.Node,\n  disabled?: boolean,\n\n  style?: {\n    flex?: 1,\n    width?: 'auto',\n  },\n  margin?: 'none' | 'dense',\n\n  floatingLabelText?: React.Node,\n  helperMarkdownText?: ?string,\n\n  // If a hint text is specified, will be shown as an option for the empty\n  // value (\"\"), disabled.\n  hintText?: MessageDescriptor,\n|};\n\nconst INVALID_VALUE = '';\n\n/**\n * A select field based on Material-UI select field.\n * To be used with `SelectOption`.\n */\nexport default class SelectField extends React.Component<Props, {||}> {\n  _input = React.createRef<HTMLInputElement>();\n\n  focus() {\n    if (this._input.current) this._input.current.focus();\n  }\n\n  render() {\n    const { props } = this;\n    const onChange = props.onChange || undefined;\n\n    // Dig into children props to see if the current value is valid or not.\n    let hasValidValue = true;\n    const childrenValues = React.Children.map(props.children, child => {\n      if (child === null || !child.props) return null;\n\n      return child.props.value;\n    });\n    if (!childrenValues) {\n      console.error(\n        'SelectField has been passed no or invalid children. Only SelectOption and null are supported.'\n      );\n    } else {\n      hasValidValue =\n        childrenValues.filter(childValue => childValue === props.value)\n          .length !== 0;\n    }\n    const displayedValue = hasValidValue ? props.value : INVALID_VALUE;\n\n    const helperText = props.helperMarkdownText ? (\n      <MarkdownText source={props.helperMarkdownText} />\n    ) : null;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <TextField\n            select\n            {...computeTextFieldStyleProps(props)}\n            disabled={props.disabled}\n            fullWidth={props.fullWidth}\n            label={props.floatingLabelText}\n            helperText={helperText}\n            value={displayedValue}\n            onChange={\n              onChange\n                ? event => {\n                    onChange(event, -1, event.target.value);\n                  }\n                : undefined\n            }\n            InputLabelProps={{\n              shrink: true,\n            }}\n            SelectProps={{\n              native: true,\n            }}\n            style={props.style}\n            inputRef={this._input}\n          >\n            {!hasValidValue ? (\n              <option value={INVALID_VALUE} disabled>\n                {props.hintText\n                  ? i18n._(props.hintText)\n                  : i18n._(t`Choose an option`)}\n              </option>\n            ) : null}\n            {props.children}\n          </TextField>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { I18n } from '@lingui/react';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\n\n// We support a subset of the props supported by Material-UI v0.x MenuItem\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  value: string | number | boolean,\n  primaryText: MessageDescriptor,\n  disabled?: boolean,\n|};\n\n/**\n * A native select option to be used with `SelectField`.\n */\nexport default class SelectOption extends React.Component<Props, {||}> {\n  render() {\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <option value={this.props.value} disabled={this.props.disabled}>\n            {i18n._(this.props.primaryText)}\n          </option>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nexport const selectableArea = 'selectable';\nexport const selectedArea = 'selected';\nexport const icon = 'icon';\n\nexport const largeSelectableArea = 'large-selectable';\nexport const largeSelectedArea = 'large-selected';\n\nexport const executableEventContainer = 'executable-event-container';\nexport const actionsContainer = 'actions-container';\nexport const conditionsContainer = 'conditions-container';\nexport const subInstructionsContainer = 'sub-instructions-container';\nexport const smallWidthContainer = 'small-width-container';\nexport const instructionParameter = 'instruction-parameter';\nexport const instructionInvalidParameter = 'instruction-invalid-parameter';\nexport const disabledText = 'disabled-text';\n\nexport const background = 'background';\n\nexport const eventsTree = 'events-tree';\nexport const eventsTreeWithSearchResults = 'with-search-results';\n\nexport const dropIndicator = 'drop-indicator';\nexport const cantDropIndicator = 'cant-drop-indicator';\n\nexport const linkContainer = 'link-container';\n\nexport const nameAndIconContainer = 'name-and-icon-container';\n","// @flow\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  maxWidth: {\n    maxWidth: '100%',\n  },\n};\n\ntype Props = {|\n  children: ?React.Node,\n  maxWidth?: boolean,\n  width?: number | string,\n  noFullHeight?: boolean,\n  noExpand?: boolean,\n|};\n\n/**\n * This is the component to be used to display the standard\n * background of editor/windows/dialogs.\n */\nconst Background = (props: Props) => (\n  <Paper\n    square\n    style={{\n      ...styles.container,\n      height: props.noFullHeight ? undefined : '100%',\n      width: props.width ? props.width : undefined,\n      flex: props.noExpand ? undefined : 1,\n      ...(props.maxWidth ? styles.maxWidth : undefined),\n    }}\n  >\n    {props.children}\n  </Paper>\n);\n\nexport default Background;\n","// @flow\nimport * as React from 'react';\nimport { Spacer, Line } from './Grid';\nimport { ResponsiveWindowMeasurer } from './Reponsive/ResponsiveWindowMeasurer';\n\ntype TextFieldWithButtonLayoutProps = {|\n  renderTextField: () => React.Node,\n  renderButton: (style: {|\n    marginTop?: number,\n    marginBottom?: number,\n    marginLeft?: number,\n    marginRight?: number,\n    margin?: number,\n    flexShrink?: 0,\n  |}) => React.Node,\n  margin?: 'none' | 'dense',\n  noFloatingLabelText?: boolean,\n|};\n\nconst buttonCommonStyles = {\n  // Ensure the button is not shrinked, even if the text field\n  // (in particular with a long helper text) is large.\n  flexShrink: 0,\n};\n\nconst textFieldWithButtonLayoutStyles = {\n  container: {\n    flex: 1,\n    display: 'flex',\n    alignItems: 'flex-start', // Align from the top to stay at the same position when error/multiline\n  },\n  filledTextFieldWithLabelRightButtonMargins: {\n    ...buttonCommonStyles,\n    marginTop: 24, // Properly align with the text field (only dense \"filled\" text fields supported)\n    marginLeft: 10,\n  },\n  filledTextFieldWithoutLabelRightButtonMargins: {\n    ...buttonCommonStyles,\n    marginTop: 15, // Properly align with the text field (only dense \"filled\" text fields supported)\n    marginLeft: 10,\n  },\n  standardTextFieldWithLabelRightButtonMargins: {\n    ...buttonCommonStyles,\n    marginTop: 17, // Properly align with the text field (only \"standard\" text fields with margin \"none\" supported)\n    marginLeft: 10,\n  },\n  standardTextFieldWithoutLabelRightButtonMargins: {\n    ...buttonCommonStyles,\n    marginTop: 0, // Properly align with the text field (only \"standard\" text fields with margin \"none\" supported)\n    marginLeft: 10,\n  },\n};\n\n/**\n * Position a button on the right of a TextField.\n */\nexport const TextFieldWithButtonLayout = ({\n  margin,\n  noFloatingLabelText,\n  renderTextField,\n  renderButton,\n}: TextFieldWithButtonLayoutProps) => {\n  return (\n    <div style={textFieldWithButtonLayoutStyles.container}>\n      {renderTextField()}\n      {renderButton(\n        margin === 'none'\n          ? noFloatingLabelText\n            ? textFieldWithButtonLayoutStyles.standardTextFieldWithoutLabelRightButtonMargins\n            : textFieldWithButtonLayoutStyles.standardTextFieldWithLabelRightButtonMargins\n          : noFloatingLabelText\n          ? textFieldWithButtonLayoutStyles.filledTextFieldWithoutLabelRightButtonMargins\n          : textFieldWithButtonLayoutStyles.filledTextFieldWithLabelRightButtonMargins\n      )}\n    </div>\n  );\n};\n\ntype ResponsiveLineStackLayoutProps = {|\n  alignItems?: string,\n  justifyContent?: string,\n  expand?: boolean,\n  noMargin?: boolean,\n  children: React.Node,\n|};\n\nexport const ResponsiveLineStackLayout = ({\n  alignItems,\n  justifyContent,\n  expand,\n  noMargin,\n  children,\n}: ResponsiveLineStackLayoutProps) => {\n  let isFirstChild = true;\n  return (\n    <ResponsiveWindowMeasurer>\n      {windowWidth =>\n        windowWidth === 'small' ? (\n          React.Children.map(children, (child, index) => {\n            return <Line expand>{child}</Line>;\n          })\n        ) : (\n          <Line\n            alignItems={alignItems}\n            justifyContent={justifyContent}\n            expand={expand}\n            noMargin={noMargin}\n          >\n            {React.Children.map(children, (child, index) => {\n              if (!child) return null;\n\n              const addSpacers = !isFirstChild;\n              isFirstChild = false;\n\n              return (\n                <React.Fragment>\n                  {addSpacers && <Spacer />}\n                  {addSpacers && <Spacer />}\n                  {child}\n                </React.Fragment>\n              );\n            })}\n          </Line>\n        )\n      }\n    </ResponsiveWindowMeasurer>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\n\nexport type AlertMessageIdentifier =\n  | 'use-non-smoothed-textures'\n  | 'use-nearest-scale-mode'\n  | 'maximum-fps-too-low'\n  | 'minimum-fps-too-low'\n  | 'function-extractor-explanation'\n  | 'events-based-behavior-explanation'\n  | 'empty-events-based-behavior-explanation'\n  | 'too-much-effects'\n  | 'effects-usage'\n  | 'resource-properties-panel-explanation'\n  | 'instance-drag-n-drop-explanation'\n  | 'objects-panel-explanation'\n  | 'instance-properties-panel-explanation'\n  | 'physics2-shape-collisions'\n  | 'edit-instruction-explanation';\n\nexport const allAlertMessages: Array<{\n  key: AlertMessageIdentifier,\n  label: React.Node,\n}> = [\n  {\n    key: 'use-non-smoothed-textures',\n    label: <Trans>Using non smoothed textures</Trans>,\n  },\n  {\n    key: 'use-nearest-scale-mode',\n    label: <Trans>Using Nearest Scale Mode</Trans>,\n  },\n  {\n    key: 'maximum-fps-too-low',\n    label: <Trans>Maximum Fps is too low</Trans>,\n  },\n  {\n    key: 'minimum-fps-too-low',\n    label: <Trans>Minimum Fps is too low</Trans>,\n  },\n  {\n    key: 'function-extractor-explanation',\n    label: <Trans>Using function extractor</Trans>,\n  },\n  {\n    key: 'events-based-behavior-explanation',\n    label: <Trans>Using events based behavior</Trans>,\n  },\n  {\n    key: 'empty-events-based-behavior-explanation',\n    label: <Trans>Using empty events based behavior</Trans>,\n  },\n  {\n    key: 'too-much-effects',\n    label: <Trans>Using too much effects</Trans>,\n  },\n  {\n    key: 'effects-usage',\n    label: <Trans>Using effects</Trans>,\n  },\n  {\n    key: 'resource-properties-panel-explanation',\n    label: <Trans>Using the resource properties panel</Trans>,\n  },\n  {\n    key: 'instance-drag-n-drop-explanation',\n    label: <Trans>Using instance drag'n'drop</Trans>,\n  },\n  {\n    key: 'objects-panel-explanation',\n    label: <Trans>Using the objects panel</Trans>,\n  },\n  {\n    key: 'instance-properties-panel-explanation',\n    label: <Trans>Using the instance properties panel</Trans>,\n  },\n  {\n    key: 'physics2-shape-collisions',\n    label: <Trans>Collisions handling with the Physics engine</Trans>,\n  },\n  {\n    key: 'edit-instruction-explanation',\n    label: <Trans>How to edit instructions</Trans>,\n  },\n];\n\n/**\n * All the preferences of GDevelop. To add a new preference, add it into this\n * type and add a setter into `Preferences` type. Then, update the\n * preference dialog.\n */\nexport type PreferencesValues = {|\n  language: string,\n  autoDownloadUpdates: boolean,\n  themeName: string,\n  codeEditorThemeName: string,\n  hiddenAlertMessages: { [AlertMessageIdentifier]: boolean },\n  autoDisplayChangelog: boolean,\n  lastLaunchedVersion: ?string,\n  eventsSheetShowObjectThumbnails: boolean,\n  autosaveOnPreview: boolean,\n  useNewInstructionEditorDialog: boolean,\n  useGDJSDevelopmentWatcher: boolean,\n  eventsSheetUseAssignmentOperators: boolean,\n  showEffectParameterNames: boolean,\n|};\n\n/**\n * Type containing all the preferences of GDevelop and their setters.\n */\nexport type Preferences = {|\n  values: PreferencesValues,\n  setLanguage: (language: string) => void,\n  setThemeName: (themeName: string) => void,\n  setCodeEditorThemeName: (codeEditorThemeName: string) => void,\n  setAutoDownloadUpdates: (enabled: boolean) => void,\n  checkUpdates: (forceDownload?: boolean) => void,\n  setAutoDisplayChangelog: (enabled: boolean) => void,\n  showAlertMessage: (identifier: AlertMessageIdentifier, show: boolean) => void,\n  verifyIfIsNewVersion: () => boolean,\n  setEventsSheetShowObjectThumbnails: (enabled: boolean) => void,\n  setAutosaveOnPreview: (enabled: boolean) => void,\n  setUseNewInstructionEditorDialog: (enabled: boolean) => void,\n  setUseGDJSDevelopmentWatcher: (enabled: boolean) => void,\n  setEventsSheetUseAssignmentOperators: (enabled: boolean) => void,\n  setShowEffectParameterNames: (enabled: boolean) => void,\n|};\n\nexport const initialPreferences = {\n  values: {\n    language: 'en',\n    autoDownloadUpdates: true,\n    themeName: 'GDevelop default',\n    codeEditorThemeName: 'vs-dark',\n    hiddenAlertMessages: {},\n    autoDisplayChangelog: true,\n    lastLaunchedVersion: undefined,\n    eventsSheetShowObjectThumbnails: true,\n    autosaveOnPreview: true,\n    useNewInstructionEditorDialog: false,\n    useGDJSDevelopmentWatcher: true,\n    eventsSheetUseAssignmentOperators: false,\n    showEffectParameterNames: false,\n  },\n  setLanguage: () => {},\n  setThemeName: () => {},\n  setCodeEditorThemeName: () => {},\n  setAutoDownloadUpdates: () => {},\n  checkUpdates: () => {},\n  setAutoDisplayChangelog: () => {},\n  showAlertMessage: (identifier: AlertMessageIdentifier, show: boolean) => {},\n  verifyIfIsNewVersion: () => false,\n  setEventsSheetShowObjectThumbnails: () => {},\n  setAutosaveOnPreview: () => {},\n  setUseNewInstructionEditorDialog: (enabled: boolean) => {},\n  setUseGDJSDevelopmentWatcher: (enabled: boolean) => {},\n  setEventsSheetUseAssignmentOperators: (enabled: boolean) => {},\n  setShowEffectParameterNames: (enabled: boolean) => {},\n};\n\nconst PreferencesContext = React.createContext<Preferences>(initialPreferences);\n\nexport default PreferencesContext;\n","// @flow\nimport * as React from 'react';\nimport MUITable from '@material-ui/core/Table';\nimport MUITableBody from '@material-ui/core/TableBody';\nimport MUITableCell from '@material-ui/core/TableCell';\nimport MUITableHead from '@material-ui/core/TableHead';\nimport MUITableRow from '@material-ui/core/TableRow';\n\ntype TableProps = {|\n  children: React.Node, // Should be TableHeader, TableBody or TableFooter\n|};\n\n/**\n * A Table based on Material-UI Table.\n * See https://material-ui.com/components/tables/\n */\nexport class Table extends React.Component<TableProps, {||}> {\n  render() {\n    return <MUITable size=\"small\" {...this.props} />;\n  }\n}\n\ntype TableBodyProps = {|\n  children?: React.Node, // Should be TableRow\n|};\n\n/**\n * A TableBody based on Material-UI TableBody.\n */\nexport class TableBody extends React.Component<TableBodyProps, {||}> {\n  render() {\n    return <MUITableBody {...this.props} />;\n  }\n}\n\ntype TableHeaderProps = {|\n  children: React.Node, // Should be a TableRow\n|};\n\n/**\n * A TableHeader based on Material-UI TableHead.\n */\nexport class TableHeader extends React.Component<TableHeaderProps, {||}> {\n  render() {\n    return <MUITableHead {...this.props} />;\n  }\n}\n\ntype TableHeaderColumnProps = {|\n  children?: React.Node, // Text of the column\n  style?: {|\n    textAlign: 'left' | 'right',\n    paddingRight: number,\n  |},\n|};\n\n/**\n * A TableHeaderColumn based on Material-UI TableCell.\n */\nexport class TableHeaderColumn extends React.Component<\n  TableHeaderColumnProps,\n  {||}\n> {\n  render() {\n    return <MUITableCell {...this.props} />;\n  }\n}\n\ntype TableRowProps = {|\n  children: React.Node,\n  style?: {|\n    backgroundColor: string,\n  |},\n|};\n\n/**\n * A TableRow based on Material-UI TableRow.\n */\nexport class TableRow extends React.Component<TableRowProps, {||}> {\n  render() {\n    return <MUITableRow {...this.props} />;\n  }\n}\n\ntype TableRowColumnProps = {|\n  children?: React.Node, // Content for the cell\n  style?: {|\n    width?: number,\n    paddingLeft?: number,\n    paddingRight?: number,\n    textAlign?: string,\n  |},\n|};\n\n/**\n * A TableRowColumn based on Material-UI TableRowColumn.\n */\nexport class TableRowColumn extends React.Component<TableRowColumnProps, {||}> {\n  render() {\n    return <MUITableCell {...this.props} />;\n  }\n}\n","// @flow\n\nexport default (\n  name /*:string */,\n  exists /*:(string) => boolean */,\n  prefix /*: string */ = ''\n) => {\n  if (!exists(name)) return name;\n\n  let potentialName = prefix + name;\n  for (let i = 2; exists(potentialName); ++i) {\n    potentialName = prefix + name + i;\n  }\n\n  return potentialName;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Info from '@material-ui/icons/Info';\nimport Warning from '@material-ui/icons/Warning';\nimport Error from '@material-ui/icons/Error';\nimport { Line } from './Grid';\nimport FlatButton from './FlatButton';\nimport Text from './Text';\nimport ThemeConsumer from './Theme/ThemeConsumer';\n\nconst styles = {\n  icon: { width: 28, height: 28, marginRight: 10, marginLeft: 10 },\n  content: { flex: 1 },\n};\n\ntype Props = {|\n  kind: 'info' | 'warning' | 'error',\n  children: React.Node,\n  onHide?: () => void,\n  renderRightButton?: () => React.Node,\n|};\n\n/**\n * Show an hint, warning or other message. If you want to allow the user\n * to permanently hide the hint/alert/message, see DismissableAlertMessage.\n */\nconst AlertMessage = ({ kind, children, onHide, renderRightButton }: Props) => (\n  <Paper>\n    <ThemeConsumer>\n      {muiTheme => (\n        <Line noMargin alignItems=\"center\">\n          {kind === 'info' && <Info style={styles.icon} />}\n          {kind === 'warning' && (\n            <Warning\n              style={{\n                ...styles.icon,\n                color: muiTheme.message.warning,\n              }}\n            />\n          )}\n          {kind === 'error' && (\n            <Error\n              style={{\n                ...styles.icon,\n                color: muiTheme.message.error,\n              }}\n            />\n          )}\n          <Text style={styles.content}>{children}</Text>\n          {renderRightButton && renderRightButton()}\n          {onHide && (\n            <FlatButton label={<Trans>Hide</Trans>} onClick={() => onHide()} />\n          )}\n        </Line>\n      )}\n    </ThemeConsumer>\n  </Paper>\n);\n\nexport default AlertMessage;\n","// @flow\nimport React, { PureComponent } from 'react';\nimport ThemeConsumer from './Theme/ThemeConsumer';\n// No i18n in this file\n\ntype Props = {|\n  src: string,\n  tooltip?: string,\n  disabled?: boolean,\n  isGDevelopIcon?: boolean,\n  iconSize: number,\n|};\n\n/**\n * An icon that can be used as the leftIcon of a ListItem.\n * See also ToolbarIcon.\n */\nexport default class ListIcon extends PureComponent<Props> {\n  render() {\n    const { src, tooltip, disabled, isGDevelopIcon, iconSize } = this.props;\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <div\n            style={{\n              width: iconSize,\n              height: iconSize,\n              lineHeight: `${iconSize}px`, // Vertical centering\n              textAlign: 'center', // Horizontal centering\n            }}\n          >\n            <img\n              title={tooltip}\n              alt={tooltip}\n              src={src}\n              crossOrigin=\"anonymous\"\n              style={{\n                maxWidth: iconSize,\n                maxHeight: iconSize,\n                verticalAlign: 'middle', // Vertical centering\n                filter: !isGDevelopIcon\n                  ? undefined\n                  : disabled\n                  ? 'grayscale(100%)'\n                  : muiTheme.gdevelopIconsCSSFilter,\n              }}\n            />\n          </div>\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = {\n  containerStyle: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    padding: 10,\n  },\n};\n\nexport default props => (\n  <div style={{ ...styles.containerStyle, ...props.style }}>\n    <CircularProgress size={40} />\n  </div>\n);\n","// @flow\nimport * as React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n// We support a subset of the props supported by Material-UI v0.x Checkbox\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  label?: ?React.Node,\n  checked: boolean,\n  onCheck?: (e: {||}, checked: boolean) => void,\n  checkedIcon?: React.Node,\n  uncheckedIcon?: React.Node,\n  disabled?: boolean,\n\n  style?: {|\n    display?: 'inline-block',\n    marginRight?: number,\n  |},\n|};\n\n/**\n * A text field based on Material-UI text field.\n */\nexport default (props: Props) => {\n  const { onCheck } = props;\n  const checkbox = (\n    <Checkbox\n      disabled={props.disabled}\n      checked={props.checked}\n      onChange={\n        onCheck ? event => onCheck(event, event.target.checked) : undefined\n      }\n      icon={props.uncheckedIcon}\n      checkedIcon={props.checkedIcon}\n      color=\"primary\"\n      style={props.label ? undefined : props.style}\n    />\n  );\n  return props.label ? (\n    <FormControlLabel\n      control={checkbox}\n      label={props.label}\n      style={props.style}\n    />\n  ) : (\n    checkbox\n  );\n};\n","// @flow\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport IconButton from './IconButton';\nimport TextField from './TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Close from '@material-ui/icons/Close';\nimport Search from '@material-ui/icons/Search';\nimport FilterList from '@material-ui/icons/FilterList';\nimport ElementWithMenu from './Menu/ElementWithMenu';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\n\ntype Props = {|\n  /** Disables text field. */\n  disabled?: boolean,\n  /** Sets placeholder for the embedded text field. */\n  placeholder?: MessageDescriptor,\n  /** Fired when the text value changes. */\n  onChange?: string => void,\n  /** Fired when the search icon is clicked. */\n  onRequestSearch: string => void,\n  /** Override the inline-styles of the root element. */\n  style?: Object,\n  /** The value of the text field. */\n  value: string,\n  /** If tags are supported, the function to list the tags menu */\n  buildTagsMenuTemplate?: () => any,\n|};\n\ntype State = {|\n  focus: boolean,\n  value: string,\n  active: boolean,\n|};\n\nconst getStyles = (props: Props, state: State) => {\n  const { disabled } = props;\n  const { value } = state;\n  const nonEmpty = value.length > 0;\n\n  return {\n    root: {\n      height: 48,\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n    iconButtonClose: {\n      style: {\n        opacity: !disabled ? 0.54 : 0.38,\n        transform: nonEmpty ? 'scale(1, 1)' : 'scale(0, 0)',\n        transition: 'transform 200ms cubic-bezier(0.4, 0.0, 0.2, 1)',\n      },\n      iconStyle: {\n        opacity: nonEmpty ? 1 : 0,\n        transition: 'opacity 200ms cubic-bezier(0.4, 0.0, 0.2, 1)',\n      },\n    },\n    iconButtonSearch: {\n      style: {\n        opacity: !disabled ? 0.54 : 0.38,\n        transform: nonEmpty ? 'scale(0, 0)' : 'scale(1, 1)',\n        transition: 'transform 200ms cubic-bezier(0.4, 0.0, 0.2, 1)',\n        marginRight: -48,\n      },\n      iconStyle: {\n        opacity: nonEmpty ? 0 : 1,\n        transition: 'opacity 200ms cubic-bezier(0.4, 0.0, 0.2, 1)',\n      },\n    },\n    iconButtonFilter: {\n      style: {\n        opacity: !disabled ? 0.54 : 0.38,\n      },\n      iconStyle: {},\n    },\n    input: {\n      width: '100%',\n    },\n    searchContainer: {\n      margin: 'auto 16px',\n      width: '100%',\n    },\n  };\n};\n\n/**\n * Material design search bar,\n * inspired from https://github.com/TeamWertarbyte/material-ui-search-bar\n *\n * Customized to add optional tags button.\n */\nexport default class SearchBar extends React.PureComponent<Props, State> {\n  state = {\n    focus: false,\n    value: this.props.value,\n    active: false,\n  };\n  _textField = React.createRef<TextField>();\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (this.props.value !== nextProps.value) {\n      this.setState({ ...this.state, value: nextProps.value });\n    }\n  }\n\n  focus = () => {\n    if (this._textField.current) {\n      this._textField.current.focus();\n    }\n  };\n\n  blur = () => {\n    if (this._textField.current) {\n      this._textField.current.blur();\n    }\n  };\n\n  handleFocus = () => {\n    this.setState({ focus: true });\n  };\n\n  handleBlur = () => {\n    this.setState({ focus: false });\n    if (this.state.value.trim().length === 0) {\n      this.setState({ value: '' });\n    }\n  };\n\n  handleInput = (e: {| target: {| value: string |} |}) => {\n    this.setState({ value: e.target.value });\n    this.props.onChange && this.props.onChange(e.target.value);\n  };\n\n  handleCancel = () => {\n    this.setState({ active: false, value: '' });\n    this.props.onChange && this.props.onChange('');\n  };\n\n  handleKeyPressed = (e: { charCode: number, key: string }) => {\n    if (e.charCode === 13 || e.key === 'Enter') {\n      this.props.onRequestSearch(this.state.value);\n    }\n  };\n\n  render() {\n    const styles = getStyles(this.props, this.state);\n    const { value } = this.state;\n    const { disabled, style, buildTagsMenuTemplate } = this.props;\n\n    return (\n      <Paper\n        style={{\n          ...styles.root,\n          ...style,\n        }}\n      >\n        <div style={styles.searchContainer}>\n          <TextField\n            margin=\"none\"\n            hintText={this.props.placeholder || t`Search`}\n            onBlur={this.handleBlur}\n            value={value}\n            onChange={this.handleInput}\n            onKeyUp={this.handleKeyPressed}\n            onFocus={this.handleFocus}\n            fullWidth\n            style={styles.input}\n            underlineShow={false}\n            disabled={disabled}\n            ref={this._textField}\n          />\n        </div>\n        {buildTagsMenuTemplate && (\n          <ElementWithMenu\n            element={\n              <IconButton\n                style={styles.iconButtonFilter.style}\n                disabled={disabled}\n              >\n                <FilterList style={styles.iconButtonFilter.iconStyle} />\n              </IconButton>\n            }\n            buildMenuTemplate={buildTagsMenuTemplate}\n          />\n        )}\n        <IconButton style={styles.iconButtonSearch.style} disabled={disabled}>\n          <Search style={styles.iconButtonSearch.iconStyle} />\n        </IconButton>\n        <IconButton\n          onClick={this.handleCancel}\n          style={styles.iconButtonClose.style}\n          disabled={disabled}\n        >\n          <Close style={styles.iconButtonClose.iconStyle} />\n        </IconButton>\n      </Paper>\n    );\n  }\n}\n","// @flow\n// Note: this file don't use export/imports nor Flow to allow its usage from Node.js\n\nconst optionalRequire = require('../Utils/OptionalRequire.js');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nconst fs = optionalRequire('fs');\nconst path = optionalRequire('path');\nconst process = optionalRequire('process');\nvar isDarwin = process && /^darwin/.test(process.platform);\n\nconst tryPath = (\n  path /*: string*/,\n  onExists /*: string => void*/,\n  onNoAccess /*: Function*/\n) =>\n  fs.access(path, fs.constants.R_OK, err => {\n    if (!err) onExists(path);\n    else onNoAccess();\n  });\n\nconst findGDJS = () /*: Promise<{|gdjsRoot: string|}> */ => {\n  if (!path || !process || !fs) return Promise.reject(new Error('Unsupported'));\n\n  const appPath = app ? app.getAppPath() : process.cwd();\n\n  // The app path is [...]/*.app/Contents/Resources/app.asar on macOS\n  // and [...]/resources/app.asar on other OSes.\n  const pathToRoot = isDarwin ? '../../../../' : path.join('..', '..');\n  const rootPath = path.join(appPath, pathToRoot);\n\n  return new Promise((resolve, reject) => {\n    const onFound = gdjsRoot => resolve({ gdjsRoot });\n    const onNotFound = () => reject(new Error('Could not find GDJS'));\n\n    // First try to find GDJS in the parent folder (when newIDE is inside IDE)\n    tryPath(path.join(rootPath, '..', 'JsPlatform'), onFound, () => {\n      // Or in the resources (for a standalone newIDE)\n      tryPath(path.join(appPath, '..', 'GDJS'), onFound, () => {\n        // Or in the resources when developing with Electron\n        const devPath = path.join(\n          appPath,\n          '..',\n          '..',\n          'app',\n          'resources',\n          'GDJS'\n        );\n        tryPath(devPath, onFound, onNotFound);\n      });\n    });\n  });\n};\n\nmodule.exports = {\n  findGDJS,\n};\n","// @flow\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport ContextMenu from './ContextMenu';\n\ntype Props = {|\n  element: React$Element<any>,\n  buildMenuTemplate: () => Array<any>,\n|};\n\ntype State = {||};\n\n/**\n * Wrap an element and display a menu when `onClick` prop is called on the element.\n */\nexport default class ElementWithMenu extends React.Component<Props, State> {\n  _contextMenu: ?ContextMenu;\n  _wrappedElement: ?any;\n\n  open = (event: any) => {\n    const { _contextMenu } = this;\n    if (!_contextMenu) return;\n\n    const node = ReactDOM.findDOMNode(this._wrappedElement);\n    if (node instanceof HTMLElement) {\n      const dimensions = node.getBoundingClientRect();\n\n      _contextMenu.open(\n        Math.round(dimensions.left),\n        Math.round(dimensions.top + dimensions.height)\n      );\n    }\n  };\n\n  render() {\n    const { element, buildMenuTemplate } = this.props;\n    return (\n      <React.Fragment>\n        {React.cloneElement(element, {\n          onClick: this.open,\n          ref: wrappedElement => (this._wrappedElement = wrappedElement),\n        })}\n        <ContextMenu\n          ref={contextMenu => (this._contextMenu = contextMenu)}\n          buildMenuTemplate={buildMenuTemplate}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { I18n } from '@lingui/react';\nimport Downshift from 'downshift';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport ListIcon from './ListIcon';\nimport Popper from '@material-ui/core/Popper';\nimport muiZIndex from '@material-ui/core/styles/zIndex';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { computeTextFieldStyleProps } from './TextField';\nimport { MarkdownText } from './MarkdownText';\n\nexport type DataSource = Array<\n  | {|\n      type: 'separator',\n    |}\n  | {|\n      text: string, // The text used for filtering. If empty, item is always shown.\n      value: string, // The value to show on screen and to be selected\n      onClick?: () => void, // If defined, will be called when the item is clicked. onChange/onChoose won't be called.\n      renderIcon?: ?() => React.Element<typeof ListIcon | typeof SvgIcon>,\n    |}\n>;\n\nconst styles = {\n  container: {\n    position: 'relative',\n  },\n  inputRoot: {\n    flexWrap: 'wrap',\n  },\n  inputInput: {\n    width: 'auto',\n    flexGrow: 1,\n  },\n  menuPopper: {\n    // Ensure the popper is above everything (modal, dialog, snackbar, tooltips, etc).\n    // There will be only one AutoComplete opened at a time, so it's fair to put the\n    // highest z index. If this is breaking, check the z-index of material-ui.\n    zIndex: muiZIndex.tooltip + 100,\n  },\n  menuPaper: {\n    marginTop: 8,\n    // Limit the size of the menu:\n    maxHeight: 250,\n    overflowY: 'auto',\n  },\n};\n\nfunction renderTextField(textFieldProps) {\n  const { InputProps, ...other } = textFieldProps;\n\n  return (\n    <TextField\n      InputProps={{\n        style: styles.inputRoot,\n        ...InputProps,\n      }}\n      // eslint-disable-next-line react/jsx-no-duplicate-props\n      inputProps={{\n        style: styles.inputInput,\n      }}\n      {...other}\n    />\n  );\n}\n\nfunction renderItem(itemProps) {\n  const { item, index, menuItemProps, highlightedIndex, selected } = itemProps;\n\n  if (item.type === 'separator') {\n    return <Divider key={'separator-' + index} />;\n  }\n\n  const isHighlighted = highlightedIndex === index;\n\n  return (\n    <MenuItem\n      {...menuItemProps}\n      dense\n      key={\n        item.value\n          ? 'item-with-value-' + item.value\n          : 'item-without-value' + index\n      }\n      selected={isHighlighted}\n      component=\"div\"\n      style={{\n        fontWeight: selected ? 500 : 400,\n      }}\n    >\n      {item.renderIcon && <ListItemIcon>{item.renderIcon()}</ListItemIcon>}\n      {item.value}\n    </MenuItem>\n  );\n}\n\nconst filterDataSource = (dataSource: DataSource, inputValue: string) => {\n  const lowercaseInputValue = inputValue.toLowerCase();\n  return dataSource.filter(item => {\n    if (item.type === 'separator') return true;\n    if (!item.text) return true;\n\n    return item.text.toLowerCase().indexOf(lowercaseInputValue) !== -1;\n  });\n};\n\ntype Props = {|\n  value: string,\n  onChange: string => void,\n  onChoose?: string => void,\n  dataSource: DataSource,\n\n  id?: string,\n  onBlur?: (event: {|\n    currentTarget: {|\n      value: string,\n    |},\n  |}) => void,\n  errorText?: React.Node,\n  disabled?: boolean,\n  floatingLabelText?: React.Node,\n  helperMarkdownText?: ?string,\n  hintText?: MessageDescriptor | string,\n  fullWidth?: boolean,\n  margin?: 'none' | 'dense',\n  textFieldStyle?: Object,\n  openOnFocus?: boolean,\n|};\n\ntype State = {|\n  inputValue: string | null,\n|};\n\n/**\n * An autocomplete field, showing options as the user type (or when the user presses down button).\n * Options can be chosen with keyboard or mouse.\n *\n * Supports divider between items and special items with `onClick` prop that when present is called\n * when the item is selected (and value is not changed).\n */\nexport default class SemiControlledAutoComplete extends React.Component<\n  Props,\n  State\n> {\n  _input = React.createRef<HTMLInputElement>();\n  state = {\n    inputValue: null,\n  };\n\n  /**\n   * Allow to override the value being written in the autocomplete, if any.\n   * Usually you don't want to do that as the point of having a \"SemiControlled\" auto-complete\n   * is that the value being written by the user is the source of truth.\n   *\n   * In some cases, you want to force a new value when the auto-complete is focused (for example,\n   * if you opened a native dialog selector that is going to make the auto-complete focused/blurred/\n   * focused again, in a manner that depends on the OS).\n   * Call this function to do so.\n   *\n   * @param newValue The new value to set in the auto complete. If the field is not being focused,\n   * nothing will be forced (the value props will be used when the field is focused).\n   */\n  forceInputValueTo(newValue: string) {\n    if (this.state.inputValue !== null) {\n      this.setState({\n        inputValue: newValue,\n      });\n    }\n  }\n\n  focus() {\n    if (this._input.current) this._input.current.focus();\n  }\n\n  render() {\n    const { props, state } = this;\n    const currentInputValue =\n      state.inputValue !== null ? state.inputValue : props.value;\n\n    const helperText = props.helperMarkdownText ? (\n      <MarkdownText source={props.helperMarkdownText} />\n    ) : null;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Downshift\n            inputValue={currentInputValue}\n            onChange={selectedItem => {\n              if (selectedItem !== null) {\n                if (selectedItem.onClick) {\n                  selectedItem.onClick();\n\n                  // Reset the value shown to the current value,\n                  // as the menu item clicked is not a \"value\" to be\n                  // chosen.\n                  this.setState({\n                    inputValue: props.value,\n                  });\n                } else {\n                  // Call onChoose, if available, as this is a real selection\n                  // of an item (contrary to onChange, which can be called even\n                  // with a partial input when the field is blurred)\n                  if (props.onChoose) props.onChoose(selectedItem.value);\n                  else props.onChange(selectedItem.value);\n                }\n              }\n            }}\n            onInputValueChange={inputValue => {\n              this.setState({ inputValue });\n            }}\n            itemToString={item =>\n              item ? (item.type === 'separator' ? '' : item.value) : ''\n            }\n          >\n            {({\n              getInputProps,\n              getItemProps,\n              getLabelProps,\n              getMenuProps,\n\n              // Actions:\n              closeMenu,\n              openMenu,\n\n              // State:\n              highlightedIndex,\n              inputValue,\n              isOpen,\n              selectedItem,\n            }) => {\n              const { onBlur, ...inputProps } = getInputProps({\n                placeholder:\n                  typeof props.hintText === 'string'\n                    ? props.hintText\n                    : i18n._(props.hintText),\n                disabled: props.disabled,\n              });\n\n              // Wrap onBlur to close the menu and commit the changes to the value\n              const wrappedOnBlur = event => {\n                onBlur(event);\n\n                // Downshift will, after the blur event, reset the state so that the\n                // input value is itemToString applied to the selected item - which can\n                // be null as we allow whatever value is entered, even an incomplete one.\n                // Use a setTimeout to clear the inputValue just after Downshift has\n                // changed inputValue.\n                // (this is purely \"visual\", the onChange props is properly called, this\n                // being done or not)\n                setTimeout(() => {\n                  this.setState({\n                    inputValue: null,\n                  });\n                });\n\n                // Also close the menu\n                closeMenu();\n\n                // Call onChange with whatever value is entered, even an incomplete one.\n                props.onChange(event.currentTarget.value);\n\n                if (props.onBlur) props.onBlur(event);\n              };\n\n              const onFocus = event => {\n                if (props.openOnFocus) openMenu();\n                this.setState({\n                  inputValue: props.value,\n                });\n              };\n\n              return (\n                <div\n                  style={{\n                    ...styles.container,\n                    flexGrow: props.fullWidth ? 1 : undefined,\n                  }}\n                >\n                  {renderTextField({\n                    disabled: props.disabled,\n                    label: props.floatingLabelText,\n                    id: props.id,\n\n                    // Error handling:\n                    error: !!props.errorText,\n                    helperText: props.errorText || helperText,\n\n                    // Display:\n                    InputLabelProps: getLabelProps({ shrink: true }),\n\n                    // Events:\n                    InputProps: {\n                      // We wrap the onBlur/onFocus as we're a \"semi controlled\" field\n                      onBlur: wrappedOnBlur,\n                      onFocus: onFocus,\n                    },\n\n                    // Props for the input field from downshift:\n                    inputProps,\n\n                    // Style:\n                    style: props.textFieldStyle,\n                    fullWidth: props.fullWidth,\n                    ...computeTextFieldStyleProps(props),\n\n                    inputRef: this._input,\n                  })}\n                  <Popper\n                    open={isOpen}\n                    anchorEl={this._input.current}\n                    style={styles.menuPopper}\n                  >\n                    <div\n                      {...(isOpen\n                        ? getMenuProps({}, { suppressRefError: true })\n                        : {})}\n                    >\n                      {isOpen ? (\n                        <Paper\n                          style={{\n                            ...styles.menuPaper,\n                            width: this._input.current\n                              ? this._input.current.clientWidth\n                              : undefined,\n                          }}\n                          square\n                        >\n                          {filterDataSource(props.dataSource, inputValue).map(\n                            (item, index) =>\n                              renderItem({\n                                item,\n                                index,\n                                menuItemProps: getItemProps({ item, index }),\n                                highlightedIndex,\n                                selected: item === selectedItem,\n                              })\n                          )}\n                        </Paper>\n                      ) : null}\n                    </div>\n                  </Popper>\n                </div>\n              );\n            }}\n          </Downshift>\n        )}\n      </I18n>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ThemeConsumer from './Theme/ThemeConsumer';\nimport Text from './Text';\n\nconst style = {\n  display: 'flex',\n  alignItems: 'center',\n  paddingLeft: 8,\n  paddingRight: 8,\n};\n\nclass MiniToolbar extends Component {\n  render() {\n    const { justifyContent, smallest } = this.props;\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <div\n            style={{\n              ...style,\n              height: smallest ? 34 : 48,\n              backgroundColor: muiTheme.toolbar.backgroundColor,\n              justifyContent,\n            }}\n          >\n            {this.props.children}\n          </div>\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n\nconst toolbarTextStyle = {\n  marginRight: 5,\n};\n\nexport const MiniToolbarText = ({ children }) => (\n  <Text noShrink style={toolbarTextStyle}>\n    {children}\n  </Text>\n);\n\nexport default MiniToolbar;\n","// @flow\nimport * as React from 'react';\n\nexport type WidthType = 'small' | 'medium' | 'large';\n\ntype Props = {|\n  children: (width: WidthType) => React.Node,\n|};\n\n/**\n * Pass the proper size to the children according to the window size.\n * This consider a window to be \"small\" if *both* the width and height\n * are small.\n */\nexport const ResponsiveWindowMeasurer = ({ children }: Props) => {\n  if (typeof window === 'undefined') {\n    return children('medium');\n  }\n\n  return children(\n    window.innerWidth < 750 || window.innerHeight < 475\n      ? 'small'\n      : window.innerWidth < 1150\n      ? 'medium'\n      : 'large'\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport MUITabs from '@material-ui/core/Tabs';\nimport MUITab from '@material-ui/core/Tab';\n\n// We support a subset of the props supported by Material-UI v0.x Tabs\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype TabsProps<TabName> = {|\n  value?: TabName,\n  onChange: TabName => void,\n  children: React.Node, // Should be Tab\n|};\n\n/**\n * Tabs based on Material-UI Tabs.\n */\nexport class Tabs<TabName> extends React.Component<TabsProps<TabName>, {||}> {\n  render() {\n    return (\n      <MUITabs\n        variant=\"fullWidth\"\n        textColor=\"primary\"\n        value={this.props.value}\n        onChange={(e, newValue) => this.props.onChange(newValue)}\n      >\n        {this.props.children}\n      </MUITabs>\n    );\n  }\n}\n\n// We support a subset of the props supported by Material-UI v0.x Tabs\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype TabProps = {|\n  label: React.Node,\n  value: string,\n|};\n\n/**\n * A Tab based on Material-UI Tab.\n */\nexport class Tab extends React.Component<TabProps, {||}> {\n  render() {\n    return <MUITab {...this.props} />;\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ThemeConsumer from './Theme/ThemeConsumer';\nimport Typography from '@material-ui/core/Typography';\n// No i18n in this file\n\ntype Props = {|\n  tooltipText?: string,\n  style?: Object,\n  children: ?React.Node,\n|};\n\nconst BackgroundText = (props: Props) => (\n  <ThemeConsumer>\n    {muiTheme => (\n      <Typography\n        variant=\"body2\"\n        align=\"center\"\n        style={{\n          opacity: 0.6,\n          textShadow: `1px 1px 0px ${muiTheme.emptyMessage.shadowColor}`,\n          ...props.style,\n        }}\n        title={props.tooltipText}\n      >\n        {props.children}\n      </Typography>\n    )}\n  </ThemeConsumer>\n);\n\nexport default BackgroundText;\n","// @flow\nimport axios from 'axios';\nimport { makeTimestampedId } from '../../Utils/TimestampedId';\nimport { GDevelopBuildApi, GDevelopBuildUpload } from './ApiConfigs';\n\nexport type TargetName =\n  | 'winExe'\n  | 'winZip'\n  | 'macZip'\n  | 'linuxAppImage'\n  | 's3';\n\nexport type Build = {\n  id: string,\n  userId: string,\n  bucket?: string,\n  logsKey?: string,\n  apkKey?: string,\n  windowsExeKey?: string,\n  windowsZipKey?: string,\n  macosZipKey?: string,\n  linuxAppImageKey?: string,\n  s3Key?: string,\n  status: 'pending' | 'complete' | 'error',\n  type: 'cordova-build' | 'electron-build' | 'web-build',\n  targets?: Array<TargetName>,\n  createdAt: number,\n  updatedAt: number,\n};\n\nexport type BuildArtifactKeyName =\n  | 'apkKey'\n  | 'windowsExeKey'\n  | 'windowsZipKey'\n  | 'macosZipKey'\n  | 'linuxAppImageKey'\n  | 's3Key'\n  | 'logsKey';\n\nexport const getBuildArtifactUrl = (\n  build: ?Build,\n  keyName: BuildArtifactKeyName\n): ?string => {\n  if (!build || !build[keyName]) {\n    return null;\n  }\n\n  if (keyName === 's3Key') {\n    return `https://s3-eu-west-1.amazonaws.com/gd-games/${\n      build[keyName]\n    }/index.html`;\n  }\n\n  return `https://s3-eu-west-1.amazonaws.com/gd-build/${build[keyName]}`;\n};\n\nexport const uploadBuildFile = (\n  blob: Blob,\n  onProgress: (progress: number, total: number) => void\n): Promise<string> => {\n  const prefix = 'game-archive-' + makeTimestampedId();\n  const filename = 'game-archive.zip';\n\n  return new Promise((resolve, reject) => {\n    GDevelopBuildUpload.awsS3Client\n      .putObject(\n        {\n          Body: blob,\n          Bucket: GDevelopBuildUpload.options.destinationBucket,\n          Key: prefix + '/' + filename,\n        },\n        (err: ?Error) => {\n          if (err) return reject(err);\n\n          resolve(prefix + '/' + filename);\n        }\n      )\n      .on('httpUploadProgress', progress => {\n        if (!progress || !progress.total) {\n          onProgress(0, 0);\n          return;\n        }\n        onProgress(progress.loaded, progress.total);\n      });\n  });\n};\n\nexport const buildElectron = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  key: string,\n  targets: Array<TargetName>\n): Promise<Build> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.post(\n        `${GDevelopBuildApi.baseUrl}/build?userId=${encodeURIComponent(\n          userId\n        )}&key=${encodeURIComponent(\n          key\n        )}&type=electron-build&targets=${encodeURIComponent(\n          targets.join(',')\n        )}`,\n        null,\n        {\n          params: {},\n          headers: {\n            Authorization: authorizationHeader,\n          },\n        }\n      )\n    )\n    .then(response => response.data);\n};\n\nexport const buildWeb = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  key: string\n): Promise<Build> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.post(\n        `${GDevelopBuildApi.baseUrl}/build?userId=${encodeURIComponent(\n          userId\n        )}&key=${encodeURIComponent(key)}&type=web-build&targets=s3`,\n        null,\n        {\n          params: {},\n          headers: {\n            Authorization: authorizationHeader,\n          },\n        }\n      )\n    )\n    .then(response => response.data);\n};\n\nexport const buildCordovaAndroid = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  key: string\n): Promise<Build> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.post(\n        `${GDevelopBuildApi.baseUrl}/build?userId=${encodeURIComponent(\n          userId\n        )}&key=${encodeURIComponent(key)}&type=cordova-build`,\n        null,\n        {\n          params: {},\n          headers: {\n            Authorization: authorizationHeader,\n          },\n        }\n      )\n    )\n    .then(response => response.data);\n};\n\nexport const getBuild = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  buildId: string\n): Promise<Build> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.get(`${GDevelopBuildApi.baseUrl}/build/${buildId}`, {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n\nexport const getBuilds = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string\n): Promise<Array<Build>> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.get(`${GDevelopBuildApi.baseUrl}/build`, {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n","// @flow\nimport RenderedUnknownInstance from './Renderers/RenderedUnknownInstance';\nimport RenderedSpriteInstance from './Renderers/RenderedSpriteInstance';\nimport RenderedTiledSpriteInstance from './Renderers/RenderedTiledSpriteInstance';\nimport RenderedPanelSpriteInstance from './Renderers/RenderedPanelSpriteInstance';\nimport RenderedTextInstance from './Renderers/RenderedTextInstance';\nimport RenderedShapePainterInstance from './Renderers/RenderedShapePainterInstance';\nimport RenderedTextEntryInstance from './Renderers/RenderedTextEntryInstance';\nimport RenderedParticleEmitterInstance from './Renderers/RenderedParticleEmitterInstance';\nimport RenderedSkeletonInstance from './Renderers/RenderedSkeletonInstance';\nimport PixiResourcesLoader from './PixiResourcesLoader';\nimport ResourcesLoader from '../ResourcesLoader';\nimport RenderedInstance from './Renderers/RenderedInstance';\nimport * as PIXI from 'pixi.js';\nimport optionalRequire from '../Utils/OptionalRequire';\nconst path = optionalRequire('path');\nconst gd = global.gd;\n\nconst requirableModules = {};\n\n/**\n * A service containing functions that are called to render instances\n * of objects in a PIXI.Container.\n */\nexport default {\n  renderers: {\n    unknownObjectType: RenderedUnknownInstance,\n    Sprite: RenderedSpriteInstance,\n    'TiledSpriteObject::TiledSprite': RenderedTiledSpriteInstance,\n    'PanelSpriteObject::PanelSprite': RenderedPanelSpriteInstance,\n    'TextObject::Text': RenderedTextInstance,\n    'PrimitiveDrawing::Drawer': RenderedShapePainterInstance,\n    'TextEntryObject::TextEntry': RenderedTextEntryInstance,\n    'ParticleSystem::ParticleEmitter': RenderedParticleEmitterInstance,\n    'SkeletonObject::Skeleton': RenderedSkeletonInstance,\n  },\n  getThumbnail: function(project: gdProject, object: gdObject) {\n    var objectType = object.getType();\n    if (this.renderers.hasOwnProperty(objectType))\n      return this.renderers[objectType].getThumbnail(\n        project,\n        ResourcesLoader,\n        object\n      );\n    else\n      return this.renderers['unknownObjectType'].getThumbnail(\n        project,\n        ResourcesLoader,\n        object\n      );\n  },\n  createNewInstanceRenderer: function(\n    project: gdProject,\n    layout: gdLayout,\n    instance: gdInitialInstance,\n    associatedObject: gdObject,\n    pixiContainer: any\n  ) {\n    var objectType = associatedObject.getType();\n    if (this.renderers.hasOwnProperty(objectType))\n      return new this.renderers[objectType](\n        project,\n        layout,\n        instance,\n        associatedObject,\n        pixiContainer,\n        PixiResourcesLoader\n      );\n    else {\n      console.warn(\n        `Object with type ${objectType} has no instance renderer registered. Please use registerInstanceRenderer to register your renderer.`\n      );\n      return new this.renderers['unknownObjectType'](\n        project,\n        layout,\n        instance,\n        associatedObject,\n        pixiContainer,\n        PixiResourcesLoader\n      );\n    }\n  },\n  registerInstanceRenderer: function(objectType: string, renderer: any) {\n    if (!renderer.getThumbnail) {\n      console.warn(\n        `Tried to register renderer for object \"${objectType}\", but getThumbnail is not defined.`\n      );\n      return;\n    }\n\n    if (this.renderers.hasOwnProperty(objectType)) {\n      console.warn(\n        `Tried to register renderer for object \"${objectType}\", but a renderer already exists.`\n      );\n      return;\n    }\n\n    console.info(`Properly registered renderer for object \"${objectType}\".`);\n    this.renderers[objectType] = renderer;\n  },\n  /**\n   * Register a module that can be then required using `requireModule`.\n   * This is necessary for the web-app, as all files must be bundled.\n   */\n  registerModule: function(requirePath: string, module: any) {\n    requirableModules[requirePath] = module;\n  },\n  /**\n   * Require a module, that was either registered using `registerModule` (i.e: on the web-app), or from\n   * the specified path (if `optionalRequire` can find the file, i.e: on the electron app).\n   */\n  requireModule: function(requireBasePath: string, requirePath: string): ?any {\n    // On Electron, where modules can be required at runtime from files, require the\n    // file, relative to the base path.\n    if (path) {\n      const module = optionalRequire(path.join(requireBasePath, requirePath));\n      if (module) return module;\n    }\n\n    // On the web-app, modules need to be registered manually.\n    if (requirableModules[requirePath]) return requirableModules[requirePath];\n\n    console.error(\n      `Unable to find module \"${requirePath}\". Are you sure you registered it using ObjectsRenderingService.registerModule? This is mandatory for the web-app to have the file bundled.`\n    );\n    return null;\n  },\n  gd, // Expose gd so that it can be used by renderers\n  PIXI, // Expose PIXI so that it can be used by renderers\n  RenderedInstance, // Expose the base class for renderers so that it can be used by renderers\n};\n","/**\n * RenderedInstance is the base class used for creating renderers of instances,\n * which display on the scene editor, using Pixi.js, the instance of an object (see InstancesEditor).\n *\n * @class RenderedInstance\n * @constructor\n */\nfunction RenderedInstance(\n  project,\n  layout,\n  instance,\n  associatedObject,\n  pixiContainer,\n  pixiResourcesLoader\n) {\n  this._pixiObject = null;\n  this._instance = instance;\n  this._associatedObject = associatedObject;\n  this._pixiContainer = pixiContainer;\n  this._project = project;\n  this._layout = layout;\n  this._pixiResourcesLoader = pixiResourcesLoader;\n  this.wasUsed = true; //Used by InstancesRenderer to track rendered instance that are not used anymore.\n}\n\n/**\n * Convert an angle from degrees to radians.\n */\nRenderedInstance.toRad = function(angleInDegrees) {\n  return (angleInDegrees / 180) * 3.14159;\n};\n\n/**\n * Called when the scene editor is rendered.\n */\nRenderedInstance.prototype.update = function() {\n  //Nothing to do.\n};\n\nRenderedInstance.prototype.getPixiObject = function() {\n  return this._pixiObject;\n};\n\nRenderedInstance.prototype.getInstance = function() {\n  return this._instance;\n};\n\n/**\n * Called to notify the instance renderer that its associated instance was removed from\n * the scene. The PIXI object should probably be removed from the container: This is what\n * the default implementation of the method does.\n */\nRenderedInstance.prototype.instanceRemovedFromScene = function() {\n  if (\n    this._pixiObject !== null &&\n    this._pixiContainer.children.indexOf(this._pixiObject) !== -1\n  )\n    this._pixiContainer.removeChild(this._pixiObject);\n};\n\nRenderedInstance.prototype.getOriginX = function() {\n  return 0;\n};\n\nRenderedInstance.prototype.getOriginY = function() {\n  return 0;\n};\n\n/**\n * Return the width of the instance when the instance doesn't have a custom size.\n */\nRenderedInstance.prototype.getDefaultWidth = function() {\n  return 32;\n};\n\n/**\n * Return the height of the instance when the instance doesn't have a custom size.\n */\nRenderedInstance.prototype.getDefaultHeight = function() {\n  return 32;\n};\n\nexport default RenderedInstance;\n","// @flow\nimport * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\ntype Props = {|\n  children: ?React.Node,\n|};\n\nconst style = {\n  paddingLeft: 8,\n};\n\n// A Subheader to be displayed in a List.\nexport default ({ children }: Props) =>\n  children ? (\n    <Typography variant={'overline'} style={style}>\n      {children}\n    </Typography>\n  ) : null;\n","// @flow\nimport * as React from 'react';\nimport { serializeToJSObject } from '../../Utils/Serializer';\nimport { rgbToHexNumber } from '../../Utils/ColorTransformer';\n\n//TODO: try BaseEditor<Props,State>\nexport default class BaseEditor extends React.Component<*, *> {\n  static defaultProps = {\n    setToolbar: () => {},\n  };\n\n  getProject(): ?gdProject {\n    return this.props.project;\n  }\n\n  getLayout(): ?gdLayout {\n    return null;\n  }\n\n  saveUiSettings = () => {\n    // Implement in the editor, if needed.\n  };\n\n  shouldComponentUpdate(nextProps: *) {\n    // Prevent any update to the editor if the editor is not active,\n    // and so not visible to the user. For editors that do special work when isActive\n    // is set to false (for example to disable PIXI rendering), shouldComponentUpdate\n    // should be overriden with a proper implementation.\n    if (!nextProps.isActive) {\n      return false;\n    }\n\n    return true;\n  }\n\n  updateToolbar() {\n    console.warn('No toolbar defined for this editor');\n\n    if (this.props.setToolbar) this.props.setToolbar(null);\n  }\n\n  getSerializedElements() {\n    throw new Error(\n      'The editor has not implemented getSerializedElements to return what should be serialized'\n    );\n  }\n\n  static getLayoutSerializedElements(layout: ?gdLayout) {\n    if (!layout) return {};\n\n    return {\n      windowTitle: layout.getWindowDefaultTitle(),\n      layers: serializeToJSObject(layout, 'serializeLayersTo'),\n      backgroundColor:\n        '' +\n        rgbToHexNumber(\n          layout.getBackgroundColorRed(),\n          layout.getBackgroundColorGreen(),\n          layout.getBackgroundColorBlue()\n        ),\n    };\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport ThemeContext from './Theme/ThemeContext';\nimport classNames from 'classnames';\n\n// Sensible defaults for react-markdown\nconst makeMarkdownCustomRenderers = (isStandaloneText: boolean) => ({\n  // Ensure link are opened in a new page\n  root: props => (isStandaloneText ? <div {...props} /> : <span {...props} />),\n  link: props => (\n    <a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\">\n      {props.children}\n    </a>\n  ),\n  // Add paragraphs only if we explictly opt in.\n  paragraph: props =>\n    isStandaloneText ? <p>{props.children}</p> : props.children,\n});\n\ntype Props = {|\n  source: string,\n  isStandaloneText?: boolean,\n|};\n\n/**\n * Display a markdown text\n */\nexport const MarkdownText = (props: Props) => {\n  const gdevelopTheme = React.useContext(ThemeContext);\n  const markdownCustomRenderers = React.useMemo(\n    () => makeMarkdownCustomRenderers(props.isStandaloneText || false),\n    [props.isStandaloneText]\n  );\n\n  return (\n    <ReactMarkdown\n      escapeHtml\n      source={props.source}\n      className={classNames({\n        [gdevelopTheme.markdownRootClassName]: true,\n        'standalone-text-container': props.isStandaloneText,\n      })}\n      renderers={markdownCustomRenderers}\n    />\n  );\n};\n","// @flow\nimport optionalRequire from './OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst electronClipboard = electron ? electron.clipboard : null;\n\nexport type ClipboardKind = string;\n\nlet internalClipboard = '';\n\nconst mangleClipboardKind = (kind: ClipboardKind): string => {\n  // Mangle the name with GDevelop specific strings and random\n  // characters so that the probability that something that is not\n  // a valid GDevelop clipboard content is recognized as valid is almost 0.\n  return 'GDEVELOP_' + kind + '_CLIPBOARD_KIND-jsBdHbLy912y8Rc';\n};\n\nexport default class Clipboard {\n  static set(kind: ClipboardKind, object: any) {\n    const text = JSON.stringify({\n      '000kind': mangleClipboardKind(kind), /// 000 to ensure the key is written first.\n      content: object,\n    });\n\n    if (electronClipboard) {\n      electronClipboard.writeText(text);\n    } else {\n      internalClipboard = text;\n    }\n  }\n\n  static has(kind: ClipboardKind): boolean {\n    let text = '';\n    if (electronClipboard) {\n      text = electronClipboard.readText();\n    } else {\n      text = internalClipboard;\n    }\n\n    return text.indexOf(mangleClipboardKind(kind)) === 12; /// 12 is the position of '000kind' value\n  }\n\n  static get(kind: ClipboardKind): any {\n    if (!Clipboard.has(kind)) return null;\n\n    let text = '';\n    if (electronClipboard) {\n      text = electronClipboard.readText();\n    } else {\n      text = internalClipboard;\n    }\n\n    try {\n      const parsedText = JSON.parse(text);\n      return parsedText.content;\n    } catch (e) {\n      console.warn('The clipboard content is not valid JSON');\n      return null;\n    }\n  }\n}\n","// @flow\n\nexport const getHelpLink = (path: string): string =>\n  `http://wiki.compilgames.net/doku.php/gdevelop5${path}?utm_source=gdevelop&utm_medium=help-link`;\n","// @flow\nimport ResourcesLoader from '../ResourcesLoader';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst fs = optionalRequire('fs');\nconst path = optionalRequire('path');\nconst gd = global.gd;\n\nexport const RESOURCE_EXTENSIONS = {\n  image: 'png,jpg,jpeg,PNG,JPG,JPEG',\n  audio: 'wav,mp3,ogg,WAV,MP3,OGG',\n  font: 'ttf,ttc,otf,TTF,TTC,OTF',\n  video: 'mp4,MP4',\n};\n\nexport const createOrUpdateResource = (\n  project: gdProject,\n  newlyCreatedResource: gdResource,\n  resourceName: string\n) => {\n  const resourcesManager = project.getResourcesManager();\n  if (resourcesManager.hasResource(resourceName)) {\n    resourcesManager.removeResource(resourceName);\n  }\n  newlyCreatedResource.setFile(resourceName);\n  newlyCreatedResource.setName(resourceName);\n  applyResourceDefaults(project, newlyCreatedResource);\n\n  // Important, we are responsible for deleting the resources that was given to us.\n  // Otherwise we have a memory leak.\n  resourcesManager.addResource(newlyCreatedResource);\n\n  newlyCreatedResource.delete();\n};\n\n/**\n * Get the local path of a resource. This works by asking the ResourcesLoader\n * for the resource URL, then stripping anything that is specific to a URL.\n */\nexport const getLocalResourceFullPath = (\n  project: gdProject,\n  resourceName: string\n) => {\n  let resourcePath = ResourcesLoader.getResourceFullUrl(\n    project,\n    resourceName\n  ).substring(7 /* Remove \"file://\" from the URL to get a local path */);\n\n  if (resourcePath.indexOf('?cache=') !== -1) {\n    // Remove, if needed, the cache bursting argument from the URL.\n    resourcePath = resourcePath.substring(\n      0,\n      resourcePath.lastIndexOf('?cache=')\n    );\n  }\n  return resourcePath;\n};\n\nexport const isPathInProjectFolder = (\n  project: gdProject,\n  resourcePath: string\n) => {\n  const projectPath = path.dirname(project.getProjectFile());\n  return resourcePath.includes(projectPath);\n};\n\nexport const copyAllToProjectFolder = (\n  project: gdProject,\n  resourcePaths: Array<string>\n): Promise<Array<string>> => {\n  if (!fs || !path) {\n    return Promise.resolve(resourcePaths);\n  }\n\n  const projectPath = path.dirname(project.getProjectFile());\n\n  return Promise.all(\n    resourcePaths.map(resourcePath => {\n      if (isPathInProjectFolder(project, resourcePath)) {\n        return resourcePath;\n      }\n\n      const resourceBasename = path.basename(resourcePath);\n      const resourceNewPath = path.join(projectPath, resourceBasename);\n\n      return new Promise(resolve => {\n        fs.copyFile(resourcePath, resourceNewPath, err => {\n          if (err) {\n            return resolve(resourcePath);\n          }\n\n          return resolve(resourceNewPath);\n        });\n      });\n    })\n  );\n};\n\nexport const getResourceFilePathStatus = (\n  project: gdProject,\n  resourceName: string\n) => {\n  if (!fs) return '';\n  const resourcePath = path.normalize(\n    getLocalResourceFullPath(project, resourceName)\n  );\n\n  // The resource path doesn't exist\n  if (!fs.existsSync(resourcePath)) return 'error';\n\n  // The resource path is outside of the project folder\n  if (!isPathInProjectFolder(project, resourcePath)) return 'warning';\n\n  // The resource path seems ok\n  return '';\n};\n\nexport const applyResourceDefaults = (\n  project: gdProject,\n  newResource: gdResource\n) => {\n  if (newResource instanceof gd.ImageResource) {\n    newResource.setSmooth(project.getScaleMode() !== 'nearest');\n  }\n};\n","// @flow\nimport { mapFor } from '../Utils/MapFor';\nimport flatten from 'lodash/flatten';\nimport { type SelectedTags, hasStringAllTags } from '../Utils/TagsHelper';\nconst gd = global.gd;\n\nexport type EnumeratedObjectMetadata = {|\n  extension: gdPlatformExtension,\n  objectMetadata: gdObjectMetadata,\n  name: string,\n  fullName: string,\n  description: string,\n  iconFilename: string,\n|};\n\nexport type ObjectWithContext = {|\n  object: gdObject,\n  global: boolean,\n|};\n\nexport type GroupWithContext = {|\n  group: gdObjectGroup,\n  global: boolean,\n|};\n\nexport type ObjectWithContextList = Array<ObjectWithContext>;\nexport type GroupWithContextList = Array<GroupWithContext>;\n\nexport const isSameObjectWithContext = (\n  objectWithContext: ?ObjectWithContext\n) => (other: ?ObjectWithContext) => {\n  return (\n    objectWithContext &&\n    other &&\n    objectWithContext.global === other.global &&\n    objectWithContext.object === other.object\n  );\n};\n\nexport const enumerateObjects = (\n  project: gdProject,\n  objectsContainer: gdObjectsContainer,\n  type: ?string = undefined\n) => {\n  const filterObject = (object: gdObject): boolean => {\n    return (\n      !type ||\n      gd.getTypeOfObject(project, objectsContainer, object.getName(), false) ===\n        type\n    );\n  };\n\n  const containerObjectsList: ObjectWithContextList = mapFor(\n    0,\n    objectsContainer.getObjectsCount(),\n    i => objectsContainer.getObjectAt(i)\n  )\n    .filter(filterObject)\n    .map((object: gdObject): ObjectWithContext => ({ object, global: false }));\n\n  const projectObjectsList: ObjectWithContextList =\n    project === objectsContainer\n      ? []\n      : mapFor(0, project.getObjectsCount(), i => project.getObjectAt(i))\n          .filter(filterObject)\n          .map(\n            (object: gdObject): ObjectWithContext => ({\n              object,\n              global: true,\n            })\n          );\n\n  const allObjectsList: ObjectWithContextList = containerObjectsList.concat(\n    projectObjectsList\n  );\n\n  return {\n    containerObjectsList,\n    projectObjectsList,\n    allObjectsList,\n  };\n};\n\nexport const enumerateObjectTypes = (\n  project: gdProject\n): Array<EnumeratedObjectMetadata> => {\n  const platform = project.getCurrentPlatform();\n  const extensionsList = platform.getAllPlatformExtensions();\n\n  return flatten(\n    mapFor(0, extensionsList.size(), i => {\n      const extension = extensionsList.at(i);\n\n      return extension\n        .getExtensionObjectsTypes()\n        .toJSArray()\n        .map(objectType => extension.getObjectMetadata(objectType))\n        .map(objectMetadata => ({\n          extension,\n          objectMetadata,\n          name: objectMetadata.getName(),\n          fullName: objectMetadata.getFullName(),\n          description: objectMetadata.getDescription(),\n          iconFilename: objectMetadata.getIconFilename(),\n        }));\n    })\n  );\n};\n\nexport type ObjectFilteringOptions = {|\n  searchText: string,\n  selectedTags: SelectedTags,\n|};\n\nexport const filterObjectsList = (\n  list: ObjectWithContextList,\n  { searchText, selectedTags }: ObjectFilteringOptions\n): ObjectWithContextList => {\n  if (!searchText && !selectedTags.length) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list\n    .filter((objectWithContext: ObjectWithContext) => {\n      if (!selectedTags.length) return true;\n\n      const objectTags = objectWithContext.object.getTags();\n      return hasStringAllTags(objectTags, selectedTags);\n    })\n    .filter((objectWithContext: ObjectWithContext) => {\n      return (\n        objectWithContext.object\n          .getName()\n          .toLowerCase()\n          .indexOf(lowercaseSearchText) !== -1\n      );\n    });\n};\n\nexport const filterGroupsList = (\n  list: GroupWithContextList,\n  searchText: string\n): GroupWithContextList => {\n  if (!searchText) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list.filter((groupWithContext: GroupWithContext) => {\n    return (\n      groupWithContext.group\n        .getName()\n        .toLowerCase()\n        .indexOf(lowercaseSearchText) !== -1\n    );\n  });\n};\n\nexport const enumerateGroups = (\n  objectGroups: gdObjectGroupsContainer\n): Array<gdObjectGroup> => {\n  return mapFor(0, objectGroups.count(), i => {\n    return objectGroups.getAt(i);\n  });\n};\n\nexport const enumerateObjectsAndGroups = (\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  type: ?string = undefined\n) => {\n  const filterObject = (object: gdObject): boolean => {\n    return (\n      !type ||\n      gd.getTypeOfObject(\n        globalObjectsContainer,\n        objectsContainer,\n        object.getName(),\n        false\n      ) === type\n    );\n  };\n  const filterGroup = (group: gdObjectGroup): boolean => {\n    return (\n      !type ||\n      gd.getTypeOfObject(\n        globalObjectsContainer,\n        objectsContainer,\n        group.getName(),\n        true\n      ) === type\n    );\n  };\n\n  const containerObjectsList: ObjectWithContextList = mapFor(\n    0,\n    objectsContainer.getObjectsCount(),\n    i => objectsContainer.getObjectAt(i)\n  )\n    .filter(filterObject)\n    .map(object => ({ object, global: false }));\n\n  const containerGroups = objectsContainer.getObjectGroups();\n  const containerGroupsList: GroupWithContextList = enumerateGroups(\n    containerGroups\n  )\n    .filter(filterGroup)\n    .map(group => ({ group, global: false }));\n\n  const projectObjectsList: ObjectWithContextList =\n    globalObjectsContainer === objectsContainer\n      ? []\n      : mapFor(0, globalObjectsContainer.getObjectsCount(), i =>\n          globalObjectsContainer.getObjectAt(i)\n        )\n          .filter(filterObject)\n          .map(object => ({ object, global: true }));\n\n  const projectGroups = globalObjectsContainer.getObjectGroups();\n  const projectGroupsList: GroupWithContextList =\n    globalObjectsContainer === objectsContainer\n      ? []\n      : enumerateGroups(projectGroups)\n          .filter(filterGroup)\n          .map(group => ({ group, global: true }));\n\n  const allObjectsList: ObjectWithContextList = containerObjectsList.concat(\n    projectObjectsList\n  );\n  const allGroupsList: GroupWithContextList = containerGroupsList.concat(\n    projectGroupsList\n  );\n\n  return {\n    containerObjectsList,\n    projectObjectsList,\n    allObjectsList,\n    containerGroupsList,\n    projectGroupsList,\n    allGroupsList,\n  };\n};\n","// @flow\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\n\ntype Props = {|\n  children: React.Node,\n|};\n\nexport default (props: Props) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0,0,0,0.5)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Paper\n        elevation={3}\n        style={{\n          padding: 10,\n          margin: 5,\n        }}\n      >\n        {props.children}\n      </Paper>\n    </div>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport RaisedButton, {\n  type RaisedButtonPropsWithoutOnClick,\n} from './RaisedButton';\nimport ElementWithMenu from './Menu/ElementWithMenu';\n\n// We support a subset of the props supported by Material-UI v0.x RaisedButton\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  ...RaisedButtonPropsWithoutOnClick,\n  buildMenuTemplate: () => Array<any>,\n|};\n\nconst shouldNeverBeCalled = () => {\n  throw new Error('This RaisedButtonWithMenu onClick should never be called');\n};\n\n/**\n * A raised button based on Material-UI button, that has a menu displayed when clicked.\n */\nconst RaisedButtonWithMenu = (props: Props) => {\n  const { buildMenuTemplate, ...otherProps } = props;\n\n  return (\n    <ElementWithMenu\n      element={<RaisedButton {...otherProps} onClick={shouldNeverBeCalled} />}\n      buildMenuTemplate={buildMenuTemplate}\n    />\n  );\n};\n\nexport default RaisedButtonWithMenu;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport SemiControlledAutoComplete, {\n  type DataSource,\n} from '../UI/SemiControlledAutoComplete';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport Add from '@material-ui/icons/Add';\nimport Brush from '@material-ui/icons/Brush';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n  type ResourceKind,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport ResourcesLoader from '../ResourcesLoader';\nimport { applyResourceDefaults } from './ResourceUtils';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\nimport RaisedButtonWithMenu from '../UI/RaisedButtonWithMenu';\nimport { TextFieldWithButtonLayout } from '../UI/Layout';\nimport IconButton from '../UI/IconButton';\n\ntype Props = {|\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  resourcesLoader: typeof ResourcesLoader,\n  resourceKind: ResourceKind,\n  fullWidth?: boolean,\n  canBeReset?: boolean,\n  initialResourceName: string,\n  onChange: string => void,\n  floatingLabelText?: React.Node,\n  helperMarkdownText?: ?string,\n  hintText?: MessageDescriptor,\n  margin?: 'none' | 'dense',\n|};\n\ntype State = {|\n  notExistingError: boolean,\n  resourceName: string,\n|};\n\nexport default class ResourceSelector extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      notExistingError: false,\n      resourceName: props.initialResourceName || '',\n    };\n\n    const { project } = props;\n    if (project) {\n      this._loadFrom(project.getResourcesManager());\n    }\n  }\n\n  allResourcesNames: Array<string>;\n  autoCompleteData: DataSource;\n  _autoComplete: ?SemiControlledAutoComplete;\n\n  focus() {\n    if (this._autoComplete) this._autoComplete.focus();\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.initialResourceName !== this.props.initialResourceName) {\n      this.setState({\n        resourceName: nextProps.initialResourceName || '',\n      });\n    }\n  }\n\n  _getResourceSourceItems(): DataSource {\n    const sources = this.props.resourceSources || [];\n    return [\n      ...sources\n        .filter(source => source.kind === this.props.resourceKind)\n        .map(source => ({\n          text: '',\n          value: source.displayName,\n          renderIcon: () => <Add />,\n          onClick: () => this._addFrom(source),\n        })),\n      {\n        type: 'separator',\n      },\n    ];\n  }\n\n  _loadFrom(resourcesManager: gdResourcesManager) {\n    this.allResourcesNames = resourcesManager.getAllResourceNames().toJSArray();\n    if (this.props.resourceKind) {\n      this.allResourcesNames = this.allResourcesNames.filter(resourceName => {\n        return (\n          resourcesManager.getResource(resourceName).getKind() ===\n          this.props.resourceKind\n        );\n      });\n    }\n    const resourceSourceItems = this._getResourceSourceItems();\n    const resourceItems = this.allResourcesNames.map(resourceName => ({\n      text: resourceName,\n      value: resourceName,\n    }));\n    this.autoCompleteData = [...resourceSourceItems, ...resourceItems];\n  }\n\n  _addFrom = (source: ResourceSource) => {\n    if (!source) return;\n\n    const { project, onChooseResource } = this.props;\n    onChooseResource(source.name, false)\n      .then(resources => {\n        if (!resources.length) return;\n        const resource = resources[0];\n        applyResourceDefaults(project, resource);\n\n        // addResource will check if a resource with the same name exists, and if it is\n        // the case, no new resource will be added.\n        project.getResourcesManager().addResource(resource);\n\n        this._loadFrom(project.getResourcesManager());\n        const resourceName: string = resource.getName();\n        this._onChangeResourceName(resourceName);\n\n        // Imperatively set the value of the autocomplete, as it can be (on Windows for example),\n        // still focused. This means that when it's then getting blurred, the value we\n        // set for the resource name would get erased by the one that was getting entered.\n        if (this._autoComplete)\n          this._autoComplete.forceInputValueTo(resourceName);\n\n        // Important, we are responsible for deleting the resources that were given to us.\n        // Otherwise we have a memory leak, as calling addResource is making a copy of the resource.\n        resources.forEach(resource => resource.delete());\n      })\n      .catch(err => {\n        // TODO: Display an error message\n        console.error('Unable to choose a resource', err);\n      });\n  };\n\n  _onResetResourceName = () => {\n    this.setState(\n      {\n        resourceName: '',\n        notExistingError: false,\n      },\n      () => {\n        if (this.props.onChange) this.props.onChange(this.state.resourceName);\n      }\n    );\n  };\n\n  _onChangeResourceName = (resourceName: string) => {\n    if (resourceName === '') {\n      this._onResetResourceName();\n      return;\n    }\n    this.setState(\n      {\n        resourceName,\n        notExistingError: this.allResourcesNames.indexOf(resourceName) === -1,\n      },\n      () => {\n        if (!this.state.notExistingError) {\n          if (this.props.onChange) this.props.onChange(resourceName);\n        }\n      }\n    );\n  };\n\n  _editWith = (resourceExternalEditor: ResourceExternalEditor) => {\n    const { project, resourcesLoader, resourceKind } = this.props;\n    const { resourceName } = this.state;\n    const resourcesManager = project.getResourcesManager();\n    const initialResource = resourcesManager.getResource(resourceName);\n    let initialResourceMetadata = {};\n    const initialResourceMetadataRaw = initialResource.getMetadata();\n    if (initialResourceMetadataRaw) {\n      try {\n        initialResourceMetadata = JSON.parse(initialResourceMetadataRaw);\n      } catch (e) {\n        console.error('Malformed metadata', e);\n      }\n    }\n\n    if (resourceKind === 'image') {\n      const resourceNames = [];\n      if (resourcesManager.hasResource(resourceName)) {\n        resourceNames.push(resourceName);\n      }\n      const externalEditorOptions = {\n        project,\n        resourcesLoader,\n        singleFrame: true,\n        resourceNames,\n        extraOptions: {\n          fps: 0,\n          name: resourceName,\n          isLooping: false,\n          externalEditorData: initialResourceMetadata,\n        },\n        onChangesSaved: newResourceData => {\n          if (!newResourceData.length) return;\n\n          // Burst the ResourcesLoader cache to force images to be reloaded (and not cached by the browser).\n          resourcesLoader.burstUrlsCacheForResources(project, [\n            newResourceData[0].name,\n          ]);\n          this.props.onChange(newResourceData[0].name);\n        },\n      };\n      resourceExternalEditor.edit(externalEditorOptions);\n    } else if (resourceKind === 'audio') {\n      const externalEditorOptions = {\n        project,\n        resourcesLoader,\n        resourceNames: [resourceName],\n        extraOptions: {\n          externalEditorData: initialResourceMetadata,\n        },\n        onChangesSaved: newResourceData => {\n          // Burst the ResourcesLoader cache to force audio to be reloaded (and not cached by the browser).\n          resourcesLoader.burstUrlsCacheForResources(project, [\n            newResourceData[0].name,\n          ]);\n          this.props.onChange(newResourceData[0].name);\n        },\n      };\n      resourceExternalEditor.edit(externalEditorOptions);\n    } else if (resourceKind === 'json') {\n      const externalEditorOptions = {\n        project,\n        resourcesLoader,\n        resourceNames: [resourceName],\n        extraOptions: {\n          initialResourceMetadata,\n        },\n        onChangesSaved: newResourceData => {\n          this.props.onChange(newResourceData[0].name);\n        },\n      };\n      resourceExternalEditor.edit(externalEditorOptions);\n    }\n  };\n\n  render() {\n    const errorText = this.state.notExistingError\n      ? 'This resource does not exist in the game'\n      : null;\n\n    const externalEditors = this.props.resourceExternalEditors.filter(\n      externalEditor => externalEditor.kind === this.props.resourceKind\n    );\n    return (\n      <TextFieldWithButtonLayout\n        noFloatingLabelText={!this.props.floatingLabelText}\n        margin={this.props.margin}\n        renderTextField={() => (\n          <SemiControlledAutoComplete\n            floatingLabelText={this.props.floatingLabelText}\n            helperMarkdownText={this.props.helperMarkdownText}\n            hintText={this.props.hintText}\n            openOnFocus\n            dataSource={this.autoCompleteData || []}\n            value={this.state.resourceName}\n            onChange={this._onChangeResourceName}\n            errorText={errorText}\n            fullWidth={this.props.fullWidth}\n            margin={this.props.margin}\n            ref={autoComplete => (this._autoComplete = autoComplete)}\n          />\n        )}\n        renderButton={style => (\n          <React.Fragment>\n            {this.props.canBeReset && (\n              <IconButton\n                size=\"small\"\n                onClick={() => {\n                  this._onResetResourceName();\n                }}\n              >\n                <BackspaceIcon />\n              </IconButton>\n            )}\n            {!!externalEditors.length ? (\n              <RaisedButtonWithMenu\n                style={style}\n                icon={<Brush />}\n                label={\n                  this.state.resourceName ? (\n                    <Trans>Edit</Trans>\n                  ) : (\n                    <Trans>Create</Trans>\n                  )\n                }\n                primary\n                buildMenuTemplate={() =>\n                  externalEditors.map(externalEditor => ({\n                    label: externalEditor.displayName,\n                    click: () => this._editWith(externalEditor),\n                  }))\n                }\n              />\n            ) : null}\n          </React.Fragment>\n        )}\n      />\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport { withSerializableObject } from '../Utils/SerializableObjectEditorContainer';\nimport VariablesList from './index';\n\nconst gd = global.gd;\n\nexport class VariablesEditorDialog extends Component {\n  render() {\n    const {\n      onCancel,\n      onApply,\n      open,\n      onEditObjectVariables,\n      title,\n      emptyExplanationMessage,\n      emptyExplanationSecondMessage,\n      variablesContainer,\n    } = this.props;\n    const actions = [\n      <FlatButton\n        label={<Trans>Cancel</Trans>}\n        onClick={this.props.onCancel}\n        key={'Cancel'}\n      />,\n      <FlatButton\n        label={<Trans>Apply</Trans>}\n        primary\n        keyboardFocused\n        onClick={onApply}\n        key={'Apply'}\n      />,\n    ];\n    const secondaryActions = onEditObjectVariables ? (\n      <FlatButton\n        label={<Trans>Edit Object Variables</Trans>}\n        primary={false}\n        onClick={onEditObjectVariables}\n      />\n    ) : null;\n\n    return (\n      <Dialog\n        noMargin\n        actions={actions}\n        modal\n        open={open}\n        onRequestClose={onCancel}\n        secondaryActions={secondaryActions}\n        title={title}\n      >\n        <VariablesList\n          variablesContainer={variablesContainer}\n          emptyExplanationMessage={emptyExplanationMessage}\n          emptyExplanationSecondMessage={emptyExplanationSecondMessage}\n          onSizeUpdated={\n            () =>\n              this.forceUpdate() /*Force update to ensure dialog is properly positionned*/\n          }\n        />\n      </Dialog>\n    );\n  }\n}\n\nexport default withSerializableObject(VariablesEditorDialog, {\n  newObjectCreator: () => new gd.VariablesContainer(),\n  propName: 'variablesContainer',\n});\n","// @flow\n\n// Helpers to manipulate tags. See also EditTagsDialog.js\n\nexport type Tags = Array<string>;\nexport type SelectedTags = Tags;\n\nexport const removeTag = (tags: Tags, tag: string): Tags => {\n  return tags.filter(selectedTag => selectedTag !== tag);\n};\n\nexport const addTags = (tags: Tags, newTags: Tags): Tags => {\n  return Array.from(new Set([...tags, ...newTags]));\n};\n\nexport type BuildTagsMenuTemplateOptions = {|\n  noTagLabel: string,\n  getAllTags: () => Array<string>,\n  selectedTags: SelectedTags,\n  onChange: SelectedTags => void,\n  onEditTags?: () => void,\n  editTagsLabel?: string,\n|};\n\nexport const buildTagsMenuTemplate = ({\n  noTagLabel,\n  getAllTags,\n  selectedTags,\n  onChange,\n  onEditTags,\n  editTagsLabel,\n}: BuildTagsMenuTemplateOptions): Array<any> => {\n  const allTags = getAllTags();\n  const footerMenuItems =\n    onEditTags && editTagsLabel\n      ? [\n          {\n            type: 'separator',\n          },\n          {\n            label: editTagsLabel,\n            click: onEditTags,\n          },\n        ]\n      : [];\n\n  if (!allTags.length) {\n    return [\n      {\n        label: noTagLabel,\n        enabled: false,\n      },\n      ...footerMenuItems,\n    ];\n  }\n\n  return allTags\n    .map(tag => ({\n      type: 'checkbox',\n      label: tag,\n      checked: selectedTags.includes(tag),\n      click: () => {\n        if (selectedTags.includes(tag)) {\n          onChange(removeTag(selectedTags, tag));\n        } else {\n          onChange(addTags(selectedTags, [tag]));\n        }\n      },\n    }))\n    .concat(footerMenuItems);\n};\n\nexport const getTagsFromString = (tagsString: string): Tags => {\n  if (tagsString.trim() === '') return [];\n\n  return tagsString.split(',').map(tag => tag.trim());\n};\n\nexport const getStringFromTags = (tags: Tags): string => {\n  return tags.join(', ');\n};\n\nexport const hasStringAllTags = (tagsString: string, tags: Tags) => {\n  for (const tag of tags) {\n    if (tagsString.indexOf(tag) === -1) return false;\n  }\n\n  return true;\n};\n","// @flow\n\n/**\n * Convert a rgb color value to a string hex value.\n * @note No \"#\" or \"0x\" are added.\n */\nexport const rgbToHex = (r: number, g: number, b: number) =>\n  '' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n/**\n * Convert a rgb color value to a hex value.\n */\nexport const rgbToHexNumber = (r: number, g: number, b: number) =>\n  (r << 16) + (g << 8) + b;\n\n/**\n * Convert a hex color value to an rgb object value.\n */\nexport const hexToRGBColor = (hex: string) => {\n  const hexNumber = parseInt(hex.replace('#', ''), 16);\n  return {\n    r: (hexNumber >> 16) & 0xff,\n    g: (hexNumber >> 8) & 0xff,\n    b: hexNumber & 0xff,\n    a: 255,\n  };\n};\n","// @flow\nimport type {\n  GroupWithContext,\n  ObjectWithContext,\n} from '../../../ObjectsList/EnumerateObjects';\nimport { type EnumeratedInstructionOrExpressionMetadata } from '../InstructionOrExpressionSelector/EnumeratedInstructionOrExpressionMetadata.js';\n\n// ListItem created must have consistent keys that include their type\n// (object, group, instruction) to allow them to be living\n// in the same list (in search results) and be selected.\n\nexport const getObjectGroupListItemKey = (groupWithContext: GroupWithContext) =>\n  `object-group-key-${groupWithContext.group.getName()}-${\n    groupWithContext.global ? '-global' : ''\n  }`;\nexport const getObjectListItemKey = (objectWithContext: ObjectWithContext) =>\n  `object-key-${objectWithContext.object.getName()}-${\n    objectWithContext.global ? '-global' : ''\n  }`;\nexport const getObjectOrObjectGroupListItemValue = (\n  objectOrObjectGroupName: string\n) => `object-or-object-group-value-${objectOrObjectGroupName}`;\n\nexport const getInstructionListItemKey = (\n  instruction: EnumeratedInstructionOrExpressionMetadata\n) => `instruction-key-${instruction.fullGroupName}-${instruction.type}`;\nexport const getInstructionListItemValue = (instructionType: string) =>\n  `instruction-value-${instructionType}`;\n\nexport const getSubheaderListItemKey = (subheader: string) =>\n  `subheader-key-${subheader}`;\n","// @flow\nimport { type I18n as I18nType } from '@lingui/core';\nimport { mapVector, mapFor } from '../Utils/MapFor';\nimport { caseSensitiveSlug } from '../Utils/CaseSensitiveSlug';\nimport {\n  declareInstructionOrExpressionMetadata,\n  declareBehaviorInstructionOrExpressionMetadata,\n  declareEventsFunctionParameters,\n  declareBehaviorMetadata,\n  declareExtension,\n  isBehaviorLifecycleFunction,\n  declareBehaviorPropertiesInstructionAndExpressions,\n} from './MetadataDeclarationHelpers';\n\nconst gd = global.gd;\n\nexport type EventsFunctionCodeWriter = {|\n  getIncludeFileFor: (functionName: string) => string,\n  writeFunctionCode: (functionName: string, code: string) => Promise<void>,\n  writeBehaviorCode: (behaviorName: string, code: string) => Promise<void>,\n|};\n\ntype Options = {|\n  skipCodeGeneration?: boolean,\n  eventsFunctionCodeWriter: EventsFunctionCodeWriter,\n  i18n: I18nType,\n|};\n\nconst mangleName = (name: string) => {\n  return caseSensitiveSlug(name, '_', []);\n};\n\n/**\n * Load all events functions of a project in extensions\n */\nexport const loadProjectEventsFunctionsExtensions = (\n  project: gdProject,\n  eventsFunctionCodeWriter: EventsFunctionCodeWriter,\n  i18n: I18nType\n): Promise<Array<void>> => {\n  return Promise.all(\n    // First pass: generate extensions from the events functions extensions,\n    // without writing code for the functions. This is useful as events in functions\n    // could be using other functions, which would not yet be available as\n    // extensions.\n    mapFor(0, project.getEventsFunctionsExtensionsCount(), i => {\n      return loadProjectEventsFunctionsExtension(\n        project,\n        project.getEventsFunctionsExtensionAt(i),\n        { skipCodeGeneration: true, eventsFunctionCodeWriter, i18n }\n      );\n    })\n  ).then(() =>\n    Promise.all(\n      // Second pass: generate extensions, including code.\n      mapFor(0, project.getEventsFunctionsExtensionsCount(), i => {\n        return loadProjectEventsFunctionsExtension(\n          project,\n          project.getEventsFunctionsExtensionAt(i),\n          {\n            skipCodeGeneration: false,\n            eventsFunctionCodeWriter,\n            i18n,\n          }\n        );\n      })\n    )\n  );\n};\n\nconst loadProjectEventsFunctionsExtension = (\n  project: gdProject,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  options: Options\n): Promise<void> => {\n  return generateEventsFunctionExtension(\n    project,\n    eventsFunctionsExtension,\n    options\n  ).then(extension => {\n    gd.JsPlatform.get().addNewExtension(extension);\n    extension.delete();\n  });\n};\n\n/**\n * Generate the code for the events based extension\n */\nconst generateEventsFunctionExtension = (\n  project: gdProject,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  options: Options\n): Promise<gdEventsFunctionsExtension> => {\n  const extension = new gd.PlatformExtension();\n  declareExtension(extension, eventsFunctionsExtension);\n\n  const codeNamespacePrefix =\n    'gdjs.evtsExt__' + mangleName(eventsFunctionsExtension.getName());\n\n  return Promise.all(\n    // Generate all behaviors and their functions\n    mapVector(\n      eventsFunctionsExtension.getEventsBasedBehaviors(),\n      eventsBasedBehavior => {\n        return generateBehavior(\n          project,\n          extension,\n          eventsFunctionsExtension,\n          eventsBasedBehavior,\n          {\n            ...options,\n            codeNamespacePrefix,\n          }\n        );\n      }\n    )\n  )\n    .then(() =>\n      // Generate all free functions\n      Promise.all(\n        mapFor(0, eventsFunctionsExtension.getEventsFunctionsCount(), i => {\n          const eventsFunction = eventsFunctionsExtension.getEventsFunctionAt(\n            i\n          );\n          generateFreeFunction(\n            project,\n            extension,\n            eventsFunctionsExtension,\n            eventsFunction,\n            {\n              ...options,\n              codeNamespacePrefix,\n            }\n          );\n        })\n      )\n    )\n    .then(() => extension);\n};\n\nconst generateFreeFunction = (\n  project: gdProject,\n  extensionOrBehaviorMetadata: gdPlatformExtension | gdBehaviorMetadata,\n  eventsFunctionsExtensionOrEventsBasedBehavior:\n    | gdEventsFunctionsExtension\n    | gdEventsBasedBehavior,\n  eventsFunction: gdEventsFunction,\n  {\n    skipCodeGeneration,\n    eventsFunctionCodeWriter,\n    codeNamespacePrefix,\n  }: {| ...Options, codeNamespacePrefix: string |}\n) => {\n  const instructionOrExpression = declareInstructionOrExpressionMetadata(\n    extensionOrBehaviorMetadata,\n    eventsFunctionsExtensionOrEventsBasedBehavior,\n    eventsFunction\n  );\n  // By convention, first parameter is always the Runtime Scene.\n  instructionOrExpression.addCodeOnlyParameter('currentScene', '');\n  declareEventsFunctionParameters(eventsFunction, instructionOrExpression);\n\n  const codeNamespace =\n    codeNamespacePrefix + '__' + mangleName(eventsFunction.getName());\n  const functionName = codeNamespace + '.func';\n\n  const codeExtraInformation = instructionOrExpression.getCodeExtraInformation();\n  codeExtraInformation\n    .setIncludeFile(eventsFunctionCodeWriter.getIncludeFileFor(functionName))\n    .setFunctionName(functionName);\n\n  if (!skipCodeGeneration) {\n    const includeFiles = new gd.SetString();\n    const code = gd.EventsCodeGenerator.generateEventsFunctionCode(\n      project,\n      eventsFunction,\n      codeNamespace,\n      includeFiles,\n      // For now, always generate functions for runtime (this disables\n      // generation of profiling for groups (see EventsCodeGenerator))\n      // as extensions generated can be used either for preview or export.\n      true\n    );\n\n    // Add any include file required by the function to the list\n    // of include files for this function (so that when used, the \"dependencies\"\n    // are transitively included).\n    includeFiles\n      .toNewVectorString()\n      .toJSArray()\n      .forEach((includeFile: string) => {\n        codeExtraInformation.addIncludeFile(includeFile);\n      });\n\n    includeFiles.delete();\n\n    return eventsFunctionCodeWriter.writeFunctionCode(functionName, code);\n  } else {\n    // Skip code generation if no events function writer is provided.\n    // This is the case during the \"first pass\", where all events functions extensions\n    // are loaded as extensions but not code generated, as events in functions could\n    // themselves be using functions that are not yet available in extensions.\n  }\n};\n\nfunction generateBehavior(\n  project: gdProject,\n  extension: gdPlatformExtension,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  eventsBasedBehavior: gdEventsBasedBehavior,\n  options: {| ...Options, codeNamespacePrefix: string |}\n) {\n  const behaviorMetadata = declareBehaviorMetadata(\n    extension,\n    eventsBasedBehavior\n  );\n\n  const eventsFunctionsContainer = eventsBasedBehavior.getEventsFunctions();\n  const codeNamespace =\n    options.codeNamespacePrefix +\n    '__' +\n    mangleName(eventsBasedBehavior.getName());\n  const includeFile = options.eventsFunctionCodeWriter.getIncludeFileFor(\n    codeNamespace\n  );\n\n  behaviorMetadata.setIncludeFile(includeFile);\n\n  return Promise.resolve().then(() => {\n    const behaviorMethodMangledNames = new gd.MapStringString();\n\n    // Declare the instructions/expressions for properties\n    declareBehaviorPropertiesInstructionAndExpressions(\n      options.i18n,\n      behaviorMetadata,\n      eventsBasedBehavior\n    );\n\n    // Declare all the behavior functions\n    mapFor(0, eventsFunctionsContainer.getEventsFunctionsCount(), i => {\n      const eventsFunction = eventsFunctionsContainer.getEventsFunctionAt(i);\n\n      const eventsFunctionMangledName = mangleName(eventsFunction.getName());\n      behaviorMethodMangledNames.set(\n        eventsFunction.getName(),\n        eventsFunctionMangledName\n      );\n\n      const instructionOrExpression = declareBehaviorInstructionOrExpressionMetadata(\n        behaviorMetadata,\n        eventsBasedBehavior,\n        eventsFunction\n      );\n      declareEventsFunctionParameters(eventsFunction, instructionOrExpression);\n\n      // Hide \"lifecycle\" methods as they are called automatically by\n      // the game engine.\n      if (isBehaviorLifecycleFunction(eventsFunction.getName())) {\n        instructionOrExpression.setHidden();\n      }\n\n      const codeExtraInformation = instructionOrExpression.getCodeExtraInformation();\n      codeExtraInformation\n        .setIncludeFile(includeFile)\n        .setFunctionName(eventsFunctionMangledName);\n    });\n\n    // Generate code for the behavior and its methods\n    if (!options.skipCodeGeneration) {\n      const includeFiles = new gd.SetString();\n      const behaviorCodeGenerator = new gd.BehaviorCodeGenerator(project);\n      const code = behaviorCodeGenerator.generateRuntimeBehaviorCompleteCode(\n        eventsFunctionsExtension.getName(),\n        eventsBasedBehavior,\n        codeNamespace,\n        behaviorMethodMangledNames,\n        includeFiles,\n\n        // For now, always generate functions for runtime (this disables\n        // generation of profiling for groups (see EventsCodeGenerator))\n        // as extensions generated can be used either for preview or export.\n        true\n      );\n      behaviorCodeGenerator.delete();\n      behaviorMethodMangledNames.delete();\n\n      // Add any include file required by the functions to the list\n      // of include files for this behavior (so that when used, the \"dependencies\"\n      // are transitively included).\n      includeFiles\n        .toNewVectorString()\n        .toJSArray()\n        .forEach((includeFile: string) => {\n          behaviorMetadata.addIncludeFile(includeFile);\n        });\n\n      includeFiles.delete();\n\n      return options.eventsFunctionCodeWriter.writeBehaviorCode(\n        codeNamespace,\n        code\n      );\n    } else {\n      // Skip code generation\n      behaviorMethodMangledNames.delete();\n      return Promise.resolve();\n    }\n  });\n}\n\n/**\n * Unload all extensions providing events functions of a project\n */\nexport const unloadProjectEventsFunctionsExtensions = (\n  project: gdProject\n): Promise<Array<void>> => {\n  return Promise.all(\n    mapFor(0, project.getEventsFunctionsExtensionsCount(), i => {\n      gd.JsPlatform.get().removeExtension(\n        project.getEventsFunctionsExtensionAt(i).getName()\n      );\n    })\n  );\n};\n\n/**\n * Given metadata about an instruction or an expression, tells if this was created\n * from an event function.\n */\nexport const isAnEventFunctionMetadata = (\n  instructionOrExpression: gdInstructionMetadata | gdExpressionMetadata\n) => {\n  const parametersCount = instructionOrExpression.getParametersCount();\n  if (parametersCount <= 0) return false;\n\n  return (\n    instructionOrExpression.getParameter(parametersCount - 1).getType() ===\n    'eventsFunctionContext'\n  );\n};\n\n/**\n * Get back the name a function from its type.\n * See also getFreeEventsFunctionType for the reverse operation.\n */\nexport const getFunctionNameFromType = (type: string) => {\n  const parts = type.split('::');\n  if (!parts.length)\n    return {\n      name: '',\n      behaviorName: '',\n      extensionName: '',\n    };\n\n  return {\n    name: parts[parts.length - 1],\n    behaviorName: parts.length > 2 ? parts[1] : undefined,\n    extensionName: parts[0],\n  };\n};\n\n/**\n * Get the type of a Events Function.\n * See also getFunctionNameFromType for the reverse operation.\n */\nexport const getFreeEventsFunctionType = (\n  extensionName: string,\n  eventsFunction: gdEventsFunction\n) => {\n  return extensionName + '::' + eventsFunction.getName();\n};\n\n/**\n * Return the index of the first parameter to be shown to the user:\n * * 0 for a behavior \"method\",\n * * 1 for a free function (as the first parameter is by convention the runtimeScene).\n */\nexport const getParametersIndexOffset = (\n  isEventsBasedBehaviorMethod: boolean\n) => {\n  return isEventsBasedBehaviorMethod\n    ? 0 /*In the case of a behavior events function, the first two parameters are by convention the \"Object\" and \"Behavior\" */\n    : 1; /*In the case of a free events function (i.e: not tied to a behavior), the first parameter is by convention the current scene and is not shown.*/\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport SemiControlledTextField from '../UI/SemiControlledTextField';\nimport InlineCheckbox from '../UI/InlineCheckbox';\nimport ResourceSelector from '../ResourcesList/ResourceSelector';\nimport ResourcesLoader from '../ResourcesLoader';\nimport Subheader from '../UI/Subheader';\nimport FlatButton from '../UI/FlatButton';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport Edit from '@material-ui/icons/Edit';\nimport ColorField from '../UI/ColorField';\nimport { MarkdownText } from '../UI/MarkdownText';\nimport { hexToRGBColor } from '../Utils/ColorTransformer';\n\nimport {\n  type ResourceKind,\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport {\n  TextFieldWithButtonLayout,\n  ResponsiveLineStackLayout,\n} from '../UI/Layout';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Column } from '../UI/Grid';\n\n// An \"instance\" here is the objects for which properties are shown\nexport type Instance = Object; // This could be improved using generics.\nexport type Instances = Array<Instance>;\n\n// \"Value\" fields are fields displayed in the properties.\nexport type ValueFieldCommonProperties = {|\n  name: string,\n  getLabel?: Instance => string,\n  getDescription?: Instance => string,\n  getExtraDescription?: Instance => string,\n  disabled?: boolean,\n  onEditButtonClick?: Instance => void,\n  onClick?: Instance => void,\n|};\n\n// \"Primitive\" value fields are \"simple\" fields.\nexport type PrimitiveValueField =\n  | {|\n      valueType: 'number',\n      getValue: Instance => number,\n      setValue: (instance: Instance, newValue: number) => void,\n      ...ValueFieldCommonProperties,\n    |}\n  | {|\n      valueType: 'string',\n      getValue: Instance => string,\n      setValue: (instance: Instance, newValue: string) => void,\n      getChoices?: ?() => Array<{| value: string, label: string |}>,\n      ...ValueFieldCommonProperties,\n    |}\n  | {|\n      valueType: 'boolean',\n      getValue: Instance => boolean,\n      setValue: (instance: Instance, newValue: boolean) => void,\n      ...ValueFieldCommonProperties,\n    |}\n  | {|\n      valueType: 'color',\n      getValue: Instance => string,\n      setValue: (instance: Instance, newValue: string) => void,\n      ...ValueFieldCommonProperties,\n    |}\n  | {|\n      valueType: 'textarea',\n      getValue: Instance => string,\n      setValue: (instance: Instance, newValue: string) => void,\n      ...ValueFieldCommonProperties,\n    |};\n\n// \"Resource\" fields are showing a resource selector.\ntype ResourceField = {|\n  valueType: 'resource',\n  resourceKind: ResourceKind,\n  getValue: Instance => string,\n  setValue: (instance: Instance, newValue: string) => void,\n  ...ValueFieldCommonProperties,\n|};\n\n// A value field is a primitive or a resource.\nexport type ValueField = PrimitiveValueField | ResourceField;\n\n// A field can be a primitive, a resource or a list of fields\nexport type Field =\n  | PrimitiveValueField\n  | ResourceField\n  | {|\n      name: string,\n      type: 'row' | 'column',\n      children: Array<Object>,\n    |};\n\n// The schema is the tree of all fields.\nexport type Schema = Array<Field>;\n\n// Mandatory props in any case when using the component\ntype MandatoryProps = {|\n  onInstancesModified?: Instances => void,\n  instances: Instances,\n  schema: Schema,\n  mode?: 'column' | 'row',\n\n  // If set, render the \"extra\" description content from fields\n  // (see getExtraDescription).\n  renderExtraDescriptionText?: (extraDescription: string) => string,\n|};\n\ntype Props =\n  // Mandatory props in all cases:\n  | MandatoryProps\n  // Props to be used when you want to display resources:\n  | {|\n      ...MandatoryProps,\n      project: gdProject,\n      resourceSources: Array<ResourceSource>,\n      onChooseResource: ChooseResourceFunction,\n      resourceExternalEditors: Array<ResourceExternalEditor>,\n    |};\n\nconst styles = {\n  columnContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  fieldContainer: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'baseline',\n  },\n  field: {\n    flex: 1,\n    width: 'auto',\n  },\n  subPropertiesEditorContainer: {\n    marginLeft: 15,\n  },\n  subHeader: {\n    paddingLeft: 0,\n  },\n};\n\nconst getFieldValue = (\n  instances: Instances,\n  field: ValueField,\n  defaultValue?: any\n): any => {\n  if (!instances[0]) {\n    console.log(\n      'getFieldValue was called with an empty list of instances (or containing undefined). This is a bug that should be fixed'\n    );\n    return defaultValue;\n  }\n\n  let value = field.getValue(instances[0]);\n  for (var i = 1; i < instances.length; ++i) {\n    if (value !== field.getValue(instances[i])) {\n      if (typeof defaultValue !== 'undefined') value = defaultValue;\n      break;\n    }\n  }\n\n  return value;\n};\n\nconst getFieldLabel = (instances: Instances, field: ValueField): any => {\n  if (!instances[0]) {\n    console.log(\n      'PropertiesEditor._getFieldLabel was called with an empty list of instances (or containing undefined). This is a bug that should be fixed'\n    );\n    return field.name;\n  }\n\n  if (field.getLabel) return field.getLabel(instances[0]);\n\n  return field.name;\n};\n\nexport default class PropertiesEditor extends React.Component<Props, {||}> {\n  _onInstancesModified = (instances: Instances) => {\n    // This properties editor is dealing with fields that are\n    // responsible to update their state (see field.setValue).\n\n    if (this.props.onInstancesModified)\n      this.props.onInstancesModified(instances);\n    else this.forceUpdate();\n  };\n\n  _getFieldDescription = (instances: Instances, field: ValueField): ?string => {\n    const { renderExtraDescriptionText } = this.props;\n    if (!instances[0]) {\n      console.log(\n        'PropertiesEditor._getFieldDescription was called with an empty list of instances (or containing undefined). This is a bug that should be fixed'\n      );\n      return undefined;\n    }\n\n    const descriptions: Array<string> = [];\n    if (field.getDescription)\n      descriptions.push(field.getDescription(instances[0]));\n    if (renderExtraDescriptionText && field.getExtraDescription)\n      descriptions.push(\n        renderExtraDescriptionText(field.getExtraDescription(instances[0]))\n      );\n\n    return descriptions.join('\\n') || undefined;\n  };\n\n  _renderInputField = (field: ValueField) => {\n    if (field.name === 'PLEASE_ALSO_SHOW_EDIT_BUTTON_THANKS') return null; // This special property was used in GDevelop 4 IDE to ask for a Edit button to be shown, ignore it.\n\n    if (field.valueType === 'boolean') {\n      const { setValue } = field;\n      const description = this._getFieldDescription(\n        this.props.instances,\n        field\n      );\n\n      return (\n        <InlineCheckbox\n          label={\n            !description ? (\n              getFieldLabel(this.props.instances, field)\n            ) : (\n              <React.Fragment>\n                {getFieldLabel(this.props.instances, field)} -{' '}\n                <MarkdownText source={description} />\n              </React.Fragment>\n            )\n          }\n          key={field.name}\n          checked={getFieldValue(this.props.instances, field)}\n          onCheck={(event, newValue) => {\n            this.props.instances.forEach(i => setValue(i, !!newValue));\n            this._onInstancesModified(this.props.instances);\n          }}\n          disabled={field.disabled}\n        />\n      );\n    } else if (field.valueType === 'number') {\n      const { setValue } = field;\n      return (\n        <SemiControlledTextField\n          value={getFieldValue(this.props.instances, field)}\n          key={field.name}\n          id={field.name}\n          floatingLabelText={getFieldLabel(this.props.instances, field)}\n          floatingLabelFixed\n          helperMarkdownText={this._getFieldDescription(\n            this.props.instances,\n            field\n          )}\n          onChange={newValue => {\n            this.props.instances.forEach(i =>\n              setValue(i, parseFloat(newValue) || 0)\n            );\n            this._onInstancesModified(this.props.instances);\n          }}\n          type=\"number\"\n          style={styles.field}\n          disabled={field.disabled}\n        />\n      );\n    } else if (field.valueType === 'color') {\n      const { setValue } = field;\n      return (\n        <ColorField\n          key={field.name}\n          id={field.name}\n          floatingLabelText={getFieldLabel(this.props.instances, field)}\n          helperMarkdownText={this._getFieldDescription(\n            this.props.instances,\n            field\n          )}\n          disableAlpha\n          fullWidth\n          color={hexToRGBColor(getFieldValue(this.props.instances, field))}\n          onChangeComplete={color => {\n            this.props.instances.forEach(i =>\n              setValue(i, color.hex || '#000000')\n            );\n            this._onInstancesModified(this.props.instances);\n          }}\n        />\n      );\n    } else if (field.valueType === 'textarea') {\n      const { setValue } = field;\n      return (\n        <SemiControlledTextField\n          key={field.name}\n          id={field.name}\n          onChange={text => {\n            this.props.instances.forEach(i => setValue(i, text || ''));\n            this._onInstancesModified(this.props.instances);\n          }}\n          value={getFieldValue(this.props.instances, field)}\n          floatingLabelText={getFieldLabel(this.props.instances, field)}\n          floatingLabelFixed\n          helperMarkdownText={this._getFieldDescription(\n            this.props.instances,\n            field\n          )}\n          multiLine\n          style={styles.field}\n        />\n      );\n    } else {\n      const { onEditButtonClick, setValue } = field;\n      return (\n        <TextFieldWithButtonLayout\n          key={field.name}\n          renderTextField={() => (\n            <SemiControlledTextField\n              value={getFieldValue(\n                this.props.instances,\n                field,\n                '(Multiple values)'\n              )}\n              id={field.name}\n              floatingLabelText={getFieldLabel(this.props.instances, field)}\n              floatingLabelFixed\n              helperMarkdownText={this._getFieldDescription(\n                this.props.instances,\n                field\n              )}\n              onChange={newValue => {\n                this.props.instances.forEach(i => setValue(i, newValue || ''));\n                this._onInstancesModified(this.props.instances);\n              }}\n              style={styles.field}\n              disabled={field.disabled}\n            />\n          )}\n          renderButton={style =>\n            onEditButtonClick ? (\n              <RaisedButton\n                style={style}\n                primary\n                disabled={this.props.instances.length !== 1}\n                icon={<Edit />}\n                label={<Trans>Edit</Trans>}\n                onClick={() => onEditButtonClick(this.props.instances[0])}\n              />\n            ) : null\n          }\n        />\n      );\n    }\n  };\n\n  _renderSelectField = (field: ValueField) => {\n    if (!field.getChoices || !field.getValue) return;\n\n    const children = field\n      .getChoices()\n      .map(({ value, label }) => (\n        <SelectOption key={value} value={value} primaryText={label} />\n      ));\n\n    if (field.valueType === 'number') {\n      const { setValue } = field;\n      return (\n        <SelectField\n          value={getFieldValue(this.props.instances, field)}\n          key={field.name}\n          floatingLabelText={getFieldLabel(this.props.instances, field)}\n          helperMarkdownText={this._getFieldDescription(\n            this.props.instances,\n            field\n          )}\n          onChange={(event, index, newValue: string) => {\n            this.props.instances.forEach(i =>\n              setValue(i, parseFloat(newValue) || 0)\n            );\n            this._onInstancesModified(this.props.instances);\n          }}\n          style={styles.field}\n          disabled={field.disabled}\n        >\n          {children}\n        </SelectField>\n      );\n    } else if (field.valueType === 'string') {\n      const { setValue } = field;\n      return (\n        <SelectField\n          value={getFieldValue(\n            this.props.instances,\n            field,\n            '(Multiple values)'\n          )}\n          key={field.name}\n          floatingLabelText={getFieldLabel(this.props.instances, field)}\n          helperMarkdownText={this._getFieldDescription(\n            this.props.instances,\n            field\n          )}\n          onChange={(event, index, newValue: string) => {\n            this.props.instances.forEach(i => setValue(i, newValue || ''));\n            this._onInstancesModified(this.props.instances);\n          }}\n          style={styles.field}\n          disabled={field.disabled}\n        >\n          {children}\n        </SelectField>\n      );\n    }\n  };\n\n  _renderButton = (field: ValueField) => {\n    //TODO: multi selection handling\n    return (\n      <FlatButton\n        key={field.name}\n        fullWidth\n        primary\n        label={getFieldLabel(this.props.instances, field)}\n        onClick={() => {\n          if (field.onClick) field.onClick(this.props.instances[0]);\n        }}\n      />\n    );\n  };\n\n  _renderResourceField = (field: ResourceField) => {\n    if (!this.props.project) {\n      console.error(\n        'You tried to display a resource field in a PropertiesEditor that does not support display resources. If you need to display resources, pass additional props (project, resourceSources, etc...)'\n      );\n      return;\n    }\n\n    const { setValue } = field;\n    return (\n      <ResourceSelector\n        key={field.name}\n        project={this.props.project}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        resourcesLoader={ResourcesLoader}\n        resourceKind={field.resourceKind}\n        fullWidth\n        initialResourceName={getFieldValue(\n          this.props.instances,\n          field,\n          '(Multiple values)' //TODO\n        )}\n        onChange={newValue => {\n          this.props.instances.forEach(i => setValue(i, newValue));\n          this._onInstancesModified(this.props.instances);\n        }}\n        floatingLabelText={getFieldLabel(this.props.instances, field)}\n        helperMarkdownText={this._getFieldDescription(\n          this.props.instances,\n          field\n        )}\n      />\n    );\n  };\n\n  render() {\n    const { mode } = this.props;\n\n    const renderContainer =\n      mode === 'row'\n        ? (fields: React.Node) => (\n            <ResponsiveLineStackLayout>{fields}</ResponsiveLineStackLayout>\n          )\n        : (fields: React.Node) => <Column noMargin>{fields}</Column>;\n\n    return renderContainer(\n      this.props.schema.map(field => {\n        if (field.children) {\n          if (field.type === 'row') {\n            return (\n              <PropertiesEditor\n                key={field.name}\n                schema={field.children}\n                instances={this.props.instances}\n                mode=\"row\"\n              />\n            );\n          }\n\n          return (\n            <div key={field.name}>\n              <Subheader>{field.name}</Subheader>\n              <div style={styles.subPropertiesEditorContainer}>\n                <PropertiesEditor\n                  schema={field.children}\n                  instances={this.props.instances}\n                  mode=\"column\"\n                />\n              </div>\n            </div>\n          );\n        } else if (field.valueType === 'resource') {\n          return this._renderResourceField(field);\n        } else {\n          if (field.getChoices && field.getValue)\n            return this._renderSelectField(field);\n          if (field.getValue) return this._renderInputField(field);\n          if (field.onClick) return this._renderButton(field);\n        }\n\n        return null;\n      })\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ThemeConsumer from './Theme/ThemeConsumer';\n\ntype ToolbarProps = {|\n  children: React.Node,\n|};\n\ntype ToolbarGroupProps = {|\n  children?: React.Node,\n  firstChild?: true, // Not used, but could be useful one day for styling\n  lastChild?: true, // Not used, but could be useful one day for styling\n|};\n\nexport const Toolbar = React.memo<ToolbarProps>(\n  ({ children }: ToolbarProps) => (\n    <ThemeConsumer>\n      {muiTheme => (\n        <div\n          style={{\n            backgroundColor: muiTheme.toolbar.backgroundColor,\n            padding: 3,\n            flexShrink: 0,\n            display: 'flex',\n            justifyContent: 'space-between',\n            overflowX: 'auto',\n            overflowY: 'hidden',\n          }}\n        >\n          {children}\n        </div>\n      )}\n    </ThemeConsumer>\n  )\n);\n\nconst toolbarGroupStyle = {\n  display: 'flex',\n  alignItems: 'center',\n};\n\nexport const ToolbarGroup = React.memo<ToolbarGroupProps>(\n  ({ children }: ToolbarGroupProps) => (\n    <span style={toolbarGroupStyle}>{children}</span>\n  )\n);\n","// @flow\nimport * as React from 'react';\nimport IconButton from './IconButton';\nimport ThemeConsumer from './Theme/ThemeConsumer';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\n\ntype Props = {|\n  src: string,\n  tooltip?: MessageDescriptor,\n  acceleratorString?: string,\n  disabled?: boolean,\n  onClick?: () => void,\n|};\n\n/**\n * An icon that can be used in a ToolbarGroup of a Toolbar.\n */\nconst ToolbarIcon = React.forwardRef<Props, IconButton>((props: Props, ref) => {\n  const { src, tooltip, acceleratorString, disabled, onClick } = props;\n\n  return (\n    <ThemeConsumer>\n      {muiTheme => (\n        <IconButton\n          onClick={onClick}\n          size=\"small\"\n          disabled={disabled}\n          tooltip={tooltip}\n          acceleratorString={acceleratorString}\n          ref={ref}\n        >\n          <img\n            alt={tooltip}\n            src={src}\n            width={32}\n            height={32}\n            style={{\n              filter: disabled\n                ? 'grayscale(100%)'\n                : muiTheme.gdevelopIconsCSSFilter,\n            }}\n          />\n        </IconButton>\n      )}\n    </ThemeConsumer>\n  );\n});\n\nexport default ToolbarIcon;\n","import React from 'react';\nimport ThemeConsumer from './Theme/ThemeConsumer';\n\nexport default props => {\n  return (\n    <ThemeConsumer>\n      {muiTheme => (\n        <span\n          style={{\n            height: 32,\n            marginLeft: 3,\n            marginRight: 3,\n            borderLeftStyle: 'solid',\n            borderLeftWidth: 1,\n            borderColor: muiTheme.toolbar.separatorColor,\n          }}\n        />\n      )}\n    </ThemeConsumer>\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\n// We support a subset of the props supported by Material-UI v0.x Toggle\n// They should be self descriptive - refer to Material UI docs otherwise.\ntype Props = {|\n  label?: ?React.Node,\n  toggled: boolean,\n  onToggle: (e: {||}, toggled: boolean) => void,\n  disabled?: boolean,\n  labelPosition: 'right',\n\n  style?: {|\n    marginTop?: number,\n  |},\n|};\n\n/**\n * A text field based on Material-UI text field.\n */\nexport default class Toggle extends React.Component<Props, {||}> {\n  render() {\n    return (\n      <FormControlLabel\n        control={\n          <Switch\n            checked={this.props.toggled}\n            onChange={event => this.props.onToggle(event, event.target.checked)}\n            color=\"primary\"\n          />\n        }\n        label={this.props.label}\n        disabled={this.props.disabled}\n        style={this.props.style}\n      />\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { type Profile } from '../Utils/GDevelopServices/Authentification';\nimport {\n  type Limits,\n  type Usages,\n  type Subscription,\n} from '../Utils/GDevelopServices/Usage';\n\nexport type UserProfile = {|\n  authenticated: boolean,\n  profile: ?Profile,\n  limits: ?Limits,\n  usages: ?Usages,\n  subscription: ?Subscription,\n  onLogout: () => void,\n  onLogin: () => void,\n  onCreateAccount: () => void,\n  onRefreshUserProfile: () => void,\n  getAuthorizationHeader: () => Promise<string>,\n|};\n\nexport const initialUserProfile = {\n  authenticated: false,\n  profile: null,\n  subscription: null,\n  usages: null,\n  limits: null,\n  onLogout: () => {},\n  onLogin: () => {},\n  onCreateAccount: () => {},\n  onRefreshUserProfile: () => {},\n  getAuthorizationHeader: () => Promise.reject(new Error('Unimplemented')),\n};\n\nconst UserProfileContext = React.createContext<UserProfile>(initialUserProfile);\n\nexport default UserProfileContext;\n","// @flow\nimport * as React from 'react';\nimport PreferencesContext, {\n  type AlertMessageIdentifier,\n} from '../MainFrame/Preferences/PreferencesContext';\nimport AlertMessage from './AlertMessage';\n\ntype Props = {|\n  kind: 'info' | 'warning',\n  children: React.Node,\n  identifier: AlertMessageIdentifier,\n|};\n\n/**\n * Show an alert that can be permanently hidden. Hidden messages\n * will be stored in preferences.\n */\nconst DismissableAlertMessage = ({ identifier, kind, children }: Props) => (\n  <PreferencesContext.Consumer>\n    {({ values, showAlertMessage }) =>\n      !values.hiddenAlertMessages[identifier] && (\n        <AlertMessage\n          kind={kind}\n          children={children}\n          onHide={() => {\n            //eslint-disable-next-line\n            const answer = confirm(\n              \"Are you sure you want to hide this hint? You won't see it again, unless you re-activate it from the preferences.\"\n            );\n\n            if (!answer) return;\n\n            showAlertMessage(identifier, false);\n          }}\n        />\n      )\n    }\n  </PreferencesContext.Consumer>\n);\n\nexport default DismissableAlertMessage;\n","// @flow\nimport * as React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = {\n  progress: { marginRight: 8, verticalAlign: 'middle' },\n};\n\nexport default ({\n  children,\n  isLoading,\n}: {\n  children: React.Node,\n  isLoading: ?boolean,\n}) => (\n  <span>\n    {isLoading && <CircularProgress size={20} style={styles.progress} />}\n    {children}\n  </span>\n);\n","// @flow\nimport * as React from 'react';\nimport {\n  type EventsFunctionsExtensionWriter,\n  type EventsFunctionsExtensionOpener,\n} from './Storage';\n\nexport type EventsFunctionsExtensionsState = {|\n  eventsFunctionsExtensionsError: ?Error,\n  loadProjectEventsFunctionsExtensions: (project: ?gdProject) => Promise<void>,\n  unloadProjectEventsFunctionsExtensions: (project: gdProject) => void,\n  reloadProjectEventsFunctionsExtensions: (\n    project: ?gdProject\n  ) => Promise<void>,\n  getEventsFunctionsExtensionWriter: () => ?EventsFunctionsExtensionWriter,\n  getEventsFunctionsExtensionOpener: () => ?EventsFunctionsExtensionOpener,\n|};\n\nconst defaultState = {\n  eventsFunctionsExtensionsError: null,\n  loadProjectEventsFunctionsExtensions: () =>\n    Promise.reject(new Error('Use a provider')),\n  unloadProjectEventsFunctionsExtensions: () => {},\n  reloadProjectEventsFunctionsExtensions: () =>\n    Promise.reject(new Error('Use a provider')),\n  getEventsFunctionsExtensionWriter: () => null,\n  getEventsFunctionsExtensionOpener: () => null,\n};\n\nconst EventsFunctionsExtensionsContext = React.createContext<EventsFunctionsExtensionsState>(\n  defaultState\n);\n\nexport default EventsFunctionsExtensionsContext;\n","// @flow\nimport * as React from 'react';\nimport Instruction, { reactDndInstructionType } from './Instruction';\nimport { mapFor } from '../../Utils/MapFor';\nimport {\n  isInstructionSelected,\n  type InstructionsListContext,\n  type InstructionContext,\n  type ParameterContext,\n} from '../SelectionHandler';\nimport DropIndicator from './DropIndicator';\nimport { Trans } from '@lingui/macro';\nimport { hasClipboardConditions, hasClipboardActions } from '../ClipboardKind';\nimport { makeDropTarget } from '../../UI/DragAndDrop/DropTarget';\nimport { type ScreenType } from '../../UI/Reponsive/ScreenTypeMeasurer';\nimport { type WidthType } from '../../UI/Reponsive/ResponsiveWindowMeasurer';\n\nconst styles = {\n  addButton: {\n    cursor: 'pointer',\n  },\n};\n\ntype Props = {\n  instrsList: gdInstructionsList,\n  areConditions: boolean,\n  onAddNewInstruction: InstructionsListContext => void,\n  onPasteInstructions: InstructionsListContext => void,\n  onMoveToInstruction: (destinationContext: InstructionContext) => void,\n  onMoveToInstructionsList: (\n    destinationContext: InstructionsListContext\n  ) => void,\n  onInstructionClick: InstructionContext => void,\n  onInstructionDoubleClick: InstructionContext => void,\n  onInstructionContextMenu: (x: number, y: number, InstructionContext) => void,\n  onInstructionsListContextMenu: (\n    x: number,\n    y: number,\n    InstructionsListContext\n  ) => void,\n  onParameterClick: ParameterContext => void,\n  selection: any,\n  addButtonLabel?: React.Node,\n  className?: string,\n  style?: Object,\n  disabled: boolean,\n  renderObjectThumbnail: string => React.Node,\n\n  screenType: ScreenType,\n  windowWidth: WidthType,\n};\n\ntype State = {|\n  canPaste: boolean,\n|};\n\nconst DropTarget = makeDropTarget<{\n  isCondition: boolean,\n}>(reactDndInstructionType);\n\nexport default class InstructionsList extends React.Component<Props, State> {\n  state = { canPaste: false };\n\n  onAddNewInstruction = () => {\n    if (this.props.onAddNewInstruction)\n      this.props.onAddNewInstruction({\n        instrsList: this.props.instrsList,\n        isCondition: this.props.areConditions,\n      });\n  };\n\n  _onPasteInstructions = () => {\n    this.props.onPasteInstructions({\n      instrsList: this.props.instrsList,\n      isCondition: this.props.areConditions,\n    });\n  };\n\n  render() {\n    const { canPaste } = this.state;\n    const {\n      addButtonLabel,\n      areConditions,\n      className,\n      instrsList,\n      onAddNewInstruction,\n      onPasteInstructions,\n      onMoveToInstruction,\n      onMoveToInstructionsList,\n      onInstructionClick,\n      onInstructionContextMenu,\n      onInstructionDoubleClick,\n      onInstructionsListContextMenu,\n      onParameterClick,\n      selection,\n      style,\n      disabled,\n    } = this.props;\n\n    const instructions = mapFor(0, instrsList.size(), i => {\n      const instruction = instrsList.get(i);\n      const instructionContext = {\n        isCondition: areConditions,\n        instrsList: instrsList,\n        instruction,\n        indexInList: i,\n      };\n\n      return (\n        <Instruction\n          instruction={instruction}\n          isCondition={areConditions}\n          key={instruction.ptr}\n          selected={isInstructionSelected(selection, instruction)}\n          onMoveToInstruction={() => onMoveToInstruction(instructionContext)}\n          onClick={() => onInstructionClick(instructionContext)}\n          onDoubleClick={() => onInstructionDoubleClick(instructionContext)}\n          onContextMenu={(x, y) =>\n            onInstructionContextMenu(x, y, instructionContext)\n          }\n          onParameterClick={(domEvent, parameterIndex) =>\n            onParameterClick({\n              isCondition: instructionContext.isCondition,\n              instrsList: instructionContext.instrsList,\n              instruction: instructionContext.instruction,\n              indexInList: instructionContext.indexInList,\n              parameterIndex,\n              domEvent,\n            })\n          }\n          selection={selection}\n          onAddNewSubInstruction={onAddNewInstruction}\n          onPasteSubInstructions={onPasteInstructions}\n          onMoveToSubInstruction={onMoveToInstruction}\n          onMoveToSubInstructionsList={onMoveToInstructionsList}\n          onSubInstructionClick={onInstructionClick}\n          onSubInstructionDoubleClick={onInstructionDoubleClick}\n          onSubInstructionContextMenu={onInstructionContextMenu}\n          onSubInstructionsListContextMenu={onInstructionsListContextMenu}\n          onSubParameterClick={onParameterClick}\n          disabled={disabled}\n          renderObjectThumbnail={this.props.renderObjectThumbnail}\n          screenType={this.props.screenType}\n          windowWidth={this.props.windowWidth}\n        />\n      );\n    });\n\n    const instructionsListContext = {\n      isCondition: areConditions,\n      instrsList: instrsList,\n    };\n    const addButtonDefaultLabel = areConditions ? (\n      <Trans>Add condition</Trans>\n    ) : (\n      <Trans>Add action</Trans>\n    );\n\n    return (\n      <DropTarget\n        canDrop={draggedItem => draggedItem.isCondition === areConditions}\n        drop={() => {\n          onMoveToInstructionsList({\n            isCondition: areConditions,\n            instrsList: instrsList,\n          });\n        }}\n      >\n        {({ connectDropTarget, isOver, canDrop }) =>\n          connectDropTarget(\n            <div className={className} style={style}>\n              {instructions}\n              {isOver && <DropIndicator canDrop={canDrop} />}\n              <span\n                onPointerEnter={() => {\n                  const canPaste =\n                    (areConditions && hasClipboardConditions()) ||\n                    (!areConditions && hasClipboardActions());\n                  this.setState({ canPaste });\n                }}\n                onPointerLeave={() => this.setState({ canPaste: false })}\n              >\n                <button\n                  style={styles.addButton}\n                  className=\"add-link\"\n                  onClick={this.onAddNewInstruction}\n                  onContextMenu={e => {\n                    e.stopPropagation();\n                    onInstructionsListContextMenu(\n                      e.clientX,\n                      e.clientY,\n                      instructionsListContext\n                    );\n                  }}\n                >\n                  {addButtonLabel || addButtonDefaultLabel}\n                </button>\n                {canPaste && (\n                  <span>\n                    {' '}\n                    <button\n                      style={styles.addButton}\n                      className=\"add-link\"\n                      onClick={this._onPasteInstructions}\n                    >\n                      {areConditions ? (\n                        <Trans>(or paste conditions)</Trans>\n                      ) : (\n                        <Trans>(or paste actions)</Trans>\n                      )}\n                    </button>\n                  </span>\n                )}\n              </span>\n            </div>\n          )\n        }\n      </DropTarget>\n    );\n  }\n}\n","// @flow\nimport update from 'lodash/update';\nimport compact from 'lodash/compact';\nimport { type EnumeratedInstructionOrExpressionMetadata } from './EnumeratedInstructionOrExpressionMetadata.js';\n\nconst GROUP_DELIMITER = '/';\n\nexport type InstructionOrExpressionTreeNode =\n  | EnumeratedInstructionOrExpressionMetadata\n  | {\n      [string]: InstructionOrExpressionTreeNode,\n    };\n\nexport const createTree = (\n  allExpressions: Array<EnumeratedInstructionOrExpressionMetadata>\n): InstructionOrExpressionTreeNode => {\n  const tree = {};\n  allExpressions.forEach(\n    (expressionInfo: EnumeratedInstructionOrExpressionMetadata) => {\n      let pathInTree = compact(\n        expressionInfo.fullGroupName.split(GROUP_DELIMITER)\n      );\n      if (!pathInTree.length) {\n        // Group items without a group in an empty group\n        pathInTree = [''];\n      }\n\n      update(tree, pathInTree, groupInfo => {\n        const existingGroupInfo = groupInfo || {};\n        return {\n          ...existingGroupInfo,\n          [expressionInfo.displayedName]: expressionInfo,\n        };\n      });\n    }\n  );\n\n  return tree;\n};\n\nexport const findInTree = (\n  instructionTreeNode: InstructionOrExpressionTreeNode,\n  instructionType: ?string\n): ?Array<string> => {\n  if (!instructionType) return null;\n\n  const keys = Object.keys(instructionTreeNode);\n  for (var i = 0; i < keys.length; ++i) {\n    const key = keys[i];\n\n    // In theory, we should have a way to distinguish\n    // between instruction (leaf nodes) and group (nodes). We use\n    // the \"type\" properties, but this will fail if a group is called \"type\"\n    // (hence the flow errors, which are valid warnings)\n    const instructionOrGroup = instructionTreeNode[key];\n    if (!instructionOrGroup) return null;\n\n    if (typeof instructionOrGroup.type === 'string') {\n      // $FlowFixMe - see above\n      const instructionInformation: EnumeratedInstructionOrExpressionMetadata = instructionOrGroup;\n\n      if (instructionInformation.type === instructionType) {\n        return [];\n      }\n    } else {\n      // $FlowFixMe - see above\n      const groupOfInstructionInformation: InstructionOrExpressionTreeNode = instructionOrGroup;\n      const searchResult = findInTree(\n        groupOfInstructionInformation,\n        instructionType\n      );\n      if (searchResult) {\n        return [key, ...searchResult];\n      }\n    }\n  }\n\n  return null;\n};\n","// @flow\nimport {\n  type EnumeratedInstructionOrExpressionMetadata,\n  type InstructionOrExpressionScope,\n} from './EnumeratedInstructionOrExpressionMetadata.js';\nconst gd = global.gd;\n\nconst GROUP_DELIMITER = '/';\n\ntype ExtensionsExtraInstructions = {\n  BuiltinObject?: {\n    '': Array<string>,\n  },\n  Physics2?: {\n    'Physics2::Physics2Behavior': Array<string>,\n  },\n};\n\nconst freeActionsToAddToObject: ExtensionsExtraInstructions = {\n  BuiltinObject: {\n    '': ['AjoutHasard', 'Create', 'AjoutObjConcern'],\n  },\n};\n\nconst freeConditionsToAddToObject: ExtensionsExtraInstructions = {\n  BuiltinObject: {\n    '': [\n      'AjoutHasard',\n      'AjoutObjConcern',\n      'CollisionNP',\n      'NbObjet',\n      'PickNearest',\n      'Distance',\n      'SeDirige',\n      'EstTourne',\n    ],\n  },\n};\n\nconst freeActionsToAddToBehavior: ExtensionsExtraInstructions = {};\n\nconst freeConditionsToAddToBehavior: ExtensionsExtraInstructions = {\n  Physics2: {\n    'Physics2::Physics2Behavior': ['Physics2::Collision'],\n  },\n};\n\nconst freeInstructionsToRemove = {\n  BuiltinObject: [\n    // $FlowFixMe\n    ...freeActionsToAddToObject.BuiltinObject[''],\n    // $FlowFixMe\n    ...freeConditionsToAddToObject.BuiltinObject[''],\n  ],\n  Physics2: [\n    // $FlowFixMe\n    ...freeConditionsToAddToBehavior.Physics2['Physics2::Physics2Behavior'],\n  ],\n};\n\nconst filterInstructionsToRemove = (\n  list: Array<EnumeratedInstructionOrExpressionMetadata>,\n  typesToRemove: ?$ReadOnlyArray<string>\n) => {\n  const types = typesToRemove; // Make Flow happy\n  if (!types) return list;\n\n  return list.filter(metadata => types.indexOf(metadata.type) === -1);\n};\n\nconst enumerateExtraBehaviorInstructions = (\n  isCondition: boolean,\n  extension: gdPlatformExtension,\n  behaviorType: string,\n  prefix: string,\n  scope: InstructionOrExpressionScope\n) => {\n  const extensionName = extension.getName();\n\n  const extensionsExtraInstructions = isCondition\n    ? freeConditionsToAddToBehavior[extensionName]\n    : freeActionsToAddToBehavior[extensionName];\n  if (!extensionsExtraInstructions) {\n    return [];\n  }\n\n  const objectExtraInstructions = extensionsExtraInstructions[behaviorType];\n  if (!objectExtraInstructions) {\n    return [];\n  }\n\n  const instructionMetadataMap = isCondition\n    ? extension.getAllConditions()\n    : extension.getAllActions();\n\n  return objectExtraInstructions.map(type =>\n    enumerateInstruction(prefix, type, instructionMetadataMap.get(type), scope)\n  );\n};\n\nconst enumerateExtraObjectInstructions = (\n  isCondition: boolean,\n  extension: gdPlatformExtension,\n  objectType: string,\n  prefix: string,\n  scope: InstructionOrExpressionScope\n) => {\n  const extensionName = extension.getName();\n\n  const extensionsExtraInstructions = isCondition\n    ? freeConditionsToAddToObject[extensionName]\n    : freeActionsToAddToObject[extensionName];\n  if (!extensionsExtraInstructions) {\n    return [];\n  }\n\n  const objectExtraInstructions = extensionsExtraInstructions[objectType];\n  if (!objectExtraInstructions) {\n    return [];\n  }\n\n  const instructionMetadataMap = isCondition\n    ? extension.getAllConditions()\n    : extension.getAllActions();\n\n  return objectExtraInstructions.map(type =>\n    enumerateInstruction(prefix, type, instructionMetadataMap.get(type), scope)\n  );\n};\n\nconst enumerateInstruction = (\n  prefix: string,\n  type: string,\n  instrMetadata: gdInstructionMetadata,\n  scope: InstructionOrExpressionScope\n): EnumeratedInstructionOrExpressionMetadata => {\n  const displayedName = instrMetadata.getFullName();\n  const groupName = instrMetadata.getGroup();\n  const iconFilename = instrMetadata.getIconFilename();\n  const fullGroupName = prefix + groupName;\n\n  return {\n    type,\n    metadata: instrMetadata,\n    iconFilename,\n    displayedName,\n    fullGroupName,\n    scope,\n    isPrivate: instrMetadata.isPrivate(),\n  };\n};\n\nconst enumerateExtensionInstructions = (\n  prefix: string,\n  instructions: gdMapStringInstructionMetadata,\n  scope: InstructionOrExpressionScope\n): Array<EnumeratedInstructionOrExpressionMetadata> => {\n  //Get the map containing the metadata of the instructions provided by the extension...\n  const instructionsTypes = instructions.keys();\n  const allInstructions = [];\n\n  //... and add each instruction\n  for (let j = 0; j < instructionsTypes.size(); ++j) {\n    const type = instructionsTypes.get(j);\n    const instrMetadata = instructions.get(type);\n    if (instrMetadata.isHidden()) continue;\n\n    allInstructions.push(\n      enumerateInstruction(prefix, type, instrMetadata, scope)\n    );\n  }\n\n  return allInstructions;\n};\n\n/**\n * List all the instructions available.\n */\nexport const enumerateInstructions = (\n  isCondition: boolean\n): Array<EnumeratedInstructionOrExpressionMetadata> => {\n  let allInstructions = [];\n\n  const allExtensions = gd\n    .asPlatform(gd.JsPlatform.get())\n    .getAllPlatformExtensions();\n  for (let i = 0; i < allExtensions.size(); ++i) {\n    const extension = allExtensions.get(i);\n    const extensionName = extension.getName();\n    const allObjectsTypes = extension.getExtensionObjectsTypes();\n    const allBehaviorsTypes = extension.getBehaviorsTypes();\n\n    let prefix = '';\n    if (allObjectsTypes.size() > 0 || allBehaviorsTypes.size() > 0) {\n      prefix =\n        extensionName === 'BuiltinObject'\n          ? 'Common ' +\n            (isCondition ? 'conditions' : 'actions') +\n            ' for all objects'\n          : extension.getFullName();\n      prefix += GROUP_DELIMITER;\n    }\n\n    //Free instructions\n    const extensionFreeInstructions = enumerateExtensionInstructions(\n      prefix,\n      isCondition ? extension.getAllConditions() : extension.getAllActions(),\n      {\n        objectMetadata: undefined,\n        behaviorMetadata: undefined,\n      }\n    );\n    allInstructions = [\n      ...allInstructions,\n      ...filterInstructionsToRemove(\n        extensionFreeInstructions,\n        freeInstructionsToRemove[extensionName]\n      ),\n    ];\n\n    //Objects instructions:\n    for (let j = 0; j < allObjectsTypes.size(); ++j) {\n      const objectType = allObjectsTypes.get(j);\n      const objectMetadata = extension.getObjectMetadata(objectType);\n      const scope = { objectMetadata };\n      allInstructions = [\n        ...allInstructions,\n        ...enumerateExtensionInstructions(\n          prefix,\n          isCondition\n            ? extension.getAllConditionsForObject(objectType)\n            : extension.getAllActionsForObject(objectType),\n          scope\n        ),\n        ...enumerateExtraObjectInstructions(\n          isCondition,\n          extension,\n          objectType,\n          prefix,\n          scope\n        ),\n      ];\n    }\n\n    //Behaviors instructions:\n    for (let j = 0; j < allBehaviorsTypes.size(); ++j) {\n      const behaviorType = allBehaviorsTypes.get(j);\n      const behaviorMetadata = extension.getBehaviorMetadata(behaviorType);\n      const scope = { behaviorMetadata };\n\n      allInstructions = [\n        ...allInstructions,\n        ...enumerateExtensionInstructions(\n          prefix,\n          isCondition\n            ? extension.getAllConditionsForBehavior(behaviorType)\n            : extension.getAllActionsForBehavior(behaviorType),\n          scope\n        ),\n        ...enumerateExtraBehaviorInstructions(\n          isCondition,\n          extension,\n          behaviorType,\n          prefix,\n          scope\n        ),\n      ];\n    }\n  }\n\n  return allInstructions;\n};\n\nconst orderFirstInstructionsWithoutGroup = (\n  allInstructions: Array<EnumeratedInstructionOrExpressionMetadata>\n) => {\n  const noGroupInstructions = allInstructions.filter(\n    instructionMetadata => instructionMetadata.fullGroupName.length === 0\n  );\n  const instructionsWithGroups = allInstructions.filter(\n    instructionMetadata => instructionMetadata.fullGroupName.length !== 0\n  );\n\n  return [...noGroupInstructions, ...instructionsWithGroups];\n};\n\n/**\n * List all the instructions that can be used for the given object,\n * in the given context. This includes instructions for the behaviors\n * attached to the object.\n */\nexport const enumerateObjectInstructions = (\n  isCondition: boolean,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  objectName: string\n): Array<EnumeratedInstructionOrExpressionMetadata> => {\n  let allInstructions = [];\n\n  const objectType: string = gd.getTypeOfObject(\n    globalObjectsContainer,\n    objectsContainer,\n    objectName,\n    true\n  );\n  const objectBehaviorNames: Array<string> = gd\n    .getBehaviorsOfObject(\n      globalObjectsContainer,\n      objectsContainer,\n      objectName,\n      true\n    )\n    .toJSArray();\n  const objectBehaviorTypes = new Set(\n    objectBehaviorNames.map(behaviorName =>\n      gd.getTypeOfBehavior(\n        globalObjectsContainer,\n        objectsContainer,\n        behaviorName\n      )\n    )\n  );\n  const baseObjectType = ''; /* An empty string means the base object */\n\n  const allExtensions = gd\n    .asPlatform(gd.JsPlatform.get())\n    .getAllPlatformExtensions();\n  for (let i = 0; i < allExtensions.size(); ++i) {\n    const extension = allExtensions.get(i);\n    const hasObjectType =\n      extension\n        .getExtensionObjectsTypes()\n        .toJSArray()\n        .indexOf(objectType) !== -1;\n    const hasBaseObjectType =\n      extension\n        .getExtensionObjectsTypes()\n        .toJSArray()\n        .indexOf(baseObjectType) !== -1;\n    const behaviorTypes = extension\n      .getBehaviorsTypes()\n      .toJSArray()\n      .filter(behaviorType => objectBehaviorTypes.has(behaviorType));\n\n    if (!hasObjectType && !hasBaseObjectType && behaviorTypes.length === 0) {\n      continue;\n    }\n\n    const prefix = '';\n\n    //Objects instructions:\n    if (objectType !== baseObjectType && hasObjectType) {\n      const objectMetadata = extension.getObjectMetadata(objectType);\n      const scope = { objectMetadata };\n\n      allInstructions = [\n        ...allInstructions,\n        ...enumerateExtensionInstructions(\n          prefix,\n          isCondition\n            ? extension.getAllConditionsForObject(objectType)\n            : extension.getAllActionsForObject(objectType),\n          scope\n        ),\n        ...enumerateExtraObjectInstructions(\n          isCondition,\n          extension,\n          baseObjectType,\n          prefix,\n          scope\n        ),\n      ];\n    }\n\n    if (hasBaseObjectType) {\n      const objectMetadata = extension.getObjectMetadata(baseObjectType);\n      const scope = { objectMetadata };\n\n      allInstructions = [\n        ...allInstructions,\n        ...enumerateExtensionInstructions(\n          prefix,\n          isCondition\n            ? extension.getAllConditionsForObject(baseObjectType)\n            : extension.getAllActionsForObject(baseObjectType),\n          scope\n        ),\n        ...enumerateExtraObjectInstructions(\n          isCondition,\n          extension,\n          baseObjectType,\n          prefix,\n          scope\n        ),\n      ];\n    }\n\n    //Behaviors instructions (show them at the top of the list):\n    // eslint-disable-next-line\n    behaviorTypes.forEach(behaviorType => {\n      const behaviorMetadata = extension.getBehaviorMetadata(behaviorType);\n      const scope = { behaviorMetadata };\n\n      allInstructions = [\n        ...enumerateExtensionInstructions(\n          prefix,\n          isCondition\n            ? extension.getAllConditionsForBehavior(behaviorType)\n            : extension.getAllActionsForBehavior(behaviorType),\n          scope\n        ),\n        ...enumerateExtraBehaviorInstructions(\n          isCondition,\n          extension,\n          behaviorType,\n          prefix,\n          scope\n        ),\n        ...allInstructions,\n      ];\n    });\n  }\n\n  return orderFirstInstructionsWithoutGroup(allInstructions);\n};\n\n/**\n * Enumerate all the instructions that are not directly tied\n * to an object.\n */\nexport const enumerateFreeInstructions = (\n  isCondition: boolean\n): Array<EnumeratedInstructionOrExpressionMetadata> => {\n  let allFreeInstructions = [];\n\n  const allExtensions = gd\n    .asPlatform(gd.JsPlatform.get())\n    .getAllPlatformExtensions();\n  for (let i = 0; i < allExtensions.size(); ++i) {\n    const extension = allExtensions.get(i);\n    const extensionName: string = extension.getName();\n    const allObjectsTypes = extension.getExtensionObjectsTypes();\n    const allBehaviorsTypes = extension.getBehaviorsTypes();\n\n    let prefix = '';\n    if (allObjectsTypes.size() > 0 || allBehaviorsTypes.size() > 0) {\n      prefix = extensionName === 'BuiltinObject' ? '' : extension.getFullName();\n      prefix += GROUP_DELIMITER;\n    }\n\n    //Free instructions\n    const extensionFreeInstructions = enumerateExtensionInstructions(\n      prefix,\n      isCondition ? extension.getAllConditions() : extension.getAllActions(),\n      {\n        objectMetadata: undefined,\n        behaviorMetadata: undefined,\n      }\n    );\n    allFreeInstructions = [\n      ...allFreeInstructions,\n      ...filterInstructionsToRemove(\n        extensionFreeInstructions,\n        freeInstructionsToRemove[extensionName]\n      ),\n    ];\n  }\n\n  return allFreeInstructions;\n};\n\nexport type InstructionFilteringOptions = {|\n  searchText: string,\n|};\n\nexport const filterInstructionsList = (\n  list: Array<EnumeratedInstructionOrExpressionMetadata>,\n  { searchText }: InstructionFilteringOptions\n): Array<EnumeratedInstructionOrExpressionMetadata> => {\n  if (!searchText === '') {\n    return list;\n  }\n\n  const lowercaseSearch = searchText.toLowerCase();\n\n  const matchCritera = (\n    enumeratedInstructionOrExpressionMetadata: EnumeratedInstructionOrExpressionMetadata\n  ) => {\n    const {\n      displayedName,\n      fullGroupName,\n    } = enumeratedInstructionOrExpressionMetadata;\n    return (\n      displayedName.toLowerCase().indexOf(lowercaseSearch) !== -1 ||\n      fullGroupName.toLowerCase().indexOf(lowercaseSearch) !== -1\n    );\n  };\n\n  const favorExactMatch = (\n    list: Array<EnumeratedInstructionOrExpressionMetadata>\n  ): Array<EnumeratedInstructionOrExpressionMetadata> => {\n    if (!searchText) {\n      return list;\n    }\n\n    for (var i = 0; i < list.length; ++i) {\n      if (list[i].displayedName.toLowerCase() === lowercaseSearch) {\n        const exactMatch = list[i];\n        list.splice(i, 1);\n        list.unshift(exactMatch);\n      }\n    }\n\n    return list;\n  };\n\n  return favorExactMatch(list.filter(matchCritera));\n};\n\nexport const getObjectParameterIndex = (\n  instructionMetadata: gdInstructionMetadata\n) => {\n  const parametersCount = instructionMetadata.getParametersCount();\n  if (parametersCount >= 1) {\n    const firstParameterType = instructionMetadata.getParameter(0).getType();\n    if (firstParameterType === 'object') {\n      // By convention, all object conditions/actions have the object as first parameter\n      return 0;\n    }\n    if (gd.ParameterMetadata.isObject(firstParameterType)) {\n      // Some \"free condition/actions\" might be considered as \"object\" instructions, in which\n      // case they are taking an object list as fist parameter - which will be identified\n      // by gd.ParameterMetadata.isObject\n      return 0;\n    }\n\n    if (\n      firstParameterType === 'objectsContext' ||\n      firstParameterType === 'currentScene'\n    ) {\n      if (parametersCount >= 2) {\n        const secondParameterType = instructionMetadata\n          .getParameter(1)\n          .getType();\n        if (gd.ParameterMetadata.isObject(secondParameterType)) {\n          // Some special action/conditions like \"Create\", \"AjoutHasard\" (pick random object) or\n          // \"AjoutObjConcern\" (pick all objects) are \"free condition/actions\", but are manipulating\n          // objects list, so their first parameter is an \"objectsContext\" or \"currentScene\",\n          // followed by an object parameter.\n          return 1;\n        }\n      }\n    }\n  }\n\n  return -1;\n};\n","// @flow\r\n// Inspired by https://github.com/LoicMahieu/material-ui-color-picker\r\n\r\nimport * as React from 'react';\r\nimport { SketchPicker } from 'react-color';\r\n\r\nexport type RGBColor = {|\r\n  r: number,\r\n  g: number,\r\n  b: number,\r\n  a?: number,\r\n|};\r\n\r\ntype ColorResult = {\r\n  rgb: RGBColor,\r\n};\r\n\r\ntype ColorChangeHandler = (color: ColorResult) => void;\r\n\r\ntype Props = {|\r\n  color: ?RGBColor,\r\n  style?: Object,\r\n  onChange?: ColorChangeHandler,\r\n  onChangeComplete?: ColorChangeHandler,\r\n  disableAlpha?: boolean,\r\n|};\r\n\r\ntype State = {|\r\n  displayColorPicker: boolean,\r\n|};\r\n\r\nconst styles = {\r\n  color: {\r\n    width: '36px',\r\n    height: '14px',\r\n    borderRadius: '2px',\r\n    textAlign: 'center',\r\n    fontSize: '10px',\r\n  },\r\n  swatch: {\r\n    padding: '5px',\r\n    background: '#fff',\r\n    borderRadius: '1px',\r\n    boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n    display: 'inline-block',\r\n    cursor: 'pointer',\r\n  },\r\n  popover: {\r\n    position: 'fixed',\r\n    zIndex: '2',\r\n    transform: 'translateX(-174px)',\r\n  },\r\n  cover: {\r\n    position: 'fixed',\r\n    top: '0px',\r\n    right: '0px',\r\n    bottom: '0px',\r\n    left: '0px',\r\n  },\r\n};\r\n\r\nclass ColorPicker extends React.Component<Props, State> {\r\n  state = {\r\n    displayColorPicker: false,\r\n  };\r\n\r\n  open = () => {\r\n    this.setState({ displayColorPicker: true });\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ displayColorPicker: false });\r\n  };\r\n\r\n  render() {\r\n    const { style, color, ...otherProps } = this.props;\r\n\r\n    const displayedColor = color\r\n      ? color\r\n      : {\r\n          r: 200,\r\n          g: 200,\r\n          b: 200,\r\n          a: 1,\r\n        };\r\n\r\n    return (\r\n      <div style={style}>\r\n        <div style={styles.swatch} onClick={this.handleClick}>\r\n          <div\r\n            style={{\r\n              ...styles.color,\r\n              background: `rgba(${displayedColor.r}, ${displayedColor.g}, ${\r\n                displayedColor.b\r\n              }, ${displayedColor.a || 1})`,\r\n            }}\r\n          >\r\n            {color ? null : '?'}\r\n          </div>\r\n        </div>\r\n        {this.state.displayColorPicker ? (\r\n          <React.Fragment>\r\n            <div style={styles.cover} onClick={this.handleClose} />\r\n            <div style={styles.popover}>\r\n              <SketchPicker color={displayedColor} {...otherProps} />\r\n            </div>\r\n          </React.Fragment>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorPicker;\r\n","import React, { Component } from 'react';\nimport Popper from '@material-ui/core/Popper';\nimport Background from '../UI/Background';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport { Column, Line } from '../UI/Grid';\n\nconst styles = {\n  popover: {\n    paddingBottom: 10,\n    overflowY: 'auto',\n\n    // Restrict size in case of extra small or large popover (though this should not happen)\n    minHeight: 30,\n    maxHeight: 400,\n    maxWidth: 600,\n    minWidth: 300, // Avoid extra small popover for some parameters like relational operator\n\n    // When displayed in an events sheet that has Mosaic windows (see `EditorMosaic`) next to it,\n    // it could be displayed behind them, because they have a z-index of 1 :/ Use a z-index of 2\n    // then. Only one InlinePopover should be shown at a time anyway.\n    zIndex: 2,\n  },\n};\n\nexport default class InlinePopover extends Component {\n  render() {\n    return (\n      <ClickAwayListener onClickAway={this.props.onRequestClose}>\n        <Popper\n          open={this.props.open}\n          anchorEl={this.props.anchorEl}\n          style={styles.popover}\n          placement=\"bottom\"\n        >\n          <Background>\n            <Column expand>\n              <Line>{this.props.children}</Line>\n            </Column>\n          </Background>\n        </Popper>\n      </ClickAwayListener>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\n\nexport type ScreenType = 'normal' | 'touch';\n\nlet userHasTouchedScreen = false;\nif (typeof window !== 'undefined') {\n  window.addEventListener(\n    'touchstart',\n    function onFirstTouch() {\n      console.info('Touch detected, considering the screen as touch enabled.');\n      userHasTouchedScreen = true;\n      window.removeEventListener('touchstart', onFirstTouch, false);\n    },\n    false\n  );\n}\n\ntype Props = {|\n  children: (screenType: ScreenType) => React.Node,\n|};\n\n/**\n * Check if the screen is a touchscreen or not.\n */\nexport const ScreenTypeMeasurer = ({ children }: Props) => {\n  if (typeof window === 'undefined') {\n    return children('normal');\n  }\n\n  return children(userHasTouchedScreen ? 'touch' : 'normal');\n};\n","// @flow\nimport { mapFor } from '../Utils/MapFor';\nimport { type Schema, type Instance } from '.';\n\n/**\n * Transform a MapStringPropertyDescriptor to a schema that can be used in PropertiesEditor.\n *\n * @param {gdMapStringPropertyDescriptor} properties The properties to use\n * @param {*} getProperties The function called to read again the properties\n * @param {*} onUpdateProperty The function called to update a property of an object\n */\nexport default (\n  properties: gdMapStringPropertyDescriptor,\n  getProperties: (instance: Instance) => any,\n  onUpdateProperty: (\n    instance: Instance,\n    propertyName: string,\n    newValue: string\n  ) => void\n): Schema => {\n  const propertyNames = properties.keys();\n  const propertyFields = mapFor(0, propertyNames.size(), i => {\n    const name = propertyNames.at(i);\n    const property = properties.get(name);\n    const propertyDescription = property.getDescription();\n    const valueType = property.getType().toLowerCase();\n    const getLabel = (instance: Instance) => {\n      const propertyName = getProperties(instance)\n        .get(name)\n        .getLabel();\n      if (propertyName) return propertyName;\n      return (\n        name.charAt(0).toUpperCase() +\n        name\n          .slice(1)\n          .split(/(?=[A-Z])/)\n          .join(' ')\n      );\n    };\n    const getDescription = () => propertyDescription;\n\n    if (property.isHidden()) return null;\n\n    if (valueType === 'number') {\n      return {\n        name,\n        valueType,\n        getValue: (instance: Instance): number => {\n          return parseFloat(\n            getProperties(instance)\n              .get(name)\n              .getValue()\n          );\n        },\n        setValue: (instance: Instance, newValue: number) => {\n          onUpdateProperty(instance, name, '' + newValue);\n        },\n        getLabel,\n        getDescription,\n      };\n    } else if (valueType === 'string' || valueType === '') {\n      return {\n        name,\n        valueType: 'string',\n        getValue: (instance: Instance): string => {\n          return getProperties(instance)\n            .get(name)\n            .getValue();\n        },\n        setValue: (instance: Instance, newValue: string) => {\n          onUpdateProperty(instance, name, newValue);\n        },\n        getLabel,\n        getDescription,\n      };\n    } else if (valueType === 'boolean') {\n      return {\n        name,\n        valueType,\n        getValue: (instance: Instance): boolean => {\n          return (\n            getProperties(instance)\n              .get(name)\n              .getValue() === 'true'\n          );\n        },\n        setValue: (instance: Instance, newValue: boolean) => {\n          onUpdateProperty(instance, name, newValue ? '1' : '0');\n        },\n        getLabel,\n        getDescription,\n      };\n    } else if (valueType === 'choice') {\n      // Choice is a \"string\" (with a selector for the user in the UI)\n      const choices = property\n        .getExtraInfo()\n        .toJSArray()\n        .map(value => ({ value, label: value }));\n      return {\n        name,\n        valueType: 'string',\n        getChoices: () => choices,\n        getValue: (instance: Instance): string => {\n          return getProperties(instance)\n            .get(name)\n            .getValue();\n        },\n        setValue: (instance: Instance, newValue: string) => {\n          onUpdateProperty(instance, name, newValue);\n        },\n        getLabel,\n        getDescription,\n      };\n    } else if (valueType === 'resource') {\n      // Resource is a \"string\" (with a selector in the UI)\n      const kind = property.getExtraInfo().toJSArray()[0] || '';\n      return {\n        name,\n        valueType: 'resource',\n        resourceKind: kind,\n        getValue: (instance: Instance): string => {\n          return getProperties(instance)\n            .get(name)\n            .getValue();\n        },\n        setValue: (instance: Instance, newValue: string) => {\n          onUpdateProperty(instance, name, newValue);\n        },\n        getLabel,\n        getDescription,\n      };\n    } else if (valueType === 'color') {\n      return {\n        name,\n        valueType: 'color',\n        getValue: (instance: Instance): string => {\n          return getProperties(instance)\n            .get(name)\n            .getValue();\n        },\n        setValue: (instance: Instance, newValue: string) => {\n          onUpdateProperty(instance, name, newValue);\n        },\n        getLabel,\n        getDescription,\n      };\n    } else if (valueType === 'textarea') {\n      return {\n        name,\n        valueType: 'textarea',\n        getValue: (instance: Instance): string => {\n          return getProperties(instance)\n            .get(name)\n            .getValue();\n        },\n        setValue: (instance: Instance, newValue: string) => {\n          onUpdateProperty(instance, name, newValue);\n        },\n        getLabel,\n        getDescription,\n      };\n    } else {\n      console.error(\n        `A property with type=${valueType} could not be mapped to a field. Ensure that this type is correct and understood by the IDE.`\n      );\n      return null;\n    }\n  }).filter(Boolean);\n\n  return propertyFields;\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport { Trans } from '@lingui/macro';\nimport IconButton from '../../UI/IconButton';\nimport Measure from 'react-measure';\nimport * as React from 'react';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { Column } from '../../UI/Grid';\nimport MiniToolbar from '../../UI/MiniToolbar';\nimport ZoomIn from '@material-ui/icons/ZoomIn';\nimport ZoomOut from '@material-ui/icons/ZoomOut';\nimport ZoomOutMap from '@material-ui/icons/ZoomOutMap';\nimport PlaceholderMessage from '../../UI/PlaceholderMessage';\nimport Text from '../../UI/Text';\n\nconst MARGIN = 50;\nconst MAX_ZOOM_FACTOR = 10;\nconst MIN_ZOOM_FACTOR = 0.1;\n\nconst styles = {\n  imagePreviewContainer: {\n    position: 'relative',\n    display: 'inline-block',\n    width: '100%',\n    border: '#AAAAAA 1px solid',\n    overflow: 'scroll',\n    height: 200,\n    background: 'url(\"res/transparentback.png\") repeat',\n\n    // The container contains the image and the \"overlay\" that can display\n    // points or polygons that can be drag'n'dropped. `touch-action` must\n    // be set to `none`, otherwise the (mobile) browser will claim the\n    // `pointermove` event for \"native\" behavior like panning the page.\n    touchAction: 'none',\n  },\n  spriteThumbnailImage: {\n    position: 'relative',\n    pointerEvents: 'none',\n    margin: MARGIN,\n  },\n  box: {\n    border: '1px solid black',\n  },\n};\n\ntype Props = {|\n  project: gdProject,\n  resourceName: string,\n  resourcePath?: string,\n  resourcesLoader: typeof ResourcesLoader,\n  renderOverlay?: ({|\n    imageWidth: number,\n    imageHeight: number,\n    imageZoomFactor: number,\n  |}) => React.Node,\n  style?: Object,\n  onSize?: (number, number) => void,\n|};\n\ntype State = {|\n  errored: boolean,\n  imageWidth: ?number,\n  imageHeight: ?number,\n  imageSource: ?string,\n  imageZoomFactor: number,\n|};\n\n/**\n * Display the preview for a resource of a project with kind \"image\".\n */\nexport default class ImagePreview extends React.Component<Props, State> {\n  _container: ?HTMLDivElement = null;\n\n  state = {\n    errored: false,\n    imageWidth: null,\n    imageHeight: null,\n    imageZoomFactor: 1,\n    ...this._loadFrom(this.props),\n  };\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      newProps.resourceName !== this.props.resourceName ||\n      newProps.project !== this.props.project ||\n      newProps.resourcesLoader !== this.props.resourcesLoader ||\n      newProps.resourcePath !== this.props.resourcePath\n    ) {\n      this.setState(this._loadFrom(newProps));\n    }\n  }\n\n  _loadFrom(props: Props): {| errored: boolean, imageSource: ?string |} {\n    const { project, resourceName, resourcesLoader } = props;\n    return {\n      errored: false,\n      imageSource: resourcesLoader.getResourceFullUrl(project, resourceName),\n    };\n  }\n\n  _handleImageError = () => {\n    this.setState({\n      errored: true,\n    });\n  };\n\n  _handleImageLoaded = (e: any) => {\n    const imgElement = e.target;\n\n    const imageWidth = imgElement\n      ? imgElement.naturalWidth || imgElement.clientWidth\n      : 0;\n    const imageHeight = imgElement\n      ? imgElement.naturalHeight || imgElement.clientHeight\n      : 0;\n    this.setState({\n      imageWidth,\n      imageHeight,\n    });\n    if (this.props.onSize) this.props.onSize(imageWidth, imageHeight);\n  };\n\n  _zoomBy = (imageZoomFactorDelta: number) => {\n    this._zoomTo(this.state.imageZoomFactor + imageZoomFactorDelta);\n  };\n\n  _zoomTo = (imageZoomFactor: number) => {\n    this.setState(state => ({\n      imageZoomFactor: Math.min(\n        MAX_ZOOM_FACTOR,\n        Math.max(MIN_ZOOM_FACTOR, imageZoomFactor)\n      ),\n    }));\n  };\n\n  render() {\n    return (\n      <Measure>\n        {dimensions => {\n          const containerWidth = dimensions.width;\n          const { resourceName, style, renderOverlay } = this.props;\n          const {\n            imageHeight,\n            imageWidth,\n            imageSource,\n            imageZoomFactor,\n          } = this.state;\n\n          const imageLoaded =\n            !!imageWidth && !!imageHeight && !this.state.errored;\n\n          const imagePositionTop = 0;\n          const imagePositionLeft = Math.max(\n            0,\n            containerWidth / 2 -\n              ((imageWidth || 0) * imageZoomFactor) / 2 -\n              MARGIN\n          );\n\n          const imageStyle = {\n            ...styles.spriteThumbnailImage,\n            top: imagePositionTop,\n            left: imagePositionLeft,\n            width: imageWidth ? imageWidth * imageZoomFactor : undefined,\n            height: imageHeight ? imageHeight * imageZoomFactor : undefined,\n            visibility: imageLoaded ? undefined : 'hidden', // TODO: Loader\n          };\n\n          const overlayStyle = {\n            position: 'absolute',\n            top: imagePositionTop + MARGIN,\n            left: imagePositionLeft + MARGIN,\n            width: imageWidth ? imageWidth * imageZoomFactor : undefined,\n            height: imageHeight ? imageHeight * imageZoomFactor : undefined,\n            visibility: imageLoaded ? undefined : 'hidden', // TODO: Loader\n          };\n\n          return (\n            <Column expand noMargin>\n              <MiniToolbar>\n                <IconButton\n                  onClick={() => this._zoomBy(+0.2)}\n                  tooltip={t`Zoom in (you can also use Ctrl + Mouse wheel)`}\n                >\n                  <ZoomIn />\n                </IconButton>\n                <IconButton\n                  onClick={() => this._zoomBy(-0.2)}\n                  tooltip={t`Zoom out (you can also use Ctrl + Mouse wheel)`}\n                >\n                  <ZoomOut />\n                </IconButton>\n                <IconButton\n                  onClick={() => this._zoomTo(1)}\n                  tooltip={t`Restore original size`}\n                >\n                  <ZoomOutMap />\n                </IconButton>\n              </MiniToolbar>\n              <div\n                style={{ ...styles.imagePreviewContainer, ...style }}\n                ref={container => (this._container = container)}\n                onWheel={event => {\n                  const { deltaY } = event;\n                  //TODO: Use KeyboardShortcuts\n                  if (event.metaKey || event.ctrlKey) {\n                    this._zoomBy(deltaY / 500);\n                    event.preventDefault();\n                    event.stopPropagation();\n                  } else {\n                    // Let the usual, native vertical or horizontal scrolling happen.\n                  }\n                }}\n              >\n                {!!this.state.errored && (\n                  <PlaceholderMessage>\n                    <Text>\n                      <Trans>Unable to load the image</Trans>\n                    </Text>\n                  </PlaceholderMessage>\n                )}\n                {!this.state.errored && (\n                  <img\n                    style={imageStyle}\n                    alt={resourceName}\n                    src={imageSource}\n                    onError={this._handleImageError}\n                    onLoad={this._handleImageLoaded}\n                    crossOrigin=\"anonymous\"\n                  />\n                )}\n                {imageLoaded && renderOverlay && (\n                  <div style={{ ...overlayStyle, ...styles.box }} />\n                )}\n                {imageLoaded && renderOverlay && (\n                  <div style={overlayStyle}>\n                    {renderOverlay({\n                      imageWidth: imageWidth || 0,\n                      imageHeight: imageHeight || 0,\n                      imageZoomFactor,\n                    })}\n                  </div>\n                )}\n              </div>\n            </Column>\n          );\n        }}\n      </Measure>\n    );\n  }\n}\n","import { mapVector, mapFor } from '../../../../Utils/MapFor';\nimport every from 'lodash/every';\nconst gd = global.gd;\n\n/**\n * Return the specified animation, direction and sprite for a SpriteObject.\n * Returns null for these elements if the specified choice is not valid.\n * @param {*} object\n * @param {*} animationIndex\n * @param {*} directionIndex\n * @param {*} spriteIndex\n */\nexport const getCurrentElements = (\n  object,\n  animationIndex,\n  directionIndex,\n  spriteIndex\n) => {\n  const hasValidAnimation = animationIndex < object.getAnimationsCount();\n  const animation = hasValidAnimation\n    ? object.getAnimation(animationIndex)\n    : null;\n  const hasValidDirection =\n    !!animation && directionIndex < animation.getDirectionsCount();\n  const direction = hasValidDirection\n    ? animation.getDirection(directionIndex)\n    : null;\n  const hasValidSprite =\n    !!direction && spriteIndex < direction.getSpritesCount();\n  const sprite = hasValidSprite ? direction.getSprite(spriteIndex) : null;\n\n  return {\n    hasValidAnimation,\n    animation,\n    hasValidDirection,\n    direction,\n    hasValidSprite,\n    sprite,\n  };\n};\n\nexport const copyPoint = (originalPoint, destinationPoint) => {\n  destinationPoint.setX(originalPoint.getX());\n  destinationPoint.setY(originalPoint.getY());\n  destinationPoint.setName(originalPoint.getName());\n};\n\nexport const copySpritePoints = (originalSprite, destinationSprite) => {\n  if (originalSprite.ptr === destinationSprite.ptr) return;\n\n  copyPoint(originalSprite.getCenter(), destinationSprite.getCenter());\n  copyPoint(originalSprite.getOrigin(), destinationSprite.getOrigin());\n  destinationSprite.setDefaultCenterPoint(\n    originalSprite.isDefaultCenterPoint()\n  );\n\n  destinationSprite.getAllNonDefaultPoints().clear();\n  mapVector(originalSprite.getAllNonDefaultPoints(), originalPoint => {\n    destinationSprite.addPoint(originalPoint);\n  });\n};\n\nexport const copyAnimationsSpritePoints = (originalSprite, animation) => {\n  mapFor(0, animation.getDirectionsCount(), i => {\n    const direction = animation.getDirection(i);\n\n    mapFor(0, direction.getSpritesCount(), j => {\n      const sprite = direction.getSprite(j);\n      copySpritePoints(originalSprite, sprite);\n    });\n  });\n};\n\nexport const isSamePoint = (point1, point2) => {\n  return (\n    point1.getX() === point2.getX() &&\n    point1.getY() === point2.getY() &&\n    point1.getName() === point2.getName()\n  );\n};\n\nexport const haveSamePoints = (sprite1, sprite2) => {\n  if (!isSamePoint(sprite1.getCenter(), sprite2.getCenter())) return false;\n  if (!isSamePoint(sprite1.getOrigin(), sprite2.getOrigin())) return false;\n  if (sprite1.isDefaultCenterPoint() !== sprite2.isDefaultCenterPoint())\n    return false;\n\n  if (\n    sprite1.getAllNonDefaultPoints().size() !==\n    sprite2.getAllNonDefaultPoints().size()\n  )\n    return false;\n\n  return every(\n    mapVector(sprite1.getAllNonDefaultPoints(), sprite1Point => {\n      if (!sprite2.hasPoint(sprite1Point.getName())) return false;\n\n      return isSamePoint(\n        sprite1Point,\n        sprite2.getPoint(sprite1Point.getName())\n      );\n    })\n  );\n};\n\nexport const allDirectionSpritesHaveSamePointsAs = (\n  originalSprite,\n  direction\n) => {\n  return every(\n    mapFor(0, direction.getSpritesCount(), j => {\n      const sprite = direction.getSprite(j);\n      return haveSamePoints(sprite, originalSprite);\n    })\n  );\n};\n\nexport const allSpritesHaveSamePointsAs = (originalSprite, animation) => {\n  return every(\n    mapFor(0, animation.getDirectionsCount(), i => {\n      const direction = animation.getDirection(i);\n      return allDirectionSpritesHaveSamePointsAs(originalSprite, direction);\n    })\n  );\n};\n\nexport const copySpritePolygons = (originalSprite, destinationSprite) => {\n  if (originalSprite.ptr === destinationSprite.ptr) return;\n\n  destinationSprite.setCollisionMaskAutomatic(\n    originalSprite.isCollisionMaskAutomatic()\n  );\n\n  destinationSprite.getCustomCollisionMask().clear();\n  mapVector(originalSprite.getCustomCollisionMask(), originalPolygon => {\n    destinationSprite.getCustomCollisionMask().push_back(originalPolygon);\n  });\n};\n\nexport const copyAnimationsSpriteCollisionMasks = (\n  originalSprite,\n  animation\n) => {\n  mapFor(0, animation.getDirectionsCount(), i => {\n    const direction = animation.getDirection(i);\n\n    mapFor(0, direction.getSpritesCount(), j => {\n      const sprite = direction.getSprite(j);\n      copySpritePolygons(originalSprite, sprite);\n    });\n  });\n};\n\nexport const isSamePolygon = (polygon1, polygon2) => {\n  const polygon1Vertices = polygon1.getVertices();\n  const polygon2Vertices = polygon2.getVertices();\n\n  if (polygon1Vertices.size() !== polygon2Vertices.size()) return false;\n\n  return every(\n    mapVector(polygon1Vertices, (point1, index) => {\n      const point2 = polygon2Vertices.at(index);\n      return (\n        point1.get_x() === point2.get_x() && point1.get_y() === point2.get_y()\n      );\n    })\n  );\n};\n\nexport const haveSameCollisionMasks = (sprite1, sprite2) => {\n  if (sprite1.isCollisionMaskAutomatic() !== sprite2.isCollisionMaskAutomatic())\n    return false;\n\n  if (sprite1.isCollisionMaskAutomatic() && sprite2.isCollisionMaskAutomatic())\n    return true;\n\n  const sprite1CollisionMask = sprite1.getCustomCollisionMask();\n  const sprite2CollisionMask = sprite2.getCustomCollisionMask();\n\n  if (sprite1CollisionMask.size() !== sprite2CollisionMask.size()) return false;\n\n  return every(\n    mapVector(sprite1CollisionMask, (sprite1Polygon, index) => {\n      return isSamePolygon(sprite1Polygon, sprite2CollisionMask.at(index));\n    })\n  );\n};\n\nexport const allDirectionSpritesHaveSameCollisionMasksAs = (\n  originalSprite,\n  direction\n) => {\n  return every(\n    mapFor(0, direction.getSpritesCount(), j => {\n      const sprite = direction.getSprite(j);\n      return haveSameCollisionMasks(sprite, originalSprite);\n    })\n  );\n};\n\nexport const allSpritesHaveSameCollisionMasksAs = (\n  originalSprite,\n  animation\n) => {\n  return every(\n    mapFor(0, animation.getDirectionsCount(), i => {\n      const direction = animation.getDirection(i);\n      return allDirectionSpritesHaveSameCollisionMasksAs(\n        originalSprite,\n        direction\n      );\n    })\n  );\n};\n\nexport const deleteSpritesFromAnimation = (animation, spritePtrs) => {\n  mapFor(0, animation.getDirectionsCount(), i => {\n    const direction = animation.getDirection(i);\n\n    const spritesToDelete = mapFor(0, direction.getSpritesCount(), j => {\n      const sprite = direction.getSprite(j);\n\n      return !!spritePtrs[sprite.ptr];\n    });\n\n    // Iterate from the end to the beginning to avoid invalidating indexes.\n    for (\n      let spriteIndex = direction.getSpritesCount() - 1;\n      spriteIndex >= 0;\n      spriteIndex--\n    ) {\n      if (spritesToDelete[spriteIndex]) direction.removeSprite(spriteIndex);\n    }\n  });\n};\n\nexport const duplicateSpritesInAnimation = (animation, spritePtrs) => {\n  mapFor(0, animation.getDirectionsCount(), i => {\n    const direction = animation.getDirection(i);\n\n    const spritesToDuplicate = mapFor(0, direction.getSpritesCount(), j => {\n      const sprite = direction.getSprite(j);\n\n      return !!spritePtrs[sprite.ptr];\n    });\n\n    // Iterate from the end to the beginning to avoid invalidating indexes.\n    for (\n      let spriteIndex = direction.getSpritesCount() - 1;\n      spriteIndex >= 0;\n      spriteIndex--\n    ) {\n      if (spritesToDuplicate[spriteIndex]) {\n        const spriteToDuplicate = direction.getSprite(spriteIndex);\n        const newSprite = new gd.Sprite();\n        newSprite.setImageName(spriteToDuplicate.getImageName());\n        copySpritePoints(spriteToDuplicate, newSprite);\n        copySpritePolygons(spriteToDuplicate, newSprite);\n\n        direction.addSprite(newSprite);\n        direction.moveSprite(direction.getSpritesCount() - 1, spriteIndex);\n      }\n    }\n  });\n};\n","//TODO: Factor with styles.js from LayersList.\nexport default {\n  handleColumn: {\n    width: 24,\n    paddingLeft: 8,\n    paddingRight: 0,\n  },\n  coordinateColumn: {\n    width: 48,\n  },\n  toolColumn: {\n    width: 48,\n  },\n};\n","import optionalRequire from '../../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\n\n/**\n * Wraps an Electron Menu\n */\nexport default class ElectronMenuImplementation {\n  buildFromTemplate(template) {\n    this.menuTemplate = template;\n    return undefined;\n  }\n\n  showMenu(dimensions) {\n    if (!electron) return;\n\n    const { Menu } = electron.remote;\n    const browserWindow = electron.remote.getCurrentWindow();\n    this.menu = Menu.buildFromTemplate(this.menuTemplate);\n    this.menu.popup({\n      window: browserWindow,\n      x: Math.round(dimensions.left),\n      y: Math.round(dimensions.top + dimensions.height),\n      async: true, // Ensure the UI is not blocked on macOS.\n    });\n  }\n\n  getMenuProps() {\n    return {\n      open: false,\n    };\n  }\n}\n","import React, { useState, useRef, useCallback } from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Fade from '@material-ui/core/Fade';\n\nconst SubMenuItem = ({ item, buildFromTemplate }) => {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const anchorElement = useRef(null);\n  const setAnchorElement = useCallback(element => {\n    anchorElement.current = element;\n  }, []);\n\n  return (\n    <React.Fragment>\n      <MenuItem\n        dense\n        key={item.label}\n        disabled={item.enabled === false}\n        onClick={event => {\n          if (item.enabled === false) {\n            return;\n          }\n\n          if (!anchorElement.current) {\n            setAnchorElement(event.currentTarget);\n          }\n\n          setMenuOpen(!menuOpen);\n        }}\n      >\n        {item.label}\n        <ArrowRightIcon />\n      </MenuItem>\n      <Menu\n        open={menuOpen}\n        anchorEl={anchorElement.current}\n        onClose={() => setMenuOpen(false)}\n        TransitionComponent={Fade}\n      >\n        {buildFromTemplate(item.submenu)}\n      </Menu>\n    </React.Fragment>\n  );\n};\n\n/**\n * Construct items for material-ui's Menu, using a template which\n * is partially supporting the Electron Menu API (https://github.com/electron/electron/blob/master/docs/api/menu-item.md).\n *\n * Supported options are:\n *  - click\n *  - visible\n *  - type ('separator' and 'checkbox')\n *  - label\n *  - accelerator\n *  - enabled\n *  - checked (when `type` is 'checkbox')\n *  - submenu\n */\nexport default class MaterialUIMenuImplementation {\n  constructor({ onClose }) {\n    this._onClose = onClose;\n  }\n\n  buildFromTemplate(template) {\n    return template\n      .map((item, id) => {\n        if (item.visible === false) return null;\n\n        // Accelerator is not implemented for Material-UI menus\n        // const accelerator = item.accelerator\n        //   ? adaptAcceleratorString(item.accelerator)\n        //   : undefined;\n\n        if (item.type === 'separator') {\n          return <Divider key={'separator' + id} />;\n          // return null;\n        } else if (item.type === 'checkbox') {\n          return (\n            <MenuItem\n              dense\n              key={'checkbox' + item.label}\n              checked={item.checked}\n              disabled={item.enabled === false}\n              onClick={() => {\n                if (item.enabled === false) {\n                  return;\n                }\n\n                if (item.click) {\n                  item.click();\n                }\n                this._onClose();\n              }}\n            >\n              <ListItemIcon>\n                {item.checked ? <CheckBoxIcon /> : <CheckBoxOutlineBlankIcon />}\n              </ListItemIcon>\n              <ListItemText primary={item.label} />\n            </MenuItem>\n          );\n        } else if (item.submenu) {\n          return (\n            <SubMenuItem\n              key={'submenu' + item.label}\n              item={item}\n              buildFromTemplate={template => this.buildFromTemplate(template)}\n            />\n          );\n        } else {\n          return (\n            <MenuItem\n              dense\n              key={'item' + item.label}\n              disabled={item.enabled === false}\n              onClick={() => {\n                if (item.enabled === false) {\n                  return;\n                }\n\n                if (item.click) {\n                  item.click();\n                  this._onClose();\n                }\n              }}\n            >\n              {item.label}\n            </MenuItem>\n          );\n        }\n      })\n      .filter(Boolean);\n  }\n\n  showMenu() {\n    // Automatically done by IconMenu\n  }\n\n  getMenuProps() {\n    return {};\n  }\n}\n","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport Fade from '@material-ui/core/Fade';\nimport ElectronMenuImplementation from './ElectronMenuImplementation';\nimport MaterialUIMenuImplementation from './MaterialUIMenuImplementation';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\n\nclass MaterialUIContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n    };\n    this.menuImplementation = new MaterialUIMenuImplementation({\n      onClose: this._onClose,\n    });\n  }\n\n  open = (x, y) => {\n    this.setState(\n      {\n        anchorX: x,\n        anchorY: y,\n      },\n      () => {\n        this.setState({\n          open: true,\n        });\n      }\n    );\n  };\n\n  _onClose = () => {\n    this.setState({\n      open: false,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div\n          ref={element => (this.anchorEl = element)}\n          style={{\n            position: 'fixed',\n            pointerEvents: 'none',\n            left: this.state.anchorX,\n            top: this.state.anchorY,\n          }}\n        />\n        <Menu\n          open={this.state.open}\n          anchorEl={this.anchorEl}\n          onClose={this._onClose}\n          TransitionComponent={Fade}\n          {...this.menuImplementation.getMenuProps()}\n        >\n          {this.menuImplementation.buildFromTemplate(\n            this.props.buildMenuTemplate()\n          )}\n        </Menu>\n      </div>\n    );\n  }\n}\n\nclass ElectronContextMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.menuImplementation = new ElectronMenuImplementation();\n  }\n\n  open = (x, y) => {\n    this.menuImplementation.buildFromTemplate(this.props.buildMenuTemplate());\n    this.menuImplementation.showMenu({\n      left: x || 0,\n      top: y || 0,\n      width: 0,\n      height: 0,\n    });\n  };\n\n  render() {\n    return null;\n  }\n}\n\nexport default (electron ? ElectronContextMenu : MaterialUIContextMenu);\n","// @flow\nimport { mapFor } from '../Utils/MapFor';\n\nexport const enumerateLayouts = (project: gdProject): Array<gdLayout> =>\n  mapFor(0, project.getLayoutsCount(), i => project.getLayoutAt(i));\n\nexport const enumerateExternalEvents = (\n  project: gdProject\n): Array<gdExternalEvents> =>\n  mapFor(0, project.getExternalEventsCount(), i =>\n    project.getExternalEventsAt(i)\n  );\n\nexport const enumerateExternalLayouts = (\n  project: gdProject\n): Array<gdExternalLayout> =>\n  mapFor(0, project.getExternalLayoutsCount(), i =>\n    project.getExternalLayoutAt(i)\n  );\n\nexport const enumerateEventsFunctionsExtensions = (\n  project: gdProject\n): Array<gdEventsFunction> =>\n  mapFor(0, project.getEventsFunctionsExtensionsCount(), i =>\n    project.getEventsFunctionsExtensionAt(i)\n  );\n\nexport const filterProjectItemsList = <T>(\n  list: Array<T>,\n  searchText: string\n): Array<T> => {\n  if (!searchText) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list.filter(\n    (item: any) =>\n      item\n        .getName()\n        .toLowerCase()\n        .indexOf(lowercaseSearchText) !== -1\n  );\n};\n","// @flow\n\nimport values from 'lodash/values';\n\nexport type InstructionsListContext = {|\n  isCondition: boolean,\n  instrsList: gdInstructionsList,\n|};\n\nexport type InstructionContext = {|\n  isCondition: boolean,\n  instrsList: gdInstructionsList,\n  instruction: gdInstruction,\n  indexInList: number,\n|};\n\nexport type ParameterContext = {|\n  isCondition: boolean,\n  instrsList: gdInstructionsList,\n  instruction: gdInstruction,\n  indexInList: number,\n  parameterIndex: number,\n  domEvent?: any,\n|};\n\nexport type EventContext = {|\n  isCondition: boolean,\n  eventsList: gdEventsList,\n  event: gdBaseEvent,\n  indexInList: number,\n|};\n\nexport type SelectionState = {\n  selectedInstructions: { [number]: InstructionContext },\n  selectedInstructionsLists: { [number]: InstructionsListContext },\n  selectedEvents: { [number]: EventContext },\n};\n\nexport const getInitialSelection = () => {\n  return {\n    selectedInstructions: {},\n    selectedEvents: {},\n    selectedInstructionsLists: {},\n  };\n};\n\nexport const getSelectedEvents = (selection: SelectionState): Array<Object> => {\n  return values(selection.selectedEvents).map(\n    (eventContext: EventContext) => eventContext.event\n  );\n};\n\nexport const getSelectedEventContexts = (\n  selection: SelectionState\n): Array<EventContext> => {\n  return values(selection.selectedEvents);\n};\n\nexport const getSelectedInstructions = (\n  selection: SelectionState\n): Array<gdInstruction> => {\n  return values(selection.selectedInstructions).map(\n    (instructionContext: InstructionContext) => instructionContext.instruction\n  );\n};\n\nexport const getSelectedInstructionsContexts = (\n  selection: SelectionState\n): Array<InstructionContext> => {\n  return values(selection.selectedInstructions);\n};\n\nexport const getSelectedInstructionsListsContexts = (\n  selection: SelectionState\n): Array<InstructionContext> => {\n  return values(selection.selectedInstructionsLists);\n};\n\nexport const isEventSelected = (\n  selection: SelectionState,\n  event: Object\n): boolean => {\n  return !!selection.selectedEvents[event.ptr];\n};\n\nexport const isInstructionSelected = (\n  selection: SelectionState,\n  instruction: gdInstruction\n): boolean => {\n  return !!selection.selectedInstructions[instruction.ptr];\n};\n\nexport const isInstructionsListSelected = (\n  selection: SelectionState,\n  instructionsList: gdInstructionsList\n): boolean => {\n  return !!selection.selectedInstructionsLists[instructionsList.ptr];\n};\n\nexport const hasEventSelected = (selection: SelectionState): boolean => {\n  return !!Object.keys(selection.selectedEvents).length;\n};\n\nexport const hasInstructionSelected = (selection: SelectionState): boolean => {\n  return !!Object.keys(selection.selectedInstructions).length;\n};\n\nexport const hasSelectedAtLeastOneCondition = (\n  selection: SelectionState\n): boolean => {\n  for (let instructionContext of getSelectedInstructionsContexts(selection)) {\n    if (instructionContext.isCondition) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const hasInstructionsListSelected = (\n  selection: SelectionState\n): boolean => {\n  return !!Object.keys(selection.selectedInstructionsLists).length;\n};\n\nexport const hasSomethingSelected = (selection: SelectionState): boolean => {\n  return (\n    hasInstructionSelected(selection) ||\n    hasInstructionsListSelected(selection) ||\n    hasEventSelected(selection)\n  );\n};\n\nexport const clearSelection = (): SelectionState => {\n  return getInitialSelection();\n};\n\nexport const selectEvent = (\n  selection: SelectionState,\n  eventContext: EventContext,\n  multiSelection: boolean = false\n): SelectionState => {\n  const event = eventContext.event;\n  if (isEventSelected(selection, event)) return selection;\n\n  const existingSelection = multiSelection ? selection : clearSelection();\n  return {\n    ...existingSelection,\n    selectedEvents: {\n      ...existingSelection.selectedEvents,\n      [event.ptr]: eventContext,\n    },\n  };\n};\n\nexport const selectInstruction = (\n  selection: SelectionState,\n  instructionContext: InstructionContext,\n  multiSelection: boolean = false\n): SelectionState => {\n  const instruction: gdInstruction = instructionContext.instruction;\n  if (isInstructionSelected(selection, instruction)) return selection;\n\n  const existingSelection = multiSelection ? selection : clearSelection();\n  return {\n    ...existingSelection,\n    selectedInstructions: {\n      ...existingSelection.selectedInstructions,\n      [instruction.ptr]: instructionContext,\n    },\n  };\n};\n\nexport const selectInstructionsList = (\n  selection: SelectionState,\n  instructionsListContext: InstructionsListContext,\n  multiSelection: boolean = false\n): SelectionState => {\n  const instructionsList: gdInstructionsList =\n    instructionsListContext.instrsList;\n  if (isInstructionsListSelected(selection, instructionsList)) return selection;\n\n  const existingSelection = multiSelection ? selection : clearSelection();\n  return {\n    ...existingSelection,\n    selectedInstructionsLists: {\n      ...existingSelection.selectedInstructionsLists,\n      [instructionsList.ptr]: instructionsListContext,\n    },\n  };\n};\n","// @flow\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport Popper from '@material-ui/core/Popper';\nimport muiZIndex from '@material-ui/core/styles/zIndex';\nimport Functions from '@material-ui/icons/Functions';\nimport RaisedButton from '../../../UI/RaisedButton';\nimport SemiControlledTextField from '../../../UI/SemiControlledTextField';\nimport { mapVector } from '../../../Utils/MapFor';\nimport ExpressionSelector from '../../InstructionEditor/InstructionOrExpressionSelector/ExpressionSelector';\nimport ExpressionParametersEditorDialog, {\n  type ParameterValues,\n} from './ExpressionParametersEditorDialog';\nimport { formatExpressionCall } from './FormatExpressionCall';\nimport { type EnumeratedInstructionOrExpressionMetadata } from '../../InstructionEditor/InstructionOrExpressionSelector/EnumeratedInstructionOrExpressionMetadata.js';\nimport { type ParameterFieldProps } from '../ParameterFieldCommons';\nimport BackgroundHighlighting, {\n  type Highlight,\n} from './BackgroundHighlighting';\nimport debounce from 'lodash/debounce';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Paper from '@material-ui/core/Paper';\nimport { TextFieldWithButtonLayout } from '../../../UI/Layout';\nconst gd = global.gd;\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'flex-start',\n  },\n  textFieldContainer: {\n    flex: 1,\n    minWidth: 300,\n  },\n  textFieldAndHightlightContainer: {\n    position: 'relative',\n  },\n  expressionSelectorPopoverContent: {\n    display: 'flex',\n    maxHeight: 250,\n  },\n  input: {\n    fontFamily: '\"Lucida Console\", Monaco, monospace',\n    lineHeight: 1.4,\n  },\n  backgroundHighlighting: {\n    marginTop: 13, //Properly align with the text field\n    paddingLeft: 12,\n    paddingRight: 12,\n  },\n  backgroundHighlightingWithDescription: {\n    marginTop: 29, //Properly align with the text field\n    paddingLeft: 12,\n    paddingRight: 12,\n  },\n};\n\ntype State = {|\n  popoverOpen: boolean,\n  parametersDialogOpen: boolean,\n  selectedExpressionInfo: ?EnumeratedInstructionOrExpressionMetadata,\n  validatedValue: string,\n  errorText: ?string,\n  errorHighlights: Array<Highlight>,\n|};\n\ntype Props = {|\n  expressionType: 'number' | 'string',\n  renderExtraButton?: ({|\n    style: Object,\n  |}) => React.Node,\n  ...ParameterFieldProps,\n|};\n\nexport default class ExpressionField extends React.Component<Props, State> {\n  _field: ?any = null;\n  _fieldElement: ?any = null;\n  _inputElement = null;\n\n  state = {\n    popoverOpen: false,\n    parametersDialogOpen: false,\n    selectedExpressionInfo: null,\n\n    validatedValue: '',\n    errorText: null,\n    errorHighlights: [],\n  };\n\n  componentDidMount() {\n    if (this._field) {\n      this._fieldElement = ReactDOM.findDOMNode(this._field);\n      this._inputElement = this._field ? this._field.getInputNode() : null;\n    }\n  }\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  _openExpressionPopover = () => {\n    this.setState({\n      popoverOpen: true,\n    });\n  };\n\n  _handleFocus = (event: { preventDefault: () => void }) => {\n    // This prevents ghost click.\n    event.preventDefault();\n  };\n\n  _handleRequestClose = () => {\n    this.setState({\n      popoverOpen: false,\n    });\n  };\n\n  _handleChange = (value: string) => {\n    this.setState(\n      {\n        validatedValue: value,\n      },\n      () => this._enqueueValidation()\n    );\n  };\n\n  _handleBlur = (event: { currentTarget: { value: string } }) => {\n    const value = event.currentTarget.value;\n    if (this.props.onChange) this.props.onChange(value);\n    this.setState(\n      {\n        validatedValue: value,\n      },\n      () => {\n        this._enqueueValidation.cancel();\n        this._doValidation();\n      }\n    );\n  };\n\n  _handleMenuMouseDown = (event: any) => {\n    // Keep the TextField focused\n    event.preventDefault();\n  };\n\n  _handleExpressionChosen = (\n    expressionInfo: EnumeratedInstructionOrExpressionMetadata\n  ) => {\n    this.setState({\n      popoverOpen: false,\n      parametersDialogOpen: true,\n      selectedExpressionInfo: expressionInfo,\n    });\n  };\n\n  insertExpression = (\n    expressionInfo: EnumeratedInstructionOrExpressionMetadata,\n    parameterValues: ParameterValues\n  ) => {\n    if (!this._inputElement) return;\n    const cursorPosition = this._inputElement.selectionStart;\n\n    const functionCall = formatExpressionCall(expressionInfo, parameterValues);\n\n    // Generate the expression with the function call\n    const { value } = this.props;\n    const newValue =\n      value.substr(0, cursorPosition) +\n      functionCall +\n      value.substr(cursorPosition);\n\n    // Apply changes\n    if (this.props.onChange) this.props.onChange(newValue);\n    this.setState(\n      {\n        validatedValue: newValue,\n      },\n      () => this._enqueueValidation()\n    );\n\n    // Focus again and select what was just added.\n    setTimeout(() => {\n      if (this._field) this._field.focus();\n\n      setTimeout(() => {\n        if (this._inputElement) {\n          this._inputElement.setSelectionRange(\n            cursorPosition,\n            cursorPosition + functionCall.length\n          );\n        }\n      }, 5);\n    }, 5);\n  };\n\n  _enqueueValidation = debounce(() => {\n    this._doValidation();\n  }, 500);\n\n  _doValidation = () => {\n    const {\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      expressionType,\n    } = this.props;\n    if (!project) return null;\n\n    // Validation can be time consuming (~1ms for simple expression,\n    // a few milliseconds for complex ones).\n\n    const parser = new gd.ExpressionParser2(\n      gd.JsPlatform.get(),\n      globalObjectsContainer,\n      objectsContainer\n    );\n    const expression = this.state.validatedValue;\n    const expressionNode = parser\n      .parseExpression(expressionType, expression)\n      .get();\n\n    const expressionValidator = new gd.ExpressionValidator();\n    expressionNode.visit(expressionValidator);\n    const errors = expressionValidator.getErrors();\n\n    const errorHighlights: Array<Highlight> = mapVector(errors, error => ({\n      begin: error.getStartPosition(),\n      end: error.getEndPosition() + 1,\n      message: error.getMessage(),\n      type: 'error',\n    }));\n    const hasMultipleErrors = errorHighlights.length > 1;\n    const errorText = errorHighlights\n      .map(\n        (highlight, i) =>\n          (hasMultipleErrors ? `[${i + 1}] ` : '') + highlight.message\n      )\n      .join(' ');\n\n    expressionValidator.delete();\n    parser.delete();\n\n    this.setState({ errorText, errorHighlights });\n  };\n\n  render() {\n    const {\n      value,\n      expressionType,\n      parameterMetadata,\n      project,\n      scope,\n      globalObjectsContainer,\n      objectsContainer,\n      parameterRenderingService,\n    } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n    const longDescription = parameterMetadata\n      ? parameterMetadata.getLongDescription()\n      : undefined;\n\n    const popoverStyle = {\n      width: this._fieldElement ? this._fieldElement.clientWidth : 'auto',\n      marginLeft: -5, // Remove the offset that the Popper has for some reason with disablePortal={true}\n      // Ensure the popper is above everything (modal, dialog, snackbar, tooltips, etc).\n      // There will be only one ExpressionSelector opened at a time, so it's fair to put the\n      // highest z index. If this is breaking, check the z-index of material-ui.\n      zIndex: muiZIndex.tooltip + 100,\n    };\n\n    const backgroundHighlightingStyle = description\n      ? styles.backgroundHighlightingWithDescription\n      : styles.backgroundHighlighting;\n\n    return (\n      <React.Fragment>\n        <TextFieldWithButtonLayout\n          margin={this.props.isInline ? 'none' : 'dense'}\n          renderTextField={() => (\n            <div style={styles.textFieldContainer}>\n              <div style={styles.textFieldAndHightlightContainer}>\n                <BackgroundHighlighting\n                  value={this.state.validatedValue}\n                  style={{ ...styles.input, ...backgroundHighlightingStyle }}\n                  highlights={this.state.errorHighlights}\n                />\n                <SemiControlledTextField\n                  margin={this.props.isInline ? 'none' : 'dense'}\n                  value={value}\n                  floatingLabelText={description}\n                  helperMarkdownText={longDescription}\n                  hintText={expressionType === 'string' ? '\"\"' : undefined}\n                  inputStyle={styles.input}\n                  onChange={this._handleChange}\n                  onBlur={this._handleBlur}\n                  ref={field => (this._field = field)}\n                  onFocus={this._handleFocus}\n                  errorText={this.state.errorText}\n                  multiLine\n                  fullWidth\n                />\n              </div>\n              {this._fieldElement && this.state.popoverOpen && (\n                <ClickAwayListener onClickAway={this._handleRequestClose}>\n                  <Popper\n                    style={popoverStyle}\n                    open={this.state.popoverOpen}\n                    anchorEl={this._fieldElement}\n                    placement=\"bottom\"\n                    disablePortal={\n                      true /* Can't use portals as this would put the Popper outside of the Modal, which is keeping the focus in the modal (so the search bar and keyboard browsing won't not work) */\n                    }\n                  >\n                    <Paper style={styles.expressionSelectorPopoverContent}>\n                      <ExpressionSelector\n                        selectedType=\"\"\n                        onChoose={(type, expression) => {\n                          this._handleExpressionChosen(expression);\n                        }}\n                        expressionType={expressionType}\n                        focusOnMount\n                        scope={scope}\n                      />\n                    </Paper>\n                  </Popper>\n                </ClickAwayListener>\n              )}\n            </div>\n          )}\n          renderButton={style => (\n            <React.Fragment>\n              {!this.props.isInline &&\n                this.props.renderExtraButton &&\n                this.props.renderExtraButton({\n                  style,\n                })}\n              {!this.props.isInline && (\n                <RaisedButton\n                  icon={<Functions />}\n                  label={\n                    expressionType === 'string'\n                      ? '\"ABC\"'\n                      : expressionType === 'number'\n                      ? '123'\n                      : ''\n                  }\n                  primary\n                  style={style}\n                  onClick={this._openExpressionPopover}\n                />\n              )}\n            </React.Fragment>\n          )}\n        />\n\n        {this.state.parametersDialogOpen && this.state.selectedExpressionInfo && (\n          <ExpressionParametersEditorDialog\n            project={project}\n            scope={scope}\n            globalObjectsContainer={globalObjectsContainer}\n            objectsContainer={objectsContainer}\n            expressionMetadata={this.state.selectedExpressionInfo.metadata}\n            onDone={parameterValues => {\n              if (!this.state.selectedExpressionInfo) return;\n\n              this.insertExpression(\n                this.state.selectedExpressionInfo,\n                parameterValues\n              );\n              this.setState({\n                parametersDialogOpen: false,\n                selectedExpressionInfo: null,\n              });\n            }}\n            onRequestClose={() => {\n              this.setState({\n                parametersDialogOpen: false,\n                selectedExpressionInfo: null,\n              });\n            }}\n            parameterRenderingService={parameterRenderingService}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { type WidthType } from '../../UI/Reponsive/ResponsiveWindowMeasurer';\nimport {\n  actionsContainer,\n  conditionsContainer,\n  smallWidthContainer,\n} from './ClassNames';\n\ntype Props = {|\n  renderConditionsList: ({ style: Object, className: string }) => React.Node,\n  renderActionsList: ({ className: string }) => React.Node,\n  windowWidth: WidthType,\n  className?: string,\n  leftIndentWidth: number,\n|};\n\nconst styles = {\n  oneColumnContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  twoColumnsContainer: {\n    display: 'flex',\n  },\n};\n\n/**\n * Display the lists of instructions (conditions and actions),\n * next to each other on a big screen (with proper sizing for the conditions column),\n * and stacked on a small one.\n */\nconst ConditionsActionsColumns = (props: Props) => {\n  if (props.windowWidth === 'small') {\n    return (\n      <div style={styles.oneColumnContainer} className={props.className}>\n        {props.renderConditionsList({\n          style: {},\n          className: `${conditionsContainer} ${smallWidthContainer}`,\n        })}\n        {props.renderActionsList({\n          style: {},\n          className: `${actionsContainer} ${smallWidthContainer}`,\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <div style={styles.twoColumnsContainer} className={props.className}>\n      {props.renderConditionsList({\n        style: {\n          width: `calc(35vw - ${props.leftIndentWidth}px)`,\n        },\n        className: conditionsContainer,\n      })}\n      {props.renderActionsList({ className: actionsContainer })}\n    </div>\n  );\n};\n\nexport default ConditionsActionsColumns;\n","// @flow\n\nexport default function getObjectByName(\n  project: gdProject,\n  layout?: ?gdLayout,\n  associatedObjectName: string\n): ?gdObject {\n  let associatedObject = null;\n  if (layout && layout.hasObjectNamed(associatedObjectName))\n    associatedObject = layout.getObject(associatedObjectName);\n  else if (project.hasObjectNamed(associatedObjectName))\n    associatedObject = project.getObject(associatedObjectName);\n  return associatedObject;\n}\n","// @flow\nimport { t } from '@lingui/macro';\n\nexport type Hint = {| kind: 'warning' | 'info', message: string |};\n\nexport const getDeprecatedBehaviorsInformation = (): {\n  [string]: {| warning: string |},\n} => ({\n  'PhysicsBehavior::PhysicsBehavior': {\n    warning: t`A new physics engine (Physics Engine 2.0) is now available. You should prefer using it for new game. For existing games, note that the two behaviors are not compatible, so you should only use one of them with your objects.`,\n  },\n});\n\nexport const getExperimentalObjects = (): {\n  [string]: boolean,\n} => ({\n  'Video::VideoObject': true,\n  'SkeletonObject::Skeleton': true,\n});\n\nexport const getExtraObjectsInformation = (): {\n  [string]: Array<Hint>,\n} => ({\n  'Video::VideoObject': [\n    {\n      kind: 'warning',\n      message: t`Most browsers will require the user to have interacted with your game before allowing any video to play. Make sure that the player click/touch the screen at the beginning of the game before starting any video.`,\n    },\n    {\n      kind: 'warning',\n      message: t`For a given video resource, only one video will be played in memory and displayed. If you put this object multiple times on the scene, all the instances will be displaying the exact same video (with the same timing and paused/played/stopped state).`,\n    },\n    {\n      kind: 'info',\n      message: t`Video format supported can vary according to devices and browsers. For maximum compatibility, use H.264/mp4 file format (and AAC for audio).`,\n    },\n  ],\n  'SkeletonObject::Skeleton': [\n    {\n      kind: 'warning',\n      message: t`This object is experimental and not actively maintained. It might have bugs or incomplete support in GDevelop. A maintainer is searched to improve the object implementation and solve any issue. Your help is welcome!`,\n    },\n    {\n      kind: 'info',\n      message: t`Only use this object if you can contribute back to the source code or are able to remove/replace it from your game in a future version.`,\n    },\n  ],\n});\n\nexport const getExtraInstructionInformation = (type: string): ?Hint => {\n  if (type.indexOf('PhysicsBehavior::') === 0) {\n    return {\n      kind: 'warning',\n      message: t`This action is deprecated and should not be used anymore. Instead,\n  use for all your objects the behavior called \"Physics2\" and the\n  associated actions (in this case, all objects must be set up to use\n  Physics2, you can't mix the behaviors).`,\n    };\n  }\n  if (type === 'TextObject::Size') {\n    return {\n      kind: 'warning',\n      message: t`This action will create a new texture and re-render the text each time it is called, which is expensive and can reduce performances. Prefer to avoid changing a lot the character size of a text.`,\n    };\n  }\n  if (type === 'PlayMusicCanal' || type === 'PlayMusic') {\n    return {\n      kind: 'warning',\n      message: t`Musics will only be played if the user has interacted with the game before (by clicking/touching it or pressing a key on the keyboard). This is due to browser limitations. Make sure to have the user interact with the game before using this action.`,\n    };\n  }\n\n  return null;\n};\n","// @flow\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\nimport { mapVector } from '../Utils/MapFor';\nconst gd = global.gd;\n\n// This file contains the logic to declare extension metadata from\n// events functions or events based behaviors.\n// These are basically adapters from EventsFunctionsExtension, and children, to a\n// real extension declaration (like in `JsExtension.js` or `Extension.cpp` files).\n\n/**\n * Declare an extension from an events based extension.\n */\nexport const declareExtension = (\n  extension: gdPlatformExtension,\n  eventsFunctionsExtension: gdEventsFunctionsExtension\n) => {\n  extension.setExtensionInformation(\n    eventsFunctionsExtension.getName(),\n    eventsFunctionsExtension.getFullName() ||\n      eventsFunctionsExtension.getName(),\n    eventsFunctionsExtension.getDescription(),\n    '',\n    ''\n  );\n};\n\n/**\n * Declare the behavior for the given\n * events based behavior.\n */\nexport const declareBehaviorMetadata = (\n  extension: gdPlatformExtension,\n  eventsBasedBehavior: gdEventsBasedBehavior\n): gdBehaviorMetadata => {\n  const generatedBehavior = new gd.BehaviorJsImplementation();\n\n  // The functions below are keeping a reference to eventsBasedBehavior.\n  // This should be safe as if eventsBasedBehavior is deleted (i.e: the behavior\n  // is removed from its extension), then extension will be re-generated.\n\n  // Declare the properties of the behavior\n  generatedBehavior.updateProperty = function(\n    behaviorContent: gdBehaviorContent,\n    propertyName: string,\n    newValue: string\n  ) {\n    let propertyFound = false;\n    mapVector(eventsBasedBehavior.getPropertyDescriptors(), property => {\n      if (property.getName() === propertyName) {\n        propertyFound = true;\n        const element = behaviorContent.addChild(propertyName);\n        const propertyType: string = property.getType();\n\n        if (propertyType === 'String' || propertyType === 'Choice') {\n          element.setStringValue(newValue);\n        } else if (propertyType === 'Number') {\n          element.setDoubleValue(parseFloat(newValue));\n        } else if (propertyType === 'Boolean') {\n          element.setBoolValue(newValue === '1');\n        }\n      }\n    });\n\n    return propertyFound;\n  };\n\n  generatedBehavior.getProperties = function(behaviorContent) {\n    var behaviorProperties = new gd.MapStringPropertyDescriptor();\n    mapVector(eventsBasedBehavior.getPropertyDescriptors(), property => {\n      const newProperty = property.toPropertyDescriptor();\n      const propertyType: string = newProperty.getType();\n\n      if (behaviorContent.hasChild(property.getName())) {\n        if (propertyType === 'String' || propertyType === 'Choice') {\n          newProperty.setValue(\n            behaviorContent.getChild(property.getName()).getStringValue()\n          );\n        } else if (propertyType === 'Number') {\n          newProperty.setValue(\n            '' + behaviorContent.getChild(property.getName()).getDoubleValue()\n          );\n        } else if (propertyType === 'Boolean') {\n          newProperty.setValue(\n            behaviorContent.getChild(property.getName()).getBoolValue()\n              ? 'true'\n              : 'false'\n          );\n        }\n      } else {\n        // No value was serialized for this property. `newProperty`\n        // will have the default value coming from `property`.\n      }\n\n      behaviorProperties.set(property.getName(), newProperty);\n    });\n\n    return behaviorProperties;\n  };\n\n  generatedBehavior.initializeContent = function(behaviorContent) {\n    mapVector(eventsBasedBehavior.getPropertyDescriptors(), property => {\n      const element = behaviorContent.addChild(property.getName());\n      const propertyType: string = property.getType();\n\n      if (propertyType === 'String' || propertyType === 'Choice') {\n        element.setStringValue(property.getValue());\n      } else if (propertyType === 'Number') {\n        element.setDoubleValue(parseFloat(property.getValue()) || 0);\n      } else if (propertyType === 'Boolean') {\n        element.setBoolValue(property.getValue() === 'true');\n      }\n    });\n  };\n\n  return extension\n    .addBehavior(\n      eventsBasedBehavior.getName(),\n      eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n      eventsBasedBehavior.getName(), // Default name is the name\n      eventsBasedBehavior.getDescription(),\n      '',\n      'res/function24.png',\n      eventsBasedBehavior.getName(), // Class name is the name, actually unused\n      generatedBehavior,\n      new gd.BehaviorsSharedData()\n    )\n    .setObjectType(eventsBasedBehavior.getObjectType());\n};\n\n/**\n * Check if the name of the function is the name of a lifecycle function,\n * that will be called automatically by the game engine.\n */\nexport const isBehaviorLifecycleFunction = (functionName: string) => {\n  return (\n    [\n      'onCreated',\n      'onActivate',\n      'onDeActivate',\n      'doStepPreEvents',\n      'doStepPostEvents',\n      'onDestroy',\n      // Compatibility with GD <= 5.0 beta 75\n      'onOwnerRemovedFromScene',\n      // end of compatibility code\n    ].indexOf(functionName) !== -1\n  );\n};\n\n/**\n * Declare the instruction (action/condition) or expression for the given\n * (free) events function.\n */\nexport const declareInstructionOrExpressionMetadata = (\n  extension: gdPlatformExtension,\n  eventsFunctionsExtension: gdEventsFunctionsExtension,\n  eventsFunction: gdEventsFunction\n): gdInstructionMetadata | gdExpressionMetadata => {\n  const functionType = eventsFunction.getFunctionType();\n  if (functionType === gd.EventsFunction.Expression) {\n    return extension.addExpression(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsFunctionsExtension.getFullName() ||\n        eventsFunctionsExtension.getName(),\n      'res/function.png'\n    );\n  } else if (functionType === gd.EventsFunction.StringExpression) {\n    return extension.addStrExpression(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsFunctionsExtension.getFullName() ||\n        eventsFunctionsExtension.getName(),\n      'res/function.png'\n    );\n  } else if (functionType === gd.EventsFunction.Condition) {\n    return extension.addCondition(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsFunction.getSentence(),\n      eventsFunctionsExtension.getFullName() ||\n        eventsFunctionsExtension.getName(),\n      'res/function.png',\n      'res/function24.png'\n    );\n  } else {\n    return extension.addAction(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsFunction.getSentence(),\n      eventsFunctionsExtension.getFullName() ||\n        eventsFunctionsExtension.getName(),\n      'res/function.png',\n      'res/function24.png'\n    );\n  }\n};\n\n/**\n * Declare the instruction (action/condition) or expression for the given\n * behavior events function.\n */\nexport const declareBehaviorInstructionOrExpressionMetadata = (\n  behaviorMetadata: gdBehaviorMetadata,\n  eventsBasedBehavior: gdEventsBasedBehavior,\n  eventsFunction: gdEventsFunction\n): gdInstructionMetadata | gdExpressionMetadata => {\n  const functionType = eventsFunction.getFunctionType();\n  if (functionType === gd.EventsFunction.Expression) {\n    return behaviorMetadata.addExpression(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n      'res/function.png'\n    );\n  } else if (functionType === gd.EventsFunction.StringExpression) {\n    return behaviorMetadata.addStrExpression(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n      'res/function.png'\n    );\n  } else if (functionType === gd.EventsFunction.Condition) {\n    // Use the new \"scoped\" way to declare an instruction, because\n    // we want to prevent any conflict between free functions and\n    // behaviors (that can totally have functions with the same name).\n    return behaviorMetadata.addScopedCondition(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsFunction.getSentence(),\n      eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n      'res/function.png',\n      'res/function24.png'\n    );\n  } else {\n    // Use the new \"scoped\" way to declare an instruction, because\n    // we want to prevent any conflict between free functions and\n    // behaviors (that can totally have functions with the same name).\n    return behaviorMetadata.addScopedAction(\n      eventsFunction.getName(),\n      eventsFunction.getFullName() || eventsFunction.getName(),\n      eventsFunction.getDescription() || eventsFunction.getFullName(),\n      eventsFunction.getSentence(),\n      eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n      'res/function.png',\n      'res/function24.png'\n    );\n  }\n};\n\n/**\n * Declare the instructions (actions/conditions) and expressions for the\n * properties of the given events based behavior.\n * This is akin to what would happen by manually declaring a JS extension\n * (see `JsExtension.js` files of extensions).\n */\nexport const declareBehaviorPropertiesInstructionAndExpressions = (\n  i18n: I18nType,\n  behaviorMetadata: gdBehaviorMetadata,\n  eventsBasedBehavior: gdEventsBasedBehavior\n): void => {\n  const addObjectAndBehaviorParameters = (\n    instructionOrExpression: gdInstructionMetadata | gdExpressionMetadata\n  ) => {\n    // By convention, first parameter is always the object:\n    instructionOrExpression.addParameter(\n      'object',\n      'Object',\n      '', // See below for adding the extra information\n      false\n    );\n\n    // Manually add the \"extra info\" without relying on addParameter\n    // as this method is prefixing the value passed with the extension namespace (this\n    // was done to ease extension declarations when dealing with object).\n    instructionOrExpression\n      .getParameter(instructionOrExpression.getParametersCount() - 1)\n      .setExtraInfo(eventsBasedBehavior.getObjectType());\n\n    // By convention, second parameter is always the behavior:\n    instructionOrExpression.addParameter(\n      'behavior',\n      'Behavior',\n      eventsBasedBehavior.getName(),\n      false\n    );\n\n    // All property actions/conditions/expressions are private, meaning\n    // they can only be used from the behavior events.\n    instructionOrExpression.setPrivate();\n\n    return instructionOrExpression;\n  };\n\n  mapVector(eventsBasedBehavior.getPropertyDescriptors(), property => {\n    const propertyType = property.getType();\n    const propertyName = property.getName();\n    const getterName = gd.BehaviorCodeGenerator.getBehaviorPropertyGetterName(\n      propertyName\n    );\n    const setterName = gd.BehaviorCodeGenerator.getBehaviorPropertySetterName(\n      propertyName\n    );\n    const propertyLabel =\n      property.getLabel() || i18n._(t`${propertyName} property`);\n\n    if (propertyType === 'String' || propertyType === 'Choice') {\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addStrExpression(\n          gd.EventsBasedBehavior.getPropertyExpressionName(propertyName),\n          propertyLabel,\n          propertyLabel,\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          'res/function.png'\n        )\n      )\n        .getCodeExtraInformation()\n        .setFunctionName(getterName);\n\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addScopedCondition(\n          gd.EventsBasedBehavior.getPropertyConditionName(propertyName),\n          propertyLabel,\n          i18n._(t`Compare the content of ${propertyLabel}`),\n          i18n._(t`the property ${propertyName}`),\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          'res/function.png'\n        )\n      )\n        .useStandardRelationalOperatorParameters('string')\n        .getCodeExtraInformation()\n        .setFunctionName(getterName);\n\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addScopedAction(\n          gd.EventsBasedBehavior.getPropertyActionName(propertyName),\n          propertyLabel,\n          i18n._(t`Change the content of ${propertyLabel}`),\n          i18n._(t`the property ${propertyName}`),\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          'res/function.png'\n        )\n      )\n        .useStandardOperatorParameters('string')\n        .getCodeExtraInformation()\n        .setFunctionName(setterName)\n        .setManipulatedType('string')\n        .setGetter(getterName);\n    } else if (propertyType === 'Number') {\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addExpression(\n          gd.EventsBasedBehavior.getPropertyExpressionName(propertyName),\n          propertyLabel,\n          propertyLabel,\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          'res/function.png'\n        )\n      )\n        .getCodeExtraInformation()\n        .setFunctionName(getterName);\n\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addScopedCondition(\n          gd.EventsBasedBehavior.getPropertyConditionName(propertyName),\n          propertyLabel,\n          i18n._(t`Compare the value of ${propertyLabel}`),\n          i18n._(t`the property ${propertyName}`),\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          'res/function.png'\n        )\n      )\n        .useStandardRelationalOperatorParameters('number')\n        .getCodeExtraInformation()\n        .setFunctionName(getterName);\n\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addScopedAction(\n          gd.EventsBasedBehavior.getPropertyActionName(propertyName),\n          propertyLabel,\n          i18n._(t`Change the value of ${propertyLabel}`),\n          i18n._(t`the property ${propertyName}`),\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          'res/function.png'\n        )\n      )\n        .useStandardOperatorParameters('number')\n        .getCodeExtraInformation()\n        .setFunctionName(setterName)\n        .setGetter(getterName);\n    } else if (propertyType === 'Boolean') {\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addScopedCondition(\n          gd.EventsBasedBehavior.getPropertyConditionName(propertyName),\n          propertyLabel,\n          i18n._(t`Check the value of ${propertyLabel}`),\n          i18n._(t`Property ${propertyName} of _PARAM0_ is true`),\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          'res/function.png',\n          'res/function24.png'\n        )\n      )\n        .getCodeExtraInformation()\n        .setFunctionName(getterName);\n\n      addObjectAndBehaviorParameters(\n        behaviorMetadata.addScopedAction(\n          gd.EventsBasedBehavior.getPropertyActionName(propertyName),\n          propertyLabel,\n          i18n._(t`Update the value of ${propertyLabel}`),\n          i18n._(t`Set property ${propertyName} of _PARAM0_ to _PARAM2_`),\n          eventsBasedBehavior.getFullName() || eventsBasedBehavior.getName(),\n          'res/function.png'\n        )\n      )\n        .addParameter('yesorno', i18n._(t`New value to set`), '', false)\n        .getCodeExtraInformation()\n        .setFunctionName(setterName);\n    }\n  });\n};\n\n/**\n * Add to the instruction (action/condition) or expression the parameters\n * expected by the events function.\n */\nexport const declareEventsFunctionParameters = (\n  eventsFunction: gdEventsFunction,\n  instructionOrExpression: gdInstructionMetadata | gdExpressionMetadata\n) => {\n  mapVector(\n    eventsFunction.getParameters(),\n    (parameter: gdParameterMetadata) => {\n      if (!parameter.isCodeOnly()) {\n        instructionOrExpression.addParameter(\n          parameter.getType(),\n          parameter.getDescription(),\n          '', // See below for adding the extra information\n          parameter.isOptional()\n        );\n        instructionOrExpression.setParameterLongDescription(\n          parameter.getLongDescription()\n        );\n      } else {\n        instructionOrExpression.addCodeOnlyParameter(\n          parameter.getType(),\n          '' // See below for adding the extra information\n        );\n      }\n      // Manually add the \"extra info\" without relying on addParameter (or addCodeOnlyParameter)\n      // as these methods are prefixing the value passed with the extension namespace (this\n      // was done to ease extension declarations when dealing with object).\n      instructionOrExpression\n        .getParameter(instructionOrExpression.getParametersCount() - 1)\n        .setExtraInfo(parameter.getExtraInfo());\n    }\n  );\n\n  // By convention, latest parameter is always the eventsFunctionContext of the calling function\n  // (if any).\n  instructionOrExpression.addCodeOnlyParameter('eventsFunctionContext', '');\n};\n","// @flow\nimport * as React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\ntype Props = {|\n  label?: ?React.Node,\n  checked: boolean,\n  onCheck?: (e: {||}, checked: boolean) => void,\n  checkedIcon?: React.Node,\n  uncheckedIcon?: React.Node,\n  disabled?: boolean,\n|};\n\n/**\n * A checkbox based on Material-UI Checkbox, but that can be displayed\n * without having it taking the full width of its container.\n */\nexport default (props: Props) => {\n  const { onCheck } = props;\n  const checkbox = (\n    <Checkbox\n      disabled={props.disabled}\n      checked={props.checked}\n      onChange={\n        onCheck ? event => onCheck(event, event.target.checked) : undefined\n      }\n      icon={props.uncheckedIcon}\n      checkedIcon={props.checkedIcon}\n      color=\"primary\"\n    />\n  );\n  return props.label ? (\n    <FormControlLabel control={checkbox} label={props.label} />\n  ) : (\n    checkbox\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport {\n  MosaicWindow as RMMosaicWindow,\n  MosaicWithoutDragDropContext,\n  getLeaves,\n} from 'react-mosaic-component';\nimport CloseButton from './CloseButton';\nimport ThemeConsumer from '../Theme/ThemeConsumer';\n\n// EditorMosaic default styling:\nimport 'react-mosaic-component/react-mosaic-component.css';\nimport './style.css';\n\nexport type Editor = {|\n  type: 'primary' | 'secondary',\n  renderEditor: () => React.Node,\n  noTitleBar?: boolean,\n  title?: React.Node,\n  toolbarControls?: Array<React.Node>,\n|};\n\ntype MosaicNode =\n  | {|\n      direction: 'row' | 'column',\n      splitPercentage: number,\n      first: ?MosaicNode,\n      second: ?MosaicNode,\n    |}\n  | string;\n\n// Add a node (an editor) in the mosaic.\nconst addNode = (\n  currentNode: ?MosaicNode,\n  newNode: MosaicNode | string,\n  position: 'start' | 'end',\n  splitPercentage: number,\n  direction: 'row' | 'column' = 'row'\n): MosaicNode => {\n  if (!currentNode) return newNode;\n\n  // Add the new node inside the current node...\n  if (typeof currentNode !== 'string') {\n    if (\n      position === 'end' &&\n      currentNode.second &&\n      typeof currentNode.second !== 'string'\n    ) {\n      return {\n        ...currentNode,\n        second: addNode(\n          currentNode.second,\n          newNode,\n          position,\n          splitPercentage,\n          direction\n        ),\n      };\n    } else if (\n      position === 'start' &&\n      currentNode.first &&\n      typeof currentNode.first !== 'string'\n    ) {\n      return {\n        ...currentNode,\n        first: addNode(\n          currentNode.first,\n          newNode,\n          position,\n          splitPercentage,\n          direction\n        ),\n      };\n    }\n  }\n\n  // Or add the node here.\n  return {\n    direction,\n    first: position === 'end' ? currentNode : newNode,\n    second: position === 'end' ? newNode : currentNode,\n    splitPercentage,\n  };\n};\n\n// Replace a node (an editor) by another.\nconst replaceNode = (\n  currentNode: ?MosaicNode,\n  oldNode: ?MosaicNode,\n  newNode: ?MosaicNode\n): ?MosaicNode => {\n  if (!currentNode) {\n    return currentNode;\n  } else if (typeof currentNode === 'string') {\n    if (currentNode === oldNode) return newNode;\n\n    return currentNode;\n  } else {\n    if (currentNode === oldNode) return newNode;\n\n    return {\n      ...currentNode,\n      first: replaceNode(currentNode.first, oldNode, newNode),\n      second: replaceNode(currentNode.second, oldNode, newNode),\n    };\n  }\n};\n\nconst defaultToolbarControls = [<CloseButton key=\"close\" />];\n\nconst renderMosaicWindowPreview = props => (\n  <div className=\"mosaic-preview\">\n    <div className=\"mosaic-window-toolbar\">\n      <div className=\"mosaic-window-title\">{props.title}</div>\n    </div>\n    <div className=\"mosaic-window-body\" />\n  </div>\n);\n\n/**\n * A window that can be used in a EditorMosaic, with a close button\n * by default in the toolbarControls and a preview when the window is\n * dragged.\n */\nconst MosaicWindow = (props: any) => (\n  <RMMosaicWindow\n    {...props}\n    toolbarControls={props.toolbarControls || defaultToolbarControls}\n    renderPreview={renderMosaicWindowPreview}\n  />\n);\n\ntype Props = {|\n  initialNodes: MosaicNode,\n  editors: {\n    [string]: Editor,\n  },\n  limitToOneSecondaryEditor?: boolean,\n|};\n\ntype State = {|\n  mosaicNode: ?MosaicNode,\n|};\n\n/**\n * @class EditorMosaic\n *\n * Can be used to create a mosaic of resizable editors.\n * Must be used inside a component wrapped in a DragDropContext.\n */\nexport default class EditorMosaic extends React.Component<Props, State> {\n  state = {\n    mosaicNode: this.props.initialNodes,\n  };\n\n  openEditor = (\n    editorName: string,\n    position: 'start' | 'end',\n    splitPercentage: number\n  ) => {\n    const { editors, limitToOneSecondaryEditor } = this.props;\n\n    const editor = this.props.editors[editorName];\n    if (!editor) return false;\n\n    const openedEditorNames = getLeaves(this.state.mosaicNode);\n    if (openedEditorNames.indexOf(editorName) !== -1) {\n      return false;\n    }\n\n    if (limitToOneSecondaryEditor && editor.type === 'secondary') {\n      // Replace the existing secondary editor, if any.\n      const secondaryEditorName = openedEditorNames.find(\n        editorName => editors[editorName].type === 'secondary'\n      );\n      if (secondaryEditorName) {\n        this.setState({\n          mosaicNode: replaceNode(\n            this.state.mosaicNode,\n            secondaryEditorName,\n            editorName\n          ),\n        });\n        return true;\n      }\n    }\n\n    // Open a new editor at the indicated position\n    this.setState({\n      mosaicNode: addNode(\n        this.state.mosaicNode,\n        editorName,\n        position,\n        splitPercentage\n      ),\n    });\n\n    return true;\n  };\n\n  _onChange = (mosaicNode: MosaicNode) => this.setState({ mosaicNode });\n\n  render() {\n    const { editors } = this.props;\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <MosaicWithoutDragDropContext\n            className={`${\n              muiTheme.mosaicRootClassName\n            } mosaic-blueprint-theme mosaic-gd-theme`}\n            renderTile={(editorName: string, path: string) => {\n              const editor = editors[editorName];\n              if (!editor) {\n                console.error(\n                  'Trying to render un unknown editor: ' + editorName\n                );\n                return null;\n              }\n\n              if (editor.noTitleBar) {\n                return editor.renderEditor();\n              }\n\n              return (\n                <MosaicWindow\n                  path={path}\n                  title={editor.title}\n                  toolbarControls={editor.toolbarControls}\n                >\n                  {editor.renderEditor()}\n                </MosaicWindow>\n              );\n            }}\n            value={this.state.mosaicNode}\n            onChange={this._onChange}\n          />\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n","throw new Error(\n  'This is a fake @blueprintjs/core (or @blueprintjs/icons) package that is just throwing an' +\n    \" error. It's used by react-mosaic, which will fallback to using something else.\" +\n    'This is useful for avoiding webpack/create-react-app warnings in the development' +\n    'console about a missing package - while avoiding to import blueprint.'\n);\n","import { t } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport TextField from '../TextField';\nimport ColorPicker from './ColorPicker';\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'inline-block',\n  },\n  picker: {\n    position: 'absolute',\n    right: '8px',\n    top: '26px',\n  },\n};\n\nexport default class ColorField extends Component {\n  onClick = () => {\n    if (this.textField) this.textField.blur();\n    if (this.picker) this.picker.open();\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          ...styles.container,\n          width: this.props.fullWidth ? '100%' : undefined,\n        }}\n      >\n        <TextField\n          fullWidth\n          floatingLabelText={this.props.floatingLabelText}\n          floatingLabelFixed\n          helperMarkdownText={this.props.helperMarkdownText}\n          type=\"text\"\n          hintText={t`Click to choose`}\n          onClick={this.onClick}\n          onFocus={this.onClick}\n          value=\"\"\n          ref={textField => (this.textField = textField)}\n        />\n        <div style={styles.picker}>\n          <ColorPicker {...this.props} ref={picker => (this.picker = picker)} />\n        </div>\n      </div>\n    );\n  }\n}\n","import TextEditor from './Editors/TextEditor';\nimport TiledSpriteEditor from './Editors/TiledSpriteEditor';\nimport PanelSpriteEditor from './Editors/PanelSpriteEditor';\nimport SpriteEditor from './Editors/SpriteEditor';\nimport EmptyEditor from './Editors/EmptyEditor';\nimport ShapePainterEditor from './Editors/ShapePainterEditor';\nimport ParticleEmitterEditor from './Editors/ParticleEmitterEditor';\nimport ObjectPropertiesEditor from './Editors/ObjectPropertiesEditor';\nconst gd = global.gd;\n\n/**\n * A service returning editor components for each object type.\n */\nexport default {\n  getEditorConfiguration(objectType: string) {\n    if (!this.editorConfigurations[objectType]) {\n      console.warn(\n        `Object with type ${objectType} has no editor configuration registered. Please use registerEditorConfiguration to register your editor.`\n      );\n    }\n\n    return this.editorConfigurations[objectType];\n  },\n  registerEditorConfiguration: function(objectType, editorConfiguration) {\n    if (!editorConfiguration.component) {\n      console.warn(\n        `Tried to register editor configuration for object \"${objectType}\", but \"component\" property is not defined.`\n      );\n      return;\n    }\n    if (!editorConfiguration.createNewObject) {\n      console.warn(\n        `Tried to register editor configuration for object \"${objectType}\", but \"createNewObject\" property is not defined.`\n      );\n      return;\n    }\n    if (!editorConfiguration.castToObjectType) {\n      console.warn(\n        `Tried to register editor configuration for object \"${objectType}\", but \"castToObjectType\" property is not defined.`\n      );\n      return;\n    }\n\n    if (this.editorConfigurations.hasOwnProperty(objectType)) {\n      console.warn(\n        `Tried to register editor configuration for object \"${objectType}\", but an editor configuration already exists.`\n      );\n      return;\n    }\n\n    console.info(\n      `Properly registered editor configuration for object \"${objectType}\".`\n    );\n    this.editorConfigurations[objectType] = editorConfiguration;\n  },\n  getDefaultObjectJsImplementationPropertiesEditor(options) {\n    return {\n      component: ObjectPropertiesEditor,\n      createNewObject: object =>\n        gd\n          .asObjectJsImplementation(object)\n          .clone()\n          .release(),\n      castToObjectType: object => gd.asObjectJsImplementation(object),\n      helpPagePath: options.helpPagePath,\n    };\n  },\n  editorConfigurations: {\n    Sprite: {\n      component: SpriteEditor,\n      createNewObject: () => new gd.SpriteObject(''),\n      castToObjectType: object => gd.asSpriteObject(object),\n      helpPagePath: '/objects/sprite',\n    },\n    'TiledSpriteObject::TiledSprite': {\n      component: TiledSpriteEditor,\n      createNewObject: () => new gd.TiledSpriteObject(''),\n      castToObjectType: object => gd.asTiledSpriteObject(object),\n      helpPagePath: '/objects/tiled_sprite',\n    },\n    'PanelSpriteObject::PanelSprite': {\n      component: PanelSpriteEditor,\n      createNewObject: () => new gd.PanelSpriteObject(''),\n      castToObjectType: object => gd.asPanelSpriteObject(object),\n      helpPagePath: '/objects/panel_sprite',\n    },\n    'TextObject::Text': {\n      component: TextEditor,\n      createNewObject: () => new gd.TextObject(''),\n      castToObjectType: object => gd.asTextObject(object),\n      helpPagePath: '/objects/text',\n    },\n    'PrimitiveDrawing::Drawer': {\n      component: ShapePainterEditor,\n      createNewObject: () => new gd.ShapePainterObject(''),\n      castToObjectType: object => gd.asShapePainterObject(object),\n      helpPagePath: '/objects/shape_painter',\n    },\n    'TextEntryObject::TextEntry': {\n      component: EmptyEditor,\n      createNewObject: () => new gd.TextEntryObject(''),\n      castToObjectType: object => gd.asTextEntryObject(object),\n      helpPagePath: '/objects/text_entry',\n    },\n    'ParticleSystem::ParticleEmitter': {\n      component: ParticleEmitterEditor,\n      createNewObject: () => new gd.ParticleEmitterObject(''),\n      castToObjectType: object => gd.asParticleEmitterObject(object),\n      helpPagePath: '/objects/particles_emitter',\n    },\n    'SkeletonObject::Skeleton': {\n      component: ObjectPropertiesEditor,\n      createNewObject: () => new gd.SkeletonObject(''),\n      castToObjectType: object => gd.castObject(object, gd.SkeletonObject),\n      helpPagePath: '/objects/skeleton',\n    },\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { ListItem } from '../List';\nimport ListIcon from '../ListIcon';\nimport TextField, { noMarginTextFieldInListItemTopOffset } from '../TextField';\nimport ThemeConsumer from '../Theme/ThemeConsumer';\n\nconst styles = {\n  itemName: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n  },\n  textField: {\n    top: noMarginTextFieldInListItemTopOffset,\n  },\n};\n\nconst LEFT_MOUSE_BUTTON = 0;\n\ntype Props<Item> = {\n  item: Item,\n  itemName: string,\n  isBold: boolean,\n  onRename: string => void,\n  editingName: boolean,\n  getThumbnail?: () => string,\n  selected: boolean,\n  onItemSelected: (?Item) => void,\n  errorStatus: '' | 'error' | 'warning',\n  buildMenuTemplate: () => Array<any>,\n  onEdit?: ?(Item) => void,\n  hideMenuButton: boolean,\n  connectIconDragSource?: ?(React.Node) => React.Node,\n};\n\nclass ItemRow<Item> extends React.Component<Props<Item>> {\n  textField: ?TextField;\n\n  componentDidUpdate(prevProps: Props<Item>) {\n    if (!prevProps.editingName && this.props.editingName) {\n      setTimeout(() => {\n        if (this.textField) this.textField.focus();\n      }, 100);\n    }\n  }\n\n  render() {\n    const {\n      item,\n      itemName,\n      isBold,\n      selected,\n      getThumbnail,\n      errorStatus,\n      onEdit,\n      onItemSelected,\n      hideMenuButton,\n      connectIconDragSource,\n    } = this.props;\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => {\n          const label = this.props.editingName ? (\n            <TextField\n              id=\"rename-item-field\"\n              margin=\"none\"\n              ref={textField => (this.textField = textField)}\n              defaultValue={itemName}\n              onBlur={e => this.props.onRename(e.currentTarget.value)}\n              onKeyPress={event => {\n                if (event.charCode === 13) {\n                  // enter key pressed\n                  if (this.textField) this.textField.blur();\n                }\n              }}\n              fullWidth\n              style={styles.textField}\n            />\n          ) : (\n            <div\n              style={{\n                ...styles.itemName,\n                color: selected\n                  ? muiTheme.listItem.selectedTextColor\n                  : undefined,\n                fontStyle: isBold ? 'italic' : undefined,\n                fontWeight: isBold ? 'bold' : 'normal',\n              }}\n            >\n              {itemName}\n            </div>\n          );\n\n          const itemStyle = {\n            borderBottom: `1px solid ${muiTheme.listItem.separatorColor}`,\n            backgroundColor: selected\n              ? errorStatus === ''\n                ? muiTheme.listItem.selectedBackgroundColor\n                : errorStatus === 'error'\n                ? muiTheme.listItem.selectedErrorBackgroundColor\n                : muiTheme.listItem.selectedWarningBackgroundColor\n              : undefined,\n            color:\n              errorStatus === ''\n                ? undefined\n                : errorStatus === 'error'\n                ? muiTheme.listItem.errorTextColor\n                : muiTheme.listItem.warningTextColor,\n          };\n\n          const leftIcon = getThumbnail ? (\n            <ListIcon iconSize={32} src={getThumbnail()} />\n          ) : null;\n\n          return (\n            <ListItem\n              style={{ ...itemStyle }}\n              primaryText={label}\n              leftIcon={\n                connectIconDragSource && leftIcon\n                  ? connectIconDragSource(<div>{leftIcon}</div>)\n                  : leftIcon\n              }\n              displayMenuButton={!hideMenuButton}\n              buildMenuTemplate={this.props.buildMenuTemplate}\n              onClick={() => {\n                if (!onItemSelected) return;\n                if (this.props.editingName) return;\n\n                onItemSelected(selected ? null : item);\n              }}\n              onDoubleClick={event => {\n                if (event.button !== LEFT_MOUSE_BUTTON) return;\n                if (!onEdit) return;\n                if (this.props.editingName) return;\n\n                onItemSelected(null);\n                onEdit(item);\n              }}\n            />\n          );\n        }}\n      </ThemeConsumer>\n    );\n  }\n}\n\nexport default ItemRow;\n","// @flow\nimport * as React from 'react';\nimport ThemeConsumer from '../Theme/ThemeConsumer';\n\nconst styles = {\n  dropIndicator: {\n    borderTop: '2px solid #18dcf2',\n    height: 0,\n    marginTop: '-1px',\n    marginBottom: '-1px',\n    width: '100%',\n    boxSizing: 'border-box',\n  },\n};\n\nexport default function DropIndicator({ canDrop }: {| canDrop: boolean |}) {\n  return (\n    <ThemeConsumer>\n      {gdevelopTheme => (\n        <div\n          style={{\n            ...styles.dropIndicator,\n            borderColor: canDrop\n              ? gdevelopTheme.listItem.selectedBackgroundColor\n              : gdevelopTheme.listItem.selectedErrorBackgroundColor,\n          }}\n        />\n      )}\n    </ThemeConsumer>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport { List } from 'react-virtualized';\nimport ItemRow from './ItemRow';\nimport { AddListItem } from '../ListCommonItem';\nimport { listItemWith32PxIconHeight, listItemWithoutIconHeight } from '../List';\nimport { makeDragSourceAndDropTarget } from '../DragAndDrop/DragSourceAndDropTarget';\nimport DropIndicator from './DropIndicator';\nimport { ResponsiveWindowMeasurer } from '../Reponsive/ResponsiveWindowMeasurer';\nimport { ScreenTypeMeasurer } from '../Reponsive/ScreenTypeMeasurer';\n\ntype Props<Item> = {|\n  height: number,\n  width: number,\n  fullList: Array<Item>,\n  selectedItems: Array<Item>,\n  onAddNewItem?: () => void,\n  addNewItemLabel?: React.Node | string,\n  onRename: (Item, string) => void,\n  getItemName: Item => string,\n  getItemThumbnail?: Item => string,\n  isItemBold?: Item => boolean,\n  onItemSelected: (?Item) => void,\n  onEditItem?: Item => void,\n  renamedItem: ?Item,\n  erroredItems?: { [string]: '' | 'error' | 'warning' },\n  buildMenuTemplate: (Item, index: number) => any,\n  onMoveSelectionToItem: (destinationItem: Item) => void,\n  canMoveSelectionToItem?: ?(destinationItem: Item) => boolean,\n  reactDndType: string,\n|};\n\nexport default class SortableVirtualizedItemList<Item> extends React.Component<\n  Props<Item>\n> {\n  _list: ?List;\n  DragSourceAndDropTarget = makeDragSourceAndDropTarget<Item>(\n    this.props.reactDndType\n  );\n\n  forceUpdateGrid() {\n    if (this._list) this._list.forceUpdateGrid();\n  }\n\n  render() {\n    const {\n      height,\n      width,\n      fullList,\n      selectedItems,\n      addNewItemLabel,\n      renamedItem,\n      getItemThumbnail,\n      getItemName,\n      erroredItems,\n      onAddNewItem,\n      isItemBold,\n      onEditItem,\n      onMoveSelectionToItem,\n      canMoveSelectionToItem,\n    } = this.props;\n    const { DragSourceAndDropTarget } = this;\n\n    return (\n      <ResponsiveWindowMeasurer>\n        {windowWidth => (\n          <ScreenTypeMeasurer>\n            {screenType => (\n              <List\n                ref={list => (this._list = list)}\n                height={height}\n                rowCount={fullList.length + (onAddNewItem ? 1 : 0)}\n                rowHeight={\n                  getItemThumbnail\n                    ? listItemWith32PxIconHeight\n                    : listItemWithoutIconHeight\n                }\n                rowRenderer={({\n                  index,\n                  key,\n                  style,\n                }: {|\n                  index: number,\n                  key: string,\n                  style: Object,\n                |}) => {\n                  if (index >= fullList.length) {\n                    return (\n                      <div style={style} key={key}>\n                        <AddListItem\n                          disabled\n                          onClick={onAddNewItem}\n                          primaryText={addNewItemLabel}\n                        />\n                      </div>\n                    );\n                  }\n\n                  const item = fullList[index];\n                  const nameBeingEdited = renamedItem === item;\n                  const itemName = getItemName(item);\n\n                  return (\n                    <div style={style} key={key}>\n                      <DragSourceAndDropTarget\n                        beginDrag={() => {\n                          this.props.onItemSelected(item);\n                          return {};\n                        }}\n                        canDrop={() =>\n                          canMoveSelectionToItem\n                            ? canMoveSelectionToItem(item)\n                            : true\n                        }\n                        drop={() => {\n                          onMoveSelectionToItem(item);\n                        }}\n                      >\n                        {({\n                          connectDragSource,\n                          connectDropTarget,\n                          isOver,\n                          canDrop,\n                        }) => {\n                          // Add an extra div because connectDropTarget/connectDragSource can\n                          // only be used on native elements\n                          const dropTarget = connectDropTarget(\n                            <div>\n                              {isOver && <DropIndicator canDrop={canDrop} />}\n                              <ItemRow\n                                item={item}\n                                itemName={itemName}\n                                isBold={isItemBold ? isItemBold(item) : false}\n                                onRename={newName =>\n                                  this.props.onRename(item, newName)\n                                }\n                                editingName={nameBeingEdited}\n                                getThumbnail={\n                                  getItemThumbnail\n                                    ? () => getItemThumbnail(item)\n                                    : undefined\n                                }\n                                selected={selectedItems.indexOf(item) !== -1}\n                                onItemSelected={this.props.onItemSelected}\n                                errorStatus={\n                                  erroredItems\n                                    ? erroredItems[itemName] || ''\n                                    : ''\n                                }\n                                buildMenuTemplate={() =>\n                                  this.props.buildMenuTemplate(item, index)\n                                }\n                                onEdit={onEditItem}\n                                hideMenuButton={windowWidth === 'small'}\n                                connectIconDragSource={\n                                  // If on a touch screen, only set the icon to be draggable.\n                                  screenType === 'touch'\n                                    ? connectDragSource\n                                    : undefined\n                                }\n                              />\n                            </div>\n                          );\n\n                          return screenType === 'touch'\n                            ? dropTarget\n                            : connectDragSource(dropTarget);\n                        }}\n                      </DragSourceAndDropTarget>\n                    </div>\n                  );\n                }}\n                width={width}\n              />\n            )}\n          </ScreenTypeMeasurer>\n        )}\n      </ResponsiveWindowMeasurer>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { type ResourceKind } from '../ResourceSource.flow';\nimport ImageThumbnail from './ImageThumbnail';\n\ntype Props = {|\n  project: gdProject,\n  resourceName: string,\n  resourcesLoader: typeof ResourcesLoader,\n  children?: any,\n  style?: Object,\n  onSize?: (number, number) => void,\n  selectable?: boolean,\n  selected?: boolean,\n  onSelect?: boolean => void,\n  onContextMenu?: (number, number) => void,\n|};\n\ntype State = {|\n  resourceKind: ?ResourceKind,\n|};\n\n/**\n * Display the right thumbnail for any given resource of a project\n */\nexport default class ResourceThumbnail extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = this._loadFrom(props);\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      newProps.resourceName !== this.props.resourceName ||\n      newProps.project !== this.props.project\n    ) {\n      this.setState(this._loadFrom(newProps));\n    }\n  }\n\n  _loadFrom(props: Props): State {\n    const { project, resourceName } = props;\n    const resourcesManager = project.getResourcesManager();\n    const resourceKind = resourcesManager.hasResource(resourceName)\n      ? resourcesManager.getResource(resourceName).getKind()\n      : null;\n\n    return {\n      resourceKind,\n    };\n  }\n\n  render() {\n    const { resourceKind } = this.state;\n\n    switch (resourceKind) {\n      case 'image':\n        return (\n          <ImageThumbnail\n            project={this.props.project}\n            resourceName={this.props.resourceName}\n            resourcesLoader={this.props.resourcesLoader}\n            children={this.props.children}\n            style={this.props.style}\n            onSize={this.props.onSize}\n            selectable={this.props.selectable}\n            selected={this.props.selected}\n            onSelect={this.props.onSelect}\n            onContextMenu={this.props.onContextMenu}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ResourcesLoader from '../ResourcesLoader';\nimport ResourceSelector from './ResourceSelector';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n  type ResourceKind,\n} from './ResourceSource.flow';\nimport ResourceThumbnail from './ResourceThumbnail';\nimport { type ResourceExternalEditor } from './ResourceExternalEditor.flow';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\n\ntype Props = {|\n  project: gdProject,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  resourceKind: ResourceKind,\n  resourceName: string,\n  onChange: string => void,\n  floatingLabelText?: React.Node,\n  hintText?: MessageDescriptor,\n|};\n\nconst styles = {\n  container: { flex: 1, display: 'flex', alignItems: 'flex-end' },\n  selectorContainer: { flex: 1 },\n  resourceThumbnail: { marginLeft: 10, marginBottom: 4 },\n};\n\nconst ResourceSelectorWithThumbnail = ({\n  project,\n  resourceSources,\n  onChooseResource,\n  resourceExternalEditors,\n  resourceKind,\n  resourceName,\n  onChange,\n  floatingLabelText,\n  hintText,\n}: Props) => {\n  return (\n    <div style={styles.container}>\n      <div style={styles.selectorContainer}>\n        <ResourceSelector\n          project={project}\n          resourceSources={resourceSources}\n          onChooseResource={onChooseResource}\n          resourceExternalEditors={resourceExternalEditors}\n          resourcesLoader={ResourcesLoader}\n          resourceKind={resourceKind}\n          fullWidth\n          initialResourceName={resourceName}\n          onChange={onChange}\n          floatingLabelText={floatingLabelText}\n          hintText={hintText}\n        />\n      </div>\n      <ResourceThumbnail\n        resourceName={resourceName}\n        resourcesLoader={ResourcesLoader}\n        project={project}\n        style={styles.resourceThumbnail}\n      />\n    </div>\n  );\n};\n\nexport default ResourceSelectorWithThumbnail;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport './MainFrame.css';\nimport Drawer from '@material-ui/core/Drawer';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Toolbar from './Toolbar';\nimport ProjectTitlebar from './ProjectTitlebar';\nimport PreferencesDialog from './Preferences/PreferencesDialog';\nimport AboutDialog from './AboutDialog';\nimport ProjectManager from '../ProjectManager';\nimport PlatformSpecificAssetsDialog from '../PlatformSpecificAssetsEditor/PlatformSpecificAssetsDialog';\nimport LoaderModal from '../UI/LoaderModal';\nimport EditorBar from '../UI/EditorBar';\nimport CloseConfirmDialog from '../UI/CloseConfirmDialog';\nimport ProfileDialog from '../Profile/ProfileDialog';\nimport Window from '../Utils/Window';\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport {\n  ClosableTabs,\n  ClosableTab,\n  TabContentContainer,\n} from '../UI/ClosableTabs';\nimport {\n  getEditorTabsInitialState,\n  openEditorTab,\n  closeEditorTab,\n  closeOtherEditorTabs,\n  closeAllEditorTabs,\n  changeCurrentTab,\n  getEditors,\n  getCurrentTabIndex,\n  getCurrentTab,\n  closeProjectTabs,\n  closeLayoutTabs,\n  closeExternalLayoutTabs,\n  closeExternalEventsTabs,\n  closeEventsFunctionsExtensionTabs,\n  saveUiSettings,\n  type EditorTabsState,\n  type EditorTab,\n  getEventsFunctionsExtensionEditor,\n} from './EditorTabsHandler';\nimport { timePromise } from '../Utils/TimeFunction';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport HelpFinder from '../HelpFinder';\nimport DebuggerEditor from './Editors/DebuggerEditor';\nimport EventsEditor from './Editors/EventsEditor';\nimport ExternalEventsEditor from './Editors/ExternalEventsEditor';\nimport SceneEditor from './Editors/SceneEditor';\nimport ExternalLayoutEditor from './Editors/ExternalLayoutEditor';\nimport EventsFunctionsExtensionEditor from './Editors/EventsFunctionsExtensionEditor';\nimport StartPage from './Editors/StartPage';\nimport ResourcesEditor from './Editors/ResourcesEditor';\nimport ErrorBoundary from '../UI/ErrorBoundary';\nimport SubscriptionDialog from '../Profile/SubscriptionDialog';\nimport ResourcesLoader from '../ResourcesLoader/index';\nimport {\n  type PreviewLauncherInterface,\n  type PreviewLauncherProps,\n  type PreviewLauncherComponent,\n  type PreviewOptions,\n} from '../Export/PreviewLauncher.flow';\nimport { type ResourceSource } from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport { type JsExtensionsLoader } from '../JsExtensionsLoader';\nimport { type EventsFunctionsExtensionsState } from '../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext';\nimport {\n  getUpdateNotificationTitle,\n  getUpdateNotificationBody,\n  type UpdateStatus,\n} from './UpdaterTools';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport ChangelogDialogContainer from './Changelog/ChangelogDialogContainer';\nimport { getNotNullTranslationFunction } from '../Utils/i18n/getTranslationFunction';\nimport { type I18n } from '@lingui/core';\nimport { t } from '@lingui/macro';\nimport LanguageDialog from './Preferences/LanguageDialog';\nimport PreferencesContext from './Preferences/PreferencesContext';\nimport { getFunctionNameFromType } from '../EventsFunctionsExtensionsLoader';\nimport { type ExportDialogWithoutExportsProps } from '../Export/ExportDialog';\nimport { type CreateProjectDialogWithComponentsProps } from '../ProjectCreation/CreateProjectDialog';\nimport { getStartupTimesSummary } from '../Utils/StartupTimes';\nimport {\n  type StorageProvider,\n  type StorageProviderOperations,\n  type FileMetadata,\n} from '../ProjectsStorage';\nimport OpenFromStorageProviderDialog from '../ProjectsStorage/OpenFromStorageProviderDialog';\nimport SaveToStorageProviderDialog from '../ProjectsStorage/SaveToStorageProviderDialog';\nimport OpenConfirmDialog from '../ProjectsStorage/OpenConfirmDialog';\nimport verifyProjectContent from '../ProjectsStorage/ProjectContentChecker';\nconst GD_STARTUP_TIMES = global.GD_STARTUP_TIMES || [];\n\nconst gd = global.gd;\n\nconst styles = {\n  drawerContent: {\n    width: 320,\n    overflowX: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n};\n\ntype State = {|\n  createDialogOpen: boolean,\n  exportDialogOpen: boolean,\n  introDialogOpen: boolean,\n  openConfirmDialogOpen: boolean,\n  genericDialogOpen: boolean,\n  loadingProject: boolean,\n  previewLoading: boolean,\n  currentProject: ?gdProject,\n  currentFileMetadata: ?FileMetadata,\n  projectManagerOpen: boolean,\n  editorTabs: EditorTabsState,\n  genericDialog: null,\n  snackMessage: string,\n  snackMessageOpen: boolean,\n  preferencesDialogOpen: boolean,\n  languageDialogOpen: boolean,\n  profileDialogOpen: boolean,\n  subscriptionDialogOpen: boolean,\n  updateStatus: UpdateStatus,\n  aboutDialogOpen: boolean,\n  openFromStorageProviderDialogOpen: boolean,\n  saveToStorageProviderDialogOpen: boolean,\n  platformSpecificAssetsDialogOpen: boolean,\n  helpFinderDialogOpen: boolean,\n  eventsFunctionsExtensionsError: ?Error,\n|};\n\ntype Props = {\n  integratedEditor?: boolean,\n  introDialog?: React.Element<*>,\n  renderPreviewLauncher?: (\n    props: PreviewLauncherProps,\n    ref: (previewLauncher: ?PreviewLauncherInterface) => void\n  ) => React.Element<PreviewLauncherComponent>,\n  onEditObject?: gdObject => void,\n  storageProviderOperations: StorageProviderOperations,\n  storageProviders: Array<StorageProvider>,\n  useStorageProvider: (?StorageProvider) => Promise<void>,\n  resourceSources: Array<ResourceSource>,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  loading?: boolean,\n  requestUpdate?: () => void,\n  renderExportDialog?: ExportDialogWithoutExportsProps => React.Node,\n  renderCreateDialog?: CreateProjectDialogWithComponentsProps => React.Node,\n  renderGDJSDevelopmentWatcher?: ?() => React.Node,\n  extensionsLoader?: JsExtensionsLoader,\n  initialFileMetadataToOpen: ?FileMetadata,\n  eventsFunctionsExtensionsState: EventsFunctionsExtensionsState,\n  i18n: I18n,\n};\n\nclass MainFrame extends React.Component<Props, State> {\n  state = {\n    createDialogOpen: false,\n    exportDialogOpen: false,\n    introDialogOpen: false,\n    openConfirmDialogOpen: false,\n    genericDialogOpen: false,\n    loadingProject: false,\n    previewLoading: false,\n    currentProject: null,\n    currentFileMetadata: null,\n    projectManagerOpen: false,\n    editorTabs: getEditorTabsInitialState(),\n    genericDialog: null,\n    snackMessage: '',\n    snackMessageOpen: false,\n    preferencesDialogOpen: false,\n    languageDialogOpen: false,\n    profileDialogOpen: false,\n    subscriptionDialogOpen: false,\n    updateStatus: { message: '', status: 'unknown' },\n    aboutDialogOpen: false,\n    openFromStorageProviderDialogOpen: false,\n    saveToStorageProviderDialogOpen: false,\n    platformSpecificAssetsDialogOpen: false,\n    helpFinderDialogOpen: false,\n    eventsFunctionsExtensionsError: null,\n  };\n  toolbar = null;\n  _resourceSourceDialogs = {};\n  _previewLauncher: ?PreviewLauncherInterface = null;\n\n  componentWillMount() {\n    if (!this.props.integratedEditor) this.openStartPage();\n  }\n\n  componentDidMount() {\n    GD_STARTUP_TIMES.push(['MainFrameComponentDidMount', performance.now()]);\n\n    const { initialFileMetadataToOpen } = this.props;\n\n    this._loadExtensions();\n    if (initialFileMetadataToOpen) {\n      this._openInitialFileMetadata(/* isAfterUserInteraction= */ false);\n    } else if (this.props.introDialog && !Window.isDev())\n      this._openIntroDialog(true);\n\n    GD_STARTUP_TIMES.push([\n      'MainFrameComponentDidMountFinished',\n      performance.now(),\n    ]);\n    console.info('Startup times:', getStartupTimesSummary());\n  }\n\n  _openInitialFileMetadata = (isAfterUserInteraction: boolean) => {\n    const { storageProviderOperations, initialFileMetadataToOpen } = this.props;\n\n    if (!initialFileMetadataToOpen) return;\n\n    if (\n      !isAfterUserInteraction &&\n      storageProviderOperations.doesInitialOpenRequireUserInteraction\n    ) {\n      this._openOpenConfirmDialog(true);\n      return;\n    }\n\n    this.openFromFileMetadata(initialFileMetadataToOpen).then(() =>\n      this.openSceneOrProjectManager()\n    );\n  };\n\n  _languageDidChange() {\n    // A change in the language will automatically be applied\n    // on all React components, as it's handled by GDI18nProvider.\n    // We still have this method that will be called when the language\n    // dialog is closed after a language change. We then reload GDevelop\n    // extensions so that they declare all objects/actions/condition/etc...\n    // using the new language.\n    gd.JsPlatform.get().reloadBuiltinExtensions();\n    this._loadExtensions();\n  }\n\n  _loadExtensions = () => {\n    const { extensionsLoader, i18n } = this.props;\n    if (!extensionsLoader) {\n      console.info(\n        'No extensions loader specified, skipping extensions loading.'\n      );\n      return;\n    }\n\n    extensionsLoader\n      .loadAllExtensions(getNotNullTranslationFunction(i18n))\n      .then(loadingResults => {\n        const successLoadingResults = loadingResults.filter(\n          loadingResult => !loadingResult.result.error\n        );\n        const failLoadingResults = loadingResults.filter(\n          loadingResult =>\n            loadingResult.result.error && !loadingResult.result.dangerous\n        );\n        const dangerousLoadingResults = loadingResults.filter(\n          loadingResult =>\n            loadingResult.result.error && loadingResult.result.dangerous\n        );\n        console.info(`Loaded ${successLoadingResults.length} JS extensions.`);\n        if (failLoadingResults.length) {\n          console.error(\n            `⚠️ Unable to load ${\n              failLoadingResults.length\n            } JS extensions. Please check these errors:`,\n            failLoadingResults\n          );\n        }\n        if (dangerousLoadingResults.length) {\n          console.error(\n            `💣 Dangerous exceptions while loading ${\n              dangerousLoadingResults.length\n            } JS extensions. 🔥 Please check these errors as they will CRASH GDevelop:`,\n            dangerousLoadingResults\n          );\n        }\n      });\n  };\n\n  loadFromSerializedProject = (\n    serializedProject: gdSerializerElement,\n    fileMetadata: ?FileMetadata\n  ): Promise<void> => {\n    return timePromise(\n      () => {\n        const newProject = gd.ProjectHelper.createNewGDJSProject();\n        newProject.unserializeFrom(serializedProject);\n\n        return this.loadFromProject(newProject, fileMetadata);\n      },\n      time => console.info(`Unserialization took ${time} ms`)\n    );\n  };\n\n  loadFromProject = (\n    project: gdProject,\n    fileMetadata: ?FileMetadata\n  ): Promise<void> => {\n    const { eventsFunctionsExtensionsState } = this.props;\n\n    return this.closeProject().then(() => {\n      // Make sure that the ResourcesLoader cache is emptied, so that\n      // the URL to a resource with a name in the old project is not re-used\n      // for another resource with the same name in the new project.\n      ResourcesLoader.burstAllUrlsCache();\n      // TODO: Pixi cache should also be burst\n\n      return new Promise(resolve => {\n        this.setState(\n          {\n            currentProject: project,\n            currentFileMetadata: fileMetadata,\n          },\n          () => {\n            // Load all the EventsFunctionsExtension when the game is loaded. If they are modified,\n            // their editor will take care of reloading them.\n            eventsFunctionsExtensionsState.loadProjectEventsFunctionsExtensions(\n              project\n            );\n\n            if (fileMetadata) {\n              project.setProjectFile(fileMetadata.fileIdentifier);\n            }\n\n            resolve();\n          }\n        );\n      });\n    });\n  };\n\n  openFromFileMetadata = (fileMetadata: FileMetadata): Promise<void> => {\n    const { i18n, storageProviderOperations } = this.props;\n    const {\n      hasAutoSave,\n      onGetAutoSave,\n      onOpen,\n      getOpenErrorMessage,\n    } = storageProviderOperations;\n\n    if (!onOpen) {\n      console.error(\n        'Tried to open a file for a storage without onOpen support:',\n        fileMetadata,\n        storageProviderOperations\n      );\n      return Promise.resolve();\n    }\n\n    const checkForAutosave = (): Promise<FileMetadata> => {\n      if (!hasAutoSave || !onGetAutoSave) {\n        return Promise.resolve(fileMetadata);\n      }\n\n      return hasAutoSave(fileMetadata, true).then(canOpenAutosave => {\n        if (!canOpenAutosave) return fileMetadata;\n\n        //eslint-disable-next-line\n        const answer = confirm(\n          i18n._(\n            t`An autosave file (backup made automatically by GDevelop) that is newer than the project file exists. Would you like to load it instead?`\n          )\n        );\n        if (!answer) return fileMetadata;\n\n        return onGetAutoSave(fileMetadata);\n      });\n    };\n\n    const checkForAutosaveAfterFailure = (): Promise<?FileMetadata> => {\n      if (!hasAutoSave || !onGetAutoSave) {\n        return Promise.resolve(null);\n      }\n\n      return hasAutoSave(fileMetadata, false).then(canOpenAutosave => {\n        if (!canOpenAutosave) return null;\n\n        //eslint-disable-next-line\n        const answer = confirm(\n          i18n._(\n            t`The project file appears to be malformed, but an autosave file exists (backup made automatically by GDevelop). Would you like to try to load it instead?`\n          )\n        );\n        if (!answer) return null;\n\n        return onGetAutoSave(fileMetadata);\n      });\n    };\n\n    this.setState({ loadingProject: true });\n\n    // Try to find an autosave (and ask user if found)\n    return checkForAutosave()\n      .then(fileMetadata => onOpen(fileMetadata))\n      .catch(err => {\n        // onOpen failed, tried to find again an autosave\n        return checkForAutosaveAfterFailure().then(fileMetadata => {\n          if (fileMetadata) {\n            return onOpen(fileMetadata);\n          }\n\n          throw err;\n        });\n      })\n      .then(({ content }) => {\n        if (!verifyProjectContent(i18n, content)) {\n          // The content is not recognized and the user was warned. Abort the opening.\n          return;\n        }\n\n        const serializedProject = gd.Serializer.fromJSObject(content);\n        return this.loadFromSerializedProject(\n          serializedProject,\n          // Note that fileMetadata is the original, unchanged one, even if we're loading\n          // an autosave. If we're for some reason loading an autosave, we still consider\n          // that we're opening the file that was originally requested by the user.\n          fileMetadata\n        ).then(\n          () => {\n            serializedProject.delete();\n          },\n          err => {\n            serializedProject.delete();\n            throw err;\n          }\n        );\n      })\n      .catch(error => {\n        const errorMessage = getOpenErrorMessage\n          ? getOpenErrorMessage(error)\n          : t`Check that the path/URL is correct, that you selected a file that is a game file created with GDevelop and that is was not removed.`;\n        showErrorBox(\n          [i18n._(t`Unable to open the project.`), i18n._(errorMessage)].join(\n            '\\n'\n          ),\n          error\n        );\n      })\n      .then(() => this.setState({ loadingProject: false }));\n  };\n\n  closeProject = (): Promise<void> => {\n    const { currentProject } = this.state;\n    const { eventsFunctionsExtensionsState } = this.props;\n    if (!currentProject) return Promise.resolve();\n\n    return new Promise(resolve => {\n      this.openProjectManager(false);\n      this.setState(\n        {\n          editorTabs: closeProjectTabs(this.state.editorTabs, currentProject),\n        },\n        () => {\n          eventsFunctionsExtensionsState.unloadProjectEventsFunctionsExtensions(\n            currentProject\n          );\n          currentProject.delete();\n          this.setState(\n            {\n              currentProject: null,\n            },\n            () => {\n              this.updateToolbar();\n              resolve();\n            }\n          );\n        }\n      );\n    });\n  };\n\n  getSerializedElements = () => {\n    const editorTab = getCurrentTab(this.state.editorTabs);\n    if (!editorTab || !editorTab.editorRef) {\n      console.warn('No active editor or reference to the editor');\n      return {};\n    }\n\n    return editorTab.editorRef.getSerializedElements();\n  };\n\n  toggleProjectManager = () => {\n    if (!this.refs.toolbar)\n      this.setState({\n        projectManagerOpen: !this.state.projectManagerOpen,\n      });\n  };\n\n  openProjectManager = (open: boolean = true) => {\n    this.setState({\n      projectManagerOpen: open,\n    });\n  };\n\n  setEditorToolbar = (editorToolbar: any) => {\n    if (!this.toolbar) return;\n\n    this.toolbar.setEditorToolbar(editorToolbar);\n  };\n\n  addLayout = () => {\n    const { currentProject } = this.state;\n    if (!currentProject) return;\n\n    const name = newNameGenerator('NewScene', name =>\n      currentProject.hasLayoutNamed(name)\n    );\n    const newLayout = currentProject.insertNewLayout(\n      name,\n      currentProject.getLayoutsCount()\n    );\n    newLayout.updateBehaviorsSharedData(currentProject);\n    this.forceUpdate();\n  };\n\n  addExternalLayout = () => {\n    const { currentProject } = this.state;\n    if (!currentProject) return;\n\n    const name = newNameGenerator('NewExternalLayout', name =>\n      currentProject.hasExternalLayoutNamed(name)\n    );\n    currentProject.insertNewExternalLayout(\n      name,\n      currentProject.getExternalLayoutsCount()\n    );\n    this.forceUpdate();\n  };\n\n  addExternalEvents = () => {\n    const { currentProject } = this.state;\n    if (!currentProject) return;\n\n    const name = newNameGenerator('NewExternalEvents', name =>\n      currentProject.hasExternalEventsNamed(name)\n    );\n    currentProject.insertNewExternalEvents(\n      name,\n      currentProject.getExternalEventsCount()\n    );\n    this.forceUpdate();\n  };\n\n  addEventsFunctionsExtension = () => {\n    const { currentProject } = this.state;\n    if (!currentProject) return;\n\n    const name = newNameGenerator('NewExtension', name =>\n      currentProject.hasEventsFunctionsExtensionNamed(name)\n    );\n    currentProject.insertNewEventsFunctionsExtension(\n      name,\n      currentProject.getEventsFunctionsExtensionsCount()\n    );\n    this.forceUpdate();\n  };\n\n  deleteLayout = (layout: gdLayout) => {\n    const { currentProject } = this.state;\n    const { i18n } = this.props;\n    if (!currentProject) return;\n\n    //eslint-disable-next-line\n    const answer = confirm(\n      i18n._(\n        t`Are you sure you want to remove this scene? This can't be undone.`\n      )\n    );\n    if (!answer) return;\n\n    this.setState(\n      {\n        editorTabs: closeLayoutTabs(this.state.editorTabs, layout),\n      },\n      () => {\n        currentProject.removeLayout(layout.getName());\n        this.forceUpdate();\n      }\n    );\n  };\n\n  deleteExternalLayout = (externalLayout: gdExternalLayout) => {\n    const { currentProject } = this.state;\n    const { i18n } = this.props;\n    if (!currentProject) return;\n\n    //eslint-disable-next-line\n    const answer = confirm(\n      i18n._(\n        t`Are you sure you want to remove this external layout? This can't be undone.`\n      )\n    );\n    if (!answer) return;\n\n    this.setState(\n      {\n        editorTabs: closeExternalLayoutTabs(\n          this.state.editorTabs,\n          externalLayout\n        ),\n      },\n      () => {\n        currentProject.removeExternalLayout(externalLayout.getName());\n        this.forceUpdate();\n      }\n    );\n  };\n\n  deleteExternalEvents = (externalEvents: gdExternalEvents) => {\n    const { currentProject } = this.state;\n    const { i18n } = this.props;\n    if (!currentProject) return;\n\n    //eslint-disable-next-line\n    const answer = confirm(\n      i18n._(\n        t`Are you sure you want to remove these external events? This can't be undone.`\n      )\n    );\n    if (!answer) return;\n\n    this.setState(\n      {\n        editorTabs: closeExternalEventsTabs(\n          this.state.editorTabs,\n          externalEvents\n        ),\n      },\n      () => {\n        currentProject.removeExternalEvents(externalEvents.getName());\n        this.forceUpdate();\n      }\n    );\n  };\n\n  deleteEventsFunctionsExtension = (\n    externalLayout: gdEventsFunctionsExtension\n  ) => {\n    const { currentProject } = this.state;\n    const { i18n, eventsFunctionsExtensionsState } = this.props;\n    if (!currentProject) return;\n\n    //eslint-disable-next-line\n    const answer = confirm(\n      i18n._(\n        t`Are you sure you want to remove this extension? This can't be undone.`\n      )\n    );\n    if (!answer) return;\n\n    this.setState(\n      {\n        editorTabs: closeEventsFunctionsExtensionTabs(\n          this.state.editorTabs,\n          externalLayout\n        ),\n      },\n      () => {\n        currentProject.removeEventsFunctionsExtension(externalLayout.getName());\n        this.forceUpdate();\n      }\n    );\n\n    // Reload extensions to make sure the deleted extension is removed\n    // from the platform\n    eventsFunctionsExtensionsState.reloadProjectEventsFunctionsExtensions(\n      currentProject\n    );\n  };\n\n  renameLayout = (oldName: string, newName: string) => {\n    const { currentProject } = this.state;\n    const { i18n } = this.props;\n    if (!currentProject) return;\n\n    if (!currentProject.hasLayoutNamed(oldName) || newName === oldName) return;\n\n    if (newName === '') {\n      showWarningBox(\n        i18n._(t`This name cannot be empty, please enter a new name.`)\n      );\n      return;\n    }\n\n    if (currentProject.hasLayoutNamed(newName)) {\n      showWarningBox(i18n._(t`Another scene with this name already exists.`));\n      return;\n    }\n\n    const layout = currentProject.getLayout(oldName);\n    this.setState(\n      {\n        editorTabs: closeLayoutTabs(this.state.editorTabs, layout),\n      },\n      () => {\n        layout.setName(newName);\n        this.forceUpdate();\n      }\n    );\n  };\n\n  renameExternalLayout = (oldName: string, newName: string) => {\n    const { currentProject } = this.state;\n    const { i18n } = this.props;\n    if (!currentProject) return;\n\n    if (!currentProject.hasExternalLayoutNamed(oldName) || newName === oldName)\n      return;\n\n    if (newName === '') {\n      showWarningBox(\n        i18n._(t`This name cannot be empty, please enter a new name.`)\n      );\n      return;\n    }\n\n    if (currentProject.hasExternalLayoutNamed(newName)) {\n      showWarningBox(\n        i18n._(t`Another external layout with this name already exists.`)\n      );\n      return;\n    }\n\n    const externalLayout = currentProject.getExternalLayout(oldName);\n    this.setState(\n      {\n        editorTabs: closeExternalLayoutTabs(\n          this.state.editorTabs,\n          externalLayout\n        ),\n      },\n      () => {\n        externalLayout.setName(newName);\n        this.forceUpdate();\n      }\n    );\n  };\n\n  renameExternalEvents = (oldName: string, newName: string) => {\n    const { currentProject } = this.state;\n    const { i18n } = this.props;\n    if (!currentProject) return;\n\n    if (!currentProject.hasExternalEventsNamed(oldName) || newName === oldName)\n      return;\n\n    if (newName === '') {\n      showWarningBox(\n        i18n._(t`This name cannot be empty, please enter a new name.`)\n      );\n      return;\n    }\n\n    if (currentProject.hasExternalEventsNamed(newName)) {\n      showWarningBox(\n        i18n._(t`Other external events with this name already exist.`)\n      );\n      return;\n    }\n\n    const externalEvents = currentProject.getExternalEvents(oldName);\n    this.setState(\n      {\n        editorTabs: closeExternalEventsTabs(\n          this.state.editorTabs,\n          externalEvents\n        ),\n      },\n      () => {\n        externalEvents.setName(newName);\n        this.forceUpdate();\n      }\n    );\n  };\n\n  renameEventsFunctionsExtension = (oldName: string, newName: string) => {\n    const { currentProject } = this.state;\n    const { i18n } = this.props;\n    const { eventsFunctionsExtensionsState } = this.props;\n    if (!currentProject) return;\n\n    if (\n      !currentProject.hasEventsFunctionsExtensionNamed(oldName) ||\n      newName === oldName\n    )\n      return;\n\n    if (newName === '') {\n      showWarningBox(\n        i18n._(t`This name cannot be empty, please enter a new name.`)\n      );\n      return;\n    }\n\n    if (currentProject.hasEventsFunctionsExtensionNamed(newName)) {\n      showWarningBox(\n        i18n._(t`Another extension with this name already exists.`)\n      );\n      return;\n    }\n\n    if (!gd.Project.validateObjectName(newName)) {\n      showWarningBox(\n        i18n._(\n          t`This name contains forbidden characters: please only use alphanumeric characters (0-9, a-z) and underscores in your extension name.`\n        )\n      );\n      return;\n    }\n\n    const eventsFunctionsExtension = currentProject.getEventsFunctionsExtension(\n      oldName\n    );\n    this.setState(\n      {\n        editorTabs: closeEventsFunctionsExtensionTabs(\n          this.state.editorTabs,\n          eventsFunctionsExtension\n        ),\n      },\n      () => {\n        // Refactor the project to update the instructions (and later expressions)\n        // of this extension:\n        gd.WholeProjectRefactorer.renameEventsFunctionsExtension(\n          currentProject,\n          eventsFunctionsExtension,\n          oldName,\n          newName\n        );\n        eventsFunctionsExtension.setName(newName);\n        eventsFunctionsExtensionsState.reloadProjectEventsFunctionsExtensions(\n          currentProject\n        );\n\n        this.forceUpdate();\n      }\n    );\n  };\n\n  _launchLayoutPreview = (\n    project: gdProject,\n    layout: gdLayout,\n    options: PreviewOptions\n  ) => {\n    const { _previewLauncher } = this;\n    if (!_previewLauncher) return;\n\n    this.setState(\n      {\n        previewLoading: true,\n      },\n      () => {\n        _previewLauncher\n          .launchLayoutPreview(project, layout, options)\n          .catch(error => {\n            console.error(\n              'Error caught while launching preview, this should never happen.',\n              error\n            );\n          })\n          .then(() => {\n            this.setState({\n              previewLoading: false,\n            });\n          });\n      }\n    );\n  };\n\n  _launchExternalLayoutPreview = (\n    project: gdProject,\n    layout: gdLayout,\n    externalLayout: gdExternalLayout,\n    options: PreviewOptions\n  ) => {\n    const { _previewLauncher } = this;\n    if (!_previewLauncher) return;\n\n    this.setState(\n      {\n        previewLoading: true,\n      },\n      () => {\n        _previewLauncher\n          .launchExternalLayoutPreview(project, layout, externalLayout, options)\n          .catch(error => {\n            console.error(\n              'Error caught while launching preview, this should never happen.',\n              error\n            );\n          })\n          .then(() => {\n            this.setState({\n              previewLoading: false,\n            });\n          });\n      }\n    );\n  };\n\n  openLayout = (\n    name: string,\n    {\n      openEventsEditor = true,\n      openSceneEditor = true,\n    }: { openEventsEditor: boolean, openSceneEditor: boolean } = {}\n  ) => {\n    const { i18n, storageProviderOperations } = this.props;\n    const sceneEditorOptions = {\n      name,\n      renderEditor: ({ isActive, editorRef }) => (\n        <PreferencesContext.Consumer>\n          {({ values }) => (\n            <SceneEditor\n              project={this.state.currentProject}\n              layoutName={name}\n              setToolbar={this.setEditorToolbar}\n              onPreview={(project, layout, options) => {\n                this._launchLayoutPreview(project, layout, options);\n                const { currentFileMetadata } = this.state;\n                if (\n                  values.autosaveOnPreview &&\n                  storageProviderOperations.onAutoSaveProject &&\n                  currentFileMetadata\n                ) {\n                  storageProviderOperations.onAutoSaveProject(\n                    project,\n                    currentFileMetadata\n                  );\n                }\n              }}\n              showPreviewButton={!!this.props.renderPreviewLauncher}\n              showNetworkPreviewButton={\n                this._previewLauncher &&\n                this._previewLauncher.canDoNetworkPreview()\n              }\n              onOpenDebugger={this.openDebugger}\n              onEditObject={this.props.onEditObject}\n              resourceSources={this.props.resourceSources}\n              onChooseResource={this._onChooseResource}\n              resourceExternalEditors={this.props.resourceExternalEditors}\n              isActive={isActive}\n              ref={editorRef}\n            />\n          )}\n        </PreferencesContext.Consumer>\n      ),\n      key: 'layout ' + name,\n    };\n    const eventsEditorOptions = {\n      name: name + ' ' + i18n._(t`(Events)`),\n      renderEditor: ({ isActive, editorRef }) => (\n        <PreferencesContext.Consumer>\n          {({ values }) => (\n            <EventsEditor\n              project={this.state.currentProject}\n              layoutName={name}\n              setToolbar={this.setEditorToolbar}\n              onPreview={(project, layout, options) => {\n                this._launchLayoutPreview(project, layout, options);\n                const { currentFileMetadata } = this.state;\n                if (\n                  values.autosaveOnPreview &&\n                  storageProviderOperations.onAutoSaveProject &&\n                  currentFileMetadata\n                ) {\n                  storageProviderOperations.onAutoSaveProject(\n                    project,\n                    currentFileMetadata\n                  );\n                }\n              }}\n              showPreviewButton={!!this.props.renderPreviewLauncher}\n              showNetworkPreviewButton={\n                this._previewLauncher &&\n                this._previewLauncher.canDoNetworkPreview()\n              }\n              onOpenDebugger={this.openDebugger}\n              onOpenExternalEvents={this.openExternalEvents}\n              onOpenLayout={name =>\n                this.openLayout(name, {\n                  openEventsEditor: true,\n                  openSceneEditor: false,\n                })\n              }\n              resourceSources={this.props.resourceSources}\n              onChooseResource={this._onChooseResource}\n              resourceExternalEditors={this.props.resourceExternalEditors}\n              openInstructionOrExpression={this._openInstructionOrExpression}\n              onCreateEventsFunction={this._onCreateEventsFunction}\n              isActive={isActive}\n              ref={editorRef}\n            />\n          )}\n        </PreferencesContext.Consumer>\n      ),\n      key: 'layout events ' + name,\n      dontFocusTab: openSceneEditor,\n    };\n\n    const tabsWithSceneEditor = openSceneEditor\n      ? openEditorTab(this.state.editorTabs, sceneEditorOptions)\n      : this.state.editorTabs;\n    const tabsWithSceneAndEventsEditors = openEventsEditor\n      ? openEditorTab(tabsWithSceneEditor, eventsEditorOptions)\n      : tabsWithSceneEditor;\n\n    this.setState({ editorTabs: tabsWithSceneAndEventsEditors }, () =>\n      this.updateToolbar()\n    );\n    this.openProjectManager(false);\n  };\n\n  openExternalEvents = (name: string) => {\n    this.setState(\n      {\n        editorTabs: openEditorTab(this.state.editorTabs, {\n          name,\n          renderEditor: ({ isActive, editorRef }) => (\n            <ExternalEventsEditor\n              project={this.state.currentProject}\n              externalEventsName={name}\n              setToolbar={this.setEditorToolbar}\n              onOpenExternalEvents={this.openExternalEvents}\n              onOpenLayout={name =>\n                this.openLayout(name, {\n                  openEventsEditor: true,\n                  openSceneEditor: false,\n                })\n              }\n              resourceSources={this.props.resourceSources}\n              onChooseResource={this._onChooseResource}\n              resourceExternalEditors={this.props.resourceExternalEditors}\n              openInstructionOrExpression={this._openInstructionOrExpression}\n              onCreateEventsFunction={this._onCreateEventsFunction}\n              isActive={isActive}\n              ref={editorRef}\n            />\n          ),\n          key: 'external events ' + name,\n        }),\n      },\n      () => this.updateToolbar()\n    );\n    this.openProjectManager(false);\n  };\n\n  openExternalLayout = (name: string) => {\n    const { storageProviderOperations } = this.props;\n    this.setState(\n      {\n        editorTabs: openEditorTab(this.state.editorTabs, {\n          name,\n          renderEditor: ({ isActive, editorRef }) => (\n            <PreferencesContext.Consumer>\n              {({ values }) => (\n                <ExternalLayoutEditor\n                  project={this.state.currentProject}\n                  externalLayoutName={name}\n                  setToolbar={this.setEditorToolbar}\n                  onPreview={(project, layout, externalLayout, options) => {\n                    this._launchExternalLayoutPreview(\n                      project,\n                      layout,\n                      externalLayout,\n                      options\n                    );\n                    const { currentFileMetadata } = this.state;\n                    if (\n                      values.autosaveOnPreview &&\n                      storageProviderOperations.onAutoSaveProject &&\n                      currentFileMetadata\n                    ) {\n                      storageProviderOperations.onAutoSaveProject(\n                        project,\n                        currentFileMetadata\n                      );\n                    }\n                  }}\n                  showPreviewButton={!!this.props.renderPreviewLauncher}\n                  showNetworkPreviewButton={\n                    this._previewLauncher &&\n                    this._previewLauncher.canDoNetworkPreview()\n                  }\n                  onOpenDebugger={this.openDebugger}\n                  onEditObject={this.props.onEditObject}\n                  resourceSources={this.props.resourceSources}\n                  onChooseResource={this._onChooseResource}\n                  resourceExternalEditors={this.props.resourceExternalEditors}\n                  isActive={isActive}\n                  ref={editorRef}\n                />\n              )}\n            </PreferencesContext.Consumer>\n          ),\n          key: 'external layout ' + name,\n        }),\n      },\n      () => this.updateToolbar()\n    );\n    this.openProjectManager(false);\n  };\n\n  openEventsFunctionsExtension = (\n    name: string,\n    initiallyFocusedFunctionName?: string,\n    initiallyFocusedBehaviorName?: ?string\n  ) => {\n    const { eventsFunctionsExtensionsState } = this.props;\n    this.setState(\n      {\n        editorTabs: openEditorTab(this.state.editorTabs, {\n          name,\n          renderEditor: ({ isActive, editorRef }) => (\n            <EventsFunctionsExtensionEditor\n              project={this.state.currentProject}\n              eventsFunctionsExtensionName={name}\n              setToolbar={this.setEditorToolbar}\n              resourceSources={this.props.resourceSources}\n              onChooseResource={this._onChooseResource}\n              resourceExternalEditors={this.props.resourceExternalEditors}\n              isActive={isActive}\n              initiallyFocusedFunctionName={initiallyFocusedFunctionName}\n              initiallyFocusedBehaviorName={initiallyFocusedBehaviorName}\n              openInstructionOrExpression={this._openInstructionOrExpression}\n              onCreateEventsFunction={this._onCreateEventsFunction}\n              ref={editorRef}\n              onLoadEventsFunctionsExtensions={() => {\n                eventsFunctionsExtensionsState.loadProjectEventsFunctionsExtensions(\n                  this.state.currentProject\n                );\n              }}\n            />\n          ),\n          key: 'events functions extension ' + name,\n        }),\n      },\n      () => this.updateToolbar()\n    );\n    this.openProjectManager(false);\n  };\n\n  openResources = () => {\n    const { i18n } = this.props;\n    this.setState(\n      {\n        editorTabs: openEditorTab(this.state.editorTabs, {\n          name: i18n._(t`Resources`),\n          renderEditor: ({ isActive, editorRef }) => (\n            <ResourcesEditor\n              project={this.state.currentProject}\n              setToolbar={this.setEditorToolbar}\n              onDeleteResource={(resource: gdResource, cb: boolean => void) => {\n                // TODO: Project wide refactoring of objects/events using the resource\n                cb(true);\n              }}\n              onRenameResource={(\n                resource: gdResource,\n                newName: string,\n                cb: boolean => void\n              ) => {\n                // TODO: Project wide refactoring of objects/events using the resource\n                cb(true);\n              }}\n              isActive={isActive}\n              ref={editorRef}\n              onChooseResource={this._onChooseResource}\n              resourceSources={this.props.resourceSources}\n            />\n          ),\n          key: 'resources',\n        }),\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  openStartPage = () => {\n    const { i18n, storageProviders } = this.props;\n    this.setState(\n      {\n        editorTabs: openEditorTab(this.state.editorTabs, {\n          name: i18n._(t`Start Page`),\n          renderEditor: ({ isActive, editorRef }) => (\n            <StartPage\n              project={this.state.currentProject}\n              setToolbar={this.setEditorToolbar}\n              canOpen={\n                !!storageProviders.filter(\n                  ({ hiddenInOpenDialog }) => !hiddenInOpenDialog\n                ).length\n              }\n              onOpen={this.chooseProject}\n              onCreate={() => this.openCreateDialog()}\n              onOpenProjectManager={() => this.openProjectManager()}\n              onCloseProject={() => {\n                this.askToCloseProject();\n              }}\n              onOpenAboutDialog={() => this.openAboutDialog()}\n              onOpenHelpFinder={() => this.openHelpFinderDialog()}\n              onOpenLanguageDialog={() => this.openLanguage()}\n              isActive={isActive}\n              ref={editorRef}\n            />\n          ),\n          key: 'start page',\n          closable: false,\n        }),\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  openDebugger = () => {\n    const { i18n } = this.props;\n    this.setState(\n      {\n        editorTabs: openEditorTab(this.state.editorTabs, {\n          name: i18n._(t`Debugger`),\n          renderEditor: ({ isActive, editorRef }) => (\n            <DebuggerEditor\n              project={this.state.currentProject}\n              setToolbar={this.setEditorToolbar}\n              isActive={isActive}\n              ref={editorRef}\n              onChangeSubscription={() => this.openSubscription(true)}\n            />\n          ),\n          key: 'debugger',\n        }),\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  _openInstructionOrExpression = (\n    extension: gdPlatformExtension,\n    type: string\n  ) => {\n    const { currentProject } = this.state;\n    if (!currentProject) return;\n\n    const extensionName = extension.getName();\n    if (currentProject.hasEventsFunctionsExtensionNamed(extensionName)) {\n      // It's an events functions extension, open the editor for it.\n      const eventsFunctionsExtension = currentProject.getEventsFunctionsExtension(\n        extensionName\n      );\n      const functionName = getFunctionNameFromType(type);\n\n      const foundTab = getEventsFunctionsExtensionEditor(\n        this.state.editorTabs,\n        eventsFunctionsExtension\n      );\n      if (foundTab) {\n        // Open the given function and focus the tab\n        foundTab.editor.selectEventsFunctionByName(\n          functionName.name,\n          functionName.behaviorName\n        );\n        this.setState(state => ({\n          editorTabs: changeCurrentTab(state.editorTabs, foundTab.tabIndex),\n        }));\n      } else {\n        // Open a new editor for the extension and the given function\n        this.openEventsFunctionsExtension(\n          extensionName,\n          functionName.name,\n          functionName.behaviorName\n        );\n      }\n    } else {\n      // It's not an events functions extension, we should not be here.\n      console.warn(\n        `Extension with name=${extensionName} can not be opened (no editor for this)`\n      );\n    }\n  };\n\n  _onCreateEventsFunction = (\n    extensionName: string,\n    eventsFunction: gdEventsFunction\n  ) => {\n    const { currentProject } = this.state;\n    if (!currentProject) return;\n    const { eventsFunctionsExtensionsState } = this.props;\n\n    // Names are assumed to be already validated\n    const createNewExtension = !currentProject.hasEventsFunctionsExtensionNamed(\n      extensionName\n    );\n    const extension = createNewExtension\n      ? currentProject.insertNewEventsFunctionsExtension(extensionName, 0)\n      : currentProject.getEventsFunctionsExtension(extensionName);\n\n    if (createNewExtension) {\n      extension.setFullName(extensionName);\n      extension.setDescription(\n        'Originally automatically extracted from events of the project'\n      );\n    }\n\n    extension.insertEventsFunction(eventsFunction, 0);\n    eventsFunctionsExtensionsState.loadProjectEventsFunctionsExtensions(\n      currentProject\n    );\n  };\n\n  openCreateDialog = (open: boolean = true) => {\n    this.setState({\n      createDialogOpen: open,\n    });\n  };\n\n  chooseProject = () => {\n    const { storageProviders } = this.props;\n\n    if (\n      storageProviders.filter(({ hiddenInOpenDialog }) => !hiddenInOpenDialog)\n        .length > 1\n    ) {\n      this.openOpenFromStorageProviderDialog();\n    } else {\n      this.chooseProjectWithStorageProviderPicker();\n    }\n  };\n\n  chooseProjectWithStorageProviderPicker = () => {\n    const { storageProviderOperations, i18n } = this.props;\n    if (!storageProviderOperations.onOpenWithPicker) return;\n\n    storageProviderOperations\n      .onOpenWithPicker()\n      .then(fileMetadata => {\n        if (!fileMetadata) return;\n\n        return this.openFromFileMetadata(fileMetadata).then(() =>\n          this.openSceneOrProjectManager()\n        );\n      })\n      .catch(error => {\n        const errorMessage = storageProviderOperations.getOpenErrorMessage\n          ? storageProviderOperations.getOpenErrorMessage(error)\n          : t`Verify that you have the authorizations for reading the file you're trying to access.`;\n        showErrorBox(\n          [i18n._(t`Unable to open the project.`), i18n._(errorMessage)].join(\n            '\\n'\n          ),\n          error\n        );\n      });\n  };\n\n  saveProject = () => {\n    const { currentProject, currentFileMetadata } = this.state;\n    if (!currentProject) return;\n    if (!currentFileMetadata) {\n      return this.saveProjectAs();\n    }\n\n    const { i18n, storageProviderOperations } = this.props;\n    const { onSaveProject } = storageProviderOperations;\n    if (!onSaveProject) {\n      return this.saveProjectAs();\n    }\n\n    saveUiSettings(this.state.editorTabs);\n    this._showSnackMessage(i18n._(t`Saving...`));\n\n    onSaveProject(currentProject, currentFileMetadata).then(\n      ({ wasSaved }) => {\n        if (wasSaved) {\n          this._showSnackMessage(i18n._(t`Project properly saved`));\n        }\n      },\n      err => {\n        showErrorBox(\n          i18n._(\n            t`Unable to save the project! Please try again by choosing another location.`\n          ),\n          err\n        );\n      }\n    );\n  };\n\n  saveProjectAs = () => {\n    const { currentProject } = this.state;\n    const { storageProviders, storageProviderOperations } = this.props;\n    if (!currentProject) return;\n\n    if (\n      storageProviders.filter(({ hiddenInSaveDialog }) => !hiddenInSaveDialog)\n        .length > 1 ||\n      !storageProviderOperations.onSaveProjectAs\n    ) {\n      this.openSaveToStorageProviderDialog();\n    } else {\n      this.saveProjectAsWithStorageProvider();\n    }\n  };\n\n  saveProjectAsWithStorageProvider = () => {\n    const { currentProject, currentFileMetadata } = this.state;\n    if (!currentProject) return;\n\n    saveUiSettings(this.state.editorTabs);\n    const { i18n, storageProviderOperations } = this.props;\n\n    if (!storageProviderOperations.onSaveProjectAs) {\n      return;\n    }\n\n    storageProviderOperations\n      .onSaveProjectAs(currentProject, currentFileMetadata)\n      .then(\n        ({ wasSaved, fileMetadata }) => {\n          if (wasSaved) {\n            this._showSnackMessage(i18n._(t`Project properly saved`));\n\n            if (fileMetadata) {\n              this.setState({\n                currentFileMetadata: fileMetadata,\n              });\n            }\n          }\n        },\n        err => {\n          showErrorBox(\n            i18n._(\n              t`Unable to save as the project! Please try again by choosing another location.`\n            ),\n            err\n          );\n        }\n      );\n  };\n\n  askToCloseProject = (): Promise<void> => {\n    if (!this.state.currentProject) return Promise.resolve();\n    const { i18n } = this.props;\n\n    //eslint-disable-next-line\n    const answer = confirm(\n      i18n._(\n        t`Close the project? Any changes that have not been saved will be lost.`\n      )\n    );\n    if (!answer) return Promise.resolve();\n\n    return this.closeProject();\n  };\n\n  openSceneOrProjectManager = () => {\n    const { currentProject } = this.state;\n    if (!currentProject) return;\n\n    if (currentProject.getLayoutsCount() === 1) {\n      this.openLayout(currentProject.getLayoutAt(0).getName(), {\n        openSceneEditor: true,\n        openEventsEditor: true,\n      });\n    } else {\n      this.openProjectManager();\n    }\n  };\n\n  openExportDialog = (open: boolean = true) => {\n    this.setState({\n      exportDialogOpen: open,\n    });\n  };\n\n  _openIntroDialog = (open: boolean = true) => {\n    this.setState({\n      introDialogOpen: open,\n    });\n  };\n\n  _openOpenConfirmDialog = (open: boolean = true) => {\n    this.setState({\n      openConfirmDialogOpen: open,\n    });\n  };\n\n  _openGenericDialog = (open: boolean = true) => {\n    this.setState({\n      genericDialogOpen: open,\n      genericDialog: null,\n    });\n  };\n\n  openPreferences = (open: boolean = true) => {\n    this.setState({\n      preferencesDialogOpen: open,\n    });\n  };\n\n  openLanguage = (open: boolean = true) => {\n    this.setState({\n      languageDialogOpen: open,\n    });\n  };\n\n  openProfile = (open: boolean = true) => {\n    this.setState({\n      profileDialogOpen: open,\n    });\n  };\n\n  openSubscription = (open: boolean = true) => {\n    this.setState({\n      subscriptionDialogOpen: open,\n    });\n  };\n\n  _onChangeEditorTab = (value: number) => {\n    this.setState(\n      {\n        editorTabs: changeCurrentTab(this.state.editorTabs, value),\n      },\n      () => this._onEditorTabActive(getCurrentTab(this.state.editorTabs))\n    );\n  };\n\n  _onEditorTabActive = (editorTab: EditorTab) => {\n    this.updateToolbar();\n  };\n\n  _onCloseEditorTab = (editorTab: EditorTab) => {\n    saveUiSettings(this.state.editorTabs);\n    this.setState(\n      {\n        editorTabs: closeEditorTab(this.state.editorTabs, editorTab),\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  _onCloseOtherEditorTabs = (editorTab: EditorTab) => {\n    saveUiSettings(this.state.editorTabs);\n    this.setState(\n      {\n        editorTabs: closeOtherEditorTabs(this.state.editorTabs, editorTab),\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  _onCloseAllEditorTabs = () => {\n    saveUiSettings(this.state.editorTabs);\n    this.setState(\n      {\n        editorTabs: closeAllEditorTabs(this.state.editorTabs),\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  _onChooseResource = (\n    sourceName: string,\n    multiSelection: boolean = true\n  ): Promise<Array<any>> => {\n    const { currentProject } = this.state;\n    const resourceSourceDialog = this._resourceSourceDialogs[sourceName];\n    if (!resourceSourceDialog) return Promise.resolve([]);\n\n    return resourceSourceDialog.chooseResources(currentProject, multiSelection);\n  };\n\n  updateToolbar() {\n    const editorTab = getCurrentTab(this.state.editorTabs);\n    if (!editorTab || !editorTab.editorRef) {\n      this.setEditorToolbar(null);\n      return;\n    }\n\n    editorTab.editorRef.updateToolbar();\n  }\n\n  openAboutDialog = (open: boolean = true) => {\n    this.setState({\n      aboutDialogOpen: open,\n    });\n  };\n\n  openOpenFromStorageProviderDialog = (open: boolean = true) => {\n    this.setState({\n      openFromStorageProviderDialogOpen: open,\n    });\n  };\n\n  openSaveToStorageProviderDialog = (open: boolean = true) => {\n    if (open) {\n      // Ensure the project manager is closed as Google Drive storage provider\n      // display a picker that does not play nice with material-ui's overlays.\n      this.openProjectManager(false);\n    }\n    this.setState({\n      saveToStorageProviderDialogOpen: open,\n    });\n  };\n\n  openPlatformSpecificAssets = (open: boolean = true) => {\n    this.setState({\n      platformSpecificAssetsDialogOpen: open,\n    });\n  };\n\n  openHelpFinderDialog = (open: boolean = true) => {\n    this.setState({\n      helpFinderDialogOpen: open,\n    });\n  };\n\n  setUpdateStatus = (updateStatus: UpdateStatus) => {\n    this.setState({\n      updateStatus,\n    });\n\n    const notificationTitle = getUpdateNotificationTitle(updateStatus);\n    const notificationBody = getUpdateNotificationBody(updateStatus);\n    if (notificationTitle) {\n      const notification = new window.Notification(notificationTitle, {\n        body: notificationBody,\n      });\n      notification.onclick = () => this.openAboutDialog(true);\n    }\n  };\n\n  simulateUpdateDownloaded = () =>\n    this.setUpdateStatus({\n      status: 'update-downloaded',\n      message: 'update-downloaded',\n      info: {\n        releaseName: 'Fake update',\n      },\n    });\n\n  simulateUpdateAvailable = () =>\n    this.setUpdateStatus({\n      status: 'update-available',\n      message: 'Update available',\n    });\n\n  _showSnackMessage = (snackMessage: string) =>\n    this.setState({\n      snackMessage,\n      snackMessageOpen: true,\n    });\n\n  _closeSnackMessage = () =>\n    this.setState({\n      snackMessageOpen: false,\n    });\n\n  render() {\n    const {\n      currentProject,\n      currentFileMetadata,\n      genericDialog,\n      projectManagerOpen,\n      profileDialogOpen,\n      subscriptionDialogOpen,\n      updateStatus,\n      aboutDialogOpen,\n      helpFinderDialogOpen,\n      eventsFunctionsExtensionsError,\n    } = this.state;\n    const {\n      renderExportDialog,\n      renderCreateDialog,\n      introDialog,\n      resourceSources,\n      renderPreviewLauncher,\n      resourceExternalEditors,\n      eventsFunctionsExtensionsState,\n      useStorageProvider,\n      i18n,\n      renderGDJSDevelopmentWatcher,\n    } = this.props;\n    const showLoader =\n      this.state.loadingProject ||\n      this.state.previewLoading ||\n      this.props.loading;\n\n    return (\n      <div className=\"main-frame\">\n        <ProjectTitlebar fileMetadata={currentFileMetadata} />\n        <Drawer\n          open={projectManagerOpen}\n          PaperProps={{\n            style: styles.drawerContent,\n          }}\n          onClose={this.toggleProjectManager}\n        >\n          <EditorBar\n            title={currentProject ? currentProject.getName() : 'No project'}\n            displayRightCloseButton\n            onClose={this.toggleProjectManager}\n          />\n          {currentProject && (\n            <ProjectManager\n              project={currentProject}\n              onOpenExternalEvents={this.openExternalEvents}\n              onOpenLayout={this.openLayout}\n              onOpenExternalLayout={this.openExternalLayout}\n              onOpenEventsFunctionsExtension={this.openEventsFunctionsExtension}\n              onAddLayout={this.addLayout}\n              onAddExternalLayout={this.addExternalLayout}\n              onAddEventsFunctionsExtension={this.addEventsFunctionsExtension}\n              onAddExternalEvents={this.addExternalEvents}\n              onDeleteLayout={this.deleteLayout}\n              onDeleteExternalLayout={this.deleteExternalLayout}\n              onDeleteEventsFunctionsExtension={\n                this.deleteEventsFunctionsExtension\n              }\n              onDeleteExternalEvents={this.deleteExternalEvents}\n              onRenameLayout={this.renameLayout}\n              onRenameExternalLayout={this.renameExternalLayout}\n              onRenameEventsFunctionsExtension={\n                this.renameEventsFunctionsExtension\n              }\n              onRenameExternalEvents={this.renameExternalEvents}\n              onSaveProject={this.saveProject}\n              onSaveProjectAs={this.saveProjectAs}\n              onCloseProject={() => {\n                this.askToCloseProject();\n              }}\n              onExportProject={this.openExportDialog}\n              onOpenPreferences={() => this.openPreferences(true)}\n              onOpenProfile={() => this.openProfile(true)}\n              onOpenResources={() => {\n                this.openResources();\n                this.openProjectManager(false);\n              }}\n              onOpenPlatformSpecificAssets={() =>\n                this.openPlatformSpecificAssets()\n              }\n              onChangeSubscription={() => this.openSubscription(true)}\n              eventsFunctionsExtensionsError={eventsFunctionsExtensionsError}\n              onReloadEventsFunctionsExtensions={() => {\n                // Check if load is sufficient\n                eventsFunctionsExtensionsState.reloadProjectEventsFunctionsExtensions(\n                  currentProject\n                );\n              }}\n              freezeUpdate={!projectManagerOpen}\n            />\n          )}\n          {!currentProject && (\n            <EmptyMessage>\n              <Trans>To begin, open or create a new project.</Trans>\n            </EmptyMessage>\n          )}\n        </Drawer>\n        <Toolbar\n          ref={toolbar => (this.toolbar = toolbar)}\n          showProjectIcons={!this.props.integratedEditor}\n          hasProject={!!this.state.currentProject}\n          toggleProjectManager={this.toggleProjectManager}\n          exportProject={() => this.openExportDialog(true)}\n          requestUpdate={this.props.requestUpdate}\n          simulateUpdateDownloaded={this.simulateUpdateDownloaded}\n          simulateUpdateAvailable={this.simulateUpdateAvailable}\n        />\n        <ClosableTabs hideLabels={!!this.props.integratedEditor}>\n          {getEditors(this.state.editorTabs).map((editorTab, id) => {\n            const isCurrentTab =\n              getCurrentTabIndex(this.state.editorTabs) === id;\n            return (\n              <ClosableTab\n                label={editorTab.name}\n                key={editorTab.key}\n                active={isCurrentTab}\n                onClick={() => this._onChangeEditorTab(id)}\n                onClose={() => this._onCloseEditorTab(editorTab)}\n                onCloseOthers={() => this._onCloseOtherEditorTabs(editorTab)}\n                onCloseAll={this._onCloseAllEditorTabs}\n                onActivated={() => this._onEditorTabActive(editorTab)}\n                closable={editorTab.closable}\n              />\n            );\n          })}\n        </ClosableTabs>\n        {getEditors(this.state.editorTabs).map((editorTab, id) => {\n          const isCurrentTab = getCurrentTabIndex(this.state.editorTabs) === id;\n          return (\n            <TabContentContainer key={editorTab.key} active={isCurrentTab}>\n              <ErrorBoundary>{editorTab.render(isCurrentTab)}</ErrorBoundary>\n            </TabContentContainer>\n          );\n        })}\n        <LoaderModal show={showLoader} />\n        <HelpFinder\n          open={helpFinderDialogOpen}\n          onClose={() => this.openHelpFinderDialog(false)}\n        />\n        <Snackbar\n          open={this.state.snackMessageOpen}\n          autoHideDuration={3000}\n          onClose={this._closeSnackMessage}\n          ContentProps={{\n            'aria-describedby': 'snackbar-message',\n          }}\n          message={<span id=\"snackbar-message\">{this.state.snackMessage}</span>}\n        />\n        {!!renderExportDialog &&\n          this.state.exportDialogOpen &&\n          renderExportDialog({\n            onClose: () => this.openExportDialog(false),\n            onChangeSubscription: () => {\n              this.openExportDialog(false);\n              this.openSubscription(true);\n            },\n            project: this.state.currentProject,\n          })}\n        {!!renderCreateDialog &&\n          this.state.createDialogOpen &&\n          renderCreateDialog({\n            open: this.state.createDialogOpen,\n            onClose: () => this.openCreateDialog(false),\n            onOpen: (storageProvider, fileMetadata) => {\n              this.openCreateDialog(false);\n              useStorageProvider(storageProvider)\n                .then(() => this.openFromFileMetadata(fileMetadata))\n                .then(() => this.openSceneOrProjectManager());\n            },\n            onCreate: (project, storageProvider, fileMetadata) => {\n              this.openCreateDialog(false);\n              useStorageProvider(storageProvider)\n                .then(() => this.loadFromProject(project, fileMetadata))\n                .then(() => this.openSceneOrProjectManager());\n            },\n          })}\n        {!!introDialog &&\n          React.cloneElement(introDialog, {\n            open: this.state.introDialogOpen,\n            onClose: () => this._openIntroDialog(false),\n          })}\n        {!!this.state.currentProject &&\n          this.state.platformSpecificAssetsDialogOpen && (\n            <PlatformSpecificAssetsDialog\n              project={this.state.currentProject}\n              open\n              onApply={() => this.openPlatformSpecificAssets(false)}\n              onClose={() => this.openPlatformSpecificAssets(false)}\n              resourceSources={resourceSources}\n              onChooseResource={this._onChooseResource}\n              resourceExternalEditors={resourceExternalEditors}\n            />\n          )}\n        {!!genericDialog &&\n          React.cloneElement(genericDialog, {\n            open: this.state.genericDialogOpen,\n            onClose: () => this._openGenericDialog(false),\n          })}\n        {!!renderPreviewLauncher &&\n          renderPreviewLauncher(\n            {\n              onExport: () => this.openExportDialog(true),\n              onChangeSubscription: () => this.openSubscription(true),\n            },\n            (previewLauncher: ?PreviewLauncherInterface) => {\n              this._previewLauncher = previewLauncher;\n            }\n          )}\n        {resourceSources.map(\n          (resourceSource, index): React.Node => {\n            const Component = resourceSource.component;\n            return (\n              <Component\n                key={resourceSource.name}\n                ref={dialog =>\n                  (this._resourceSourceDialogs[resourceSource.name] = dialog)\n                }\n                i18n={i18n}\n              />\n            );\n          }\n        )}\n        {profileDialogOpen && (\n          <ProfileDialog\n            open\n            onClose={() => this.openProfile(false)}\n            onChangeSubscription={() => this.openSubscription(true)}\n          />\n        )}\n        {subscriptionDialogOpen && (\n          <SubscriptionDialog\n            onClose={() => {\n              this.openSubscription(false);\n            }}\n            open\n          />\n        )}\n        {this.state.preferencesDialogOpen && (\n          <PreferencesDialog onClose={() => this.openPreferences(false)} />\n        )}\n        {this.state.languageDialogOpen && (\n          <LanguageDialog\n            open\n            onClose={languageChanged => {\n              this.openLanguage(false);\n              if (languageChanged) {\n                this._languageDidChange();\n              }\n            }}\n          />\n        )}\n        {aboutDialogOpen && (\n          <AboutDialog\n            open\n            onClose={() => this.openAboutDialog(false)}\n            updateStatus={updateStatus}\n          />\n        )}\n        {this.state.openFromStorageProviderDialogOpen && (\n          <OpenFromStorageProviderDialog\n            onClose={() => this.openOpenFromStorageProviderDialog(false)}\n            storageProviders={this.props.storageProviders}\n            onChooseProvider={storageProvider => {\n              this.openOpenFromStorageProviderDialog(false);\n              useStorageProvider(storageProvider).then(() => {\n                this.chooseProjectWithStorageProviderPicker();\n              });\n            }}\n            onCreateNewProject={() => {\n              this.openOpenFromStorageProviderDialog(false);\n              this.openCreateDialog(true);\n            }}\n          />\n        )}\n        {this.state.saveToStorageProviderDialogOpen && (\n          <SaveToStorageProviderDialog\n            onClose={() => this.openSaveToStorageProviderDialog(false)}\n            storageProviders={this.props.storageProviders}\n            onChooseProvider={storageProvider => {\n              this.openSaveToStorageProviderDialog(false);\n              useStorageProvider(storageProvider).then(() => {\n                this.saveProjectAsWithStorageProvider();\n              });\n            }}\n          />\n        )}\n        {this.state.openConfirmDialogOpen && (\n          <OpenConfirmDialog\n            onClose={() => {\n              this._openOpenConfirmDialog(false);\n            }}\n            onConfirm={() => {\n              this._openOpenConfirmDialog(false);\n              this._openInitialFileMetadata(/* isAfterUserInteraction= */ true);\n            }}\n          />\n        )}\n        <CloseConfirmDialog shouldPrompt={!!this.state.currentProject} />\n        <ChangelogDialogContainer />\n        {renderGDJSDevelopmentWatcher && renderGDJSDevelopmentWatcher()}\n      </div>\n    );\n  }\n}\n\nexport default MainFrame;\n","// @flow\nimport * as React from 'react';\nimport { type GDevelopTheme } from '.';\nimport DefaultTheme from './DefaultTheme';\n\nconst GDevelopThemeContext = React.createContext<GDevelopTheme>(\n  DefaultTheme.gdevelopTheme\n);\n\nexport default GDevelopThemeContext;\n","import React from 'react';\nimport { ListItem } from './List';\nimport BackgroundText from './BackgroundText';\n// No i18n in this file\n\ntype Props = {|\n  onClick?: () => void,\n  primaryText: React.Node,\n|};\n\nexport const AddListItem = (props: Props) => {\n  return (\n    <ListItem\n      onClick={props.onClick}\n      primaryText={<BackgroundText>{props.primaryText}</BackgroundText>}\n      displayAddIcon\n    />\n  );\n};\n\nexport const SearchListItem = (props: Props) => {\n  return (\n    <ListItem\n      onClick={props.onClick}\n      primaryText={<BackgroundText>{props.primaryText}</BackgroundText>}\n      displaySearchIcon\n    />\n  );\n};\n","import React, { Component } from 'react';\nconst gd = global.gd;\n\n/**\n * Wrap the specified component so that it is able to modify a\n * copy of the serializable object passed as its props (with the prop name\n * being the one specified by propName) and then apply the changes (in which\n * case the original serializable object is modified) or cancel the changes\n * (in which case the original serializable object remains intact).\n */\nexport const withSerializableObject = (\n  WrappedComponent,\n  { newObjectCreator, propName, useProjectToUnserialize } //TODO: Refactor\n) => {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        serializableObject: newObjectCreator(),\n      };\n      this._loadFrom(props[propName]);\n    }\n\n    componentWillUnmount() {\n      this.state.serializableObject.delete();\n    }\n\n    componentWillReceiveProps(newProps) {\n      if (\n        (!this.props.open && newProps.open) ||\n        (newProps.open && this.props[propName] !== newProps[propName])\n      ) {\n        this._loadFrom(newProps[propName]);\n      }\n    }\n\n    _loadFrom(serializableObject) {\n      if (!serializableObject) return;\n\n      const serializedElement = new gd.SerializerElement();\n      serializableObject.serializeTo(serializedElement);\n      if (!useProjectToUnserialize) {\n        this.state.serializableObject.unserializeFrom(serializedElement);\n      } else {\n        this.state.serializableObject.unserializeFrom(\n          this.props.project,\n          serializedElement\n        );\n      }\n      serializedElement.delete();\n    }\n\n    _apply = () => {\n      if (!this.props[propName]) return;\n\n      const serializedElement = new gd.SerializerElement();\n      this.state.serializableObject.serializeTo(serializedElement);\n      if (!useProjectToUnserialize) {\n        this.props[propName].unserializeFrom(serializedElement);\n      } else {\n        this.props[propName].unserializeFrom(\n          this.props.project,\n          serializedElement\n        );\n      }\n      serializedElement.delete();\n\n      if (this.props.onApply) this.props.onApply();\n    };\n\n    _cancel = () => {\n      if (this.props.onCancel) this.props.onCancel();\n    };\n\n    render() {\n      const props = this.props;\n\n      return React.createElement(WrappedComponent, {\n        ...props,\n        [propName]: this.state.serializableObject,\n        onCancel: this._cancel,\n        onApply: this._apply,\n      });\n    }\n  };\n};\n","import React from 'react';\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\nimport { SortableHandle } from 'react-sortable-hoc';\n\nconst styles = {\n  handle: {\n    cursor: 'move',\n    marginRight: 4,\n  },\n  handleColor: '#DDD',\n};\n\nconst DragHandle = SortableHandle(() => (\n  <span style={styles.handle}>\n    <DragHandleIcon htmlColor={styles.handleColor} />\n  </span>\n));\nexport default DragHandle;\n","export default {\n  toolColumnHeader: {\n    textAlign: 'left',\n    paddingRight: 4,\n  },\n  toolColumn: {\n    minWidth: 48,\n    flex: 0,\n    justifyContent: 'flex-end',\n  },\n  tableChildIndentation: 24,\n  indent: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n  },\n  indentIconColor: '#DDD', //TODO: Use theme color instead\n  addVariableMessage: {\n    justifyContent: 'flex-end',\n  },\n  emptyExplanation: {\n    justifyContent: 'flex-start',\n  },\n  emptyExplanationMessage: {\n    textAlign: 'left',\n  },\n  fadedButton: {\n    opacity: 0.7,\n  },\n};\n","// @flow\n\nimport * as React from 'react';\nimport RaisedButton from '../UI/RaisedButton';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport Star from '@material-ui/icons/Star';\nimport Favorite from '@material-ui/icons/Favorite';\nimport UserProfileContext, { type UserProfile } from './UserProfileContext';\nimport { Column, Line } from '../UI/Grid';\nimport {\n  sendSubscriptionCheckDialogShown,\n  sendSubscriptionCheckDismiss,\n} from '../Utils/Analytics/EventSender';\nimport { Trans } from '@lingui/macro';\nimport Text from '../UI/Text';\n\ntype Props = {|\n  title: React.Node,\n  id: string,\n  onChangeSubscription?: () => void,\n  mode: 'try' | 'mandatory',\n|};\n\ntype DialogProps = {|\n  userProfile: UserProfile,\n  ...$Exact<Props>,\n|};\n\ntype DialogState = {|\n  open: boolean,\n|};\n\nconst styles = {\n  icon: { width: 40, height: 40, marginRight: 20 },\n  iconText: { flex: 1 },\n  thanksText: { marginRight: 20, marginBottom: 0 },\n};\n\nexport class SubscriptionCheckDialog extends React.Component<\n  DialogProps,\n  DialogState\n> {\n  state = { open: false };\n\n  checkHasSubscription() {\n    const { userProfile, mode, id } = this.props;\n    if (userProfile.subscription) {\n      const hasPlan = !!userProfile.subscription.planId;\n      if (hasPlan) {\n        this.setState({\n          open: false,\n        });\n        return true;\n      }\n    }\n\n    this.setState({\n      open: true,\n    });\n    sendSubscriptionCheckDialogShown({ mode, id });\n\n    return false;\n  }\n\n  _closeDialog = () => {\n    sendSubscriptionCheckDismiss();\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { open } = this.state;\n    const { onChangeSubscription, mode } = this.props;\n    if (!open) return null;\n\n    return (\n      <Dialog\n        actions={[\n          onChangeSubscription && (\n            <RaisedButton\n              label={<Trans>Get a subscription or login</Trans>}\n              key=\"subscribe\"\n              primary\n              onClick={() => {\n                this.setState({ open: false });\n                onChangeSubscription();\n              }}\n            />\n          ),\n        ]}\n        secondaryActions={[\n          <FlatButton\n            label={\n              mode === 'try' ? (\n                <Trans>Continue anyway</Trans>\n              ) : (\n                <Trans>Not now, thanks!</Trans>\n              )\n            }\n            key=\"close\"\n            primary={false}\n            onClick={this._closeDialog}\n          />,\n        ]}\n        onRequestClose={this._closeDialog}\n        open={open}\n        title={this.props.title}\n      >\n        <Column noMargin>\n          <Line noMargin alignItems=\"center\">\n            {mode === 'try' ? (\n              <Text>\n                <Trans>\n                  You can try this feature, but if you're using it regularly, we\n                  ask you to get a subscription to GDevelop.\n                </Trans>\n              </Text>\n            ) : (\n              <Text>\n                <Trans>\n                  To use this feature, we ask you to get a subscription to\n                  GDevelop.\n                </Trans>\n              </Text>\n            )}\n          </Line>\n          <Line noMargin alignItems=\"center\">\n            <Star style={styles.icon} />\n            <Text style={styles.iconText}>\n              <Trans>\n                Having a subscription allows you to use the one-click export for\n                Android, Windows, macOS and Linux, launch live previews over\n                wifi, disable the GDevelop splashscreen during loading and more!\n              </Trans>\n            </Text>\n          </Line>\n          <Line noMargin alignItems=\"center\">\n            <Favorite style={styles.icon} />\n            <Text style={styles.iconText}>\n              <Trans>\n                You're also supporting the development of GDevelop, an\n                open-source software! In the future, more online services will\n                be available for users with a subscription.\n              </Trans>\n            </Text>\n          </Line>\n          <Text style={styles.thanksText} align=\"right\">\n            <b>\n              <Trans>Thanks!</Trans>\n            </b>\n          </Text>\n        </Column>\n      </Dialog>\n    );\n  }\n}\n\nclass SubscriptionChecker extends React.Component<Props, {}> {\n  _dialog: ?SubscriptionCheckDialog = null;\n\n  checkHasSubscription() {\n    if (this._dialog) {\n      return this._dialog.checkHasSubscription();\n    }\n\n    return false;\n  }\n\n  render() {\n    return (\n      <UserProfileContext.Consumer>\n        {(userProfile: UserProfile) => (\n          <SubscriptionCheckDialog\n            userProfile={userProfile}\n            ref={dialog => (this._dialog = dialog)}\n            onChangeSubscription={this.props.onChangeSubscription}\n            id={this.props.id}\n            title={this.props.title}\n            mode={this.props.mode}\n          />\n        )}\n      </UserProfileContext.Consumer>\n    );\n  }\n}\n\nexport default SubscriptionChecker;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport EventsTree from './EventsTree';\nimport NewInstructionEditorDialog from './InstructionEditor/NewInstructionEditorDialog';\nimport InstructionEditorDialog from './InstructionEditor/InstructionEditorDialog';\nimport EventTextDialog, {\n  filterEditableWithEventTextDialog,\n} from './InstructionEditor/EventTextDialog';\nimport Toolbar from './Toolbar';\nimport KeyboardShortcuts from '../UI/KeyboardShortcuts';\nimport InlineParameterEditor from './InlineParameterEditor';\nimport ContextMenu from '../UI/Menu/ContextMenu';\nimport { type PreviewOptions } from '../Export/PreviewLauncher.flow';\nimport { serializeToJSObject } from '../Utils/Serializer';\nimport {\n  type HistoryState,\n  undo,\n  redo,\n  canUndo,\n  canRedo,\n  getHistoryInitialState,\n  saveToHistory,\n} from '../Utils/History';\nimport {\n  type SelectionState,\n  type EventContext,\n  type InstructionsListContext,\n  type InstructionContext,\n  type ParameterContext,\n  getInitialSelection,\n  selectEvent,\n  selectInstruction,\n  hasSomethingSelected,\n  hasEventSelected,\n  hasInstructionSelected,\n  hasSelectedAtLeastOneCondition,\n  hasInstructionsListSelected,\n  getSelectedEvents,\n  getSelectedInstructions,\n  clearSelection,\n  getSelectedEventContexts,\n  getSelectedInstructionsContexts,\n  selectInstructionsList,\n} from './SelectionHandler';\nimport EmptyEventsPlaceholder from './EmptyEventsPlaceholder';\nimport { ensureSingleOnceInstructions } from './OnceInstructionSanitizer';\nimport EventsContextAnalyzerDialog, {\n  type EventsContextResult,\n  toEventsContextResult,\n} from './EventsContextAnalyzerDialog';\nimport SearchPanel from './SearchPanel';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport EventsSearcher, {\n  type ReplaceInEventsInputs,\n  type SearchInEventsInputs,\n} from './EventsSearcher';\nimport { containsSubInstructions } from './ContainsSubInstruction';\nimport {\n  enumerateEventsMetadata,\n  type EventMetadata,\n} from './EnumerateEventsMetadata';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport EventsFunctionExtractorDialog from './EventsFunctionExtractor/EventsFunctionExtractorDialog';\nimport { createNewInstructionForEventsFunction } from './EventsFunctionExtractor';\nimport { type EventsScope } from './EventsScope.flow';\nimport {\n  pasteEventsFromClipboardInSelection,\n  copySelectionToClipboard,\n  pasteInstructionsFromClipboardInSelection,\n  hasClipboardEvents,\n  hasClipboardActions,\n  hasClipboardConditions,\n  pasteInstructionsFromClipboardInInstructionsList,\n} from './ClipboardKind';\nimport InfoBar from '../UI/Messages/InfoBar';\nimport { ScreenTypeMeasurer } from '../UI/Reponsive/ScreenTypeMeasurer';\nimport { ResponsiveWindowMeasurer } from '../UI/Reponsive/ResponsiveWindowMeasurer';\nconst gd = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  events: gdEventsList,\n  setToolbar: (?React.Node) => void,\n  showPreviewButton: boolean,\n  showNetworkPreviewButton: boolean,\n  onPreview: (options: PreviewOptions) => void,\n  onOpenDebugger: () => void,\n  onOpenSettings?: ?() => void,\n  onOpenExternalEvents: string => void,\n  onOpenLayout: string => void,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  openInstructionOrExpression: (\n    extension: gdPlatformExtension,\n    type: string\n  ) => void,\n  onCreateEventsFunction: (\n    extensionName: string,\n    eventsFunction: gdEventsFunction\n  ) => void,\n|};\ntype State = {|\n  history: HistoryState,\n\n  editedInstruction: {\n    //TODO: This could be adapted to be a InstructionContext\n    isCondition: boolean,\n    instruction: ?gdInstruction,\n    instrsList: ?gdInstructionsList,\n    indexInList: ?number,\n  },\n  editedParameter: {\n    // TODO: This could be adapted to be a ParameterContext\n    isCondition: boolean,\n    instruction: ?gdInstruction,\n    instrsList: ?gdInstructionsList,\n    parameterIndex: number,\n  },\n\n  selection: SelectionState,\n\n  inlineEditing: boolean,\n  inlineEditingAnchorEl: ?any,\n  inlineEditingChangesMade: boolean,\n\n  analyzedEventsContextResult: ?EventsContextResult,\n\n  serializedEventsToExtract: ?Object,\n\n  textEditedEvent: ?gdBaseEvent,\n\n  showSearchPanel: boolean,\n  searchResults: ?Array<gdBaseEvent>,\n  searchFocusOffset: ?number,\n\n  allEventsMetadata: Array<EventMetadata>,\n|};\n\nconst styles = {\n  container: {\n    display: 'flex',\n    width: '100%',\n    flexDirection: 'column',\n    flex: 1,\n    position: 'relative', // To be sure that absolutely positioned PlaceholderMessage won't go outside of the EventsSheet\n  },\n};\n\nexport default class EventsSheet extends React.Component<Props, State> {\n  _eventsTree: ?EventsTree;\n  _eventSearcher: ?EventsSearcher;\n  _searchPanel: ?SearchPanel;\n  _containerDiv = React.createRef<HTMLDivElement>();\n  _keyboardShortcuts = new KeyboardShortcuts({\n    isActive: () =>\n      !this.state.inlineEditing &&\n      !this.state.editedInstruction.instruction &&\n      !this.state.analyzedEventsContextResult &&\n      !this.state.serializedEventsToExtract,\n    shortcutCallbacks: {\n      onDelete: () => this.deleteSelection(),\n      onCopy: () => this.copySelection(),\n      onCut: () => this.cutSelection(),\n      onPaste: () => this.pasteEventsOrInstructions(),\n      onSearch: () => this._toggleSearchPanel(),\n      onUndo: () => this.undo(),\n      onRedo: () => this.redo(),\n    },\n  });\n\n  eventContextMenu: ContextMenu;\n  instructionContextMenu: ContextMenu;\n  instructionsListContextMenu: ContextMenu;\n\n  state = {\n    history: getHistoryInitialState(this.props.events, { historyMaxSize: 50 }),\n\n    editedInstruction: {\n      isCondition: true,\n      instruction: null,\n      instrsList: null,\n      indexInList: 0,\n    },\n    editedParameter: {\n      isCondition: true,\n      instruction: null,\n      instrsList: null,\n      parameterIndex: 0,\n    },\n\n    selection: getInitialSelection(),\n\n    inlineEditing: false,\n    inlineEditingAnchorEl: null,\n    inlineEditingChangesMade: false,\n\n    analyzedEventsContextResult: null,\n\n    serializedEventsToExtract: null,\n\n    showSearchPanel: false,\n    searchResults: null,\n    searchFocusOffset: null,\n\n    allEventsMetadata: [],\n\n    textEditedEvent: null,\n  };\n\n  componentDidMount() {\n    this.setState({ allEventsMetadata: enumerateEventsMetadata() });\n  }\n\n  updateToolbar() {\n    if (!this.props.setToolbar) return;\n\n    this.props.setToolbar(\n      <Toolbar\n        allEventsMetadata={this.state.allEventsMetadata}\n        onAddStandardEvent={() => {\n          this.addNewEvent('BuiltinCommonInstructions::Standard');\n        }}\n        onAddSubEvent={this.addSubEvents}\n        canAddSubEvent={hasEventSelected(this.state.selection)}\n        onAddCommentEvent={() => {\n          this.addNewEvent('BuiltinCommonInstructions::Comment');\n        }}\n        onAddEvent={type => {\n          this.addNewEvent(type);\n        }}\n        canRemove={hasSomethingSelected(this.state.selection)}\n        onRemove={this.deleteSelection}\n        showPreviewButton={this.props.showPreviewButton}\n        showNetworkPreviewButton={this.props.showNetworkPreviewButton}\n        onPreview={() => this.props.onPreview({})}\n        onNetworkPreview={() => this.props.onPreview({ networkPreview: true })}\n        onOpenDebugger={() => {\n          this.props.onOpenDebugger();\n          this.props.onPreview({});\n        }}\n        canUndo={canUndo(this.state.history)}\n        canRedo={canRedo(this.state.history)}\n        undo={this.undo}\n        redo={this.redo}\n        onOpenSettings={this.props.onOpenSettings}\n        onToggleSearchPanel={this._toggleSearchPanel}\n      />\n    );\n  }\n\n  _toggleSearchPanel = () => {\n    this.setState(\n      state => {\n        const show = !state.showSearchPanel;\n        if (!show) {\n          if (this._eventSearcher) this._eventSearcher.reset();\n        }\n\n        return {\n          showSearchPanel: show,\n        };\n      },\n      () => {\n        if (this.state.showSearchPanel && this._searchPanel) {\n          this._searchPanel.focus();\n        }\n      }\n    );\n  };\n\n  addSubEvents = () => {\n    const { project } = this.props;\n\n    getSelectedEvents(this.state.selection).forEach(event => {\n      if (event.canHaveSubEvents()) {\n        event\n          .getSubEvents()\n          .insertNewEvent(\n            project,\n            'BuiltinCommonInstructions::Standard',\n            event.getSubEvents().getEventsCount()\n          );\n      }\n    });\n\n    this._saveChangesToHistory(() => {\n      if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n    });\n  };\n\n  _selectionCanHaveSubEvents = () => {\n    return getSelectedEvents(this.state.selection).some(event => {\n      return event.canHaveSubEvents();\n    });\n  };\n\n  _selectionCanToggleDisabled = () => {\n    return getSelectedEvents(this.state.selection).some(event => {\n      return event.isExecutable();\n    });\n  };\n\n  addNewEvent = (type: string, context: ?EventContext): Array<gdBaseEvent> => {\n    const { project } = this.props;\n    const hasEventsSelected = hasEventSelected(this.state.selection);\n    let insertTopOfSelection = false;\n\n    let insertions: Array<{\n      eventsList: gdEventsList,\n      indexInList: number,\n    }> = [];\n    if (context) {\n      insertions = [context];\n    } else if (hasEventsSelected) {\n      if (\n        type === 'BuiltinCommonInstructions::Comment' ||\n        type === 'BuiltinCommonInstructions::Group'\n      ) {\n        insertTopOfSelection = true;\n      }\n\n      insertions = getSelectedEventContexts(this.state.selection).map(\n        selectedEvent => ({\n          eventsList: selectedEvent.eventsList,\n          indexInList: insertTopOfSelection\n            ? selectedEvent.indexInList - 1\n            : selectedEvent.indexInList,\n        })\n      );\n    } else {\n      insertions = [\n        {\n          eventsList: this.props.events,\n          indexInList: this.props.events.getEventsCount(),\n        },\n      ];\n    }\n\n    const newEvents = insertions.map(\n      (context: { eventsList: gdEventsList, indexInList: number }) => {\n        return context.eventsList.insertNewEvent(\n          project,\n          type,\n          context.indexInList + 1\n        );\n      }\n    );\n\n    this._saveChangesToHistory(() => {\n      const eventsTree = this._eventsTree;\n      if (!eventsTree) return;\n\n      eventsTree.forceEventsUpdate(() => {\n        if (!context && !hasEventsSelected) {\n          eventsTree.scrollToEvent(newEvents[0]);\n        }\n      });\n    });\n\n    return newEvents;\n  };\n\n  openEventTextDialog = () => {\n    const editableEvents = filterEditableWithEventTextDialog(\n      getSelectedEvents(this.state.selection)\n    );\n    if (!editableEvents.length) return;\n\n    const event = editableEvents[editableEvents.length - 1]; // Get the last selected event.\n    this.setState({\n      textEditedEvent: event,\n    });\n  };\n\n  closeEventTextDialog = () => {\n    this.setState({\n      textEditedEvent: null,\n    });\n  };\n\n  openInstructionEditor = (\n    instructionContext: InstructionContext | InstructionsListContext\n  ) => {\n    if (this.state.editedInstruction.instruction) {\n      this.state.editedInstruction.instruction.delete();\n      console.warn(\n        'state.editedInstruction.instruction was containing an instruction - deleting it. Verify the logic handling the state in EventsSheet because that should not happen.'\n      );\n    }\n\n    this.setState({\n      editedInstruction: {\n        instrsList: instructionContext.instrsList,\n        isCondition: instructionContext.isCondition,\n        instruction: instructionContext.instruction\n          ? instructionContext.instruction.clone()\n          : new gd.Instruction(),\n        indexInList:\n          instructionContext.indexInList !== undefined\n            ? instructionContext.indexInList\n            : undefined,\n      },\n    });\n  };\n\n  closeInstructionEditor(saveChanges: boolean = false) {\n    const { instruction } = this.state.editedInstruction;\n    this.setState(\n      {\n        editedInstruction: {\n          isCondition: true,\n          instruction: null,\n          instrsList: null,\n          indexInList: 0,\n        },\n      },\n      () => {\n        // Delete from memory the instruction being edited, *after* resetting\n        // editedInstruction and after the re-rendering, in an effort to be\n        // sure that instruction is not used after deletion.\n        if (instruction) {\n          instruction.delete();\n        }\n        if (saveChanges) {\n          this._saveChangesToHistory();\n        }\n      }\n    );\n  }\n\n  moveSelectionToInstruction = (destinationContext: InstructionContext) => {\n    this.moveSelectionToInstructionsList(\n      {\n        instrsList: destinationContext.instrsList,\n        isCondition: destinationContext.isCondition,\n      },\n      destinationContext.indexInList\n    );\n  };\n\n  moveSelectionToInstructionsList = (\n    destinationContext: InstructionsListContext,\n    indexInList: ?number = undefined\n  ) => {\n    const selectedInstructions = getSelectedInstructions(this.state.selection);\n    const destinationIndex =\n      indexInList === undefined\n        ? destinationContext.instrsList.size()\n        : indexInList;\n\n    const isTryingToDragAnInstructionIntoItsOwnNestedInstructions = !!selectedInstructions.filter(\n      instruction =>\n        containsSubInstructions(instruction, destinationContext.instrsList)\n    ).length;\n\n    if (isTryingToDragAnInstructionIntoItsOwnNestedInstructions) return;\n\n    selectedInstructions.forEach(instruction =>\n      destinationContext.instrsList.insert(instruction, destinationIndex)\n    );\n\n    if (!this._keyboardShortcuts.shouldCloneInstances()) {\n      this.deleteSelection({ deleteEvents: false });\n    } else {\n      this._saveChangesToHistory();\n    }\n  };\n\n  selectEvent = (eventContext: EventContext) => {\n    const multiSelect = this._keyboardShortcuts.shouldMultiSelect();\n    this.setState(\n      {\n        selection: selectEvent(this.state.selection, eventContext, multiSelect),\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  openEventContextMenu = (x: number, y: number, eventContext: EventContext) => {\n    const multiSelect = this._keyboardShortcuts.shouldMultiSelect();\n    this.setState(\n      {\n        selection: selectEvent(this.state.selection, eventContext, multiSelect),\n      },\n      () => {\n        this.updateToolbar();\n        this.eventContextMenu.open(x, y);\n      }\n    );\n  };\n\n  openInstructionContextMenu = (\n    x: number,\n    y: number,\n    instructionContext: InstructionContext\n  ) => {\n    const multiSelect = this._keyboardShortcuts.shouldMultiSelect();\n    this.setState(\n      {\n        selection: selectInstruction(\n          this.state.selection,\n          instructionContext,\n          multiSelect\n        ),\n      },\n      () => {\n        this.updateToolbar();\n        this.instructionContextMenu.open(x, y);\n      }\n    );\n  };\n\n  openInstructionsListContextMenu = (\n    x: number,\n    y: number,\n    instructionsListContext: InstructionsListContext\n  ) => {\n    this.setState(\n      {\n        selection: selectInstructionsList(\n          this.state.selection,\n          instructionsListContext,\n          false\n        ),\n      },\n      () => {\n        this.updateToolbar();\n        this.instructionsListContextMenu.open(x, y);\n      }\n    );\n  };\n\n  selectInstruction = (instructionContext: InstructionContext) => {\n    const multiSelect = this._keyboardShortcuts.shouldMultiSelect();\n    this.setState(\n      {\n        selection: selectInstruction(\n          this.state.selection,\n          instructionContext,\n          multiSelect\n        ),\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  openParameterEditor = (parameterContext: ParameterContext) => {\n    // $FlowFixMe\n    this.setState({\n      editedParameter: parameterContext,\n      inlineEditing: true,\n      inlineEditingAnchorEl: parameterContext.domEvent\n        ? parameterContext.domEvent.currentTarget\n        : null,\n      inlineEditingChangesMade: false,\n    });\n  };\n\n  closeParameterEditor = () => {\n    if (this.state.inlineEditingChangesMade) {\n      this._saveChangesToHistory();\n    }\n\n    this.setState({\n      inlineEditing: false,\n      inlineEditingAnchorEl: null,\n      inlineEditingChangesMade: false,\n    });\n  };\n\n  toggleDisabled = () => {\n    getSelectedEvents(this.state.selection).forEach(event =>\n      event.setDisabled(!event.isDisabled())\n    );\n    this._saveChangesToHistory(() => {\n      if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n    });\n  };\n\n  deleteSelection = ({\n    deleteInstructions = true,\n    deleteEvents = true,\n  }: { deleteInstructions?: boolean, deleteEvents?: boolean } = {}) => {\n    const { events } = this.props;\n    const eventsRemover = new gd.EventsRemover();\n    if (deleteEvents) {\n      getSelectedEvents(this.state.selection).forEach(event =>\n        eventsRemover.addEventToRemove(event)\n      );\n    }\n    if (deleteInstructions) {\n      getSelectedInstructions(this.state.selection).forEach(instruction =>\n        eventsRemover.addInstructionToRemove(instruction)\n      );\n    }\n\n    eventsRemover.launch(events);\n\n    // /!\\ Events were changed, so any reference to an existing event can now\n    // be invalid. Make sure to immediately trigger a forced update before\n    // any re-render that could use a deleted/invalid event.\n    if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n\n    this.setState(\n      {\n        selection: clearSelection(),\n        inlineEditing: false,\n        inlineEditingAnchorEl: null,\n      },\n      () => {\n        this._saveChangesToHistory();\n\n        // Deletion of an event/instruction will remove it from the DOM,\n        // potentially losing the focus on the associated DOM elements. Ensure\n        // we keep the focus on the EventsSheet.\n        this._ensureFocused();\n      }\n    );\n  };\n\n  copySelection = () => {\n    copySelectionToClipboard(this.state.selection);\n  };\n\n  cutSelection = () => {\n    this.copySelection();\n    this.deleteSelection();\n  };\n\n  pasteEvents = () => {\n    if (\n      !pasteEventsFromClipboardInSelection(\n        this.props.project,\n        this.state.selection\n      )\n    ) {\n      return;\n    }\n\n    this._saveChangesToHistory(() => {\n      if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n    });\n  };\n\n  pasteInstructions = () => {\n    if (\n      !pasteInstructionsFromClipboardInSelection(\n        this.props.project,\n        this.state.selection\n      )\n    ) {\n      return;\n    }\n\n    this._saveChangesToHistory(() => {\n      if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n    });\n  };\n\n  pasteEventsOrInstructions = () => {\n    if (hasEventSelected(this.state.selection)) this.pasteEvents();\n    else if (hasInstructionSelected(this.state.selection))\n      this.pasteInstructions();\n    else if (hasInstructionsListSelected(this.state.selection))\n      this.pasteInstructions();\n  };\n\n  pasteInstructionsInInstructionsList = (\n    instructionsListContext: InstructionsListContext\n  ) => {\n    if (\n      !pasteInstructionsFromClipboardInInstructionsList(\n        this.props.project,\n        instructionsListContext\n      )\n    ) {\n      return;\n    }\n\n    this._saveChangesToHistory(() => {\n      if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n    });\n  };\n\n  _invertSelectedConditions = () => {\n    getSelectedInstructionsContexts(this.state.selection).forEach(\n      instructionContext => {\n        if (instructionContext.isCondition) {\n          instructionContext.instruction.setInverted(\n            !instructionContext.instruction.isInverted()\n          );\n        }\n      }\n    );\n\n    this._saveChangesToHistory(() => {\n      if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n    });\n  };\n\n  _saveChangesToHistory = (cb: ?Function) => {\n    this.setState(\n      {\n        history: saveToHistory(this.state.history, this.props.events),\n      },\n      () => {\n        this.updateToolbar();\n        if (cb) cb();\n      }\n    );\n  };\n\n  undo = () => {\n    if (!canUndo(this.state.history)) return;\n\n    const { events, project } = this.props;\n    const newHistory = undo(this.state.history, events, project);\n\n    // /!\\ Events were changed, so any reference to an existing event can now\n    // be invalid. Make sure to immediately trigger a forced update before\n    // any re-render that could use a deleted/invalid event.\n    if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n\n    this.setState({ history: newHistory }, () => this.updateToolbar());\n  };\n\n  redo = () => {\n    if (!canRedo(this.state.history)) return;\n\n    const { events, project } = this.props;\n    const newHistory = redo(this.state.history, events, project);\n\n    // /!\\ Events were changed, so any reference to an existing event can now\n    // be invalid. Make sure to immediately trigger a forced update before\n    // any re-render that could use a deleted/invalid event.\n    if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n\n    this.setState({ history: newHistory }, () => this.updateToolbar());\n  };\n\n  _openEventsContextAnalyzer = () => {\n    const { globalObjectsContainer, objectsContainer } = this.props;\n    const eventsContextAnalyzer = new gd.EventsContextAnalyzer(\n      gd.JsPlatform.get(),\n      globalObjectsContainer,\n      objectsContainer\n    );\n\n    const eventsList = new gd.EventsList();\n    getSelectedEvents(this.state.selection).forEach(event =>\n      eventsList.insertEvent(event, eventsList.getEventsCount())\n    );\n\n    eventsContextAnalyzer.launch(eventsList);\n    eventsList.delete();\n\n    this.setState({\n      analyzedEventsContextResult: toEventsContextResult(\n        eventsContextAnalyzer.getEventsContext()\n      ),\n    });\n    eventsContextAnalyzer.delete();\n  };\n\n  _closeEventsContextAnalyzer = () => {\n    this.setState({\n      analyzedEventsContextResult: null,\n    });\n  };\n\n  extractEventsToFunction = () => {\n    const eventsList = new gd.EventsList();\n\n    getSelectedEvents(this.state.selection).forEach(event =>\n      eventsList.insertEvent(event, eventsList.getEventsCount())\n    );\n\n    this.setState({\n      serializedEventsToExtract: serializeToJSObject(eventsList),\n    });\n\n    eventsList.delete();\n  };\n\n  moveEventsIntoNewGroup = () => {\n    const eventsList = new gd.EventsList();\n\n    getSelectedEvents(this.state.selection).forEach(event =>\n      eventsList.insertEvent(event, eventsList.getEventsCount())\n    );\n\n    this._replaceSelectionByGroupOfEvents(eventsList);\n    eventsList.delete();\n  };\n\n  _replaceSelectionByEventsFunction = (\n    extensionName: string,\n    eventsFunction: gdEventsFunction\n  ) => {\n    const contexts = getSelectedEventContexts(this.state.selection);\n    if (!contexts.length) return;\n\n    const newEvents = this.addNewEvent(\n      'BuiltinCommonInstructions::Standard',\n      contexts[0]\n    );\n    if (!newEvents.length) {\n      console.error('A new event should have been created');\n      return;\n    }\n\n    const action = createNewInstructionForEventsFunction(\n      extensionName,\n      eventsFunction\n    );\n    const standardEvt = gd.asStandardEvent(newEvents[0]);\n    standardEvt.getActions().push_back(action);\n    action.delete();\n\n    this.deleteSelection({ deleteInstructions: false });\n  };\n\n  _replaceSelectionByGroupOfEvents = (eventsList: gdEventsList) => {\n    const contexts = getSelectedEventContexts(this.state.selection);\n    if (!contexts.length) return;\n\n    const newEvents = this.addNewEvent(\n      'BuiltinCommonInstructions::Group',\n      contexts[0]\n    );\n    if (!newEvents.length) {\n      console.error('A new event should have been created');\n      return;\n    }\n\n    const groupEvent = gd.asGroupEvent(newEvents[0]);\n\n    groupEvent.setName('Grouped events');\n    groupEvent.setFolded(true);\n    groupEvent\n      .getSubEvents()\n      .insertEvents(eventsList, 0, eventsList.getEventsCount(), 0);\n\n    this.deleteSelection({ deleteInstructions: false });\n  };\n\n  _ensureEventUnfolded = (cb: () => ?gdBaseEvent) => {\n    const event = cb();\n    if (event && this._eventsTree) {\n      this._eventsTree.unfoldForEvent(event);\n    }\n  };\n\n  _replaceInEvents = (\n    doReplaceInEvents: (inputs: ReplaceInEventsInputs) => void,\n    inputs: ReplaceInEventsInputs\n  ) => {\n    doReplaceInEvents(inputs);\n    this._saveChangesToHistory(() => {\n      if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n    });\n  };\n\n  _searchInEvents = (\n    doSearchInEvents: (inputs: SearchInEventsInputs, cb: () => void) => void,\n    inputs: SearchInEventsInputs\n  ) => {\n    doSearchInEvents(inputs, () => {\n      this.forceUpdate(() => {\n        if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n      });\n    });\n  };\n\n  _onEventMoved = () => {\n    // Move of the event in the list is handled by EventsTree.\n    // This could be refactored and put here if the drag'n'drop of events\n    // is reworked at some point.\n    this._saveChangesToHistory();\n  };\n\n  _renderInstructionEditorDialog = (newInstructionEditorDialog: boolean) => {\n    const {\n      project,\n      scope,\n      globalObjectsContainer,\n      objectsContainer,\n    } = this.props;\n\n    const Dialog = newInstructionEditorDialog\n      ? NewInstructionEditorDialog\n      : InstructionEditorDialog;\n\n    return this.state.editedInstruction.instruction ? (\n      <Dialog\n        project={project}\n        scope={scope}\n        globalObjectsContainer={globalObjectsContainer}\n        objectsContainer={objectsContainer}\n        instruction={this.state.editedInstruction.instruction}\n        isCondition={this.state.editedInstruction.isCondition}\n        isNewInstruction={\n          this.state.editedInstruction.indexInList === undefined\n        }\n        open={true}\n        onCancel={() => this.closeInstructionEditor()}\n        onSubmit={() => {\n          const {\n            instrsList,\n            instruction,\n            indexInList,\n          } = this.state.editedInstruction;\n          if (!instrsList) return;\n\n          if (indexInList !== undefined) {\n            // Replace an existing instruction\n            instrsList.set(indexInList, instruction);\n          } else {\n            // Add a new instruction\n            instrsList.insert(instruction, instrsList.size());\n          }\n\n          this.closeInstructionEditor(true);\n          ensureSingleOnceInstructions(instrsList);\n          if (this._eventsTree) this._eventsTree.forceEventsUpdate();\n        }}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        openInstructionOrExpression={(extension, type) => {\n          this.closeInstructionEditor();\n          this.props.openInstructionOrExpression(extension, type);\n        }}\n      />\n    ) : (\n      undefined\n    );\n  };\n\n  /**\n   * Call this to ensure that the events sheet stays focused after a potential\n   * lost of focus (for example, after a scroll, the focused element might have\n   * been scrolled out of the view and so removed from the DOM)\n   */\n  _ensureFocused = () => {\n    if (!this._containerDiv || !document) return;\n\n    const containerDivElement = this._containerDiv.current;\n    if (document.activeElement === containerDivElement) {\n      // Focus is already on the container\n      return;\n    }\n    if (containerDivElement) {\n      if (\n        document.activeElement !== document.body &&\n        containerDivElement.contains(document.activeElement)\n      ) {\n        // Focus is already on an element of the container\n        return;\n      }\n\n      // Focus is not on an element of the container, we probably lost the focus\n      // after scrolling or removing an element. Give back the focus to the container.\n      containerDivElement.focus();\n    }\n  };\n\n  render() {\n    const {\n      project,\n      scope,\n      events,\n      onOpenExternalEvents,\n      onOpenLayout,\n      globalObjectsContainer,\n      objectsContainer,\n    } = this.props;\n    if (!project) return null;\n\n    return (\n      <ScreenTypeMeasurer>\n        {screenType => (\n          <ResponsiveWindowMeasurer>\n            {windowWidth => (\n              <PreferencesContext.Consumer>\n                {({ values }) => (\n                  <EventsSearcher\n                    key={events.ptr}\n                    ref={eventSearcher => (this._eventSearcher = eventSearcher)}\n                    events={events}\n                    globalObjectsContainer={globalObjectsContainer}\n                    objectsContainer={objectsContainer}\n                    selection={this.state.selection}\n                  >\n                    {({\n                      eventsSearchResultEvents,\n                      searchFocusOffset,\n                      searchInEvents,\n                      replaceInEvents,\n                      goToPreviousSearchResult,\n                      goToNextSearchResult,\n                    }) => (\n                      <div\n                        className=\"gd-events-sheet\"\n                        style={styles.container}\n                        onKeyDown={this._keyboardShortcuts.onKeyDown}\n                        onKeyUp={this._keyboardShortcuts.onKeyUp}\n                        onDragOver={this._keyboardShortcuts.onDragOver}\n                        ref={this._containerDiv}\n                        tabIndex={0}\n                      >\n                        <EventsTree\n                          ref={eventsTree => (this._eventsTree = eventsTree)}\n                          key={events.ptr}\n                          onScroll={this._ensureFocused}\n                          events={events}\n                          project={project}\n                          scope={scope}\n                          globalObjectsContainer={globalObjectsContainer}\n                          objectsContainer={objectsContainer}\n                          selection={this.state.selection}\n                          onInstructionClick={this.selectInstruction}\n                          onInstructionDoubleClick={this.openInstructionEditor}\n                          onInstructionContextMenu={\n                            this.openInstructionContextMenu\n                          }\n                          onInstructionsListContextMenu={\n                            this.openInstructionsListContextMenu\n                          }\n                          onAddNewInstruction={this.openInstructionEditor}\n                          onPasteInstructions={\n                            this.pasteInstructionsInInstructionsList\n                          }\n                          onMoveToInstruction={this.moveSelectionToInstruction}\n                          onMoveToInstructionsList={\n                            this.moveSelectionToInstructionsList\n                          }\n                          onParameterClick={this.openParameterEditor}\n                          onEventClick={this.selectEvent}\n                          onEventContextMenu={this.openEventContextMenu}\n                          onAddNewEvent={context => {\n                            this.addNewEvent(\n                              'BuiltinCommonInstructions::Standard',\n                              context\n                            );\n                          }}\n                          onOpenExternalEvents={onOpenExternalEvents}\n                          onOpenLayout={onOpenLayout}\n                          searchResults={eventsSearchResultEvents}\n                          searchFocusOffset={searchFocusOffset}\n                          onEventMoved={this._onEventMoved}\n                          showObjectThumbnails={\n                            values.eventsSheetShowObjectThumbnails\n                          }\n                          screenType={screenType}\n                          windowWidth={windowWidth}\n                        />\n                        {this.state.showSearchPanel && (\n                          <SearchPanel\n                            ref={searchPanel =>\n                              (this._searchPanel = searchPanel)\n                            }\n                            onSearchInEvents={inputs =>\n                              this._searchInEvents(searchInEvents, inputs)\n                            }\n                            onReplaceInEvents={inputs =>\n                              this._replaceInEvents(replaceInEvents, inputs)\n                            }\n                            resultsCount={\n                              eventsSearchResultEvents\n                                ? eventsSearchResultEvents.length\n                                : null\n                            }\n                            hasEventSelected={hasEventSelected(\n                              this.state.selection\n                            )}\n                            onGoToPreviousSearchResult={() =>\n                              this._ensureEventUnfolded(\n                                goToPreviousSearchResult\n                              )\n                            }\n                            onGoToNextSearchResult={() =>\n                              this._ensureEventUnfolded(goToNextSearchResult)\n                            }\n                          />\n                        )}\n                        {events && events.getEventsCount() === 0 && (\n                          <EmptyEventsPlaceholder />\n                        )}\n                        <InlineParameterEditor\n                          open={this.state.inlineEditing}\n                          anchorEl={this.state.inlineEditingAnchorEl}\n                          onRequestClose={this.closeParameterEditor}\n                          project={project}\n                          scope={scope}\n                          globalObjectsContainer={globalObjectsContainer}\n                          objectsContainer={objectsContainer}\n                          isCondition={this.state.editedParameter.isCondition}\n                          instruction={this.state.editedParameter.instruction}\n                          parameterIndex={\n                            this.state.editedParameter.parameterIndex\n                          }\n                          onChange={value => {\n                            const {\n                              instruction,\n                              parameterIndex,\n                            } = this.state.editedParameter;\n                            if (!instruction) return;\n                            instruction.setParameter(parameterIndex, value);\n                            this.setState({\n                              inlineEditingChangesMade: true,\n                            });\n                          }}\n                          resourceSources={this.props.resourceSources}\n                          onChooseResource={this.props.onChooseResource}\n                          resourceExternalEditors={\n                            this.props.resourceExternalEditors\n                          }\n                        />\n                        <ContextMenu\n                          ref={eventContextMenu =>\n                            (this.eventContextMenu = eventContextMenu)\n                          }\n                          buildMenuTemplate={() => [\n                            {\n                              label: 'Edit',\n                              click: () => this.openEventTextDialog(),\n                              visible:\n                                filterEditableWithEventTextDialog(\n                                  getSelectedEvents(this.state.selection)\n                                ).length > 0,\n                            },\n                            {\n                              label: 'Copy',\n                              click: () => this.copySelection(),\n                              accelerator: 'CmdOrCtrl+C',\n                            },\n                            {\n                              label: 'Cut',\n                              click: () => this.cutSelection(),\n                              accelerator: 'CmdOrCtrl+X',\n                            },\n                            {\n                              label: 'Paste',\n                              click: () => this.pasteEvents(),\n                              enabled: hasClipboardEvents(),\n                              accelerator: 'CmdOrCtrl+V',\n                            },\n                            {\n                              label: 'Delete',\n                              click: () => this.deleteSelection(),\n                              accelerator: 'Delete',\n                            },\n                            {\n                              label: 'Toggle disabled',\n                              click: () => this.toggleDisabled(),\n                              enabled: this._selectionCanToggleDisabled(),\n                            },\n                            { type: 'separator' },\n                            {\n                              label: 'Add New Event Below',\n                              click: () =>\n                                this.addNewEvent(\n                                  'BuiltinCommonInstructions::Standard'\n                                ),\n                            },\n                            {\n                              label: 'Add Sub Event',\n                              click: () => this.addSubEvents(),\n                              enabled: this._selectionCanHaveSubEvents(),\n                            },\n                            {\n                              label: 'Add Other',\n                              submenu: this.state.allEventsMetadata.map(\n                                metadata => {\n                                  return {\n                                    label: metadata.fullName,\n                                    click: () =>\n                                      this.addNewEvent(metadata.type),\n                                  };\n                                }\n                              ),\n                            },\n                            { type: 'separator' },\n                            {\n                              label: 'Undo',\n                              click: this.undo,\n                              enabled: canUndo(this.state.history),\n                              accelerator: 'CmdOrCtrl+Z',\n                            },\n                            {\n                              label: 'Redo',\n                              click: this.redo,\n                              enabled: canRedo(this.state.history),\n                              accelerator: 'CmdOrCtrl+Shift+Z',\n                            },\n                            { type: 'separator' },\n                            {\n                              label: 'Extract Events to a Function',\n                              click: () => this.extractEventsToFunction(),\n                            },\n                            {\n                              label: 'Move Events into a Group',\n                              click: () => this.moveEventsIntoNewGroup(),\n                            },\n                            {\n                              label: 'Analyze Objects Used in this Event',\n                              click: this._openEventsContextAnalyzer,\n                            },\n                          ]}\n                        />\n                        <ContextMenu\n                          ref={instructionContextMenu =>\n                            (this.instructionContextMenu = instructionContextMenu)\n                          }\n                          buildMenuTemplate={() => [\n                            {\n                              label: 'Copy',\n                              click: () => this.copySelection(),\n                              accelerator: 'CmdOrCtrl+C',\n                            },\n                            {\n                              label: 'Cut',\n                              click: () => this.cutSelection(),\n                              accelerator: 'CmdOrCtrl+X',\n                            },\n                            {\n                              label: 'Paste',\n                              click: () => this.pasteInstructions(),\n                              enabled:\n                                hasClipboardConditions() ||\n                                hasClipboardActions(),\n                              accelerator: 'CmdOrCtrl+V',\n                            },\n                            { type: 'separator' },\n                            {\n                              label: 'Delete',\n                              click: () => this.deleteSelection(),\n                              accelerator: 'Delete',\n                            },\n                            { type: 'separator' },\n                            {\n                              label: 'Undo',\n                              click: this.undo,\n                              enabled: canUndo(this.state.history),\n                              accelerator: 'CmdOrCtrl+Z',\n                            },\n                            {\n                              label: 'Redo',\n                              click: this.redo,\n                              enabled: canRedo(this.state.history),\n                              accelerator: 'CmdOrCtrl+Shift+Z',\n                            },\n                            {\n                              label: 'Invert Condition',\n                              click: () => this._invertSelectedConditions(),\n                              visible: hasSelectedAtLeastOneCondition(\n                                this.state.selection\n                              ),\n                            },\n                          ]}\n                        />\n                        <ContextMenu\n                          ref={instructionsListContextMenu =>\n                            (this.instructionsListContextMenu = instructionsListContextMenu)\n                          }\n                          buildMenuTemplate={() => [\n                            {\n                              label: 'Paste',\n                              click: () => this.pasteInstructions(),\n                              enabled:\n                                hasClipboardConditions() ||\n                                hasClipboardActions(),\n                              accelerator: 'CmdOrCtrl+V',\n                            },\n                            { type: 'separator' },\n                            {\n                              label: 'Undo',\n                              click: this.undo,\n                              enabled: canUndo(this.state.history),\n                              accelerator: 'CmdOrCtrl+Z',\n                            },\n                            {\n                              label: 'Redo',\n                              click: this.redo,\n                              enabled: canRedo(this.state.history),\n                              accelerator: 'CmdOrCtrl+Shift+Z',\n                            },\n                          ]}\n                        />\n                        {this._renderInstructionEditorDialog(\n                          // Force using the new instruction editor on touch screens.\n                          values.useNewInstructionEditorDialog ||\n                            screenType === 'touch'\n                        )}\n                        {this.state.analyzedEventsContextResult && (\n                          <EventsContextAnalyzerDialog\n                            onClose={this._closeEventsContextAnalyzer}\n                            eventsContextResult={\n                              this.state.analyzedEventsContextResult\n                            }\n                          />\n                        )}\n                        {this.state.serializedEventsToExtract && (\n                          <EventsFunctionExtractorDialog\n                            project={project}\n                            globalObjectsContainer={globalObjectsContainer}\n                            objectsContainer={objectsContainer}\n                            onClose={() =>\n                              this.setState({\n                                serializedEventsToExtract: null,\n                              })\n                            }\n                            serializedEvents={\n                              this.state.serializedEventsToExtract\n                            }\n                            onCreate={(extensionName, eventsFunction) => {\n                              this.props.onCreateEventsFunction(\n                                extensionName,\n                                eventsFunction\n                              );\n                              this._replaceSelectionByEventsFunction(\n                                extensionName,\n                                eventsFunction\n                              );\n                              this.setState({\n                                serializedEventsToExtract: null,\n                              });\n                            }}\n                          />\n                        )}\n                        {this.state.textEditedEvent && (\n                          <EventTextDialog\n                            event={this.state.textEditedEvent}\n                            onApply={() => {\n                              this.closeEventTextDialog();\n                              this._saveChangesToHistory();\n                            }}\n                            onClose={this.closeEventTextDialog}\n                          />\n                        )}\n                        <InfoBar\n                          identifier=\"edit-instruction-explanation\"\n                          message={\n                            <Trans>\n                              Double click on a condition or action to edit it.\n                            </Trans>\n                          }\n                          touchScreenMessage={\n                            <Trans>\n                              Double tap a condition or action to edit it. Long\n                              press to show more options.\n                            </Trans>\n                          }\n                          show={hasInstructionSelected(this.state.selection)}\n                        />\n                      </div>\n                    )}\n                  </EventsSearcher>\n                )}\n              </PreferencesContext.Consumer>\n            )}\n          </ResponsiveWindowMeasurer>\n        )}\n      </ScreenTypeMeasurer>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport {\n  type ParameterInlineRenderer,\n  type ParameterInlineRendererProps,\n} from './ParameterFields/ParameterInlineRenderer.flow';\nimport DefaultField from './ParameterFields/DefaultField';\nimport RelationalOperatorField, {\n  renderInlineRelationalOperator,\n} from './ParameterFields/RelationalOperatorField';\nimport OperatorField, {\n  renderInlineOperator,\n} from './ParameterFields/OperatorField';\nimport MouseField, { renderInlineMouse } from './ParameterFields/MouseField';\nimport KeyField, { renderInlineKey } from './ParameterFields/KeyField';\nimport ObjectField, {\n  renderInlineObjectWithThumbnail,\n} from './ParameterFields/ObjectField';\nimport YesNoField, { renderInlineYesNo } from './ParameterFields/YesNoField';\nimport TrueFalseField, {\n  renderInlineTrueFalse,\n} from './ParameterFields/TrueFalseField';\nimport ExpressionField from './ParameterFields/ExpressionField';\nimport StringField from './ParameterFields/StringField';\nimport StringWithSelectorField from './ParameterFields/StringWithSelectorField';\nimport BehaviorField from './ParameterFields/BehaviorField';\nimport SceneVariableField, {\n  renderInlineSceneVariable,\n} from './ParameterFields/SceneVariableField';\nimport GlobalVariableField, {\n  renderInlineGlobalVariable,\n} from './ParameterFields/GlobalVariableField';\nimport ObjectVariableField, {\n  renderInlineObjectVariable,\n} from './ParameterFields/ObjectVariableField';\nimport LayerField from './ParameterFields/LayerField';\nimport AudioResourceField from './ParameterFields/AudioResourceField';\nimport VideoResourceField from './ParameterFields/VideoResourceField';\nimport JsonResourceField from './ParameterFields/JsonResourceField';\nimport ColorExpressionField from './ParameterFields/ColorExpressionField';\nimport ForceMultiplierField, {\n  renderInlineForceMultiplier,\n} from './ParameterFields/ForceMultiplierField';\nimport SceneNameField from './ParameterFields/SceneNameField';\nconst gd = global.gd;\n\nconst components = {\n  default: DefaultField,\n  mouse: MouseField,\n  object: ObjectField,\n  relationalOperator: RelationalOperatorField,\n  operator: OperatorField,\n  yesorno: YesNoField,\n  trueorfalse: TrueFalseField,\n  expression: ExpressionField,\n  string: StringField,\n  stringWithSelector: StringWithSelectorField,\n  behavior: BehaviorField,\n  scenevar: SceneVariableField,\n  globalvar: GlobalVariableField,\n  objectvar: ObjectVariableField,\n  layer: LayerField,\n  key: KeyField,\n  file: DefaultField, //TODO\n  musicfile: AudioResourceField,\n  soundfile: AudioResourceField,\n  videoResource: VideoResourceField,\n  jsonResource: JsonResourceField,\n  color: ColorExpressionField,\n  police: DefaultField, //TODO\n  joyaxis: DefaultField, //TODO\n  forceMultiplier: ForceMultiplierField,\n  sceneName: SceneNameField,\n};\nconst inlineRenderers: { [string]: ParameterInlineRenderer } = {\n  forceMultiplier: renderInlineForceMultiplier,\n  globalvar: renderInlineGlobalVariable,\n  scenevar: renderInlineSceneVariable,\n  objectvar: renderInlineObjectVariable,\n  key: renderInlineKey,\n  mouse: renderInlineMouse,\n  object: renderInlineObjectWithThumbnail,\n  yesorno: renderInlineYesNo,\n  trueorfalse: renderInlineTrueFalse,\n  operator: renderInlineOperator,\n  relationalOperator: renderInlineRelationalOperator,\n};\n\nexport default {\n  components,\n  getParameterComponent: (type: string) => {\n    const fieldType = gd.ParameterMetadata.isObject(type) ? 'object' : type;\n\n    if (components.hasOwnProperty(fieldType)) return components[fieldType];\n    else return components.default;\n  },\n  renderInlineParameter: (props: ParameterInlineRendererProps): React.Node => {\n    const rawType = props.parameterMetadata.getType();\n    const fieldType = gd.ParameterMetadata.isObject(rawType)\n      ? 'object'\n      : rawType;\n\n    return inlineRenderers[fieldType]\n      ? inlineRenderers[fieldType](props)\n      : props.value;\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { type ParameterInlineRendererProps } from './ParameterInlineRenderer.flow';\nimport ObjectSelector from '../../ObjectsList/ObjectSelector';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport { Trans } from '@lingui/macro';\nimport { nameAndIconContainer } from '../EventsTree/ClassNames';\n\nexport default class ObjectField extends React.Component<\n  ParameterFieldProps,\n  {||}\n> {\n  _description: ?string;\n  _longDescription: ?string;\n  _allowedObjectType: ?string;\n  _field: ?ObjectSelector;\n\n  constructor(props: ParameterFieldProps) {\n    super(props);\n\n    const { parameterMetadata } = this.props;\n\n    this._description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    this._longDescription = parameterMetadata\n      ? parameterMetadata.getLongDescription()\n      : undefined;\n\n    this._allowedObjectType = parameterMetadata\n      ? parameterMetadata.getExtraInfo()\n      : undefined;\n  }\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    return (\n      <ObjectSelector\n        margin={this.props.isInline ? 'none' : 'dense'}\n        project={this.props.project}\n        value={this.props.value}\n        onChange={this.props.onChange}\n        allowedObjectType={this._allowedObjectType}\n        globalObjectsContainer={this.props.globalObjectsContainer}\n        objectsContainer={this.props.objectsContainer}\n        floatingLabelText={this._description}\n        helperMarkdownText={this._longDescription}\n        fullWidth\n        errorTextIfInvalid={\n          this._allowedObjectType ? (\n            <Trans>The object does not exist or can't be used here.</Trans>\n          ) : (\n            <Trans>Enter the name of an object.</Trans>\n          )\n        }\n        openOnFocus={\n          !this.props\n            .value /* Only force showing the list if no object is entered, see https://github.com/4ian/GDevelop/issues/859 */\n        }\n        ref={field => (this._field = field)}\n      />\n    );\n  }\n}\n\nexport const renderInlineObjectWithThumbnail = ({\n  value,\n  renderObjectThumbnail,\n}: ParameterInlineRendererProps) => {\n  return (\n    <span\n      title={value}\n      className={classNames({\n        [nameAndIconContainer]: true,\n      })}\n    >\n      {renderObjectThumbnail(value)}\n      {value}\n    </span>\n  );\n};\n","import RenderedInstance from './RenderedInstance';\nimport * as PIXI from 'pixi.js';\n\n/**\n * Create a renderer for an type of object displayed as an icon\n *\n * @extends RenderedInstance\n * @class RenderedIconInstance\n * @constructor\n */\nexport default function makeRenderer(iconPath) {\n  class RenderedIconInstance extends RenderedInstance {\n    constructor(\n      project,\n      layout,\n      instance,\n      associatedObject,\n      pixiContainer,\n      pixiResourcesLoader\n    ) {\n      super(\n        project,\n        layout,\n        instance,\n        associatedObject,\n        pixiContainer,\n        pixiResourcesLoader\n      );\n\n      this._pixiObject = new PIXI.Sprite(PIXI.Texture.fromImage(iconPath));\n      this._pixiContainer.addChild(this._pixiObject);\n    }\n\n    update() {\n      this._pixiObject.position.x = this._instance.getX();\n      this._pixiObject.position.y = this._instance.getY();\n      this._pixiObject.rotation = (this._instance.getAngle() * Math.PI) / 180.0;\n    }\n\n    static getThumbnail(project, resourcesLoader, object) {\n      return iconPath;\n    }\n  }\n\n  return RenderedIconInstance;\n}\n","// @flow\nimport ReactDOM from 'react-dom';\nimport RaisedButton from './RaisedButton';\n\n// If you're searching for button components,\n// take a look at FlatButton or RaisedButton.\n\n/**\n * Focus a button. This won't display the material-ui Ripple effect\n * but is still better than nothing.\n */\nexport const focusButton = (buttonRef: { current: null | RaisedButton }) => {\n  if (buttonRef && buttonRef.current) {\n    const element = ReactDOM.findDOMNode(buttonRef.current);\n    if (element instanceof HTMLButtonElement) {\n      element.focus();\n    } else if (element instanceof HTMLElement) {\n      const children = element.getElementsByTagName('button');\n      if (\n        children &&\n        children.length &&\n        children[0] instanceof HTMLButtonElement\n      ) {\n        children[0].focus();\n      }\n    }\n  }\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { List } from '../../../UI/List';\nimport SearchBar from '../../../UI/SearchBar';\nimport { type EnumeratedInstructionOrExpressionMetadata } from './EnumeratedInstructionOrExpressionMetadata.js';\nimport { type InstructionOrExpressionTreeNode, findInTree } from './CreateTree';\nimport ThemeConsumer from '../../../UI/Theme/ThemeConsumer';\nimport { filterInstructionsList } from './EnumerateInstructions';\nimport { renderInstructionOrExpressionListItem } from '../SelectorListItems/SelectorInstructionOrExpressionListItem';\nimport { renderInstructionTree } from '../SelectorListItems/SelectorInstructionsTreeListItem';\nimport EmptyMessage from '../../../UI/EmptyMessage';\nimport ScrollView from '../../../UI/ScrollView';\nimport { Line } from '../../../UI/Grid';\nimport { ListItem } from '../../../UI/List';\nimport { getInstructionListItemValue } from '../SelectorListItems/Keys';\n\nconst styles = {\n  searchBar: {\n    backgroundColor: 'transparent',\n    flexShrink: 0,\n    zIndex: 1, // Put the SearchBar in front of the list, to display the shadow\n  },\n};\n\ntype Props = {|\n  focusOnMount?: boolean,\n  instructionsInfo: Array<EnumeratedInstructionOrExpressionMetadata>,\n  instructionsInfoTree: InstructionOrExpressionTreeNode,\n  selectedType: string,\n  onChoose: (type: string, EnumeratedInstructionOrExpressionMetadata) => void,\n  iconSize: number,\n  useSubheaders?: boolean,\n  searchPlaceholderObjectName?: ?string,\n  searchPlaceholderIsCondition?: ?boolean,\n  style?: Object,\n|};\ntype State = {|\n  searchText: string,\n  searchResults: Array<EnumeratedInstructionOrExpressionMetadata>,\n|};\n\nexport default class InstructionOrExpressionSelector extends React.PureComponent<\n  Props,\n  State\n> {\n  state = {\n    searchText: '',\n    searchResults: [],\n  };\n  _searchBar: ?SearchBar;\n  _scrollView = React.createRef<typeof ScrollView>();\n  _selectedItem = React.createRef<ListItem>();\n\n  initialInstructionTypePath = findInTree(\n    this.props.instructionsInfoTree,\n    this.props.selectedType\n  );\n\n  componentDidMount() {\n    if (this.props.focusOnMount && this._searchBar) {\n      this._searchBar.focus();\n    }\n    if (this._selectedItem.current && this._scrollView.current) {\n      // $FlowFixMe - improper typing of ScrollView?\n      this._scrollView.current.scrollTo(this._selectedItem.current);\n    }\n  }\n\n  focus = () => {\n    if (this._searchBar) this._searchBar.focus();\n  };\n\n  render() {\n    const {\n      selectedType,\n      iconSize,\n      instructionsInfoTree,\n      onChoose,\n      searchPlaceholderObjectName,\n      searchPlaceholderIsCondition,\n      useSubheaders,\n      style,\n    } = this.props;\n    const { searchText } = this.state;\n    const displayedInstructionsList = searchText\n      ? filterInstructionsList(this.props.instructionsInfo, { searchText })\n      : [];\n    const hasResults = !searchText || !!displayedInstructionsList.length;\n\n    const onSubmitSearch = () => {\n      if (!displayedInstructionsList.length) return;\n\n      onChoose(displayedInstructionsList[0].type, displayedInstructionsList[0]);\n    };\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <div\n            style={{\n              backgroundColor: muiTheme.list.itemsBackgroundColor,\n              ...style,\n            }}\n          >\n            <SearchBar\n              value={searchText}\n              onChange={searchText =>\n                this.setState({\n                  searchText,\n                })\n              }\n              onRequestSearch={onSubmitSearch}\n              style={styles.searchBar}\n              placeholder={\n                searchPlaceholderObjectName\n                  ? searchPlaceholderIsCondition\n                    ? t`Search ${searchPlaceholderObjectName} conditions`\n                    : t`Search ${searchPlaceholderObjectName} actions`\n                  : undefined\n              }\n              ref={searchBar => (this._searchBar = searchBar)}\n            />\n            <ScrollView\n              ref={\n                // $FlowFixMe - improper typing of ScrollView?\n                this._scrollView\n              }\n            >\n              {hasResults && (\n                <List>\n                  {searchText\n                    ? displayedInstructionsList.map(\n                        enumeratedInstructionOrExpressionMetadata =>\n                          renderInstructionOrExpressionListItem({\n                            instructionOrExpressionMetadata: enumeratedInstructionOrExpressionMetadata,\n                            iconSize: iconSize,\n                            onClick: () =>\n                              onChoose(\n                                enumeratedInstructionOrExpressionMetadata.type,\n                                enumeratedInstructionOrExpressionMetadata\n                              ),\n                            selectedValue: getInstructionListItemValue(\n                              selectedType\n                            ),\n                          })\n                      )\n                    : renderInstructionTree({\n                        instructionTreeNode: instructionsInfoTree,\n                        iconSize,\n                        onChoose,\n                        useSubheaders,\n                        selectedValue: getInstructionListItemValue(\n                          selectedType\n                        ),\n                        initiallyOpenedPath: this.initialInstructionTypePath,\n                        selectedItemRef: this._selectedItem,\n                      })}\n                </List>\n              )}\n              {!hasResults && (\n                <Line>\n                  <EmptyMessage>\n                    <Trans>\n                      Nothing corresponding to your search. Try browsing the\n                      list instead.\n                    </Trans>\n                  </EmptyMessage>\n                </Line>\n              )}\n            </ScrollView>\n          </div>\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst styles = {\n  container: {\n    overflowY: 'scroll',\n    flex: 1,\n  },\n};\n\ntype Props = {| children: React.Node, style?: ?Object |};\n\ntype Interface = {| scrollTo: (target: React$Component<any>) => void |};\n\n// Flow types might have to be changed/removed if upgrading Flow\n// (see example at https://github.com/wgao19/flow-notes/blob/master/react/react-memo.md)\n\nexport default React.forwardRef<Props, Interface>(\n  ({ children, style }: Props, ref) => {\n    const scrollView = React.useRef((null: ?HTMLDivElement));\n    React.useImperativeHandle(ref, () => ({\n      /**\n       * Scroll the view to the target component.\n       */\n      scrollTo: (target: React$Component<any>) => {\n        const targetElement = ReactDOM.findDOMNode(target);\n        if (targetElement instanceof HTMLElement) {\n          const yPosition = targetElement.getBoundingClientRect().top;\n          const scrollViewElement = scrollView.current;\n\n          if (scrollViewElement) {\n            const scrollViewYPosition = scrollViewElement.getBoundingClientRect()\n              .top;\n            scrollViewElement.scrollTop = yPosition - scrollViewYPosition;\n          }\n        } else {\n          console.error(\n            'Tried to scroll to something that is not a HTMLElement'\n          );\n        }\n      },\n    }));\n\n    return (\n      <div style={{ ...styles.container, ...style }} ref={scrollView}>\n        {children}\n      </div>\n    );\n  }\n);\n","//@flow\nimport { type EventsScope } from '../../EventsScope.flow';\nconst gd = global.gd;\n\nexport type InstructionOrExpressionScope = {|\n  objectMetadata?: ?gdObjectMetadata,\n  behaviorMetadata?: ?gdBehaviorMetadata,\n|};\n\n// An object representing InstructionMetadata or ExpressionMetadata.\n// Allow to use most information without paying the cost to call the\n// InstructionMetadata/ExpressionMetadata methods. In theory,\n// this type and objects are redundant with InstructionMetadata and ExpressionMetadata.\nexport type EnumeratedInstructionOrExpressionMetadata = {|\n  type: string,\n  displayedName: string,\n  fullGroupName: string,\n  iconFilename: string,\n  metadata: gdInstructionMetadata | gdExpressionMetadata,\n  scope: InstructionOrExpressionScope,\n  isPrivate: boolean,\n\n  name?: string, // For expressions\n  parameters?: Array<any>, // For expressions\n|};\n\nexport const filterEnumeratedInstructionOrExpressionMetadataByScope = (\n  list: Array<EnumeratedInstructionOrExpressionMetadata>,\n  scope: EventsScope\n): Array<EnumeratedInstructionOrExpressionMetadata> => {\n  // This is copied from gd::WholeProjectRefactorer (see GetBehaviorFullType)\n  // Could be factored into a single C++ function in gd::PlatformExtension?\n  const separator = gd.PlatformExtension.getNamespaceSeparator();\n  const getBehaviorFullType = (extensionName: string, behaviorName: string) => {\n    return extensionName + separator + behaviorName;\n  };\n\n  return list.filter(enumeratedInstructionOrExpressionMetadata => {\n    if (!enumeratedInstructionOrExpressionMetadata.isPrivate) return true;\n\n    const {\n      behaviorMetadata,\n    } = enumeratedInstructionOrExpressionMetadata.scope;\n    const { eventsBasedBehavior, eventsFunctionsExtension } = scope;\n\n    if (\n      behaviorMetadata &&\n      eventsBasedBehavior &&\n      eventsFunctionsExtension &&\n      getBehaviorFullType(\n        eventsFunctionsExtension.getName(),\n        eventsBasedBehavior.getName()\n      ) === behaviorMetadata.getName()\n    ) {\n      return true;\n    }\n\n    return false;\n  });\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport PreferencesContext, {\n  type AlertMessageIdentifier,\n} from '../../MainFrame/Preferences/PreferencesContext';\nimport { ScreenTypeMeasurer } from '../Reponsive/ScreenTypeMeasurer';\n\ntype Props = {|\n  identifier: AlertMessageIdentifier,\n  message: React.Node,\n  touchScreenMessage?: React.Node,\n  show: boolean,\n|};\n\nexport default class InfoBar extends React.PureComponent<Props> {\n  render() {\n    const { identifier } = this.props;\n\n    return (\n      <ScreenTypeMeasurer>\n        {screenType => (\n          <PreferencesContext.Consumer>\n            {({ values, showAlertMessage }) => (\n              <Snackbar\n                open={\n                  this.props.show && !values.hiddenAlertMessages[identifier]\n                }\n                message={\n                  screenType === 'touch' && this.props.touchScreenMessage\n                    ? this.props.touchScreenMessage\n                    : this.props.message\n                }\n                action={\n                  <Button\n                    key=\"undo\"\n                    color=\"primary\"\n                    size=\"small\"\n                    onClick={() => {\n                      showAlertMessage(identifier, false);\n                    }}\n                  >\n                    <Trans>Got it</Trans>\n                  </Button>\n                }\n              />\n            )}\n          </PreferencesContext.Consumer>\n        )}\n      </ScreenTypeMeasurer>\n    );\n  }\n}\n","// @flow\nimport * as PIXI from 'pixi.js';\n\ntype Props = {|\n  initialViewX: number,\n  initialViewY: number,\n  width: number,\n  height: number,\n  options: any,\n|};\n\nexport default class ViewPosition {\n  viewX: number = 0;\n  viewY: number = 0;\n  _width: number;\n  _height: number;\n  options: any;\n  _pixiContainer = new PIXI.Container();\n\n  constructor({ initialViewX, initialViewY, width, height, options }: Props) {\n    this.viewX = initialViewX;\n    this.viewY = initialViewY;\n    this.options = options;\n    this.resize(width, height);\n  }\n\n  setOptions(options: any) {\n    this.options = options;\n  }\n\n  resize(width: number, height: number) {\n    this._width = width;\n    this._height = height;\n  }\n\n  getWidth() {\n    return this._width;\n  }\n\n  getHeight() {\n    return this._height;\n  }\n\n  /**\n   * Convert a point from the canvas coordinates (for example, the mouse position) to the\n   * \"world\" coordinates.\n   */\n  toSceneCoordinates = (x: number, y: number): [number, number] => {\n    x -= this._width / 2;\n    y -= this._height / 2;\n    x /= Math.abs(this._pixiContainer.scale.x);\n    y /= Math.abs(this._pixiContainer.scale.y);\n\n    var viewRotation = 0;\n    var tmp = x;\n    x =\n      Math.cos((viewRotation / 180) * Math.PI) * x -\n      Math.sin((viewRotation / 180) * Math.PI) * y;\n    y =\n      Math.sin((viewRotation / 180) * Math.PI) * tmp +\n      Math.cos((viewRotation / 180) * Math.PI) * y;\n\n    return [x + this.viewX, y + this.viewY];\n  };\n\n  /**\n   * Convert a point from the \"world\" coordinates (for example, an object position) to the\n   * canvas coordinates.\n   */\n  toCanvasCoordinates = (x: number, y: number): [number, number] => {\n    x -= this.viewX;\n    y -= this.viewY;\n\n    var viewRotation = -0;\n    var tmp = x;\n    x =\n      Math.cos((viewRotation / 180) * Math.PI) * x -\n      Math.sin((viewRotation / 180) * Math.PI) * y;\n    y =\n      Math.sin((viewRotation / 180) * Math.PI) * tmp +\n      Math.cos((viewRotation / 180) * Math.PI) * y;\n\n    x *= Math.abs(this._pixiContainer.scale.x);\n    y *= Math.abs(this._pixiContainer.scale.y);\n\n    return [x + this._width / 2, y + this._height / 2];\n  };\n\n  scrollBy(x: number, y: number) {\n    this.viewX += x;\n    this.viewY += y;\n  }\n\n  scrollTo(x: number, y: number) {\n    this.viewX = x;\n    this.viewY = y;\n  }\n\n  scrollToInstance(instance: gdInitialInstance) {\n    this.viewX = instance.getX();\n    this.viewY = instance.getY();\n  }\n\n  getViewX() {\n    return this.viewX;\n  }\n\n  getViewY() {\n    return this.viewY;\n  }\n\n  getPixiContainer() {\n    return this._pixiContainer;\n  }\n\n  render() {\n    this._pixiContainer.position.x = -this.viewX * this.options.zoomFactor;\n    this._pixiContainer.position.y = -this.viewY * this.options.zoomFactor;\n    this._pixiContainer.position.x += this._width / 2;\n    this._pixiContainer.position.y += this._height / 2;\n    this._pixiContainer.scale.x = this.options.zoomFactor;\n    this._pixiContainer.scale.y = this.options.zoomFactor;\n  }\n}\n","// @flow\nconst gd = global.gd;\n\nexport default class InstancesSelection {\n  selection: Array<gdInitialInstance> = [];\n\n  hasSelectedInstances() {\n    return !!this.getSelectedInstances().length;\n  }\n\n  getSelectedInstances() {\n    return this.selection;\n  }\n\n  isInstanceSelected(instance: gdInitialInstance) {\n    for (var i = 0; i < this.selection.length; i++) {\n      if (gd.compare(this.selection[i], instance)) return true;\n    }\n\n    return false;\n  }\n\n  clearSelection() {\n    this.selection.length = 0;\n  }\n\n  selectInstance(\n    instance: gdInitialInstance,\n    multiselect: boolean,\n    layersVisibility: ?{ [string]: boolean } = null\n  ) {\n    if (this.isInstanceSelected(instance)) {\n      if (multiselect) this.unselectInstance(instance);\n\n      return;\n    }\n\n    if (!multiselect) this.clearSelection();\n\n    if (!layersVisibility || layersVisibility[instance.getLayer()]) {\n      this.selection.push(instance);\n    }\n  }\n\n  selectInstances(\n    instances: Array<gdInitialInstance>,\n    multiselect: boolean,\n    layersVisibility: ?{ [string]: boolean } = null\n  ) {\n    if (!multiselect) this.clearSelection();\n\n    instances.forEach(instance =>\n      this.selectInstance(instance, true, layersVisibility)\n    );\n  }\n\n  unselectInstance(instance: gdInitialInstance) {\n    if (this.isInstanceSelected(instance)) {\n      var i = this.selection.length - 1;\n      while (i >= -1 && this.selection[i].ptr !== instance.ptr) {\n        --i;\n      }\n\n      this.selection.splice(i, 1);\n    }\n  }\n}\n","//TODO: Factor with styles.js from LayersList.\nexport default {\n  handleColumn: {\n    width: 24,\n    paddingLeft: 8,\n    paddingRight: 0,\n  },\n  coordinateColumn: {\n    width: 48,\n  },\n  toolColumn: {\n    width: 48,\n  },\n};\n","// @flow\n\nexport const timeFunction = (fn: Function, onResult: number => void) => {\n  var t0 = performance.now();\n  fn();\n  var t1 = performance.now();\n  onResult(t1 - t0);\n};\n\nexport const timePromise = <T>(\n  promiseFn: () => Promise<T>,\n  onResult: number => void\n): Promise<T> => {\n  const t0 = performance.now();\n  return promiseFn().then(result => {\n    const t1 = performance.now();\n    onResult(t1 - t0);\n\n    return result;\n  });\n};\n","// @flow\n\nexport const makeTimestampedId = () =>\n  '' + Date.now() + '-' + Math.floor(Math.random() * 1000000);\n","// @flow\nimport flatten from 'lodash/flatten';\nimport { mapFor } from '../../Utils/MapFor';\n\nexport const enumerateVariables = (\n  variablesContainer: ?gdVariablesContainer\n): Array<string> => {\n  if (!variablesContainer) {\n    return [];\n  }\n\n  const enumerateVariableAndChildrenNames = (\n    fullName: string,\n    variable: gdVariable\n  ): Array<string> => {\n    const names = [fullName];\n    if (!variable.isStructure()) return names;\n\n    variable\n      .getAllChildrenNames()\n      .toJSArray()\n      .forEach(childName => {\n        enumerateVariableAndChildrenNames(\n          `${fullName}.${childName}`,\n          variable.getChild(childName)\n        ).forEach(name => {\n          names.push(name);\n        });\n      });\n\n    return names;\n  };\n\n  return flatten(\n    mapFor(0, variablesContainer.count(), i => {\n      if (!variablesContainer) return [];\n\n      return enumerateVariableAndChildrenNames(\n        variablesContainer.getNameAt(i),\n        variablesContainer.getAt(i)\n      );\n    })\n  );\n};\n","// @flow\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport React, { Component } from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { enumerateVariables } from './EnumerateVariables';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\nimport classNames from 'classnames';\nimport { icon, nameAndIconContainer } from '../EventsTree/ClassNames';\nimport SemiControlledAutoComplete from '../../UI/SemiControlledAutoComplete';\nimport { TextFieldWithButtonLayout } from '../../UI/Layout';\n\ntype Props = {\n  ...ParameterFieldProps,\n  variablesContainer: ?gdVariablesContainer,\n  onOpenDialog: ?() => void,\n};\n\nexport default class VariableField extends Component<Props, {||}> {\n  _field: ?SemiControlledAutoComplete;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const {\n      value,\n      onChange,\n      isInline,\n      onOpenDialog,\n      parameterMetadata,\n      variablesContainer,\n    } = this.props;\n\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    return (\n      <TextFieldWithButtonLayout\n        renderTextField={() => (\n          <SemiControlledAutoComplete\n            margin={this.props.isInline ? 'none' : 'dense'}\n            floatingLabelText={description}\n            helperMarkdownText={\n              parameterMetadata\n                ? parameterMetadata.getLongDescription()\n                : undefined\n            }\n            fullWidth\n            value={value}\n            onChange={onChange}\n            dataSource={enumerateVariables(variablesContainer).map(\n              variableName => ({\n                text: variableName,\n                value: variableName,\n              })\n            )}\n            openOnFocus={!isInline}\n            ref={field => (this._field = field)}\n          />\n        )}\n        renderButton={style =>\n          onOpenDialog && !isInline ? (\n            <RaisedButton\n              icon={<OpenInNew />}\n              disabled={!this.props.variablesContainer}\n              primary\n              style={style}\n              onClick={onOpenDialog}\n            />\n          ) : null\n        }\n      />\n    );\n  }\n}\n\nexport const renderVariableWithIcon = (\n  value: string,\n  iconPath: string,\n  tooltip: string = ''\n) => {\n  return (\n    <span\n      title={tooltip}\n      className={classNames({\n        [nameAndIconContainer]: true,\n      })}\n    >\n      <img\n        className={classNames({\n          [icon]: true,\n        })}\n        src={iconPath}\n        alt=\"\"\n      />\n      {value}\n    </span>\n  );\n};\n","// @flow\nimport { createMuiTheme, darken, lighten } from '@material-ui/core/styles';\nimport './Mosaic.css';\nimport './EventsSheet.css';\nimport 'react-virtualized/styles.css'; // Styles for react-virtualized Table\nimport './Table.css';\nimport './Markdown.css';\n\nconst gdevelopPurple = '#9100ce';\nconst gdevelopLightBlue = '#4ab0e4';\n\nconst systemSelectionColor = '#4c92ff'; //OS X selection\n\n// Use the fonts provided by the operating system(s) as possible.\n// If you update this font list, be sure to do it in all the other places using fonts in the codebase.\nconst fontFamily =\n  \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, 'Helvetica Neue', Helvetica, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'\";\n\n/**\n * The background color of the main window\n */\nconst backgroundColor = '#f7f7f7';\n\n/**\n * The background color of the \"papers\", \"dialogs\", etc...\n */\nconst canvasColor = '#f0f0f0';\n\n// GDevelop specific variables:\nconst gdevelopTheme = {\n  palette: {\n    canvasColor,\n  },\n  message: {\n    warning: '#ffa500',\n    error: '#f00',\n  },\n  toolbar: {\n    backgroundColor: backgroundColor,\n    separatorColor: '#cecece',\n  },\n  closableTabs: {\n    fontFamily,\n    backgroundColor: backgroundColor,\n    textColor: '#878787',\n    selectedBackgroundColor: gdevelopLightBlue,\n    selectedTextColor: '#ffffff',\n    height: 32,\n    closeButtonWidth: 24,\n  },\n  imageThumbnail: {\n    selectedBorderColor: systemSelectionColor,\n  },\n  list: {\n    itemsBackgroundColor: '#FFFFFF',\n  },\n  listItem: {\n    groupBackgroundColor: backgroundColor,\n    groupTextColor: 'rgba(0,0,0,0.54)',\n    deprecatedGroupTextColor: 'rgba(0,0,0,0.30)',\n    separatorColor: '#e0e0e0',\n    selectedBackgroundColor: systemSelectionColor,\n    selectedTextColor: '#ffffff',\n    errorTextColor: '#ff2e16',\n    warningTextColor: '#ffb032',\n    selectedErrorBackgroundColor: '#ff2e16',\n    selectedWarningBackgroundColor: '#ffb032',\n  },\n  emptyMessage: {\n    shadowColor: '#FFFFFF',\n  },\n  logo: {\n    src: 'res/GD-logo-big.png',\n  },\n  mosaicRootClassName: 'mosaic-gd-default-theme', // See Mosaic.css\n  eventsSheetRootClassName: 'gd-events-sheet-default-theme', // See EventsSheet.css\n  tableRootClassName: 'gd-table-default-theme', // See Table.css\n  markdownRootClassName: 'gd-markdown-default-theme', // See Markdown.css\n  gdevelopIconsCSSFilter: '',\n};\n\n// Theme for Material-UI components\nconst muiTheme = createMuiTheme({\n  typography: {\n    fontFamily,\n  },\n  palette: {\n    type: 'light',\n    common: { black: 'rgba(110, 42, 42, 1)', white: '#fff' },\n    background: {\n      paper: canvasColor,\n      default: backgroundColor,\n    },\n    primary: {\n      light: lighten(gdevelopLightBlue, 0.05),\n      main: gdevelopLightBlue,\n      dark: darken(gdevelopLightBlue, 0.05),\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: lighten(gdevelopPurple, 0.05),\n      main: gdevelopPurple,\n      dark: darken(gdevelopPurple, 0.05),\n      contrastText: '#fff',\n    },\n  },\n  overrides: {\n    MuiTypography: {\n      h6: {\n        // Make h6, used in Drawer title bars, use the same weight as tabs and mosaic windows\n        fontWeight: 400,\n      },\n    },\n    MuiInput: {\n      underline: {\n        '&:before': {\n          borderBottom: `1px solid #BBBBBB`,\n        },\n      },\n    },\n    MuiAppBar: {\n      colorPrimary: {\n        backgroundColor: gdevelopPurple,\n      },\n    },\n    MuiIconButton: {\n      root: {\n        // Fix color being grey if not set to (almost) black\n        color: '#111',\n      },\n    },\n    MuiListItemIcon: {\n      root: {\n        // Fix color being grey if not set to (almost) black\n        color: '#111',\n      },\n    },\n    // Use a more visible color scheme for tabs:\n    MuiTabs: {\n      root: {\n        backgroundColor: gdevelopLightBlue,\n      },\n    },\n    MuiTab: {\n      textColorPrimary: {\n        color: '#fff !important',\n      },\n    },\n    MuiButtonBase: {\n      // Remove the web-ish \"pointer\" (hand) cursor from buttons\n      root: {\n        cursor: 'default',\n      },\n    },\n    // Use non rounded buttons\n    MuiButton: {\n      root: {\n        borderRadius: 0,\n        fontWeight: 400, // Lower a bit the weight of buttons\n      },\n    },\n  },\n});\n\nconst theme = {\n  gdevelopTheme,\n  muiTheme,\n};\nexport type Theme = $Exact<typeof theme>;\nexport default theme;\n","// @flow\n// See ElectronEventsBridge, AboutDialog and electron-app/main.js for handling the updates.\n\nexport type UpdateStatus = {\n  message: string,\n  status:\n    | 'checking-for-update'\n    | 'update-available'\n    | 'update-not-available'\n    | 'error'\n    | 'download-progress'\n    | 'update-downloaded'\n    | 'unknown',\n};\n\nexport const getUpdateNotificationTitle = (updateStatus: UpdateStatus) => {\n  if (updateStatus.status === 'update-available')\n    return 'A new update is available!';\n\n  return '';\n};\n\nexport const getUpdateNotificationBody = (updateStatus: UpdateStatus) => {\n  if (updateStatus.status === 'update-available')\n    return 'It will be downloaded and installed automatically (unless you deactivated this in preferences)';\n\n  return '';\n};\n\nexport const getUpdateStatusLabel = (status: string) => {\n  if (status === 'checking-for-update') return 'Checking for update...';\n  if (status === 'update-available') return 'A new update is available!';\n  if (status === 'update-not-available')\n    return \"No update available. You're using the latest version!\";\n  if (status === 'error') return 'Error while checking update';\n  if (status === 'download-progress')\n    return 'A new update is being downloaded...';\n  if (status === 'update-downloaded')\n    return 'A new update will be installed after you quit and relaunch GDevelop';\n  return '';\n};\n\nexport const getUpdateButtonLabel = (status: string) => {\n  if (status === 'update-available') return 'Update GDevelop to latest version';\n  return 'Check again for new updates';\n};\n\nexport const canDownloadUpdate = (status: string) => {\n  return status === 'update-available';\n};\n","// @flow\nimport * as React from 'react';\nimport { Table, TableHeader, TableHeaderColumn, TableRow } from '../UI/Table';\nimport flatten from 'lodash/flatten';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport { mapFor } from '../Utils/MapFor';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport VariableRow from './VariableRow';\nimport EditVariableRow from './EditVariableRow';\nimport styles from './styles';\nimport {\n  getInitialSelection,\n  hasSelection,\n  addToSelection,\n  getSelection,\n} from '../Utils/SelectionHandler';\nimport { CLIPBOARD_KIND } from './ClipboardKind';\nimport Clipboard from '../Utils/Clipboard';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\nimport { type VariableOrigin } from './VariablesList.flow';\n\nconst gd = global.gd;\n\nconst SortableVariableRow = SortableElement(VariableRow);\nconst SortableAddVariableRow = SortableElement(EditVariableRow);\n\nclass VariablesListBody extends React.Component<*, *> {\n  render() {\n    return <div>{this.props.children}</div>;\n  }\n}\n\nconst SortableVariablesListBody = SortableContainer(VariablesListBody);\nSortableVariablesListBody.muiName = 'TableBody';\n\ntype VariableAndName = {| name: string, ptr: number, variable: gdVariable |};\n\ntype Props = {|\n  variablesContainer: gdVariablesContainer,\n  inheritedVariablesContainer?: ?gdVariablesContainer,\n  emptyExplanationMessage?: React.Node,\n  emptyExplanationSecondMessage?: React.Node,\n  onSizeUpdated?: () => void,\n|};\ntype State = {|\n  nameErrors: { [string]: string },\n  selectedVariables: { [number]: ?VariableAndName },\n  mode: 'select' | 'move',\n|};\n\nexport default class VariablesList extends React.Component<Props, State> {\n  state = {\n    nameErrors: {},\n    selectedVariables: getInitialSelection(),\n    mode: 'select',\n  };\n\n  _selectVariable = (variableAndName: VariableAndName, select: boolean) => {\n    this.setState({\n      selectedVariables: addToSelection(\n        this.state.selectedVariables,\n        variableAndName,\n        select\n      ),\n    });\n  };\n\n  copySelection = () => {\n    Clipboard.set(\n      CLIPBOARD_KIND,\n      getSelection(this.state.selectedVariables).map(({ name, variable }) => ({\n        name,\n        serializedVariable: serializeToJSObject(variable),\n      }))\n    );\n  };\n\n  paste = () => {\n    const { variablesContainer, inheritedVariablesContainer } = this.props;\n    if (!Clipboard.has(CLIPBOARD_KIND)) return;\n\n    const variables = Clipboard.get(CLIPBOARD_KIND);\n    variables.forEach(({ name, serializedVariable }) => {\n      const newName = newNameGenerator(\n        name,\n        name =>\n          inheritedVariablesContainer\n            ? inheritedVariablesContainer.has(name) ||\n              variablesContainer.has(name)\n            : variablesContainer.has(name),\n        'CopyOf'\n      );\n      const newVariable = new gd.Variable();\n      unserializeFromJSObject(newVariable, serializedVariable);\n      variablesContainer.insert(\n        newName,\n        newVariable,\n        variablesContainer.count()\n      );\n      newVariable.delete();\n    });\n    this.forceUpdate();\n  };\n\n  deleteSelection = () => {\n    const { variablesContainer } = this.props;\n    const selection: Array<VariableAndName> = getSelection(\n      this.state.selectedVariables\n    );\n\n    // Only delete ancestor variables, as selection can be composed of variables\n    // that are contained inside others.\n    const ancestorOnlyVariables = selection.filter(variableAndName => {\n      // Make sure that the variable has no ancestor containing it\n      return !selection.find(\n        otherVariableAndName =>\n          variableAndName !== otherVariableAndName &&\n          otherVariableAndName.variable.contains(\n            variableAndName.variable,\n            /*recursive=*/ true\n          )\n      );\n    });\n\n    // We don't want to ever manipulate/access to variables that have been deleted (by removeRecursively):\n    // that's why it's important to only delete ancestor variables.\n    ancestorOnlyVariables.forEach(({ variable }: VariableAndName) =>\n      variablesContainer.removeRecursively(variable)\n    );\n    this.clearSelection();\n  };\n\n  clearSelection = () => {\n    this.setState({\n      selectedVariables: getInitialSelection(),\n    });\n  };\n\n  _updateOrDefineVariable = (\n    name: string,\n    variable: gdVariable,\n    newValue: string,\n    index: number,\n    origin: ?VariableOrigin\n  ) => {\n    const { variablesContainer, inheritedVariablesContainer } = this.props;\n\n    if (inheritedVariablesContainer && origin === 'parent') {\n      const serializedVariable = serializeToJSObject(\n        inheritedVariablesContainer.get(name)\n      );\n      const newVariable = new gd.Variable();\n      unserializeFromJSObject(newVariable, serializedVariable);\n      variablesContainer.insert(name, newVariable, index);\n      newVariable.delete();\n\n      variablesContainer.get(name).setString(newValue);\n    } else {\n      variable.setString(newValue);\n    }\n  };\n\n  _renderVariableChildren(\n    name: string,\n    parentVariable: gdVariable,\n    depth: number,\n    origin: VariableOrigin\n  ): Array<React.Node> {\n    const names = parentVariable.getAllChildrenNames().toJSArray();\n\n    return flatten(\n      names.map((name, index) => {\n        const variable = parentVariable.getChild(name);\n        return this._renderVariableAndChildrenRows(\n          name,\n          variable,\n          depth + 1,\n          index,\n          parentVariable,\n          origin\n        );\n      })\n    );\n  }\n\n  _getVariableOrigin = (name: string) => {\n    const { variablesContainer, inheritedVariablesContainer } = this.props;\n\n    if (!inheritedVariablesContainer || !inheritedVariablesContainer.has(name))\n      return '';\n    return variablesContainer.has(name) ? 'inherited' : 'parent';\n  };\n\n  _renderVariableAndChildrenRows(\n    name: string,\n    variable: gdVariable,\n    depth: number,\n    index: number,\n    parentVariable: ?gdVariable,\n    parentOrigin: ?VariableOrigin = null\n  ) {\n    const { variablesContainer } = this.props;\n    const isStructure = variable.isStructure();\n\n    const origin = parentOrigin ? parentOrigin : this._getVariableOrigin(name);\n\n    return (\n      <SortableVariableRow\n        name={name}\n        index={index}\n        key={'variable-' + name}\n        variable={variable}\n        disabled={depth !== 0}\n        depth={depth}\n        origin={origin}\n        errorText={\n          this.state.nameErrors[variable.ptr]\n            ? 'This name is already taken'\n            : undefined\n        }\n        onChangeValue={text => {\n          this._updateOrDefineVariable(name, variable, text, index, origin);\n\n          this.forceUpdate();\n          if (this.props.onSizeUpdated) this.props.onSizeUpdated();\n        }}\n        onResetToDefaultValue={() => {\n          variablesContainer.removeRecursively(variable);\n          this.forceUpdate();\n          if (this.props.onSizeUpdated) this.props.onSizeUpdated();\n        }}\n        onBlur={event => {\n          const text = event.target.value;\n          if (name === text) return;\n\n          let success = true;\n          if (!parentVariable) {\n            success = variablesContainer.rename(name, text);\n          } else {\n            success = parentVariable.renameChild(name, text);\n          }\n\n          this.setState({\n            nameErrors: {\n              ...this.state.nameErrors,\n              [variable.ptr]: !success,\n            },\n          });\n        }}\n        onRemove={() => {\n          if (!parentVariable) {\n            variablesContainer.remove(name);\n          } else {\n            parentVariable.removeChild(name);\n          }\n\n          this.forceUpdate();\n          if (this.props.onSizeUpdated) this.props.onSizeUpdated();\n        }}\n        onAddChild={() => {\n          const name = newNameGenerator('ChildVariable', name =>\n            variable.hasChild(name)\n          );\n          variable.getChild(name).setString('');\n\n          this.forceUpdate();\n          if (this.props.onSizeUpdated) this.props.onSizeUpdated();\n        }}\n        children={\n          isStructure\n            ? this._renderVariableChildren(name, variable, depth, origin)\n            : null\n        }\n        showHandle={this.state.mode === 'move'}\n        showSelectionCheckbox={this.state.mode === 'select'}\n        isSelected={!!this.state.selectedVariables[variable.ptr]}\n        onSelect={select =>\n          this._selectVariable({ name, ptr: variable.ptr, variable }, select)\n        }\n      />\n    );\n  }\n\n  _renderEmpty() {\n    return (\n      !!this.props.emptyExplanationMessage && (\n        <div>\n          <EmptyMessage\n            style={styles.emptyExplanation}\n            messageStyle={styles.emptyExplanationMessage}\n          >\n            {this.props.emptyExplanationMessage}\n          </EmptyMessage>\n          <EmptyMessage\n            style={styles.emptyExplanation}\n            messageStyle={styles.emptyExplanationMessage}\n          >\n            {this.props.emptyExplanationSecondMessage}\n          </EmptyMessage>\n        </div>\n      )\n    );\n  }\n\n  render() {\n    const { variablesContainer, inheritedVariablesContainer } = this.props;\n    if (!variablesContainer) return null;\n\n    // Display inherited variables, if any\n    const containerInheritedVariablesTree = inheritedVariablesContainer\n      ? mapFor(0, inheritedVariablesContainer.count(), index => {\n          const name = inheritedVariablesContainer.getNameAt(index);\n          if (!variablesContainer.has(name)) {\n            // Show only variables from parent container that are not redefined\n            const variable = inheritedVariablesContainer.getAt(index);\n            return this._renderVariableAndChildrenRows(\n              name,\n              variable,\n              0,\n              index,\n              undefined,\n              'parent'\n            );\n          }\n        })\n      : [];\n\n    const containerVariablesTree = mapFor(\n      0,\n      variablesContainer.count(),\n      index => {\n        const variable = variablesContainer.getAt(index);\n        const name = variablesContainer.getNameAt(index);\n\n        return this._renderVariableAndChildrenRows(\n          name,\n          variable,\n          0,\n          index,\n          undefined\n        );\n      }\n    );\n\n    const editRow = (\n      <SortableAddVariableRow\n        index={0}\n        key={'add-variable-row'}\n        disabled\n        onAdd={() => {\n          const variable = new gd.Variable();\n          variable.setString('');\n          const name = newNameGenerator('Variable', name =>\n            inheritedVariablesContainer\n              ? inheritedVariablesContainer.has(name) ||\n                variablesContainer.has(name)\n              : variablesContainer.has(name)\n          );\n          variablesContainer.insert(name, variable, variablesContainer.count());\n          this.forceUpdate();\n          if (this.props.onSizeUpdated) this.props.onSizeUpdated();\n        }}\n        onCopy={this.copySelection}\n        onPaste={this.paste}\n        onDeleteSelection={this.deleteSelection}\n        hasSelection={hasSelection(this.state.selectedVariables)}\n        hasClipboard={Clipboard.has(CLIPBOARD_KIND)}\n      />\n    );\n\n    return (\n      <div>\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHeaderColumn>Name</TableHeaderColumn>\n              <TableHeaderColumn>Value</TableHeaderColumn>\n              <TableHeaderColumn style={styles.toolColumnHeader} />\n            </TableRow>\n          </TableHeader>\n        </Table>\n        <SortableVariablesListBody\n          variablesContainer={this.props.variablesContainer}\n          onSortEnd={({ oldIndex, newIndex }) => {\n            this.props.variablesContainer.move(oldIndex, newIndex);\n            this.forceUpdate();\n          }}\n          helperClass=\"sortable-helper\"\n          useDragHandle\n          lockToContainerEdges\n        >\n          {!!containerInheritedVariablesTree.length &&\n            containerInheritedVariablesTree}\n          {!containerVariablesTree.length && this._renderEmpty()}\n          {!!containerVariablesTree.length && containerVariablesTree}\n          {editRow}\n        </SortableVariablesListBody>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nconst styles = {\n  row: {\n    display: 'flex',\n  },\n  cell: {\n    display: 'flex',\n    flex: 1,\n    alignItems: 'center',\n    paddingLeft: 8,\n    paddingRight: 8,\n  },\n};\n\nexport const TreeTable = props => <div>{props.children}</div>;\n\nexport const TreeTableRow = props => (\n  <div style={{ ...styles.row, ...props.style }}>{props.children}</div>\n);\n\nexport const TreeTableCell = props => (\n  <div style={{ ...styles.cell, ...props.style }}>{props.children}</div>\n);\n","// @flow\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport values from 'lodash/values';\n\nexport type ProjectError = {\n  type: 'error' | 'warning',\n  message: string,\n  extraExplanation: string,\n};\n\nexport type ProjectErrors = {\n  [string]: Array<ProjectError>,\n};\n\nexport const validatePackageName = (packageName: string) => {\n  const pattern = /^([A-Za-z]{1}[A-Za-z\\d_]*\\.)+[A-Za-z][A-Za-z\\d_]*$/i;\n\n  return pattern.test(packageName);\n};\n\ntype TFunction = string => string; //TODO\n\nexport const getErrors = (t: TFunction, project: gdProject): ProjectErrors => {\n  const errors: ProjectErrors = {};\n\n  const addError = (\n    propertyName: string,\n    type: 'error' | 'warning',\n    message: string,\n    extraExplanation: string = ''\n  ) => {\n    if (!errors[propertyName]) errors[propertyName] = [];\n\n    errors[propertyName].push({\n      type,\n      message,\n      extraExplanation,\n    });\n  };\n\n  if (!project.getPackageName()) {\n    addError(\n      'packageName',\n      'error',\n      t('The package name is empty.'),\n      t('Choose and enter a package name in the game properties.')\n    );\n  } else if (project.getPackageName().length >= 255) {\n    addError(\n      'packageName',\n      'error',\n      t('The package name is too long.'),\n      t('Change the package name in the game properties.')\n    );\n  } else if (!validatePackageName(project.getPackageName())) {\n    addError(\n      'packageName',\n      'error',\n      t(\n        'The package name is containing invalid characters or not following the convention \"xxx.yyy.zzz\" (numbers allowed after a letter only).'\n      ),\n      t('Change the package name in the game properties.')\n    );\n  }\n\n  if (!project.getName()) {\n    addError(\n      'name',\n      'error',\n      t('The name of your game is too long.'),\n      t('Change the name in the game properties.')\n    );\n  }\n\n  if (!project.getVersion() || project.getVersion().split('.').length < 3) {\n    addError(\n      'packageName',\n      'error',\n      t(\"The version that you've set for the game is invalid.\"),\n      t('Enter a version in the game properties.')\n    );\n  }\n\n  return errors;\n};\n\nexport const displayProjectErrorsBox = (\n  t: TFunction,\n  errors: ProjectErrors\n): boolean => {\n  if (!Object.keys(errors).length) return true;\n\n  showErrorBox(\n    t(\n      'Your game has some invalid elements, please fix these before continuing:'\n    ) +\n      '\\n\\n' +\n      values(errors)\n        .map(errors =>\n          errors.map((error: ProjectError) => `- ${error.message}`).join('\\n')\n        )\n        .join('\\n')\n  );\n\n  return false;\n};\n","// @flow\nimport React, { Component } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport { Column, Line } from '../UI/Grid';\nimport randomColor from 'randomcolor';\nimport SearchBar from '../UI/SearchBar';\n\ntype Props = {|\n  value: string,\n  onChange: string => void,\n  chosenChip: string,\n  onChooseChip: string => void,\n  chips: ?Array<{| text: string, value: string |}>,\n  onRequestSearch: () => void,\n|};\n\nconst styles = {\n  chip: {\n    margin: 2,\n  },\n  chipsList: {\n    marginTop: 4,\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n};\n\nconst getChipColor = (tag: string) => {\n  return randomColor({\n    seed: tag,\n    luminosity: 'light',\n  });\n};\n\nexport default class SearchbarWithChips extends Component<Props> {\n  _searchBar: ?SearchBar;\n\n  componentDidMount() {\n    if (this._searchBar) this._searchBar.focus();\n  }\n\n  render() {\n    const {\n      chosenChip,\n      onChooseChip,\n      value,\n      onChange,\n      onRequestSearch,\n      chips,\n    } = this.props;\n\n    return (\n      <Column noMargin>\n        <SearchBar\n          value={value}\n          onRequestSearch={onRequestSearch}\n          onChange={value => {\n            onChange(value);\n          }}\n          ref={searchBar => (this._searchBar = searchBar)}\n        />\n        <Line>\n          <Column>\n            <div style={styles.chipsList}>\n              {chips &&\n                chips.map(({ text, value }) => (\n                  <Chip\n                    size=\"small\"\n                    key={value}\n                    style={{\n                      ...styles.chip,\n                      backgroundColor:\n                        !chosenChip || chosenChip === value\n                          ? getChipColor(value)\n                          : undefined,\n                      color:\n                        !chosenChip || chosenChip === value\n                          ? 'black'\n                          : undefined,\n                    }}\n                    onClick={() =>\n                      onChooseChip(chosenChip === value ? '' : value)\n                    }\n                    label={text}\n                  />\n                ))}\n            </div>\n          </Column>\n        </Line>\n      </Column>\n    );\n  }\n}\n","import React from 'react';\nimport Checkbox from '../../UI/Checkbox';\nimport ThemeConsumer from '../../UI/Theme/ThemeConsumer';\n\nconst SPRITE_SIZE = 100;\nexport const thumbnailContainerStyle = {\n  position: 'relative',\n  display: 'inline-block',\n  width: SPRITE_SIZE,\n  height: SPRITE_SIZE,\n  justifyContent: 'center',\n  alignItems: 'center',\n  lineHeight: SPRITE_SIZE + 'px',\n  textAlign: 'center',\n  border: '#AAAAAA 1px solid',\n  borderColor: '#AAAAAA',\n};\n\nconst styles = {\n  spriteThumbnail: {\n    ...thumbnailContainerStyle,\n    background: 'url(\"res/transparentback.png\") repeat',\n  },\n  spriteThumbnailImage: {\n    maxWidth: SPRITE_SIZE,\n    maxHeight: SPRITE_SIZE,\n    verticalAlign: 'middle',\n    pointerEvents: 'none',\n  },\n  checkboxContainer: {\n    textAlign: 'initial',\n    position: 'absolute',\n    width: 34, // Used to position the checkbox near the right border with a proper margin\n    height: 64,\n    bottom: 0,\n    right: 0,\n  },\n};\n\nconst ImageThumbnail = ({\n  project,\n  resourceName,\n  resourcesLoader,\n  style,\n  selectable,\n  selected,\n  onSelect,\n  onContextMenu,\n  muiTheme,\n}) => {\n  return (\n    <ThemeConsumer>\n      {muiTheme => (\n        <div\n          title={resourceName}\n          style={{\n            ...styles.spriteThumbnail,\n            borderColor: selected\n              ? muiTheme.imageThumbnail.selectedBorderColor\n              : undefined,\n            ...style,\n          }}\n          onContextMenu={e => {\n            e.stopPropagation();\n            if (onContextMenu) onContextMenu(e.clientX, e.clientY);\n          }}\n        >\n          <img\n            style={styles.spriteThumbnailImage}\n            alt={resourceName}\n            src={resourcesLoader.getResourceFullUrl(project, resourceName)}\n            crossOrigin=\"anonymous\"\n          />\n          {selectable && (\n            <div style={styles.checkboxContainer}>\n              <Checkbox\n                checked={selected}\n                onCheck={(e, check) => onSelect(check)}\n              />\n            </div>\n          )}\n        </div>\n      )}\n    </ThemeConsumer>\n  );\n};\n\nexport default ImageThumbnail;\n","// @flow\nimport * as React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Close from '@material-ui/icons/Close';\n\nexport const editorBarHeight = 32;\n\ntype Props = {|\n  title: React.Node,\n  displayLeftCloseButton?: boolean,\n  displayRightCloseButton?: boolean,\n  onClose: () => void,\n|};\n\nconst styles = {\n  appBar: {\n    height: editorBarHeight,\n    minHeight: editorBarHeight,\n  },\n  toolbar: {\n    height: editorBarHeight,\n    minHeight: editorBarHeight,\n    paddingLeft: 15,\n    paddingRight: 15,\n  },\n  title: { fontSize: '15px', flexGrow: 1 },\n};\n\nexport default (props: Props) => {\n  return (\n    <AppBar position=\"static\" style={styles.appBar} color=\"primary\">\n      <Toolbar style={styles.toolbar}>\n        {props.displayLeftCloseButton && (\n          <IconButton onClick={props.onClose} edge=\"start\" color=\"inherit\">\n            <Close />\n          </IconButton>\n        )}\n        <Typography variant=\"h6\" style={styles.title}>\n          {props.title}\n        </Typography>\n\n        {props.displayRightCloseButton && (\n          <IconButton onClick={props.onClose} edge=\"end\" color=\"inherit\">\n            <Close />\n          </IconButton>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Column, Line, Spacer } from '../UI/Grid';\nimport Text from '../UI/Text';\nimport BackgroundText from '../UI/BackgroundText';\n\ntype Props = {\n  message?: React.Node,\n  onLogin: () => void,\n  onCreateAccount: () => void,\n};\n\nexport default ({ message, onLogin, onCreateAccount }: Props) => (\n  <Column noMargin>\n    <Line>\n      <Text>\n        {message || (\n          <Trans>\n            You are not connected. Create an account to access to GDevelop\n            online services and build your game for Android, Windows, macOS and\n            Linux in one click!\n          </Trans>\n        )}\n      </Text>\n    </Line>\n    <Line justifyContent=\"center\" alignItems=\"baseline\">\n      <RaisedButton\n        label={<Trans>Create my account</Trans>}\n        onClick={onCreateAccount}\n        primary\n      />\n      <Spacer />\n      <Spacer />\n      <BackgroundText>or</BackgroundText>\n      <Spacer />\n      <FlatButton label={<Trans>Login</Trans>} onClick={onLogin} />\n    </Line>\n  </Column>\n);\n","// @flow\nimport * as React from 'react';\nimport EventsSheet from '../../EventsSheet';\nimport { serializeToJSObject } from '../../Utils/Serializer';\nimport BaseEditor from './BaseEditor';\n\nexport default class EventsEditor extends BaseEditor {\n  editor: ?EventsSheet;\n\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  getSerializedElements() {\n    const layout = this.getLayout();\n    if (!layout) return {};\n\n    return {\n      ...BaseEditor.getLayoutSerializedElements(layout),\n      events: serializeToJSObject(layout.getEvents()),\n    };\n  }\n\n  getLayout(): ?gdLayout {\n    const { project, layoutName } = this.props;\n    if (!project || !project.hasLayoutNamed(layoutName)) return null;\n\n    return project.getLayout(layoutName);\n  }\n\n  render() {\n    const { project, layoutName } = this.props;\n    const layout = this.getLayout();\n    if (!layout) {\n      //TODO: Error component\n      return <div>No layout called {layoutName} found!</div>;\n    }\n\n    return (\n      <EventsSheet\n        {...this.props}\n        ref={editor => (this.editor = editor)}\n        project={project}\n        scope={{\n          layout,\n        }}\n        globalObjectsContainer={project}\n        objectsContainer={layout}\n        events={layout.getEvents()}\n        onPreview={options => this.props.onPreview(project, layout, options)}\n        onOpenExternalEvents={this.props.onOpenExternalEvents}\n        resourceSources={this.props.resourceSources}\n        onChooseResource={this.props.onChooseResource}\n        resourceExternalEditors={this.props.resourceExternalEditors}\n        openInstructionOrExpression={this.props.openInstructionOrExpression}\n      />\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { dropIndicator, cantDropIndicator } from './ClassNames';\n\n/**\n * A Drop indicator line for the events sheet\n */\nexport default function DropIndicator({ canDrop }: {| canDrop: boolean |}) {\n  return <div className={canDrop ? dropIndicator : cantDropIndicator} />;\n}\n","// @flow\nimport * as React from 'react';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport { type ParameterFieldProps } from './ParameterFieldCommons';\n\nexport default class DefaultField extends React.Component<\n  ParameterFieldProps,\n  void\n> {\n  _field: ?any = null;\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const { parameterMetadata } = this.props;\n    const description = parameterMetadata\n      ? parameterMetadata.getDescription()\n      : undefined;\n\n    return (\n      <SemiControlledTextField\n        margin={this.props.isInline ? 'none' : 'dense'}\n        commitOnBlur\n        value={this.props.value}\n        floatingLabelText={description}\n        helperMarkdownText={\n          parameterMetadata ? parameterMetadata.getLongDescription() : undefined\n        }\n        onChange={(text: string) => this.props.onChange(text)}\n        ref={field => (this._field = field)}\n        fullWidth\n      />\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { enumerateObjectsAndGroups } from './EnumerateObjects';\nimport SemiControlledAutoComplete, {\n  type DataSource,\n} from '../UI/SemiControlledAutoComplete';\nimport ListIcon from '../UI/ListIcon';\nimport ObjectsRenderingService from '../ObjectsRendering/ObjectsRenderingService';\nimport { type MessageDescriptor } from '../Utils/i18n/MessageDescriptor.flow';\n\ntype Props = {|\n  project: ?gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  allowedObjectType?: ?string,\n  noGroups?: boolean,\n\n  onChoose?: string => void,\n  onChange: string => void,\n  value: string,\n  errorTextIfInvalid?: React.Node,\n\n  fullWidth?: boolean,\n  floatingLabelText?: React.Node,\n  helperMarkdownText?: ?string,\n  hintText?: MessageDescriptor | string,\n  openOnFocus?: boolean,\n  margin?: 'none' | 'dense',\n|};\n\nconst iconSize = 24;\n\nconst getObjectsAndGroupsDataSource = ({\n  project,\n  globalObjectsContainer,\n  objectsContainer,\n  noGroups,\n  allowedObjectType,\n}: {|\n  project: ?gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  noGroups: ?boolean,\n  allowedObjectType: ?string,\n|}): DataSource => {\n  const list = enumerateObjectsAndGroups(\n    globalObjectsContainer,\n    objectsContainer,\n    allowedObjectType || undefined\n  );\n  const objects = list.allObjectsList.map(({ object }) => {\n    return {\n      text: object.getName(),\n      value: object.getName(),\n      renderIcon: project\n        ? () => (\n            // TODO: This is broken since the changes to ListIcon\n            <ListIcon\n              iconSize={iconSize}\n              src={ObjectsRenderingService.getThumbnail(project, object)}\n            />\n          )\n        : undefined,\n    };\n  });\n  const groups = noGroups\n    ? []\n    : list.allGroupsList.map(({ group }) => {\n        return {\n          text: group.getName(),\n          value: group.getName(),\n        };\n      });\n\n  return [...objects, { type: 'separator' }, ...groups];\n};\n\nexport default class ObjectSelector extends React.Component<Props, {||}> {\n  _field: ?SemiControlledAutoComplete;\n\n  // Don't add a componentWillUnmount that would call onChange. This can lead to\n  // calling callbacks that would then update a deleted instruction parameters.\n\n  focus() {\n    if (this._field) this._field.focus();\n  }\n\n  render() {\n    const {\n      value,\n      onChange,\n      onChoose,\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      allowedObjectType,\n      noGroups,\n      errorTextIfInvalid,\n      margin,\n      ...rest\n    } = this.props;\n\n    const objectAndGroups = getObjectsAndGroupsDataSource({\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      noGroups,\n      allowedObjectType,\n    });\n    const hasValidChoice =\n      objectAndGroups.filter(\n        choice => choice.text !== undefined && value === choice.text\n      ).length !== 0;\n\n    return (\n      <SemiControlledAutoComplete\n        margin={margin}\n        hintText={t`Choose an object`}\n        value={value}\n        onChange={onChange}\n        onChoose={onChoose}\n        dataSource={objectAndGroups}\n        errorText={hasValidChoice ? undefined : errorTextIfInvalid}\n        ref={field => (this._field = field)}\n        {...rest}\n      />\n    );\n  }\n}\n","// @flow\nimport slugs from 'slugs';\nimport * as PIXI from 'pixi.js';\nimport ResourcesLoader from '../ResourcesLoader';\nimport { loadFontFace } from '../Utils/FontFaceLoader';\nconst gd = global.gd;\n\nconst loadedFontFamilies = {};\nconst loadedTextures = {};\nconst invalidTexture = PIXI.Texture.fromImage('res/error48.png');\n\n/**\n * Expose functions to load PIXI textures or fonts, given the names of\n * resources and a gd.Project.\n *\n * This internally uses ResourcesLoader to get the URL of the resources.\n */\nexport default class PixiResourcesLoader {\n  static _initializeTexture(resource: gdResource, texture: any) {\n    if (resource.getKind() !== 'image') return;\n\n    const imageResource = gd.asImageResource(resource);\n    if (!imageResource.isSmooth()) {\n      texture.baseTexture.scaleMode = PIXI.SCALE_MODES.NEAREST;\n    }\n  }\n\n  /**\n   * (Re)load the PIXI texture represented by the given resources.\n   */\n  static loadTextures(\n    project: gdProject,\n    resourceNames: Array<string>,\n    onProgress: (number, number) => void,\n    onComplete: () => void\n  ) {\n    const resourcesManager = project.getResourcesManager();\n    const loader = PIXI.loader;\n    loader.reset();\n    loader.removeAllListeners();\n\n    const allResources = {};\n    resourceNames.forEach(resourceName => {\n      const resource = resourcesManager.getResource(resourceName);\n      const filename = ResourcesLoader.getResourceFullUrl(\n        project,\n        resourceName\n      );\n      loader.add(resourceName, filename);\n      allResources[resourceName] = resource;\n    });\n\n    const totalCount = resourceNames.length;\n    if (!totalCount) {\n      onComplete();\n      return;\n    }\n\n    let loadingCount = 0;\n    loader.once('complete', function(loader, loadedResources) {\n      //Store the loaded textures so that they are ready to use.\n      for (const resourceName in loadedResources) {\n        if (loadedResources.hasOwnProperty(resourceName)) {\n          const resource = resourcesManager.getResource(resourceName);\n          if (resource.getKind() !== 'image') continue;\n\n          loadedTextures[resourceName] = loadedResources[resourceName].texture;\n          PixiResourcesLoader._initializeTexture(\n            resource,\n            loadedTextures[resourceName]\n          );\n        }\n      }\n\n      onComplete();\n    });\n    loader.on('progress', function() {\n      loadingCount++;\n      onProgress(loadingCount, totalCount);\n    });\n\n    loader.load();\n  }\n\n  /**\n   * Return the PIXI texture represented by the given resource.\n   * If not loaded, it will load it.\n   * @returns The PIXI.Texture to be used. It can be loading, so you\n   * should listen to PIXI.Texture `update` event, and refresh your object\n   * if this event is triggered.\n   */\n  static getPIXITexture(project: gdProject, resourceName: string) {\n    if (loadedTextures[resourceName]) {\n      return loadedTextures[resourceName];\n    }\n\n    if (!project.getResourcesManager().hasResource(resourceName))\n      return invalidTexture;\n\n    const resource = project.getResourcesManager().getResource(resourceName);\n    if (resource.getKind() !== 'image') return invalidTexture;\n\n    loadedTextures[resourceName] = PIXI.Texture.fromImage(\n      ResourcesLoader.getResourceFullUrl(project, resourceName),\n      true /* Treats request as cross-origin */\n    );\n\n    PixiResourcesLoader._initializeTexture(\n      resource,\n      loadedTextures[resourceName]\n    );\n    return loadedTextures[resourceName];\n  }\n\n  /**\n   * Return the PIXI video texture represented by the given resource.\n   * If not loaded, it will load it.\n   * @returns The PIXI.Texture to be used. It can be loading, so you\n   * should listen to PIXI.Texture `update` event, and refresh your object\n   * if this event is triggered.\n   */\n  static getPIXIVideoTexture(project: gdProject, resourceName: string) {\n    if (loadedTextures[resourceName]) {\n      return loadedTextures[resourceName];\n    }\n\n    if (!project.getResourcesManager().hasResource(resourceName))\n      return invalidTexture;\n\n    const resource = project.getResourcesManager().getResource(resourceName);\n    if (resource.getKind() !== 'video') return invalidTexture;\n\n    loadedTextures[resourceName] = PIXI.Texture.fromVideo(\n      ResourcesLoader.getResourceFullUrl(\n        project,\n        resourceName,\n        true /* Disable cache bursting for video because it prevent the video to be recognized as such? */\n      ),\n      PIXI.SCALE_MODES.LINEAR,\n      true /* Treats request as cross-origin */,\n      false /* autoplay */\n    );\n\n    return loadedTextures[resourceName];\n  }\n\n  /**\n   * Load the given font from its url/filename.\n   * @returns a Promise that resolves with the font-family to be used\n   * to render a text with the font.\n   */\n  static loadFontFamily(\n    project: gdProject,\n    resourceName: string\n  ): Promise<string> {\n    // Avoid reloading a font if it's already cached\n    if (loadedFontFamilies[resourceName]) {\n      return Promise.resolve(loadedFontFamilies[resourceName]);\n    }\n\n    const fontFamily = slugs(resourceName);\n    let fullFilename = null;\n    if (project.getResourcesManager().hasResource(resourceName)) {\n      const resource = project.getResourcesManager().getResource(resourceName);\n      if (resource.getKind() === 'font') {\n        fullFilename = ResourcesLoader.getResourceFullUrl(\n          project,\n          resourceName\n        );\n      }\n    } else {\n      // Compatibility with GD <= 5.0-beta56\n      // Assume resourceName is just the filename to the font\n      fullFilename = ResourcesLoader.getFullUrl(project, resourceName);\n      // end of compatibility code\n    }\n\n    if (!fullFilename) {\n      // If no resource is found/resource is not a font, default to Arial,\n      // as done by the game engine too.\n      return Promise.resolve('Arial');\n    }\n\n    return loadFontFace(fontFamily, `url(\"${fullFilename}\")`, {}).then(\n      loadedFace => {\n        loadedFontFamilies[resourceName] = fontFamily;\n\n        return fontFamily;\n      }\n    );\n  }\n\n  /**\n   * Get the font family name for the given font resource.\n   * The font won't be loaded.\n   * @returns The font-family to be used to render a text with the font.\n   */\n  static getFontFamily(project: gdProject, resourceName: string) {\n    if (loadedFontFamilies[resourceName]) {\n      return loadedFontFamilies[resourceName];\n    }\n\n    const fontFamily = slugs(resourceName);\n    return fontFamily;\n  }\n\n  static getInvalidPIXITexture() {\n    return invalidTexture;\n  }\n}\n","// @flow\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../../ResourcesList/ResourceExternalEditor.flow';\nimport { type EventsScope } from '../EventsScope.flow';\n\ntype CommonProps = {|\n  // The parameter\n  parameterMetadata?: gdParameterMetadata,\n  onChange: string => void,\n  value: string,\n\n  // Context\n  project?: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  isInline?: boolean,\n  resourceSources?: Array<ResourceSource>,\n  onChooseResource?: ChooseResourceFunction,\n  resourceExternalEditors?: Array<ResourceExternalEditor>,\n\n  // Pass the ParameterRenderingService to allow to render nested parameters\n  parameterRenderingService?: {\n    components: any,\n    getParameterComponent: (type: string) => any,\n  },\n|};\n\nexport type ExpressionParameters = {|\n  getParametersCount: () => number,\n  getParameter: (index: number) => string,\n|};\n\nexport type ParameterFieldProps = {|\n  ...CommonProps,\n\n  // Instruction in which the parameter is.\n  instruction?: gdInstruction,\n  // Metadata of the instruction in which the parameter is.\n  instructionMetadata?: gdInstructionMetadata,\n  // Expression in which the parameter is.\n  expression?: ExpressionParameters,\n  // Metadata of the instruction in which the parameter is.\n  expressionMetadata?: gdExpressionMetadata,\n\n  // The index of the parameter in the instruction or expression.\n  parameterIndex?: number,\n|};\n\nexport const getParameterValueOrDefault = (\n  value: string,\n  parameterMetadata: ?gdParameterMetadata\n) => {\n  const defaultValue =\n    parameterMetadata && parameterMetadata.isOptional()\n      ? parameterMetadata.getDefaultValue()\n      : '';\n  return value ? value : defaultValue;\n};\n","// @flow\nimport * as React from 'react';\nimport { ListItem } from '../../../UI/List';\nimport ListIcon from '../../../UI/ListIcon';\nimport { type EnumeratedInstructionOrExpressionMetadata } from '../InstructionOrExpressionSelector/EnumeratedInstructionOrExpressionMetadata.js';\nimport { getInstructionListItemValue, getInstructionListItemKey } from './Keys';\n\ntype Props = {|\n  instructionOrExpressionMetadata: EnumeratedInstructionOrExpressionMetadata,\n  iconSize: number,\n  onClick: () => void,\n  selectedValue: ?string,\n|};\n\nexport const renderInstructionOrExpressionListItem = ({\n  instructionOrExpressionMetadata,\n  iconSize,\n  onClick,\n  selectedValue,\n}: Props) => {\n  return (\n    <ListItem\n      key={getInstructionListItemKey(instructionOrExpressionMetadata)}\n      selected={\n        selectedValue ===\n        getInstructionListItemValue(instructionOrExpressionMetadata.type)\n      }\n      primaryText={instructionOrExpressionMetadata.displayedName}\n      secondaryText={instructionOrExpressionMetadata.fullGroupName}\n      leftIcon={\n        <ListIcon\n          iconSize={iconSize}\n          src={instructionOrExpressionMetadata.iconFilename}\n        />\n      }\n      onClick={onClick}\n    />\n  );\n};\n","// @flow\nimport * as React from 'react';\nimport { ListItem } from '../../../UI/List';\nimport ListIcon from '../../../UI/ListIcon';\nimport { type InstructionOrExpressionTreeNode } from '../InstructionOrExpressionSelector/CreateTree';\nimport { type EnumeratedInstructionOrExpressionMetadata } from '../InstructionOrExpressionSelector/EnumeratedInstructionOrExpressionMetadata.js';\nimport Subheader from '../../../UI/Subheader';\nimport flatten from 'lodash/flatten';\nimport { getSubheaderListItemKey, getInstructionListItemValue } from './Keys';\n\ntype Props = {|\n  instructionTreeNode: InstructionOrExpressionTreeNode,\n  onChoose: (type: string, EnumeratedInstructionOrExpressionMetadata) => void,\n  iconSize: number,\n  useSubheaders?: boolean,\n  selectedValue: ?string,\n  initiallyOpenedPath?: ?Array<string>,\n\n  // Optional ref that will be filled with the selected ListItem\n  selectedItemRef?: { current: null | ListItem },\n|};\n\nexport const renderInstructionTree = ({\n  instructionTreeNode,\n  onChoose,\n  iconSize,\n  useSubheaders,\n  selectedValue,\n  selectedItemRef,\n  initiallyOpenedPath,\n}: Props): Array<React$Element<any> | null> => {\n  const [initiallyOpenedKey, ...restOfInitiallyOpenedPath] =\n    initiallyOpenedPath || [];\n\n  return flatten(\n    Object.keys(instructionTreeNode).map(key => {\n      // In theory, we should have a way to distinguish\n      // between instruction (leaf nodes) and group (nodes). We use\n      // the \"type\" properties, but this will fail if a group is called \"type\"\n      // (hence the flow errors, which are valid warnings)\n      const instructionOrGroup = instructionTreeNode[key];\n      if (!instructionOrGroup) return null;\n\n      if (typeof instructionOrGroup.type === 'string') {\n        // $FlowFixMe - see above\n        const instructionInformation: EnumeratedInstructionOrExpressionMetadata = instructionOrGroup;\n        const value = getInstructionListItemValue(instructionOrGroup.type);\n        const selected = selectedValue === value;\n        return (\n          <ListItem\n            key={value}\n            primaryText={key}\n            selected={selected}\n            leftIcon={\n              <ListIcon\n                iconSize={iconSize}\n                src={instructionInformation.iconFilename}\n              />\n            }\n            onClick={() => {\n              onChoose(instructionInformation.type, instructionInformation);\n            }}\n            ref={selected ? selectedItemRef : undefined}\n          />\n        );\n      } else {\n        // $FlowFixMe - see above\n        const groupOfInstructionInformation: InstructionOrExpressionTreeNode = instructionOrGroup;\n        if (useSubheaders) {\n          return [\n            <Subheader key={getSubheaderListItemKey(key)}>{key}</Subheader>,\n          ].concat(\n            renderInstructionTree({\n              instructionTreeNode: groupOfInstructionInformation,\n              onChoose,\n              iconSize,\n              useSubheaders: false,\n              selectedValue,\n              selectedItemRef,\n              initiallyOpenedPath: restOfInitiallyOpenedPath,\n            })\n          );\n        } else {\n          const initiallyOpen = initiallyOpenedKey === key;\n          return (\n            <ListItem\n              key={key}\n              primaryText={key}\n              autoGenerateNestedIndicator={true}\n              initiallyOpen={initiallyOpen}\n              renderNestedItems={() =>\n                renderInstructionTree({\n                  instructionTreeNode: groupOfInstructionInformation,\n                  onChoose,\n                  iconSize,\n                  selectedValue,\n                  selectedItemRef,\n                  initiallyOpenedPath: initiallyOpen\n                    ? restOfInitiallyOpenedPath\n                    : undefined,\n                })\n              }\n            />\n          );\n        }\n      }\n    })\n  );\n};\n","// @flow\nimport { type ExpressionParameters } from './ParameterFieldCommons';\nconst gd = global.gd;\n\n/**\n * Given an instruction or an expression and a parameter number,\n * return the name of the object that this parameter (usually, a \"behavior\" or a \"objectvar\") should use.\n *\n * This is an extension to ParameterMetadataTools.cpp and ParameterMetadataTools.h.\n * It's only here to ease to search of the object name in fields like BehaviorField or\n * ObjectVariableField.\n */\nexport const getLastObjectParameterValue = ({\n  instructionMetadata,\n  instruction,\n  expressionMetadata,\n  expression,\n  parameterIndex,\n}: {|\n  instructionMetadata: ?gdInstructionMetadata,\n  instruction: ?gdInstruction,\n  expressionMetadata: ?gdExpressionMetadata,\n  expression: ?ExpressionParameters,\n  parameterIndex: ?number,\n|}): ?string => {\n  if (parameterIndex === undefined || parameterIndex == null) {\n    // No parameter index given: the parameter is not even in a list of parameters\n    return null;\n  }\n\n  let objectName = null;\n  if (instructionMetadata && instruction) {\n    const objectParameterIndex = gd.ParameterMetadataTools.getObjectParameterIndexFor(\n      instructionMetadata.getParameters(),\n      parameterIndex\n    );\n    if (\n      objectParameterIndex >= 0 &&\n      objectParameterIndex < instruction.getParametersCount()\n    ) {\n      objectName = instruction.getParameter(objectParameterIndex);\n    }\n  } else if (expressionMetadata && expression) {\n    const objectParameterIndex = gd.ParameterMetadataTools.getObjectParameterIndexFor(\n      expressionMetadata.getParameters(),\n      parameterIndex\n    );\n    if (\n      objectParameterIndex >= 0 &&\n      objectParameterIndex < expression.getParametersCount()\n    ) {\n      objectName = expression.getParameter(objectParameterIndex);\n    }\n  }\n\n  return objectName;\n};\n","// @flow\n\nexport const shortenString = (str: string, maxLength: number) => {\n  return str.length > maxLength ? str.substring(0, maxLength) + '...' : str;\n};\n\nexport const makeNonBreakable = (str: string) => {\n  return str.replace(/\\s/g, '\\xa0'); // Non-breakable space is char 0xa0 (160 dec)\n};\n","// @flow\nimport * as React from 'react';\nimport {\n  DragSource,\n  type DragSourceMonitor,\n  type DragSourceConnector,\n  type ConnectDragSource,\n  DropTarget,\n  type DropTargetMonitor,\n  type DropTargetConnector,\n  type ConnectDropTarget,\n} from 'react-dnd';\n\ntype Props<DraggedItemType> = {|\n  children: ({\n    connectDragSource: ConnectDragSource,\n    connectDropTarget: ConnectDropTarget,\n    isOver: boolean,\n    canDrop: boolean,\n  }) => React.Node,\n  beginDrag: () => DraggedItemType,\n  canDrop: (item: DraggedItemType) => boolean,\n  drop: () => void,\n|};\n\ntype DragSourceProps = {|\n  connectDragSource: ConnectDragSource,\n|};\n\ntype DropTargetProps = {|\n  connectDropTarget: ConnectDropTarget,\n  isOver: boolean,\n  canDrop: boolean,\n|};\n\ntype InnerDragSourceAndDropTargetProps<DraggedItemType> = {|\n  ...Props<DraggedItemType>,\n  ...DragSourceProps,\n  ...DropTargetProps,\n|};\n\nexport const makeDragSourceAndDropTarget = <DraggedItemType>(\n  reactDndType: string\n): ((Props<DraggedItemType>) => React.Node) => {\n  const sourceSpec = {\n    beginDrag(props: InnerDragSourceAndDropTargetProps<DraggedItemType>) {\n      return props.beginDrag();\n    },\n  };\n\n  function sourceCollect(\n    connect: DragSourceConnector,\n    monitor: DragSourceMonitor\n  ): DragSourceProps {\n    return {\n      connectDragSource: connect.dragSource(),\n    };\n  }\n\n  const targetSpec = {\n    canDrop(props: Props<DraggedItemType>, monitor: DropTargetMonitor) {\n      const item = monitor.getItem();\n      return item && props.canDrop(item);\n    },\n    drop(props: Props<DraggedItemType>, monitor: DropTargetMonitor) {\n      if (monitor.didDrop()) {\n        return; // Drop already handled by another target\n      }\n      props.drop();\n    },\n  };\n\n  function targetCollect(\n    connect: DropTargetConnector,\n    monitor: DropTargetMonitor\n  ): DropTargetProps {\n    return {\n      connectDropTarget: connect.dropTarget(),\n      isOver: monitor.isOver({ shallow: true }),\n      canDrop: monitor.canDrop(),\n    };\n  }\n\n  const InnerDragSourceAndDropTarget = DragSource(\n    reactDndType,\n    sourceSpec,\n    sourceCollect\n  )(\n    DropTarget(reactDndType, targetSpec, targetCollect)(\n      ({ children, connectDragSource, connectDropTarget, isOver, canDrop }) => {\n        return children({\n          connectDragSource,\n          connectDropTarget,\n          isOver,\n          canDrop,\n        });\n      }\n    )\n  );\n\n  return (props: Props<DraggedItemType>) => (\n    <InnerDragSourceAndDropTarget {...props} />\n  );\n};\n","// @flow\nimport Clipboard from '../Utils/Clipboard';\nimport {\n  type SelectionState,\n  getSelectedEvents,\n  hasEventSelected,\n  getSelectedEventContexts,\n  hasInstructionSelected,\n  hasInstructionsListSelected,\n  getSelectedInstructionsContexts,\n  getSelectedInstructionsListsContexts,\n  type InstructionsListContext,\n} from './SelectionHandler';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\nconst gd = global.gd;\n\nexport const CLIPBOARD_KIND = 'EventsAndInstructions';\n\nexport const hasClipboardEvents = () => {\n  return (\n    Clipboard.has(CLIPBOARD_KIND) &&\n    Clipboard.get(CLIPBOARD_KIND).eventsCount > 0\n  );\n};\n\nexport const hasClipboardConditions = () => {\n  return (\n    Clipboard.has(CLIPBOARD_KIND) &&\n    Clipboard.get(CLIPBOARD_KIND).conditionsCount > 0\n  );\n};\n\nexport const hasClipboardActions = () => {\n  return (\n    Clipboard.has(CLIPBOARD_KIND) &&\n    Clipboard.get(CLIPBOARD_KIND).actionsCount > 0\n  );\n};\n\nexport const copySelectionToClipboard = (selection: SelectionState) => {\n  const eventsList = new gd.EventsList();\n  const actionsList = new gd.InstructionsList();\n  const conditionsList = new gd.InstructionsList();\n\n  getSelectedEvents(selection).forEach(event =>\n    eventsList.insertEvent(event, eventsList.getEventsCount())\n  );\n  getSelectedInstructionsContexts(selection).forEach(instructionContext => {\n    if (instructionContext.isCondition) {\n      conditionsList.insert(\n        instructionContext.instruction,\n        conditionsList.size()\n      );\n    } else {\n      actionsList.insert(instructionContext.instruction, actionsList.size());\n    }\n  });\n\n  Clipboard.set(CLIPBOARD_KIND, {\n    eventsList: serializeToJSObject(eventsList),\n    eventsCount: eventsList.getEventsCount(),\n    actionsList: serializeToJSObject(actionsList),\n    actionsCount: actionsList.size(),\n    conditionsList: serializeToJSObject(conditionsList),\n    conditionsCount: conditionsList.size(),\n  });\n\n  eventsList.delete();\n  actionsList.delete();\n  conditionsList.delete();\n};\n\nexport const pasteEventsFromClipboardInSelection = (\n  project: gdProject,\n  selection: SelectionState\n): boolean => {\n  if (!hasEventSelected(selection) || !hasClipboardEvents()) return false;\n\n  const eventsList = new gd.EventsList();\n  unserializeFromJSObject(\n    eventsList,\n    Clipboard.get(CLIPBOARD_KIND).eventsList,\n    'unserializeFrom',\n    project\n  );\n  getSelectedEventContexts(selection).forEach(eventContext => {\n    eventContext.eventsList.insertEvents(\n      eventsList,\n      0,\n      eventsList.getEventsCount(),\n      eventContext.indexInList\n    );\n  });\n  eventsList.delete();\n\n  return true;\n};\n\nexport const pasteInstructionsFromClipboardInSelection = (\n  project: gdProject,\n  selection: SelectionState\n): boolean => {\n  if (\n    (!hasInstructionSelected(selection) &&\n      !hasInstructionsListSelected(selection)) ||\n    (!hasClipboardConditions() && !hasClipboardActions())\n  )\n    return false;\n\n  const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n  const actionsList = new gd.InstructionsList();\n  const conditionsList = new gd.InstructionsList();\n  unserializeFromJSObject(\n    actionsList,\n    clipboardContent.actionsList,\n    'unserializeFrom',\n    project\n  );\n  unserializeFromJSObject(\n    conditionsList,\n    clipboardContent.conditionsList,\n    'unserializeFrom',\n    project\n  );\n  getSelectedInstructionsContexts(selection).forEach(instructionContext => {\n    if (instructionContext.isCondition) {\n      instructionContext.instrsList.insertInstructions(\n        conditionsList,\n        0,\n        conditionsList.size(),\n        instructionContext.indexInList\n      );\n    } else {\n      instructionContext.instrsList.insertInstructions(\n        actionsList,\n        0,\n        actionsList.size(),\n        instructionContext.indexInList\n      );\n    }\n  });\n  getSelectedInstructionsListsContexts(selection).forEach(\n    instructionsListContext => {\n      if (instructionsListContext.isCondition) {\n        instructionsListContext.instrsList.insertInstructions(\n          conditionsList,\n          0,\n          conditionsList.size(),\n          instructionsListContext.instrsList.size()\n        );\n      } else {\n        instructionsListContext.instrsList.insertInstructions(\n          actionsList,\n          0,\n          actionsList.size(),\n          instructionsListContext.instrsList.size()\n        );\n      }\n    }\n  );\n  conditionsList.delete();\n  actionsList.delete();\n\n  return true;\n};\n\nexport const pasteInstructionsFromClipboardInInstructionsList = (\n  project: gdProject,\n  instructionsListContext: InstructionsListContext\n) => {\n  if (!hasClipboardConditions() && !hasClipboardActions()) return false;\n\n  const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n  const actionsList = new gd.InstructionsList();\n  const conditionsList = new gd.InstructionsList();\n  unserializeFromJSObject(\n    actionsList,\n    clipboardContent.actionsList,\n    'unserializeFrom',\n    project\n  );\n  unserializeFromJSObject(\n    conditionsList,\n    clipboardContent.conditionsList,\n    'unserializeFrom',\n    project\n  );\n\n  if (instructionsListContext.isCondition) {\n    instructionsListContext.instrsList.insertInstructions(\n      conditionsList,\n      0,\n      conditionsList.size(),\n      instructionsListContext.instrsList.size()\n    );\n  } else {\n    instructionsListContext.instrsList.insertInstructions(\n      actionsList,\n      0,\n      actionsList.size(),\n      instructionsListContext.instrsList.size()\n    );\n  }\n  conditionsList.delete();\n  actionsList.delete();\n\n  return true;\n};\n","// @flow\nimport * as React from 'react';\nimport {\n  DropTarget,\n  type DropTargetMonitor,\n  type DropTargetConnector,\n  type ConnectDropTarget,\n} from 'react-dnd';\n\ntype Props<DraggedItemType> = {|\n  children: ({\n    connectDropTarget: ConnectDropTarget,\n    isOver: boolean,\n    canDrop: boolean,\n  }) => React.Node,\n  canDrop: (item: DraggedItemType) => boolean,\n  hover?: (monitor: DropTargetMonitor) => void,\n  drop: (monitor: DropTargetMonitor) => void,\n|};\n\ntype DropTargetProps = {|\n  connectDropTarget: ConnectDropTarget,\n  isOver: boolean,\n  canDrop: boolean,\n|};\n\nexport const makeDropTarget = <DraggedItemType>(\n  reactDndType: string\n): ((Props<DraggedItemType>) => React.Node) => {\n  const targetSpec = {\n    canDrop(props: Props<DraggedItemType>, monitor: DropTargetMonitor) {\n      const item = monitor.getItem();\n      return item && props.canDrop(item);\n    },\n    hover(props: Props<DraggedItemType>, monitor: DropTargetMonitor) {\n      if (props.hover) props.hover(monitor);\n    },\n    drop(props: Props<DraggedItemType>, monitor: DropTargetMonitor) {\n      if (monitor.didDrop()) {\n        return; // Drop already handled by another target\n      }\n      props.drop(monitor);\n    },\n  };\n\n  function targetCollect(\n    connect: DropTargetConnector,\n    monitor: DropTargetMonitor\n  ): DropTargetProps {\n    return {\n      connectDropTarget: connect.dropTarget(),\n      isOver: monitor.isOver({ shallow: true }),\n      canDrop: monitor.canDrop(),\n    };\n  }\n\n  const InnerDropTarget = DropTarget(reactDndType, targetSpec, targetCollect)(\n    ({ children, connectDropTarget, isOver, canDrop }) => {\n      return children({\n        connectDropTarget,\n        isOver,\n        canDrop,\n      });\n    }\n  );\n\n  return (props: Props<DraggedItemType>) => <InnerDropTarget {...props} />;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport * as React from 'react';\nimport Toggle from '../../UI/Toggle';\nimport { mapFor } from '../../Utils/MapFor';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport ParameterRenderingService from '../ParameterRenderingService';\nimport HelpButton from '../../UI/HelpButton';\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../../ResourcesList/ResourceExternalEditor.flow';\nimport { Line, Spacer } from '../../UI/Grid';\nimport AlertMessage from '../../UI/AlertMessage';\nimport { getExtraInstructionInformation } from '../../Hints';\nimport { isAnEventFunctionMetadata } from '../../EventsFunctionsExtensionsLoader';\nimport OpenInNew from '@material-ui/icons/OpenInNew';\nimport IconButton from '../../UI/IconButton';\nimport { type EventsScope } from '../EventsScope.flow';\nimport { getObjectParameterIndex } from './InstructionOrExpressionSelector/EnumerateInstructions';\nimport Text from '../../UI/Text';\nconst gd = global.gd;\n\nconst styles = {\n  // When displaying parameters, take all the height:\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n  },\n  // When displaying the empty message, center the message:\n  emptyContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  parametersContainer: {\n    flex: 1,\n    overflowY: 'auto',\n  },\n  icon: {\n    width: 24,\n    height: 24,\n    marginRight: 8,\n    flexShrink: 0,\n  },\n  invertToggle: {\n    marginTop: 8,\n  },\n};\n\ntype Props = {|\n  project: gdProject,\n  scope: EventsScope,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  objectName?: ?string,\n  instruction: gdInstruction,\n  isCondition: boolean,\n  focusOnMount?: boolean,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  style?: Object,\n  openInstructionOrExpression: (\n    extension: gdPlatformExtension,\n    type: string\n  ) => void,\n  noHelpButton?: boolean,\n|};\ntype State = {|\n  isDirty: boolean,\n|};\n\nconst setupInstruction = (\n  instruction: gdInstruction,\n  instructionMetadata: gdInstructionMetadata,\n  objectName: ?string\n) => {\n  instruction.setParametersCount(instructionMetadata.getParametersCount());\n\n  if (objectName) {\n    const objectParameterIndex = getObjectParameterIndex(instructionMetadata);\n    if (objectParameterIndex === -1) {\n      console.error(\n        `Instruction \"${instructionMetadata.getFullName()}\" is used for an object, but does not have an object as first parameter`\n      );\n      return;\n    }\n\n    instruction.setParameter(objectParameterIndex, objectName);\n  }\n};\n\nconst isParameterVisible = (\n  parameterMetadata: gdParameterMetadata,\n  parameterIndex: number,\n  objectParameterIndex: ?number\n) => {\n  // Hide parameters that are used only for code generation\n  if (parameterMetadata.isCodeOnly()) return false;\n\n  // For objects, hide the first object parameter, which is by convention the object name.\n  if (parameterIndex === objectParameterIndex) return false;\n\n  return true;\n};\n\nexport default class InstructionParametersEditor extends React.Component<\n  Props,\n  State\n> {\n  _firstVisibleField: ?any = {};\n  state = {\n    isDirty: false,\n  };\n\n  componentDidMount() {\n    if (this.props.focusOnMount) {\n      setTimeout(() => {\n        this.focus();\n      }, 300); // Let the time to the dialog that is potentially containing the InstructionParametersEditor to finish its transition.\n    }\n  }\n\n  focus() {\n    // Verify that there is a field to focus.\n    if (\n      this._getVisibleParametersCount(\n        this._getInstructionMetadata(),\n        this.props.objectName\n      ) !== 0\n    ) {\n      if (this._firstVisibleField && this._firstVisibleField.focus) {\n        this._firstVisibleField.focus();\n      }\n    }\n  }\n\n  _getVisibleParametersCount(\n    instructionMetadata: ?gdInstructionMetadata,\n    objectName: ?string\n  ) {\n    if (!instructionMetadata) return 0;\n\n    const objectParameterIndex = objectName\n      ? getObjectParameterIndex(instructionMetadata)\n      : -1;\n\n    return mapFor(0, instructionMetadata.getParametersCount(), i => {\n      if (!instructionMetadata) return false;\n      const parameterMetadata = instructionMetadata.getParameter(i);\n\n      return isParameterVisible(parameterMetadata, i, objectParameterIndex);\n    }).filter(isVisible => isVisible).length;\n  }\n\n  _getInstructionMetadata = (): ?gdInstructionMetadata => {\n    const { instruction, isCondition, project } = this.props;\n    const type = instruction.getType();\n    if (!type) return null;\n\n    return isCondition\n      ? gd.MetadataProvider.getConditionMetadata(\n          project.getCurrentPlatform(),\n          type\n        )\n      : gd.MetadataProvider.getActionMetadata(\n          project.getCurrentPlatform(),\n          type\n        );\n  };\n\n  _openExtension = (i18n: I18nType) => {\n    if (this.state.isDirty) {\n      //eslint-disable-next-line\n      const answer = confirm(\n        i18n._(\n          t`You've made some changes here. Are you sure you want to discard them and open the function?`\n        )\n      );\n      if (!answer) return;\n    }\n\n    const { instruction, isCondition, project } = this.props;\n    const type = instruction.getType();\n    if (!type) return null;\n\n    const extension = isCondition\n      ? gd.MetadataProvider.getExtensionAndConditionMetadata(\n          project.getCurrentPlatform(),\n          type\n        ).getExtension()\n      : gd.MetadataProvider.getExtensionAndActionMetadata(\n          project.getCurrentPlatform(),\n          type\n        ).getExtension();\n\n    this.props.openInstructionOrExpression(extension, type);\n  };\n\n  _renderEmpty() {\n    return (\n      <div style={{ ...styles.emptyContainer, ...this.props.style }}>\n        <EmptyMessage>\n          {this.props.isCondition\n            ? 'Choose a condition (or an object then a condition) on the left'\n            : 'Choose an action (or an object then an action) on the left'}\n        </EmptyMessage>\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      instruction,\n      project,\n      globalObjectsContainer,\n      objectsContainer,\n      noHelpButton,\n      objectName,\n      scope,\n    } = this.props;\n\n    const type = instruction.getType();\n    const instructionMetadata = this._getInstructionMetadata();\n    if (!instructionMetadata) return this._renderEmpty();\n\n    const helpPage = instructionMetadata.getHelpPath();\n    const instructionExtraInformation = getExtraInstructionInformation(type);\n    const objectParameterIndex = objectName\n      ? getObjectParameterIndex(instructionMetadata)\n      : -1;\n\n    setupInstruction(instruction, instructionMetadata, objectName);\n\n    let parameterFieldIndex = 0;\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <div style={styles.container}>\n            <Line alignItems=\"center\">\n              <img\n                src={instructionMetadata.getIconFilename()}\n                alt=\"\"\n                style={styles.icon}\n              />\n              <Text>{instructionMetadata.getDescription()}</Text>\n              {isAnEventFunctionMetadata(instructionMetadata) && (\n                <IconButton\n                  onClick={() => {\n                    this._openExtension(i18n);\n                  }}\n                >\n                  <OpenInNew />\n                </IconButton>\n              )}\n            </Line>\n            {instructionExtraInformation && (\n              <Line>\n                <AlertMessage kind={instructionExtraInformation.kind}>\n                  {i18n._(instructionExtraInformation.message)}\n                </AlertMessage>\n              </Line>\n            )}\n            <Spacer />\n            <div key={type} style={styles.parametersContainer}>\n              {mapFor(0, instructionMetadata.getParametersCount(), i => {\n                const parameterMetadata = instructionMetadata.getParameter(i);\n                if (\n                  !isParameterVisible(\n                    parameterMetadata,\n                    i,\n                    objectParameterIndex\n                  )\n                )\n                  return null;\n\n                const parameterMetadataType = parameterMetadata.getType();\n                const ParameterComponent = ParameterRenderingService.getParameterComponent(\n                  parameterMetadataType\n                );\n\n                // Track the field count on screen, to affect the ref to the\n                // first visible field.\n                const isFirstVisibleParameterField = parameterFieldIndex === 0;\n                parameterFieldIndex++;\n\n                return (\n                  <ParameterComponent\n                    instructionMetadata={instructionMetadata}\n                    instruction={instruction}\n                    parameterMetadata={parameterMetadata}\n                    parameterIndex={i}\n                    value={instruction.getParameter(i)}\n                    onChange={value => {\n                      if (instruction.getParameter(i) !== value) {\n                        instruction.setParameter(i, value);\n                        this.setState({\n                          isDirty: true,\n                        });\n                      }\n                    }}\n                    project={project}\n                    scope={scope}\n                    globalObjectsContainer={globalObjectsContainer}\n                    objectsContainer={objectsContainer}\n                    key={i}\n                    parameterRenderingService={ParameterRenderingService}\n                    resourceSources={this.props.resourceSources}\n                    onChooseResource={this.props.onChooseResource}\n                    resourceExternalEditors={this.props.resourceExternalEditors}\n                    ref={field => {\n                      if (isFirstVisibleParameterField) {\n                        this._firstVisibleField = field;\n                      }\n                    }}\n                  />\n                );\n              })}\n              {this._getVisibleParametersCount(\n                instructionMetadata,\n                objectName\n              ) === 0 && (\n                <EmptyMessage>\n                  <Trans>There is nothing to configure.</Trans>\n                </EmptyMessage>\n              )}\n              {this.props.isCondition && (\n                <Toggle\n                  label={<Trans>Invert condition</Trans>}\n                  labelPosition=\"right\"\n                  toggled={instruction.isInverted()}\n                  style={styles.invertToggle}\n                  onToggle={(e, enabled) => {\n                    instruction.setInverted(enabled);\n                    this.forceUpdate();\n                  }}\n                />\n              )}\n            </div>\n            <Line>\n              {!noHelpButton && helpPage && (\n                <HelpButton\n                  helpPagePath={instructionMetadata.getHelpPath()}\n                  label={\n                    this.props.isCondition ? (\n                      <Trans>Help for this condition</Trans>\n                    ) : (\n                      <Trans>Help for this action</Trans>\n                    )\n                  }\n                />\n              )}\n            </Line>\n          </div>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport React from 'react';\nimport { type Tags, removeTag } from '../Utils/TagsHelper';\nimport Chip from '@material-ui/core/Chip';\n\nconst styles = {\n  chipContainer: {\n    display: 'flex',\n    overflowX: 'auto',\n    margin: 4,\n  },\n  chip: {\n    marginLeft: 2,\n    marginRight: 2,\n  },\n};\n\ntype Props = {|\n  tags: Tags,\n  onChange: Tags => void,\n|};\n\nexport default ({ tags, onChange }: Props) => {\n  if (!tags.length) return null;\n\n  return (\n    <div style={styles.chipContainer}>\n      {tags.map(tag => (\n        <Chip\n          key={tag}\n          size=\"small\"\n          style={styles.chip}\n          onDelete={() => onChange(removeTag(tags, tag))}\n          label={tag}\n        />\n      ))}\n    </div>\n  );\n};\n","// @flow\nimport { serializeToJSObject, unserializeFromJSObject } from './Serializer';\n\n// Tools function to keep track of the history of changes made\n// on a serializable object from libGD.js\n\nexport type HistoryState = {|\n  undoHistory: Array<Object>,\n  current: Object,\n  redoHistory: Array<Object>,\n  maxSize: number,\n|};\n\n/**\n * Return the initial state of the history\n * @param {*} serializableObject\n */\nexport const getHistoryInitialState = (\n  serializableObject: gdSerializable,\n  { historyMaxSize }: { historyMaxSize: number }\n): HistoryState => {\n  return {\n    undoHistory: [],\n    current: serializeToJSObject(serializableObject),\n    redoHistory: [],\n    maxSize: historyMaxSize,\n  };\n};\n\n/**\n * Return true if redo can be applied for the given history\n * @param {*} history\n */\nexport const canRedo = (history: HistoryState): boolean => {\n  return !!history.redoHistory.length;\n};\n\n/**\n * Return true if undo can be applied for the given history\n * @param {*} history\n */\nexport const canUndo = (history: HistoryState): boolean => {\n  return !!history.undoHistory.length;\n};\n\n/**\n * Save a new state of the given serializableObject to the history\n * @param {*} history\n * @param {*} serializableObject\n */\nexport const saveToHistory = (\n  history: HistoryState,\n  serializableObject: gdSerializable\n): HistoryState => {\n  const newUndoHistory = [...history.undoHistory, history.current];\n  if (newUndoHistory.length > history.maxSize) {\n    newUndoHistory.splice(0, newUndoHistory.length - history.maxSize);\n  }\n\n  return {\n    undoHistory: newUndoHistory,\n    current: serializeToJSObject(serializableObject),\n    redoHistory: [],\n    maxSize: history.maxSize,\n  };\n};\n\n/**\n * Update the serializableObject to undo the last changes.\n * /!\\ This mutates the serializableObject and there could be objects owned by it\n * deleted or becoming invalid. Be sure to drop/refresh any reference to them.\n *\n * @param {*} history\n * @param {*} serializableObject\n */\nexport const undo = (\n  history: HistoryState,\n  serializableObject: gdSerializable,\n  project: ?gdProject = undefined\n): HistoryState => {\n  if (!history.undoHistory.length) {\n    return history;\n  }\n\n  const newCurrent = history.undoHistory[history.undoHistory.length - 1];\n  unserializeFromJSObject(\n    serializableObject,\n    newCurrent,\n    'unserializeFrom',\n    project\n  );\n\n  return {\n    undoHistory: history.undoHistory.slice(0, -1),\n    current: newCurrent,\n    redoHistory: [...history.redoHistory, history.current],\n    maxSize: history.maxSize,\n  };\n};\n\n/**\n * Update the serializableObject to undo the last changes.\n * /!\\ This mutates the serializableObject and there could be objects owned by it\n * deleted or becoming invalid. Be sure to drop/refresh any reference to them.\n *\n * @param {*} history\n * @param {*} serializableObject\n */\nexport const redo = (\n  history: HistoryState,\n  serializableObject: gdSerializable,\n  project: ?gdProject = undefined\n): HistoryState => {\n  if (!history.redoHistory.length) {\n    return history;\n  }\n\n  const newCurrent = history.redoHistory[history.redoHistory.length - 1];\n  unserializeFromJSObject(\n    serializableObject,\n    newCurrent,\n    'unserializeFrom',\n    project\n  );\n\n  return {\n    undoHistory: [...history.undoHistory, history.current],\n    current: newCurrent,\n    redoHistory: history.redoHistory.slice(0, -1),\n    maxSize: history.maxSize,\n  };\n};\n","// @flow\nimport { unserializeFromJSObject } from '../../Utils/Serializer';\nimport { mapVector } from '../../Utils/MapFor';\nimport { getFreeEventsFunctionType } from '../../EventsFunctionsExtensionsLoader';\nimport getObjectGroupByName from '../../Utils/GetObjectGroupByName';\nconst gd = global.gd;\n\n/**\n * Set up an events function with the given serialized events,\n * so that the function contains these events, expecting the objects\n * as parameters.\n */\nexport const setupFunctionFromEvents = ({\n  globalObjectsContainer,\n  objectsContainer,\n  serializedEvents,\n  project,\n  eventsFunction,\n}: {\n  project: gdProject,\n  globalObjectsContainer: gdObjectsContainer,\n  objectsContainer: gdObjectsContainer,\n  serializedEvents: Object,\n  eventsFunction: gdEventsFunction,\n}) => {\n  // Set up the function\n  eventsFunction.setName('MyFunction');\n  eventsFunction.setFunctionType(gd.EventsFunction.Action);\n  unserializeFromJSObject(\n    eventsFunction.getEvents(),\n    serializedEvents,\n    'unserializeFrom',\n    project\n  );\n\n  // Analyze events...\n  const eventsContextAnalyzer = new gd.EventsContextAnalyzer(\n    gd.JsPlatform.get(),\n    globalObjectsContainer,\n    objectsContainer\n  );\n  eventsContextAnalyzer.launch(eventsFunction.getEvents());\n  const eventsContext = eventsContextAnalyzer.getEventsContext();\n\n  // ...to extract objects and groups\n  const objectOrGroupNames: Array<string> = eventsContext\n    .getReferencedObjectOrGroupNames()\n    .toNewVectorString()\n    .toJSArray();\n  const objectNames: Array<string> = eventsContext\n    .getObjectNames()\n    .toNewVectorString()\n    .toJSArray();\n  const groups: Array<gdObjectGroup> = objectOrGroupNames\n    // Filter to only keep groups\n    .filter(\n      (objectOrGroupName: string) =>\n        objectNames.indexOf(objectOrGroupName) === -1\n    )\n    .map(groupName =>\n      getObjectGroupByName(globalObjectsContainer, objectsContainer, groupName)\n    )\n    .filter(Boolean);\n\n  // Compute what the parameters should be:\n  // 1) The groups, but only the ones that have no object directly referenced.\n  const parameterGroups: Array<gdObjectGroup> = groups.filter(group => {\n    return !objectOrGroupNames.some(referencedObjectOrGroupName =>\n      group.find(referencedObjectOrGroupName)\n    );\n  });\n  const parameterGroupNames: Array<string> = parameterGroups.map(group =>\n    group.getName()\n  );\n\n  // 2) The objects, but only the ones that are already in the groups in parameters\n  const parameterObjectNames: Array<string> = objectNames.filter(objectName => {\n    return !parameterGroups.some(group => group.find(objectName));\n  });\n\n  // Create parameters for these objects (or these groups without any object directly referenced)\n  const parameters = eventsFunction.getParameters();\n  parameters.clear();\n  [...parameterGroupNames, ...parameterObjectNames].forEach(objectName => {\n    const newParameter = new gd.ParameterMetadata();\n    newParameter.setType('objectList');\n    newParameter.setName(objectName);\n    newParameter.setExtraInfo(\n      gd.getTypeOfObject(\n        globalObjectsContainer,\n        objectsContainer,\n        objectName,\n        true\n      )\n    );\n    parameters.push_back(newParameter);\n\n    const behaviorNames: Array<string> = eventsContext\n      .getBehaviorNamesOfObjectOrGroup(objectName)\n      .toNewVectorString()\n      .toJSArray();\n\n    behaviorNames.forEach(behaviorName => {\n      const newParameter = new gd.ParameterMetadata();\n      newParameter.setType('behavior');\n      newParameter.setName(behaviorName);\n      newParameter.setExtraInfo(\n        gd.getTypeOfBehavior(\n          globalObjectsContainer,\n          objectsContainer,\n          behaviorName\n        )\n      );\n      parameters.push_back(newParameter);\n    });\n  });\n\n  // Import groups that are used in events, but are not in parameters,\n  // inside the events function groups.\n  groups\n    .filter(group => !parameterGroupNames.includes(group.getName()))\n    .forEach(group => {\n      if (group) {\n        eventsFunction.getObjectGroups().insert(group, 0);\n      }\n    });\n\n  eventsContextAnalyzer.delete();\n};\n\n/**\n * Create an instruction to call the given events function\n */\nexport const createNewInstructionForEventsFunction = (\n  extensionName: string,\n  eventsFunction: gdEventsFunction\n): gdInstruction => {\n  const action = new gd.Instruction(); //Add a simple action\n  const runtimeSceneParameterCount = 1; // By convention, first parameter is always the Runtime Scene.\n  const contextParameterCount = 1; // By convention, latest parameter is always the eventsFunctionContext of the calling function (if any).\n\n  action.setType(getFreeEventsFunctionType(extensionName, eventsFunction));\n  action.setParametersCount(\n    eventsFunction.getParameters().size() +\n      runtimeSceneParameterCount +\n      contextParameterCount\n  );\n\n  mapVector(eventsFunction.getParameters(), (parameterMetadata, index) => {\n    action.setParameter(\n      runtimeSceneParameterCount + index,\n      parameterMetadata.getName()\n    );\n  });\n\n  return action;\n};\n\n/**\n * Validate that a function name is valid.\n */\nexport const validateEventsFunctionName = (functionName: string) => {\n  return gd.Project.validateObjectName(functionName);\n};\n\n/**\n * Validate that an events functions extension name is valid.\n */\nexport const validateExtensionName = (extensionName: string) => {\n  return gd.Project.validateObjectName(extensionName);\n};\n\n/**\n * Validate that an events functions extension name is unique in a project.\n */\nexport const validateExtensionNameUniqueness = (\n  project: gdProject,\n  extensionName: string\n) => {\n  return !project.hasEventsFunctionsExtensionNamed(extensionName);\n};\n\n/**\n * Validate that an events function name is unique in a project extension.\n */\nexport const validateEventsFunctionNameUniqueness = (\n  project: gdProject,\n  extensionName: string,\n  eventsFunction: gdEventsFunction\n) => {\n  if (project.hasEventsFunctionsExtensionNamed(extensionName)) {\n    const eventsFunctionsExtension = project.getEventsFunctionsExtension(\n      extensionName\n    );\n\n    return !eventsFunctionsExtension.hasEventsFunctionNamed(\n      eventsFunction.getName()\n    );\n  }\n\n  return true;\n};\n\n/**\n * Return true if the events function can be added to the given extension\n * without any conflict/invalid name.\n */\nexport const canCreateEventsFunction = (\n  project: gdProject,\n  extensionName: string,\n  eventsFunction: gdEventsFunction\n) => {\n  return (\n    extensionName !== '' &&\n    validateExtensionName(extensionName) &&\n    eventsFunction.getName() !== '' &&\n    validateEventsFunctionName(eventsFunction.getName()) &&\n    validateEventsFunctionNameUniqueness(\n      project,\n      extensionName,\n      eventsFunction\n    ) &&\n    eventsFunction.getFullName() !== '' &&\n    eventsFunction.getSentence() !== ''\n  );\n};\n\n/**\n * Return true if the function is considered to have more parameters than usual.\n */\nexport const functionHasLotsOfParameters = (\n  eventsFunction: gdEventsFunction\n) => {\n  return eventsFunction.getParameters().size() > 7;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport * as React from 'react';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\nimport { mapVector } from '../../Utils/MapFor';\nimport RaisedButton from '../../UI/RaisedButton';\nimport IconButton from '../../UI/IconButton';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport ElementWithMenu from '../../UI/Menu/ElementWithMenu';\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport HelpButton from '../../UI/HelpButton';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport MiniToolbar, { MiniToolbarText } from '../../UI/MiniToolbar';\nimport { showWarningBox } from '../../UI/Messages/MessageBox';\nimport ObjectTypeSelector from '../../ObjectTypeSelector';\nimport BehaviorTypeSelector from '../../BehaviorTypeSelector';\nimport { isBehaviorLifecycleFunction } from '../../EventsFunctionsExtensionsLoader/MetadataDeclarationHelpers';\nimport { getParametersIndexOffset } from '../../EventsFunctionsExtensionsLoader';\nimport Add from '@material-ui/icons/Add';\n\nconst gd = global.gd;\n\ntype Props = {|\n  project: gdProject,\n  eventsFunction: gdEventsFunction,\n  eventsBasedBehavior: ?gdEventsBasedBehavior,\n  onParametersUpdated: () => void,\n  helpPagePath?: string,\n  freezeParameters?: boolean,\n|};\n\ntype State = {|\n  longDescriptionShownIndexes: { [number]: boolean },\n|};\n\nconst styles = {\n  parametersContainer: {\n    flex: 1,\n  },\n};\n\nconst validateParameterName = (i18n: I18nType, newName: string) => {\n  if (!newName) {\n    showWarningBox(\n      i18n._(\n        t`The name of a parameter can not be empty. Enter a name for the parameter or you won't be able to use it.`\n      )\n    );\n    return false;\n  }\n\n  if (!gd.Project.validateObjectName(newName)) {\n    showWarningBox(\n      i18n._(\n        t`This name contains forbidden characters: please only use alphanumeric characters (0-9, a-z) and underscores in your parameter name.`\n      )\n    );\n    return false;\n  }\n\n  return true;\n};\n\nexport default class EventsFunctionParametersEditor extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    longDescriptionShownIndexes: {},\n  };\n\n  _addParameter = () => {\n    const { eventsFunction } = this.props;\n    const parameters = eventsFunction.getParameters();\n\n    const newParameter = new gd.ParameterMetadata();\n    newParameter.setType('objectList');\n    parameters.push_back(newParameter);\n    newParameter.delete();\n    this.forceUpdate();\n    this.props.onParametersUpdated();\n  };\n\n  _removeParameter = (index: number) => {\n    const { eventsFunction } = this.props;\n    const parameters = eventsFunction.getParameters();\n\n    gd.removeFromVectorParameterMetadata(parameters, index);\n    this.forceUpdate();\n    this.props.onParametersUpdated();\n  };\n\n  _addLongDescription = (index: number) => {\n    // Show the long description field\n    this.setState(state => ({\n      longDescriptionShownIndexes: {\n        ...state.longDescriptionShownIndexes,\n        [index]: true,\n      },\n    }));\n  };\n\n  _removeLongDescription = (index: number) => {\n    const { eventsFunction } = this.props;\n    const parameters = eventsFunction.getParameters();\n    const parameter = parameters.at(index);\n\n    // Reset the long description and hide the field\n    parameter.setLongDescription('');\n    this.setState(state => ({\n      longDescriptionShownIndexes: {\n        ...state.longDescriptionShownIndexes,\n        [index]: false,\n      },\n    }));\n  };\n\n  render() {\n    const {\n      project,\n      eventsFunction,\n      eventsBasedBehavior,\n      freezeParameters,\n      helpPagePath,\n    } = this.props;\n\n    const parameters = eventsFunction.getParameters();\n    const isABehaviorLifecycleFunction =\n      !!eventsBasedBehavior &&\n      isBehaviorLifecycleFunction(eventsFunction.getName());\n    if (isABehaviorLifecycleFunction) {\n      return (\n        <EmptyMessage>\n          <Trans>\n            This is a \"lifecycle method\". It will be called automatically by the\n            game engine and has two parameters: \"Object\" (the object the\n            behavior is acting on) and \"Behavior\" (the behavior itself).\n          </Trans>\n        </EmptyMessage>\n      );\n    }\n\n    const isParameterDisabled = index => {\n      return !!freezeParameters || (!!eventsBasedBehavior && index < 2);\n    };\n    const isParameterDescriptionAndTypeShown = index => {\n      // The first two parameters of a behavior method should not be changed at all,\n      // so we even hide their description and type to avoid cluttering the interface.\n      return !eventsBasedBehavior || index >= 2;\n    };\n    const isParameterLongDescriptionShown = (parameter, index): boolean => {\n      if (!isParameterDescriptionAndTypeShown(index)) return false;\n\n      return (\n        !!parameter.getLongDescription() ||\n        !!this.state.longDescriptionShownIndexes[index]\n      );\n    };\n    const parametersIndexOffset = getParametersIndexOffset(\n      !!eventsBasedBehavior\n    );\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Column noMargin>\n            <Line noMargin>\n              <div style={styles.parametersContainer}>\n                {mapVector(\n                  parameters,\n                  (parameter: gdParameterMetadata, i: number) => (\n                    <React.Fragment key={i}>\n                      <MiniToolbar>\n                        <MiniToolbarText>\n                          <Trans>Parameter #{i + parametersIndexOffset}:</Trans>\n                        </MiniToolbarText>\n                        <Column expand noMargin>\n                          <SemiControlledTextField\n                            commitOnBlur\n                            margin=\"none\"\n                            hintText={t`Enter the parameter name (mandatory)`}\n                            value={parameter.getName()}\n                            onChange={text => {\n                              if (!validateParameterName(i18n, text)) return;\n\n                              parameter.setName(text);\n                              this.forceUpdate();\n                              this.props.onParametersUpdated();\n                            }}\n                            disabled={isParameterDisabled(i)}\n                            fullWidth\n                          />\n                        </Column>\n                        <ElementWithMenu\n                          element={\n                            <IconButton>\n                              <MoreVert />\n                            </IconButton>\n                          }\n                          buildMenuTemplate={() => [\n                            {\n                              label: i18n._(t`Delete`),\n                              enabled: !isParameterDisabled(i),\n                              click: () => this._removeParameter(i),\n                            },\n                            { type: 'separator' },\n                            {\n                              label: i18n._(t`Add a Long Description`),\n                              enabled: !isParameterDisabled(i),\n                              visible: !isParameterLongDescriptionShown(\n                                parameter,\n                                i\n                              ),\n                              click: () => this._addLongDescription(i),\n                            },\n                            {\n                              label: i18n._(t`Remove the Long Description`),\n                              enabled: !isParameterDisabled(i),\n                              visible: isParameterLongDescriptionShown(\n                                parameter,\n                                i\n                              ),\n                              click: () => this._removeLongDescription(i),\n                            },\n                          ]}\n                        />\n                      </MiniToolbar>\n                      <Line expand noMargin>\n                        {isParameterDescriptionAndTypeShown(i) && (\n                          <Column expand>\n                            <SelectField\n                              floatingLabelText={<Trans>Type</Trans>}\n                              value={parameter.getType()}\n                              onChange={(e, i, value: string) => {\n                                parameter.setType(value);\n                                this.forceUpdate();\n                                this.props.onParametersUpdated();\n                              }}\n                              disabled={isParameterDisabled(i)}\n                              fullWidth\n                            >\n                              <SelectOption\n                                value=\"objectList\"\n                                primaryText={t`Objects`}\n                              />\n                              <SelectOption\n                                value=\"behavior\"\n                                primaryText={t`Behavior (for the previous object)`}\n                              />\n                              <SelectOption\n                                value=\"expression\"\n                                primaryText={t`Number`}\n                              />\n                              <SelectOption\n                                value=\"string\"\n                                primaryText={t`String (text)`}\n                              />\n                              <SelectOption\n                                value=\"key\"\n                                primaryText={t`Keyboard Key (text)`}\n                              />\n                              <SelectOption\n                                value=\"mouse\"\n                                primaryText={t`Mouse button (text)`}\n                              />\n                              <SelectOption\n                                value=\"color\"\n                                primaryText={t`Color (text)`}\n                              />\n                              <SelectOption\n                                value=\"layer\"\n                                primaryText={t`Layer (text)`}\n                              />\n                              <SelectOption\n                                value=\"sceneName\"\n                                primaryText={t`Scene name (text)`}\n                              />\n                            </SelectField>\n                          </Column>\n                        )}\n                        {gd.ParameterMetadata.isObject(parameter.getType()) && (\n                          <Column expand>\n                            <ObjectTypeSelector\n                              project={project}\n                              value={parameter.getExtraInfo()}\n                              onChange={(value: string) => {\n                                parameter.setExtraInfo(value);\n                                this.forceUpdate();\n                                this.props.onParametersUpdated();\n                              }}\n                              disabled={isParameterDisabled(i)}\n                            />\n                          </Column>\n                        )}\n                        {parameter.getType() === 'behavior' && (\n                          <Column expand>\n                            <BehaviorTypeSelector\n                              project={project}\n                              value={parameter.getExtraInfo()}\n                              onChange={(value: string) => {\n                                parameter.setExtraInfo(value);\n                                this.forceUpdate();\n                                this.props.onParametersUpdated();\n                              }}\n                              disabled={isParameterDisabled(i)}\n                            />\n                          </Column>\n                        )}\n                      </Line>\n                      {isParameterDescriptionAndTypeShown(i) && (\n                        <Line expand noMargin>\n                          <Column expand>\n                            <SemiControlledTextField\n                              commitOnBlur\n                              floatingLabelText={<Trans>Label</Trans>}\n                              floatingLabelFixed\n                              value={parameter.getDescription()}\n                              onChange={text => {\n                                parameter.setDescription(text);\n                                this.forceUpdate();\n                              }}\n                              fullWidth\n                              disabled={\n                                false /* Label, if shown, can always be changed */\n                              }\n                            />\n                          </Column>\n                        </Line>\n                      )}\n                      {isParameterLongDescriptionShown(parameter, i) && (\n                        <Line expand noMargin>\n                          <Column expand>\n                            <SemiControlledTextField\n                              commitOnBlur\n                              floatingLabelText={\n                                <Trans>Long description</Trans>\n                              }\n                              floatingLabelFixed\n                              value={parameter.getLongDescription()}\n                              onChange={text => {\n                                parameter.setLongDescription(text);\n                                this.forceUpdate();\n                              }}\n                              multiLine\n                              fullWidth\n                              disabled={\n                                false /* Long description, if shown, can always be changed */\n                              }\n                            />\n                          </Column>\n                        </Line>\n                      )}\n                    </React.Fragment>\n                  )\n                )}\n                {parameters.size() === 0 ? (\n                  <EmptyMessage>\n                    <Trans>No parameters for this function.</Trans>\n                  </EmptyMessage>\n                ) : null}\n                <Column>\n                  <Line justifyContent=\"flex-end\" expand>\n                    {!freezeParameters && (\n                      <RaisedButton\n                        primary\n                        label={<Trans>Add a parameter</Trans>}\n                        onClick={this._addParameter}\n                        labelPosition=\"before\"\n                        icon={<Add />}\n                      />\n                    )}\n                  </Line>\n                </Column>\n              </div>\n            </Line>\n            {helpPagePath ? (\n              <Line>\n                <HelpButton helpPagePath={helpPagePath} />\n              </Line>\n            ) : (\n              <Spacer />\n            )}\n          </Column>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport {\n  enumerateObjectTypes,\n  type EnumeratedObjectMetadata,\n} from '../ObjectsList/EnumerateObjects';\n\ntype Props = {|\n  project: gdProject,\n  floatingLabelText?: React.Node,\n  value: string,\n  onChange: string => void,\n  disabled?: boolean,\n  allowedObjectTypes?: ?Array<string>,\n|};\ntype State = {|\n  objectMetadata: Array<EnumeratedObjectMetadata>,\n|};\n\nexport default class ObjectTypeSelector extends React.Component<Props, State> {\n  state = {\n    objectMetadata: enumerateObjectTypes(this.props.project),\n  };\n\n  render() {\n    const {\n      disabled,\n      value,\n      onChange,\n      floatingLabelText,\n      allowedObjectTypes,\n    } = this.props;\n    const { objectMetadata } = this.state;\n\n    const isDisabled = (type: string) => {\n      if (!allowedObjectTypes) return false;\n\n      return allowedObjectTypes.indexOf(type) === -1;\n    };\n\n    return (\n      <SelectField\n        floatingLabelText={floatingLabelText || <Trans>Object type</Trans>}\n        value={value}\n        onChange={(e, i, value: string) => {\n          onChange(value);\n        }}\n        disabled={disabled}\n        fullWidth\n      >\n        <SelectOption\n          value=\"\"\n          primaryText={t`Any object`}\n          disabled={isDisabled('')}\n        />\n        {objectMetadata.map((metadata: EnumeratedObjectMetadata) => {\n          if (metadata.name === '') {\n            // Base object is an \"abstract\" object\n            return null;\n          }\n\n          return (\n            <SelectOption\n              key={metadata.name}\n              value={metadata.name}\n              primaryText={metadata.fullName}\n              disabled={isDisabled(metadata.name)}\n            />\n          );\n        })}\n      </SelectField>\n    );\n  }\n}\n","// @flow\nimport { mapFor } from '../Utils/MapFor';\nimport flatten from 'lodash/flatten';\n\nexport type EnumeratedBehaviorMetadata = {|\n  extension: gdPlatformExtension,\n  behaviorMetadata: gdBehaviorMetadata,\n  type: string,\n  objectType: string,\n  defaultName: string,\n  fullName: string,\n  description: string,\n  iconFilename: string,\n|};\n\nexport const enumerateBehaviorsMetadata = (\n  platform: gdPlatform,\n  project: gdProject\n): Array<EnumeratedBehaviorMetadata> => {\n  const extensionsList = platform.getAllPlatformExtensions();\n\n  return flatten(\n    mapFor(0, extensionsList.size(), i => {\n      const extension = extensionsList.at(i);\n\n      return extension\n        .getBehaviorsTypes()\n        .toJSArray()\n        .map(behaviorType => ({\n          behaviorType,\n          behaviorMetadata: extension.getBehaviorMetadata(behaviorType),\n        }))\n        .map(({ behaviorType, behaviorMetadata }) => ({\n          extension,\n          behaviorMetadata,\n          type: behaviorType,\n          defaultName: behaviorMetadata.getDefaultName(),\n          fullName: behaviorMetadata.getFullName(),\n          description: behaviorMetadata.getDescription(),\n          iconFilename: behaviorMetadata.getIconFilename(),\n          objectType: behaviorMetadata.getObjectType(),\n        }));\n    })\n  );\n};\n\nexport const filterEnumeratedBehaviorMetadata = (\n  list: Array<EnumeratedBehaviorMetadata>,\n  searchText: string\n): Array<EnumeratedBehaviorMetadata> => {\n  if (!searchText) return list;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n\n  return list.filter(enumerateBehaviorsMetadata => {\n    return (\n      enumerateBehaviorsMetadata.fullName\n        .toLowerCase()\n        .indexOf(lowercaseSearchText) !== -1 ||\n      enumerateBehaviorsMetadata.description\n        .toLowerCase()\n        .indexOf(lowercaseSearchText) !== -1\n    );\n  });\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport * as React from 'react';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport SelectField from '../../UI/SelectField';\nimport SelectOption from '../../UI/SelectOption';\nimport { mapVector } from '../../Utils/MapFor';\nimport HelpButton from '../../UI/HelpButton';\nimport SemiControlledTextField from '../../UI/SemiControlledTextField';\nimport { isBehaviorLifecycleFunction } from '../../EventsFunctionsExtensionsLoader/MetadataDeclarationHelpers';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport { getParametersIndexOffset } from '../../EventsFunctionsExtensionsLoader';\nimport { type MessageDescriptor } from '../../Utils/i18n/MessageDescriptor.flow';\nimport { ResponsiveLineStackLayout } from '../../UI/Layout';\n\nconst gd = global.gd;\n\ntype Props = {|\n  eventsFunction: gdEventsFunction,\n  eventsBasedBehavior: ?gdEventsBasedBehavior,\n  helpPagePath?: string,\n  onConfigurationUpdated?: () => void,\n  renderConfigurationHeader?: () => React.Node,\n  freezeEventsFunctionType?: boolean,\n|};\n\ntype State = {||};\n\nconst styles = {\n  icon: {\n    width: 32,\n    height: 32,\n    marginRight: 8,\n    flexSrink: 0,\n  },\n};\n\nconst getSentenceErrorText = (\n  i18n: I18nType,\n  eventsBasedBehavior: ?gdEventsBasedBehavior,\n  eventsFunction: gdEventsFunction\n) => {\n  const sentence = eventsFunction.getSentence();\n  if (!sentence)\n    return i18n._(\n      t`Enter the sentence that will be displayed in the events sheet`\n    );\n\n  const parametersIndexOffset = getParametersIndexOffset(!!eventsBasedBehavior);\n\n  const missingParameters = mapVector(\n    eventsFunction.getParameters(),\n    (parameter, index) => {\n      if (gd.ParameterMetadata.isBehavior(parameter.getType())) {\n        return null; // Behaviors are usually not shown in sentences.\n      }\n\n      const expectedString = `_PARAM${index + parametersIndexOffset}_`;\n      if (sentence.indexOf(expectedString) === -1) return expectedString;\n\n      return null;\n    }\n  ).filter(Boolean);\n\n  if (missingParameters.length) {\n    return (\n      i18n._(t`The sentence is probably missing this/these parameter(s):`) +\n      missingParameters.join(', ')\n    );\n  }\n\n  return undefined;\n};\n\nconst getFullNameHintText = (type: any): MessageDescriptor => {\n  if (type === gd.EventsFunction.Condition) {\n    return t`Example: Is flashing?`;\n  } else if (type === gd.EventsFunction.Expression) {\n    return t`Example: Life remaining`;\n  } else if (type === gd.EventsFunction.StringExpression) {\n    return t`Example: Equipped shield name`;\n  }\n\n  return t`Example: Flash the object`;\n};\n\nconst getDescriptionHintText = (type: any): MessageDescriptor => {\n  if (type === gd.EventsFunction.Condition) {\n    return t`Example: Check if the object is flashing.`;\n  } else if (type === gd.EventsFunction.Expression) {\n    return t`Example: Life remaining for the player.`;\n  } else if (type === gd.EventsFunction.StringExpression) {\n    return t`Example: Name of the shield equipped by the player.`;\n  }\n\n  return t`Example: Make the object flash for 5 seconds.`;\n};\n\nexport default class EventsFunctionPropertiesEditor extends React.Component<\n  Props,\n  State\n> {\n  render() {\n    const {\n      eventsFunction,\n      freezeEventsFunctionType,\n      onConfigurationUpdated,\n      helpPagePath,\n      renderConfigurationHeader,\n      eventsBasedBehavior,\n    } = this.props;\n\n    const type = eventsFunction.getFunctionType();\n    const isABehaviorLifecycleFunction =\n      !!eventsBasedBehavior &&\n      isBehaviorLifecycleFunction(eventsFunction.getName());\n    if (isABehaviorLifecycleFunction) {\n      return (\n        <EmptyMessage>\n          <Trans>\n            This is a \"lifecycle method\". It will be called automatically by the\n            game engine.\n          </Trans>\n        </EmptyMessage>\n      );\n    }\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Column>\n            {renderConfigurationHeader ? renderConfigurationHeader() : null}\n            <ResponsiveLineStackLayout alignItems=\"center\">\n              <Line alignItems=\"center\" noMargin>\n                <img src=\"res/function32.png\" alt=\"\" style={styles.icon} />\n                <SelectField\n                  value={type}\n                  floatingLabelText={<Trans>Function type</Trans>}\n                  fullWidth\n                  disabled={!!freezeEventsFunctionType}\n                  onChange={(e, i, value: string) => {\n                    eventsFunction.setFunctionType(value);\n                    if (onConfigurationUpdated) onConfigurationUpdated();\n                    this.forceUpdate();\n                  }}\n                >\n                  <SelectOption\n                    value={gd.EventsFunction.Action}\n                    primaryText={t`Action`}\n                  />\n                  <SelectOption\n                    value={gd.EventsFunction.Condition}\n                    primaryText={t`Condition`}\n                  />\n                  <SelectOption\n                    value={gd.EventsFunction.Expression}\n                    primaryText={t`Expression`}\n                  />\n                  <SelectOption\n                    value={gd.EventsFunction.StringExpression}\n                    primaryText={t`String Expression`}\n                  />\n                </SelectField>\n              </Line>\n              <SemiControlledTextField\n                commitOnBlur\n                floatingLabelText={<Trans>Full name displayed in editor</Trans>}\n                hintText={getFullNameHintText(type)}\n                value={eventsFunction.getFullName()}\n                onChange={text => {\n                  eventsFunction.setFullName(text);\n                  if (onConfigurationUpdated) onConfigurationUpdated();\n                  this.forceUpdate();\n                }}\n                fullWidth\n              />\n            </ResponsiveLineStackLayout>\n            <Line noMargin>\n              <SemiControlledTextField\n                commitOnBlur\n                floatingLabelText={\n                  <Trans>Description, displayed in editor</Trans>\n                }\n                hintText={getDescriptionHintText(type)}\n                fullWidth\n                multiLine\n                value={eventsFunction.getDescription()}\n                onChange={text => {\n                  eventsFunction.setDescription(text);\n                  if (onConfigurationUpdated) onConfigurationUpdated();\n                  this.forceUpdate();\n                }}\n              />\n            </Line>\n            <Line>\n              {type === gd.EventsFunction.Action ||\n              type === gd.EventsFunction.Condition ? (\n                <SemiControlledTextField\n                  commitOnBlur\n                  floatingLabelText={<Trans>Sentence in Events Sheet</Trans>}\n                  hintText={t`Note: write _PARAMx_ for parameters, e.g: Flash _PARAM1_ for 5 seconds`}\n                  fullWidth\n                  value={eventsFunction.getSentence()}\n                  onChange={text => {\n                    eventsFunction.setSentence(text);\n                    if (onConfigurationUpdated) onConfigurationUpdated();\n                    this.forceUpdate();\n                  }}\n                  errorText={getSentenceErrorText(\n                    i18n,\n                    eventsBasedBehavior,\n                    eventsFunction\n                  )}\n                />\n              ) : null}\n            </Line>\n            {helpPagePath ? (\n              <Line>\n                <HelpButton helpPagePath={helpPagePath} />\n              </Line>\n            ) : (\n              <Spacer />\n            )}\n          </Column>\n        )}\n      </I18n>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport IconButton from '../IconButton';\nimport Close from '@material-ui/icons/Close';\nimport { MosaicWindowContext, MosaicContext } from 'react-mosaic-component';\n\nconst styles = {\n  container: {\n    padding: 0,\n    width: 32,\n    height: 32,\n  },\n  icon: {\n    width: 16,\n    height: 16,\n  },\n};\n\nexport default class CloseButton extends Component {\n  render() {\n    return (\n      <MosaicContext.Consumer>\n        {({ mosaicActions }) => (\n          <MosaicWindowContext.Consumer>\n            {({ mosaicWindowActions }) => (\n              <IconButton\n                onClick={() => {\n                  mosaicActions.remove(mosaicWindowActions.getPath());\n                }}\n                style={styles.container}\n              >\n                <Close htmlColor=\"white\" style={styles.icon} />\n              </IconButton>\n            )}\n          </MosaicWindowContext.Consumer>\n        )}\n      </MosaicContext.Consumer>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport EventsFunctionsExtensionEditor from '../../EventsFunctionsExtensionEditor';\nimport BaseEditor from './BaseEditor';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 1,\n  },\n};\n\nexport default class EventsFunctionsExtensionEditorWrapper extends BaseEditor {\n  editor: ?EventsFunctionsExtensionEditor;\n\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  shouldComponentUpdate(nextProps: *) {\n    // This optimization is a bit more cautious than the one is BaseEditor,\n    // to still be notified when isActive goes from true to false.\n    if (!this.props.isActive && !nextProps.isActive) {\n      return false;\n    }\n\n    return true;\n  }\n\n  componentDidUpdate(prevProps: *) {\n    if (prevProps.isActive && !this.props.isActive) {\n      this.props.onLoadEventsFunctionsExtensions();\n    }\n  }\n\n  _onBehaviorEdited = () => {\n    // Immediately trigger the reload/regeneration of extensions\n    // as a change in the properties of a behavior can create changes\n    // in actions/conditions/expressions to manipulate these properties.\n    this.props.onLoadEventsFunctionsExtensions();\n  };\n\n  getEventsFunctionsExtension(): ?gdEventsFunctionsExtension {\n    const { project, eventsFunctionsExtensionName } = this.props;\n    if (\n      !project.hasEventsFunctionsExtensionNamed(eventsFunctionsExtensionName)\n    ) {\n      return null;\n    }\n    return project.getEventsFunctionsExtension(eventsFunctionsExtensionName);\n  }\n\n  selectEventsFunctionByName(\n    eventsFunctionName: string,\n    behaviorName: ?string\n  ) {\n    if (this.editor)\n      this.editor.selectEventsFunctionByName(eventsFunctionName, behaviorName);\n  }\n\n  render() {\n    const { project, eventsFunctionsExtensionName } = this.props;\n    const eventsFunctionsExtension = this.getEventsFunctionsExtension();\n\n    if (!eventsFunctionsExtension) {\n      //TODO: Error component\n      return (\n        <div>No extension called {eventsFunctionsExtensionName} found!</div>\n      );\n    }\n\n    return (\n      <div style={styles.container}>\n        <EventsFunctionsExtensionEditor\n          key={eventsFunctionsExtension.ptr}\n          project={project}\n          eventsFunctionsExtension={eventsFunctionsExtension}\n          setToolbar={this.props.setToolbar}\n          resourceSources={this.props.resourceSources}\n          onChooseResource={this.props.onChooseResource}\n          resourceExternalEditors={this.props.resourceExternalEditors}\n          openInstructionOrExpression={this.props.openInstructionOrExpression}\n          onCreateEventsFunction={this.props.onCreateEventsFunction}\n          initiallyFocusedFunctionName={this.props.initiallyFocusedFunctionName}\n          initiallyFocusedBehaviorName={this.props.initiallyFocusedBehaviorName}\n          onBehaviorEdited={this._onBehaviorEdited}\n          ref={editor => (this.editor = editor)}\n        />\n      </div>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport ObjectGroupEditor from '.';\nimport Dialog from '../UI/Dialog';\nimport { withSerializableObject } from '../Utils/SerializableObjectEditorContainer';\nconst gd = global.gd;\n\nexport class ObjectGroupEditorDialog extends Component {\n  render() {\n    const { project, group } = this.props;\n    if (!group) return null;\n\n    const actions = [\n      <FlatButton\n        key=\"cancel\"\n        label={<Trans>Cancel</Trans>}\n        keyboardFocused\n        onClick={this.props.onCancel}\n      />,\n      <FlatButton\n        key=\"apply\"\n        label={<Trans>Apply</Trans>}\n        primary\n        keyboardFocused\n        onClick={this.props.onApply}\n      />,\n    ];\n\n    return (\n      <Dialog\n        key={group.ptr}\n        actions={actions}\n        noMargin\n        modal\n        onRequestClose={this.props.onCancel}\n        open={this.props.open}\n        title={`Edit ${group.getName()} group`}\n      >\n        <ObjectGroupEditor\n          project={project}\n          group={group}\n          globalObjectsContainer={this.props.globalObjectsContainer}\n          objectsContainer={this.props.objectsContainer}\n          onSizeUpdated={\n            () =>\n              this.forceUpdate() /*Force update to ensure dialog is properly positionned*/\n          }\n        />\n      </Dialog>\n    );\n  }\n}\n\nexport default withSerializableObject(ObjectGroupEditorDialog, {\n  newObjectCreator: () => new gd.ObjectGroup(),\n  propName: 'group',\n});\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React from 'react';\nimport EventsSheet from '../../EventsSheet';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { serializeToJSObject } from '../../Utils/Serializer';\nimport PlaceholderMessage from '../../UI/PlaceholderMessage';\nimport BaseEditor from './BaseEditor';\nimport LayoutChooserDialog from './LayoutChooserDialog';\nimport Text from '../../UI/Text';\nimport { Line } from '../../UI/Grid';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 1,\n  },\n};\n\nexport default class ExternalEventsEditor extends BaseEditor {\n  editor: ?EventsSheet;\n\n  state = {\n    layoutChooserOpen: false,\n  };\n\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  getSerializedElements() {\n    const externalEvents = this.getExternalEvents();\n    const layout = this.getLayout();\n    if (!externalEvents) return {};\n\n    return {\n      ...BaseEditor.getLayoutSerializedElements(layout),\n      events: serializeToJSObject(externalEvents),\n    };\n  }\n\n  getExternalEvents(): ?gdExternalEvents {\n    const { project, externalEventsName } = this.props;\n    if (!project.hasExternalEventsNamed(externalEventsName)) {\n      return null;\n    }\n    return project.getExternalEvents(externalEventsName);\n  }\n\n  getLayout() {\n    const { project } = this.props;\n\n    const externalEvents = this.getExternalEvents();\n    if (!externalEvents) return null;\n\n    const layoutName = externalEvents.getAssociatedLayout();\n    if (!project.hasLayoutNamed(layoutName)) {\n      return null;\n    }\n    return project.getLayout(layoutName);\n  }\n\n  setAssociatedLayout = (layoutName: string) => {\n    const externalEvents = this.getExternalEvents();\n    if (!externalEvents) return;\n\n    externalEvents.setAssociatedLayout(layoutName);\n    this.setState(\n      {\n        layoutChooserOpen: false,\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  openLayoutChooser = () => {\n    this.setState({\n      layoutChooserOpen: true,\n    });\n  };\n\n  render() {\n    const { project, externalEventsName } = this.props;\n    const externalEvents = this.getExternalEvents();\n    const layout = this.getLayout();\n\n    if (!externalEvents) {\n      //TODO: Error component\n      return <div>No external events called {externalEventsName} found!</div>;\n    }\n\n    return (\n      <div style={styles.container}>\n        {layout && (\n          <EventsSheet\n            {...this.props}\n            ref={editor => (this.editor = editor)}\n            project={project}\n            scope={{\n              layout,\n            }}\n            globalObjectsContainer={project}\n            objectsContainer={layout}\n            events={externalEvents.getEvents()}\n            onPreview={() => this.props.onPreview(project, layout)}\n            onOpenSettings={this.openLayoutChooser}\n            onOpenExternalEvents={this.props.onOpenExternalEvents}\n            resourceSources={this.props.resourceSources}\n            onChooseResource={this.props.onChooseResource}\n            resourceExternalEditors={this.props.resourceExternalEditors}\n            openInstructionOrExpression={this.props.openInstructionOrExpression}\n          />\n        )}\n        {!layout && (\n          <PlaceholderMessage>\n            <Text>\n              <Trans>\n                To edit the external events, choose the scene in which it will\n                be included:\n              </Trans>\n            </Text>\n            <Line justifyContent=\"center\">\n              <RaisedButton\n                label={<Trans>Choose the scene</Trans>}\n                primary\n                onClick={this.openLayoutChooser}\n              />\n            </Line>\n          </PlaceholderMessage>\n        )}\n        <LayoutChooserDialog\n          title={<Trans>Choose the associated scene</Trans>}\n          helpText=\"You still need to add a Link event in the scene to import the external events\"\n          open={this.state.layoutChooserOpen}\n          project={project}\n          onChoose={this.setAssociatedLayout}\n          onClose={() => this.setState({ layoutChooserOpen: false })}\n        />\n      </div>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport FlatButton from '../../UI/FlatButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Dialog from '../../UI/Dialog';\nimport { mapFor } from '../../Utils/MapFor';\nimport Text from '../../UI/Text';\n\nexport default class LayoutChooserDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedLayoutName: props.layoutName,\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.layoutName !== this.props.layoutName) {\n      this.setState({\n        selectedLayoutName: newProps.layoutName,\n      });\n    }\n  }\n\n  chooseLayout(layoutName) {\n    this.setState({\n      selectedLayoutName: layoutName,\n    });\n  }\n\n  render() {\n    const actions = [\n      <FlatButton\n        key=\"cancel\"\n        label={<Trans>Cancel</Trans>}\n        primary={false}\n        onClick={this.props.onClose}\n      />,\n      <FlatButton\n        key=\"choose\"\n        label={<Trans>Choose</Trans>}\n        primary={true}\n        keyboardFocused={true}\n        onClick={() => this.props.onChoose(this.state.selectedLayoutName)}\n        disabled={!this.state.selectedLayoutName}\n      />,\n    ];\n\n    const { project } = this.props;\n    const { selectedLayoutName } = this.state;\n    const layoutNames = mapFor(0, project.getLayoutsCount(), i => {\n      return project.getLayoutAt(i).getName();\n    });\n\n    return (\n      <Dialog\n        actions={actions}\n        open={this.props.open}\n        title={this.props.title}\n        onRequestClose={this.props.onClose}\n        fullWidth\n        maxWidth=\"sm\"\n      >\n        {this.props.helpText && <Text>{this.props.helpText}</Text>}\n        <RadioGroup\n          aria-label=\"Associated scene\"\n          name=\"associated-layout\"\n          value={selectedLayoutName}\n          onChange={event => this.chooseLayout(event.target.value)}\n        >\n          {layoutNames.map(name => (\n            <FormControlLabel\n              key={name}\n              value={name}\n              control={<Radio color=\"primary\" />}\n              label={name}\n            />\n          ))}\n        </RadioGroup>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport SceneEditor from '../../SceneEditor';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../../Utils/Serializer';\nimport PlaceholderMessage from '../../UI/PlaceholderMessage';\nimport BaseEditor from './BaseEditor';\nimport LayoutChooserDialog from './LayoutChooserDialog';\nimport { Line } from '../../UI/Grid';\nimport Text from '../../UI/Text';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 1,\n  },\n};\n\nexport default class ExternalLayoutEditor extends BaseEditor {\n  editor: ?SceneEditor;\n  state = {\n    layoutChooserOpen: false,\n  };\n\n  shouldComponentUpdate(nextProps: *) {\n    // This optimization is a bit more cautious than the one is BaseEditor, to still allow\n    // children, and in particular SceneEditor and InstancesEditor, to be notified when isActive\n    // goes from true to false (in which case PIXI rendering is halted). If isActive was false\n    // and remains false, it's safe to stop update here (PIXI rendering is already halted).\n    if (!this.props.isActive && !nextProps.isActive) {\n      return false;\n    }\n\n    return true;\n  }\n\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  getSerializedElements() {\n    const externalLayout = this.getExternalLayout();\n    const layout = this.getLayout();\n    if (!externalLayout || !layout) return {};\n\n    return {\n      ...BaseEditor.getLayoutSerializedElements(layout),\n      instances: serializeToJSObject(externalLayout.getInitialInstances()),\n      uiSettings: this.editor ? this.editor.getUiSettings() : {},\n    };\n  }\n\n  getExternalLayout(): ?gdExternalLayout {\n    const { project, externalLayoutName } = this.props;\n    if (!project.hasExternalLayoutNamed(externalLayoutName)) {\n      return null;\n    }\n    return project.getExternalLayout(externalLayoutName);\n  }\n\n  getLayout(): ?gdLayout {\n    const { project } = this.props;\n\n    const externalLayout = this.getExternalLayout();\n    if (!externalLayout) return null;\n\n    const layoutName = externalLayout.getAssociatedLayout();\n    if (!project.hasLayoutNamed(layoutName)) {\n      return null;\n    }\n    return project.getLayout(layoutName);\n  }\n\n  setAssociatedLayout = (layoutName: string) => {\n    const externalLayout = this.getExternalLayout();\n    if (!externalLayout) return;\n\n    externalLayout.setAssociatedLayout(layoutName);\n    this.setState(\n      {\n        layoutChooserOpen: false,\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  openLayoutChooser = () => {\n    this.setState({\n      layoutChooserOpen: true,\n    });\n  };\n\n  saveUiSettings = () => {\n    const layout = this.getExternalLayout();\n    const editor = this.editor;\n\n    if (editor && layout) {\n      unserializeFromJSObject(\n        layout.getAssociatedSettings(),\n        editor.getUiSettings()\n      );\n    }\n  };\n\n  render() {\n    const { project, externalLayoutName, isActive } = this.props;\n    const externalLayout = this.getExternalLayout();\n    const layout = this.getLayout();\n\n    if (!externalLayout) {\n      //TODO: Error component\n      return <div>No external layout called {externalLayoutName} found!</div>;\n    }\n\n    return (\n      <div style={styles.container}>\n        {layout && (\n          <SceneEditor\n            {...this.props}\n            ref={editor => (this.editor = editor)}\n            project={project}\n            layout={layout}\n            initialInstances={externalLayout.getInitialInstances()}\n            initialUiSettings={serializeToJSObject(\n              externalLayout.getAssociatedSettings()\n            )}\n            onPreview={options =>\n              this.props.onPreview(project, layout, externalLayout, options)\n            }\n            onOpenDebugger={this.props.onOpenDebugger}\n            onOpenMoreSettings={this.openLayoutChooser}\n            isActive={isActive}\n          />\n        )}\n        {!layout && (\n          <PlaceholderMessage>\n            <Text>\n              <Trans>\n                To edit the external layout, choose the scene in which it will\n                be included:\n              </Trans>\n            </Text>\n            <Line justifyContent=\"center\">\n              <RaisedButton\n                label={<Trans>Choose the scene</Trans>}\n                primary\n                onClick={this.openLayoutChooser}\n              />\n            </Line>\n          </PlaceholderMessage>\n        )}\n        <LayoutChooserDialog\n          title={<Trans>Choose the associated scene</Trans>}\n          open={this.state.layoutChooserOpen}\n          project={project}\n          onChoose={this.setAssociatedLayout}\n          onClose={() => this.setState({ layoutChooserOpen: false })}\n        />\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport uniq from 'lodash/uniq';\nimport ObjectsList from '../ObjectsList';\nimport ObjectGroupsList from '../ObjectGroupsList';\nimport ObjectsRenderingService from '../ObjectsRendering/ObjectsRenderingService';\nimport InstancesEditor from '../InstancesEditor';\nimport InstancePropertiesEditor from '../InstancesEditor/InstancePropertiesEditor';\nimport InstancesList from '../InstancesEditor/InstancesList';\nimport LayersList from '../LayersList';\nimport LayerRemoveDialog from '../LayersList/LayerRemoveDialog';\nimport VariablesEditorDialog from '../VariablesList/VariablesEditorDialog';\nimport ObjectEditorDialog from '../ObjectEditor/ObjectEditorDialog';\nimport ObjectGroupEditorDialog from '../ObjectGroupEditor/ObjectGroupEditorDialog';\nimport InstancesSelection from './InstancesSelection';\nimport SetupGridDialog from './SetupGridDialog';\nimport ScenePropertiesDialog from './ScenePropertiesDialog';\nimport Toolbar from './Toolbar';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\nimport Clipboard from '../Utils/Clipboard';\nimport { passFullSize } from '../UI/FullSizeMeasurer';\nimport { addScrollbars } from '../InstancesEditor/ScrollbarContainer';\nimport { type PreviewOptions } from '../Export/PreviewLauncher.flow';\nimport Drawer from '@material-ui/core/Drawer';\nimport EditorMosaic from '../UI/EditorMosaic';\nimport EditorBar, { editorBarHeight } from '../UI/EditorBar';\nimport InfoBar from '../UI/Messages/InfoBar';\nimport ContextMenu from '../UI/Menu/ContextMenu';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport { shortenString } from '../Utils/StringHelpers';\nimport getObjectByName from '../Utils/GetObjectByName';\n\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\nimport { type ResourceExternalEditor } from '../ResourcesList/ResourceExternalEditor.flow';\nimport {\n  type HistoryState,\n  undo,\n  redo,\n  canUndo,\n  canRedo,\n  getHistoryInitialState,\n  saveToHistory,\n} from '../Utils/History';\nimport PixiResourcesLoader from '../ObjectsRendering/PixiResourcesLoader';\nimport {\n  type ObjectWithContext,\n  type GroupWithContext,\n  enumerateObjects,\n} from '../ObjectsList/EnumerateObjects';\nimport TagsButton from '../UI/EditorMosaic/TagsButton';\nimport CloseButton from '../UI/EditorMosaic/CloseButton';\nimport {\n  type SelectedTags,\n  buildTagsMenuTemplate,\n  getTagsFromString,\n} from '../Utils/TagsHelper';\nimport { ScreenTypeMeasurer } from '../UI/Reponsive/ScreenTypeMeasurer';\nimport { ResponsiveWindowMeasurer } from '../UI/Reponsive/ResponsiveWindowMeasurer';\nconst gd = global.gd;\n\nconst INSTANCES_CLIPBOARD_KIND = 'Instances';\n\nconst FullSizeInstancesEditor = passFullSize(addScrollbars(InstancesEditor), {\n  useFlex: true,\n});\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 1,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n};\n\nconst layersDrawerPaperProps = {\n  style: {\n    width: 500,\n  },\n};\n\nconst instancesDrawerPaperProps = {\n  style: {\n    width: 500,\n    overflow: 'hidden',\n  },\n};\n\nconst initialEditors = {\n  direction: 'row',\n  first: 'properties',\n  splitPercentage: 23,\n  second: {\n    direction: 'row',\n    first: 'instances-editor',\n    second: 'objects-list',\n    splitPercentage: 77,\n  },\n};\n\nconst initialEditorsSmallWindow = {\n  direction: 'row',\n  first: 'instances-editor',\n  second: 'objects-list',\n  splitPercentage: 70,\n};\n\ntype Props = {|\n  initialInstances: gdInitialInstancesContainer,\n  initialUiSettings: Object,\n  layout: gdLayout,\n  onEditObject: (object: gdObject) => void,\n  onOpenDebugger: () => void,\n  onOpenMoreSettings: () => void,\n  onPreview: (options: PreviewOptions) => void,\n  project: gdProject,\n  setToolbar: (?React.Node) => void,\n  showNetworkPreviewButton: boolean,\n  showPreviewButton: boolean,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n  resourceExternalEditors: Array<ResourceExternalEditor>,\n  isActive: boolean,\n|};\n\ntype State = {|\n  objectsListOpen: boolean,\n  instancesListOpen: boolean,\n  setupGridOpen: boolean,\n  scenePropertiesDialogOpen: boolean,\n  layersListOpen: boolean,\n  layerRemoveDialogOpen: boolean,\n  onCloseLayerRemoveDialog: ?(doRemove: boolean, newLayer: string) => void,\n  layerRemoved: ?string,\n  editedObjectWithContext: ?ObjectWithContext,\n  variablesEditedInstance: ?gdInitialInstance,\n  variablesEditedObject: ?gdObject,\n  selectedObjectNames: Array<string>,\n  newObjectInstanceSceneCoordinates: ?[number, number],\n\n  editedGroup: ?gdObjectGroup,\n\n  uiSettings: Object,\n  history: HistoryState,\n\n  showObjectsListInfoBar: boolean,\n  layoutVariablesDialogOpen: boolean,\n  showPropertiesInfoBar: boolean,\n\n  // State for tags of objects:\n  selectedObjectTags: SelectedTags,\n|};\n\ntype CopyCutPasteOptions = { useLastCursorPosition?: boolean };\n\nexport default class SceneEditor extends React.Component<Props, State> {\n  static defaultProps = {\n    setToolbar: () => {},\n  };\n\n  zOrderFinder: ?gd.HighestZOrderFinder;\n  instancesSelection: InstancesSelection;\n  editor: ?InstancesEditor;\n  contextMenu: ?ContextMenu;\n  editorMosaic: ?EditorMosaic;\n  _objectsList: ?ObjectsList;\n  _propertiesEditor: ?InstancePropertiesEditor;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.instancesSelection = new InstancesSelection();\n    this.state = {\n      objectsListOpen: false,\n      instancesListOpen: false,\n      setupGridOpen: false,\n      scenePropertiesDialogOpen: false,\n      layersListOpen: false,\n      layerRemoveDialogOpen: false,\n      onCloseLayerRemoveDialog: null,\n      layerRemoved: null,\n      editedObjectWithContext: null,\n      variablesEditedInstance: null,\n      variablesEditedObject: null,\n      selectedObjectNames: [],\n      newObjectInstanceSceneCoordinates: null,\n      editedGroup: null,\n\n      uiSettings: props.initialUiSettings,\n      history: getHistoryInitialState(props.initialInstances, {\n        historyMaxSize: 50,\n      }),\n\n      showObjectsListInfoBar: false,\n      layoutVariablesDialogOpen: false,\n      showPropertiesInfoBar: false,\n\n      selectedObjectTags: [],\n    };\n  }\n\n  componentWillMount() {\n    this.zOrderFinder = new gd.HighestZOrderFinder();\n  }\n\n  getUiSettings() {\n    return this.state.uiSettings;\n  }\n\n  updateToolbar() {\n    this.props.setToolbar(\n      <Toolbar\n        showPreviewButton={this.props.showPreviewButton}\n        onPreview={() => this.props.onPreview({})}\n        showNetworkPreviewButton={this.props.showNetworkPreviewButton}\n        onNetworkPreview={() => this.props.onPreview({ networkPreview: true })}\n        onOpenDebugger={() => {\n          this.props.onOpenDebugger();\n          this.props.onPreview({});\n        }}\n        instancesSelection={this.instancesSelection}\n        openObjectsList={this.openObjectsList}\n        openObjectGroupsList={this.openObjectGroupsList}\n        openProperties={this.openProperties}\n        deleteSelection={this.deleteSelection}\n        toggleInstancesList={this.toggleInstancesList}\n        toggleLayersList={this.toggleLayersList}\n        toggleWindowMask={this.toggleWindowMask}\n        toggleGrid={this.toggleGrid}\n        isGridShown={() => !!this.state.uiSettings.grid}\n        isWindowMaskShown={() => !!this.state.uiSettings.windowMask}\n        openSetupGrid={this.openSetupGrid}\n        setZoomFactor={this.setZoomFactor}\n        centerView={this.centerView}\n        canUndo={canUndo(this.state.history)}\n        canRedo={canRedo(this.state.history)}\n        undo={this.undo}\n        redo={this.redo}\n        zoomIn={this.zoomIn}\n        zoomOut={this.zoomOut}\n        onOpenSettings={this.openSceneProperties}\n      />\n    );\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (\n      this.props.layout !== nextProps.layout ||\n      this.props.initialInstances !== nextProps.initialInstances ||\n      this.props.project !== nextProps.project\n    ) {\n      this.instancesSelection.clearSelection();\n      this.openSetupGrid(false);\n      this.editInstanceVariables(null);\n      this.openSceneProperties(false);\n    }\n  }\n\n  openObjectsList = () => {\n    if (!this.editorMosaic) return;\n    if (!this.editorMosaic.openEditor('objects-list', 'end', 75)) {\n      this.setState({\n        showObjectsListInfoBar: true,\n      });\n    }\n  };\n\n  openProperties = () => {\n    if (!this.editorMosaic) return;\n    if (!this.editorMosaic.openEditor('properties', 'start', 25)) {\n      this.setState({\n        showPropertiesInfoBar: true,\n      });\n    }\n  };\n\n  openObjectGroupsList = () => {\n    if (!this.editorMosaic) return;\n    this.editorMosaic.openEditor('object-groups-list', 'end', 75);\n  };\n\n  toggleInstancesList = () => {\n    this.setState({ instancesListOpen: !this.state.instancesListOpen });\n  };\n\n  toggleLayersList = () => {\n    this.setState({ layersListOpen: !this.state.layersListOpen });\n  };\n\n  toggleWindowMask = () => {\n    this.setState({\n      uiSettings: {\n        ...this.state.uiSettings,\n        windowMask: !this.state.uiSettings.windowMask,\n      },\n    });\n  };\n\n  toggleGrid = () => {\n    this.setState({\n      uiSettings: {\n        ...this.state.uiSettings,\n        grid: !this.state.uiSettings.grid,\n        snap: !this.state.uiSettings.grid,\n      },\n    });\n  };\n\n  openSetupGrid = (open: boolean = true) => {\n    this.setState({ setupGridOpen: open });\n  };\n\n  openSceneProperties = (open: boolean = true) => {\n    this.setState({ scenePropertiesDialogOpen: open });\n  };\n\n  openObjectEditor = () => {\n    if (!this.instancesSelection.hasSelectedInstances()) {\n      return;\n    }\n    const selectedInstanceObjectName = this.instancesSelection\n      .getSelectedInstances()[0]\n      .getObjectName();\n    this.editObjectByName(selectedInstanceObjectName);\n  };\n\n  editInstanceVariables = (instance: ?gdInitialInstance) => {\n    this.setState({ variablesEditedInstance: instance });\n  };\n\n  editObjectVariables = (object: ?gdObject) => {\n    this.setState({ variablesEditedObject: object });\n  };\n\n  editLayoutVariables = (open: boolean = true) => {\n    this.setState({ layoutVariablesDialogOpen: open });\n  };\n\n  editObject = (editedObject: ?gdObject) => {\n    const { project } = this.props;\n    if (editedObject) {\n      this.setState({\n        editedObjectWithContext: {\n          object: editedObject,\n          global: project.hasObjectNamed(editedObject.getName()),\n        },\n      });\n    } else {\n      this.setState({\n        editedObjectWithContext: null,\n      });\n    }\n  };\n\n  editObjectByName = (objectName: string) => {\n    const { project, layout } = this.props;\n    if (layout.hasObjectNamed(objectName))\n      this.editObject(layout.getObject(objectName));\n    else if (project.hasObjectNamed(objectName))\n      this.editObject(project.getObject(objectName));\n  };\n\n  editGroup = (group: ?gdObjectGroup) => {\n    this.setState({ editedGroup: group });\n  };\n\n  setUiSettings = (uiSettings: Object) => {\n    this.setState({\n      uiSettings: {\n        ...this.state.uiSettings,\n        ...uiSettings,\n      },\n    });\n  };\n\n  undo = () => {\n    this.instancesSelection.clearSelection();\n    this.setState(\n      {\n        history: undo(this.state.history, this.props.initialInstances),\n      },\n      () => {\n        // /!\\ Force the instances editor to destroy and mount again the\n        // renderers to avoid keeping any references to existing instances\n        if (this.editor) this.editor.forceRemount();\n        this.updateToolbar();\n      }\n    );\n  };\n\n  redo = () => {\n    this.instancesSelection.clearSelection();\n    this.setState(\n      {\n        history: redo(this.state.history, this.props.initialInstances),\n      },\n      () => {\n        // /!\\ Force the instances editor to destroy and mount again the\n        // renderers to avoid keeping any references to existing instances\n        if (this.editor) this.editor.forceRemount();\n        this.updateToolbar();\n      }\n    );\n  };\n\n  _onObjectSelected = (selectedObjectName: string) => {\n    if (!selectedObjectName) {\n      this.setState({\n        selectedObjectNames: [],\n      });\n    } else {\n      this.setState({\n        selectedObjectNames: [selectedObjectName],\n      });\n    }\n  };\n\n  _createNewObjectAndInstanceUnderCursor = () => {\n    if (!this.editor) {\n      return;\n    }\n\n    // Remember where to create the instance, when the object will be created\n    this.setState({\n      newObjectInstanceSceneCoordinates: this.editor.getLastCursorSceneCoordinates(),\n    });\n\n    if (this._objectsList)\n      this._objectsList.setState({ newObjectDialogOpen: true });\n  };\n\n  _onAddInstanceUnderCursor = () => {\n    if (!this.state.selectedObjectNames.length || !this.editor) {\n      return;\n    }\n\n    const objectSelected = this.state.selectedObjectNames[0];\n    const cursorPosition = this.editor.getLastCursorSceneCoordinates();\n    this._addInstance(cursorPosition, objectSelected);\n    this.setState({\n      selectedObjectNames: [objectSelected],\n    });\n  };\n\n  _addInstance = (pos: [number, number], objectName: string) => {\n    if (!objectName || !this.editor) return;\n\n    this.editor.addInstances(pos, [objectName]);\n    this.setState(\n      {\n        selectedObjectNames: [],\n        history: saveToHistory(this.state.history, this.props.initialInstances),\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  _onInstancesAdded = () => {\n    this.setState(\n      {\n        history: saveToHistory(this.state.history, this.props.initialInstances),\n      },\n      () => this.updateToolbar()\n    );\n  };\n\n  _onInstancesSelected = (instances: Array<gdInitialInstance>) => {\n    this.setState({\n      selectedObjectNames: uniq(\n        instances.map(instance => instance.getObjectName())\n      ),\n    });\n    this.forceUpdatePropertiesEditor();\n    this.updateToolbar();\n  };\n\n  _onInstancesMoved = (instances: Array<gdInitialInstance>) => {\n    this.setState(\n      {\n        history: saveToHistory(this.state.history, this.props.initialInstances),\n      },\n      () => this.forceUpdatePropertiesEditor()\n    );\n  };\n\n  _onInstancesResized = (instances: Array<gdInitialInstance>) => {\n    this.setState(\n      {\n        history: saveToHistory(this.state.history, this.props.initialInstances),\n      },\n      () => this.forceUpdatePropertiesEditor()\n    );\n  };\n\n  _onInstancesRotated = (instances: Array<gdInitialInstance>) => {\n    this.setState(\n      {\n        history: saveToHistory(this.state.history, this.props.initialInstances),\n      },\n      () => this.forceUpdatePropertiesEditor()\n    );\n  };\n\n  _onInstancesModified = (instances: Array<gdInitialInstance>) => {\n    this.forceUpdate();\n    //TODO: Save for redo with debounce (and cancel on unmount)\n  };\n\n  _onSelectInstances = (\n    instances: Array<gdInitialInstance>,\n    centerView: boolean = true\n  ) => {\n    this.instancesSelection.selectInstances(instances, false);\n\n    if (centerView) {\n      if (this.editor) this.editor.centerViewOn(instances);\n    }\n    this.forceUpdatePropertiesEditor();\n    this.updateToolbar();\n  };\n\n  /**\n   * Create an instance of the given object, at the position\n   * previously chosen (see `newObjectInstanceSceneCoordinates`).\n   */\n  _addInstanceForNewObject = (newObjectName: string) => {\n    const { newObjectInstanceSceneCoordinates } = this.state;\n    if (!newObjectInstanceSceneCoordinates) {\n      return;\n    }\n\n    this._addInstance(newObjectInstanceSceneCoordinates, newObjectName);\n    this.setState({ newObjectInstanceSceneCoordinates: null });\n  };\n\n  _onRemoveLayer = (layerName: string, done: boolean => void) => {\n    this.setState({\n      layerRemoveDialogOpen: true,\n      layerRemoved: layerName,\n      onCloseLayerRemoveDialog: (doRemove, newLayer) => {\n        this.setState(\n          {\n            layerRemoveDialogOpen: false,\n          },\n          () => {\n            if (doRemove) {\n              if (newLayer === null) {\n                this.props.initialInstances.removeAllInstancesOnLayer(\n                  layerName\n                );\n              } else {\n                this.props.initialInstances.moveInstancesToLayer(\n                  layerName,\n                  newLayer\n                );\n              }\n            }\n\n            done(doRemove);\n            // /!\\ Force the instances editor to destroy and mount again the\n            // renderers to avoid keeping any references to existing instances\n            if (this.editor) this.editor.forceRemount();\n            this.updateToolbar();\n          }\n        );\n      },\n    });\n  };\n\n  _onRenameLayer = (\n    oldName: string,\n    newName: string,\n    done: boolean => void\n  ) => {\n    this.props.initialInstances.moveInstancesToLayer(oldName, newName);\n    done(true);\n  };\n\n  _onDeleteObject = (\n    objectWithContext: ObjectWithContext,\n    done: boolean => void\n  ) => {\n    const { object, global } = objectWithContext;\n    const { project, layout } = this.props;\n\n    //eslint-disable-next-line\n    const answer = confirm(\n      'Do you want to remove all references to this object in groups and events (actions and conditions using the object)?'\n    );\n\n    if (global) {\n      gd.WholeProjectRefactorer.globalObjectOrGroupRemoved(\n        project,\n        object.getName(),\n        /* isObjectGroup=*/ false,\n        !!answer\n      );\n    } else {\n      gd.WholeProjectRefactorer.objectOrGroupRemovedInLayout(\n        project,\n        layout,\n        object.getName(),\n        /* isObjectGroup=*/ false,\n        !!answer\n      );\n    }\n    done(true);\n  };\n\n  _canObjectOrGroupUseNewName = (newName: string) => {\n    const { project, layout } = this.props;\n\n    if (\n      layout.hasObjectNamed(newName) ||\n      project.hasObjectNamed(newName) ||\n      layout.getObjectGroups().has(newName) ||\n      project.getObjectGroups().has(newName)\n    ) {\n      showWarningBox('Another object or group with this name already exists.');\n      return false;\n    } else if (!gd.Project.validateObjectName(newName)) {\n      showWarningBox(\n        'This name contains forbidden characters: please only use alphanumeric characters (0-9, a-z) and underscores in your object name.'\n      );\n      return false;\n    }\n\n    return true;\n  };\n\n  _onRenameEditedObject = (newName: string) => {\n    const { editedObjectWithContext } = this.state;\n\n    if (editedObjectWithContext) {\n      this._onRenameObject(editedObjectWithContext, newName, () => {});\n    }\n  };\n\n  _onRenameObject = (\n    objectWithContext: ObjectWithContext,\n    newName: string,\n    done: boolean => void\n  ) => {\n    const { object, global } = objectWithContext;\n    const { project, layout } = this.props;\n\n    // newName is supposed to have been already validated\n\n    // Avoid triggering renaming refactoring if name has not really changed\n    if (object.getName() !== newName) {\n      if (global) {\n        gd.WholeProjectRefactorer.globalObjectOrGroupRenamed(\n          project,\n          object.getName(),\n          newName,\n          /* isObjectGroup=*/ false\n        );\n      } else {\n        gd.WholeProjectRefactorer.objectOrGroupRenamedInLayout(\n          project,\n          layout,\n          object.getName(),\n          newName,\n          /* isObjectGroup=*/ false\n        );\n      }\n    }\n\n    object.setName(newName);\n    done(true);\n  };\n\n  _onDeleteGroup = (\n    groupWithContext: GroupWithContext,\n    done: boolean => void\n  ) => {\n    const { group, global } = groupWithContext;\n    const { project, layout } = this.props;\n\n    //eslint-disable-next-line\n    const answer = confirm(\n      'Do you want to remove all references to this group in events (actions and conditions using the group)?'\n    );\n\n    if (global) {\n      gd.WholeProjectRefactorer.globalObjectOrGroupRemoved(\n        project,\n        group.getName(),\n        /* isObjectGroup=*/ true,\n        !!answer\n      );\n    } else {\n      gd.WholeProjectRefactorer.objectOrGroupRemovedInLayout(\n        project,\n        layout,\n        group.getName(),\n        /* isObjectGroup=*/ true,\n        !!answer\n      );\n    }\n    done(true);\n  };\n\n  _onRenameGroup = (\n    groupWithContext: GroupWithContext,\n    newName: string,\n    done: boolean => void\n  ) => {\n    const { group, global } = groupWithContext;\n    const { project, layout } = this.props;\n\n    // newName is supposed to have been already validated\n\n    // Avoid triggering renaming refactoring if name has not really changed\n    if (group.getName() !== newName) {\n      if (global) {\n        gd.WholeProjectRefactorer.globalObjectOrGroupRenamed(\n          project,\n          group.getName(),\n          newName,\n          /* isObjectGroup=*/ true\n        );\n      } else {\n        gd.WholeProjectRefactorer.objectOrGroupRenamedInLayout(\n          project,\n          layout,\n          group.getName(),\n          newName,\n          /* isObjectGroup=*/ true\n        );\n      }\n    }\n\n    done(true);\n  };\n\n  deleteSelection = () => {\n    const selectedInstances = this.instancesSelection.getSelectedInstances();\n    selectedInstances.map(instance =>\n      this.props.initialInstances.removeInstance(instance)\n    );\n\n    this.instancesSelection.clearSelection();\n    if (this.editor) this.editor.clearHighlightedInstance();\n\n    this.setState(\n      {\n        selectedObjectNames: [],\n        history: saveToHistory(this.state.history, this.props.initialInstances),\n      },\n      () => {\n        this.updateToolbar();\n        this.forceUpdatePropertiesEditor();\n      }\n    );\n  };\n\n  centerView = () => {\n    if (this.editor) this.editor.centerView();\n  };\n\n  setZoomFactor = (zoomFactor: number) => {\n    if (this.editor) this.editor.setZoomFactor(zoomFactor);\n  };\n\n  zoomIn = () => {\n    if (this.editor) this.editor.zoomBy(0.1);\n  };\n\n  zoomOut = () => {\n    if (this.editor) this.editor.zoomBy(-0.1);\n  };\n\n  _onContextMenu = (x: number, y: number) => {\n    if (this.contextMenu) this.contextMenu.open(x, y);\n  };\n\n  copySelection = ({ useLastCursorPosition }: CopyCutPasteOptions = {}) => {\n    const serializedSelection = this.instancesSelection\n      .getSelectedInstances()\n      .map(instance => serializeToJSObject(instance));\n\n    if (this.editor) {\n      const position = useLastCursorPosition\n        ? this.editor.getLastCursorSceneCoordinates()\n        : this.editor.getLastContextMenuSceneCoordinates();\n      Clipboard.set(INSTANCES_CLIPBOARD_KIND, {\n        x: position[0],\n        y: position[1],\n        instances: serializedSelection,\n      });\n    }\n  };\n\n  cutSelection = (options: CopyCutPasteOptions = {}) => {\n    this.copySelection(options);\n    this.deleteSelection();\n  };\n\n  paste = ({ useLastCursorPosition }: CopyCutPasteOptions = {}) => {\n    const clipboardContent = Clipboard.get(INSTANCES_CLIPBOARD_KIND);\n    if (!clipboardContent || !this.editor) return;\n\n    const position = useLastCursorPosition\n      ? this.editor.getLastCursorSceneCoordinates()\n      : this.editor.getLastContextMenuSceneCoordinates();\n    const { x, y } = clipboardContent;\n    clipboardContent.instances\n      .map(serializedInstance => {\n        const instance = new gd.InitialInstance();\n        unserializeFromJSObject(instance, serializedInstance);\n        return instance;\n      })\n      .forEach(instance => {\n        instance.setX(instance.getX() - x + position[0]);\n        instance.setY(instance.getY() - y + position[1]);\n        this.props.initialInstances.insertInitialInstance(instance);\n        instance.delete();\n      });\n  };\n\n  updateBehaviorsSharedData = () => {\n    const { layout, project } = this.props;\n    layout.updateBehaviorsSharedData(project);\n  };\n\n  forceUpdateObjectsList = () => {\n    if (this._objectsList) this._objectsList.forceUpdateList();\n  };\n\n  forceUpdatePropertiesEditor = () => {\n    if (this._propertiesEditor) this._propertiesEditor.forceUpdate();\n  };\n\n  reloadResourcesFor = (object: gdObject) => {\n    const { project } = this.props;\n\n    const resourcesInUse = new gd.ResourcesInUseHelper();\n    object.exposeResources(resourcesInUse);\n    const objectResourceNames = resourcesInUse\n      .getAllImages()\n      .toNewVectorString()\n      .toJSArray();\n\n    PixiResourcesLoader.loadTextures(\n      project,\n      objectResourceNames,\n      () => {},\n      () => {\n        if (this.editor) this.editor.resetRenderersFor(object.getName());\n      }\n    );\n  };\n\n  _getAllObjectTags = (): Array<string> => {\n    const { project, layout } = this.props;\n\n    const tagsSet: Set<string> = new Set();\n    enumerateObjects(project, layout).allObjectsList.forEach(({ object }) => {\n      getTagsFromString(object.getTags()).forEach(tag => tagsSet.add(tag));\n    });\n\n    return Array.from(tagsSet);\n  };\n\n  _buildObjectTagsMenuTemplate = (i18n: I18nType): Array<any> => {\n    const { selectedObjectTags } = this.state;\n\n    return buildTagsMenuTemplate({\n      noTagLabel: i18n._(t`No tags - add a tag to an object first`),\n      getAllTags: this._getAllObjectTags,\n      selectedTags: selectedObjectTags,\n      onChange: selectedObjectTags => {\n        this.setState({ selectedObjectTags });\n      },\n    });\n  };\n\n  render() {\n    const {\n      project,\n      layout,\n      initialInstances,\n      resourceSources,\n      onChooseResource,\n      resourceExternalEditors,\n      isActive,\n    } = this.props;\n    const selectedInstances = this.instancesSelection.getSelectedInstances();\n\n    const editors = {\n      properties: {\n        type: 'secondary',\n        title: <Trans>Properties</Trans>,\n        renderEditor: () => (\n          <InstancePropertiesEditor\n            project={project}\n            layout={layout}\n            instances={selectedInstances}\n            editInstanceVariables={this.editInstanceVariables}\n            editObjectVariables={this.editObjectVariables}\n            onEditObjectByName={this.editObjectByName}\n            ref={propertiesEditor =>\n              (this._propertiesEditor = propertiesEditor)\n            }\n          />\n        ),\n      },\n      'instances-editor': {\n        type: 'primary',\n        noTitleBar: true,\n        renderEditor: () => (\n          <ScreenTypeMeasurer>\n            {screenType => (\n              <FullSizeInstancesEditor\n                project={project}\n                layout={layout}\n                initialInstances={initialInstances}\n                options={this.state.uiSettings}\n                onChangeOptions={this.setUiSettings}\n                instancesSelection={this.instancesSelection}\n                onDeleteSelection={this.deleteSelection}\n                onInstancesAdded={this._onInstancesAdded}\n                onInstancesSelected={this._onInstancesSelected}\n                onInstancesMoved={this._onInstancesMoved}\n                onInstancesResized={this._onInstancesResized}\n                onInstancesRotated={this._onInstancesRotated}\n                selectedObjectNames={this.state.selectedObjectNames}\n                onContextMenu={this._onContextMenu}\n                onCopy={() =>\n                  this.copySelection({ useLastCursorPosition: true })\n                }\n                onCut={() => this.cutSelection({ useLastCursorPosition: true })}\n                onPaste={() => this.paste({ useLastCursorPosition: true })}\n                onUndo={this.undo}\n                onRedo={this.redo}\n                onZoomOut={this.zoomOut}\n                onZoomIn={this.zoomIn}\n                wrappedEditorRef={editor => (this.editor = editor)}\n                pauseRendering={!isActive}\n                screenType={screenType}\n              />\n            )}\n          </ScreenTypeMeasurer>\n        ),\n      },\n      'objects-list': {\n        type: 'secondary',\n        title: <Trans>Objects</Trans>,\n        toolbarControls: [\n          <I18n key=\"tags\">\n            {({ i18n }) => (\n              <TagsButton\n                buildMenuTemplate={() =>\n                  this._buildObjectTagsMenuTemplate(i18n)\n                }\n              />\n            )}\n          </I18n>,\n          <CloseButton key=\"close\" />,\n        ],\n        renderEditor: () => (\n          <ObjectsList\n            getThumbnail={ObjectsRenderingService.getThumbnail.bind(\n              ObjectsRenderingService\n            )}\n            project={project}\n            objectsContainer={layout}\n            selectedObjectNames={this.state.selectedObjectNames}\n            onEditObject={this.props.onEditObject || this.editObject}\n            onDeleteObject={this._onDeleteObject}\n            canRenameObject={this._canObjectOrGroupUseNewName}\n            onObjectCreated={this._addInstanceForNewObject}\n            onObjectSelected={this._onObjectSelected}\n            onRenameObject={this._onRenameObject}\n            onObjectPasted={() => this.updateBehaviorsSharedData()}\n            selectedObjectTags={this.state.selectedObjectTags}\n            onChangeSelectedObjectTags={selectedObjectTags =>\n              this.setState({\n                selectedObjectTags,\n              })\n            }\n            getAllObjectTags={this._getAllObjectTags}\n            ref={objectsList => (this._objectsList = objectsList)}\n          />\n        ),\n      },\n      'object-groups-list': {\n        type: 'secondary',\n        title: <Trans>Object Groups</Trans>,\n        renderEditor: () => (\n          <ObjectGroupsList\n            globalObjectGroups={project.getObjectGroups()}\n            objectGroups={layout.getObjectGroups()}\n            onEditGroup={this.editGroup}\n            onDeleteGroup={this._onDeleteGroup}\n            onRenameGroup={this._onRenameGroup}\n            canRenameGroup={this._canObjectOrGroupUseNewName}\n          />\n        ),\n      },\n    };\n    return (\n      <div style={styles.container}>\n        <ResponsiveWindowMeasurer>\n          {windowWidth => (\n            <EditorMosaic\n              editors={editors}\n              limitToOneSecondaryEditor={windowWidth === 'small'}\n              initialNodes={\n                windowWidth === 'small'\n                  ? initialEditorsSmallWindow\n                  : initialEditors\n              }\n              ref={editorMosaic => (this.editorMosaic = editorMosaic)}\n            />\n          )}\n        </ResponsiveWindowMeasurer>\n        {this.state.editedObjectWithContext && (\n          <ObjectEditorDialog\n            open\n            object={this.state.editedObjectWithContext.object}\n            project={project}\n            resourceSources={resourceSources}\n            resourceExternalEditors={resourceExternalEditors}\n            onChooseResource={onChooseResource}\n            onCancel={() => {\n              if (this.state.editedObjectWithContext) {\n                this.reloadResourcesFor(\n                  this.state.editedObjectWithContext.object\n                );\n              }\n              this.editObject(null);\n            }}\n            canRenameObject={this._canObjectOrGroupUseNewName}\n            onRename={newName => {\n              this._onRenameEditedObject(newName);\n            }}\n            onApply={() => {\n              if (this.state.editedObjectWithContext) {\n                this.reloadResourcesFor(\n                  this.state.editedObjectWithContext.object\n                );\n              }\n              this.editObject(null);\n              this.updateBehaviorsSharedData();\n              this.forceUpdateObjectsList();\n            }}\n          />\n        )}\n        {!!this.state.editedGroup && (\n          <ObjectGroupEditorDialog\n            project={project}\n            open\n            group={this.state.editedGroup}\n            objectsContainer={layout}\n            globalObjectsContainer={project}\n            onCancel={() => this.editGroup(null)}\n            onApply={() => this.editGroup(null)}\n          />\n        )}\n        <Drawer\n          open={this.state.instancesListOpen}\n          PaperProps={instancesDrawerPaperProps}\n          anchor=\"right\"\n          onClose={this.toggleInstancesList}\n        >\n          <EditorBar\n            title={<Trans>Instances</Trans>}\n            displayLeftCloseButton\n            onClose={this.toggleInstancesList}\n          />\n          <InstancesList\n            freezeUpdate={!this.state.instancesListOpen}\n            instances={initialInstances}\n            selectedInstances={selectedInstances}\n            onSelectInstances={this._onSelectInstances}\n            style={{\n              height: `calc(100% - ${editorBarHeight}px)`,\n            }}\n          />\n        </Drawer>\n        <Drawer\n          open={this.state.layersListOpen}\n          PaperProps={layersDrawerPaperProps}\n          anchor=\"right\"\n          onClose={this.toggleLayersList}\n        >\n          <EditorBar\n            title={<Trans>Layers</Trans>}\n            displayLeftCloseButton\n            onClose={this.toggleLayersList}\n          />\n          <LayersList\n            project={project}\n            resourceSources={resourceSources}\n            resourceExternalEditors={resourceExternalEditors}\n            onChooseResource={onChooseResource}\n            freezeUpdate={!this.state.layersListOpen}\n            onRemoveLayer={this._onRemoveLayer}\n            onRenameLayer={this._onRenameLayer}\n            layersContainer={layout}\n          />\n        </Drawer>\n        <InfoBar\n          identifier=\"instance-drag-n-drop-explanation\"\n          message={\n            <Trans>\n              Drag and Drop the object to the scene or use the right click menu\n              to add an instance of it.\n            </Trans>\n          }\n          touchScreenMessage={\n            <Trans>\n              Drag and Drop the object icon to the scene or long press to show\n              options to edit the object.\n            </Trans>\n          }\n          show={!!this.state.selectedObjectNames.length}\n        />\n        <InfoBar\n          identifier=\"objects-panel-explanation\"\n          message={\n            <Trans>\n              Objects panel is already opened: use it to add and edit objects.\n            </Trans>\n          }\n          show={!!this.state.showObjectsListInfoBar}\n        />\n        <InfoBar\n          identifier=\"instance-properties-panel-explanation\"\n          message={\n            <Trans>\n              Properties panel is already opened. After selecting an instance on\n              the scene, inspect and change its properties from this panel.\n            </Trans>\n          }\n          show={!!this.state.showPropertiesInfoBar}\n        />\n        {this.state.setupGridOpen && (\n          <SetupGridDialog\n            open\n            gridOptions={this.state.uiSettings}\n            onCancel={() => this.openSetupGrid(false)}\n            onApply={gridOptions => {\n              this.setUiSettings(gridOptions);\n              this.openSetupGrid(false);\n            }}\n          />\n        )}\n        {!!this.state.variablesEditedInstance && (\n          <VariablesEditorDialog\n            open\n            variablesContainer={\n              this.state.variablesEditedInstance &&\n              this.state.variablesEditedInstance.getVariables()\n            }\n            onCancel={() => this.editInstanceVariables(null)}\n            onApply={() => this.editInstanceVariables(null)}\n            emptyExplanationMessage={\n              <Trans>\n                Instance variables will override the default values of the\n                variables of the object.\n              </Trans>\n            }\n            title={<Trans>Instance Variables</Trans>}\n            onEditObjectVariables={() => {\n              if (!this.instancesSelection.hasSelectedInstances()) {\n                return;\n              }\n              const associatedObjectName = this.instancesSelection\n                .getSelectedInstances()[0]\n                .getObjectName();\n              const object = getObjectByName(\n                project,\n                layout,\n                associatedObjectName\n              );\n              if (object) {\n                this.editObjectVariables(object);\n                this.editInstanceVariables(null);\n              }\n            }}\n          />\n        )}\n        {!!this.state.variablesEditedObject && (\n          <VariablesEditorDialog\n            open\n            variablesContainer={\n              this.state.variablesEditedObject &&\n              this.state.variablesEditedObject.getVariables()\n            }\n            onCancel={() => this.editObjectVariables(null)}\n            onApply={() => this.editObjectVariables(null)}\n            emptyExplanationMessage={\n              <Trans>\n                When you add variables to an object, any instance of the object\n                put on the scene or created during the game will have these\n                variables attached to it.\n              </Trans>\n            }\n            title={<Trans>Object Variables</Trans>}\n          />\n        )}\n        {!!this.state.layerRemoveDialogOpen && (\n          <LayerRemoveDialog\n            open\n            layersContainer={layout}\n            layerRemoved={this.state.layerRemoved}\n            onClose={this.state.onCloseLayerRemoveDialog}\n          />\n        )}\n        {this.state.scenePropertiesDialogOpen && (\n          <ScenePropertiesDialog\n            open\n            project={project}\n            layout={layout}\n            onClose={() => this.openSceneProperties(false)}\n            onApply={() => this.openSceneProperties(false)}\n            onEditVariables={() => this.editLayoutVariables(true)}\n            onOpenMoreSettings={this.props.onOpenMoreSettings}\n          />\n        )}\n        {!!this.state.layoutVariablesDialogOpen && (\n          <VariablesEditorDialog\n            open\n            variablesContainer={layout.getVariables()}\n            onCancel={() => this.editLayoutVariables(false)}\n            onApply={() => this.editLayoutVariables(false)}\n            title={<Trans>Scene Variables</Trans>}\n            emptyExplanationMessage={\n              <Trans>\n                Scene variables can be used to store any value or text during\n                the game.\n              </Trans>\n            }\n            emptyExplanationSecondMessage={\n              <Trans>\n                For example, you can have a variable called Score representing\n                the current score of the player.\n              </Trans>\n            }\n          />\n        )}\n        <ContextMenu\n          ref={contextMenu => (this.contextMenu = contextMenu)}\n          buildMenuTemplate={() => [\n            {\n              label: this.state.selectedObjectNames.length\n                ? 'Add an Instance of ' +\n                  shortenString(this.state.selectedObjectNames[0], 7)\n                : '',\n              click: () => this._onAddInstanceUnderCursor(),\n              visible: this.state.selectedObjectNames.length > 0,\n            },\n            {\n              label: 'Insert a New Object',\n              click: () => this._createNewObjectAndInstanceUnderCursor(),\n              visible: this.state.selectedObjectNames.length === 0,\n            },\n            {\n              label: this.state.selectedObjectNames.length\n                ? 'Edit Object ' +\n                  shortenString(this.state.selectedObjectNames[0], 14)\n                : '',\n              click: () =>\n                this.editObjectByName(this.state.selectedObjectNames[0]),\n              visible: this.state.selectedObjectNames.length > 0,\n            },\n            {\n              label: 'Scene properties',\n              click: () => this.openSceneProperties(true),\n            },\n            { type: 'separator' },\n            {\n              label: 'Copy',\n              click: () => this.copySelection(),\n              enabled: this.instancesSelection.hasSelectedInstances(),\n              accelerator: 'CmdOrCtrl+C',\n            },\n            {\n              label: 'Cut',\n              click: () => this.cutSelection(),\n              enabled: this.instancesSelection.hasSelectedInstances(),\n              accelerator: 'CmdOrCtrl+X',\n            },\n            {\n              label: 'Paste',\n              click: () => this.paste(),\n              enabled: Clipboard.has(INSTANCES_CLIPBOARD_KIND),\n              accelerator: 'CmdOrCtrl+V',\n            },\n            { type: 'separator' },\n            {\n              label: 'Undo',\n              click: this.undo,\n              enabled: canUndo(this.state.history),\n              accelerator: 'CmdOrCtrl+Z',\n            },\n            {\n              label: 'Redo',\n              click: this.redo,\n              enabled: canRedo(this.state.history),\n              accelerator: 'CmdOrCtrl+Shift+Z',\n            },\n            {\n              label: 'Delete',\n              click: () => this.deleteSelection(),\n              enabled: this.instancesSelection.hasSelectedInstances(),\n            },\n          ]}\n        />\n      </div>\n    );\n  }\n}\n","// @flow\nimport ViewPosition from './ViewPosition';\n\nexport const shouldBeHandledByPinch = (event: ?TouchEvent) => {\n  if (!event) return false;\n\n  const { targetTouches } = event;\n  return targetTouches && targetTouches.length >= 2;\n};\n\ntype PinchDetectorArgs = {|\n  canvas: HTMLCanvasElement,\n  onPinchStart: () => void,\n  onPinchMove: (x: number, y: number, scale: number) => void,\n  onPinchEnd: () => void,\n|};\n\n/**\n * Attach events to the canvas that will notify of a pinch at some position\n * and scaling associated with it.\n * Returns a function that can be called to remove these events.\n */\nconst registerCanvasPinchDetector = ({\n  canvas,\n  onPinchStart,\n  onPinchMove,\n  onPinchEnd,\n}: PinchDetectorArgs) => {\n  let lastPinch = null;\n\n  function start() {\n    canvas.addEventListener('touchmove', move);\n  }\n\n  function move(e: TouchEvent) {\n    if (!shouldBeHandledByPinch(e)) {\n      return;\n    }\n    var t = e.targetTouches;\n\n    var dx = t[0].clientX - t[1].clientX;\n    var dy = t[0].clientY - t[1].clientY;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    if (!lastPinch) {\n      lastPinch = {\n        p: {\n          distance: distance,\n          date: new Date(),\n        },\n      };\n      onPinchStart();\n      return;\n    }\n    var now = new Date();\n    var interval = now - lastPinch.p.date;\n    if (interval < 12) {\n      return;\n    }\n    const newCenter = {\n      x: (t[0].clientX + t[1].clientX) / 2,\n      y: (t[0].clientY + t[1].clientY) / 2,\n    };\n    const scaleChange = distance / lastPinch.p.distance;\n\n    onPinchMove(newCenter.x, newCenter.y, scaleChange);\n    lastPinch.p = {\n      distance: distance,\n      date: now,\n    };\n  }\n\n  function end(e: TouchEvent) {\n    canvas.removeEventListener('touchmove', move);\n    if (!lastPinch) {\n      return;\n    }\n\n    onPinchEnd();\n    lastPinch = null;\n  }\n\n  canvas.addEventListener('touchstart', start);\n  canvas.addEventListener('touchend', end);\n\n  function unregisterCanvasPinchDetector() {\n    canvas.removeEventListener('touchstart', start);\n    canvas.removeEventListener('touchmove', move);\n    canvas.removeEventListener('touchend', end);\n  }\n\n  return unregisterCanvasPinchDetector;\n};\n\ntype Props = {|\n  canvas: HTMLCanvasElement,\n  setZoomFactor: number => void,\n  getZoomFactor: () => number,\n  viewPosition: ViewPosition,\n|};\n\n/**\n * Handle pinch to zoom/move on the canvas, changing the zoom factor or view\n * position accordingly.\n */\nexport default class PinchHandler {\n  _lastPinchCenterX: number | null = null;\n  _lastPinchCenterY: number | null = null;\n  _setZoomFactor: number => void;\n  _getZoomFactor: () => number;\n  _viewPosition: ViewPosition;\n  _unregisterCanvasPinchDetector: () => void;\n\n  constructor({ canvas, setZoomFactor, getZoomFactor, viewPosition }: Props) {\n    this._setZoomFactor = setZoomFactor;\n    this._getZoomFactor = getZoomFactor;\n    this._viewPosition = viewPosition;\n    this._unregisterCanvasPinchDetector = registerCanvasPinchDetector({\n      canvas,\n      onPinchStart: this._startPinch,\n      onPinchMove: this._onPinchMove,\n      onPinchEnd: this._endPinch,\n    });\n  }\n\n  _startPinch = () => {\n    // Nothing to do\n  };\n\n  _onPinchMove = (centerX: number, centerY: number, scale: number) => {\n    if (this._lastPinchCenterX === null || this._lastPinchCenterY === null) {\n      this._lastPinchCenterX = centerX;\n      this._lastPinchCenterY = centerY;\n      return;\n    }\n\n    const deltaX = centerX - this._lastPinchCenterX;\n    const deltaY = centerY - this._lastPinchCenterY;\n    const sceneDeltaX = deltaX / this._getZoomFactor();\n    const sceneDeltaY = deltaY / this._getZoomFactor();\n    this._viewPosition.scrollBy(-sceneDeltaX, -sceneDeltaY);\n    this._lastPinchCenterX = centerX;\n    this._lastPinchCenterY = centerY;\n\n    this._setZoomFactor(this._getZoomFactor() * scale);\n  };\n\n  _endPinch = () => {\n    this._lastPinchCenterX = null;\n    this._lastPinchCenterY = null;\n  };\n\n  unmount = () => {\n    this._unregisterCanvasPinchDetector();\n  };\n}\n","// @flow\n\nexport const roundPosition = (\n  pos: number,\n  gridSize: number,\n  gridOffset: number\n) => {\n  if (gridSize <= 0) {\n    return Math.round(pos);\n  }\n  return Math.floor((pos - gridOffset) / gridSize) * gridSize + gridOffset;\n};\n","import { mapFor } from '../Utils/MapFor';\n\nexport default layersContainer =>\n  mapFor(0, layersContainer.getLayersCount(), i => {\n    return {\n      value: layersContainer.getLayerAt(i).getName(),\n      label: layersContainer.getLayerAt(i).getName() || 'Base layer',\n    };\n  });\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport SelectField from '../../../../UI/SelectField';\nimport SelectOption from '../../../../UI/SelectOption';\n\nimport Toggle from '../../../../UI/Toggle';\nimport { mapFor } from '../../../../Utils/MapFor';\nimport { getCurrentElements } from './SpriteObjectHelper';\nimport { ResponsiveLineStackLayout } from '../../../../UI/Layout';\n\ntype Props = {|\n  spriteObject: gdSpriteObject,\n\n  animationIndex: number,\n  directionIndex: number,\n  spriteIndex: number,\n\n  chooseAnimation: number => void,\n  chooseDirection: number => void,\n  chooseSprite: number => void,\n\n  sameForAllAnimations: boolean,\n  sameForAllSprites: boolean,\n\n  setSameForAllAnimations: boolean => void,\n  setSameForAllSprites: boolean => void,\n\n  setSameForAllAnimationsLabel: string,\n  setSameForAllSpritesLabel: string,\n|};\n\n/**\n * A component that displays selector to browse the animations/directions/sprite\n * of a Sprite object. Also have toggles so that the user can choose if the edited property\n * (typically, the points or the collision masks of the sprite) should be shared between\n * all sprites of an animation, or between all sprites of all animations of the object.\n */\nexport default class SpriteSelector extends React.Component<Props, void> {\n  render() {\n    const {\n      spriteObject,\n      animationIndex,\n      directionIndex,\n      spriteIndex,\n      sameForAllAnimations,\n      sameForAllSprites,\n      chooseAnimation,\n      chooseDirection,\n      chooseSprite,\n      setSameForAllAnimations,\n      setSameForAllSprites,\n      setSameForAllAnimationsLabel,\n      setSameForAllSpritesLabel,\n    } = this.props;\n\n    const {\n      hasValidAnimation,\n      animation,\n      hasValidDirection,\n      direction,\n    } = getCurrentElements(\n      spriteObject,\n      animationIndex,\n      directionIndex,\n      spriteIndex\n    );\n\n    return (\n      <React.Fragment>\n        <ResponsiveLineStackLayout>\n          <SelectField\n            floatingLabelText={<Trans>Animation</Trans>}\n            value={this.props.animationIndex}\n            onChange={(e, i, value: string) =>\n              chooseAnimation(parseInt(value, 10) || 0)\n            }\n          >\n            {mapFor(0, spriteObject.getAnimationsCount(), i => {\n              const animation = spriteObject.getAnimation(i);\n              return (\n                <SelectOption\n                  key={i}\n                  value={i}\n                  primaryText={t`Animation #${i} ${animation.getName()}`}\n                />\n              );\n            })}\n          </SelectField>\n          {hasValidAnimation && animation.getDirectionsCount() > 1 && (\n            <SelectField\n              floatingLabelText={<Trans>Direction</Trans>}\n              value={this.props.directionIndex}\n              onChange={(e, i, value: string) =>\n                chooseDirection(parseInt(value, 10) || 0)\n              }\n            >\n              {mapFor(0, animation.getDirectionsCount(), i => {\n                return (\n                  <SelectOption\n                    value={i}\n                    key={i}\n                    primaryText={t`Direction #${i}`}\n                  />\n                );\n              })}\n            </SelectField>\n          )}\n          {hasValidDirection && (\n            <SelectField\n              floatingLabelText={<Trans>Frame</Trans>}\n              value={this.props.spriteIndex}\n              onChange={(e, i, value: string) =>\n                chooseSprite(parseInt(value, 10) || 0)\n              }\n            >\n              {mapFor(0, direction.getSpritesCount(), i => {\n                return (\n                  <SelectOption\n                    value={i}\n                    key={i}\n                    primaryText={t`Frame #${i}`}\n                  />\n                );\n              })}\n            </SelectField>\n          )}\n        </ResponsiveLineStackLayout>\n        <Toggle\n          label={setSameForAllAnimationsLabel}\n          labelPosition=\"right\"\n          toggled={sameForAllAnimations}\n          onToggle={(e, checked) => setSameForAllAnimations(checked)}\n        />\n        <Toggle\n          label={setSameForAllSpritesLabel}\n          labelPosition=\"right\"\n          toggled={sameForAllSprites}\n          onToggle={(e, checked) => setSameForAllSprites(checked)}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nexport const isNullPtr = (\n  gd: libGDevelop,\n  object: gdEmscriptenObject\n): boolean => gd.getPointer(object) === 0;\n","// @flow\nimport * as React from 'react';\nimport SceneEditor from '../../SceneEditor';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../../Utils/Serializer';\nimport BaseEditor from './BaseEditor';\nimport { type PreviewOptions } from '../../Export/PreviewLauncher.flow';\n\nexport default class SceneEditorContainer extends BaseEditor {\n  editor: ?SceneEditor;\n\n  shouldComponentUpdate(nextProps: *) {\n    // This optimization is a bit more cautious than the one is BaseEditor, to still allow\n    // children, and in particular SceneEditor and InstancesEditor, to be notified when isActive\n    // goes from true to false (in which case PIXI rendering is halted). If isActive was false\n    // and remains false, it's safe to stop update here (PIXI rendering is already halted).\n    if (!this.props.isActive && !nextProps.isActive) {\n      return false;\n    }\n\n    return true;\n  }\n\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  getSerializedElements() {\n    const layout = this.getLayout();\n    if (!layout) return {};\n\n    return {\n      ...BaseEditor.getLayoutSerializedElements(layout),\n      instances: serializeToJSObject(layout.getInitialInstances()),\n      uiSettings: this.editor ? this.editor.getUiSettings() : {},\n    };\n  }\n\n  getLayout(): ?gdLayout {\n    const { project, layoutName } = this.props;\n    if (!project || !project.hasLayoutNamed(layoutName)) return null;\n\n    return project.getLayout(layoutName);\n  }\n\n  saveUiSettings = () => {\n    const layout = this.getLayout();\n    const editor = this.editor;\n\n    if (editor && layout) {\n      unserializeFromJSObject(\n        layout.getAssociatedSettings(),\n        editor.getUiSettings()\n      );\n    }\n  };\n\n  render() {\n    const { project, layoutName, isActive } = this.props;\n    const layout = this.getLayout();\n    if (!layout) {\n      //TODO: Error component\n      return <div>No layout called {layoutName} found!</div>;\n    }\n\n    return (\n      <SceneEditor\n        {...this.props}\n        ref={editor => (this.editor = editor)}\n        project={project}\n        layout={layout}\n        initialInstances={layout.getInitialInstances()}\n        initialUiSettings={serializeToJSObject(layout.getAssociatedSettings())}\n        onPreview={(options: PreviewOptions) =>\n          this.props.onPreview(project, layout, options)\n        }\n        onOpenDebugger={this.props.onOpenDebugger}\n        isActive={isActive}\n      />\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport axios from 'axios';\nimport { GDevelopUsageApi } from './ApiConfigs';\nimport { type MessageDescriptor } from '../i18n/MessageDescriptor.flow';\n\nexport type Usage = {\n  id: string,\n  userId: string,\n  type: string,\n  createdAt: number,\n};\nexport type Usages = Array<Usage>;\n\nexport type Subscription = {|\n  userId: string,\n  planId: string | null,\n  createdAt: number,\n  updatedAt: number,\n  stripeSubscriptionId?: string,\n  stripeCustomerId?: string,\n|};\n\nexport type Limit = {|\n  limitReached: boolean,\n  current: number,\n  max: number,\n|};\n\nexport type Limits = {\n  [string]: Limit,\n};\n\nexport type PlanDetails = {\n  planId: string | null,\n  name: string,\n  monthlyPriceInEuros: number,\n  smallDescription?: MessageDescriptor,\n  descriptionBullets: Array<{|\n    isLocalAppOnly?: boolean,\n    message: MessageDescriptor,\n  |}>,\n  extraDescription?: MessageDescriptor,\n};\n\nexport const getSubscriptionPlans = (): Array<PlanDetails> => [\n  {\n    planId: 'gdevelop_pro',\n    name: 'GDevelop Pro',\n    monthlyPriceInEuros: 7,\n    smallDescription: t`Ideal for advanced game makers`,\n    descriptionBullets: [\n      {\n        message: t`Package your game for Android up to 70 times a day.`,\n      },\n      {\n        message: t`One-click packaging for Windows, macOS and Linux up to 70 times a day.`,\n      },\n      {\n        message: t`Use Live Preview over Wifi to quickly test your game on mobiles and tablets.`,\n        isLocalAppOnly: true,\n      },\n      {\n        message: t`Use the Debugger to find and solve issues in your games.`,\n        isLocalAppOnly: true,\n      },\n      {\n        message: t`Immerse your players by removing GDevelop logo when the game loads.`,\n      },\n    ],\n    extraDescription: t`You'll also have access to online packaging for iOS or other services when they are released.`,\n  },\n  {\n    planId: 'gdevelop_indie',\n    name: 'GDevelop Indie',\n    monthlyPriceInEuros: 2,\n    smallDescription: t`Ideal for beginners`,\n    descriptionBullets: [\n      {\n        message: t`Package your game for Android up to 10 times a day.`,\n      },\n      {\n        message: t`One-click packaging for Windows, macOS and Linux up to 10 times a day.`,\n      },\n      {\n        message: t`Use Live Preview over Wifi to quickly test your game on mobiles and tablets.`,\n        isLocalAppOnly: true,\n      },\n      {\n        message: t`Use the Debugger to find and solve issues in your games.`,\n        isLocalAppOnly: true,\n      },\n      {\n        message: t`Immerse your players by removing GDevelop logo when the game loads`,\n      },\n    ],\n    extraDescription: t`You'll also have access to online packaging for iOS or other services when they are released.`,\n  },\n  {\n    planId: null,\n    name: 'No subscription',\n    monthlyPriceInEuros: 0,\n    descriptionBullets: [\n      {\n        message: t`You can use GDevelop for free! Online packaging for Android, Windows, macOS and Linux is limited to twice a day to avoid overloading the services.`,\n      },\n    ],\n  },\n];\n\nexport const getUserUsages = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string\n): Promise<Usages> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.get(`${GDevelopUsageApi.baseUrl}/usage`, {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n\nexport const getUserLimits = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string\n): Promise<Limits> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.get(`${GDevelopUsageApi.baseUrl}/limits`, {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data.limits);\n};\n\nexport const getUserSubscription = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string\n): Promise<Subscription> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.get(`${GDevelopUsageApi.baseUrl}/subscription-v2`, {\n        params: {\n          userId,\n        },\n        headers: {\n          Authorization: authorizationHeader,\n        },\n      })\n    )\n    .then(response => response.data);\n};\n\nexport const changeUserSubscription = (\n  getAuthorizationHeader: () => Promise<string>,\n  userId: string,\n  newSubscriptionDetails: { planId: string | null, stripeToken?: any }\n): Promise<Subscription> => {\n  return getAuthorizationHeader()\n    .then(authorizationHeader =>\n      axios.post(\n        `${GDevelopUsageApi.baseUrl}/subscription-v2`,\n        newSubscriptionDetails,\n        {\n          params: {\n            userId,\n          },\n          headers: {\n            Authorization: authorizationHeader,\n          },\n        }\n      )\n    )\n    .then(response => response.data);\n};\n\nexport const getRedirectToCheckoutUrl = (\n  planId: string,\n  uid: string,\n  email: string\n): string => {\n  return `${\n    GDevelopUsageApi.baseUrl\n  }/subscription-v2/redirect-to-checkout?planId=${encodeURIComponent(\n    planId\n  )}&clientReferenceId=${encodeURIComponent(\n    uid\n  )}&customerEmail=${encodeURIComponent(email)}`;\n};\n","// @flow\nimport { type I18n } from '@lingui/core';\n\ntype TranslationFunction = (string => string) | null;\ntype NotNullTranslationFunction = string => string;\n\n/**\n * Given the i18n object, return the function that can be used\n * to translate strings. Useful for wiring i18n to extensions\n * and libGD.js, where translations is done with a simple string\n * to string function.\n */\nexport const getTranslationFunction = (i18n: ?I18n): TranslationFunction => {\n  const i18nModule = i18n; // Make flow happy, ensure i18nModule is const.\n  if (i18nModule) {\n    return (str: string) => i18nModule._(str);\n  }\n\n  return null;\n};\n\n/**\n * Given the i18n object, return the function that can be used\n * to translate strings. Useful for wiring i18n to extensions\n * and libGD.js, where translations is done with a simple string\n * to string function.\n */\nexport const getNotNullTranslationFunction = (\n  i18n: ?I18n\n): NotNullTranslationFunction => {\n  const i18nModule = i18n; // Make flow happy, ensure i18nModule is const.\n  if (i18nModule) {\n    return (str: string) => i18nModule._(str);\n  }\n\n  return (str: string) => str;\n};\n","// This file is generated by update-examples-extensions-usage-from-resources-examples.js script\n// prettier-ignore\nmodule.exports = {\n  \"admob\": {\n    \"description\": \"Demonstrate how to show ads from AdMob in your game: banners, interstitial screen or reward videos. Also useful to test that your AdMob account is working properly.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"AdMob\",\n        \"name\": \"AdMob\"\n      }\n    ]\n  },\n  \"advanced-shape-based-painter\": {\n    \"description\": \"Show how to use Shape Painter objects to create a simple drawing app.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Primitive drawing\",\n        \"name\": \"PrimitiveDrawing\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"animation-speed-scale\": {\n    \"description\": \"Change the speed of the animation of an object according to its movement speed.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      }\n    ]\n  },\n  \"asteroids\": {\n    \"description\": \"An adptation of the classic arcade game Asteroids with GDevelop.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Destroy Outside Screen Behavior\",\n        \"name\": \"DestroyOutsideBehavior\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"basic-ai-with-pathfinding\": {\n    \"description\": \"Show how to use pathfinding to make enemies chase the player.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Pathfinding behavior\",\n        \"name\": \"PathfindingBehavior\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Linked objects\",\n        \"name\": \"LinkedObjects\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      }\n    ]\n  },\n  \"basic-artificial-intelligence\": {\n    \"description\": \"Show how to create enemies looking at the player and chasing him when spotted.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Linked objects\",\n        \"name\": \"LinkedObjects\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      }\n    ]\n  },\n  \"basic-topdown-car-driving\": {\n    \"description\": \"Show how to create a car that can be controlled by the player.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"bbtext-object-demo\": {\n    \"description\": \"This shows how to change the bbcode text of a BBText object displayed on the screen.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"BBCode Text Object\",\n        \"name\": \"BBText\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"betabox-basics-learning-experience\": {\n    \"description\": \"Example level for teaching basic programming skills with extra features and assets.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Panel Sprite (9-patch) Object\",\n        \"name\": \"PanelSpriteObject\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Particle system\",\n        \"name\": \"ParticleSystem\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Destroy Outside Screen Behavior\",\n        \"name\": \"DestroyOutsideBehavior\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Anchor\",\n        \"name\": \"AnchorBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"bomb-the-crate\": {\n    \"description\": \"A basic bomberman like game, where the player can move on the map, drop bombs and destroy crates on the map.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"bouncing-ball-and-rope\": {\n    \"description\": \"Simulate a bouncing ball with ropes that can be created to move the ball around anchors.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Primitive drawing\",\n        \"name\": \"PrimitiveDrawing\"\n      },\n      {\n        \"fullName\": \"Panel Sprite (9-patch) Object\",\n        \"name\": \"PanelSpriteObject\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Advanced control features\",\n        \"name\": \"BuiltinAdvanced\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Linked objects\",\n        \"name\": \"LinkedObjects\"\n      }\n    ]\n  },\n  \"breakout\": {\n    \"description\": \"The classic Breakout arcade game adapted in GDevelop. Read the tutorial about it to learn how to make a game like this.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"External layouts\",\n        \"name\": \"BuiltinExternalLayouts\"\n      }\n    ]\n  },\n  \"buttons\": {\n    \"description\": \"Learn how to make buttons for the menus in your game.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      }\n    ]\n  },\n  \"car-physics\": {\n    \"description\": \"A fun, physics based driving game\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"center-object-within-another\": {\n    \"description\": \"How to put an object on the center of another\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"change-position-of-object\": {\n    \"description\": \"Show how to move an object by changing its X and Y position.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"change-scale-of-sprites\": {\n    \"description\": \"Show how to change the scale of a sprite (to make a zoom effect for example).\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"change-sprite-animation\": {\n    \"description\": \"Learn how to change the animation of a Sprite object (useful for animating almost all objects in your game: characters, enemies, items...)\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"change-sprite-color\": {\n    \"description\": \"Learn how to change the color of a Sprite object - useful to achieve effects like invincibility with a blue tint or taking damage with a red effect. \",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Destroy Outside Screen Behavior\",\n        \"name\": \"DestroyOutsideBehavior\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"character-selection\": {\n    \"description\": \"Example showing how to remember the character selected by the player and use it in other scenes.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Anchor\",\n        \"name\": \"AnchorBehavior\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"count-down-timer\": {\n    \"description\": \"Show how to use a variable as a timer and display it on screen like a bomb count down timer.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"create-object-with-mouseclick\": {\n    \"description\": \"Show how to create an object at the position of the click.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"create-random-object\": {\n    \"description\": \"Show how to create a object randomly picked in a list.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"custom-font\": {\n    \"description\": \"Example showing a text with a custom font applied on it.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      }\n    ]\n  },\n  \"custom-mouse-pointer\": {\n    \"description\": \"Learn how to replace the mouse cursor by a custom image.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"customize-keys-with-lastpressedkey\": {\n    \"description\": \"This explains how to remember the last key that was pressed and customize the inputs of your game.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"device-orientation-ballgame\": {\n    \"description\": \"Example showing how to use the device sensors to move a ball in a maze.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Device sensors\",\n        \"name\": \"DeviceSensors\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"device-orientation-compass\": {\n    \"description\": \"This shows how to use the device sensors to create a compass like app.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Device sensors\",\n        \"name\": \"DeviceSensors\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"device-vibration\": {\n    \"description\": \"Show how to make the device vibrate.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Device vibration\",\n        \"name\": \"DeviceVibration\"\n      }\n    ]\n  },\n  \"dialogue-tree-with-yarn\": {\n    \"description\": \"A platformer showing a simple interactive story with dialogues like in RPG games, using the Yarn dialogue tree extension.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Panel Sprite (9-patch) Object\",\n        \"name\": \"PanelSpriteObject\"\n      },\n      {\n        \"fullName\": \"BBCode Text Object\",\n        \"name\": \"BBText\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Anchor\",\n        \"name\": \"AnchorBehavior\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Dialogue Tree (Experimental)\",\n        \"name\": \"DialogueTree\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"downhill-bike-physics-demo\": {\n    \"description\": \"A fun demo, using the Physics Engine to build an advanced simulation of a bike, with a person pedaling on it. Try to cross the finish line without falling and as fast as possible!\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Panel Sprite (9-patch) Object\",\n        \"name\": \"PanelSpriteObject\"\n      },\n      {\n        \"fullName\": \"Primitive drawing\",\n        \"name\": \"PrimitiveDrawing\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Advanced control features\",\n        \"name\": \"BuiltinAdvanced\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Window features\",\n        \"name\": \"BuiltinWindow\"\n      },\n      {\n        \"fullName\": \"Device vibration\",\n        \"name\": \"DeviceVibration\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      }\n    ]\n  },\n  \"drag-camera-with-mouse\": {\n    \"description\": \"This shows how to allow the user to move on a map with the mouse.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"drop-collect-items-from-storage\": {\n    \"description\": \"Show how to make the player collect objects from boxes on the map.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"endless-up-runner\": {\n    \"description\": \"A game where the player have to jump on platforms and avoid falling down as the screen goes up. With special objects (spring, rocks), score and Game Over handling!\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      }\n    ]\n  },\n  \"exit-app\": {\n    \"description\": \"Simple example showing how to close your game.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      }\n    ]\n  },\n  \"facebook-instant-game\": {\n    \"description\": \"Learn how to use the various Facebook Instant Games APIs to get information about the player, share their scores and have a leaderboard!\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Facebook Instant Games\",\n        \"name\": \"FacebookInstantGames\"\n      }\n    ]\n  },\n  \"filesystem-create-directory\": {\n    \"description\": \"Show how to ask the user for a folder name and create it on the disk.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Text entry object\",\n        \"name\": \"TextEntryObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Filesystem\",\n        \"name\": \"FileSystem\"\n      }\n    ]\n  },\n  \"find-diagonals\": {\n    \"description\": \"Show how to delete objects that are located at the diagonals of the click of the player in a board game.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"geodash\": {\n    \"description\": \"A fast paced game where you must jump and avoid obstacles.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Panel Sprite (9-patch) Object\",\n        \"name\": \"PanelSpriteObject\"\n      },\n      {\n        \"fullName\": \"Particle system\",\n        \"name\": \"ParticleSystem\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      }\n    ]\n  },\n  \"geometry-monster\": {\n    \"description\": \"A hyper casual endless game where you have to collect shapes and avoid bombs, with a progressively increasing difficulty.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Particle system\",\n        \"name\": \"ParticleSystem\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"health-bar\": {\n    \"description\": \"The platform example game adapted to add a health bar to the player, that is decreased when the player touches an enemy.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Anchor\",\n        \"name\": \"AnchorBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"infinite-scrolling-background\": {\n    \"description\": \"Learn how to create a background that is scolling infinitely.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"inventory-system\": {\n    \"description\": \"Learn how to display an inventory, with object that can be addded or removed, and how to persist it in storage.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Inventory\",\n        \"name\": \"Inventory\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Linked objects\",\n        \"name\": \"LinkedObjects\"\n      },\n      {\n        \"fullName\": \"Storage\",\n        \"name\": \"BuiltinFile\"\n      }\n    ]\n  },\n  \"isometric-game\": {\n    \"description\": \"Example of making an isometric 2D game.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Top-down movement\",\n        \"name\": \"TopDownMovementBehavior\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"javascript-blocks-in-platformer\": {\n    \"description\": \"This shows how to reproduce the Platformer example using JavaScript code instead of events.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Anchor\",\n        \"name\": \"AnchorBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"keyboard-practice\": {\n    \"description\": \"A simple game where the player must press the right keys on the keyboard as fast as possible.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"level-editor\": {\n    \"description\": \"Example showing a basic level editor, where you can save and load positions of objects put on the scene during the game. Also shows how to use simple functions.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Primitive drawing\",\n        \"name\": \"PrimitiveDrawing\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Storage\",\n        \"name\": \"BuiltinFile\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      }\n    ]\n  },\n  \"level-selection-unlock\": {\n    \"description\": \"Show how to save user progress and progressively unlock levels.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Storage\",\n        \"name\": \"BuiltinFile\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"load-image-from-url\": {\n    \"description\": \"Advanced example showing how to use JavaScript to load an image from an external URL.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"magnet\": {\n    \"description\": \"Show how to move a ball like if it's attracted by a magnet.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Linked objects\",\n        \"name\": \"LinkedObjects\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"manipulate-text-object\": {\n    \"description\": \"This shows how to change the text of a Text object displayed on the screen.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"menu-with-functions-and-text-effects\": {\n    \"description\": \"How to implement the same menu across multiple scenes using functions and text effects for hover/active states.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      }\n    ]\n  },\n  \"move-camera-to-position\": {\n    \"description\": \"This shows how to move the camera to the position of an object on a map.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"move-object-back-and-forth\": {\n    \"description\": \"Use events to move objects back and forth vertically or horizontally.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      }\n    ]\n  },\n  \"move-object-in-circle\": {\n    \"description\": \"This shows how to make an object move in circle around some point.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"move-object-toward-position\": {\n    \"description\": \"This shows how to have an object move to a given position on the screen.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"move-object-with-mouse-joint\": {\n    \"description\": \"Show how to use physics engine to move an object around with the mouse and realistic movements.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"move-object-with-physics\": {\n    \"description\": \"This shows how to use the forces built in GDevelop to move an object.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"multi-language-menu\": {\n    \"description\": \"Show how to translate a menu (titles, buttons) in multiple languages and add an option for the player to choose the language.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Storage\",\n        \"name\": \"BuiltinFile\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      }\n    ]\n  },\n  \"multiplayer-platformer-with-gamepads\": {\n    \"description\": \"Example showing how to use the Gamepads extension to read the state of gamepads (or controllers), for 2 players.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Anchor\",\n        \"name\": \"AnchorBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      }\n    ]\n  },\n  \"multitouch\": {\n    \"description\": \"This show how to create multiple markers when the player touches the screen.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"object-gravity\": {\n    \"description\": \"Use the physics engine to simulate an object moving on a small planet.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      }\n    ]\n  },\n  \"object-selection\": {\n    \"description\": \"Simple example showing how the engine of GDevelop select objects to be used in conditions and actions.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"objects-timers\": {\n    \"description\": \"Example showing various usage of objects timers (timers that are stored into instances of objects on the scene, as opposed to scene timers which are stored by the scene).\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      }\n    ]\n  },\n  \"open-url-in-browser\": {\n    \"description\": \"This shows how to open a website on the system default browser.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Storage\",\n        \"name\": \"BuiltinFile\"\n      }\n    ]\n  },\n  \"pairs\": {\n    \"description\": \"Find all matching pairs of cards in this relaxing game. Use tweens to create smooth, natural animations with a few events.\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Particle system\",\n        \"name\": \"ParticleSystem\"\n      },\n      {\n        \"fullName\": \"Tween animation\",\n        \"name\": \"Tween\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"parallax\": {\n    \"description\": \"Shows how to have multiple layers with a parallax effect (where the background layers move slower than the foreground).\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"parallax-scrolling\": {\n    \"description\": \"Another example showing how to have multiple layers with a parallax effect (where the background layers move slower than the foreground).\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"parse-json-from-api\": {\n    \"description\": \"Advanced example where JSON content is fetched from a website and information extracted from it.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Basic internet features\",\n        \"name\": \"BuiltinNetwork\"\n      }\n    ]\n  },\n  \"parse-json-string\": {\n    \"description\": \"Advanced example showing how to extract information from a JSON formatted string.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Basic internet features\",\n        \"name\": \"BuiltinNetwork\"\n      }\n    ]\n  },\n  \"particles-explosions\": {\n    \"description\": \"Create explosion effects with the particles engine.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Particle system\",\n        \"name\": \"ParticleSystem\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"particles-various-effects\": {\n    \"description\": \"Create various effects with the particles engine.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Particle system\",\n        \"name\": \"ParticleSystem\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"pathfinding\": {\n    \"description\": \"This show how to have an object moving from its position to another automatically avoiding obstacles.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Pathfinding behavior\",\n        \"name\": \"PathfindingBehavior\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"pathfinding-basics\": {\n    \"description\": \"Simpler example showing how to get started with Pathfinding, to have an object automatically find its way around obstacles.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Pathfinding behavior\",\n        \"name\": \"PathfindingBehavior\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"physics\": {\n    \"description\": \"Example showing various capabilities of the physics engine integrated to GDevelop.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"physics-joints-demo\": {\n    \"description\": \"A demo of all the joints that can be created using the Physics engine.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Primitive drawing\",\n        \"name\": \"PrimitiveDrawing\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"physics-joints-settings-demo\": {\n    \"description\": \"A demo of all the joints, and the way they can be customized, using the Physics engine.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Primitive drawing\",\n        \"name\": \"PrimitiveDrawing\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"pin-object-to-another\": {\n    \"description\": \"Example showing how to have objects \\\"pinned\\\" to another, meaning that they will move/rotate and follow the object they are pinned too.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"pin-object-to-another-multiple-parents\": {\n    \"description\": \"Example showing how to have objects \\\"pinned\\\" to multiple other objects, meaning that they will move/rotate and follow the object they are pinned too.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Linked objects\",\n        \"name\": \"LinkedObjects\"\n      }\n    ]\n  },\n  \"pixel-perfect-platform-game\": {\n    \"description\": \"Very simple example showing the settings to have a pixel-perfect platform game (also applicable to other kind of games).\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      }\n    ]\n  },\n  \"plane-and-clouds\": {\n    \"description\": \"Show how to randomly generate clouds to create an infinite sky.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Particle system\",\n        \"name\": \"ParticleSystem\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"platformer\": {\n    \"description\": \"An example of a basic platformer (Mario-like) game made with GDevelop.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Anchor\",\n        \"name\": \"AnchorBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"platformer-double-jump\": {\n    \"description\": \"The Platformer example modified to allow the player to do a double jump.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Anchor\",\n        \"name\": \"AnchorBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"play-music-on-mobile\": {\n    \"description\": \"This show how to properly launch a music on a game on mobile.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"play-stop-sprite-animation\": {\n    \"description\": \"This shows how to pause the animation of a Sprite object.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"racing-game\": {\n    \"description\": \"A top-down racing game made using the Physics engine.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"ragdoll\": {\n    \"description\": \"Example of creating a ragdoll with physics joints.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Particle system\",\n        \"name\": \"ParticleSystem\"\n      },\n      {\n        \"fullName\": \"Physics Engine 2.0\",\n        \"name\": \"Physics2\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Advanced control features\",\n        \"name\": \"BuiltinAdvanced\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"rain\": {\n    \"description\": \"Show how to simulate a rain effect by creating several objects.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Destroy Outside Screen Behavior\",\n        \"name\": \"DestroyOutsideBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Window features\",\n        \"name\": \"BuiltinWindow\"\n      }\n    ]\n  },\n  \"random-color-picker\": {\n    \"description\": \"This shows how to create a grid with random color, and let the player choose one.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"rotate-toward-mouse\": {\n    \"description\": \"Show how to rotate an object so that it looks toward the player cursor.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"rotate-toward-position\": {\n    \"description\": \"Show how to rotate an object so that it looks toward a specified position on the scene.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"rotate-with-keypress\": {\n    \"description\": \"Basic example showing how to rotate an object.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"save-load\": {\n    \"description\": \"Advanced example showing how to persist data and then reload them from storage (useful to store game progress, or save the state of some objects in a game).\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Storage\",\n        \"name\": \"BuiltinFile\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"screen-shake\": {\n    \"description\": \"Make the screen shake when some event occurs.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Platform Behavior\",\n        \"name\": \"PlatformBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"shoot-bullet-in-parabola\": {\n    \"description\": \"Show how to use various mathematical expressions to move an object following a parabola shape\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      }\n    ]\n  },\n  \"shoot-bullets\": {\n    \"description\": \"Basic example showing how to shoot bullets from an object.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Destroy Outside Screen Behavior\",\n        \"name\": \"DestroyOutsideBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"shooting-bullets-explanation\": {\n    \"description\": \"Basic example showing how to shoot bullets from one or multiple objects at the same time.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Destroy Outside Screen Behavior\",\n        \"name\": \"DestroyOutsideBehavior\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"simple-space-shooter\": {\n    \"description\": \"An older, simple space shooter demo, made without any behaviors from extensions. Prefer taking a look at the Space Shooter starter to learn about useful behaviors and patterns for making your games.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Top-down movement\",\n        \"name\": \"TopDownMovementBehavior\"\n      },\n      {\n        \"fullName\": \"Destroy Outside Screen Behavior\",\n        \"name\": \"DestroyOutsideBehavior\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"snap-object-to-grid\": {\n    \"description\": \"Example showing how to create a grid and have objects snapped to the grid.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Primitive drawing\",\n        \"name\": \"PrimitiveDrawing\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Draggable Behavior\",\n        \"name\": \"DraggableBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Window features\",\n        \"name\": \"BuiltinWindow\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"space-invaders\": {\n    \"description\": \"A Space Invaders-like game, where you have a turret and shoot on enemies coming from the sky.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Destroy Outside Screen Behavior\",\n        \"name\": \"DestroyOutsideBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"System information\",\n        \"name\": \"SystemInfo\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Window features\",\n        \"name\": \"BuiltinWindow\"\n      }\n    ]\n  },\n  \"space-shooter\": {\n    \"description\": \"A beautiful, retro side-scrolling shooter where you must defeat incoming enemies with your mecha transforming spaceship. Huge boss included!\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Tiled Sprite Object\",\n        \"name\": \"TiledSpriteObject\"\n      },\n      {\n        \"fullName\": \"Panel Sprite (9-patch) Object\",\n        \"name\": \"PanelSpriteObject\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      },\n      {\n        \"fullName\": \"Top-down movement\",\n        \"name\": \"TopDownMovementBehavior\"\n      },\n      {\n        \"fullName\": \"Destroy Outside Screen Behavior\",\n        \"name\": \"DestroyOutsideBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  },\n  \"splash-screen\": {\n    \"description\": \"Show how to create a splashscreen at the beginning of your game.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"sprite-fade-in-out\": {\n    \"description\": \"This shows how to make a sprite fade in and out on the screen.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"take-screenshot\": {\n    \"description\": \"Show how to save a screenshot of the game on the disk (on Windows/macOS/Linux only).\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Screenshot\",\n        \"name\": \"Screenshot\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"text-entry-object\": {\n    \"description\": \"This shows how to use the Text Entry object to capture what is written on the keyboard.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text entry object\",\n        \"name\": \"TextEntryObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      }\n    ]\n  },\n  \"text-fade-in-out\": {\n    \"description\": \"This shows how to make a text fade in and out on the screen.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"text-to-speech\": {\n    \"description\": \"Advanced example showing how to use JavaScript and HTML5 api to make a text read by your computer.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text entry object\",\n        \"name\": \"TextEntryObject\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      }\n    ]\n  },\n  \"toggle-music-play-sound\": {\n    \"description\": \"Example showing how to play a music and add controls on the screen to pause it, change the volume or mute the sounds totally.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"type-on-text-effect\": {\n    \"description\": \"This show how to create an effect where a text is progressively typed on the screen.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Audio\",\n        \"name\": \"BuiltinAudio\"\n      }\n    ]\n  },\n  \"unlock-items\": {\n    \"description\": \"Show how to save the items unlocked by the user and load them later (when the game is launched again for example, or when starting a saved game).\\n\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Storage\",\n        \"name\": \"BuiltinFile\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"video-player\": {\n    \"description\": \"An example of a complete video player with controls to play/pause, change the volume, jump to a position in the video...\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Video\",\n        \"name\": \"Video\"\n      },\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Tween animation\",\n        \"name\": \"Tween\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Advanced control features\",\n        \"name\": \"BuiltinAdvanced\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"\",\n        \"name\": \"\"\n      },\n      {\n        \"fullName\": \"Window features\",\n        \"name\": \"BuiltinWindow\"\n      }\n    ]\n  },\n  \"z-depth\": {\n    \"description\": \"Example where the player can move a character on a map, and the character is displayed behind or in front of other objects according to its position.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Standard events\",\n        \"name\": \"BuiltinCommonInstructions\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Keyboard features\",\n        \"name\": \"BuiltinKeyboard\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      }\n    ]\n  },\n  \"zombie-laser\": {\n    \"description\": \"Simple game where the player must use his laser powered gun to destroy zombies running at him.\",\n    \"usedExtensions\": [\n      {\n        \"fullName\": \"Sprite\",\n        \"name\": \"Sprite\"\n      },\n      {\n        \"fullName\": \"Primitive drawing\",\n        \"name\": \"PrimitiveDrawing\"\n      },\n      {\n        \"fullName\": \"Text object\",\n        \"name\": \"TextObject\"\n      },\n      {\n        \"fullName\": \"Pathfinding behavior\",\n        \"name\": \"PathfindingBehavior\"\n      },\n      {\n        \"fullName\": \"Scene management features\",\n        \"name\": \"BuiltinScene\"\n      },\n      {\n        \"fullName\": \"Variable features\",\n        \"name\": \"BuiltinVariables\"\n      },\n      {\n        \"fullName\": \"Mouse features\",\n        \"name\": \"BuiltinMouse\"\n      },\n      {\n        \"fullName\": \"Base object\",\n        \"name\": \"BuiltinObject\"\n      },\n      {\n        \"fullName\": \"Time\",\n        \"name\": \"BuiltinTime\"\n      },\n      {\n        \"fullName\": \"Cameras and layers features\",\n        \"name\": \"BuiltinCamera\"\n      }\n    ]\n  }\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\nimport { Column, Line } from '../../UI/Grid';\n\nexport const ExplanationHeader = () => (\n  <Text>\n    <Trans>\n      This will export your game as a Cordova project. Cordova is a technology\n      that enables HTML5 games to be packaged for iOS and Android.\n    </Trans>\n  </Text>\n);\n\nexport const DoneFooter = ({\n  renderGameButton,\n}: {|\n  renderGameButton: () => React.Node,\n|}) => (\n  <Column noMargin>\n    <Text>\n      <Trans>\n        You can now compile the game by yourself using Cordova command-line tool\n        to iOS (XCode is required) or Android (Android SDK is required).\n      </Trans>\n    </Text>\n    <Line justifyContent=\"center\">{renderGameButton()}</Line>\n  </Column>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\nimport { Column, Line } from '../../UI/Grid';\n\nexport const ExplanationHeader = () => (\n  <Text>\n    <Trans>\n      This will export your game so that you can package it for Windows, macOS\n      or Linux. You will need to install third-party tools (Node.js, Electron\n      Builder) to package your game.\n    </Trans>\n  </Text>\n);\n\nexport const DoneFooter = ({\n  renderGameButton,\n}: {|\n  renderGameButton: () => React.Node,\n|}) => (\n  <Column noMargin>\n    <Text>\n      <Trans>\n        The game was properly exported. You can now use Electron Builder (you\n        need Node.js installed and to use the command-line on your computer to\n        run it) to create an executable.\n      </Trans>\n    </Text>\n    <Line justifyContent=\"center\">{renderGameButton()}</Line>\n  </Column>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\nimport { getHelpLink } from '../../Utils/HelpLink';\nimport Window from '../../Utils/Window';\nimport FlatButton from '../../UI/FlatButton';\nimport { Column, Spacer } from '../../UI/Grid';\nimport AlertMessage from '../../UI/AlertMessage';\n\nexport const ExplanationHeader = () => (\n  <Text>\n    <Trans>This will export your game to a folder.</Trans>\n    <Trans>\n      You can then upload it on a website/game hosting service and share it on\n      marketplaces and gaming portals like Kongregate, Game Jolt, itch.io,\n      Poki...\n    </Trans>\n  </Text>\n);\n\nexport const DoneFooter = ({\n  renderGameButton,\n}: {|\n  renderGameButton: () => React.Node,\n|}) => (\n  <Column noMargin>\n    <Text>\n      <Trans>\n        You can now upload the game to a web hosting to play to the game.\n      </Trans>\n    </Text>\n    <AlertMessage kind=\"warning\">\n      <Trans>\n        Your game won't work if you open index.html on your computer. You must\n        upload it to a web hosting (Kongregate, Itch.io, etc...) or a web server\n        to run it.\n      </Trans>\n    </AlertMessage>\n    <Spacer />\n    {renderGameButton()}\n    <Spacer />\n    <FlatButton\n      fullWidth\n      primary\n      onClick={() =>\n        Window.openExternalURL(\n          getHelpLink('/publishing/publishing-to-gamejolt-store')\n        )\n      }\n      label={<Trans>Publish your game on Game Jolt</Trans>}\n    />\n    <FlatButton\n      fullWidth\n      primary\n      onClick={() =>\n        Window.openExternalURL(\n          getHelpLink('/publishing/publishing-to-kongregate-store')\n        )\n      }\n      label={<Trans>Publish your game on Kongregate</Trans>}\n    />\n    <FlatButton\n      fullWidth\n      primary\n      onClick={() =>\n        Window.openExternalURL(getHelpLink('/publishing/publishing-to-itch-io'))\n      }\n      label={<Trans>Publish your game on Itch.io</Trans>}\n    />\n    <FlatButton\n      fullWidth\n      primary\n      onClick={() => Window.openExternalURL('https://gdevelop-app.com/poki')}\n      label={<Trans>Publish your game on Poki.com</Trans>}\n    />\n    <FlatButton\n      fullWidth\n      onClick={() => Window.openExternalURL(getHelpLink('/publishing'))}\n      label={<Trans>Learn more about publishing</Trans>}\n    />\n  </Column>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport AlertMessage from '../../UI/AlertMessage';\n\nexport const ExplanationHeader = () => (\n  <Column noMargin>\n    <Text>\n      <Trans>\n        This will export your game using Cocos2d-JS game engine. The game can be\n        compiled for Android or iOS if you install Cocos2d-JS developer tools.\n      </Trans>\n    </Text>\n    <Spacer />\n    <AlertMessage kind=\"info\">\n      <Trans>\n        This export is experimental and not all features are supported by\n        Cocos2D-JS. It's recommended that you thoroughly test your game and be\n        ready to contribute to the game engine if you need to implement missing\n        features.\n      </Trans>\n    </AlertMessage>\n  </Column>\n);\n\nexport const DoneFooter = ({\n  renderGameButton,\n}: {|\n  renderGameButton: () => React.Node,\n|}) => (\n  <Column noMargin>\n    <Text>\n      <Trans>\n        You can now upload the game to a web hosting or use Cocos2d-JS command\n        line tools to export it to other platforms like iOS (XCode is required)\n        or Android (Android SDK is required).\n      </Trans>\n    </Text>\n    <Line justifyContent=\"center\">{renderGameButton()}</Line>\n  </Column>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\nimport { Column, Line } from '../../UI/Grid';\nimport FlatButton from '../../UI/FlatButton';\nimport { getHelpLink } from '../../Utils/HelpLink';\nimport Window from '../../Utils/Window';\n\nexport const ExplanationHeader = () => (\n  <Text>\n    <Trans>\n      Prepare your game for Facebook Instant Games so that it can be play on\n      Facebook Messenger. GDevelop will create a compressed file that you can\n      upload on your Facebook Developer account.\n    </Trans>\n  </Text>\n);\n\nexport const DoneFooter = ({\n  renderGameButton,\n}: {|\n  renderGameButton: () => React.Node,\n|}) => {\n  const openLearnMore = () => {\n    Window.openExternalURL(\n      getHelpLink('/publishing/publishing-to-facebook-instant-games')\n    );\n  };\n\n  return (\n    <Column noMargin>\n      <Text>\n        <Trans>\n          You can now create a game on Facebook Instant Games, if not already\n          done, and upload the generated archive.\n        </Trans>\n      </Text>\n      <Line justifyContent=\"center\">\n        {renderGameButton()}\n        <FlatButton\n          label={<Trans>Learn more about Instant Games publication</Trans>}\n          primary\n          onClick={openLearnMore}\n        />\n      </Line>\n    </Column>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\n\nexport const ExplanationHeader = () => (\n  <Text>\n    <Trans>\n      Packaging your game for Android will create an APK file that can be\n      installed on Android phones or published to the Play Store.\n    </Trans>\n  </Text>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\nimport Checkbox from '../../UI/Checkbox';\nimport { Column, Line } from '../../UI/Grid';\nimport { type TargetName } from '../../Utils/GDevelopServices/Build';\n\nexport type ExportState = {|\n  targets: Array<TargetName>,\n|};\n\ntype HeaderProps = {|\n  project: gdProject,\n  exportState: ExportState,\n  updateExportState: (\n    updater: (prevExportState: ExportState) => ExportState\n  ) => void,\n|};\n\nexport const SetupExportHeader = ({\n  exportState,\n  updateExportState,\n}: HeaderProps) => {\n  const setTarget = (targetName: TargetName, enable: boolean) => {\n    updateExportState(prevExportState => {\n      if (enable && prevExportState.targets.indexOf(targetName) === -1) {\n        return {\n          ...prevExportState,\n          targets: [...prevExportState.targets, targetName],\n        };\n      } else if (\n        !enable &&\n        prevExportState.targets.indexOf(targetName) !== -1\n      ) {\n        return {\n          ...prevExportState,\n          targets: prevExportState.targets.filter(name => name !== targetName),\n        };\n      }\n\n      return prevExportState;\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <Column noMargin>\n        <Line>\n          <Text>\n            <Trans>\n              Your game will be exported and packaged online as a stand-alone\n              game for Windows, Linux and/or macOS.\n            </Trans>\n          </Text>\n        </Line>\n        <Checkbox\n          label={<Trans>Windows (zip file)</Trans>}\n          checked={exportState.targets.indexOf('winZip') !== -1}\n          onCheck={(e, checked) => setTarget('winZip', checked)}\n        />\n        <Checkbox\n          label={<Trans>Windows (auto-installer file)</Trans>}\n          checked={exportState.targets.indexOf('winExe') !== -1}\n          onCheck={(e, checked) => setTarget('winExe', checked)}\n        />\n        <Checkbox\n          label={<Trans>macOS (zip file)</Trans>}\n          checked={exportState.targets.indexOf('macZip') !== -1}\n          onCheck={(e, checked) => setTarget('macZip', checked)}\n        />\n        <Checkbox\n          label={<Trans>Linux (AppImage)</Trans>}\n          checked={exportState.targets.indexOf('linuxAppImage') !== -1}\n          onCheck={(e, checked) => setTarget('linuxAppImage', checked)}\n        />\n      </Column>\n    </React.Fragment>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Text from '../../UI/Text';\n\nexport const ExplanationHeader = () => (\n  <Text>\n    <Trans>\n      This will export your game and upload it on GDevelop games hosting. The\n      game will be freely accessible from the link, available for a few days and\n      playable from any computer browser or mobile phone (iOS, Android 5+).\n    </Trans>\n  </Text>\n);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M18,5H15.5A3.5,3.5 0 0,0 12,8.5V11H10V14H12V21H15V14H18V11H15V9A1,1 0 0,1 16,8H18V5Z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M20.18,21.55H16.94L17.17,18.82H15.58L15.35,21.55H8.65L8.42,18.82H6.83L7.06,21.55H3.82L2,9.73L6.55,2.45H17.45L22,9.73L20.18,21.55M16.55,6.09H13.62L13.82,7.45H10.18L10.38,6.09H7.45L5.64,9.73L6.55,17H17.45L18.36,9.73L16.55,6.09M14.95,14.59C14.7,14.59 14.5,13.83 14.5,12.9C14.5,11.96 14.7,11.2 14.95,11.2C15.21,11.2 15.41,11.96 15.41,12.9C15.41,13.83 15.21,14.59 14.95,14.59M9.22,14.73C8.96,14.73 8.76,13.97 8.76,13.04C8.76,12.1 8.96,11.35 9.22,11.35C9.47,11.35 9.67,12.1 9.67,13.04C9.67,13.97 9.47,14.73 9.22,14.73Z\" />\n  </SvgIcon>\n));\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M12,20L15.46,14H15.45C15.79,13.4 16,12.73 16,12C16,10.8 15.46,9.73 14.62,9H19.41C19.79,9.93 20,10.94 20,12A8,8 0 0,1 12,20M4,12C4,10.54 4.39,9.18 5.07,8L8.54,14H8.55C9.24,15.19 10.5,16 12,16C12.45,16 12.88,15.91 13.29,15.77L10.89,19.91C7,19.37 4,16.04 4,12M15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9A3,3 0 0,1 15,12M12,4C14.96,4 17.54,5.61 18.92,8H12C10.06,8 8.45,9.38 8.08,11.21L5.7,7.08C7.16,5.21 9.44,4 12,4M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z\" />\n  </SvgIcon>\n));\n","// @flow\n// Note: this file does not use export/imports and use Flow comments to allow its usage from Node.js\n\nconst some = require('lodash/some');\n/*flow-include \nexport type TranslationFunction = (string) => string;\n\nexport type JsExtensionModule = {\n  createExtension(_: TranslationFunction, gd: any): gdPlatformExtension,\n  runExtensionSanityTests(gd: any, extension: gdPlatformExtension): Array<string>,\n};\n\nexport type ExtensionLoadingResult = {\n  error: boolean,\n  message: string,\n  dangerous?: boolean,\n  rawError?: any,\n};\n\nexport interface JsExtensionsLoader {\n  loadAllExtensions(_: TranslationFunction): Promise<\n    Array<{ extensionModulePath: string, result: ExtensionLoadingResult }>\n  >,\n}\n*/\n\n/**\n * Run extensions tests and check for any non-empty results.\n */\nconst runExtensionSanityTests = (\n  gd /*: any */,\n  extension /*: gdPlatformExtension*/,\n  jsExtensionModule /*: JsExtensionModule*/\n) /*: ExtensionLoadingResult*/ => {\n  if (!jsExtensionModule.runExtensionSanityTests) {\n    return {\n      error: true,\n      message:\n        'Missing runExtensionSanityTests in the extension module exports',\n    };\n  }\n\n  const testResults = jsExtensionModule.runExtensionSanityTests(gd, extension);\n  if (some(testResults)) {\n    return {\n      error: true,\n      message: 'One or more tests are failing for the extension (see rawError)',\n      rawError: testResults,\n    };\n  }\n\n  return {\n    error: false,\n    message: 'Tests passed successfully',\n  };\n};\n\n/**\n * Load an extension from the specified JavaScript module, which is supposed\n * to contain a \"createExtension\" function returning a gd.PlatformExtension.\n */\nconst loadExtension = (\n  _ /*: TranslationFunction */,\n  gd /*: any */,\n  platform /*: gdPlatform*/,\n  jsExtensionModule /*: JsExtensionModule*/\n) /*: ExtensionLoadingResult*/ => {\n  if (!jsExtensionModule.createExtension) {\n    return {\n      message:\n        'Extension module found, but no createExtension method is exported',\n      error: true,\n    };\n  }\n\n  let extension = null;\n  try {\n    extension = jsExtensionModule.createExtension(_, gd);\n    if (!extension) {\n      return {\n        message: `createExtension did not return any extension. Did you forget to return the extension created?`,\n        error: true,\n      };\n    }\n  } catch (ex) {\n    return {\n      message: `🚨 Exception caught while running createExtension. 💣 Please fix this error as this will make GDevelop crash at some point.`,\n      error: true,\n      dangerous: true,\n      rawError: ex,\n    };\n  }\n\n  try {\n    const testsResult = runExtensionSanityTests(\n      gd,\n      extension,\n      jsExtensionModule\n    );\n    if (testsResult.error) {\n      extension.delete();\n      return testsResult;\n    }\n  } catch (ex) {\n    return {\n      message: `🚨 Exception caught while running runExtensionSanityTests. 💣 Please fix this error as this will make GDevelop crash at some point.`,\n      error: true,\n      dangerous: true,\n      rawError: ex,\n    };\n  }\n\n  platform.addNewExtension(extension);\n  extension.delete(); // Release the extension as it was copied inside gd.JsPlatform\n\n  return {\n    message: '✅ Successfully loaded the extension.',\n    error: false,\n  };\n};\n\nmodule.exports = {\n  runExtensionSanityTests,\n  loadExtension,\n};\n","// @flow\nimport * as React from 'react';\nimport {\n  type StorageProvider,\n  type StorageProviderOperations,\n  type FileMetadata,\n} from '.';\nimport { type AppArguments } from '../Utils/Window';\n\n/**\n * An empty StorageProvider doing nothing.\n */\nconst emptyStorageProvider: StorageProvider = {\n  internalName: 'Empty',\n  name: 'No storage',\n  createOperations: () => ({\n    onOpenWithPicker: () => Promise.reject('No storage provider set up'),\n    onOpen: () => Promise.reject('No storage provider set up'),\n    hasAutoSave: () => Promise.resolve(false),\n    onSaveProject: (project: gdProject) =>\n      Promise.reject('No storage provider set up'),\n    onSaveProjectAs: (project: gdProject) =>\n      Promise.reject('No storage provider set up'),\n    onAutoSaveProject: (project: gdProject) => {},\n  }),\n};\n\ntype Props = {|\n  appArguments: AppArguments,\n  storageProviders: Array<StorageProvider>,\n  defaultStorageProvider?: StorageProvider,\n  children: ({\n    currentStorageProviderOperations: StorageProviderOperations,\n    storageProviders: Array<StorageProvider>,\n    useStorageProvider: (newStorageProvider: ?StorageProvider) => Promise<void>,\n    initialFileMetadataToOpen: ?FileMetadata,\n  }) => React.Node,\n|};\n\ntype InitialStorageProviderAndFileMetadata = {|\n  currentStorageProvider: ?StorageProvider,\n  initialFileMetadataToOpen: ?FileMetadata,\n|};\n\ntype State = {|\n  ...InitialStorageProviderAndFileMetadata,\n  renderDialog: ?() => React.Node,\n|};\n\nconst computeInitialFileMetadataToOpen = (\n  defaultStorageProvider: ?StorageProvider,\n  storageProviders: Array<StorageProvider>,\n  appArguments: AppArguments\n): InitialStorageProviderAndFileMetadata => {\n  const candidates = storageProviders\n    .map(currentStorageProvider => {\n      return {\n        currentStorageProvider,\n        initialFileMetadataToOpen: currentStorageProvider.getFileMetadataFromAppArguments\n          ? currentStorageProvider.getFileMetadataFromAppArguments(appArguments)\n          : null,\n      };\n    })\n    .filter(({ initialFileMetadataToOpen }) => !!initialFileMetadataToOpen);\n\n  if (candidates.length === 0)\n    return {\n      currentStorageProvider: defaultStorageProvider,\n      initialFileMetadataToOpen: null,\n    };\n\n  if (candidates.length > 1) {\n    console.warn(\n      'More than one storage provider can understand the app arguments. Selecting the first one.'\n    );\n  }\n\n  return candidates[0];\n};\n\nexport default class ProjectStorageProviders extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    ...computeInitialFileMetadataToOpen(\n      this.props.defaultStorageProvider,\n      this.props.storageProviders,\n      this.props.appArguments\n    ),\n    renderDialog: null,\n  };\n\n  _setDialog = (renderDialog: () => React.Node) => {\n    this.setState({\n      renderDialog,\n    });\n  };\n\n  _closeDialog = () => {\n    this.setState({\n      renderDialog: null,\n    });\n  };\n\n  _useStorageProvider = (storageProvider: ?StorageProvider): Promise<void> => {\n    if (!storageProvider) return Promise.resolve();\n\n    return new Promise(resolve => {\n      this.setState(\n        {\n          currentStorageProvider: storageProvider,\n        },\n        () => {\n          resolve();\n        }\n      );\n    });\n  };\n\n  render() {\n    const { children, storageProviders } = this.props;\n    const { renderDialog, initialFileMetadataToOpen } = this.state;\n    const currentStorageProvider =\n      this.state.currentStorageProvider || emptyStorageProvider;\n\n    return (\n      <React.Fragment>\n        {children({\n          currentStorageProviderOperations: currentStorageProvider.createOperations(\n            {\n              setDialog: this._setDialog,\n              closeDialog: this._closeDialog,\n            }\n          ),\n          storageProviders,\n          useStorageProvider: this._useStorageProvider,\n          initialFileMetadataToOpen,\n        })}\n        {renderDialog && renderDialog()}\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { ToolbarGroup } from '../UI/Toolbar';\nimport ToolbarIcon from '../UI/ToolbarIcon';\nimport ToolbarSeparator from '../UI/ToolbarSeparator';\n\ntype Props = {|\n  onPlay: () => void,\n  canPlay: boolean,\n  onPause: () => void,\n  canPause: boolean,\n  onOpenProfiler: () => void,\n|};\n\nexport class Toolbar extends React.PureComponent<Props> {\n  render() {\n    const { onPlay, onPause, canPlay, canPause, onOpenProfiler } = this.props;\n\n    return (\n      <ToolbarGroup lastChild>\n        <ToolbarIcon\n          onClick={onPlay}\n          src=\"res/ribbon_default/preview32.png\"\n          disabled={!canPlay}\n          tooltip={t`Play the game`}\n        />\n        <ToolbarIcon\n          onClick={onPause}\n          src=\"res/ribbon_default/pause32.png\"\n          disabled={!canPause}\n          tooltip={t`Pause the game`}\n        />\n        <ToolbarSeparator />\n        <ToolbarIcon\n          onClick={onOpenProfiler}\n          src=\"res/ribbon_default/profiler32.png\"\n          tooltip={t`Open the performance profiler`}\n        />\n      </ToolbarGroup>\n    );\n  }\n}\n\nexport default Toolbar;\n","// @flow\nimport * as React from 'react';\nimport { List, ListItem } from '../UI/List';\nimport get from 'lodash/get';\nimport {\n  type InspectorDescription,\n  type InspectorDescriptionsGetter,\n  type GameData,\n} from './GDJSInspectorDescriptions';\n\ntype Props = {|\n  gameData: GameData,\n  getInspectorDescriptions: InspectorDescriptionsGetter,\n  onChooseInspector: (\n    InspectorDescription,\n    fullInspectorPath: Array<string>\n  ) => void,\n|};\n\nconst styles = {\n  container: {\n    flex: 1,\n    display: 'flex',\n  },\n  list: {\n    overflowY: 'scroll',\n    flex: 1,\n  },\n};\n\n/**\n * Generate a visual list of inspectors, using gameData and getInspectorDescriptions\n */\nexport default class InspectorsList extends React.Component<Props, void> {\n  _renderInspectorList(\n    gameData: GameData,\n    getInspectorDescriptions: InspectorDescriptionsGetter,\n    path: Array<string>\n  ): Array<React$Element<any> | null> {\n    return getInspectorDescriptions(gameData).map(inspectorDescription => {\n      if (!inspectorDescription) return null;\n      const fullInspectorPath = path.concat(inspectorDescription.key);\n\n      const getSubInspectors = inspectorDescription.getSubInspectors;\n\n      return (\n        <ListItem\n          key={fullInspectorPath.join('.')}\n          primaryText={inspectorDescription.label}\n          initiallyOpen={!!inspectorDescription.initiallyOpen}\n          onClick={() =>\n            this.props.onChooseInspector(\n              inspectorDescription,\n              fullInspectorPath\n            )\n          }\n          renderNestedItems={\n            getSubInspectors\n              ? () =>\n                  this._renderInspectorList(\n                    get(gameData, inspectorDescription.key, null),\n                    getSubInspectors,\n                    fullInspectorPath\n                  )\n              : undefined\n          }\n        />\n      );\n    });\n  }\n\n  render() {\n    return this.props.gameData ? (\n      <List style={styles.list}>\n        {this._renderInspectorList(\n          this.props.gameData,\n          this.props.getInspectorDescriptions,\n          []\n        )}\n      </List>\n    ) : null;\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport ReactJsonView from 'react-json-view';\nimport {\n  type GameData,\n  type EditFunction,\n  type CallFunction,\n} from '../GDJSInspectorDescriptions';\nimport mapValues from 'lodash/mapValues';\n\ntype Props = {|\n  variablesContainer: GameData,\n  onCall: CallFunction,\n  onEdit: EditFunction,\n|};\n\nconst styles = {\n  container: {\n    flex: 1,\n    overflowY: 'scroll',\n  },\n};\n\nconst transformVariable = variable => {\n  if (!variable) return null;\n\n  if (!variable._isStructure) {\n    return variable._stringDirty ? variable._value : variable._str;\n  } else {\n    if (!variable._children) return null;\n\n    return mapValues(variable._children, transformVariable);\n  }\n};\n\nconst transform = variablesContainer => {\n  if (\n    !variablesContainer ||\n    !variablesContainer._variables ||\n    !variablesContainer._variables.items\n  )\n    return null;\n\n  return mapValues(variablesContainer._variables.items, transformVariable);\n};\n\nconst handleEdit = (edit, { onCall, onEdit }: Props) => {\n  // Reconstruct the path to the variable to edit\n  const path = ['_variables', 'items'];\n  edit.namespace.forEach(variableName => {\n    path.push(variableName);\n    path.push('_children');\n  });\n  path.push(edit.name);\n\n  // Guess the type of the new value (number or string)\n  if (parseFloat(edit.new_value).toString() === edit.new_value) {\n    path.push('setNumber');\n    onCall(path, [parseFloat(edit.new_value)]);\n  } else {\n    path.push('setString');\n    onCall(path, ['' + edit.new_value]);\n  }\n\n  return true;\n};\n\nexport default (props: Props) => (\n  <div style={styles.container}>\n    <ReactJsonView\n      collapsed={false}\n      name={false}\n      src={\n        props.variablesContainer ? transform(props.variablesContainer) : null\n      }\n      enableClipboard={false}\n      displayDataTypes={false}\n      displayObjectSize={false}\n      onEdit={edit => handleEdit(edit, props)}\n      groupArraysAfterLength={50}\n      theme=\"monokai\"\n    />\n  </div>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport ReactJsonView from 'react-json-view';\nimport {\n  type GameData,\n  type EditFunction,\n  type CallFunction,\n} from '../GDJSInspectorDescriptions';\nimport VariablesContainerInspector from './VariablesContainerInspector';\nimport Text from '../../UI/Text';\n\ntype Props = {|\n  runtimeObject: GameData,\n  onCall: CallFunction,\n  onEdit: EditFunction,\n|};\n\nconst styles = {\n  container: {\n    flex: 1,\n    overflowY: 'scroll',\n  },\n};\n\nconst transform = runtimeObject => {\n  if (!runtimeObject) return null;\n  return {\n    'X position': runtimeObject.x,\n    'Y position': runtimeObject.y,\n    Angle: runtimeObject.angle,\n    Layer: runtimeObject.layer,\n    'Z order': runtimeObject.zOrder,\n    'Is hidden?': runtimeObject.hidden,\n  };\n};\n\nconst handleEdit = (edit, { onCall, onEdit }: Props) => {\n  if (edit.name === 'X position') {\n    onCall(['setX'], [parseFloat(edit.new_value)]);\n  } else if (edit.name === 'Y position') {\n    onCall(['setY'], [parseFloat(edit.new_value)]);\n  } else if (edit.name === 'Angle') {\n    onCall(['setAngle'], [parseFloat(edit.new_value)]);\n  } else if (edit.name === 'Layer') {\n    onCall(['setLayer'], [edit.new_value]);\n  } else if (edit.name === 'Z order') {\n    onCall(['setZOrder'], [parseFloat(edit.new_value)]);\n  } else if (edit.name === 'Is hidden?') {\n    onCall(['hide'], [!!edit.new_value]);\n  } else return false;\n\n  return true;\n};\n\nexport default (props: Props) => (\n  <div style={styles.container}>\n    <Text>\n      <Trans>General:</Trans>\n    </Text>\n    <ReactJsonView\n      collapsed={false}\n      name={false}\n      src={transform(props.runtimeObject)}\n      enableClipboard={false}\n      displayDataTypes={false}\n      displayObjectSize={false}\n      onEdit={edit => handleEdit(edit, props)}\n      groupArraysAfterLength={50}\n      theme=\"monokai\"\n    />\n    <Text>\n      <Trans>Instance variables:</Trans>\n    </Text>\n    <VariablesContainerInspector\n      variablesContainer={\n        props.runtimeObject ? props.runtimeObject._variables : null\n      }\n      // TODO: onEdit and onCall could benefit from a \"forward\" utility function\n      // (can also be applied in DebuggerContent.js)\n      onEdit={(path, newValue) =>\n        props.onEdit(['_variables'].concat(path), newValue)\n      }\n      onCall={(path, args) => props.onCall(['_variables'].concat(path), args)}\n    />\n  </div>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport * as React from 'react';\nimport ReactJsonView from 'react-json-view';\nimport {\n  type GameData,\n  type EditFunction,\n  type CallFunction,\n} from '../GDJSInspectorDescriptions';\nimport { TextFieldWithButtonLayout } from '../../UI/Layout';\nimport mapValues from 'lodash/mapValues';\nimport RaisedButton from '../../UI/RaisedButton';\nimport SemiControlledAutoComplete from '../../UI/SemiControlledAutoComplete';\nimport Text from '../../UI/Text';\n\ntype Props = {|\n  runtimeScene: GameData,\n  onCall: CallFunction,\n  onEdit: EditFunction,\n|};\n\ntype State = {|\n  newObjectName: string,\n|};\n\nconst styles = {\n  container: {\n    flex: 1,\n    overflowY: 'scroll',\n  },\n};\n\nconst transformLayer = layer => {\n  if (!layer) return null;\n  return {\n    'Camera rotation (in deg)': layer._cameraRotation,\n    'Camera zoom': layer._zoomFactor,\n    'Layer is hidden': !!layer._hidden,\n    'Camera X position': layer._cameraX,\n    'Camera Y position': layer._cameraY,\n    'Time scale': layer._timeScale,\n  };\n};\n\nconst transform = runtimeScene => {\n  if (!runtimeScene) return null;\n\n  return {\n    'Time scale': runtimeScene._timeManager\n      ? runtimeScene._timeManager._timeScale\n      : null,\n    Layers:\n      runtimeScene._layers && runtimeScene._layers.items\n        ? mapValues(runtimeScene._layers.items, transformLayer)\n        : null,\n  };\n};\n\nconst handleEdit = (edit, { onCall, onEdit }: Props) => {\n  if (edit.namespace.length === 0 && edit.name === 'Time scale') {\n    onCall(['_timeManager', 'setTimeScale'], [parseFloat(edit.new_value)]);\n  } else if (edit.namespace.length >= 2) {\n    if (edit.namespace[0] === 'Layers') {\n      if (edit.name === 'Camera rotation (in deg)') {\n        onCall(\n          ['_layers', 'items', edit.namespace[1], 'setCameraRotation'],\n          [parseFloat(edit.new_value)]\n        );\n      } else if (edit.name === 'Camera zoom') {\n        onCall(\n          ['_layers', 'items', edit.namespace[1], 'setCameraZoom'],\n          [parseFloat(edit.new_value)]\n        );\n      } else if (edit.name === 'Layer is hidden') {\n        onCall(\n          ['_layers', 'items', edit.namespace[1], 'show'],\n          [!edit.new_value]\n        );\n      } else if (edit.name === 'Camera X position') {\n        onCall(\n          ['_layers', 'items', edit.namespace[1], 'setCameraX'],\n          [parseFloat(edit.new_value)]\n        );\n      } else if (edit.name === 'Camera Y position') {\n        onCall(\n          ['_layers', 'items', edit.namespace[1], 'setCameraY'],\n          [parseFloat(edit.new_value)]\n        );\n      } else if (edit.name === 'Time scale') {\n        onCall(\n          ['_layers', 'items', edit.namespace[1], 'setTimeScale'],\n          [parseFloat(edit.new_value)]\n        );\n      }\n    }\n  } else return false;\n\n  return true;\n};\n\nexport default class RuntimeSceneInspector extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    newObjectName: '',\n  };\n\n  render() {\n    const { runtimeScene, onCall } = this.props;\n    if (!runtimeScene) return null;\n\n    return (\n      <div style={styles.container}>\n        <Text>\n          <Trans>Layers:</Trans>\n        </Text>\n        <ReactJsonView\n          collapsed={false}\n          name={false}\n          src={transform(runtimeScene)}\n          enableClipboard={false}\n          displayDataTypes={false}\n          displayObjectSize={false}\n          onEdit={edit => handleEdit(edit, this.props)}\n          groupArraysAfterLength={50}\n          theme=\"monokai\"\n        />\n        <Text>\n          <Trans>\n            Create a new instance on the scene (will be at position 0;0):\n          </Trans>\n        </Text>\n        {runtimeScene._objects && runtimeScene._objects.items && (\n          <TextFieldWithButtonLayout\n            noFloatingLabelText\n            renderTextField={() => (\n              <SemiControlledAutoComplete\n                hintText={t`Enter the name of the object`}\n                value={this.state.newObjectName}\n                onChange={value => {\n                  this.setState({\n                    newObjectName: value,\n                  });\n                }}\n                dataSource={Object.keys(runtimeScene._objects.items).map(\n                  objectName => ({\n                    text: objectName,\n                    value: objectName,\n                  })\n                )}\n                openOnFocus\n                fullWidth\n              />\n            )}\n            renderButton={style => (\n              <RaisedButton\n                style={style}\n                label={<Trans>Create</Trans>}\n                primary\n                onClick={() => {\n                  onCall(['createObject'], [this.state.newObjectName]);\n                }}\n              />\n            )}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport RuntimeObjectInspector from './Inspectors/RuntimeObjectInspector';\nimport VariablesContainerInspector from './Inspectors/VariablesContainerInspector';\nimport RuntimeSceneInspector from './Inspectors/RuntimeSceneInspector';\n\nexport type GameData = any;\nexport type EditFunction = (path: Array<string>, newValue: any) => boolean;\nexport type CallFunction = (path: Array<string>, args: Array<any>) => boolean;\n\nexport type InspectorDescriptionsGetter = (\n  gameData: GameData\n) => Array<InspectorDescription>; //eslint-disable-line\n\nexport type InspectorDescription = {|\n  label: string,\n  key: string | Array<string>,\n  renderInspector: (\n    gameData: GameData,\n    {\n      onCall: CallFunction,\n      onEdit: EditFunction,\n    }\n  ) => React.Node,\n  getSubInspectors?: InspectorDescriptionsGetter,\n  initiallyOpen?: boolean,\n|};\n\n/**\n * Returns the list of inspectors, given the data coming from a GDJS RuntimeGame.\n * @param {*} gdjsRuntimeGame\n */\nexport const getInspectorDescriptions = (\n  gdjsRuntimeGame: GameData\n): Array<InspectorDescription> => {\n  return [\n    {\n      label: 'Global variables',\n      key: '_variables',\n      renderInspector: (gameData, { onCall, onEdit }) => (\n        <VariablesContainerInspector\n          variablesContainer={gameData}\n          onCall={onCall}\n          onEdit={onEdit}\n        />\n      ),\n    },\n    {\n      label: 'Scenes',\n      key: ['_sceneStack', '_stack'],\n      renderInspector: () => null,\n      initiallyOpen: true,\n      getSubInspectors: gdjsStack => {\n        if (!gdjsStack) return [];\n\n        return gdjsStack.map((runtimeScene, index) => ({\n          label: runtimeScene._name,\n          key: index,\n          renderInspector: (gameData, { onCall, onEdit }) => (\n            <RuntimeSceneInspector\n              runtimeScene={gameData}\n              onCall={onCall}\n              onEdit={onEdit}\n            />\n          ),\n          initiallyOpen: true,\n          getSubInspectors: runtimeScene => [\n            {\n              label: 'Scene variables',\n              key: `_variables`,\n              renderInspector: (gameData, { onCall, onEdit }) => (\n                <VariablesContainerInspector\n                  variablesContainer={gameData}\n                  onCall={onCall}\n                  onEdit={onEdit}\n                />\n              ),\n            },\n            {\n              label: 'Instances',\n              key: `_instances`,\n              renderInspector: () => null,\n              initiallyOpen: true,\n              getSubInspectors: instances => {\n                if (!instances || !instances.items) return [];\n\n                return Object.keys(instances.items).map(objectName => {\n                  if (\n                    !instances.items[objectName] ||\n                    typeof instances.items[objectName].length === undefined\n                  )\n                    return null;\n\n                  return {\n                    label: `${objectName} (${\n                      instances.items[objectName].length\n                    })`,\n                    key: ['items', objectName],\n                    renderInspector: () => null,\n                    getSubInspectors: instancesList =>\n                      instancesList\n                        ? instancesList\n                            .filter(runtimeObject => !!runtimeObject)\n                            .map((runtimeObject, index) => {\n                              return {\n                                label: `#${runtimeObject.id}`,\n                                key: index,\n                                renderInspector: (\n                                  gameData,\n                                  { onCall, onEdit }\n                                ) => (\n                                  <RuntimeObjectInspector\n                                    runtimeObject={gameData}\n                                    onCall={onCall}\n                                    onEdit={onEdit}\n                                  />\n                                ),\n                              };\n                            })\n                        : [],\n                  };\n                });\n              },\n            },\n          ],\n        }));\n      },\n    },\n  ];\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport ReactJsonView from 'react-json-view';\nimport { type GameData } from '../GDJSInspectorDescriptions';\nimport EmptyMessage from '../../UI/EmptyMessage';\n\ntype Props = {|\n  gameData: GameData,\n  onEdit: (path: Array<string>, newValue: any) => boolean,\n|};\n\nconst styles = {\n  container: {\n    flex: 1,\n    overflowY: 'scroll',\n  },\n};\n\n/**\n * A very simple inspector that display the raw information given by the gameData\n * object.\n */\nexport default ({ gameData, onEdit }: Props) => (\n  <div style={styles.container}>\n    <EmptyMessage>\n      <Trans>\n        You are in raw mode. You can edit the fields, but be aware that this can\n        lead to unexpected results or even crash the debugged game!\n      </Trans>\n    </EmptyMessage>\n    <ReactJsonView\n      collapsed={1}\n      name={false}\n      src={gameData}\n      onEdit={edit => {\n        return onEdit(edit.namespace.concat(edit.name), edit.new_value);\n      }}\n      groupArraysAfterLength={50}\n      theme=\"monokai\"\n    />\n  </div>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { AutoSizer, Table, Column } from 'react-virtualized';\nimport ThemeConsumer from '../../UI/Theme/ThemeConsumer';\nimport flatMap from 'lodash/flatMap';\nimport { type ProfilerMeasuresSection } from '..';\nimport IconButton from '../../UI/IconButton';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\n\nconst styles = {\n  indent: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n};\n\ntype Props = {|\n  profilerMeasures: ?ProfilerMeasuresSection,\n|};\n\ntype ProfilerRowData = {|\n  name: string,\n  time: string,\n  parentPercent: string,\n  totalPercent: string,\n  depth: number,\n  hasSubsections: boolean,\n  path: string,\n  isCollapsed: boolean,\n|};\n\ntype State = {|\n  collapsedPaths: { [string]: boolean },\n|};\n\nexport default class MeasuresTable extends React.Component<Props, State> {\n  state = {\n    collapsedPaths: {},\n  };\n\n  _convertToDataRows = (\n    name: string,\n    parentSection: ?ProfilerMeasuresSection,\n    section: ProfilerMeasuresSection,\n    depth: number = 0,\n    path: string = ''\n  ): Array<ProfilerRowData> => {\n    const { profilerMeasures } = this.props;\n\n    const parentPercent =\n      parentSection && section.time && parentSection.time !== 0\n        ? (section.time / parentSection.time) * 100\n        : 100;\n    const totalPercent =\n      profilerMeasures && section.time && profilerMeasures.time !== 0\n        ? (section.time / profilerMeasures.time) * 100\n        : 100;\n    const isCollapsed = this._isSectionCollapsed(path);\n\n    return [\n      {\n        name,\n        time: section.time ? `${section.time.toFixed(2)}ms` : '?',\n        parentPercent: `${parentPercent.toFixed(2)}%`,\n        totalPercent: `${totalPercent.toFixed(2)}%`,\n        depth,\n        hasSubsections: !!Object.keys(section.subsections).length,\n        path,\n        isCollapsed,\n      },\n      ...(isCollapsed\n        ? []\n        : flatMap(section.subsections, (subsection, subsectionName) =>\n            this._convertToDataRows(\n              subsectionName,\n              section,\n              subsection,\n              depth + 1,\n              `${path}>${depth}.${subsectionName}`\n            )\n          )),\n    ];\n  };\n\n  _isSectionCollapsed = (path: string) => {\n    return this.state.collapsedPaths[path];\n  };\n\n  _toggleSection = (path: string) => {\n    this.setState(state => ({\n      collapsedPaths: {\n        ...state.collapsedPaths,\n        [path]: !state.collapsedPaths[path],\n      },\n    }));\n  };\n\n  _rowClassName = ({ index }: { index: number }) => {\n    if (index < 0) {\n      return 'tableHeaderRow';\n    } else {\n      return index % 2 === 0 ? 'tableEvenRow' : 'tableOddRow';\n    }\n  };\n\n  _renderSectionNameCell = ({ rowData }: { rowData: ProfilerRowData }) => {\n    return (\n      <div style={styles.indent}>\n        <div style={{ width: rowData.depth * 8 }} />\n        {rowData.hasSubsections ? (\n          <IconButton onClick={() => this._toggleSection(rowData.path)}>\n            {rowData.isCollapsed ? <ChevronRight /> : <ExpandMore />}\n          </IconButton>\n        ) : (\n          <div style={{ width: 24 }} />\n        )}\n        {rowData.name}\n      </div>\n    );\n  };\n\n  render() {\n    const { profilerMeasures } = this.props;\n    if (!profilerMeasures) return null;\n\n    const dataRows = this._convertToDataRows('All', null, profilerMeasures);\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <AutoSizer>\n            {({ height, width }) => (\n              <Table\n                headerHeight={30}\n                height={height}\n                className={muiTheme.tableRootClassName}\n                headerClassName={'tableHeaderColumn'}\n                rowCount={dataRows.length}\n                rowGetter={({ index }) => dataRows[index]}\n                rowHeight={35}\n                onRowClick={() => {}}\n                rowClassName={this._rowClassName}\n                width={width}\n              >\n                <Column\n                  label={<Trans>Section name</Trans>}\n                  dataKey=\"name\"\n                  width={width * 0.4}\n                  className={'tableColumn'}\n                  cellRenderer={this._renderSectionNameCell}\n                />\n                <Column\n                  label={<Trans>Time (ms)</Trans>}\n                  dataKey=\"time\"\n                  width={width * 0.2}\n                  className={'tableColumn'}\n                />\n                <Column\n                  label={<Trans>% of parent</Trans>}\n                  dataKey=\"parentPercent\"\n                  width={width * 0.2}\n                  className={'tableColumn'}\n                />\n                <Column\n                  label={<Trans>% of total</Trans>}\n                  dataKey=\"totalPercent\"\n                  width={width * 0.2}\n                  className={'tableColumn'}\n                />\n              </Table>\n            )}\n          </AutoSizer>\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport MeasuresTable from './MeasuresTable';\nimport { type ProfilerOutput } from '..';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport { Line } from '../../UI/Grid';\nimport Background from '../../UI/Background';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Text from '../../UI/Text';\n\nconst styles = {\n  tableContainer: {\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  onStart: () => void,\n  onStop: () => void,\n  profilerOutput: ?ProfilerOutput,\n  profilingInProgress: boolean,\n|};\n\nexport default class Profiler extends React.Component<Props, void> {\n  render() {\n    const { onStart, onStop, profilerOutput, profilingInProgress } = this.props;\n\n    return (\n      <Background>\n        <Line alignItems=\"center\" justifyContent=\"center\">\n          {!profilingInProgress && profilerOutput && (\n            <Text>\n              <Trans>\n                Last run collected on {profilerOutput.stats.framesCount} frames.\n              </Trans>\n            </Text>\n          )}\n          {!profilingInProgress && profilerOutput && (\n            <RaisedButton label={<Trans>Restart</Trans>} onClick={onStart} />\n          )}\n          {!profilingInProgress && !profilerOutput && (\n            <RaisedButton\n              label={<Trans>Start profiling</Trans>}\n              onClick={onStart}\n            />\n          )}\n          {profilingInProgress && (\n            <RaisedButton\n              label={<Trans>Stop profiling</Trans>}\n              onClick={onStop}\n            />\n          )}\n        </Line>\n        {profilingInProgress && (\n          <Line alignItems=\"center\">\n            <LinearProgress style={{ flex: 1 }} variant={'indeterminate'} />\n          </Line>\n        )}\n        <div style={styles.tableContainer}>\n          {profilerOutput && (\n            <MeasuresTable\n              profilerMeasures={profilerOutput.framesAverageMeasures}\n            />\n          )}\n          {!profilerOutput && (\n            <EmptyMessage>\n              <Trans>\n                Start profiling and then stop it after a few seconds to see the\n                results.\n              </Trans>\n            </EmptyMessage>\n          )}\n        </div>\n      </Background>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport EditorMosaic from '../UI/EditorMosaic';\nimport Background from '../UI/Background';\nimport get from 'lodash/get';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Column, Line } from '../UI/Grid';\nimport InspectorsList from './InspectorsList';\nimport {\n  getInspectorDescriptions,\n  type InspectorDescription,\n  type EditFunction,\n  type CallFunction,\n} from './GDJSInspectorDescriptions';\nimport RawContentInspector from './Inspectors/RawContentInspector';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport Checkbox from '../UI/Checkbox';\nimport Flash from '@material-ui/icons/FlashOn';\nimport FlashOff from '@material-ui/icons/FlashOff';\nimport HelpButton from '../UI/HelpButton';\nimport Profiler from './Profiler';\nimport { type ProfilerOutput } from '.';\n\ntype Props = {|\n  gameData: ?any,\n  onEdit: EditFunction,\n  onCall: CallFunction,\n  onPlay: () => void,\n  onPause: () => void,\n  onRefresh: () => void,\n  onStartProfiler: () => void,\n  onStopProfiler: () => void,\n  profilerOutput: ?ProfilerOutput,\n  profilingInProgress: boolean,\n|};\n\ntype State = {|\n  selectedInspector: ?InspectorDescription,\n  selectedInspectorFullPath: Array<string>,\n  rawMode: boolean,\n|};\n\n/**\n * The debugger interface: show the list of inspectors for a game, along with the\n * currently selected inspector.\n */\nexport default class DebuggerContent extends React.Component<Props, State> {\n  state = {\n    selectedInspector: null,\n    selectedInspectorFullPath: [],\n    rawMode: false,\n  };\n\n  _editors: ?EditorMosaic = null;\n\n  openProfiler = () => {\n    if (this._editors) this._editors.openEditor('profiler', 'end', 75);\n  };\n\n  render() {\n    const {\n      gameData,\n      onRefresh,\n      onCall,\n      onEdit,\n      onStartProfiler,\n      onStopProfiler,\n      profilerOutput,\n      profilingInProgress,\n    } = this.props;\n    const {\n      selectedInspector,\n      selectedInspectorFullPath,\n      rawMode,\n    } = this.state;\n\n    return (\n      <EditorMosaic\n        ref={editors => (this._editors = editors)}\n        editors={{\n          inspectors: {\n            type: 'primary',\n            title: <Trans>Inspectors</Trans>,\n            toolbarControls: [],\n            renderEditor: () => (\n              <Background>\n                <Column expand noMargin>\n                  <Line justifyContent=\"center\">\n                    <RaisedButton\n                      label={<Trans>Refresh</Trans>}\n                      onClick={onRefresh}\n                      primary\n                    />\n                  </Line>\n                  <Line expand noMargin>\n                    <InspectorsList\n                      gameData={gameData}\n                      getInspectorDescriptions={getInspectorDescriptions}\n                      onChooseInspector={(\n                        selectedInspector,\n                        selectedInspectorFullPath\n                      ) =>\n                        this.setState({\n                          selectedInspector,\n                          selectedInspectorFullPath,\n                        })\n                      }\n                    />\n                  </Line>\n                </Column>\n              </Background>\n            ),\n          },\n          'selected-inspector': {\n            type: 'primary',\n            noTitleBar: true,\n            renderEditor: () => (\n              <Column expand noMargin>\n                {selectedInspector ? (\n                  rawMode ? (\n                    <RawContentInspector\n                      gameData={get(gameData, selectedInspectorFullPath, null)}\n                      onEdit={(path, newValue) =>\n                        onEdit(selectedInspectorFullPath.concat(path), newValue)\n                      }\n                    />\n                  ) : (\n                    selectedInspector.renderInspector(\n                      get(gameData, selectedInspectorFullPath, null),\n                      {\n                        onCall: (path, args) =>\n                          onCall(selectedInspectorFullPath.concat(path), args),\n                        onEdit: (path, newValue) =>\n                          onEdit(\n                            selectedInspectorFullPath.concat(path),\n                            newValue\n                          ),\n                      }\n                    ) || (\n                      <EmptyMessage>\n                        <Trans>\n                          No inspector, choose another element in the list or\n                          toggle the raw data view.\n                        </Trans>\n                      </EmptyMessage>\n                    )\n                  )\n                ) : (\n                  <EmptyMessage>\n                    {gameData ? (\n                      <Trans>Choose an element to inspect in the list</Trans>\n                    ) : (\n                      <Trans>\n                        Pause the game (from the toolbar) or hit refresh (on the\n                        left) to inspect the game\n                      </Trans>\n                    )}\n                  </EmptyMessage>\n                )}\n                <Column>\n                  <Line justifyContent=\"space-between\" alignItems=\"center\">\n                    <HelpButton helpPagePath=\"/interface/debugger\" />\n                    <div>\n                      <Checkbox\n                        checkedIcon={<Flash />}\n                        uncheckedIcon={<FlashOff />}\n                        checked={rawMode}\n                        onCheck={(e, enabled) =>\n                          this.setState({\n                            rawMode: enabled,\n                          })\n                        }\n                      />\n                    </div>\n                  </Line>\n                </Column>\n              </Column>\n            ),\n          },\n          profiler: {\n            type: 'secondary',\n            title: <Trans>Profiler</Trans>,\n            renderEditor: () => (\n              <Profiler\n                onStart={onStartProfiler}\n                onStop={onStopProfiler}\n                profilerOutput={profilerOutput}\n                profilingInProgress={profilingInProgress}\n              />\n            ),\n          },\n        }}\n        initialNodes={{\n          direction: 'column',\n          first: {\n            direction: 'row',\n            first: 'inspectors',\n            second: 'selected-inspector',\n            splitPercentage: 25,\n          },\n          second: 'profiler',\n          splitPercentage: 65,\n        }}\n      />\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport SelectField from '../UI/SelectField';\nimport SelectOption from '../UI/SelectOption';\nimport { Column } from '../UI/Grid';\nimport { type DebuggerId } from '.';\n\ntype Props = {|\n  selectedId: DebuggerId,\n  debuggerIds: Array<DebuggerId>,\n  onChooseDebugger: DebuggerId => void,\n|};\n\nexport default class DebuggerSelector extends React.Component<Props, void> {\n  render() {\n    const hasDebuggers = !!this.props.debuggerIds.length;\n    return (\n      <Column>\n        <SelectField\n          fullWidth\n          value={hasDebuggers ? this.props.selectedId : 0}\n          onChange={(e, i, value) =>\n            this.props.onChooseDebugger(parseInt(value, 10) || 0)\n          }\n          disabled={!hasDebuggers}\n        >\n          {this.props.debuggerIds.map(id => (\n            <SelectOption\n              value={id}\n              key={id}\n              primaryText={t`Game preview #${id}`}\n            />\n          ))}\n          {!hasDebuggers && (\n            <SelectOption\n              value={0}\n              primaryText={t`No preview running. Run a preview and you will be able to inspect it with the debugger`}\n            />\n          )}\n        </SelectField>\n      </Column>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Toolbar from './Toolbar';\nimport DebuggerContent from './DebuggerContent';\nimport DebuggerSelector from './DebuggerSelector';\nimport { Column } from '../UI/Grid';\nimport Text from '../UI/Text';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport PlaceholderMessage from '../UI/PlaceholderMessage';\nimport Background from '../UI/Background';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport EmptyMessage from '../UI/EmptyMessage';\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\n\n//Each game connected to the debugger server is identified by a unique number\nexport type DebuggerId = number;\n\nexport type ProfilerMeasuresSection = {|\n  time: number,\n  subsections: { [string]: ProfilerMeasuresSection },\n|};\n\nexport type ProfilerOutput = {|\n  framesAverageMeasures: ProfilerMeasuresSection,\n  stats: {\n    framesCount: number,\n  },\n|};\n\ntype Props = {|\n  project: gdProject,\n  setToolbar: React.Node => void,\n  isActive: boolean,\n|};\n\ntype State = {|\n  debuggerServerStarted: boolean,\n  debuggerServerError: ?any,\n\n  debuggerIds: Array<DebuggerId>,\n  debuggerGameData: { [DebuggerId]: any },\n  profilerOutputs: { [DebuggerId]: ProfilerOutput },\n  profilingInProgress: { [DebuggerId]: boolean },\n  selectedId: DebuggerId,\n|};\n\n/**\n * Start the debugger server, listen to commands received and issue commands to it.\n * This is only supported on Electron runtime for now.\n */\nexport default class Debugger extends React.Component<Props, State> {\n  state = {\n    debuggerServerStarted: false,\n    debuggerServerError: null,\n    debuggerIds: [],\n    debuggerGameData: {},\n    profilerOutputs: {},\n    profilingInProgress: {},\n    selectedId: 0,\n  };\n\n  _debuggerContents: { [DebuggerId]: ?DebuggerContent } = {};\n\n  updateToolbar() {\n    if (!this.props.isActive) return;\n\n    this.props.setToolbar(\n      <Toolbar\n        onPlay={() => this._play(this.state.selectedId)}\n        onPause={() => this._pause(this.state.selectedId)}\n        canPlay={this._hasSelectedDebugger()}\n        canPause={this._hasSelectedDebugger()}\n        onOpenProfiler={() => {\n          if (this._debuggerContents[this.state.selectedId])\n            this._debuggerContents[this.state.selectedId].openProfiler();\n        }}\n      />\n    );\n  }\n\n  componentDidMount() {\n    if (this.props.isActive) {\n      this._startServer();\n    }\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.isActive && !this.props.isActive) {\n      this._startServer();\n    }\n  }\n\n  componentWillUnmount() {\n    this._removeServerListeners();\n  }\n\n  _removeServerListeners = () => {\n    if (!ipcRenderer) return;\n\n    ipcRenderer.removeAllListeners('debugger-send-message-done');\n    ipcRenderer.removeAllListeners('debugger-error-received');\n    ipcRenderer.removeAllListeners('debugger-connection-closed');\n    ipcRenderer.removeAllListeners('debugger-connection-opened');\n    ipcRenderer.removeAllListeners('debugger-start-server-done');\n    ipcRenderer.removeAllListeners('debugger-message-received');\n  };\n\n  _startServer = () => {\n    if (!ipcRenderer) return;\n\n    this.setState({\n      debuggerServerStarted: false,\n    });\n    this._removeServerListeners();\n\n    ipcRenderer.on('debugger-error-received', (event, err) => {\n      this.setState(\n        {\n          debuggerServerError: err,\n        },\n        () => this.updateToolbar()\n      );\n    });\n\n    ipcRenderer.on('debugger-connection-closed', (event, { id }) => {\n      const { debuggerIds, selectedId } = this.state;\n      const remainingDebuggerIds = debuggerIds.filter(\n        debuggerId => debuggerId !== id\n      );\n      this.setState(\n        {\n          debuggerIds: remainingDebuggerIds,\n          selectedId:\n            selectedId !== id\n              ? selectedId\n              : remainingDebuggerIds.length\n              ? remainingDebuggerIds[remainingDebuggerIds.length - 1]\n              : selectedId,\n        },\n        () => this.updateToolbar()\n      );\n    });\n\n    ipcRenderer.on('debugger-connection-opened', (event, { id }) => {\n      this.setState(\n        {\n          debuggerIds: [...this.state.debuggerIds, id],\n          selectedId: id,\n        },\n        () => this.updateToolbar()\n      );\n    });\n\n    ipcRenderer.on('debugger-start-server-done', event => {\n      this.setState(\n        {\n          debuggerServerStarted: true,\n        },\n        () => this.updateToolbar()\n      );\n    });\n\n    ipcRenderer.on('debugger-message-received', (event, { id, message }) => {\n      console.log('Processing message received for debugger');\n      try {\n        const data = JSON.parse(message);\n        this._handleMessage(id, data);\n      } catch (e) {\n        console.warn(\n          'Error while parsing message received from debugger client:',\n          e\n        );\n      }\n    });\n    ipcRenderer.send('debugger-start-server');\n  };\n\n  _handleMessage = (id: DebuggerId, data: any) => {\n    if (data.command === 'dump') {\n      this.setState({\n        debuggerGameData: {\n          ...this.state.debuggerGameData,\n          [id]: data.payload,\n        },\n      });\n    } else if (data.command === 'profiler.output') {\n      this.setState({\n        profilerOutputs: {\n          ...this.state.profilerOutputs,\n          [id]: data.payload,\n        },\n      });\n    } else if (data.command === 'profiler.started') {\n      this.setState(state => ({\n        profilingInProgress: { ...state.profilingInProgress, [id]: true },\n      }));\n    } else if (data.command === 'profiler.stopped') {\n      this.setState(state => ({\n        profilingInProgress: { ...state.profilingInProgress, [id]: false },\n      }));\n    } else {\n      console.warn(\n        'Unknown command received from debugger client:',\n        data.command\n      );\n    }\n  };\n\n  _play = (id: DebuggerId) => {\n    if (!ipcRenderer) return;\n\n    ipcRenderer.send('debugger-send-message', {\n      id,\n      message: '{\"command\": \"play\"}',\n    });\n  };\n\n  _pause = (id: DebuggerId) => {\n    if (!ipcRenderer) return;\n\n    ipcRenderer.send('debugger-send-message', {\n      id,\n      message: '{\"command\": \"pause\"}',\n    });\n  };\n\n  _refresh = (id: DebuggerId) => {\n    if (!ipcRenderer) return;\n\n    ipcRenderer.send('debugger-send-message', {\n      id,\n      message: '{\"command\": \"refresh\"}',\n    });\n  };\n\n  _edit = (id: DebuggerId, path: Array<string>, newValue: any) => {\n    if (!ipcRenderer) return false;\n\n    ipcRenderer.send('debugger-send-message', {\n      id,\n      message: JSON.stringify({\n        command: 'set',\n        path,\n        newValue,\n      }),\n    });\n\n    setTimeout(() => this._refresh(id), 100);\n    return true;\n  };\n\n  _call = (id: DebuggerId, path: Array<string>, args: Array<any>) => {\n    if (!ipcRenderer) return false;\n\n    ipcRenderer.send('debugger-send-message', {\n      id,\n      message: JSON.stringify({\n        command: 'call',\n        path,\n        args,\n      }),\n    });\n\n    setTimeout(() => this._refresh(id), 100);\n    return true;\n  };\n\n  _startProfiler = (id: DebuggerId) => {\n    if (!ipcRenderer) return;\n\n    ipcRenderer.send('debugger-send-message', {\n      id,\n      message: '{\"command\": \"profiler.start\"}',\n    });\n  };\n\n  _stopProfiler = (id: DebuggerId) => {\n    if (!ipcRenderer) return;\n\n    ipcRenderer.send('debugger-send-message', {\n      id,\n      message: '{\"command\": \"profiler.stop\"}',\n    });\n  };\n\n  _hasSelectedDebugger = () => {\n    const { selectedId, debuggerIds } = this.state;\n    return debuggerIds.indexOf(selectedId) !== -1;\n  };\n\n  render() {\n    const {\n      debuggerServerError,\n      debuggerServerStarted,\n      selectedId,\n      debuggerIds,\n      debuggerGameData,\n      profilerOutputs,\n      profilingInProgress,\n    } = this.state;\n\n    return (\n      <Background>\n        {!debuggerServerStarted && !debuggerServerError && (\n          <PlaceholderMessage>\n            <PlaceholderLoader />\n            <Text>\n              <Trans>Debugger is starting...</Trans>\n            </Text>\n          </PlaceholderMessage>\n        )}\n        {!debuggerServerStarted && debuggerServerError && (\n          <PlaceholderMessage>\n            <Text>\n              <Trans>\n                Unable to start the debugger server! Make sure that you are\n                authorized to run servers on this computer.\n              </Trans>\n            </Text>\n          </PlaceholderMessage>\n        )}\n        {debuggerServerStarted && (\n          <Column expand noMargin>\n            <DebuggerSelector\n              selectedId={selectedId}\n              debuggerIds={debuggerIds}\n              onChooseDebugger={id =>\n                this.setState({\n                  selectedId: id,\n                })\n              }\n            />\n            {this._hasSelectedDebugger() && (\n              <DebuggerContent\n                ref={debuggerContent =>\n                  (this._debuggerContents[selectedId] = debuggerContent)\n                }\n                gameData={debuggerGameData[selectedId]}\n                onPlay={() => this._play(selectedId)}\n                onPause={() => this._pause(selectedId)}\n                onRefresh={() => this._refresh(selectedId)}\n                onEdit={(path, args) => this._edit(selectedId, path, args)}\n                onCall={(path, args) => this._call(selectedId, path, args)}\n                onStartProfiler={() => this._startProfiler(selectedId)}\n                onStopProfiler={() => this._stopProfiler(selectedId)}\n                profilerOutput={profilerOutputs[selectedId]}\n                profilingInProgress={profilingInProgress[selectedId]}\n              />\n            )}\n            {!this._hasSelectedDebugger() && (\n              <EmptyMessage>\n                <Trans>\n                  Run a preview and you will be able to inspect it with the\n                  debugger.\n                </Trans>\n              </EmptyMessage>\n            )}\n          </Column>\n        )}\n      </Background>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Debugger from '../../Debugger';\nimport BaseEditor from './BaseEditor';\nimport SubscriptionChecker from '../../Profile/SubscriptionChecker';\n\nexport default class DebuggerEditor extends BaseEditor {\n  editor: ?Debugger;\n  _subscriptionChecker: ?SubscriptionChecker;\n  state = {\n    subscriptionChecked: false,\n  };\n\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  componentWillReceiveProps() {\n    this._checkHasSubscription();\n  }\n\n  componentDidMount() {\n    this._checkHasSubscription();\n  }\n\n  _checkHasSubscription() {\n    if (\n      this._subscriptionChecker &&\n      this.props.isActive &&\n      !this.state.subscriptionChecked\n    ) {\n      this._subscriptionChecker.checkHasSubscription();\n      this.setState({\n        subscriptionChecked: true,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Debugger {...this.props} ref={editor => (this.editor = editor)} />\n        <SubscriptionChecker\n          ref={subscriptionChecker =>\n            (this._subscriptionChecker = subscriptionChecker)\n          }\n          onChangeSubscription={() => {\n            if (this.props.onChangeSubscription)\n              this.props.onChangeSubscription();\n          }}\n          id=\"Debugger\"\n          title={<Trans>Debugger</Trans>}\n          mode=\"try\"\n        />\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport FlatButton from '../../UI/FlatButton';\nimport { Spacer, Line } from '../../UI/Grid';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport difference_in_seconds from 'date-fns/difference_in_seconds';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Text from '../../UI/Text';\nimport {\n  type Build,\n  type BuildArtifactKeyName,\n} from '../../Utils/GDevelopServices/Build';\n\nconst buildTypesConfig = {\n  'cordova-build': {\n    estimatedTimeInSeconds: (build: Build) => 300,\n    completeDescription:\n      'You can download it on your Android phone and install it.',\n  },\n  'electron-build': {\n    estimatedTimeInSeconds: (build: Build) =>\n      150 * (build.targets ? build.targets.length : 0),\n    completeDescription: '',\n  },\n  'web-build': {\n    estimatedTimeInSeconds: (build: Build) => 5,\n    completeDescription: '',\n  },\n};\n\nconst buttons = [\n  {\n    displayName: t`Download`,\n    key: 'apkKey',\n  },\n  {\n    displayName: t`Windows (zip)`,\n    key: 'windowsZipKey',\n  },\n  {\n    displayName: t`Windows (exe)`,\n    key: 'windowsExeKey',\n  },\n  {\n    displayName: t`macOS (zip)`,\n    key: 'macosZipKey',\n  },\n  {\n    displayName: t`Linux (AppImage)`,\n    key: 'linuxAppImageKey',\n  },\n  {\n    displayName: t`Open`,\n    key: 's3Key',\n  },\n];\n\ntype Props = {|\n  build: Build,\n  onDownload: (key: BuildArtifactKeyName) => void,\n|};\n\n/**\n * Show an estimate of the progress of a build or the button\n * to download the artifacts.\n */\nexport default ({ build, onDownload }: Props) => {\n  const config = buildTypesConfig[build.type];\n  const secondsSinceLastUpdate = Math.abs(\n    difference_in_seconds(build.updatedAt, Date.now())\n  );\n  const estimatedRemainingTime = Math.max(\n    config ? config.estimatedTimeInSeconds(build) - secondsSinceLastUpdate : 0,\n    0\n  );\n\n  return (\n    <I18n>\n      {({ i18n }) =>\n        build.status === 'error' ? (\n          <React.Fragment>\n            <Line alignItems=\"center\">\n              <Text>\n                <Trans>Something wrong happened :(</Trans>\n              </Text>\n              <Spacer />\n              <RaisedButton\n                label={<Trans>See logs</Trans>}\n                onClick={() => onDownload('logsKey')}\n              />\n            </Line>\n            <Line alignItems=\"center\">\n              <EmptyMessage>\n                <Trans>\n                  Check the logs to see if there is an explanation about what\n                  went wrong, or try again later.\n                </Trans>\n              </EmptyMessage>\n            </Line>\n          </React.Fragment>\n        ) : build.status === 'pending' ? (\n          <Line alignItems=\"center\" expand>\n            <LinearProgress\n              style={{ flex: 1 }}\n              value={\n                config.estimatedTimeInSeconds(build) > 0\n                  ? ((config.estimatedTimeInSeconds(build) -\n                      estimatedRemainingTime) /\n                      config.estimatedTimeInSeconds(build)) *\n                    100\n                  : 0\n              }\n              variant={\n                estimatedRemainingTime > 0 ? 'determinate' : 'indeterminate'\n              }\n            />\n            <Spacer />\n            {estimatedRemainingTime > 0 ? (\n              <Text>\n                <Trans>\n                  ~{Math.round(estimatedRemainingTime / 60)} minutes.\n                </Trans>\n              </Text>\n            ) : (\n              <Text>\n                <Trans>Should finish soon.</Trans>\n              </Text>\n            )}\n          </Line>\n        ) : build.status === 'complete' ? (\n          <React.Fragment>\n            <Line expand>\n              {buttons\n                .filter(button => !!build[button.key])\n                .map((button, index) => (\n                  <React.Fragment key={button.key}>\n                    {index !== 0 && <Spacer />}\n                    <RaisedButton\n                      label={i18n._(button.displayName)}\n                      primary\n                      onClick={() => onDownload(button.key)}\n                    />\n                  </React.Fragment>\n                ))}\n              <FlatButton\n                label={<Trans>See logs</Trans>}\n                onClick={() => onDownload('logsKey')}\n              />\n            </Line>\n            <Line expand>\n              {config && <Text>{config.completeDescription}</Text>}\n            </Line>\n          </React.Fragment>\n        ) : (\n          <Line>\n            <Trans>Unknown status</Trans>\n          </Line>\n        )\n      }\n    </I18n>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  type Build,\n  type BuildArtifactKeyName,\n} from '../../Utils/GDevelopServices/Build';\nimport { Column, Line } from '../../UI/Grid';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport PlaceholderLoader from '../../UI/PlaceholderLoader';\nimport BuildProgress from './BuildProgress';\nimport format from 'date-fns/format';\nimport difference_in_calendar_days from 'date-fns/difference_in_calendar_days';\nimport Text from '../../UI/Text';\n\ntype Props = {|\n  builds: ?Array<Build>,\n  onDownload: (build: Build, key: BuildArtifactKeyName) => void,\n|};\n\nconst styles = {\n  buildContainer: {\n    padding: 10,\n  },\n};\n\nexport default ({ builds, onDownload }: Props) => {\n  return (\n    <Column noMargin expand>\n      <Line>\n        <Column>\n          <EmptyMessage>\n            <Trans>\n              This is the list of builds that you've done. Note that you can\n              download games generated during to 7 days, after which they are\n              removed.\n            </Trans>\n          </EmptyMessage>\n        </Column>\n      </Line>\n      <Line>\n        {!builds ? (\n          <PlaceholderLoader />\n        ) : builds.length === 0 ? (\n          <EmptyMessage>\n            <Trans>\n              You don't have any builds on the online services for now\n            </Trans>\n          </EmptyMessage>\n        ) : (\n          <Column noMargin expand>\n            {builds.map((build: Build) => {\n              const isOld =\n                build &&\n                difference_in_calendar_days(Date.now(), build.updatedAt) > 6;\n\n              return (\n                <Paper style={styles.buildContainer} key={build.id}>\n                  <Text>\n                    {build.type} - Last updated on{' '}\n                    {format(build.updatedAt, 'YYYY-MM-DD HH:mm:ss')}\n                  </Text>\n                  {!isOld && (\n                    <BuildProgress\n                      build={build}\n                      onDownload={key => onDownload(build, key)}\n                    />\n                  )}\n                  {isOld && (\n                    <EmptyMessage>\n                      <Trans>\n                        This build is old and the generated games can't be\n                        downloaded anymore.\n                      </Trans>\n                    </EmptyMessage>\n                  )}\n                </Paper>\n              );\n            })}\n          </Column>\n        )}\n      </Line>\n    </Column>\n  );\n};\n","//@flow\nexport const delay = (ms: number): Promise<void> =>\n  new Promise(res => setTimeout(res, ms));\n","// @flow\nimport { type Build, getBuild } from '../../Utils/GDevelopServices/Build';\nimport { delay } from '../../Utils/Delay';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\n\nconst waitTime = 1500;\nconst bulkWaitTime = 5000;\nconst maxTimeBeforeIgnoring = 12 * 60 * 60 * 1000; // 12 hours in milliseconds\n\nexport default class BuildsWatcher {\n  runningWatchers: { [string]: boolean } = {};\n  nextWatcherId = 0;\n  onBuildUpdated: ?(build: Build) => void;\n  userProfile: ?UserProfile;\n\n  start({\n    userProfile,\n    builds,\n    onBuildUpdated,\n  }: {\n    userProfile: UserProfile,\n    builds: Array<Build>,\n    onBuildUpdated: (build: Build) => void,\n  }) {\n    this.stop();\n    this.userProfile = userProfile;\n    this.onBuildUpdated = onBuildUpdated;\n\n    builds.forEach(build => {\n      if (build.status === 'pending') {\n        if (\n          (!build.createdAt ||\n            build.createdAt < Date.now() - maxTimeBeforeIgnoring) &&\n          (!build.updatedAt ||\n            build.updatedAt < Date.now() - maxTimeBeforeIgnoring)\n        ) {\n          console.info(\n            \"Ignoring a build for polling as it's too old and still pending\",\n            build\n          );\n        } else {\n          this._pollBuild(\n            build.id,\n            builds.length > 1 ? bulkWaitTime : waitTime\n          );\n        }\n      }\n    });\n  }\n\n  stop() {\n    this.runningWatchers = {};\n  }\n\n  _pollBuild = async (buildId: string, waitTime: number) => {\n    const watcherId = this.nextWatcherId.toString();\n    this.nextWatcherId++;\n\n    this.runningWatchers[watcherId] = true;\n\n    let build = null;\n    do {\n      if (!this.userProfile) return;\n\n      const { getAuthorizationHeader, profile } = this.userProfile;\n      if (!profile) return;\n\n      try {\n        console.info(`Checking progress of build ${buildId}...`);\n        build = await getBuild(getAuthorizationHeader, profile.uid, buildId);\n        if (this.onBuildUpdated) this.onBuildUpdated(build);\n      } catch (e) {\n        console.warn('Error while watching build progress:', e);\n      }\n\n      await delay(waitTime);\n      if (!this.runningWatchers[watcherId]) {\n        console.info(`Stopping watch of build ${buildId}.`);\n        return;\n      }\n    } while (build && build.status === 'pending');\n\n    console.info(`Watch of build ${buildId} finished.`);\n  };\n}\n","// @flow\nimport React, { Component } from 'react';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport BuildsList from './BuildsList';\nimport {\n  getBuilds,\n  type Build,\n  type BuildArtifactKeyName,\n  getBuildArtifactUrl,\n} from '../../Utils/GDevelopServices/Build';\nimport Window from '../../Utils/Window';\nimport BuildsWatcher from './BuildsWatcher';\n\ntype Props = {|\n  onBuildsUpdated: ?() => void,\n  userProfile: UserProfile,\n|};\ntype State = {|\n  builds: ?Array<Build>,\n|};\n\nexport default class Builds extends Component<Props, State> {\n  state = {\n    builds: null,\n  };\n  buildsWatcher = new BuildsWatcher();\n\n  componentDidMount() {\n    this._refreshBuilds();\n  }\n\n  componentWillUnmount() {\n    this.buildsWatcher.stop();\n  }\n\n  _startBuildsWatcher = () => {\n    if (!this.state.builds) return;\n\n    this.buildsWatcher.start({\n      userProfile: this.props.userProfile,\n      builds: this.state.builds,\n      onBuildUpdated: (newBuild: Build) => {\n        if (!this.state.builds) return;\n\n        this.setState({\n          builds: this.state.builds.map((oldBuild: Build) => {\n            if (newBuild.id === oldBuild.id) return newBuild;\n\n            return oldBuild;\n          }),\n        });\n      },\n    });\n  };\n\n  _refreshBuilds = () => {\n    const { getAuthorizationHeader, profile } = this.props.userProfile;\n    if (!profile) return;\n\n    getBuilds(getAuthorizationHeader, profile.uid).then(\n      builds => {\n        this.setState(\n          {\n            builds,\n          },\n          () => {\n            this._startBuildsWatcher();\n            if (this.props.onBuildsUpdated) this.props.onBuildsUpdated();\n          }\n        );\n      },\n      () => {\n        //TODO: Handle error\n      }\n    );\n  };\n\n  _download = (build: Build, key: BuildArtifactKeyName) => {\n    const url = getBuildArtifactUrl(build, key);\n    if (url) Window.openExternalURL(url);\n  };\n\n  render() {\n    return (\n      <BuildsList builds={this.state.builds} onDownload={this._download} />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport Dialog from '../../UI/Dialog';\nimport HelpButton from '../../UI/HelpButton';\nimport FlatButton from '../../UI/FlatButton';\nimport Builds from '.';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\n\ntype Props = {|\n  userProfile: UserProfile,\n  open: boolean,\n  onClose: () => void,\n|};\ntype State = {||};\n\nexport default class BuildsDialog extends Component<Props, State> {\n  _onBuildsUpdated = () => {\n    // Force the Dialog repositioning\n    this.forceUpdate();\n  };\n\n  render() {\n    const { open, onClose, userProfile } = this.props;\n    if (!open) return null;\n\n    return (\n      <Dialog\n        title={<Trans>All your builds</Trans>}\n        onRequestClose={onClose}\n        actions={[\n          <FlatButton\n            label={<Trans>Close</Trans>}\n            key=\"close\"\n            primary={false}\n            onClick={onClose}\n          />,\n        ]}\n        secondaryActions={[\n          <HelpButton key=\"help\" helpPagePath={'/publishing'} />,\n        ]}\n        open={open}\n        noMargin\n      >\n        <Builds\n          onBuildsUpdated={this._onBuildsUpdated}\n          userProfile={userProfile}\n        />\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Column, Line } from '../UI/Grid';\nimport { type Limit, type Subscription } from '../Utils/GDevelopServices/Usage';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport Text from '../UI/Text';\n\ntype Props = {|\n  subscription: ?Subscription,\n  limit: ?Limit,\n  onChangeSubscription: Function,\n|};\n\nexport default ({ subscription, limit, onChangeSubscription }: Props) => {\n  if (!limit) return <PlaceholderLoader />;\n  const hasSubscription = subscription && !!subscription.planId;\n  const noSubscription = subscription && !subscription.planId;\n\n  return (\n    <Column noMargin>\n      <Text>\n        <Trans>\n          You have {Math.max(limit.max - limit.current, 0)} remaining builds for\n          today (out of {limit.max}).\n        </Trans>\n      </Text>\n      {hasSubscription && limit.limitReached && (\n        <Text>\n          <Trans>\n            Need more power? You can upgrade to a new plan to increase the\n            limit!\n          </Trans>\n        </Text>\n      )}\n      {hasSubscription && limit.limitReached && (\n        <Line justifyContent=\"center\" alignItems=\"center\">\n          <RaisedButton\n            label={<Trans>Upgrade my account</Trans>}\n            onClick={onChangeSubscription}\n            primary\n          />\n        </Line>\n      )}\n      {noSubscription && (\n        <Text>\n          <Trans>\n            You don't have a subscription. Get one to increase the limits!\n          </Trans>\n        </Text>\n      )}\n      {noSubscription && (\n        <Line justifyContent=\"center\" alignItems=\"center\">\n          <RaisedButton\n            label={<Trans>Get a subscription</Trans>}\n            onClick={onChangeSubscription}\n            primary\n          />\n        </Line>\n      )}\n    </Column>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Line, Spacer, Column } from '../../UI/Grid';\nimport BuildProgress from './BuildProgress';\nimport {\n  type Build,\n  type BuildArtifactKeyName,\n} from '../../Utils/GDevelopServices/Build';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport Text from '../../UI/Text';\nimport AlertMessage from '../../UI/AlertMessage';\n\nconst styles = {\n  stepper: { flex: 1 },\n  linearProgress: { flex: 1 },\n};\n\nexport type BuildStep =\n  | ''\n  | 'export'\n  | 'resources-download'\n  | 'compress'\n  | 'upload'\n  | 'waiting-for-build'\n  | 'build'\n  | 'done';\n\ntype Props = {|\n  exportStep: BuildStep,\n  onDownload: (key: BuildArtifactKeyName) => void,\n  build: ?Build,\n  stepMaxProgress: number,\n  stepCurrentProgress: number,\n  errored: boolean,\n  showSeeAllMyBuildsExplanation?: boolean,\n  hasBuildStep: boolean,\n|};\n\n/**\n * Can be used in an exporter to show the overall progress of a build\n * (including local archiving/upload steps and remote build progress)\n */\nexport default ({\n  exportStep,\n  onDownload,\n  build,\n  stepMaxProgress,\n  stepCurrentProgress,\n  errored,\n  hasBuildStep,\n  showSeeAllMyBuildsExplanation,\n}: Props) => (\n  <Stepper\n    activeStep={\n      exportStep === 'export' || exportStep === 'resources-download'\n        ? 0\n        : exportStep === 'compress' || exportStep === 'upload'\n        ? 1\n        : exportStep === 'waiting-for-build' || exportStep === 'build'\n        ? 2\n        : exportStep === 'done'\n        ? hasBuildStep\n          ? 2\n          : 1\n        : -1\n    }\n    orientation=\"vertical\"\n    style={styles.stepper}\n  >\n    <Step>\n      <StepLabel>\n        <Trans>Game export</Trans>\n      </StepLabel>\n      <StepContent>\n        {errored ? (\n          <AlertMessage kind=\"error\">\n            <Trans>Can't properly export the game.</Trans>{' '}\n            <Trans>\n              Please check your internet connection or try again later.\n            </Trans>\n          </AlertMessage>\n        ) : exportStep === 'resources-download' ? (\n          <Column expand noMargin>\n            <Text>\n              <Trans>Downloading game resources...</Trans>\n            </Text>\n            <Line expand>\n              <LinearProgress\n                style={styles.linearProgress}\n                value={\n                  stepMaxProgress > 0\n                    ? (stepCurrentProgress / stepMaxProgress) * 100\n                    : 0\n                }\n                variant=\"determinate\"\n              />\n            </Line>\n          </Column>\n        ) : (\n          <Column expand noMargin>\n            <Text>\n              <Trans>Export in progress...</Trans>\n            </Text>\n            <Line expand>\n              <LinearProgress style={styles.linearProgress} />\n            </Line>\n          </Column>\n        )}\n      </StepContent>\n    </Step>\n    {hasBuildStep && (\n      <Step>\n        <StepLabel>\n          <Trans>Upload to build service</Trans>\n        </StepLabel>\n        <StepContent>\n          {errored ? (\n            <AlertMessage kind=\"error\">\n              <Trans>Can't upload your game to the build service.</Trans>{' '}\n              <Trans>\n                Please check your internet connection or try again later.\n              </Trans>\n            </AlertMessage>\n          ) : exportStep === 'compress' ? (\n            <Line alignItems=\"center\">\n              <CircularProgress size={20} />\n              <Spacer />\n              <Text>\n                <Trans>Compressing before upload...</Trans>\n              </Text>\n            </Line>\n          ) : (\n            <Line alignItems=\"center\" expand>\n              <LinearProgress\n                style={styles.linearProgress}\n                value={\n                  stepMaxProgress > 0\n                    ? (stepCurrentProgress / stepMaxProgress) * 100\n                    : 0\n                }\n                variant=\"determinate\"\n              />\n            </Line>\n          )}\n        </StepContent>\n      </Step>\n    )}\n    {hasBuildStep && (\n      <Step>\n        <StepLabel>\n          <Trans>Build and download</Trans>\n        </StepLabel>\n        <StepContent>\n          {errored && (\n            <AlertMessage kind=\"error\">\n              <Trans>\n                Build could not start or errored. Please check your internet\n                connection or try again later.\n              </Trans>\n            </AlertMessage>\n          )}\n          {!build && !errored && (\n            <Text>\n              <Trans>Build is starting...</Trans>\n            </Text>\n          )}\n          {build && <BuildProgress build={build} onDownload={onDownload} />}\n          {showSeeAllMyBuildsExplanation && (\n            <EmptyMessage>\n              <Trans>\n                If you close this window while the build is being done, you can\n                see its progress and download the game later by clicking on See\n                All My Builds below.\n              </Trans>\n            </EmptyMessage>\n          )}\n        </StepContent>\n      </Step>\n    )}\n    {!hasBuildStep && (\n      <Step>\n        <StepLabel>\n          <Trans>Done</Trans>\n        </StepLabel>\n        <StepContent />\n      </Step>\n    )}\n  </Stepper>\n);\n","// @flow\n\nimport React, { Component } from 'react';\nimport RaisedButton from '../UI/RaisedButton';\nimport { sendExportLaunched } from '../Utils/Analytics/EventSender';\nimport {\n  type Build,\n  type BuildArtifactKeyName,\n  getBuildArtifactUrl,\n} from '../Utils/GDevelopServices/Build';\nimport { type UserProfile } from '../Profile/UserProfileContext';\nimport { Column, Line } from '../UI/Grid';\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport Window from '../Utils/Window';\nimport CreateProfile from '../Profile/CreateProfile';\nimport LimitDisplayer from '../Profile/LimitDisplayer';\nimport {\n  displayProjectErrorsBox,\n  getErrors,\n} from '../ProjectManager/ProjectErrorsChecker';\nimport { type Limit } from '../Utils/GDevelopServices/Usage';\nimport BuildsWatcher from './Builds/BuildsWatcher';\nimport BuildStepsProgress, {\n  type BuildStep,\n} from './Builds/BuildStepsProgress';\nimport { type ExportPipeline } from './ExportPipeline.flow';\n\ntype State = {|\n  exportStep: BuildStep,\n  compressionOutput: any,\n  build: ?Build,\n  stepCurrentProgress: number,\n  stepMaxProgress: number,\n  errored: boolean,\n  exportState: any,\n  doneFooterOpen: boolean,\n|};\n\ntype Props = {|\n  project: gdProject,\n  onChangeSubscription: () => void,\n  userProfile: UserProfile,\n  exportPipeline: ExportPipeline<any, any, any, any, any>,\n|};\n\n/**\n * A generic UI to launch, monitor the progres and get the result\n * of an export.\n */\nexport default class ExportLauncher extends Component<Props, State> {\n  state = {\n    exportStep: '',\n    build: null,\n    compressionOutput: null,\n    stepCurrentProgress: 0,\n    stepMaxProgress: 0,\n    doneFooterOpen: false,\n    errored: false,\n    exportState: this.props.exportPipeline.getInitialExportState(\n      this.props.project\n    ),\n  };\n  buildsWatcher = new BuildsWatcher();\n\n  componentWillUnmount() {\n    this.buildsWatcher.stop();\n  }\n\n  _updateStepProgress = (\n    stepCurrentProgress: number,\n    stepMaxProgress: number\n  ) =>\n    this.setState({\n      stepCurrentProgress,\n      stepMaxProgress,\n    });\n\n  _startBuildWatch = (userProfile: UserProfile) => {\n    if (!this.state.build) return;\n\n    this.buildsWatcher.start({\n      userProfile,\n      builds: [this.state.build],\n      onBuildUpdated: (build: Build) => this.setState({ build }),\n    });\n  };\n\n  launchWholeExport = (userProfile: UserProfile) => {\n    const t = str => str; //TODO;\n    const { project, exportPipeline } = this.props;\n    sendExportLaunched(exportPipeline.name);\n\n    if (!displayProjectErrorsBox(t, getErrors(t, project))) return;\n\n    const handleError = (message: string) => (err: Error) => {\n      if (!this.state.errored) {\n        this.setState({\n          errored: true,\n        });\n        showErrorBox(message + (err.message ? `\\n${err.message}` : ''), {\n          exportStep: this.state.exportStep,\n          rawError: err,\n        });\n      }\n\n      throw err;\n    };\n\n    const exportPipelineContext = {\n      project,\n      updateStepProgress: this._updateStepProgress,\n      exportState: this.state.exportState,\n    };\n\n    this.setState({\n      exportStep: 'export',\n      stepCurrentProgress: 0,\n      stepMaxProgress: 0,\n      errored: false,\n      build: null,\n    });\n    exportPipeline\n      .prepareExporter(exportPipelineContext)\n      .then(preparedExporter => {\n        return exportPipeline.launchExport(\n          exportPipelineContext,\n          preparedExporter\n        );\n      }, handleError(t('Error while preparing the exporter.')))\n      .then(exportOutput => {\n        this.setState({\n          exportStep: 'resources-download',\n        });\n        return exportPipeline.launchResourcesDownload(\n          exportPipelineContext,\n          exportOutput\n        );\n      }, handleError(t('Error while exporting the game.')))\n      .then(resourcesDownloadOutput => {\n        this.setState({\n          exportStep: 'compress',\n        });\n        return exportPipeline.launchCompression(\n          exportPipelineContext,\n          resourcesDownloadOutput\n        );\n      }, handleError(t('Error while exporting the game.')))\n      .then(compressionOutput => {\n        const { launchUpload, launchOnlineBuild } = exportPipeline;\n        if (!!launchUpload && !!launchOnlineBuild) {\n          this.setState({\n            exportStep: 'upload',\n          });\n          return launchUpload(exportPipelineContext, compressionOutput)\n            .then((uploadBucketKey: string) => {\n              this.setState({\n                exportStep: 'waiting-for-build',\n              });\n              return launchOnlineBuild(\n                this.state.exportState,\n                userProfile,\n                uploadBucketKey\n              );\n            }, handleError(t('Error while uploading the game. Check your internet connection or try again later.')))\n            .then(build => {\n              this.setState(\n                {\n                  build,\n                  exportStep: 'build',\n                },\n                () => {\n                  this._startBuildWatch(userProfile);\n                }\n              );\n\n              return { compressionOutput };\n            }, handleError(t('Error while lauching the build of the game.')));\n        }\n\n        return { compressionOutput };\n      }, handleError(t('Error while compressing the game.')))\n      .then(({ compressionOutput }) => {\n        this.setState({\n          compressionOutput,\n          doneFooterOpen: true,\n          exportStep: 'done',\n        });\n      })\n      .catch(() => {\n        /* Error handled previously */\n      });\n  };\n\n  _downloadBuild = (key: BuildArtifactKeyName) => {\n    const url = getBuildArtifactUrl(this.state.build, key);\n    if (url) Window.openExternalURL(url);\n  };\n\n  _closeDoneFooter = () =>\n    this.setState({\n      doneFooterOpen: false,\n    });\n\n  _updateExportState = (updater: any => any) => {\n    this.setState(prevState => ({\n      ...prevState,\n      exportState: updater(prevState.exportState),\n    }));\n  };\n\n  render() {\n    const {\n      exportStep,\n      compressionOutput,\n      build,\n      stepMaxProgress,\n      stepCurrentProgress,\n      errored,\n      doneFooterOpen,\n      exportState,\n    } = this.state;\n    const { project, userProfile, exportPipeline } = this.props;\n    if (!project) return null;\n\n    const getBuildLimit = (userProfile: UserProfile): ?Limit =>\n      userProfile.limits && exportPipeline.onlineBuildType\n        ? userProfile.limits[exportPipeline.onlineBuildType]\n        : null;\n    const canLaunchBuild = (userProfile: UserProfile) => {\n      if (!errored && exportStep !== '' && exportStep !== 'done') return false;\n\n      const limit: ?Limit = getBuildLimit(userProfile);\n      if (limit && limit.limitReached) return false;\n\n      return exportPipeline.canLaunchBuild(exportState);\n    };\n\n    return (\n      <Column noMargin>\n        <Line>\n          {exportPipeline.renderHeader({\n            project,\n            exportState,\n            updateExportState: this._updateExportState,\n          })}\n        </Line>\n        {(!exportPipeline.onlineBuildType || userProfile.authenticated) && (\n          <Line justifyContent=\"center\">\n            <RaisedButton\n              label={exportPipeline.renderLaunchButtonLabel()}\n              primary\n              onClick={() => this.launchWholeExport(userProfile)}\n              disabled={!canLaunchBuild(userProfile)}\n            />\n          </Line>\n        )}\n        {!!exportPipeline.onlineBuildType && userProfile.authenticated && (\n          <LimitDisplayer\n            subscription={userProfile.subscription}\n            limit={getBuildLimit(userProfile)}\n            onChangeSubscription={this.props.onChangeSubscription}\n          />\n        )}\n        {!!exportPipeline.onlineBuildType && !userProfile.authenticated && (\n          <CreateProfile\n            onLogin={userProfile.onLogin}\n            onCreateAccount={userProfile.onCreateAccount}\n          />\n        )}\n        <Line expand>\n          <BuildStepsProgress\n            exportStep={exportStep}\n            hasBuildStep={!!exportPipeline.onlineBuildType}\n            build={build}\n            onDownload={this._downloadBuild}\n            stepMaxProgress={stepMaxProgress}\n            stepCurrentProgress={stepCurrentProgress}\n            errored={errored}\n          />\n        </Line>\n        {doneFooterOpen &&\n          exportPipeline.renderDoneFooter &&\n          exportPipeline.renderDoneFooter({\n            compressionOutput,\n            exportState,\n            onClose: this._closeDoneFooter,\n          })}\n      </Column>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\n\nfunction getOnlineStatus() {\n  return typeof navigator !== 'undefined' &&\n    typeof navigator.onLine === 'boolean'\n    ? navigator.onLine\n    : true;\n}\n\n/**\n * React Hook listening to the navigator online status.\n */\nexport const useOnlineStatus = () => {\n  const [onlineStatus, setOnlineStatus] = React.useState(getOnlineStatus());\n\n  const goOnline = () => setOnlineStatus(true);\n\n  const goOffline = () => setOnlineStatus(false);\n\n  React.useEffect(() => {\n    window.addEventListener('online', goOnline);\n    window.addEventListener('offline', goOffline);\n\n    return () => {\n      window.removeEventListener('online', goOnline);\n      window.removeEventListener('offline', goOffline);\n    };\n  }, []);\n\n  return onlineStatus;\n};\n\ntype Props = {|\n  children: (onlineStatus: boolean) => React.Node,\n|};\n\n/**\n * Component listening to the navigator online status, passing\n * it down to children.\n */\nexport const OnlineStatus = ({ children }: Props) => {\n  const onlineStatus = useOnlineStatus();\n  return children(onlineStatus);\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport HelpButton from '../UI/HelpButton';\nimport FlatButton from '../UI/FlatButton';\nimport Subheader from '../UI/Subheader';\nimport { List, ListItem } from '../UI/List';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport BuildsDialog from './Builds/BuildsDialog';\nimport { Line } from '../UI/Grid';\nimport UserProfileContext, {\n  type UserProfile,\n} from '../Profile/UserProfileContext';\nimport ExportLauncher from './ExportLauncher';\nimport { type ExportPipeline } from './ExportPipeline.flow';\nimport { OnlineStatus } from '../Utils/OnlineStatus';\nimport AlertMessage from '../UI/AlertMessage';\n\nconst styles = {\n  icon: { width: 40, height: 40 },\n  disabledItem: { opacity: 0.6 },\n  content: { padding: 24 },\n};\n\nexport type Exporter = {|\n  name: React.Node,\n  renderIcon: (props: {|\n    style: {| width: number, height: number |},\n  |}) => React.Node,\n  helpPage: string,\n  description: React.Node,\n  disabled?: boolean,\n  advanced?: boolean,\n  experimental?: boolean,\n  key: string,\n  exportPipeline: ExportPipeline<any, any, any, any, any>,\n|};\n\nexport type ExportDialogWithoutExportsProps = {|\n  project: ?gdProject,\n  onClose: () => void,\n  onChangeSubscription: () => void,\n|};\n\ntype Props = {|\n  ...ExportDialogWithoutExportsProps,\n  exporters: Array<Exporter>,\n  allExportersRequireOnline?: boolean,\n|};\n\ntype State = {|\n  chosenExporterKey: string,\n  showExperimental: boolean,\n  buildsDialogOpen: boolean,\n|};\n\nexport default class ExportDialog extends React.Component<Props, State> {\n  state = {\n    chosenExporterKey: '',\n    showExperimental: false,\n    buildsDialogOpen: false,\n  };\n\n  chooseExporter = (key: string) => {\n    this.setState({\n      chosenExporterKey: key,\n    });\n  };\n\n  _showExperimental = (show: boolean = true) => {\n    this.setState({\n      showExperimental: show,\n    });\n  };\n\n  _openBuildsDialog = (open: boolean = true) => {\n    this.setState({\n      buildsDialogOpen: open,\n    });\n  };\n\n  _renderExporterListItem = (\n    exporter: Exporter,\n    index: number,\n    forceDisable: boolean\n  ) => {\n    return (\n      <ListItem\n        key={exporter.key}\n        disabled={forceDisable || exporter.disabled}\n        style={\n          forceDisable || exporter.disabled ? styles.disabledItem : undefined\n        }\n        leftIcon={exporter.renderIcon({ style: styles.icon })}\n        primaryText={exporter.name}\n        secondaryText={exporter.description}\n        secondaryTextLines={2}\n        onClick={() => this.chooseExporter(exporter.key)}\n      />\n    );\n  };\n\n  render() {\n    const {\n      project,\n      onClose,\n      allExportersRequireOnline,\n      onChangeSubscription,\n      exporters,\n    } = this.props;\n    const { showExperimental, chosenExporterKey } = this.state;\n    if (!project) return null;\n\n    const exporter = exporters.find(\n      exporter => exporter.key === chosenExporterKey\n    );\n\n    return (\n      <UserProfileContext.Consumer>\n        {(userProfile: UserProfile) => (\n          <OnlineStatus>\n            {onlineStatus => {\n              const cantExportBecauseOffline =\n                !!allExportersRequireOnline && !onlineStatus;\n              return (\n                <Dialog\n                  title={<Trans>Export project to a standalone game</Trans>}\n                  onRequestClose={onClose}\n                  actions={[\n                    chosenExporterKey && (\n                      <FlatButton\n                        label={<Trans>Back</Trans>}\n                        key=\"back\"\n                        primary={false}\n                        onClick={() => this.chooseExporter('')}\n                      />\n                    ),\n                    <FlatButton\n                      label={<Trans>Close</Trans>}\n                      key=\"close\"\n                      primary={false}\n                      onClick={onClose}\n                    />,\n                  ]}\n                  secondaryActions={[\n                    <HelpButton\n                      key=\"help\"\n                      helpPagePath={\n                        (exporter && exporter.helpPage) || '/publishing'\n                      }\n                    />,\n                    <FlatButton\n                      key=\"builds\"\n                      label={<Trans>See all my builds</Trans>}\n                      onClick={() => this._openBuildsDialog(true)}\n                    />,\n                  ]}\n                  open\n                  noMargin\n                >\n                  {cantExportBecauseOffline && (\n                    <AlertMessage kind=\"error\">\n                      <Trans>\n                        You must be online and have a proper internet connection\n                        to export your game.\n                      </Trans>\n                    </AlertMessage>\n                  )}\n                  {!exporter && (\n                    <React.Fragment>\n                      <List>\n                        {exporters\n                          .filter(\n                            exporter =>\n                              !exporter.advanced && !exporter.experimental\n                          )\n                          .map((exporter, index) =>\n                            this._renderExporterListItem(\n                              exporter,\n                              index,\n                              cantExportBecauseOffline\n                            )\n                          )}\n\n                        <Subheader>Advanced</Subheader>\n                        {exporters\n                          .filter(exporter => exporter.advanced)\n                          .map((exporter, index) =>\n                            this._renderExporterListItem(\n                              exporter,\n                              index,\n                              cantExportBecauseOffline\n                            )\n                          )}\n\n                        {showExperimental && (\n                          <Subheader>Experimental</Subheader>\n                        )}\n                        {showExperimental &&\n                          exporters\n                            .filter(exporter => exporter.experimental)\n                            .map((exporter, index) =>\n                              this._renderExporterListItem(\n                                exporter,\n                                index,\n                                cantExportBecauseOffline\n                              )\n                            )}\n                      </List>\n                      <Line justifyContent=\"center\" alignItems=\"center\">\n                        {!showExperimental ? (\n                          <FlatButton\n                            key=\"toggle-experimental\"\n                            icon={<Visibility />}\n                            primary={false}\n                            onClick={() => this._showExperimental(true)}\n                            label={<Trans>Show experimental exports</Trans>}\n                          />\n                        ) : (\n                          <FlatButton\n                            key=\"toggle-experimental\"\n                            icon={<VisibilityOff />}\n                            primary={false}\n                            onClick={() => this._showExperimental(false)}\n                            label={<Trans>Hide experimental exports</Trans>}\n                          />\n                        )}\n                      </Line>\n                    </React.Fragment>\n                  )}\n                  {exporter && exporter.exportPipeline && (\n                    <div style={styles.content}>\n                      <ExportLauncher\n                        exportPipeline={exporter.exportPipeline}\n                        project={project}\n                        onChangeSubscription={onChangeSubscription}\n                        userProfile={userProfile}\n                      />\n                    </div>\n                  )}\n                  <BuildsDialog\n                    open={this.state.buildsDialogOpen}\n                    onClose={() => this._openBuildsDialog(false)}\n                    userProfile={userProfile}\n                  />\n                </Dialog>\n              );\n            }}\n          </OnlineStatus>\n        )}\n      </UserProfileContext.Consumer>\n    );\n  }\n}\n","import { Component } from 'react';\nimport MultiBackend from 'react-dnd-multi-backend';\nimport HTML5toTouch from 'react-dnd-multi-backend/lib/HTML5toTouch';\nimport { DragDropContext } from 'react-dnd';\n\nclass DragAndDropContextProvider extends Component {\n  render() {\n    return this.props.children;\n  }\n}\n\n/**\n * A react-dnd provider that automatically switch to react-dnd-touch-backend\n * when a touch event is recognized (react-dnd-html5-backend won't work on\n * touch devices like phones).\n *\n * When doing the switch from HTML5 backend to Touch backend, the existing events\n * are passed to the new backend. Unsure if this is necessary in GDevelop case.\n */\nexport default DragDropContext(MultiBackend(HTML5toTouch))(\n  DragAndDropContextProvider\n);\n","// @flow\nimport * as React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = {\n  progress: { marginLeft: 8, verticalAlign: 'middle' },\n};\n\nexport default ({\n  children,\n  isLoading,\n}: {\n  children: React.Node,\n  isLoading: ?boolean,\n}) => (\n  <span>\n    {children}\n    {isLoading && <CircularProgress size={20} style={styles.progress} />}\n  </span>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport Dialog from '../UI/Dialog';\nimport { Column } from '../UI/Grid';\nimport TextField from '../UI/TextField';\nimport {\n  type LoginForm,\n  type LoginError,\n} from '../Utils/GDevelopServices/Authentification';\nimport LeftLoader from '../UI/LeftLoader';\nimport BackgroundText from '../UI/BackgroundText';\n\ntype Props = {|\n  onClose: () => void,\n  onGoToLogin: () => void,\n  onCreateAccount: (form: LoginForm) => void,\n  createAccountInProgress: boolean,\n  error: ?LoginError,\n|};\n\ntype State = {|\n  form: LoginForm,\n|};\n\nexport const getEmailErrorText = (error: ?LoginError) => {\n  if (!error) return undefined;\n\n  if (error.code === 'auth/invalid-email') return 'This email is invalid';\n  if (error.code === 'auth/user-disabled') return 'The user was disabled';\n  if (error.code === 'auth/user-not-found')\n    return 'This user was not found: have you created your account?';\n  if (error.code === 'auth/email-already-in-use')\n    return 'This email was already used for another account';\n  if (error.code === 'auth/operation-not-allowed')\n    return 'Service seems to be unavailable, please try again later';\n  return undefined;\n};\n\nexport const getPasswordErrorText = (error: ?LoginError) => {\n  if (!error) return undefined;\n\n  if (error.code === 'auth/wrong-password') return 'The password is invalid';\n  if (error.code === 'auth/weak-password')\n    return 'This password is too weak: please use more letters and digits';\n  return undefined;\n};\n\nexport default class CreateAccountDialog extends Component<Props, State> {\n  state = {\n    form: {\n      email: '',\n      password: '',\n    },\n  };\n\n  _onCreateAccount = () => {\n    const { form } = this.state;\n    this.props.onCreateAccount(form);\n  };\n\n  render() {\n    const { onClose, createAccountInProgress, onGoToLogin, error } = this.props;\n\n    return (\n      <Dialog\n        title={<Trans>Create a new GDevelop account</Trans>}\n        actions={[\n          <FlatButton\n            label={<Trans>Back</Trans>}\n            disabled={createAccountInProgress}\n            key=\"close\"\n            primary={false}\n            onClick={onClose}\n          />,\n          <LeftLoader isLoading={createAccountInProgress} key=\"create-account\">\n            <RaisedButton\n              label={<Trans>Create my account</Trans>}\n              primary\n              disabled={createAccountInProgress}\n              onClick={this._onCreateAccount}\n            />\n          </LeftLoader>,\n        ]}\n        secondaryActions={[\n          <FlatButton\n            label={<Trans>Already have an account?</Trans>}\n            primary={false}\n            key=\"already-have-account\"\n            onClick={onGoToLogin}\n          />,\n        ]}\n        onRequestClose={() => {\n          if (!createAccountInProgress) onClose();\n        }}\n        maxWidth=\"sm\"\n        open\n      >\n        <Column noMargin>\n          <BackgroundText>\n            <Trans>\n              By creating an account and using GDevelop, you agree to the Terms\n              and Conditions. Having an account allows to export your game on\n              Android, as a desktop app and unlock other services for your\n              project!\n            </Trans>\n          </BackgroundText>\n          <TextField\n            value={this.state.form.email}\n            floatingLabelText={<Trans>Email</Trans>}\n            errorText={getEmailErrorText(error)}\n            fullWidth\n            onChange={(e, value) => {\n              this.setState({\n                form: {\n                  ...this.state.form,\n                  email: value,\n                },\n              });\n            }}\n          />\n          <TextField\n            value={this.state.form.password}\n            floatingLabelText={<Trans>Password</Trans>}\n            errorText={getPasswordErrorText(error)}\n            type=\"password\"\n            fullWidth\n            onChange={(e, value) => {\n              this.setState({\n                form: {\n                  ...this.state.form,\n                  password: value,\n                },\n              });\n            }}\n          />\n        </Column>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport RaisedButton from '../UI/RaisedButton';\nimport Dialog from '../UI/Dialog';\nimport { Column } from '../UI/Grid';\nimport TextField from '../UI/TextField';\nimport {\n  type LoginForm,\n  type LoginError,\n} from '../Utils/GDevelopServices/Authentification';\nimport RightLoader from '../UI/RightLoader';\nimport LeftLoader from '../UI/LeftLoader';\nimport Text from '../UI/Text';\nimport { getEmailErrorText, getPasswordErrorText } from './CreateAccountDialog';\nimport AlertMessage from '../UI/AlertMessage';\n\ntype Props = {|\n  onClose: () => void,\n  onGoToCreateAccount: () => void,\n  onLogin: (form: LoginForm) => void,\n  onForgotPassword: (form: LoginForm) => void,\n  loginInProgress: boolean,\n  error: ?LoginError,\n  resetPasswordDialogOpen: boolean,\n  onCloseResetPasswordDialog: () => void,\n  forgotPasswordInProgress: boolean,\n|};\n\ntype State = {|\n  form: LoginForm,\n|};\n\nexport default class LoginDialog extends Component<Props, State> {\n  state = {\n    form: {\n      email: '',\n      password: '',\n    },\n  };\n\n  _onLogin = () => {\n    const { form } = this.state;\n    this.props.onLogin(form);\n  };\n\n  _onForgotPassword = () => {\n    const { form } = this.state;\n    this.props.onForgotPassword(form);\n  };\n\n  render() {\n    const {\n      onClose,\n      onGoToCreateAccount,\n      loginInProgress,\n      error,\n      resetPasswordDialogOpen,\n      onCloseResetPasswordDialog,\n      forgotPasswordInProgress,\n    } = this.props;\n    const actions = [\n      <FlatButton\n        label={<Trans>Back</Trans>}\n        disabled={loginInProgress || forgotPasswordInProgress}\n        key=\"back\"\n        primary={false}\n        onClick={onClose}\n      />,\n      <LeftLoader isLoading={loginInProgress} key=\"login\">\n        <RaisedButton\n          label={<Trans>Login</Trans>}\n          primary\n          onClick={this._onLogin}\n          disabled={loginInProgress || forgotPasswordInProgress}\n        />\n      </LeftLoader>,\n    ];\n\n    return (\n      <Dialog\n        title={<Trans>Login to your GDevelop account</Trans>}\n        actions={actions}\n        secondaryActions={[\n          <RightLoader\n            isLoading={forgotPasswordInProgress}\n            key=\"forgot-password\"\n          >\n            <FlatButton\n              label={<Trans>I forgot my password</Trans>}\n              primary={false}\n              disabled={loginInProgress || forgotPasswordInProgress}\n              onClick={this._onForgotPassword}\n            />\n          </RightLoader>,\n        ]}\n        onRequestClose={() => {\n          if (!loginInProgress && !forgotPasswordInProgress) onClose();\n        }}\n        maxWidth=\"sm\"\n        open\n      >\n        <Column noMargin>\n          <AlertMessage\n            kind=\"info\"\n            renderRightButton={() => (\n              <FlatButton\n                label={<Trans>Create my account</Trans>}\n                disabled={loginInProgress || forgotPasswordInProgress}\n                primary\n                onClick={onGoToCreateAccount}\n              />\n            )}\n          >\n            <Trans>Don't have an account yet?</Trans>\n          </AlertMessage>\n          <TextField\n            value={this.state.form.email}\n            floatingLabelText={<Trans>Email</Trans>}\n            errorText={getEmailErrorText(error)}\n            fullWidth\n            onChange={(e, value) => {\n              this.setState({\n                form: {\n                  ...this.state.form,\n                  email: value,\n                },\n              });\n            }}\n          />\n          <TextField\n            value={this.state.form.password}\n            floatingLabelText={<Trans>Password</Trans>}\n            errorText={getPasswordErrorText(error)}\n            type=\"password\"\n            fullWidth\n            onChange={(e, value) => {\n              this.setState({\n                form: {\n                  ...this.state.form,\n                  password: value,\n                },\n              });\n            }}\n          />\n        </Column>\n        <Dialog\n          open={resetPasswordDialogOpen}\n          title={<Trans>Reset your password</Trans>}\n          actions={[\n            <FlatButton\n              label={<Trans>Close</Trans>}\n              key=\"close\"\n              onClick={onCloseResetPasswordDialog}\n            />,\n          ]}\n        >\n          <Column noMargin>\n            <Text>\n              <Trans>\n                You should have received an email containing instructions to\n                reset and set a new password. Once it's done, you can use your\n                new password in GDevelop.\n              </Trans>\n            </Text>\n          </Column>\n        </Dialog>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport React from 'react';\n\nexport const watchPromiseInState = (\n  component: React.Component<*, *>,\n  stateField: string,\n  fn: () => Promise<any>\n) => {\n  component.setState({\n    [stateField]: true,\n  });\n  return fn()\n    .then(value => {\n      component.setState({\n        [stateField]: false,\n      });\n      return value;\n    })\n    .catch(err => {\n      component.setState({\n        [stateField]: false,\n      });\n      throw err;\n    });\n};\n","// @flow\n\nimport * as React from 'react';\nimport {\n  getUserUsages,\n  getUserSubscription,\n  getUserLimits,\n} from '../Utils/GDevelopServices/Usage';\nimport Authentification, {\n  type Profile,\n  type LoginForm,\n  type LoginError,\n} from '../Utils/GDevelopServices/Authentification';\nimport LoginDialog from './LoginDialog';\nimport { watchPromiseInState } from '../Utils/WatchPromiseInState';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport { sendSignupDone } from '../Utils/Analytics/EventSender';\nimport UserProfileContext, {\n  initialUserProfile,\n  type UserProfile,\n} from './UserProfileContext';\nimport CreateAccountDialog from './CreateAccountDialog';\n\ntype Props = {\n  authentification: Authentification,\n  children: React.Node,\n};\n\ntype State = {|\n  userProfile: UserProfile,\n  loginDialogOpen: boolean,\n  createAccountDialogOpen: boolean,\n  loginInProgress: boolean,\n  createAccountInProgress: boolean,\n  loginError: ?LoginError,\n  resetPasswordDialogOpen: boolean,\n  forgotPasswordInProgress: boolean,\n|};\n\nexport default class UserProfileProvider extends React.Component<Props, State> {\n  state = {\n    userProfile: initialUserProfile,\n    loginDialogOpen: false,\n    createAccountDialogOpen: false,\n    loginInProgress: false,\n    createAccountInProgress: false,\n    loginError: null,\n    resetPasswordDialogOpen: false,\n    forgotPasswordInProgress: false,\n  };\n\n  componentDidMount() {\n    this._resetUserProfile();\n    this.props.authentification.onUserChange(this._fetchUserProfile);\n  }\n\n  _resetUserProfile() {\n    this.setState({\n      userProfile: {\n        ...initialUserProfile,\n        onLogout: this._doLogout,\n        onLogin: () => this.openLoginDialog(true),\n        onCreateAccount: () => this.openCreateAccountDialog(true),\n        onRefreshUserProfile: this._fetchUserProfile,\n        getAuthorizationHeader: () =>\n          this.props.authentification.getAuthorizationHeader(),\n      },\n    });\n  }\n\n  _fetchUserProfile = () => {\n    const { authentification } = this.props;\n\n    authentification.getUserProfile((err, profile: ?Profile) => {\n      if (err && err.unauthenticated) {\n        return this.setState({\n          userProfile: {\n            ...this.state.userProfile,\n            authenticated: false,\n            profile: null,\n            usages: null,\n            limits: null,\n            subscription: null,\n          },\n        });\n      } else if (err || !profile) {\n        console.log('Unable to fetch user profile', err);\n        return;\n      }\n\n      this.setState(\n        {\n          userProfile: {\n            ...this.state.userProfile,\n            authenticated: true,\n            profile,\n          },\n        },\n        () => {\n          if (!profile) return;\n\n          getUserUsages(\n            authentification.getAuthorizationHeader,\n            profile.uid\n          ).then(usages =>\n            this.setState({\n              userProfile: {\n                ...this.state.userProfile,\n                usages,\n              },\n            })\n          );\n          getUserSubscription(\n            authentification.getAuthorizationHeader,\n            profile.uid\n          ).then(subscription =>\n            this.setState({\n              userProfile: {\n                ...this.state.userProfile,\n                subscription,\n              },\n            })\n          );\n          getUserLimits(\n            authentification.getAuthorizationHeader,\n            profile.uid\n          ).then(limits =>\n            this.setState({\n              userProfile: {\n                ...this.state.userProfile,\n                limits,\n              },\n            })\n          );\n        }\n      );\n    });\n  };\n\n  _doLogout = () => {\n    if (this.props.authentification) this.props.authentification.logout();\n    this._resetUserProfile();\n  };\n\n  _doLogin = (form: LoginForm) => {\n    const { authentification } = this.props;\n    if (!authentification) return;\n\n    watchPromiseInState(this, 'loginInProgress', () =>\n      authentification.login(form).then(\n        () => {\n          this._fetchUserProfile();\n          this.openLoginDialog(false);\n        },\n        (loginError: LoginError) => {\n          this.setState({\n            loginError,\n          });\n        }\n      )\n    );\n  };\n\n  _doCreateAccount = (form: LoginForm) => {\n    const { authentification } = this.props;\n    if (!authentification) return;\n\n    watchPromiseInState(this, 'createAccountInProgress', () =>\n      authentification.createAccount(form).then(\n        () => {\n          this._fetchUserProfile();\n          this.openLoginDialog(false);\n          sendSignupDone(form.email);\n        },\n        (loginError: LoginError) => {\n          this.setState({\n            loginError,\n          });\n        }\n      )\n    );\n  };\n\n  _doForgotPassword = (form: LoginForm) => {\n    const { authentification } = this.props;\n    if (!authentification) return;\n\n    watchPromiseInState(this, 'forgotPasswordInProgress', () =>\n      authentification.forgotPassword(form).then(\n        () => {\n          this.openResetPassword(true);\n        },\n        (loginError: LoginError) => {\n          this.setState({\n            loginError,\n          });\n          showWarningBox(\n            \"Unable to send you an email to reset your password. Please double-check that the email address that you've entered is valid.\"\n          );\n        }\n      )\n    );\n  };\n\n  openResetPassword = (open: boolean = true) => {\n    this.setState({\n      resetPasswordDialogOpen: open,\n    });\n  };\n\n  openLoginDialog = (open: boolean = true) => {\n    this.setState({\n      loginDialogOpen: open,\n      createAccountDialogOpen: false,\n    });\n  };\n\n  openCreateAccountDialog = (open: boolean = true) => {\n    this.setState({\n      loginDialogOpen: false,\n      createAccountDialogOpen: open,\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <UserProfileContext.Provider value={this.state.userProfile}>\n          {this.props.children}\n        </UserProfileContext.Provider>\n        {this.state.loginDialogOpen && (\n          <LoginDialog\n            onClose={() => this.openLoginDialog(false)}\n            onGoToCreateAccount={() => this.openCreateAccountDialog(true)}\n            onLogin={this._doLogin}\n            loginInProgress={this.state.loginInProgress}\n            error={this.state.loginError}\n            onForgotPassword={this._doForgotPassword}\n            resetPasswordDialogOpen={this.state.resetPasswordDialogOpen}\n            onCloseResetPasswordDialog={() => this.openResetPassword(false)}\n            forgotPasswordInProgress={this.state.forgotPasswordInProgress}\n          />\n        )}\n        {this.state.createAccountDialogOpen && (\n          <CreateAccountDialog\n            onClose={() => this.openCreateAccountDialog(false)}\n            onGoToLogin={() => this.openLoginDialog(true)}\n            onCreateAccount={this._doCreateAccount}\n            createAccountInProgress={this.state.createAccountInProgress}\n            error={this.state.loginError}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\n\nimport * as React from 'react';\nimport PreferencesContext, {\n  initialPreferences,\n  type Preferences,\n  type PreferencesValues,\n  type AlertMessageIdentifier,\n} from './PreferencesContext';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport { getIDEVersion } from '../../Version';\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\n\ntype Props = {|\n  children: React.Node,\n  disableCheckForUpdates: boolean,\n|};\n\ntype State = Preferences;\n\nconst LocalStorageItem = 'gd-preferences';\n\nexport default class PreferencesProvider extends React.Component<Props, State> {\n  state = {\n    values: this._loadValuesFromLocalStorage() || initialPreferences.values,\n    setLanguage: this._setLanguage.bind(this),\n    setThemeName: this._setThemeName.bind(this),\n    setCodeEditorThemeName: this._setCodeEditorThemeName.bind(this),\n    setAutoDownloadUpdates: this._setAutoDownloadUpdates.bind(this),\n    checkUpdates: this._checkUpdates.bind(this),\n    setAutoDisplayChangelog: this._setAutoDisplayChangelog.bind(this),\n    showAlertMessage: this._showAlertMessage.bind(this),\n    verifyIfIsNewVersion: this._verifyIfIsNewVersion.bind(this),\n    setEventsSheetShowObjectThumbnails: this._setEventsSheetShowObjectThumbnails.bind(\n      this\n    ),\n    setAutosaveOnPreview: this._setAutosaveOnPreview.bind(this),\n    setUseNewInstructionEditorDialog: this._setUseNewInstructionEditorDialog.bind(\n      this\n    ),\n    setUseGDJSDevelopmentWatcher: this._setUseGDJSDevelopmentWatcher.bind(this),\n    setEventsSheetUseAssignmentOperators: this._setEventsSheetUseAssignmentOperators.bind(\n      this\n    ),\n    setShowEffectParameterNames: this._setShowEffectParameterNames.bind(this),\n  };\n\n  componentDidMount() {\n    setTimeout(() => this._checkUpdates(), 10000);\n  }\n\n  _setLanguage(language: string) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          language,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setEventsSheetShowObjectThumbnails(\n    eventsSheetShowObjectThumbnails: boolean\n  ) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          eventsSheetShowObjectThumbnails,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setAutosaveOnPreview(autosaveOnPreview: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          autosaveOnPreview,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setUseNewInstructionEditorDialog(useNewInstructionEditorDialog: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          useNewInstructionEditorDialog,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setUseGDJSDevelopmentWatcher(useGDJSDevelopmentWatcher: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          useGDJSDevelopmentWatcher,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setEventsSheetUseAssignmentOperators(\n    eventsSheetUseAssignmentOperators: boolean\n  ) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          eventsSheetUseAssignmentOperators,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setShowEffectParameterNames(showEffectParameterNames: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          showEffectParameterNames,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setThemeName(themeName: string) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          themeName,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setCodeEditorThemeName(codeEditorThemeName: string) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          codeEditorThemeName,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setAutoDownloadUpdates(autoDownloadUpdates: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          autoDownloadUpdates,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _setAutoDisplayChangelog(autoDisplayChangelog: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          autoDisplayChangelog,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _checkUpdates(forceDownload?: boolean) {\n    // Checking for updates is only done on Electron.\n    // Note: This could be abstracted away later if other updates mechanisms\n    // should be supported.\n    const { disableCheckForUpdates } = this.props;\n    if (!ipcRenderer || disableCheckForUpdates) return;\n\n    if (!!forceDownload || this.state.values.autoDownloadUpdates) {\n      ipcRenderer.send('updates-check-and-download');\n    } else {\n      ipcRenderer.send('updates-check');\n    }\n  }\n\n  _verifyIfIsNewVersion() {\n    const currentVersion = getIDEVersion();\n    const { lastLaunchedVersion } = this.state.values;\n    if (lastLaunchedVersion === currentVersion) {\n      // This is not a new version\n      return false;\n    }\n\n    // This is a new version: store the version number\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          lastLaunchedVersion: currentVersion,\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n\n    if (lastLaunchedVersion === undefined) {\n      // This is the first time GDevelop is launched, don't\n      // warn about this version being new.\n      return false;\n    }\n\n    return true;\n  }\n\n  _showAlertMessage(identifier: AlertMessageIdentifier, show: boolean) {\n    this.setState(\n      state => ({\n        values: {\n          ...state.values,\n          hiddenAlertMessages: {\n            ...state.values.hiddenAlertMessages,\n            [identifier]: !show,\n          },\n        },\n      }),\n      () => this._persistValuesToLocalStorage(this.state)\n    );\n  }\n\n  _loadValuesFromLocalStorage(): ?PreferencesValues {\n    try {\n      const persistedState = localStorage.getItem(LocalStorageItem);\n      if (!persistedState) return null;\n\n      const values = JSON.parse(persistedState);\n\n      // \"Migrate\" non existing properties to their default values\n      // (useful when upgrading the preferences to a new version where\n      // a new preference was added).\n      for (const key in initialPreferences.values) {\n        if (\n          initialPreferences.values.hasOwnProperty(key) &&\n          typeof values[key] === 'undefined'\n        ) {\n          values[key] = initialPreferences.values[key];\n        }\n      }\n\n      return values;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  _persistValuesToLocalStorage(preferences: Preferences) {\n    try {\n      localStorage.setItem(\n        LocalStorageItem,\n        JSON.stringify(preferences.values)\n      );\n    } catch (e) {\n      console.warn('Unable to persist preferences', e);\n    }\n\n    return preferences;\n  }\n\n  render() {\n    return (\n      <PreferencesContext.Provider value={this.state}>\n        {this.props.children}\n      </PreferencesContext.Provider>\n    );\n  }\n}\n","// @flow\n\nimport * as React from 'react';\nimport EventsFunctionsExtensionsContext, {\n  type EventsFunctionsExtensionsState,\n} from './EventsFunctionsExtensionsContext';\nimport {\n  loadProjectEventsFunctionsExtensions,\n  type EventsFunctionCodeWriter,\n  unloadProjectEventsFunctionsExtensions,\n} from '.';\nimport {\n  type EventsFunctionsExtensionWriter,\n  type EventsFunctionsExtensionOpener,\n} from './Storage';\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\n\ntype Props = {|\n  children: React.Node,\n  i18n: I18nType,\n  eventsFunctionCodeWriter: ?EventsFunctionCodeWriter,\n  eventsFunctionsExtensionWriter: ?EventsFunctionsExtensionWriter,\n  eventsFunctionsExtensionOpener: ?EventsFunctionsExtensionOpener,\n|};\n\ntype State = EventsFunctionsExtensionsState;\n\n/**\n * Allow children components to request the loading (or unloading) of\n * the events functions extensions of the project.\n * Useful when dealing with events functions extensions (new extension created,\n * removed, pasted, installed, etc...).\n */\nexport default class EventsFunctionsExtensionsProvider extends React.Component<\n  Props,\n  State\n> {\n  state = {\n    eventsFunctionsExtensionsError: null,\n    loadProjectEventsFunctionsExtensions: this._loadProjectEventsFunctionsExtensions.bind(\n      this\n    ),\n    unloadProjectEventsFunctionsExtensions: this._unloadProjectEventsFunctionsExtensions.bind(\n      this\n    ),\n    reloadProjectEventsFunctionsExtensions: this._reloadProjectEventsFunctionsExtensions.bind(\n      this\n    ),\n    getEventsFunctionsExtensionWriter: () =>\n      this.props.eventsFunctionsExtensionWriter,\n    getEventsFunctionsExtensionOpener: () =>\n      this.props.eventsFunctionsExtensionOpener,\n  };\n\n  _loadProjectEventsFunctionsExtensions(project: ?gdProject): Promise<void> {\n    const { i18n, eventsFunctionCodeWriter } = this.props;\n    if (!project || !eventsFunctionCodeWriter) return Promise.resolve();\n\n    return loadProjectEventsFunctionsExtensions(\n      project,\n      eventsFunctionCodeWriter,\n      i18n\n    )\n      .then(() =>\n        this.setState({\n          eventsFunctionsExtensionsError: null,\n        })\n      )\n      .catch((eventsFunctionsExtensionsError: Error) => {\n        this.setState({\n          eventsFunctionsExtensionsError,\n        });\n        showErrorBox(\n          i18n._(\n            t`An error has occured during functions generation. If GDevelop is installed, verify that nothing is preventing GDevelop from writing on disk. If you're running GDevelop online, verify your internet connection and refresh functions from the Project Manager.`\n          ),\n          eventsFunctionsExtensionsError\n        );\n      });\n  }\n\n  _unloadProjectEventsFunctionsExtensions(project: gdProject) {\n    unloadProjectEventsFunctionsExtensions(project);\n  }\n\n  _reloadProjectEventsFunctionsExtensions(project: ?gdProject): Promise<void> {\n    if (project) {\n      this._unloadProjectEventsFunctionsExtensions(project);\n    }\n    return this._loadProjectEventsFunctionsExtensions(project);\n  }\n\n  render() {\n    return (\n      <EventsFunctionsExtensionsContext.Provider value={this.state}>\n        {this.props.children}\n      </EventsFunctionsExtensionsContext.Provider>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport DragAndDropContextProvider from '../UI/DragAndDrop/DragAndDropContextProvider';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { getTheme } from '../UI/Theme';\nimport UserProfileProvider from '../Profile/UserProfileProvider';\nimport Authentification from '../Utils/GDevelopServices/Authentification';\nimport PreferencesProvider from './Preferences/PreferencesProvider';\nimport PreferencesContext from './Preferences/PreferencesContext';\nimport GDI18nProvider from '../Utils/i18n/GDI18nProvider';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport EventsFunctionsExtensionsProvider from '../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsProvider';\nimport EventsFunctionsExtensionsContext, {\n  type EventsFunctionsExtensionsState,\n} from '../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext';\nimport { type EventsFunctionCodeWriter } from '../EventsFunctionsExtensionsLoader';\nimport {\n  type EventsFunctionsExtensionWriter,\n  type EventsFunctionsExtensionOpener,\n} from '../EventsFunctionsExtensionsLoader/Storage';\nimport GDevelopThemeContext from '../UI/Theme/ThemeContext';\n\ntype Props = {|\n  authentification: Authentification,\n  disableCheckForUpdates: boolean,\n  eventsFunctionCodeWriter: ?EventsFunctionCodeWriter,\n  eventsFunctionsExtensionWriter: ?EventsFunctionsExtensionWriter,\n  eventsFunctionsExtensionOpener: ?EventsFunctionsExtensionOpener,\n  children: ({\n    i18n: I18nType,\n    eventsFunctionsExtensionsState: EventsFunctionsExtensionsState,\n  }) => React.Node,\n|};\n\n/**\n * Wrap the children with Drag and Drop, Material UI theme and i18n React providers,\n * so that these modules can be used in the children.\n */\nexport default class Providers extends React.Component<Props, {||}> {\n  render() {\n    const {\n      disableCheckForUpdates,\n      authentification,\n      children,\n      eventsFunctionCodeWriter,\n      eventsFunctionsExtensionWriter,\n      eventsFunctionsExtensionOpener,\n    } = this.props;\n    return (\n      <DragAndDropContextProvider>\n        <PreferencesProvider disableCheckForUpdates={disableCheckForUpdates}>\n          <PreferencesContext.Consumer>\n            {({ values }) => {\n              const theme = getTheme(values.themeName);\n              return (\n                <GDI18nProvider language={values.language}>\n                  <GDevelopThemeContext.Provider value={theme.gdevelopTheme}>\n                    <ThemeProvider theme={theme.muiTheme}>\n                      <UserProfileProvider authentification={authentification}>\n                        <I18n update>\n                          {({ i18n }) => (\n                            <EventsFunctionsExtensionsProvider\n                              i18n={i18n}\n                              eventsFunctionCodeWriter={\n                                eventsFunctionCodeWriter\n                              }\n                              eventsFunctionsExtensionWriter={\n                                eventsFunctionsExtensionWriter\n                              }\n                              eventsFunctionsExtensionOpener={\n                                eventsFunctionsExtensionOpener\n                              }\n                            >\n                              <EventsFunctionsExtensionsContext.Consumer>\n                                {eventsFunctionsExtensionsState =>\n                                  children({\n                                    i18n,\n                                    eventsFunctionsExtensionsState,\n                                  })\n                                }\n                              </EventsFunctionsExtensionsContext.Consumer>\n                            </EventsFunctionsExtensionsProvider>\n                          )}\n                        </I18n>\n                      </UserProfileProvider>\n                    </ThemeProvider>\n                  </GDevelopThemeContext.Provider>\n                </GDI18nProvider>\n              );\n            }}\n          </PreferencesContext.Consumer>\n        </PreferencesProvider>\n      </DragAndDropContextProvider>\n    );\n  }\n}\n","const themeData = {\n  base: 'vs-dark',\n  inherit: true,\n  rules: [\n    {\n      foreground: '969896',\n      token: 'comment',\n    },\n    {\n      foreground: 'ced1cf',\n      token: 'keyword.operator.class',\n    },\n    {\n      foreground: 'ced1cf',\n      token: 'constant.other',\n    },\n    {\n      foreground: 'ced1cf',\n      token: 'source.php.embedded.line',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'variable',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'support.other.variable',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'string.other.link',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'string.regexp',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'meta.tag',\n    },\n    {\n      foreground: 'cc6666',\n      token: 'declaration.tag',\n    },\n    {\n      foreground: 'de935f',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: 'de935f',\n      token: 'constant.language',\n    },\n    {\n      foreground: 'de935f',\n      token: 'support.constant',\n    },\n    {\n      foreground: 'de935f',\n      token: 'constant.character',\n    },\n    {\n      foreground: 'de935f',\n      token: 'variable.parameter',\n    },\n    {\n      foreground: 'de935f',\n      token: 'punctuation.section.embedded',\n    },\n    {\n      foreground: 'de935f',\n      token: 'keyword.other.unit',\n    },\n    {\n      foreground: 'f0c674',\n      token: 'entity.name.class',\n    },\n    {\n      foreground: 'f0c674',\n      token: 'entity.name.type.class',\n    },\n    {\n      foreground: 'f0c674',\n      token: 'support.type',\n    },\n    {\n      foreground: 'f0c674',\n      token: 'support.class',\n    },\n    {\n      foreground: 'b5bd68',\n      token: 'string',\n    },\n    {\n      foreground: 'b5bd68',\n      token: 'constant.other.symbol',\n    },\n    {\n      foreground: 'b5bd68',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: 'b5bd68',\n      token: 'markup.heading',\n    },\n    {\n      foreground: '8abeb7',\n      token: 'keyword.operator',\n    },\n    {\n      foreground: '8abeb7',\n      token: 'constant.other.color',\n    },\n    {\n      foreground: '81a2be',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: '81a2be',\n      token: 'meta.function-call',\n    },\n    {\n      foreground: '81a2be',\n      token: 'support.function',\n    },\n    {\n      foreground: '81a2be',\n      token: 'keyword.other.special-method',\n    },\n    {\n      foreground: '81a2be',\n      token: 'meta.block-level',\n    },\n    {\n      foreground: 'b294bb',\n      token: 'keyword',\n    },\n    {\n      foreground: 'b294bb',\n      token: 'storage',\n    },\n    {\n      foreground: 'b294bb',\n      token: 'storage.type',\n    },\n    {\n      foreground: 'b294bb',\n      token: 'entity.name.tag.css',\n    },\n    {\n      foreground: 'ced2cf',\n      background: 'df5f5f',\n      token: 'invalid',\n    },\n    {\n      foreground: 'ced2cf',\n      background: '82a3bf',\n      token: 'meta.separator',\n    },\n    {\n      foreground: 'ced2cf',\n      background: 'b798bf',\n      token: 'invalid.deprecated',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#C5C8C6',\n    'editor.background': '#1D1F21',\n    'editor.selectionBackground': '#373B41',\n    'editor.lineHighlightBackground': '#282A2E',\n    'editorCursor.foreground': '#AEAFAD',\n    'editorWhitespace.foreground': '#4B4E55',\n  },\n};\n\nexport default {\n  name: 'Tomorrow-Night',\n  themeName: 'tomorrow-night',\n  themeData,\n};\n","const themeData = {\n  base: 'vs-dark',\n  inherit: true,\n  rules: [\n    {\n      foreground: '75715e',\n      token: 'comment',\n    },\n    {\n      foreground: 'e6db74',\n      token: 'string',\n    },\n    {\n      foreground: 'ae81ff',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: 'ae81ff',\n      token: 'constant.language',\n    },\n    {\n      foreground: 'ae81ff',\n      token: 'constant.character',\n    },\n    {\n      foreground: 'ae81ff',\n      token: 'constant.other',\n    },\n    {\n      foreground: 'f92672',\n      token: 'keyword',\n    },\n    {\n      foreground: 'f92672',\n      token: 'storage',\n    },\n    {\n      foreground: '66d9ef',\n      fontStyle: 'italic',\n      token: 'storage.type',\n    },\n    {\n      foreground: 'a6e22e',\n      fontStyle: 'underline',\n      token: 'entity.name.class',\n    },\n    {\n      foreground: 'a6e22e',\n      fontStyle: 'italic underline',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: 'a6e22e',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: 'fd971f',\n      fontStyle: 'italic',\n      token: 'variable.parameter',\n    },\n    {\n      foreground: 'f92672',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: 'a6e22e',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: '66d9ef',\n      token: 'support.function',\n    },\n    {\n      foreground: '66d9ef',\n      token: 'support.constant',\n    },\n    {\n      foreground: '66d9ef',\n      fontStyle: 'italic',\n      token: 'support.type',\n    },\n    {\n      foreground: '66d9ef',\n      fontStyle: 'italic',\n      token: 'support.class',\n    },\n    {\n      foreground: 'f8f8f0',\n      background: 'f92672',\n      token: 'invalid',\n    },\n    {\n      foreground: 'f8f8f0',\n      background: 'ae81ff',\n      token: 'invalid.deprecated',\n    },\n    {\n      foreground: 'cfcfc2',\n      token: 'meta.structure.dictionary.json string.quoted.double.json',\n    },\n    {\n      foreground: '75715e',\n      token: 'meta.diff',\n    },\n    {\n      foreground: '75715e',\n      token: 'meta.diff.header',\n    },\n    {\n      foreground: 'f92672',\n      token: 'markup.deleted',\n    },\n    {\n      foreground: 'a6e22e',\n      token: 'markup.inserted',\n    },\n    {\n      foreground: 'e6db74',\n      token: 'markup.changed',\n    },\n    {\n      foreground: 'ae81ff',\n      token: 'constant.numeric.line-number.find-in-files - match',\n    },\n    {\n      foreground: 'e6db74',\n      token: 'entity.name.filename.find-in-files',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#F8F8F2',\n    'editor.background': '#272822',\n    'editor.selectionBackground': '#49483E',\n    'editor.lineHighlightBackground': '#3E3D32',\n    'editorCursor.foreground': '#F8F8F0',\n    'editorWhitespace.foreground': '#3B3A32',\n    'editorIndentGuide.activeBackground': '#9D550F',\n    'editor.selectionHighlightBorder': '#222218',\n  },\n};\n\nexport default {\n  name: 'Monokai',\n  themeName: 'monokai',\n  themeData,\n};\n","const themeData = {\n  base: 'vs',\n  inherit: true,\n  rules: [\n    {\n      foreground: '8e908c',\n      token: 'comment',\n    },\n    {\n      foreground: '666969',\n      token: 'keyword.operator.class',\n    },\n    {\n      foreground: '666969',\n      token: 'constant.other',\n    },\n    {\n      foreground: '666969',\n      token: 'source.php.embedded.line',\n    },\n    {\n      foreground: 'c82829',\n      token: 'variable',\n    },\n    {\n      foreground: 'c82829',\n      token: 'support.other.variable',\n    },\n    {\n      foreground: 'c82829',\n      token: 'string.other.link',\n    },\n    {\n      foreground: 'c82829',\n      token: 'string.regexp',\n    },\n    {\n      foreground: 'c82829',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: 'c82829',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: 'c82829',\n      token: 'meta.tag',\n    },\n    {\n      foreground: 'c82829',\n      token: 'declaration.tag',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'constant.language',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'support.constant',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'constant.character',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'variable.parameter',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'punctuation.section.embedded',\n    },\n    {\n      foreground: 'f5871f',\n      token: 'keyword.other.unit',\n    },\n    {\n      foreground: 'c99e00',\n      token: 'entity.name.class',\n    },\n    {\n      foreground: 'c99e00',\n      token: 'entity.name.type.class',\n    },\n    {\n      foreground: 'c99e00',\n      token: 'support.type',\n    },\n    {\n      foreground: 'c99e00',\n      token: 'support.class',\n    },\n    {\n      foreground: '718c00',\n      token: 'string',\n    },\n    {\n      foreground: '718c00',\n      token: 'constant.other.symbol',\n    },\n    {\n      foreground: '718c00',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: '718c00',\n      token: 'markup.heading',\n    },\n    {\n      foreground: '3e999f',\n      token: 'keyword.operator',\n    },\n    {\n      foreground: '3e999f',\n      token: 'constant.other.color',\n    },\n    {\n      foreground: '4271ae',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: '4271ae',\n      token: 'meta.function-call',\n    },\n    {\n      foreground: '4271ae',\n      token: 'support.function',\n    },\n    {\n      foreground: '4271ae',\n      token: 'keyword.other.special-method',\n    },\n    {\n      foreground: '4271ae',\n      token: 'meta.block-level',\n    },\n    {\n      foreground: '8959a8',\n      token: 'keyword',\n    },\n    {\n      foreground: '8959a8',\n      token: 'storage',\n    },\n    {\n      foreground: '8959a8',\n      token: 'storage.type',\n    },\n    {\n      foreground: 'ffffff',\n      background: 'c82829',\n      token: 'invalid',\n    },\n    {\n      foreground: 'ffffff',\n      background: '4271ae',\n      token: 'meta.separator',\n    },\n    {\n      foreground: 'ffffff',\n      background: '8959a8',\n      token: 'invalid.deprecated',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#4D4D4C',\n    'editor.background': '#FFFFFF',\n    'editor.selectionBackground': '#D6D6D6',\n    'editor.lineHighlightBackground': '#EFEFEF',\n    'editorCursor.foreground': '#AEAFAD',\n    'editorWhitespace.foreground': '#D1D1D1',\n  },\n};\n\nexport default {\n  name: 'Tomorrow',\n  themeName: 'tomorrow',\n  themeData,\n};\n","const themeData = {\n  base: 'vs-dark',\n  inherit: true,\n  rules: [\n    {\n      foreground: '657b83',\n      fontStyle: 'italic',\n      token: 'comment',\n    },\n    {\n      foreground: '2aa198',\n      token: 'string',\n    },\n    {\n      foreground: 'd30102',\n      token: 'string.regexp',\n    },\n    {\n      foreground: 'd33682',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: '268bd2',\n      token: 'variable.language',\n    },\n    {\n      foreground: '268bd2',\n      token: 'variable.other',\n    },\n    {\n      foreground: '859900',\n      token: 'keyword',\n    },\n    {\n      foreground: '93a1a1',\n      fontStyle: 'bold',\n      token: 'storage',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'entity.name.class',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'entity.name.type.class',\n    },\n    {\n      foreground: '268bd2',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: '859900',\n      token: 'punctuation.definition.variable',\n    },\n    {\n      foreground: 'd30102',\n      token: 'punctuation.section.embedded.begin',\n    },\n    {\n      foreground: 'd30102',\n      token: 'punctuation.section.embedded.end',\n    },\n    {\n      foreground: 'b58900',\n      token: 'constant.language',\n    },\n    {\n      foreground: 'b58900',\n      token: 'meta.preprocessor',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'support.function.construct',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'keyword.other.new',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'constant.character',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'constant.other',\n    },\n    {\n      foreground: '6c71c4',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: '268bd2',\n      fontStyle: 'bold',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: '657b83',\n      token: 'punctuation.definition.tag',\n    },\n    {\n      foreground: '93a1a1',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: '268bd2',\n      token: 'support.function',\n    },\n    {\n      foreground: 'd30102',\n      token: 'punctuation.separator.continuation',\n    },\n    {\n      foreground: '859900',\n      token: 'support.type',\n    },\n    {\n      foreground: '859900',\n      token: 'support.class',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'support.type.exception',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#93A1A1',\n    'editor.background': '#002B36',\n    'editor.selectionBackground': '#073642',\n    'editor.lineHighlightBackground': '#073642',\n    'editorCursor.foreground': '#D30102',\n    'editorWhitespace.foreground': '#93A1A1',\n  },\n};\n\nexport default {\n  name: 'Solarized-Dark',\n  themeName: 'solarized-dark',\n  themeData,\n};\n","const themeData = {\n  base: 'vs',\n  inherit: true,\n  rules: [\n    {\n      foreground: '93a1a1',\n      token: 'comment',\n    },\n    {\n      foreground: '2aa198',\n      token: 'string',\n    },\n    {\n      foreground: 'd30102',\n      token: 'string.regexp',\n    },\n    {\n      foreground: 'd33682',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: '268bd2',\n      token: 'variable.language',\n    },\n    {\n      foreground: '268bd2',\n      token: 'variable.other',\n    },\n    {\n      foreground: '859900',\n      token: 'keyword',\n    },\n    {\n      foreground: '073642',\n      fontStyle: 'bold',\n      token: 'storage',\n    },\n    {\n      foreground: '268bd2',\n      token: 'entity.name.class',\n    },\n    {\n      foreground: '268bd2',\n      token: 'entity.name.type.class',\n    },\n    {\n      foreground: '268bd2',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: '859900',\n      token: 'punctuation.definition.variable',\n    },\n    {\n      foreground: 'd30102',\n      token: 'punctuation.section.embedded.begin',\n    },\n    {\n      foreground: 'd30102',\n      token: 'punctuation.section.embedded.end',\n    },\n    {\n      foreground: 'b58900',\n      token: 'constant.language',\n    },\n    {\n      foreground: 'b58900',\n      token: 'meta.preprocessor',\n    },\n    {\n      foreground: 'd30102',\n      token: 'support.function.construct',\n    },\n    {\n      foreground: 'd30102',\n      token: 'keyword.other.new',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'constant.character',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'constant.other',\n    },\n    {\n      foreground: '268bd2',\n      fontStyle: 'bold',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: '93a1a1',\n      token: 'punctuation.definition.tag.begin',\n    },\n    {\n      foreground: '93a1a1',\n      token: 'punctuation.definition.tag.end',\n    },\n    {\n      foreground: '93a1a1',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: '268bd2',\n      token: 'support.function',\n    },\n    {\n      foreground: 'd30102',\n      token: 'punctuation.separator.continuation',\n    },\n    {\n      foreground: '859900',\n      token: 'support.type',\n    },\n    {\n      foreground: '859900',\n      token: 'support.class',\n    },\n    {\n      foreground: 'cb4b16',\n      token: 'support.type.exception',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#586E75',\n    'editor.background': '#FDF6E3',\n    'editor.selectionBackground': '#073642',\n    'editor.lineHighlightBackground': '#EEE8D5',\n    'editorCursor.foreground': '#000000',\n    'editorWhitespace.foreground': '#93A1A1',\n  },\n};\n\nexport default {\n  name: 'Solarized-Light',\n  themeName: 'solarized-light',\n  themeData,\n};\n","const themeData = {\n  base: 'vs-dark',\n  inherit: true,\n  rules: [\n    {\n      foreground: 'ffffff',\n      background: '0f0f0f',\n      token: 'text',\n    },\n    {\n      background: '000000',\n      token: 'source.ruby.rails.embedded.html',\n    },\n    {\n      foreground: 'ffffff',\n      background: '101010',\n      token: 'text.html.ruby',\n    },\n    {\n      foreground: 'ccff33',\n      background: '000000',\n      token: 'invalid',\n    },\n    {\n      foreground: 'ccff33',\n      background: '000000',\n      token: 'invalid.deprecated',\n    },\n    {\n      foreground: '99cc99',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: 'ffffff',\n      background: '000000',\n      token: 'source',\n    },\n    {\n      foreground: '9933cc',\n      token: 'comment',\n    },\n    {\n      foreground: '339999',\n      token: 'constant',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'keyword',\n    },\n    {\n      foreground: 'edf8f9',\n      token: 'keyword.preprocessor',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'keyword.preprocessor directive',\n    },\n    {\n      foreground: 'ffcc00',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: 'ffcc00',\n      token: 'storage.type.function.js',\n    },\n    {\n      fontStyle: 'italic',\n      token: 'variable.parameter',\n    },\n    {\n      foreground: '772cb7',\n      background: '070707',\n      token: 'source comment.block',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'variable.other',\n    },\n    {\n      foreground: 'ffcc00',\n      token: 'support.function',\n    },\n    {\n      foreground: '66ff00',\n      token: 'string',\n    },\n    {\n      foreground: 'aaaaaa',\n      token: 'string constant.character.escape',\n    },\n    {\n      foreground: '000000',\n      background: 'cccc33',\n      token: 'string.interpolated',\n    },\n    {\n      foreground: '44b4cc',\n      token: 'string.regexp',\n    },\n    {\n      foreground: 'cccc33',\n      token: 'string.literal',\n    },\n    {\n      foreground: '555555',\n      token: 'string.interpolated constant.character.escape',\n    },\n    {\n      fontStyle: 'underline',\n      token: 'entity.name.class',\n    },\n    {\n      fontStyle: 'underline',\n      token: 'support.class.js',\n    },\n    {\n      fontStyle: 'italic underline',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'meta.tag.inline.any.html',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'meta.tag.block.any.html',\n    },\n    {\n      foreground: '99cc99',\n      fontStyle: 'italic',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: 'dde93d',\n      token: 'keyword.other',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'meta.selector.css',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'entity.other.attribute-name.pseudo-class.css',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'entity.name.tag.wildcard.css',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'entity.other.attribute-name.id.css',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'entity.other.attribute-name.class.css',\n    },\n    {\n      foreground: '999966',\n      token: 'support.type.property-name.css',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'keyword.other.unit.css',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'constant.other.rgb-value.css',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'constant.numeric.css',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'support.function.event-handler.js',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'keyword.operator.js',\n    },\n    {\n      foreground: 'cccc66',\n      token: 'keyword.control.js',\n    },\n    {\n      foreground: 'ffffff',\n      token: 'support.class.prototype.js',\n    },\n    {\n      foreground: 'ff6600',\n      token: 'object.property.function.prototype.js',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#FFFFFF',\n    'editor.background': '#0F0F0F',\n    'editor.selectionBackground': '#6699CC',\n    'editor.lineHighlightBackground': '#333333',\n    'editorCursor.foreground': '#FFFFFF',\n    'editorWhitespace.foreground': '#404040',\n  },\n};\n\nexport default {\n  name: 'Vibrant Ink',\n  themeName: 'vibrant-ink',\n  themeData,\n};\n","const themeData = {\n  base: 'vs',\n  inherit: true,\n  rules: [\n    {\n      foreground: '999988',\n      fontStyle: 'italic',\n      token: 'comment',\n    },\n    {\n      foreground: '999999',\n      fontStyle: 'bold',\n      token: 'comment.block.preprocessor',\n    },\n    {\n      foreground: '999999',\n      fontStyle: 'bold italic',\n      token: 'comment.documentation',\n    },\n    {\n      foreground: '999999',\n      fontStyle: 'bold italic',\n      token: 'comment.block.documentation',\n    },\n    {\n      foreground: 'a61717',\n      background: 'e3d2d2',\n      token: 'invalid.illegal',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'keyword',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'storage',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'keyword.operator',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'constant.language',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'support.constant',\n    },\n    {\n      foreground: '445588',\n      fontStyle: 'bold',\n      token: 'storage.type',\n    },\n    {\n      foreground: '445588',\n      fontStyle: 'bold',\n      token: 'support.type',\n    },\n    {\n      foreground: '008080',\n      token: 'entity.other.attribute-name',\n    },\n    {\n      foreground: '0086b3',\n      token: 'variable.other',\n    },\n    {\n      foreground: '999999',\n      token: 'variable.language',\n    },\n    {\n      foreground: '445588',\n      fontStyle: 'bold',\n      token: 'entity.name.type',\n    },\n    {\n      foreground: '445588',\n      fontStyle: 'bold',\n      token: 'entity.other.inherited-class',\n    },\n    {\n      foreground: '445588',\n      fontStyle: 'bold',\n      token: 'support.class',\n    },\n    {\n      foreground: '008080',\n      token: 'variable.other.constant',\n    },\n    {\n      foreground: '800080',\n      token: 'constant.character.entity',\n    },\n    {\n      foreground: '990000',\n      token: 'entity.name.exception',\n    },\n    {\n      foreground: '990000',\n      token: 'entity.name.function',\n    },\n    {\n      foreground: '990000',\n      token: 'support.function',\n    },\n    {\n      foreground: '990000',\n      token: 'keyword.other.name-of-parameter',\n    },\n    {\n      foreground: '555555',\n      token: 'entity.name.section',\n    },\n    {\n      foreground: '000080',\n      token: 'entity.name.tag',\n    },\n    {\n      foreground: '008080',\n      token: 'variable.parameter',\n    },\n    {\n      foreground: '008080',\n      token: 'support.variable',\n    },\n    {\n      foreground: '009999',\n      token: 'constant.numeric',\n    },\n    {\n      foreground: '009999',\n      token: 'constant.other',\n    },\n    {\n      foreground: 'dd1144',\n      token: 'string - string source',\n    },\n    {\n      foreground: 'dd1144',\n      token: 'constant.character',\n    },\n    {\n      foreground: '009926',\n      token: 'string.regexp',\n    },\n    {\n      foreground: '990073',\n      token: 'constant.other.symbol',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'punctuation',\n    },\n    {\n      foreground: '000000',\n      background: 'ffdddd',\n      token: 'markup.deleted',\n    },\n    {\n      fontStyle: 'italic',\n      token: 'markup.italic',\n    },\n    {\n      foreground: 'aa0000',\n      token: 'markup.error',\n    },\n    {\n      foreground: '999999',\n      token: 'markup.heading.1',\n    },\n    {\n      foreground: '000000',\n      background: 'ddffdd',\n      token: 'markup.inserted',\n    },\n    {\n      foreground: '888888',\n      token: 'markup.output',\n    },\n    {\n      foreground: '888888',\n      token: 'markup.raw',\n    },\n    {\n      foreground: '555555',\n      token: 'markup.prompt',\n    },\n    {\n      fontStyle: 'bold',\n      token: 'markup.bold',\n    },\n    {\n      foreground: 'aaaaaa',\n      token: 'markup.heading',\n    },\n    {\n      foreground: 'aa0000',\n      token: 'markup.traceback',\n    },\n    {\n      fontStyle: 'underline',\n      token: 'markup.underline',\n    },\n    {\n      foreground: '999999',\n      background: 'eaf2f5',\n      token: 'meta.diff.range',\n    },\n    {\n      foreground: '999999',\n      background: 'eaf2f5',\n      token: 'meta.diff.index',\n    },\n    {\n      foreground: '999999',\n      background: 'eaf2f5',\n      token: 'meta.separator',\n    },\n    {\n      foreground: '999999',\n      background: 'ffdddd',\n      token: 'meta.diff.header.from-file',\n    },\n    {\n      foreground: '999999',\n      background: 'ddffdd',\n      token: 'meta.diff.header.to-file',\n    },\n    {\n      foreground: '4183c4',\n      token: 'meta.link',\n    },\n  ],\n  colors: {\n    'editor.foreground': '#000000',\n    'editor.background': '#F8F8FF',\n    'editor.selectionBackground': '#B4D5FE',\n    'editor.lineHighlightBackground': '#FFFEEB',\n    'editorCursor.foreground': '#666666',\n    'editorWhitespace.foreground': '#BBBBBB',\n  },\n};\n\nexport default {\n  name: 'GitHub',\n  themeName: 'github',\n  themeData,\n};\n","// @flow\nimport TomorrowNight from './TomorrowNight';\nimport Monokai from './Monokai';\nimport Tomorrow from './Tomorrow';\nimport SolarizedDark from './SolarizedDark';\nimport SolarizedLight from './SolarizedLight';\nimport VibrantInk from './VibrantInk';\nimport GitHub from './GitHub';\n\ntype CodeEditorTheme = {|\n  name: string,\n  themeName: string,\n  themeData?: any,\n|};\n\n// Want to add a new theme? Grab a theme made for Visual Studio Code (Monaco Editor)\n// (for example on https://bitwiser.in/monaco-themes/). Copy an existing file (like Monokai.js),\n// replace themeData, update the name, and finally add it to this list\n// (+import it at the top of the file):\nconst themes: Array<CodeEditorTheme> = [\n  // Built-in Monaco editor themes\n  {\n    name: 'Visual Studio',\n    themeName: 'vs',\n  },\n  {\n    name: 'Visual Studio Dark',\n    themeName: 'vs-dark',\n  },\n  // Third parties themes\n  GitHub,\n  Monokai,\n  SolarizedDark,\n  SolarizedLight,\n  Tomorrow,\n  TomorrowNight,\n  VibrantInk,\n];\n\nexport const getAllThemes = () => themes;\n","// @flow\nimport * as React from 'react';\n\nconst styles = {\n  previewContainer: {\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 200,\n    border: '#AAAAAA 1px solid',\n    background: 'url(\"res/transparentback.png\") repeat',\n  },\n  icon: { width: 60, height: 60 },\n};\n\ntype Props = {|\n  renderIcon: ({| style: Object |}) => React.Node,\n|};\n\n/**\n * Display a generic container to display an icon.\n */\nexport default ({ renderIcon }: Props) => (\n  <div style={styles.previewContainer}>\n    {renderIcon({ style: styles.icon })}\n  </div>\n);\n","// @flow\nimport * as React from 'react';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport { type ResourceKind } from '../ResourceSource.flow';\nimport ImagePreview from './ImagePreview';\nimport GenericIconPreview from './GenericIconPreview';\nimport Audiotrack from '@material-ui/icons/Audiotrack';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport VideoLibrary from '@material-ui/icons/VideoLibrary';\nimport FontDownload from '@material-ui/icons/FontDownload';\n\ntype Props = {|\n  project: gdProject,\n  resourceName: string,\n  resourcePath?: string,\n  resourcesLoader: typeof ResourcesLoader,\n  style?: Object,\n  onSize?: (number, number) => void,\n|};\n\ntype State = {|\n  resourceKind: ?ResourceKind,\n|};\n\n/**\n * Display the right preview for any given resource of a project\n */\nexport default class ResourcePreview extends React.PureComponent<Props, State> {\n  state = this._loadFrom(this.props);\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      newProps.resourceName !== this.props.resourceName ||\n      newProps.project !== this.props.project ||\n      newProps.resourcePath !== this.props.resourcePath\n    ) {\n      this.setState(this._loadFrom(newProps));\n    }\n  }\n\n  _loadFrom(props: Props): State {\n    const { project, resourceName } = props;\n    const resourcesManager = project.getResourcesManager();\n    const resourceKind = resourcesManager.hasResource(resourceName)\n      ? resourcesManager.getResource(resourceName).getKind()\n      : null;\n\n    return {\n      resourceKind,\n    };\n  }\n\n  render() {\n    const { resourceKind } = this.state;\n\n    switch (resourceKind) {\n      case 'image':\n        return (\n          <ImagePreview\n            project={this.props.project}\n            resourceName={this.props.resourceName}\n            resourcesLoader={this.props.resourcesLoader}\n            style={this.props.style}\n            onSize={this.props.onSize}\n            resourcePath={this.props.resourcePath}\n          />\n        );\n      case 'audio':\n        return (\n          <GenericIconPreview renderIcon={props => <Audiotrack {...props} />} />\n        );\n      case 'json':\n        return (\n          <GenericIconPreview\n            renderIcon={props => <InsertDriveFile {...props} />}\n          />\n        );\n      case 'video':\n        return (\n          <GenericIconPreview\n            renderIcon={props => <VideoLibrary {...props} />}\n          />\n        );\n      case 'font':\n        return (\n          <GenericIconPreview\n            renderIcon={props => <FontDownload {...props} />}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Background from '../../UI/Background';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport PropertiesEditor from '../../PropertiesEditor';\nimport ResourcePreview from '../../ResourcesList/ResourcePreview';\nimport ResourcesLoader from '../../ResourcesLoader';\nimport propertiesMapToSchema from '../../PropertiesEditor/PropertiesMapToSchema';\nimport { type Schema } from '../../PropertiesEditor';\n\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../../ResourcesList/ResourceSource.flow';\n\nconst styles = {\n  imagePreview: { flex: 1 },\n  propertiesContainer: {\n    padding: 10,\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    flex: 2,\n  },\n};\n\ntype Props = {|\n  project: gdProject,\n  resourcesLoader: typeof ResourcesLoader,\n  resources: Array<gdResource>,\n  onResourcePathUpdated: () => void,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n|};\n\nexport default class ResourcePropertiesEditor extends React.Component<\n  Props,\n  {}\n> {\n  schema: Schema = [\n    {\n      name: 'Resource name',\n      valueType: 'string',\n      disabled: true,\n      getValue: (resource: gdResource) => resource.getName(),\n      setValue: (resource: gdResource, newValue: string) =>\n        resource.setName(newValue),\n    },\n    {\n      name: 'File',\n      valueType: 'string',\n      getValue: (resource: gdResource) => resource.getFile(),\n      setValue: (resource: gdResource, newValue: string) =>\n        resource.setFile(newValue),\n      onEditButtonClick: () => this._chooseResourcePath(),\n    },\n  ];\n\n  _renderEmpty() {\n    return (\n      <EmptyMessage>\n        <Trans>\n          Resources are automatically added to your project whenever you add an\n          image, a font or a video to an object or when you choose an audio file\n          in events. Choose a resource to display its properties.\n        </Trans>\n      </EmptyMessage>\n    );\n  }\n\n  _chooseResourcePath = () => {\n    const {\n      resources,\n      onResourcePathUpdated,\n      onChooseResource,\n      resourceSources,\n    } = this.props;\n    const resource = resources[0];\n    const sources = resourceSources.filter(\n      source => source.kind === resource.getKind()\n    );\n    if (!sources.length) return;\n    onChooseResource(sources[0].name).then(resources => {\n      if (!resources.length) return; // No path was chosen by the user.\n      resource.setFile(resources[0].getFile());\n\n      // Important, we are responsible for deleting the resources that were given to us.\n      // Otherwise we have a memory leak.\n      resources.forEach(resource => resource.delete());\n\n      onResourcePathUpdated();\n      this.forceUpdate();\n    });\n  };\n\n  _renderResourcesProperties() {\n    const { resources, project } = this.props;\n    //TODO: Multiple resources support\n    const properties = resources[0].getProperties(project);\n    const resourceSchema = propertiesMapToSchema(\n      properties,\n      resource => resource.getProperties(project),\n      (resource, name, value) => resource.updateProperty(name, value, project)\n    );\n\n    return (\n      <div\n        style={styles.propertiesContainer}\n        key={resources.map(resource => '' + resource.ptr).join(';')}\n      >\n        <PropertiesEditor\n          schema={this.schema.concat(resourceSchema)}\n          instances={resources}\n        />\n      </div>\n    );\n  }\n\n  _renderPreview() {\n    const { resources, project, resourcesLoader } = this.props;\n    if (!resources || !resources.length) return;\n\n    return (\n      <ResourcePreview\n        style={styles.imagePreview}\n        resourceName={resources[0].getName()}\n        resourcePath={resources[0].getFile()}\n        resourcesLoader={resourcesLoader}\n        project={project}\n      />\n    );\n  }\n\n  render() {\n    const { resources } = this.props;\n\n    return (\n      <Background maxWidth>\n        {this._renderPreview()}\n        {!resources || !resources.length\n          ? this._renderEmpty()\n          : this._renderResourcesProperties()}\n      </Background>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport React, { PureComponent } from 'react';\nimport { ToolbarGroup } from '../UI/Toolbar';\nimport ToolbarIcon from '../UI/ToolbarIcon';\nimport ToolbarSeparator from '../UI/ToolbarSeparator';\n\ntype Props = {|\n  onOpenProjectFolder: () => void,\n  onDeleteSelection: () => void,\n  canDelete: boolean,\n  onOpenProperties: () => void,\n|};\n\ntype State = {||};\n\nexport class Toolbar extends PureComponent<Props, State> {\n  render() {\n    const { canDelete } = this.props;\n\n    return (\n      <ToolbarGroup lastChild>\n        <ToolbarIcon\n          onClick={this.props.onOpenProjectFolder}\n          src=\"res/ribbon_default/open32.png\"\n          tooltip={t`Open the project folder`}\n        />\n        <ToolbarSeparator />\n        <ToolbarIcon\n          onClick={this.props.onOpenProperties}\n          src=\"res/ribbon_default/editprop32.png\"\n          tooltip={t`Open the properties panel`}\n        />\n        <ToolbarSeparator />\n        <ToolbarIcon\n          onClick={this.props.onDeleteSelection}\n          src=\"res/ribbon_default/deleteselected32.png\"\n          disabled={!canDelete}\n          tooltip={t`Delete the selected resource`}\n        />\n      </ToolbarGroup>\n    );\n  }\n}\n\nexport default Toolbar;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport ResourcesList from '../ResourcesList';\nimport ResourcePropertiesEditor from './ResourcePropertiesEditor';\nimport Toolbar from './Toolbar';\nimport EditorMosaic from '../UI/EditorMosaic';\nimport InfoBar from '../UI/Messages/InfoBar';\nimport ResourcesLoader from '../ResourcesLoader';\nimport optionalRequire from '../Utils/OptionalRequire';\n\nimport {\n  type ResourceSource,\n  type ChooseResourceFunction,\n} from '../ResourcesList/ResourceSource.flow';\n\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\nconst path = optionalRequire('path');\nconst styles = {\n  container: {\n    display: 'flex',\n    flex: 1,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n};\n\ntype State = {\n  showPropertiesInfoBar: boolean,\n  selectedResource: ?gdResource,\n};\n\ntype Props = {\n  setToolbar: React.Node => void,\n  project: gdProject,\n  onDeleteResource: (resource: gdResource, cb: (boolean) => void) => void,\n  onRenameResource: (\n    resource: gdResource,\n    newName: string,\n    cb: (boolean) => void\n  ) => void,\n  resourceSources: Array<ResourceSource>,\n  onChooseResource: ChooseResourceFunction,\n};\n\nexport default class ResourcesEditor extends React.Component<Props, State> {\n  static defaultProps = {\n    setToolbar: () => {},\n  };\n\n  editorMosaic: ?EditorMosaic = null;\n  _propertiesEditor: ?ResourcePropertiesEditor = null;\n  _resourcesList: ?ResourcesList = null;\n  resourcesLoader = ResourcesLoader;\n  state = {\n    showPropertiesInfoBar: false,\n    selectedResource: null,\n  };\n\n  updateToolbar() {\n    this.props.setToolbar(\n      <Toolbar\n        onOpenProjectFolder={this.openProjectFolder}\n        onOpenProperties={this.openProperties}\n        canDelete={!!this.state.selectedResource}\n        onDeleteSelection={() =>\n          this.deleteResource(this.state.selectedResource)\n        }\n      />\n    );\n  }\n\n  deleteResource = (resource: ?gdResource) => {\n    const { project, onDeleteResource } = this.props;\n    if (!resource) return;\n\n    //eslint-disable-next-line\n    const answer = confirm(\n      \"Are you sure you want to remove this resource? This can't be undone.\"\n    );\n    if (!answer) return;\n\n    onDeleteResource(resource, doRemove => {\n      if (!doRemove || !resource) return;\n\n      project.getResourcesManager().removeResource(resource.getName());\n      this.setState(\n        {\n          selectedResource: null,\n        },\n        () => {\n          if (this._resourcesList) this._resourcesList.forceUpdateList();\n          this.updateToolbar();\n        }\n      );\n    });\n  };\n\n  openProjectFolder = () => {\n    const project = this.props.project;\n    if (shell) shell.openItem(path.dirname(project.getProjectFile()));\n  };\n\n  openProperties = () => {\n    if (!this.editorMosaic) return;\n    if (!this.editorMosaic.openEditor('properties', 'start', 66)) {\n      this.setState({\n        showPropertiesInfoBar: true,\n      });\n    }\n  };\n\n  _onResourceSelected = (selectedResource: ?gdResource) => {\n    this.setState(\n      {\n        selectedResource,\n      },\n      () => {\n        if (this._propertiesEditor) this._propertiesEditor.forceUpdate();\n        this.updateToolbar();\n      }\n    );\n  };\n\n  render() {\n    const {\n      project,\n      onRenameResource,\n      onChooseResource,\n      resourceSources,\n    } = this.props;\n    const { selectedResource } = this.state;\n\n    const editors = {\n      properties: {\n        type: 'secondary',\n        title: <Trans>Properties</Trans>,\n        renderEditor: () => (\n          <ResourcePropertiesEditor\n            key={selectedResource ? selectedResource.ptr : undefined}\n            resources={selectedResource ? [selectedResource] : []}\n            project={project}\n            resourcesLoader={this.resourcesLoader}\n            ref={propertiesEditor =>\n              (this._propertiesEditor = propertiesEditor)\n            }\n            onResourcePathUpdated={() => {\n              if (this._resourcesList) {\n                this._resourcesList.checkMissingPaths();\n              }\n            }}\n            onChooseResource={onChooseResource}\n            resourceSources={resourceSources}\n          />\n        ),\n      },\n      'resources-list': {\n        type: 'primary',\n        noTitleBar: true,\n        renderEditor: () => (\n          <ResourcesList\n            project={project}\n            onDeleteResource={this.deleteResource}\n            onRenameResource={onRenameResource}\n            onSelectResource={this._onResourceSelected}\n            selectedResource={selectedResource}\n            ref={resourcesList => (this._resourcesList = resourcesList)}\n          />\n        ),\n      },\n    };\n\n    return (\n      <div style={styles.container}>\n        <EditorMosaic\n          editors={editors}\n          ref={editorMosaic => (this.editorMosaic = editorMosaic)}\n          initialNodes={{\n            direction: 'row',\n            first: 'properties',\n            second: 'resources-list',\n            splitPercentage: 66,\n          }}\n        />\n        <InfoBar\n          message={\n            <Trans>\n              Properties panel is already opened. After selecting a resource,\n              inspect and change its properties from this panel.\n            </Trans>\n          }\n          show={!!this.state.showPropertiesInfoBar}\n          identifier=\"resource-properties-panel-explanation\"\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport BaseEditor from './BaseEditor';\nimport ResourcesFullEditor from '../../ResourcesEditor';\n\nexport default class ResourcesEditor extends BaseEditor {\n  updateToolbar() {\n    if (this.editor) this.editor.updateToolbar();\n  }\n\n  render() {\n    const { project } = this.props;\n\n    return (\n      <ResourcesFullEditor\n        {...this.props}\n        ref={editor => (this.editor = editor)}\n        project={project}\n      />\n    );\n  }\n}\n","// @flow\nimport axios from 'axios';\nimport { GDevelopExtensionApi } from './ApiConfigs';\n\nexport type ExtensionShortHeader = {|\n  shortDescription: string,\n  extensionNamespace: string,\n  fullName: string,\n  name: string,\n  version: string,\n  url: string,\n  headerUrl: string,\n  tags: string,\n  eventsBasedBehaviorsCount: number,\n  eventsFunctionsCount: number,\n|};\nexport type ExtensionHeader = {|\n  ...ExtensionShortHeader,\n  description: string,\n|};\n\nexport type SerializedExtension = {\n  ...ExtensionHeader,\n};\n\nexport type ExtensionsRegistry = {\n  version: string,\n  allTags: Array<string>,\n  extensionShortHeaders: Array<ExtensionShortHeader>,\n};\n\n// Handle urls to extension header or file. If the URL is not absolute and HTTPS,\n// it is assumed to be relative to the registry base url.\nconst resolveExtensionUrl = (url: string): string => {\n  const trimmedUrl = url.trim();\n  if (trimmedUrl.indexOf('https://') === 0) {\n    return trimmedUrl;\n  }\n\n  return `${GDevelopExtensionApi.baseUrl}/${trimmedUrl}`;\n};\n\nexport const getExtensionsRegistry = (): Promise<ExtensionsRegistry> => {\n  return axios\n    .get(`${GDevelopExtensionApi.baseUrl}/extensions-registry.json`)\n    .then(response => response.data);\n};\n\nexport const getExtensionHeader = (\n  extensionShortHeader: ExtensionShortHeader\n): Promise<ExtensionHeader> => {\n  return axios\n    .get(resolveExtensionUrl(extensionShortHeader.headerUrl))\n    .then(response => response.data);\n};\n\nexport const getExtension = (\n  extensionHeader: ExtensionShortHeader | ExtensionHeader\n): Promise<SerializedExtension> => {\n  return axios\n    .get(resolveExtensionUrl(extensionHeader.url))\n    .then(response => response.data);\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { Column, Line } from './Grid';\nimport RaisedButton from './RaisedButton';\nimport EmptyMessage from './EmptyMessage';\n\ntype Props = {|\n  children: React.Node,\n  onRetry?: () => void,\n|};\n\nexport default ({ onRetry, children }: Props) => (\n  <Column expand alignItems=\"center\">\n    <EmptyMessage>{children}</EmptyMessage>\n    <Line>\n      {onRetry && (\n        <RaisedButton\n          primary\n          label={<Trans>Retry</Trans>}\n          onClick={() => onRetry()}\n        />\n      )}\n    </Line>\n  </Column>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport {\n  type ExtensionShortHeader,\n  type ExtensionHeader,\n  getExtensionHeader,\n} from '../Utils/GDevelopServices/Extension';\nimport LeftLoader from '../UI/LeftLoader';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport PlaceholderError from '../UI/PlaceholderError';\nimport { MarkdownText } from '../UI/MarkdownText';\nimport Text from '../UI/Text';\n\ntype Props = {|\n  extensionShortHeader: ExtensionShortHeader,\n  isInstalling: boolean,\n  onClose: () => void,\n  onInstall: () => void,\n  alreadyInstalled: boolean,\n|};\ntype State = {|\n  extensionHeader: ?ExtensionHeader,\n  error: ?Error,\n|};\n\nexport default class ExtensionInstallDialog extends Component<Props, State> {\n  state = {\n    extensionHeader: null,\n    error: null,\n  };\n\n  componentDidMount() {\n    this._loadExtensionheader();\n  }\n\n  _loadExtensionheader = () => {\n    this.setState({\n      error: null,\n    });\n    getExtensionHeader(this.props.extensionShortHeader).then(\n      extensionHeader => {\n        this.setState({\n          extensionHeader,\n        });\n      },\n      error => {\n        this.setState({\n          error,\n        });\n      }\n    );\n  };\n\n  render() {\n    const {\n      isInstalling,\n      extensionShortHeader,\n      onClose,\n      onInstall,\n      alreadyInstalled,\n    } = this.props;\n    const { extensionHeader, error } = this.state;\n\n    return (\n      <Dialog\n        title={\n          extensionHeader\n            ? extensionHeader.fullName\n            : extensionShortHeader.fullName\n        }\n        actions={[\n          <FlatButton\n            key=\"close\"\n            label={<Trans>Back</Trans>}\n            primary={false}\n            onClick={onClose}\n            disabled={isInstalling}\n          />,\n          <LeftLoader isLoading={isInstalling}>\n            <FlatButton\n              key=\"install\"\n              label={\n                alreadyInstalled ? (\n                  <Trans>Re-install/update</Trans>\n                ) : (\n                  <Trans>Install in project</Trans>\n                )\n              }\n              primary\n              onClick={onInstall}\n              disabled={isInstalling}\n            />\n          </LeftLoader>,\n        ]}\n        open\n        onRequestClose={onClose}\n      >\n        {!extensionHeader ? (\n          <Text>{extensionShortHeader.shortDescription}</Text>\n        ) : (\n          <MarkdownText source={extensionHeader.description} isStandaloneText />\n        )}\n        {!extensionHeader && !error && <PlaceholderLoader />}\n        {!extensionHeader && error && (\n          <PlaceholderError onRetry={this._loadExtensionheader}>\n            <Trans>\n              Can't load the extension registry. Verify your internet connection\n              or try again later.\n            </Trans>\n          </PlaceholderError>\n        )}\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport React, { Component } from 'react';\nimport {\n  getExtensionsRegistry,\n  type ExtensionsRegistry,\n  type ExtensionShortHeader,\n  type SerializedExtension,\n  getExtension,\n} from '../Utils/GDevelopServices/Extension';\nimport { List, ListItem } from '../UI/List';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport ExtensionInstallDialog from './ExtensionInstallDialog';\nimport { unserializeFromJSObject } from '../Utils/Serializer';\nimport { showErrorBox } from '../UI/Messages/MessageBox';\nimport EventsFunctionsExtensionsContext, {\n  type EventsFunctionsExtensionsState,\n} from '../EventsFunctionsExtensionsLoader/EventsFunctionsExtensionsContext';\nimport PlaceholderError from '../UI/PlaceholderError';\nimport EmptyMessage from '../UI/EmptyMessage';\nimport SearchbarWithChips from '../UI/SearchbarWithChips';\n\n/**\n * Add a serialized (JS object) events function extension to the project,\n * triggering reload of extensions.\n */\nexport const addSerializedExtensionToProject = (\n  eventsFunctionsExtensionsState: EventsFunctionsExtensionsState,\n  project: gdProject,\n  serializedExtension: SerializedExtension\n): Promise<void> => {\n  const { name } = serializedExtension;\n  if (!name)\n    return Promise.reject(new Error('Malformed extension (missing name).'));\n\n  const newEventsFunctionsExtension = project.hasEventsFunctionsExtensionNamed(\n    name\n  )\n    ? project.getEventsFunctionsExtension(name)\n    : project.insertNewEventsFunctionsExtension(name, 0);\n\n  unserializeFromJSObject(\n    newEventsFunctionsExtension,\n    serializedExtension,\n    'unserializeFrom',\n    project\n  );\n\n  return eventsFunctionsExtensionsState.loadProjectEventsFunctionsExtensions(\n    project\n  );\n};\n\ntype Props = {|\n  project: gdProject,\n  showOnlyWithBehaviors: boolean,\n  onNewExtensionInstalled: () => void,\n  onRegistryLoaded?: () => void,\n|};\n\ntype State = {|\n  isInstalling: boolean,\n  selectedExtensionShortHeader: ?ExtensionShortHeader,\n  searchText: string,\n  chosenTag: string,\n  extensionsRegistry: ?ExtensionsRegistry,\n  error: ?Error,\n|};\n\ntype FilteringOptions = {|\n  searchText: string,\n  chosenTag: string,\n  showOnlyWithBehaviors: boolean,\n|};\n\nconst filterExtensionShortHeaders = (\n  extensionShortHeaders: Array<ExtensionShortHeader>,\n  { searchText, chosenTag, showOnlyWithBehaviors }: FilteringOptions\n): Array<ExtensionShortHeader> => {\n  const behaviorsFilteredHeaders = extensionShortHeaders.filter(\n    ({ eventsBasedBehaviorsCount }) =>\n      !showOnlyWithBehaviors || eventsBasedBehaviorsCount > 0\n  );\n\n  if (!searchText && !chosenTag) return behaviorsFilteredHeaders;\n\n  const lowercaseSearchText = searchText.toLowerCase();\n  return behaviorsFilteredHeaders\n    .filter(({ tags }) => !chosenTag || tags.indexOf(chosenTag) !== -1)\n    .filter(\n      ({ name, shortDescription }) =>\n        !searchText ||\n        (name.toLowerCase().indexOf(lowercaseSearchText) !== -1 ||\n          shortDescription.toLowerCase().indexOf(lowercaseSearchText) !== -1)\n    );\n};\n\nconst MAX_DISPLAYED_RESULTS = 20;\n\n/**\n * Display a list of extensions that the user can search in.\n * Can be used as is, or in a dialog (see ExtensionsSearchDialog).\n */\nexport default class ExtensionsSearch extends Component<Props, State> {\n  state = {\n    isInstalling: false,\n    extensionsRegistry: null,\n    selectedExtensionShortHeader: null,\n    searchText: '',\n    error: null,\n    chosenTag: '',\n  };\n\n  componentDidMount() {\n    this._loadExtensionsRegistry();\n  }\n\n  _loadExtensionsRegistry = () => {\n    this.setState({\n      error: null,\n    });\n    getExtensionsRegistry().then(\n      extensionsRegistry => {\n        this.setState(\n          {\n            extensionsRegistry,\n          },\n          () => {\n            if (this.props.onRegistryLoaded) {\n              this.props.onRegistryLoaded();\n            }\n          }\n        );\n      },\n      error => {\n        this.setState({\n          error,\n        });\n      }\n    );\n  };\n\n  _install = (\n    i18n: I18nType,\n    eventsFunctionsExtensionsState: EventsFunctionsExtensionsState,\n    extensionShortHeader: ExtensionShortHeader\n  ) => {\n    const { project } = this.props;\n\n    this.setState({\n      isInstalling: true,\n    });\n    getExtension(extensionShortHeader)\n      .then(\n        serializedExtension => {\n          return addSerializedExtensionToProject(\n            eventsFunctionsExtensionsState,\n            project,\n            serializedExtension\n          ).then(() => {\n            this.setState(\n              {\n                selectedExtensionShortHeader: null,\n              },\n              () => this.props.onNewExtensionInstalled()\n            );\n          });\n        },\n        err => {\n          showErrorBox(\n            i18n._(\n              t`Unable to download and install the extension. Verify that your internet connection is working or try again later.`\n            ),\n            err\n          );\n        }\n      )\n      .then(() => {\n        this.setState({\n          isInstalling: false,\n        });\n      });\n  };\n\n  render() {\n    const { project, showOnlyWithBehaviors } = this.props;\n    const {\n      selectedExtensionShortHeader,\n      extensionsRegistry,\n      searchText,\n      isInstalling,\n      error,\n      chosenTag,\n    } = this.state;\n\n    const extensionShortHeaders = extensionsRegistry\n      ? filterExtensionShortHeaders(extensionsRegistry.extensionShortHeaders, {\n          searchText,\n          chosenTag,\n          showOnlyWithBehaviors,\n        })\n      : [];\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <EventsFunctionsExtensionsContext.Consumer>\n            {eventsFunctionsExtensionsState => (\n              <React.Fragment>\n                <SearchbarWithChips\n                  value={searchText}\n                  onRequestSearch={() => {\n                    if (extensionShortHeaders.length) {\n                      this.setState({\n                        selectedExtensionShortHeader: extensionShortHeaders[0],\n                      });\n                    }\n                  }}\n                  onChange={searchText =>\n                    this.setState({\n                      searchText,\n                    })\n                  }\n                  chips={\n                    !!extensionsRegistry\n                      ? extensionsRegistry.allTags.map(tag => ({\n                          text: tag,\n                          value: tag,\n                        }))\n                      : null\n                  }\n                  chosenChip={chosenTag}\n                  onChooseChip={chosenTag =>\n                    this.setState({\n                      chosenTag,\n                    })\n                  }\n                />\n                <List>\n                  {!extensionsRegistry && !error && <PlaceholderLoader />}\n                  {!!extensionsRegistry &&\n                    extensionShortHeaders\n                      .slice(0, MAX_DISPLAYED_RESULTS)\n                      .map(extensionShortHeader => {\n                        const alreadyInstalled = project.hasEventsFunctionsExtensionNamed(\n                          extensionShortHeader.name\n                        );\n\n                        return (\n                          <ListItem\n                            key={extensionShortHeader.name}\n                            primaryText={\n                              <span>\n                                {extensionShortHeader.fullName}{' '}\n                                {alreadyInstalled && (\n                                  <Trans> (already installed)</Trans>\n                                )}\n                              </span>\n                            }\n                            secondaryText={\n                              extensionShortHeader.shortDescription\n                            }\n                            secondaryTextLines={2}\n                            onClick={() =>\n                              this.setState({\n                                selectedExtensionShortHeader: extensionShortHeader,\n                              })\n                            }\n                          />\n                        );\n                      })}\n                  {!!extensionsRegistry &&\n                    extensionShortHeaders.length > MAX_DISPLAYED_RESULTS && (\n                      <EmptyMessage>\n                        <Trans>\n                          There are other results not displayed. Enter more\n                          precise search criteria to find other extensions.\n                        </Trans>\n                      </EmptyMessage>\n                    )}\n                  {!extensionsRegistry && error && (\n                    <PlaceholderError onRetry={this._loadExtensionsRegistry}>\n                      <Trans>\n                        Can't load the extension registry. Verify your internet\n                        connection or try again later.\n                      </Trans>\n                    </PlaceholderError>\n                  )}\n                </List>\n                {!!selectedExtensionShortHeader && (\n                  <ExtensionInstallDialog\n                    isInstalling={isInstalling}\n                    extensionShortHeader={selectedExtensionShortHeader}\n                    alreadyInstalled={project.hasEventsFunctionsExtensionNamed(\n                      selectedExtensionShortHeader.name\n                    )}\n                    onInstall={() =>\n                      this._install(\n                        i18n,\n                        eventsFunctionsExtensionsState,\n                        selectedExtensionShortHeader\n                      )\n                    }\n                    onClose={() =>\n                      this.setState({\n                        selectedExtensionShortHeader: null,\n                      })\n                    }\n                  />\n                )}\n              </React.Fragment>\n            )}\n          </EventsFunctionsExtensionsContext.Consumer>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport ListIcon from '../UI/ListIcon';\nimport Subheader from '../UI/Subheader';\nimport { List, ListItem } from '../UI/List';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport {\n  enumerateObjectTypes,\n  type EnumeratedObjectMetadata,\n} from './EnumerateObjects';\nimport HelpButton from '../UI/HelpButton';\nimport { getExperimentalObjects } from '../Hints';\nimport { Line } from '../UI/Grid';\n\nconst ObjectListItem = ({\n  objectMetadata,\n  onClick,\n}: {|\n  objectMetadata: EnumeratedObjectMetadata,\n  onClick: () => void,\n|}) => {\n  if (objectMetadata.name === '') {\n    // Base object is an \"abstract\" object\n    return null;\n  }\n\n  return (\n    <ListItem\n      leftIcon={\n        <ListIcon\n          src={objectMetadata.iconFilename}\n          iconSize={40}\n          isGDevelopIcon\n        />\n      }\n      key={objectMetadata.name}\n      primaryText={objectMetadata.fullName}\n      secondaryText={objectMetadata.description}\n      secondaryTextLines={2}\n      onClick={onClick}\n    />\n  );\n};\n\ntype Props = {|\n  project: gdProject,\n  open: boolean,\n  onClose: () => void,\n  onChoose: string => void,\n|};\n\ntype State = {|\n  objectMetadata: Array<EnumeratedObjectMetadata>,\n  showExperimental: boolean,\n|};\n\nexport default class NewObjectDialog extends Component<Props, State> {\n  state = { ...this._loadFrom(this.props.project), showExperimental: false };\n\n  _loadFrom(project: gdProject) {\n    if (!project || !project.getCurrentPlatform()) {\n      return { objectMetadata: [] };\n    }\n\n    return {\n      objectMetadata: enumerateObjectTypes(project),\n    };\n  }\n\n  componentWillReceiveProps(newProps: Props) {\n    if (\n      (!this.props.open && newProps.open) ||\n      (newProps.open && this.props.project !== newProps.project)\n    ) {\n      this.setState(this._loadFrom(newProps.project));\n    }\n  }\n\n  _showExperimental = (showExperimental: boolean = true) => {\n    this.setState({\n      showExperimental,\n    });\n  };\n\n  render() {\n    const { project, open, onClose, onChoose } = this.props;\n    const { objectMetadata, showExperimental } = this.state;\n    if (!open || !project) return null;\n\n    const experimentalObjectsInformation = getExperimentalObjects();\n\n    const objects = objectMetadata.filter(\n      ({ name }) => !experimentalObjectsInformation[name]\n    );\n    const experimentalObjects = objectMetadata.filter(\n      ({ name }) => !!experimentalObjectsInformation[name]\n    );\n\n    return (\n      <Dialog\n        title={<Trans>Add a new object</Trans>}\n        secondaryActions={<HelpButton helpPagePath=\"/objects\" />}\n        actions={\n          <FlatButton\n            label={<Trans>Close</Trans>}\n            primary={false}\n            onClick={onClose}\n          />\n        }\n        onRequestClose={onClose}\n        open={open}\n        noMargin\n      >\n        <List>\n          {objects.map(objectMetadata => (\n            <ObjectListItem\n              key={objectMetadata.name}\n              objectMetadata={objectMetadata}\n              onClick={() => onChoose(objectMetadata.name)}\n            />\n          ))}\n          {showExperimental && (\n            <Subheader>\n              Experimental (make sure to read the documentation page)\n            </Subheader>\n          )}\n          {showExperimental &&\n            experimentalObjects.map(objectMetadata => (\n              <ObjectListItem\n                key={objectMetadata.name}\n                objectMetadata={objectMetadata}\n                onClick={() => onChoose(objectMetadata.name)}\n              />\n            ))}\n        </List>\n        <Line justifyContent=\"center\" alignItems=\"center\">\n          {!showExperimental ? (\n            <FlatButton\n              key=\"toggle-experimental\"\n              icon={<Visibility />}\n              primary={false}\n              onClick={() => this._showExperimental(true)}\n              label={<Trans>Show experimental objects</Trans>}\n            />\n          ) : (\n            <FlatButton\n              key=\"toggle-experimental\"\n              icon={<VisibilityOff />}\n              primary={false}\n              onClick={() => this._showExperimental(false)}\n              label={<Trans>Hide experimental objects</Trans>}\n            />\n          )}\n        </Line>\n      </Dialog>\n    );\n  }\n}\n","export const CLIPBOARD_KIND = 'Object';\n","// @flow\nimport * as React from 'react';\nimport { t } from '@lingui/macro';\nimport Dialog from './Dialog';\nimport TextField from './TextField';\nimport FlatButton from './FlatButton';\nimport { Trans } from '@lingui/macro';\nimport { type Tags, getTagsFromString } from '../Utils/TagsHelper';\n\ntype Props = {|\n  tagsString: string,\n  onCancel: () => void,\n  onEdit: (tags: Tags) => void,\n|};\n\ntype State = {|\n  tagsString: string,\n|};\n\n/**\n * Dialog to edit tags, with keyboard support (auto focus of tags field,\n * enter to validate, esc to dismiss dialog).\n */\nexport default class EditTagsDialog extends React.Component<Props, State> {\n  state = {\n    tagsString: this.props.tagsString,\n  };\n  _tagsField = React.createRef<TextField>();\n\n  componentDidMount() {\n    setTimeout(() => {\n      if (this._tagsField && this._tagsField.current) {\n        this._tagsField.current.focus();\n      }\n    }, 10);\n  }\n\n  render() {\n    const { onCancel, onEdit } = this.props;\n    const { tagsString } = this.state;\n\n    const tags = getTagsFromString(tagsString);\n\n    return (\n      <Dialog\n        actions={[\n          <FlatButton\n            key=\"close\"\n            label={<Trans>Cancel</Trans>}\n            primary={false}\n            onClick={onCancel}\n          />,\n          <FlatButton\n            key=\"add\"\n            label={\n              this.props.tagsString && !tags.length ? (\n                <Trans>Remove all tags</Trans>\n              ) : (\n                <Trans>Add/update {tags.length} tag(s)</Trans>\n              )\n            }\n            primary\n            onClick={() => onEdit(tags)}\n            disabled={!this.props.tagsString && !tags.length}\n          />,\n        ]}\n        open\n        onRequestClose={onCancel}\n      >\n        <TextField\n          fullWidth\n          value={tagsString}\n          onChange={(e, tagsString) =>\n            this.setState({\n              tagsString,\n            })\n          }\n          floatingLabelText=\"Tag(s) (comma-separated)\"\n          hintText={t`For example: player, spaceship, inventory...`}\n          onKeyPress={event => {\n            if (event.key === 'Enter') {\n              onEdit(tags);\n            }\n          }}\n          ref={this._tagsField}\n        />\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport { AutoSizer } from 'react-virtualized';\nimport SortableVirtualizedItemList from '../UI/SortableVirtualizedItemList';\nimport Background from '../UI/Background';\nimport SearchBar from '../UI/SearchBar';\nimport NewObjectDialog from './NewObjectDialog';\nimport VariablesEditorDialog from '../VariablesList/VariablesEditorDialog';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport Clipboard from '../Utils/Clipboard';\nimport {\n  serializeToJSObject,\n  unserializeFromJSObject,\n} from '../Utils/Serializer';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport {\n  enumerateObjects,\n  filterObjectsList,\n  isSameObjectWithContext,\n} from './EnumerateObjects';\nimport type {\n  ObjectWithContextList,\n  ObjectWithContext,\n} from '../ObjectsList/EnumerateObjects';\nimport { CLIPBOARD_KIND } from './ClipboardKind';\nimport TagChips from '../UI/TagChips';\nimport EditTagsDialog from '../UI/EditTagsDialog';\nimport {\n  type Tags,\n  type SelectedTags,\n  getStringFromTags,\n  buildTagsMenuTemplate,\n  getTagsFromString,\n} from '../Utils/TagsHelper';\n\nconst styles = {\n  listContainer: {\n    flex: 1,\n  },\n};\n\nexport const objectWithContextReactDndType = 'GD_OBJECT_WITH_CONTEXT';\n\nconst getObjectWithContextName = (objectWithContext: ObjectWithContext) =>\n  objectWithContext.object.getName();\n\nconst isObjectWithContextGlobal = (objectWithContext: ObjectWithContext) =>\n  objectWithContext.global;\n\nconst getPasteLabel = isGlobalObject => {\n  let clipboardObjectName = '';\n  if (Clipboard.has(CLIPBOARD_KIND)) {\n    const clipboardContent = Clipboard.get(CLIPBOARD_KIND);\n    if (clipboardContent) {\n      clipboardObjectName = clipboardContent.name;\n    }\n  }\n\n  return isGlobalObject\n    ? 'Paste ' + clipboardObjectName + ' as a Global Object'\n    : 'Paste ' + clipboardObjectName;\n};\n\ntype State = {|\n  newObjectDialogOpen: boolean,\n  renamedObjectWithContext: ?ObjectWithContext,\n  variablesEditedObject: ?gdObject,\n  searchText: string,\n  tagEditedObject: ?gdObject,\n|};\n\ntype Props = {|\n  project: gdProject,\n  objectsContainer: gdObjectsContainer,\n  onDeleteObject: (\n    objectWithContext: ObjectWithContext,\n    cb: (boolean) => void\n  ) => void,\n  onRenameObject: (\n    objectWithContext: ObjectWithContext,\n    newName: string,\n    cb: (boolean) => void\n  ) => void,\n  selectedObjectNames: Array<string>,\n\n  selectedObjectTags: SelectedTags,\n  getAllObjectTags: () => Tags,\n  onChangeSelectedObjectTags: SelectedTags => void,\n\n  onEditObject: gdObject => void,\n  onObjectCreated: string => void,\n  onObjectSelected: string => void,\n  onObjectPasted?: gdObject => void,\n  canRenameObject: (newName: string) => boolean,\n\n  getThumbnail: (project: gdProject, object: Object) => string,\n|};\n\nexport default class ObjectsList extends React.Component<Props, State> {\n  sortableList: ?SortableVirtualizedItemList<ObjectWithContext>;\n  _displayedObjectWithContextsList: ObjectWithContextList = [];\n  state = {\n    newObjectDialogOpen: false,\n    renamedObjectWithContext: null,\n    variablesEditedObject: null,\n    searchText: '',\n    tagEditedObject: null,\n  };\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    // The component is costly to render, so avoid any re-rendering as much\n    // as possible.\n    // We make the assumption that no changes to objects list is made outside\n    // from the component.\n    // If a change is made, the component won't notice it: you have to manually\n    // call forceUpdate.\n\n    if (\n      this.state.newObjectDialogOpen !== nextState.newObjectDialogOpen ||\n      this.state.renamedObjectWithContext !==\n        nextState.renamedObjectWithContext ||\n      this.state.variablesEditedObject !== nextState.variablesEditedObject ||\n      this.state.searchText !== nextState.searchText ||\n      this.state.tagEditedObject !== nextState.tagEditedObject\n    )\n      return true;\n\n    if (\n      this.props.selectedObjectNames !== nextProps.selectedObjectNames ||\n      this.props.selectedObjectTags !== nextProps.selectedObjectTags\n    )\n      return true;\n\n    if (\n      this.props.project !== nextProps.project ||\n      this.props.objectsContainer !== nextProps.objectsContainer\n    )\n      return true;\n\n    return false;\n  }\n\n  addObject = (objectType: string) => {\n    const {\n      project,\n      objectsContainer,\n      onEditObject,\n      onObjectCreated,\n      onObjectSelected,\n    } = this.props;\n\n    const name = newNameGenerator(\n      'NewObject',\n      name =>\n        objectsContainer.hasObjectNamed(name) || project.hasObjectNamed(name)\n    );\n\n    const object = objectsContainer.insertNewObject(\n      project,\n      objectType,\n      name,\n      objectsContainer.getObjectsCount()\n    );\n    object.setTags(getStringFromTags(this.props.selectedObjectTags));\n\n    this.setState(\n      {\n        newObjectDialogOpen: false,\n      },\n      () => {\n        if (onEditObject) {\n          onEditObject(object);\n          onObjectCreated(name);\n          onObjectSelected(name);\n        }\n      }\n    );\n  };\n\n  onAddNewObject = () => {\n    this.setState({ newObjectDialogOpen: true });\n  };\n\n  _deleteObject = (objectWithContext: ObjectWithContext) => {\n    const { object, global } = objectWithContext;\n    const { project, objectsContainer } = this.props;\n\n    //eslint-disable-next-line\n    const answer = confirm(\n      \"Are you sure you want to remove this object? This can't be undone.\"\n    );\n    if (!answer) return;\n\n    // It's important to call onDeleteObject, because the parent might\n    // have to do some refactoring/clean up work before the object is deleted\n    // (typically, the SceneEditor will remove instances refering to the object,\n    // leading to the removal of their renderer - which can keep a reference to\n    // the object).\n    this.props.onDeleteObject(objectWithContext, doRemove => {\n      if (!doRemove) return;\n\n      if (global) {\n        project.removeObject(object.getName());\n      } else {\n        objectsContainer.removeObject(object.getName());\n      }\n\n      this.forceUpdate();\n    });\n  };\n\n  _copyObject = (objectWithContext: ObjectWithContext) => {\n    const { object } = objectWithContext;\n    Clipboard.set(CLIPBOARD_KIND, {\n      type: object.getType(),\n      name: object.getName(),\n      object: serializeToJSObject(object),\n    });\n  };\n\n  _cutObject = (objectWithContext: ObjectWithContext) => {\n    this._copyObject(objectWithContext);\n    this._deleteObject(objectWithContext);\n  };\n\n  _duplicateObject = (objectWithContext: ObjectWithContext) => {\n    this._copyObject(objectWithContext);\n    this._pasteAndRename(objectWithContext);\n  };\n\n  _pasteAndRename = (objectWithContext: ObjectWithContext) => {\n    this._editName(this._paste(objectWithContext));\n  };\n\n  _paste = (objectWithContext: ObjectWithContext): ?ObjectWithContext => {\n    if (!Clipboard.has(CLIPBOARD_KIND)) return null;\n\n    const { object: pasteObject, global } = objectWithContext;\n    const { object: copiedObject, type, name } = Clipboard.get(CLIPBOARD_KIND);\n    const { project, objectsContainer, onObjectPasted } = this.props;\n\n    const newName = newNameGenerator(\n      name,\n      name =>\n        objectsContainer.hasObjectNamed(name) || project.hasObjectNamed(name),\n      ''\n    );\n\n    const newObject = global\n      ? project.insertNewObject(\n          project,\n          type,\n          newName,\n          project.getObjectPosition(pasteObject.getName())\n        )\n      : objectsContainer.insertNewObject(\n          project,\n          type,\n          newName,\n          objectsContainer.getObjectPosition(pasteObject.getName())\n        );\n\n    unserializeFromJSObject(\n      newObject,\n      copiedObject,\n      'unserializeFrom',\n      project\n    );\n    newObject.setName(newName); // Unserialization has overwritten the name.\n\n    this.forceUpdate();\n    if (onObjectPasted) onObjectPasted(newObject);\n\n    return { object: newObject, global };\n  };\n\n  _editName = (objectWithContext: ?ObjectWithContext) => {\n    this.setState(\n      {\n        renamedObjectWithContext: objectWithContext,\n      },\n      () => {\n        if (this.sortableList) this.sortableList.forceUpdateGrid();\n      }\n    );\n  };\n\n  _editVariables = (object: ?gdObject) => {\n    this.setState({\n      variablesEditedObject: object,\n    });\n  };\n\n  _rename = (objectWithContext: ObjectWithContext, newName: string) => {\n    const { object } = objectWithContext;\n\n    this.setState({\n      renamedObjectWithContext: null,\n    });\n\n    if (this.props.canRenameObject(newName)) {\n      this.props.onRenameObject(objectWithContext, newName, doRename => {\n        if (!doRename) return;\n\n        object.setName(newName);\n        this.forceUpdate();\n      });\n    }\n  };\n\n  _canMoveSelectionTo = (destinationObjectWithContext: ObjectWithContext) => {\n    // Check if at least one element in the selection can be moved.\n    const selectedObjects = this._displayedObjectWithContextsList.filter(\n      objectWithContext =>\n        this.props.selectedObjectNames.indexOf(\n          objectWithContext.object.getName()\n        ) !== -1\n    );\n    return (\n      selectedObjects.filter(movedObjectWithContext => {\n        return (\n          movedObjectWithContext.global === destinationObjectWithContext.global\n        );\n      }).length > 0\n    );\n  };\n\n  _moveSelectionTo = (destinationObjectWithContext: ObjectWithContext) => {\n    const { project, objectsContainer } = this.props;\n\n    const container: gdObjectsContainer = destinationObjectWithContext.global\n      ? project\n      : objectsContainer;\n\n    const selectedObjects = this._displayedObjectWithContextsList.filter(\n      objectWithContext =>\n        this.props.selectedObjectNames.indexOf(\n          objectWithContext.object.getName()\n        ) !== -1\n    );\n    selectedObjects.forEach(movedObjectWithContext => {\n      if (\n        movedObjectWithContext.global !== destinationObjectWithContext.global\n      ) {\n        // Can't move an object from the objects container to the global objects\n        // or vice-versa.\n        return;\n      }\n\n      container.moveObject(\n        container.getObjectPosition(movedObjectWithContext.object.getName()),\n        container.getObjectPosition(\n          destinationObjectWithContext.object.getName()\n        )\n      );\n    });\n\n    this.forceUpdateList();\n  };\n\n  _setAsGlobalObject = (objectWithContext: ObjectWithContext) => {\n    const { object } = objectWithContext;\n    const { project, objectsContainer } = this.props;\n\n    const objectName: string = object.getName();\n    if (!objectsContainer.hasObjectNamed(objectName)) return;\n\n    if (project.hasObjectNamed(objectName)) {\n      showWarningBox(\n        'A global object with this name already exists. Please change the object name before setting it as a global object'\n      );\n      return;\n    }\n\n    //eslint-disable-next-line\n    const answer = confirm(\n      \"This object will be loaded and available in all the scenes. This is only recommended for objects that you reuse a lot and can't be undone. Make this object global?\"\n    );\n    if (!answer) return;\n\n    // It's safe to call moveObjectToAnotherContainer because it does not invalidate the\n    // references to the object in memory - so other editors like InstancesRenderer can\n    // continue to work.\n    objectsContainer.moveObjectToAnotherContainer(\n      objectName,\n      project,\n      project.getObjectsCount()\n    );\n\n    this.forceUpdateList();\n  };\n\n  forceUpdateList = () => {\n    this.forceUpdate();\n    if (this.sortableList) this.sortableList.forceUpdateGrid();\n  };\n\n  _openEditTagDialog = (tagEditedObject: ?gdObject) => {\n    this.setState({\n      tagEditedObject,\n    });\n  };\n\n  _changeObjectTags = (object: gdObject, tags: Tags) => {\n    object.setTags(getStringFromTags(tags));\n\n    // Force update the list as it's possible that user removed a tag\n    // from an object, that should then not be shown anymore in the list.\n    this.forceUpdateList();\n  };\n\n  _selectObject = (objectWithContext: ?ObjectWithContext) => {\n    this.props.onObjectSelected(\n      objectWithContext ? objectWithContext.object.getName() : ''\n    );\n  };\n\n  _getObjectThumbnail = (objectWithContext: ObjectWithContext) =>\n    this.props.getThumbnail(this.props.project, objectWithContext.object);\n\n  _renderObjectMenuTemplate = (\n    objectWithContext: ObjectWithContext,\n    index: number\n  ) => {\n    const { object } = objectWithContext;\n    return [\n      {\n        label: 'Edit object',\n        click: () => this.props.onEditObject(object),\n      },\n      {\n        label: 'Edit object variables',\n        click: () => this._editVariables(object),\n      },\n      { type: 'separator' },\n      {\n        label: 'Tags',\n        submenu: buildTagsMenuTemplate({\n          noTagLabel: 'No tags',\n          getAllTags: this.props.getAllObjectTags,\n          selectedTags: getTagsFromString(object.getTags()),\n          onChange: objectTags => {\n            this._changeObjectTags(object, objectTags);\n          },\n          editTagsLabel: 'Add/edit tags...',\n          onEditTags: () => this._openEditTagDialog(object),\n        }),\n      },\n      {\n        label: 'Rename',\n        click: () => this._editName(objectWithContext),\n      },\n      {\n        label: 'Set as a global object',\n        click: () => this._setAsGlobalObject(objectWithContext),\n      },\n      {\n        label: 'Delete',\n        click: () => this._deleteObject(objectWithContext),\n      },\n      { type: 'separator' },\n      {\n        label: 'Add a new object...',\n        click: () => this.onAddNewObject(),\n      },\n      { type: 'separator' },\n      {\n        label: 'Copy',\n        click: () => this._copyObject(objectWithContext),\n      },\n      {\n        label: 'Cut',\n        click: () => this._cutObject(objectWithContext),\n      },\n      {\n        label: getPasteLabel(objectWithContext.global),\n        enabled: Clipboard.has(CLIPBOARD_KIND),\n        click: () => this._paste(objectWithContext),\n      },\n      {\n        label: 'Duplicate',\n        click: () => this._duplicateObject(objectWithContext),\n      },\n    ];\n  };\n\n  render() {\n    const { project, objectsContainer, selectedObjectTags } = this.props;\n    const { searchText, tagEditedObject } = this.state;\n\n    const lists = enumerateObjects(project, objectsContainer);\n    this._displayedObjectWithContextsList = filterObjectsList(\n      lists.allObjectsList,\n      {\n        searchText,\n        selectedTags: selectedObjectTags,\n      }\n    );\n    const selectedObjects = this._displayedObjectWithContextsList.filter(\n      objectWithContext =>\n        this.props.selectedObjectNames.indexOf(\n          objectWithContext.object.getName()\n        ) !== -1\n    );\n    const renamedObjectWithContext = this._displayedObjectWithContextsList.find(\n      isSameObjectWithContext(this.state.renamedObjectWithContext)\n    );\n\n    // Force List component to be mounted again if project or objectsContainer\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const listKey = project.ptr + ';' + objectsContainer.ptr;\n\n    return (\n      <Background maxWidth>\n        <TagChips\n          tags={this.props.selectedObjectTags}\n          onChange={this.props.onChangeSelectedObjectTags}\n        />\n        <div style={styles.listContainer}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <SortableVirtualizedItemList\n                key={listKey}\n                ref={sortableList => (this.sortableList = sortableList)}\n                fullList={this._displayedObjectWithContextsList}\n                width={width}\n                height={height}\n                getItemName={getObjectWithContextName}\n                getItemThumbnail={this._getObjectThumbnail}\n                isItemBold={isObjectWithContextGlobal}\n                onEditItem={objectWithContext =>\n                  this.props.onEditObject(objectWithContext.object)\n                }\n                onAddNewItem={this.onAddNewObject}\n                addNewItemLabel={<Trans>Add a new object</Trans>}\n                selectedItems={selectedObjects}\n                onItemSelected={this._selectObject}\n                renamedItem={renamedObjectWithContext}\n                onRename={this._rename}\n                buildMenuTemplate={this._renderObjectMenuTemplate}\n                onMoveSelectionToItem={this._moveSelectionTo}\n                canMoveSelectionToItem={this._canMoveSelectionTo}\n                reactDndType={objectWithContextReactDndType}\n              />\n            )}\n          </AutoSizer>\n        </div>\n        <SearchBar\n          value={searchText}\n          onRequestSearch={() => {}}\n          onChange={text =>\n            this.setState({\n              searchText: text,\n            })\n          }\n        />\n        {this.state.newObjectDialogOpen && (\n          <NewObjectDialog\n            open={this.state.newObjectDialogOpen}\n            onClose={() =>\n              this.setState({\n                newObjectDialogOpen: false,\n              })\n            }\n            onChoose={this.addObject}\n            project={project}\n          />\n        )}\n        {this.state.variablesEditedObject && (\n          <VariablesEditorDialog\n            open\n            variablesContainer={\n              this.state.variablesEditedObject &&\n              this.state.variablesEditedObject.getVariables()\n            }\n            onCancel={() => this._editVariables(null)}\n            onApply={() => this._editVariables(null)}\n            title={<Trans>Object Variables</Trans>}\n            emptyExplanationMessage={\n              <Trans>\n                When you add variables to an object, any instance of the object\n                put on the scene or created during the game will have these\n                variables attached to it.\n              </Trans>\n            }\n            emptyExplanationSecondMessage={\n              <Trans>\n                For example, you can have a variable called Life representing\n                the health of the object.\n              </Trans>\n            }\n          />\n        )}\n        {tagEditedObject && (\n          <EditTagsDialog\n            tagsString={tagEditedObject.getTags()}\n            onEdit={tags => {\n              this._changeObjectTags(tagEditedObject, tags);\n              this._openEditTagDialog(null);\n            }}\n            onCancel={() => this._openEditTagDialog(null)}\n          />\n        )}\n      </Background>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport {\n  type Release,\n  findRelease,\n} from '../../Utils/GDevelopServices/Release';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport PlaceholderLoader from '../../UI/PlaceholderLoader';\nimport { MarkdownText } from '../../UI/MarkdownText';\nimport { Column, Line } from '../../UI/Grid';\nimport Window from '../../Utils/Window';\nimport { hasBreakingChange } from '../../Utils/GDevelopServices/Release';\nimport AlertMessage from '../../UI/AlertMessage';\nimport FlatButton from '../../UI/FlatButton';\nimport RaisedButton from '../../UI/RaisedButton';\n\ntype Props = {|\n  releases: ?Array<Release>,\n  error: ?Error,\n  currentReleaseName: string,\n|};\n\n/**\n * Display information about latest releases.\n */\nconst ChangelogRenderer = ({ releases, error, currentReleaseName }: Props) => {\n  const openReleaseNote = () =>\n    Window.openExternalURL('https://github.com/4ian/GDevelop/releases');\n\n  if (error) {\n    return (\n      <Column>\n        <Line>\n          <AlertMessage kind=\"warning\">\n            <Trans>\n              Please double check online the changes to make sure that you are\n              aware of anything new in this version that would require you to\n              adapt your project.\n            </Trans>\n          </AlertMessage>\n        </Line>\n        <Line>\n          <EmptyMessage>\n            <Trans>\n              Unable to load the information about the latest GDevelop releases.\n              Verify your internet connection or retry later.\n            </Trans>\n          </EmptyMessage>\n        </Line>\n        <Line justifyContent=\"center\">\n          <RaisedButton\n            label={<Trans>See the releases notes online</Trans>}\n            onClick={openReleaseNote}\n          />\n        </Line>\n      </Column>\n    );\n  }\n\n  if (!releases) {\n    return <PlaceholderLoader />;\n  }\n\n  const currentRelease = findRelease(releases, currentReleaseName);\n  const currentVersionHasBreakingChange =\n    !!currentRelease && hasBreakingChange(currentRelease);\n\n  return (\n    <Column>\n      {currentVersionHasBreakingChange && (\n        <AlertMessage kind=\"warning\">\n          This version of GDevelop has a breaking change. Please make sure to\n          read the changes below to understand if any change or adaptation must\n          be made to your project.\n        </AlertMessage>\n      )}\n      {releases.map(release =>\n        release.name ? (\n          <MarkdownText\n            key={release.name}\n            source={\n              '# Version ' +\n              release.name +\n              '\\n---\\n' +\n              (release.description ||\n                'Changes and new features description will be available soon.')\n            }\n            isStandaloneText\n          />\n        ) : null\n      )}\n      <Line justifyContent=\"center\">\n        <FlatButton\n          label={<Trans>See all the releases notes</Trans>}\n          onClick={openReleaseNote}\n        />\n      </Line>\n    </Column>\n  );\n};\n\nexport default ChangelogRenderer;\n","// @flow\nimport axios from 'axios';\nimport { GDevelopReleaseApi } from './ApiConfigs';\n\nexport type Release = {\n  name: ?string,\n  publishedAt: ?string,\n  description: ?string,\n};\n\nexport const getReleases = (): Promise<Array<Release>> => {\n  return axios\n    .get(`${GDevelopReleaseApi.baseUrl}/release`, {\n      params: {\n        last: 4,\n      },\n    })\n    .then(response => response.data);\n};\n\nexport const hasBreakingChange = (release: Release): boolean => {\n  return (\n    (release.description || '').toLowerCase().indexOf('breaking change') !== -1\n  );\n};\n\nexport const findRelease = (\n  releases: Array<Release>,\n  name: string\n): ?Release => {\n  return releases.find(release => release.name === name);\n};\n","// @flow\nimport * as React from 'react';\nimport {\n  getReleases,\n  type Release,\n} from '../../Utils/GDevelopServices/Release';\nimport ChangelogRenderer from './ChangelogRenderer';\nimport { getIDEVersion } from '../../Version';\n\ntype State = {|\n  releases: ?Array<Release>,\n  error: ?Error,\n|};\n\ntype Props = {|\n  onUpdated?: () => void,\n|};\n\n/**\n * Load information about latest releases and display them.\n */\nexport default class Changelog extends React.Component<Props, State> {\n  state = {\n    releases: null,\n    error: null,\n  };\n\n  _onUpdated = () => {\n    if (this.props.onUpdated) this.props.onUpdated();\n  };\n\n  componentDidMount() {\n    getReleases()\n      .then(releases =>\n        this.setState(\n          {\n            releases,\n            error: null,\n          },\n          this._onUpdated\n        )\n      )\n      .catch((error: ?Error) =>\n        this.setState(\n          {\n            error,\n          },\n          this._onUpdated\n        )\n      );\n  }\n\n  render() {\n    const { releases, error } = this.state;\n    return (\n      <ChangelogRenderer\n        releases={releases}\n        error={error}\n        currentReleaseName={getIDEVersion()}\n      />\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Column, Line } from '../UI/Grid';\nimport { List, ListItem } from '../UI/List';\nimport Text from '../UI/Text';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport ExamplesSearchbar from './ExamplesSearchbar';\nimport ExamplesInformation from './ExamplesInformation';\nimport Window from '../Utils/Window';\nimport { fuzzyOrEmptyFilter } from '../Utils/FuzzyOrEmptyFilter';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\n\ntype ExtensionUsage = Array<{\n  fullName: string,\n  name: string,\n}>;\n\ntype ExampleInformation = {|\n  description: string,\n  usedExtensions: ExtensionUsage,\n|};\n\ntype SearchEnhancedExampleInformation = {|\n  ...ExampleInformation,\n  searchableDescription: string,\n|};\n\ntype Props = {|\n  exampleNames: ?Array<string>,\n  onCreateFromExample: string => void,\n|};\n\ntype State = {|\n  searchText: string,\n  chosenExtensionName: string,\n|};\n\nconst searchableExamplesInformation: {\n  [string]: SearchEnhancedExampleInformation,\n} = {};\nObject.keys(ExamplesInformation).forEach(exampleName => {\n  const exampleInformation = ExamplesInformation[exampleName];\n  searchableExamplesInformation[exampleName] = {\n    ...exampleInformation,\n    searchableDescription: exampleInformation.description\n      .replace(/ /g, '')\n      .toLowerCase(),\n  };\n});\n\nconst formatExampleName = (name: string) => {\n  if (!name.length) return '';\n\n  return name[0].toUpperCase() + name.substr(1).replace(/-/g, ' ');\n};\n\nconst getExampleInformation = (\n  name: string\n): SearchEnhancedExampleInformation => {\n  return (\n    searchableExamplesInformation[name] || {\n      description: '',\n      searchableDescription: '',\n      usedExtensions: [],\n    }\n  );\n};\n\nconst isUsingExtension = (\n  extensionUsage: ?ExtensionUsage,\n  extensionName: string\n) => {\n  return (\n    !extensionName ||\n    (extensionUsage &&\n      !!extensionUsage.find(usage => usage.name === extensionName))\n  );\n};\n\nexport default class LocalExamples extends React.Component<Props, State> {\n  state = {\n    searchText: '',\n    chosenExtensionName: '',\n  };\n\n  changeSearchText = (searchText: string) => {\n    this.setState({\n      searchText,\n      chosenExtensionName: '',\n    });\n  };\n\n  chooseExtensionName = (chosenExtensionName: string) => {\n    this.setState({\n      searchText: '',\n      chosenExtensionName,\n    });\n  };\n\n  _submitExample() {\n    const body = `Hi!\n\n  I'd like to submit a new example to be added to GDevelop.\n  Here is the link to download it: **INSERT the link to your game here, or add it as an attachment**.\n\n  I confirm that any assets can be used freely by anybody, including for commercial usage.\n  `;\n    Window.openExternalURL(\n      `https://github.com/4ian/GDevelop/issues/new?body=${encodeURIComponent(\n        body\n      )}&title=New%20example`\n    );\n  }\n\n  render() {\n    const { searchText, chosenExtensionName } = this.state;\n    const lowercaseSearchText = searchText.toLowerCase();\n\n    return (\n      <Column noMargin>\n        <Line noMargin>\n          <ExamplesSearchbar\n            value={searchText}\n            onChange={this.changeSearchText}\n            chosenExtensionName={chosenExtensionName}\n            onExtensionNameChosen={this.chooseExtensionName}\n          />\n        </Line>\n        <Line noMargin>\n          <Column expand noMargin>\n            <List>\n              {this.props.exampleNames &&\n                this.props.exampleNames.map(exampleName => {\n                  const exampleFullName = formatExampleName(exampleName);\n                  const exampleInformation = getExampleInformation(exampleName);\n                  if (\n                    (searchText &&\n                      (!fuzzyOrEmptyFilter(searchText, exampleFullName) &&\n                        exampleInformation.searchableDescription.indexOf(\n                          lowercaseSearchText\n                        ) === -1)) ||\n                    !isUsingExtension(\n                      exampleInformation.usedExtensions,\n                      chosenExtensionName\n                    )\n                  ) {\n                    return null;\n                  }\n\n                  return (\n                    <ListItem\n                      key={exampleName}\n                      primaryText={exampleFullName}\n                      secondaryText={exampleInformation.description}\n                      secondaryTextLines={2}\n                      onClick={() =>\n                        this.props.onCreateFromExample(exampleName)\n                      }\n                    />\n                  );\n                })}\n              {!this.props.exampleNames && <PlaceholderLoader />}\n            </List>\n            {!!electron && (\n              <Column expand>\n                <Text>\n                  <Trans>Want to contribute to the examples?</Trans>\n                </Text>\n                <Line alignItems=\"center\" justifyContent=\"center\">\n                  <RaisedButton\n                    label={<Trans>Submit your example</Trans>}\n                    onClick={this._submitExample}\n                  />\n                </Line>\n              </Column>\n            )}\n          </Column>\n        </Line>\n      </Column>\n    );\n  }\n}\n","// @flow\nconst fuzzyFilter = (searchText: string, key: string) => {\n  const compareString = key.toLowerCase();\n  searchText = searchText.toLowerCase();\n\n  let searchTextIndex = 0;\n  for (let index = 0; index < key.length; index++) {\n    if (compareString[index] === searchText[searchTextIndex]) {\n      searchTextIndex += 1;\n    }\n  }\n\n  return searchTextIndex === searchText.length;\n};\n\n/**\n * A fuzzy filter that still return true if the key is empty.\n */\nexport const fuzzyOrEmptyFilter = (searchText: string, key: string) => {\n  return !key || fuzzyFilter(searchText, key);\n};\n","// @flow\nimport { type Theme } from '../DefaultTheme';\nimport { createMuiTheme, darken, lighten } from '@material-ui/core/styles';\nimport './Mosaic.css';\nimport './EventsSheet.css';\nimport 'react-virtualized/styles.css'; // Styles for react-virtualized Table\nimport './Table.css';\nimport './Markdown.css';\n\nconst almostWhite = '#EEE';\nconst lightWhite = '#DDD';\nconst notSoWhite = '#CCC';\nconst gdevelopDarkBlue = '#3c4698';\nconst blue = '#2c6bf5';\n\n// Use the fonts provided by the operating system(s) as possible.\n// If you update this font list, be sure to do it in all the other places using fonts in the codebase.\nconst fontFamily =\n  \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, 'Helvetica Neue', Helvetica, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'\";\n\nconst systemSelectionColor = '#4c92ff'; //OS X selection\n\n/**\n * The background color of the main window\n */\nconst backgroundColor = '#252525';\n\n/**\n * The background color of the \"papers\", \"dialogs\", etc...\n */\nconst canvasColor = '#303030';\n\n// GDevelop specific variables:\nconst gdevelopTheme = {\n  palette: {\n    canvasColor,\n  },\n  message: {\n    warning: '#ffa500',\n    error: '#f00',\n  },\n  toolbar: {\n    backgroundColor: backgroundColor,\n    separatorColor: '#303030',\n  },\n  closableTabs: {\n    fontFamily,\n    backgroundColor: backgroundColor,\n    textColor: '#878787',\n    selectedBackgroundColor: gdevelopDarkBlue,\n    selectedTextColor: almostWhite,\n    width: 200,\n    height: 32,\n    closeButtonWidth: 24,\n  },\n  imageThumbnail: {\n    selectedBorderColor: systemSelectionColor,\n  },\n  list: {\n    itemsBackgroundColor: '#494949',\n  },\n  listItem: {\n    groupBackgroundColor: backgroundColor,\n    groupTextColor: '#AAA',\n    deprecatedGroupTextColor: '#888',\n    separatorColor: '#303030',\n    selectedBackgroundColor: systemSelectionColor,\n    selectedTextColor: almostWhite,\n    errorTextColor: '#ff2e16',\n    warningTextColor: '#ffb032',\n    selectedErrorBackgroundColor: '#ff2e16',\n    selectedWarningBackgroundColor: '#ffb032',\n  },\n  emptyMessage: {\n    shadowColor: '#000',\n  },\n  logo: {\n    src: 'res/GD-logo.png',\n  },\n  mosaicRootClassName: 'mosaic-gd-dark-theme', // See Mosaic.css\n  eventsSheetRootClassName: 'gd-events-sheet-dark-theme', // See EventsSheet.css\n  tableRootClassName: 'gd-table-dark-theme', // See Table.css\n  markdownRootClassName: 'gd-markdown-dark-theme', // See Markdown.css\n  gdevelopIconsCSSFilter: '',\n};\n\n// Theme for Material-UI components\nconst muiTheme = createMuiTheme({\n  typography: {\n    fontFamily,\n  },\n  palette: {\n    type: 'dark',\n    common: { black: 'rgba(110, 42, 42, 1)', white: '#fff' },\n    background: {\n      paper: canvasColor,\n      default: backgroundColor,\n    },\n    primary: {\n      light: lighten(blue, 0.05),\n      main: blue,\n      dark: darken(blue, 0.05),\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: lighten(almostWhite, 0.05),\n      main: almostWhite,\n      dark: darken(almostWhite, 0.05),\n      contrastText: '#000',\n    },\n    text: {\n      primary: lightWhite,\n      secondary: notSoWhite,\n      disabled: '#888888',\n      hint: notSoWhite,\n    },\n  },\n  overrides: {\n    MuiTypography: {\n      h6: {\n        // Make h6, used in Drawer title bars, use the same weight as tabs and mosaic windows\n        fontWeight: 400,\n      },\n    },\n    MuiInput: {\n      underline: {\n        '&:before': {\n          borderBottom: `1px solid #444444`,\n        },\n      },\n    },\n    MuiAppBar: {\n      colorPrimary: {\n        backgroundColor: gdevelopDarkBlue,\n      },\n    },\n    // Use a more visible color scheme for tabs:\n    MuiTabs: {\n      root: {\n        backgroundColor: gdevelopDarkBlue,\n      },\n    },\n    MuiTab: {\n      textColorPrimary: {\n        color: '#fff !important',\n      },\n    },\n    // Remove the web-ish \"pointer\" (hand) cursor from buttons\n    MuiButtonBase: {\n      root: {\n        cursor: 'default',\n      },\n    },\n    // Use non rounded buttons\n    MuiButton: {\n      root: {\n        borderRadius: 0,\n        fontWeight: 400, // Lower a bit the weight of buttons\n      },\n    },\n  },\n});\n\nconst theme: Theme = {\n  gdevelopTheme,\n  muiTheme,\n};\n\nexport default theme;\n","// @flow\nimport DarkTheme from './DarkTheme';\nimport DefaultTheme from './DefaultTheme';\nimport { type Theme } from './DefaultTheme';\n\n// To add a new theme:\n// * copy the folder of an existing one (DarkTheme for example),\n// * import it at the top of the file\n// * add it below:\nexport const themes = {\n  'GDevelop default': DefaultTheme,\n  Dark: DarkTheme,\n};\n\nexport const getTheme = (themeName: string): Theme =>\n  themes[themeName] || themes['GDevelop default'];\n\nexport type GDevelopTheme = $PropertyType<Theme, 'gdevelopTheme'>;\n","import { Trans } from '@lingui/macro';\nimport React, { PureComponent } from 'react';\nimport { Column, Line } from '../UI/Grid';\nimport { sendTutorialOpened } from '../Utils/Analytics/EventSender';\nimport Window from '../Utils/Window';\nimport { getHelpLink } from '../Utils/HelpLink';\nimport { List, ListItem } from '../UI/List';\nimport Text from '../UI/Text';\nimport Subheader from '../UI/Subheader';\n\nexport default class Tutorials extends PureComponent {\n  render() {\n    return (\n      <Column noMargin>\n        <Line>\n          <Column>\n            <Text>\n              <Trans>\n                Tutorials are available on GDevelop wiki. Choose a tutorial to\n                read:\n              </Trans>\n            </Text>\n          </Column>\n        </Line>\n        <Line>\n          <Column expand noMargin>\n            <List>\n              <ListItem\n                primaryText={<Trans>Geometry Monster Tutorial</Trans>}\n                secondaryText={\n                  <Trans>\n                    Make a hyper-casual mobile game where the player must grab\n                    shapes and avoid bombs.\n                  </Trans>\n                }\n                onClick={() => {\n                  sendTutorialOpened('Geometry Monster');\n                  Window.openExternalURL(\n                    getHelpLink('/tutorials/geometry-monster')\n                  );\n                }}\n              />\n              <ListItem\n                primaryText={<Trans>Platformer Tutorial</Trans>}\n                secondaryText={\n                  <Trans>Make a platform game from scratch.</Trans>\n                }\n                onClick={() => {\n                  sendTutorialOpened('Platformer');\n                  Window.openExternalURL(\n                    getHelpLink('/tutorials/platform-game/start')\n                  );\n                }}\n              />\n              <ListItem\n                primaryText={<Trans>Tank Shooter Tutorial</Trans>}\n                secondaryText={\n                  <Trans>Make a simple tank shooter game from scratch.</Trans>\n                }\n                onClick={() => {\n                  sendTutorialOpened('Tank Shooter');\n                  Window.openExternalURL(\n                    getHelpLink('/tutorials/tank-shooter')\n                  );\n                }}\n              />\n              <Subheader>\n                <Trans>Community Tutorials</Trans>\n              </Subheader>\n              <ListItem\n                primaryText={<Trans>Endless Runner Tutorial</Trans>}\n                secondaryText={\n                  <Trans>\n                    Make a simple game where the player must jump on platforms\n                    for as long as possible.\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendTutorialOpened('Endless Runner');\n                  Window.openExternalURL(\n                    getHelpLink('/tutorials/endless-runner')\n                  );\n                }}\n              />\n              <ListItem\n                primaryText={<Trans>Endless Car Game Tutorial</Trans>}\n                secondaryText={\n                  <Trans>\n                    Create a simple game where you must dodge the cars on the\n                    road.\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendTutorialOpened('Endless Car Game');\n                  Window.openExternalURL(getHelpLink('/tutorials/roadrider'));\n                }}\n              />\n              <ListItem\n                primaryText={<Trans>Breakout Tutorial</Trans>}\n                secondaryText={\n                  <Trans>\n                    Create a simple breakout game where you must destroy all the\n                    bricks on the screen.\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendTutorialOpened('Breakout');\n                  Window.openExternalURL(getHelpLink('/tutorials/breakout'));\n                }}\n              />\n            </List>\n          </Column>\n        </Line>\n      </Column>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../UI/Dialog';\nimport FlatButton from '../UI/FlatButton';\nimport { Tabs, Tab } from '../UI/Tabs';\nimport Tutorials from './Tutorials';\nimport { Column } from '../UI/Grid';\nimport { type StorageProvider, type FileMetadata } from '../ProjectsStorage';\n\ntype State = {|\n  currentTab: 'starters' | 'examples' | 'tutorials',\n|};\n\nexport type CreateProjectDialogWithComponentsProps = {|\n  open: boolean,\n  onClose: () => void,\n  onOpen: (\n    storageProvider: StorageProvider,\n    fileMetadata: FileMetadata\n  ) => void,\n  onCreate: (\n    gdProject,\n    storageProvider: ?StorageProvider,\n    fileMetadata: ?FileMetadata\n  ) => void,\n|};\n\ntype Props = {|\n  ...CreateProjectDialogWithComponentsProps,\n  startersComponent: any,\n  examplesComponent: any,\n|};\n\nexport default class CreateProjectDialog extends React.Component<Props, State> {\n  state = {\n    currentTab: 'starters',\n  };\n\n  _onChangeTab = (newTab: 'starters' | 'examples' | 'tutorials') => {\n    this.setState({\n      currentTab: newTab,\n    });\n  };\n\n  _showExamples = () => this._onChangeTab('examples');\n\n  _onExamplesLoaded = () => {\n    // Force an update to ensure dialog is properly positioned.\n    this.forceUpdate();\n  };\n\n  render() {\n    const { open, onClose, onOpen, onCreate } = this.props;\n    if (!open) return null;\n\n    const ExamplesComponent = this.props.examplesComponent;\n    const StartersComponent = this.props.startersComponent;\n\n    return (\n      <Dialog\n        title={<Trans>Create a new game</Trans>}\n        actions={[\n          <FlatButton\n            key=\"close\"\n            label={<Trans>Close</Trans>}\n            primary={false}\n            onClick={onClose}\n          />,\n        ]}\n        onRequestClose={onClose}\n        open={open}\n        noMargin\n      >\n        <Column noMargin>\n          <Tabs value={this.state.currentTab} onChange={this._onChangeTab}>\n            <Tab label={<Trans>Starters</Trans>} value=\"starters\" />\n            <Tab label={<Trans>Examples</Trans>} value=\"examples\" />\n            <Tab label={<Trans>Tutorials</Trans>} value=\"tutorials\" />\n          </Tabs>\n          {this.state.currentTab === 'starters' && (\n            <StartersComponent\n              onOpen={onOpen}\n              onCreate={onCreate}\n              onShowExamples={this._showExamples}\n            />\n          )}\n          {this.state.currentTab === 'examples' && (\n            <ExamplesComponent\n              onOpen={onOpen}\n              onCreate={onCreate}\n              onExamplesLoaded={this._onExamplesLoaded}\n            />\n          )}\n          {this.state.currentTab === 'tutorials' && <Tutorials />}\n        </Column>\n      </Dialog>\n    );\n  }\n}\n","import React from 'react';\nimport { ListItem } from '../UI/List';\nimport TextField, {\n  noMarginTextFieldInListItemTopOffset,\n} from '../UI/TextField';\nimport ThemeConsumer from '../UI/Theme/ThemeConsumer';\n\ntype Props = {|\n  group: gdObjectGroup,\n  style: Object,\n  onEdit: ?(gdObjectGroup) => void,\n  onEditName: () => void,\n  onDelete: () => void,\n  onRename: string => void,\n  editingName: boolean,\n  isGlobalGroup: boolean,\n  canSetAsGlobalGroup?: boolean,\n|};\n\nconst styles = {\n  groupName: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n  },\n  textField: {\n    top: noMarginTextFieldInListItemTopOffset,\n  },\n};\n\nexport default class GroupRow extends React.Component<Props, {||}> {\n  componentDidUpdate(prevProps) {\n    if (!prevProps.editingName && this.props.editingName) {\n      setTimeout(() => {\n        if (this.textField) this.textField.focus();\n      }, 100);\n    }\n  }\n\n  render() {\n    const { group, style, isGlobalGroup } = this.props;\n\n    const groupName = group.getName();\n    const label = this.props.editingName ? (\n      <TextField\n        id=\"rename-object-field\"\n        margin=\"none\"\n        ref={textField => (this.textField = textField)}\n        defaultValue={groupName}\n        onBlur={e => this.props.onRename(e.target.value)}\n        onKeyPress={event => {\n          if (event.charCode === 13) {\n            // enter key pressed\n            this.textField.blur();\n          }\n        }}\n        fullWidth\n        style={styles.textField}\n      />\n    ) : (\n      <div\n        style={{\n          ...styles.groupName,\n          fontStyle: isGlobalGroup ? 'italic' : undefined,\n          fontWeight: isGlobalGroup ? 'bold' : 'normal',\n        }}\n      >\n        {groupName}\n      </div>\n    );\n\n    return (\n      <ThemeConsumer>\n        {muiTheme => (\n          <ListItem\n            style={{\n              borderBottom: `1px solid ${muiTheme.listItem.separatorColor}`,\n              ...style,\n            }}\n            primaryText={label}\n            displayMenuButton\n            buildMenuTemplate={() => [\n              {\n                label: 'Edit group',\n                click: () => this.props.onEdit(group),\n              },\n              {\n                label: 'Set as Global group',\n                enabled: !this.props.isGlobalGroup,\n                click: () => this.props.onSetAsGlobalGroup(),\n                visible: this.props.canSetAsGlobalGroup !== false,\n              },\n              {\n                label: 'Rename',\n                enabled: !!this.props.onEdit,\n                click: () => this.props.onEditName(),\n              },\n              {\n                label: 'Delete',\n                enabled: !!this.props.onEdit,\n                click: () => this.props.onDelete(),\n              },\n            ]}\n            onClick={() => {\n              // It's essential to discard clicks when editing the name,\n              // to avoid weird opening of an editor when clicking on the\n              // text field.\n              if (!this.props.editingName) this.props.onEdit(group);\n            }}\n          />\n        )}\n      </ThemeConsumer>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport { AutoSizer, List } from 'react-virtualized';\nimport Background from '../UI/Background';\nimport SearchBar from '../UI/SearchBar';\nimport GroupRow from './GroupRow';\nimport newNameGenerator from '../Utils/NewNameGenerator';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport { AddListItem } from '../UI/ListCommonItem';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport {\n  filterGroupsList,\n  enumerateGroups,\n} from '../ObjectsList/EnumerateObjects';\nimport {\n  type GroupWithContextList,\n  type GroupWithContext,\n} from '../ObjectsList/EnumerateObjects';\nimport { listItemWithoutIconHeight } from '../UI/List';\n\n// TODO: This component should be updated to be implemented using SortableVirtualizedItemList,\n// so that drag'n'drop is identical to other lists (and to benefit from better typing + future improvements\n// in SortableVirtualizedItemList).\n\nconst styles = {\n  listContainer: {\n    flex: 1,\n  },\n};\n\nconst SortableGroupRow = SortableElement(props => {\n  const { style, ...otherProps } = props;\n  return (\n    <div style={style}>\n      <GroupRow {...otherProps} />\n    </div>\n  );\n});\n\nconst SortableAddGroupRow = SortableElement(props => {\n  const { style, ...otherProps } = props;\n  return (\n    <div style={style}>\n      <AddListItem {...otherProps} />\n    </div>\n  );\n});\n\nclass GroupsList extends Component<*, *> {\n  list: ?List;\n\n  forceUpdateGrid() {\n    if (this.list) this.list.forceUpdateGrid();\n  }\n\n  render() {\n    const { height, width, fullList } = this.props;\n\n    return (\n      <List\n        ref={list => (this.list = list)}\n        height={height}\n        rowCount={fullList.length}\n        rowHeight={listItemWithoutIconHeight}\n        rowRenderer={({ index, key, style }) => {\n          const groupWithContext = fullList[index];\n          if (groupWithContext.key === 'add-groups-row') {\n            return (\n              <SortableAddGroupRow\n                index={fullList.length}\n                key={key}\n                style={style}\n                disabled\n                onClick={this.props.onAddGroup}\n                primaryText={<Trans>Click to add a group</Trans>}\n              />\n            );\n          }\n\n          const nameBeingEdited =\n            this.props.renamedGroupWithScope &&\n            this.props.renamedGroupWithScope.group === groupWithContext.group &&\n            this.props.renamedGroupWithScope.global === groupWithContext.global;\n\n          return (\n            <SortableGroupRow\n              index={index}\n              key={groupWithContext.group.ptr}\n              group={groupWithContext.group}\n              style={style}\n              onEdit={\n                this.props.onEditGroup\n                  ? () => this.props.onEditGroup(groupWithContext.group)\n                  : undefined\n              }\n              onEditName={() => this.props.onEditName(groupWithContext)}\n              onDelete={() => this.props.onDelete(groupWithContext)}\n              onRename={newName =>\n                this.props.onRename(groupWithContext, newName)\n              }\n              editingName={nameBeingEdited}\n              isGlobalGroup={groupWithContext.global}\n              canSetAsGlobalGroup={this.props.canSetAsGlobalGroup}\n              onSetAsGlobalGroup={\n                groupWithContext.global\n                  ? undefined\n                  : () => this.props.onSetAsGlobalGroup(groupWithContext)\n              }\n            />\n          );\n        }}\n        width={width}\n      />\n    );\n  }\n}\n\nconst SortableGroupsList = SortableContainer(GroupsList, { withRef: true });\n\ntype State = {|\n  renamedGroupWithScope: ?GroupWithContext,\n  searchText: string,\n|};\n\ntype Props = {|\n  globalObjectGroups: gdObjectGroupsContainer,\n  objectGroups: gdObjectGroupsContainer,\n  onDeleteGroup: (groupWithContext: GroupWithContext, cb: Function) => void,\n  onEditGroup: gdObjectGroup => void,\n  canRenameGroup: (newName: string) => boolean,\n  onRenameGroup: (\n    groupWithContext: GroupWithContext,\n    newName: string,\n    cb: Function\n  ) => void,\n  onGroupAdded?: () => void,\n  onGroupRemoved?: () => void,\n  onGroupRenamed?: () => void,\n  canSetAsGlobalGroup?: boolean,\n|};\n\nexport default class GroupsListContainer extends React.Component<Props, State> {\n  static defaultProps = {\n    onDeleteGroup: (groupWithContext: GroupWithContext, cb: Function) =>\n      cb(true),\n    onRenameGroup: (\n      groupWithContext: GroupWithContext,\n      newName: string,\n      cb: Function\n    ) => cb(true),\n  };\n\n  sortableList: any;\n  objectGroupsList: GroupWithContextList = [];\n  globalObjectGroupsList: GroupWithContextList = [];\n  state: State = {\n    renamedGroupWithScope: null,\n    searchText: '',\n  };\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    // The component is costly to render, so avoid any re-rendering as much\n    // as possible.\n    // We make the assumption that no changes to groups list is made outside\n    // from the component.\n    // If a change is made, the component won't notice it: you have to manually\n    // call forceUpdate.\n\n    if (\n      this.state.renamedGroupWithScope !== nextState.renamedGroupWithScope ||\n      this.state.searchText !== nextState.searchText\n    )\n      return true;\n\n    if (\n      this.props.globalObjectGroups !== nextProps.globalObjectGroups ||\n      this.props.objectGroups !== nextProps.objectGroups\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  addGroup = () => {\n    const { globalObjectGroups, objectGroups } = this.props;\n\n    const name = newNameGenerator(\n      'Group',\n      name => objectGroups.has(name) || globalObjectGroups.has(name)\n    );\n\n    objectGroups.insertNew(name, objectGroups.count());\n    this.forceUpdate();\n\n    if (this.props.onGroupAdded) {\n      this.props.onGroupAdded();\n    }\n  };\n\n  _onDelete = (groupWithContext: GroupWithContext) => {\n    const { group, global } = groupWithContext;\n    const { globalObjectGroups, objectGroups } = this.props;\n\n    //eslint-disable-next-line\n    const answer = confirm(\n      \"Are you sure you want to remove this group? This can't be undone.\"\n    );\n    if (!answer) return;\n\n    this.props.onDeleteGroup(groupWithContext, doRemove => {\n      if (!doRemove) return;\n\n      if (global) {\n        globalObjectGroups.remove(group.getName());\n      } else {\n        objectGroups.remove(group.getName());\n      }\n\n      this.forceUpdate();\n      if (this.props.onGroupRemoved) {\n        this.props.onGroupRemoved();\n      }\n    });\n  };\n\n  _onEditName = (groupWithContext: GroupWithContext) => {\n    this.setState(\n      {\n        renamedGroupWithScope: groupWithContext,\n      },\n      () => this.sortableList.getWrappedInstance().forceUpdateGrid()\n    );\n  };\n\n  _onRename = (groupWithContext: GroupWithContext, newName: string) => {\n    const { group } = groupWithContext;\n    const { globalObjectGroups, objectGroups } = this.props;\n\n    this.setState({\n      renamedGroupWithScope: null,\n    });\n\n    if (group.getName() === newName) return;\n\n    if (objectGroups.has(newName) || globalObjectGroups.has(newName)) {\n      showWarningBox('Another object with this name already exists');\n      return;\n    }\n\n    if (this.props.canRenameGroup(newName)) {\n      this.props.onRenameGroup(groupWithContext, newName, doRename => {\n        if (!doRename) return;\n\n        group.setName(newName);\n\n        this.forceUpdate();\n        if (this.props.onGroupRenamed) {\n          this.props.onGroupRenamed();\n        }\n      });\n    }\n  };\n\n  _onMove = (oldIndex: number, newIndex: number) => {\n    const { globalObjectGroups, objectGroups } = this.props;\n\n    const isInGroupsList = oldIndex < this.objectGroupsList.length;\n    if (isInGroupsList) {\n      objectGroups.move(\n        oldIndex,\n        Math.min(newIndex, this.objectGroupsList.length - 1)\n      );\n    } else {\n      const globalObjectGroupsOldIndex =\n        oldIndex - this.objectGroupsList.length;\n      const globalObjectGroupsNewIndex =\n        newIndex - this.objectGroupsList.length;\n\n      globalObjectGroups.move(\n        globalObjectGroupsOldIndex,\n        Math.min(\n          globalObjectGroupsNewIndex,\n          this.globalObjectGroupsList.length - 1\n        )\n      );\n    }\n\n    this.forceUpdate();\n    this.sortableList.getWrappedInstance().forceUpdateGrid();\n  };\n\n  _setAsGlobalGroup = (groupWithContext: GroupWithContext) => {\n    const { group } = groupWithContext;\n    const { globalObjectGroups, objectGroups } = this.props;\n\n    const groupName = group.getName();\n\n    if (globalObjectGroups.has(groupName)) {\n      showWarningBox(\n        'A global object with this name already exists. Please change the object name before setting it as a global object'\n      );\n      return;\n    }\n\n    //eslint-disable-next-line\n    const answer = confirm(\n      \"This group will be loaded and available in all the scenes. This is only recommended for groups that you reuse a lot and can't be undone. Make this group global?\"\n    );\n    if (!answer) return;\n\n    globalObjectGroups.insert(group, globalObjectGroups.count());\n    objectGroups.remove(groupName);\n    this.forceUpdate();\n  };\n\n  render() {\n    const { globalObjectGroups, objectGroups } = this.props;\n    const { searchText } = this.state;\n\n    const objectGroupsList: GroupWithContextList = enumerateGroups(\n      objectGroups\n    ).map(group => ({ group, global: false }));\n    const globalObjectGroupsList: GroupWithContextList = enumerateGroups(\n      globalObjectGroups\n    ).map(group => ({ group, global: true }));\n    this.objectGroupsList = filterGroupsList(objectGroupsList, searchText);\n    this.globalObjectGroupsList = filterGroupsList(\n      globalObjectGroupsList,\n      searchText\n    );\n    const allGroupsList = filterGroupsList(\n      [...objectGroupsList, ...globalObjectGroupsList],\n      searchText\n    );\n    const fullList = allGroupsList.concat({\n      key: 'add-groups-row',\n      object: null,\n    });\n\n    // Force List component to be mounted again if globalObjectGroups or objectGroups\n    // has been changed. Avoid accessing to invalid objects that could\n    // crash the app.\n    const listKey = objectGroups.ptr + ';' + globalObjectGroups.ptr;\n\n    return (\n      <Background>\n        <div style={styles.listContainer}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <SortableGroupsList\n                key={listKey}\n                ref={sortableList => (this.sortableList = sortableList)}\n                fullList={fullList}\n                width={width}\n                height={height}\n                renamedGroupWithScope={this.state.renamedGroupWithScope}\n                onEditGroup={this.props.onEditGroup}\n                onAddGroup={this.addGroup}\n                onEditName={this._onEditName}\n                onDelete={this._onDelete}\n                onRename={this._onRename}\n                canSetAsGlobalGroup={this.props.canSetAsGlobalGroup}\n                onSetAsGlobalGroup={this._setAsGlobalGroup}\n                onSortEnd={({ oldIndex, newIndex }) =>\n                  this._onMove(oldIndex, newIndex)\n                }\n                helperClass=\"sortable-helper\"\n                distance={20}\n              />\n            )}\n          </AutoSizer>\n        </div>\n        <SearchBar\n          value={searchText}\n          onRequestSearch={() => {}}\n          onChange={text =>\n            this.setState({\n              searchText: text,\n            })\n          }\n        />\n      </Background>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport React, { PureComponent } from 'react';\nimport { Toolbar, ToolbarGroup } from '../UI/Toolbar';\nimport ToolbarIcon from '../UI/ToolbarIcon';\nimport ToolbarSeparator from '../UI/ToolbarSeparator';\nimport ElementWithMenu from '../UI/Menu/ElementWithMenu';\nimport Window from '../Utils/Window';\nimport { I18n } from '@lingui/react';\nimport { ResponsiveWindowMeasurer } from '../UI/Reponsive/ResponsiveWindowMeasurer';\n\ntype Props = {\n  showProjectIcons: boolean,\n  hasProject: boolean,\n  toggleProjectManager: () => void,\n  requestUpdate: ?() => void,\n  simulateUpdateDownloaded: ?() => void,\n  simulateUpdateAvailable: ?() => void,\n  exportProject: Function,\n};\n\ntype State = {\n  editorToolbar: any,\n};\n\nexport class MainFrameToolbar extends PureComponent<Props, State> {\n  state = {\n    editorToolbar: null,\n  };\n\n  isDev = Window.isDev();\n\n  setEditorToolbar(editorToolbar: any) {\n    this.setState({\n      editorToolbar,\n    });\n  }\n\n  render() {\n    return (\n      <ResponsiveWindowMeasurer>\n        {windowWidth => (\n          <I18n>\n            {({ i18n }) => (\n              <Toolbar>\n                <ToolbarGroup firstChild>\n                  {this.props.showProjectIcons && (\n                    <ToolbarIcon\n                      onClick={this.props.toggleProjectManager}\n                      src=\"res/ribbon_default/projectManager32.png\"\n                      disabled={!this.props.hasProject}\n                      tooltip={t`Project manager`}\n                    />\n                  )}\n                  {this.props.showProjectIcons && (\n                    <ToolbarIcon\n                      onClick={this.props.exportProject}\n                      src=\"res/ribbon_default/export32.png\"\n                      disabled={!this.props.hasProject}\n                      tooltip={t`Export the game (Web, Android, iOS...)`}\n                    />\n                  )}\n                  {this.isDev && (\n                    <ElementWithMenu\n                      element={\n                        <ToolbarIcon src=\"res/ribbon_default/bug32.png\" />\n                      }\n                      buildMenuTemplate={() => [\n                        {\n                          label: 'Request update from external editor',\n                          disabled: !this.props.requestUpdate,\n                          click: () =>\n                            this.props.requestUpdate &&\n                            this.props.requestUpdate(),\n                        },\n                        {\n                          label: 'Simulate update downloaded',\n                          disabled: !this.props.simulateUpdateDownloaded,\n                          click: () =>\n                            this.props.simulateUpdateDownloaded &&\n                            this.props.simulateUpdateDownloaded(),\n                        },\n                        {\n                          label: 'Simulate update available',\n                          disabled: !this.props.simulateUpdateAvailable,\n                          click: () =>\n                            this.props.simulateUpdateAvailable &&\n                            this.props.simulateUpdateAvailable(),\n                        },\n                      ]}\n                    />\n                  )}\n                  <ToolbarSeparator />\n                </ToolbarGroup>\n                {this.state.editorToolbar || <ToolbarGroup />}\n              </Toolbar>\n            )}\n          </I18n>\n        )}\n      </ResponsiveWindowMeasurer>\n    );\n  }\n}\n\nexport default MainFrameToolbar;\n","// @flow\nimport React, { Component } from 'react';\nimport ThemeConsumer from '../UI/Theme/ThemeConsumer';\nimport Window from '../Utils/Window';\nimport { type FileMetadata } from '../ProjectsStorage';\n\ntype Props = {|\n  fileMetadata: ?FileMetadata,\n|};\n\n/**\n * Update the title bar according to the project and the current theme.\n * Note that this is doing side-effects in the render which is normally not valid in React,\n * but we're actually calling imperative Electron apis or updating some meta tags/document\n * properties so this should be fine.\n */\nexport default class ProjectTitlebar extends Component<Props> {\n  render() {\n    const { fileMetadata } = this.props;\n    const titleElements = ['GDevelop 5'];\n    if (fileMetadata) titleElements.push(fileMetadata.fileIdentifier);\n\n    Window.setTitle(titleElements.join(' - '));\n    return (\n      <ThemeConsumer>\n        {muiTheme => {\n          Window.setTitleBarColor(muiTheme.toolbar.backgroundColor);\n          return null;\n        }}\n      </ThemeConsumer>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport SelectField from '../../UI/SelectField';\nimport FlatButton from '../../UI/FlatButton';\nimport SelectOption from '../../UI/SelectOption';\nimport Toggle from '../../UI/Toggle';\nimport Dialog from '../../UI/Dialog';\nimport { Column, Line } from '../../UI/Grid';\nimport { themes } from '../../UI/Theme';\nimport { getAllThemes } from '../../CodeEditor/Theme';\nimport Window from '../../Utils/Window';\nimport PreferencesContext, { allAlertMessages } from './PreferencesContext';\nimport Text from '../../UI/Text';\nimport { ResponsiveLineStackLayout } from '../../UI/Layout';\nimport { Tabs, Tab } from '../../UI/Tabs';\n\ntype Props = {|\n  onClose: Function,\n|};\n\nconst PreferencesDialog = ({ onClose }: Props) => {\n  const [currentTab, setCurrentTab] = React.useState('preferences');\n  const {\n    values,\n    setThemeName,\n    setCodeEditorThemeName,\n    setAutoDownloadUpdates,\n    showAlertMessage,\n    setAutoDisplayChangelog,\n    setEventsSheetShowObjectThumbnails,\n    setAutosaveOnPreview,\n    setUseNewInstructionEditorDialog,\n    setUseGDJSDevelopmentWatcher,\n    setEventsSheetUseAssignmentOperators,\n  } = React.useContext(PreferencesContext);\n\n  return (\n    <Dialog\n      actions={[\n        <FlatButton\n          key=\"close\"\n          label={<Trans>Close</Trans>}\n          primary={false}\n          onClick={onClose}\n        />,\n      ]}\n      onRequestClose={onClose}\n      open\n      title={<Trans>GDevelop Preferences</Trans>}\n      maxWidth=\"sm\"\n      noMargin\n    >\n      <Tabs value={currentTab} onChange={setCurrentTab}>\n        <Tab label={<Trans>Preferences</Trans>} value=\"preferences\" />\n        <Tab label={<Trans>Hints &amp; explanations</Trans>} value=\"hints\" />\n      </Tabs>\n      {currentTab === 'preferences' && (\n        <Column>\n          <Text size=\"title\">\n            <Trans>Appearance</Trans>\n          </Text>\n          <ResponsiveLineStackLayout noMargin>\n            <SelectField\n              floatingLabelText={<Trans>UI Theme</Trans>}\n              value={values.themeName}\n              onChange={(e, i, value: string) => setThemeName(value)}\n              fullWidth\n            >\n              {Object.keys(themes).map(themeName => (\n                <SelectOption\n                  value={themeName}\n                  primaryText={themeName}\n                  key={themeName}\n                />\n              ))}\n            </SelectField>\n            <SelectField\n              floatingLabelText={<Trans>Code editor Theme</Trans>}\n              value={values.codeEditorThemeName}\n              onChange={(e, i, value: string) => setCodeEditorThemeName(value)}\n              fullWidth\n            >\n              {getAllThemes().map(codeEditorTheme => (\n                <SelectOption\n                  value={codeEditorTheme.themeName}\n                  primaryText={codeEditorTheme.name}\n                  key={codeEditorTheme.themeName}\n                />\n              ))}\n            </SelectField>\n          </ResponsiveLineStackLayout>\n          <Line noMargin>\n            <Text>\n              <Trans>You can contribute and create your own themes: </Trans>\n            </Text>\n            <FlatButton\n              label={<Trans>Learn more</Trans>}\n              onClick={() => {\n                Window.openExternalURL(\n                  'https://github.com/4ian/GDevelop/tree/master/newIDE#theming'\n                );\n              }}\n            />\n          </Line>\n          <Text size=\"title\">\n            <Trans>Updates</Trans>\n          </Text>\n          <Line>\n            <Toggle\n              onToggle={(e, check) => setAutoDownloadUpdates(check)}\n              toggled={values.autoDownloadUpdates}\n              labelPosition=\"right\"\n              label={\n                <Trans>Auto download and install updates (recommended)</Trans>\n              }\n            />\n          </Line>\n          <Line>\n            <Toggle\n              onToggle={(e, check) => setAutoDisplayChangelog(check)}\n              toggled={values.autoDisplayChangelog}\n              labelPosition=\"right\"\n              label={\n                <Trans>\n                  Display What's New when a new version is launched\n                  (recommended)\n                </Trans>\n              }\n            />\n          </Line>\n          <Text size=\"title\">\n            <Trans>Events Sheet</Trans>\n          </Text>\n          <Line>\n            <Toggle\n              onToggle={(e, check) => setEventsSheetShowObjectThumbnails(check)}\n              toggled={values.eventsSheetShowObjectThumbnails}\n              labelPosition=\"right\"\n              label={<Trans>Display object thumbnails in Events Sheets</Trans>}\n            />\n          </Line>\n          <Line>\n            <Toggle\n              onToggle={(e, check) =>\n                setEventsSheetUseAssignmentOperators(check)\n              }\n              toggled={values.eventsSheetUseAssignmentOperators}\n              labelPosition=\"right\"\n              label={\n                <Trans>Display assignment operators in Events Sheets</Trans>\n              }\n            />\n          </Line>\n          <Line>\n            <Toggle\n              onToggle={(e, check) => setUseNewInstructionEditorDialog(check)}\n              toggled={values.useNewInstructionEditorDialog}\n              labelPosition=\"right\"\n              label={<Trans>Use the new action/condition editor</Trans>}\n            />\n          </Line>\n          <Text size=\"title\">\n            <Trans>Advanced</Trans>\n          </Text>\n          <Line>\n            <Toggle\n              onToggle={(e, check) => setAutosaveOnPreview(check)}\n              toggled={values.autosaveOnPreview}\n              labelPosition=\"right\"\n              label={<Trans>Auto-save project on Preview</Trans>}\n            />\n          </Line>\n          {Window.isDev() && (\n            <Line>\n              <Toggle\n                onToggle={(e, check) => setUseGDJSDevelopmentWatcher(check)}\n                toggled={values.useGDJSDevelopmentWatcher}\n                labelPosition=\"right\"\n                label={\n                  <Trans>\n                    Watch changes in game engine (GDJS) sources and auto import\n                    them (dev only)\n                  </Trans>\n                }\n              />\n            </Line>\n          )}\n        </Column>\n      )}\n      {currentTab === 'hints' && (\n        <Column>\n          <Line>\n            <Column noMargin>\n              <Text>\n                <Trans>Warn/show explanation about:</Trans>\n              </Text>\n              {allAlertMessages.map(({ key, label }) => (\n                <Line>\n                  <Toggle\n                    onToggle={(e, check) => showAlertMessage(key, check)}\n                    toggled={!values.hiddenAlertMessages[key]}\n                    labelPosition=\"right\"\n                    label={label}\n                  />\n                </Line>\n              ))}\n            </Column>\n          </Line>\n        </Column>\n      )}\n    </Dialog>\n  );\n};\n\nexport default PreferencesDialog;\n"],"sourceRoot":""}