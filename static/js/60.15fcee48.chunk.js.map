{"version":3,"sources":["../node_modules/@supercharge/promise-pool/dist/index.js","../node_modules/@supercharge/promise-pool/dist/promise-pool.js","../node_modules/@supercharge/goodies/dist/index.js","../node_modules/@supercharge/goodies/dist/goodies.js","../node_modules/@supercharge/promise-pool/dist/promise-pool-executor.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@supercharge/promise-pool/dist/promise-pool-error.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/isNativeFunction.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/construct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@supercharge/goodies/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js"],"names":["promise_pool_1","require","module","exports","PromisePool","Object","defineProperty","value","goodies_1","promise_pool_executor_1","this","items","concurrency","errorHandler","undefined","tap","handler","callback","PromisePoolExecutor","withConcurrency","withHandler","handleError","for","start","ifNullish","isAsyncFunction","isPromise","upon","Goodies","promise","input","tapAsync","tapSync","isFunction","uponAsync","uponSync","then","constructor","name","predicate","promise_pool_error_1","tasks","errors","results","action","activeCount","length","validateInputs","process","Error","TypeError","Array","isArray","item","hasReachedConcurrencyLimit","processingSlot","startProcessing","drained","waitForTaskToFinish","Promise","race","task","createTaskFor","result","push","splice","indexOf","catch","error","PromisePoolError","createFrom","drainActiveTasks","all","unsupportedIterableToArray","o","Symbol","iterator","i","F","s","n","done","e","_e","f","it","err","normalCompletion","didErr","step","next","_e2","arrayLikeToArray","minLen","prototype","toString","call","slice","from","test","arr","len","arr2","message","messageFrom","captureStackTrace","setPrototypeOf","subClass","superClass","create","writable","configurable","getPrototypeOf","isNativeReflectConstruct","possibleConstructorReturn","Derived","Super","NewTarget","Reflect","construct","arguments","apply","_typeof","assertThisInitialized","self","obj","isNativeFunction","_wrapNativeSuper","Class","_cache","Map","has","get","set","Wrapper","enumerable","fn","Function","_construct","Parent","args","a","instance","bind","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","_setPrototypeOf","p","__proto__","ReferenceError","_getPrototypeOf","sham","Proxy","Date"],"mappings":"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","file":"static/js/60.15fcee48.chunk.js","sourcesContent":["'use strict';\nconst promise_pool_1 = require(\"./promise-pool\");\nmodule.exports = promise_pool_1.PromisePool;\n","'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PromisePool = void 0;\nconst goodies_1 = require(\"@supercharge/goodies\");\nconst promise_pool_executor_1 = require(\"./promise-pool-executor\");\nclass PromisePool {\n    /**\n     * Instantiates a new promise pool with a default `concurrency: 10` and `items: []`.\n     *\n     * @param {Object} options\n     */\n    constructor() {\n        this.items = [];\n        this.concurrency = 10;\n        this.errorHandler = undefined;\n    }\n    /**\n     * Set the number of tasks to process concurrently in the promise pool.\n     *\n     * @param {Integer} concurrency\n     *\n     * @returns {PromisePool}\n     */\n    withConcurrency(concurrency) {\n        return goodies_1.tap(this, () => {\n            this.concurrency = concurrency;\n        });\n    }\n    /**\n     * Set the number of tasks to process concurrently in the promise pool.\n     *\n     * @param {Number} concurrency\n     *\n     * @returns {PromisePool}\n     */\n    static withConcurrency(concurrency) {\n        return goodies_1.tap(this, () => {\n            this.concurrency = concurrency;\n        });\n    }\n    /**\n     * Set the items to be processed in the promise pool.\n     *\n     * @param {Array} items\n     *\n     * @returns {PromisePool}\n     */\n    for(items) {\n        return goodies_1.tap(this, () => {\n            this.items = items;\n        });\n    }\n    /**\n     * Set the items to be processed in the promise pool.\n     *\n     * @param {Array} items\n     *\n     * @returns {PromisePool}\n     */\n    static for(items) {\n        return new this()\n            .for(items)\n            .withConcurrency(this.concurrency);\n    }\n    /**\n     * Set the error handler function to execute when an error occurs.\n     *\n     * @param {Function} handler\n     *\n     * @returns {PromisePool}\n     */\n    handleError(handler) {\n        return goodies_1.tap(this, () => {\n            this.errorHandler = handler;\n        });\n    }\n    /**\n     * Starts processing the promise pool by iterating over the items\n     * and running each item through the async `callback` function.\n     *\n     * @param {Function} The async processing function receiving each item from the `items` array.\n     *\n     * @returns Promise<{ results, errors }>\n     */\n    async process(callback) {\n        return new promise_pool_executor_1.PromisePoolExecutor()\n            .withConcurrency(this.concurrency)\n            .withHandler(callback)\n            .handleError(this.errorHandler)\n            .for(this.items)\n            .start();\n    }\n}\nexports.PromisePool = PromisePool;\n","'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ifNullish = exports.isAsyncFunction = exports.isPromise = exports.upon = exports.tap = void 0;\nconst goodies_1 = require(\"./goodies\");\nfunction tap(value, callback) {\n    return new goodies_1.Goodies().tap(value, callback);\n}\nexports.tap = tap;\nfunction upon(value, callback) {\n    return new goodies_1.Goodies().upon(value, callback);\n}\nexports.upon = upon;\n/**\n * Determine whether the given `promise` is a Promise.\n *\n * @param {*} promise\n *\n * @returns {Boolean}\n *\n * @example\n * isPromise('no') // false\n * isPromise(new Promise(() => {})) // true\n */\nfunction isPromise(promise) {\n    return new goodies_1.Goodies().isPromise(promise);\n}\nexports.isPromise = isPromise;\n/**\n * Determine whether the given `input` is an async function.\n *\n * @param {*} input\n *\n * @returns {Boolean}\n */\nfunction isAsyncFunction(input) {\n    return new goodies_1.Goodies().isAsyncFunction(input);\n}\nexports.isAsyncFunction = isAsyncFunction;\nfunction ifNullish(input, callback) {\n    return new goodies_1.Goodies().ifNullish(input, callback);\n}\nexports.ifNullish = ifNullish;\n","'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Goodies = void 0;\nclass Goodies {\n    /**\n     * Handles the tap call and delegates it either to an async tap\n     * handler or to a sync tap handler.\n     *\n     * @param {*} value\n     * @param {Function} callback\n     *\n     * @returns {*} value\n     */\n    tap(value, callback) {\n        if (this.isPromise(value)) {\n            return this.tapAsync(value, callback);\n        }\n        if (this.isAsyncFunction(callback)) {\n            return this.tapAsync(value, callback);\n        }\n        return this.tapSync(value, callback);\n    }\n    /**\n     * Calls the given `callback` function with the\n     * given `value` and returns `value`.\n     *\n     * @param {*} value\n     * @param {Function} callback\n     *\n     * @returns {*} value\n     */\n    tapSync(value, callback) {\n        if (!callback) {\n            return value;\n        }\n        if (this.isFunction(callback)) {\n            callback(value);\n        }\n        return value;\n    }\n    /**\n    * Calls the given `callback` function with the given `value`\n    * and returns `value`. It resolves the `value` before\n    * passing it to the callback in case it is a Promise.\n     *\n     * @param {*} value\n     * @param {Function} callback\n     *\n     * @returns {*} value\n     */\n    async tapAsync(value, callback) {\n        if (!callback) {\n            return value;\n        }\n        if (this.isPromise(value)) {\n            value = await value;\n        }\n        if (this.isFunction(callback)) {\n            await callback(value);\n        }\n        return value;\n    }\n    /**\n     * Calls the given `callback` function with the given `value` and returns\n     * the result of the callback. It resolves the `value` before passing\n     * it to the callback in case it is a Promise.\n     *\n     * @param {*} value\n     * @param {Function} callback\n     *\n     * @returns {*} value\n     */\n    upon(value, callback) {\n        if (this.isPromise(value)) {\n            return this.uponAsync(value, callback);\n        }\n        if (this.isAsyncFunction(callback)) {\n            return this.uponAsync(value, callback);\n        }\n        return this.uponSync(value, callback);\n    }\n    /**\n     * Calls the given `callback` function with the given `value` and returns\n     * the result of the callback.\n     *\n     * @param {*} value\n     * @param {Function} callback\n     *\n     * @returns {*} value\n     */\n    uponSync(value, callback) {\n        if (!callback) {\n            return value;\n        }\n        return this.isFunction(callback)\n            ? callback(value)\n            : value;\n    }\n    /**\n     * Calls the given `callback` function with the given `value` and returns\n     * the result of the callback. It resolves the `value` before passing\n     * it to the callback in case it is a Promise.\n     *\n     * @param {*} value\n     * @param {Function} callback\n     *\n     * @returns {*} value\n     */\n    async uponAsync(value, callback) {\n        if (!callback) {\n            return value;\n        }\n        if (this.isPromise(value)) {\n            value = await value;\n        }\n        return this.isFunction(callback)\n            ? callback(value)\n            : value;\n    }\n    /**\n     * Determine whether the given `promise` is a Promise.\n     *\n     * @param {*} promise\n     *\n     * @returns {Boolean}\n     */\n    isPromise(promise) {\n        return !!promise && this.isFunction(promise.then);\n    }\n    /**\n     * Determine whether the given `input` is a function.\n     *\n     * @param {*} input\n     *\n     * @returns {Boolean}\n     */\n    isFunction(input) {\n        return typeof input === 'function';\n    }\n    /**\n     * Determine whether the given `func` is an async function.\n     *\n     * @param {*} input\n     *\n     * @returns {Boolean}\n     */\n    isAsyncFunction(input) {\n        return this.isFunction(input) && input.constructor.name === 'AsyncFunction';\n    }\n    /**\n     * Runs the given `callback` if the `predicate` is `null` or `undefined`.\n     *\n     * @param {Boolean} predicate\n     * @param {Function} callback\n     *\n     * @returns {*}\n     */\n    ifNullish(predicate, callback) {\n        if (predicate === null || predicate === undefined) {\n            return callback();\n        }\n    }\n}\nexports.Goodies = Goodies;\n","'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PromisePoolExecutor = void 0;\nconst goodies_1 = require(\"@supercharge/goodies\");\nconst promise_pool_error_1 = require(\"./promise-pool-error\");\nclass PromisePoolExecutor {\n    /**\n     * Creates a new promise pool executer instance with a default concurrency of 10.\n     */\n    constructor() {\n        this.tasks = [];\n        this.items = [];\n        this.errors = [];\n        this.results = [];\n        this.concurrency = 10;\n        this.handler = () => { };\n        this.errorHandler = undefined;\n    }\n    /**\n     * Set the number of tasks to process concurrently the promise pool.\n     *\n     * @param {Integer} concurrency\n     *\n     * @returns {PromisePoolExecutor}\n     */\n    withConcurrency(concurrency) {\n        return goodies_1.tap(this, () => {\n            this.concurrency = concurrency;\n        });\n    }\n    /**\n     * Set the items to be processed in the promise pool.\n     *\n     * @param {Array} items\n     *\n     * @returns {PromisePoolExecutor}\n     */\n    for(items) {\n        return goodies_1.tap(this, () => {\n            this.items = items;\n        });\n    }\n    /**\n     * Set the handler that is applied to each item.\n     *\n     * @param {Function} action\n     *\n     * @returns {PromisePoolExecutor}\n     */\n    withHandler(action) {\n        return goodies_1.tap(this, () => {\n            this.handler = action;\n        });\n    }\n    /**\n     * Set the error handler function to execute when an error occurs.\n     *\n     * @param {Function} handler\n     *\n     * @returns {PromisePoolExecutor}\n     */\n    handleError(handler) {\n        return goodies_1.tap(this, () => {\n            this.errorHandler = handler;\n        });\n    }\n    /**\n     * Determines whether the number of active tasks is greater or equal to the concurrency limit.\n     *\n     * @returns {Boolean}\n     */\n    hasReachedConcurrencyLimit() {\n        return this.activeCount() >= this.concurrency;\n    }\n    /**\n     * Returns the number of active tasks.\n     *\n     * @returns {Number}\n     */\n    activeCount() {\n        return this.tasks.length;\n    }\n    /**\n     * Start processing the promise pool.\n     *\n     * @returns {Array}\n     */\n    async start() {\n        return goodies_1.upon(this.validateInputs(), async () => {\n            return this.process();\n        });\n    }\n    /**\n     * Ensure valid inputs and throw otherwise.\n     *\n     * @throws\n     */\n    validateInputs() {\n        if (typeof this.handler !== 'function') {\n            throw new Error('The first parameter for the .process(fn) method must be a function');\n        }\n        if (!(typeof this.concurrency === 'number' && this.concurrency >= 1)) {\n            throw new TypeError(`\"concurrency\" must be a number, 1 or up. Received \"${this.concurrency}\" (${typeof this.concurrency})`);\n        }\n        if (!Array.isArray(this.items)) {\n            throw new TypeError(`\"items\" must be an array. Received ${typeof this.items}`);\n        }\n        if (this.errorHandler) {\n            if (typeof this.errorHandler !== 'function') {\n                throw new Error(`The error handler must be a function. Received ${typeof this.errorHandler}`);\n            }\n        }\n    }\n    /**\n     * Starts processing the promise pool by iterating over the items\n     * and running each item through the async `callback` function.\n     *\n     * @param {Function} callback\n     *\n     * @returns {Promise}\n     */\n    async process() {\n        for (const item of this.items) {\n            if (this.hasReachedConcurrencyLimit()) {\n                await this.processingSlot();\n            }\n            this.startProcessing(item);\n        }\n        return this.drained();\n    }\n    /**\n     * Creates a deferred promise and pushes the related callback to the pending\n     * queue. Returns the promise which is used to wait for the callback.\n     *\n     * @returns {Promise}\n     */\n    async processingSlot() {\n        return this.waitForTaskToFinish();\n    }\n    /**\n     * Wait for one of the active tasks to finish processing.\n     */\n    async waitForTaskToFinish() {\n        await Promise.race(this.tasks);\n    }\n    /**\n     * Create a processing function for the given `item`.\n     *\n     * @param {*} item\n     */\n    startProcessing(item) {\n        const task = this.createTaskFor(item)\n            .then(result => {\n            this.results.push(result);\n            this.tasks.splice(this.tasks.indexOf(task), 1);\n        })\n            .catch(error => {\n            this.tasks.splice(this.tasks.indexOf(task), 1);\n            if (this.errorHandler) {\n                return this.errorHandler(error, item);\n            }\n            this.errors.push(promise_pool_error_1.PromisePoolError.createFrom(error, item));\n        });\n        this.tasks.push(task);\n    }\n    /**\n     * Ensures a returned promise for the processing of the given `item`.\n     *\n     * @param item\n     *\n     * @returns {*}\n     */\n    async createTaskFor(item) {\n        return this.handler(item);\n    }\n    /**\n     * Wait for all active tasks to finish. Once all the tasks finished\n     * processing, returns an object containing the results and errors.\n     *\n     * @returns {Object}\n     */\n    async drained() {\n        await this.drainActiveTasks();\n        return {\n            results: this.results,\n            errors: this.errors\n        };\n    }\n    /**\n     * Wait for all of the active tasks to finish processing.\n     */\n    async drainActiveTasks() {\n        await Promise.all(this.tasks);\n    }\n}\nexports.PromisePoolExecutor = PromisePoolExecutor;\n","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nfunction _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PromisePoolError = void 0;\nclass PromisePoolError extends Error {\n    /**\n     * Create a new instance for the given `message` and `item`.\n     *\n     * @param error  The original error\n     * @param item   The item causing the error\n     */\n    constructor(error, item) {\n        super();\n        this.item = item;\n        this.name = this.constructor.name;\n        this.message = this.messageFrom(error);\n        Error.captureStackTrace(this, this.constructor);\n    }\n    /**\n     * Returns a new promise pool error instance wrapping the `error` and `item`.\n     *\n     * @param {*} error\n     * @param {*} item\n     *\n     * @returns {PromisePoolError}\n     */\n    static createFrom(error, item) {\n        return new this(error, item);\n    }\n    /**\n     * Returns the error message from the given `error`.\n     *\n     * @param {*} error\n     *\n     * @returns {String}\n     */\n    messageFrom(error) {\n        if (error instanceof Error) {\n            return error.message;\n        }\n        if (typeof error === 'object') {\n            return error.message;\n        }\n        if (typeof error === 'string' || typeof error === 'number') {\n            return error.toString();\n        }\n        return '';\n    }\n}\nexports.PromisePoolError = PromisePoolError;\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn\");\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}\n\nmodule.exports = _createSuper;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeFunction = require(\"./isNativeFunction\");\n\nvar construct = require(\"./construct\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","'use strict'\n\nmodule.exports = require('./dist')\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;"],"sourceRoot":""}