{"version":3,"sources":["Export/LocalExporters/LocalFileSystem.js","ExternalEditor/index.js","ExternalEditor/Bridge.js","ProjectsStorage/LocalFileStorageProvider/LocalProjectWriter.js","ProjectCreation/LocalStarters.js","ResourcesList/LocalResourceSources.js","ResourcesList/LocalResourceExternalEditors.js","ResourcesList/LocalPiskelBridge.js","ResourcesList/LocalJfxrBridge.js","ResourcesList/LocalYarnBridge.js","Export/LocalExporters/LocalPreviewLauncher/index.js","Export/LocalExporters/LocalPreviewLauncher/LocalNetworkPreviewDialog.js","Export/LocalExporters/LocalPreviewLauncher/LocalIpFinder.js","Export/LocalExporters/index.js","Export/LocalExporters/LocalCordovaExport.js","Export/LocalExporters/LocalElectronExport.js","Export/LocalExporters/LocalHTML5Export.js","Export/LocalExporters/LocalCocos2dExport.js","Export/LocalExporters/LocalFacebookInstantGamesExport.js","UI/LocalFilePicker/index.js","Export/LocalExporters/LocalOnlineCordovaExport.js","Export/LocalExporters/LocalOnlineElectronExport.js","Export/LocalExporters/LocalOnlineWebExport.js","MainFrame/ElectronMainMenu.js","JsExtensionsLoader/LocalJsExtensionsLoader.js","JsExtensionsLoader/LocalJsExtensionsFinder.js","EventsFunctionsExtensionsLoader/CodeWriters/LocalEventsFunctionCodeWriter.js","EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionWriter.js","EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionOpener.js","GameEngineFinder/LocalGDJSDevelopmentWatcher.js","UI/LocalFolderPicker/index.js","Utils/LocalArchiver.js","Export/LocalExporters/LocalFileUploader.js","ProjectsStorage/LocalFileStorageProvider/LocalProjectOpener.js","ProjectsStorage/LocalFileStorageProvider/index.js","LocalApp.js","ProjectCreation/LocalExamples.js","ProjectCreation/LocalExamplesFinder.js","ProjectCreation/LocalPathFinder.js","Utils/ObjectSplitter.js"],"names":["global","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0___default","n","fs","optionalRequire","path","os","gd","__webpack_exports__","mkDir","mkdirsSync","e","console","log","dirExists","existsSync","clearDir","that","this","readdirSync","forEach","file","curPath","lstatSync","isDirectory","unlinkSync","getTempDir","tmpdir","fileNameFrom","fullpath","_isExternalURL","_translateURL","basename","dirNameFrom","dirname","makeAbsolute","filename","baseDirectory","isAbsolute","resolve","normalize","makeRelative","relative","length","charAt","copyFile","source","dest","copySync","writeToFile","contents","outputFileSync","readFile","readFileSync","toString","readDir","ext","toUpperCase","output","VectorString","indexOf","push_back","fileExists","statSync","isFile","substr","ExternalEditor","props","_this","Object","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","editorOpened","lastShowCommandDate","sendingUpdate","editor","_serializedObject","_hideIfNotJustShown","Date","now","info","Window","hide","sendUpdate","state","loading","warn","elements","getSerializedElements","scope","hasOwnProperty","bridge","send","error","editObject","object","getName","requestUpdate","arguments","undefined","command","_onUpdateReceived","payload","setState","setTimeout","delete","t1","performance","Serializer","fromJSObject","t2","loadFromSerializedProject","openLayout","editedElementName","openEventsEditor","openExternalLayout","concat","Bridge","isSupported","onReceive","isIntegrated","setBounds","x","y","width","height","show","forceHide","onConnected","onBlur","onFocus","onClose","connectTo","serverPort","_this2","React","cloneElement","children","ref","onEditObject","integratedEditor","Component","_Utils_TimeFunction_js__WEBPACK_IMPORTED_MODULE_1__","electron","Buffer","remote","require","net","client","connected","_onReceiveCb","prototype","port","Socket","connect","_onConnected","data","nullCharacterBuffer","from","on","dataBuffer","startPos","nextNullCharacterPos","slice","_receive","json","JSON","stringify","write","dataObject","timeFunction","parse","ex","time","cb","dialog","writeJSONFile","filePath","Promise","reject","Error","content","ensureDir","then","writeFile","err","stringifyException","writeProjectFiles","project","projectPath","serializedProjectObject","serializeToJSObject","isFolderProject","partialObjects","split","pathSeparator","getArrayItemReferenceName","getSlugifiedUniqueNameFromProperty","shouldSplit","splitPaths","Set","isReferenceMagicPropertyName","all","map","partialObject","join","reference","catch","onSaveProject","fileMetadata","fileIdentifier","wasSaved","onSaveProjectAs","defaultPath","fileSystem","assignIn","AbstractFileSystemJS","localFileSystem","browserWindow","getCurrentWindow","options","filters","name","extensions","showSaveDialog","ProjectResourcesCopier","copyAllResourcesTo","setProjectFile","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","onAutoSaveProject","autoSavePath","app","LocalStarters","outputPath","findEmptyPath","getPath","_handleChangePath","i18n","exampleName","findExamples","examplesPath","showGameFileCreationError","onOpen","LocalFileStorageProvider","sendNewGameCreated","ProjectHelper","createNewGDJSProject","onCreate","_this3","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_lingui_react__WEBPACK_IMPORTED_MODULE_5__","_ref","_UI_Grid__WEBPACK_IMPORTED_MODULE_12__","noMargin","_UI_Text__WEBPACK_IMPORTED_MODULE_10__","id","expand","_UI_List__WEBPACK_IMPORTED_MODULE_13__","leftIcon","_UI_ListIcon__WEBPACK_IMPORTED_MODULE_17__","iconSize","src","primaryText","secondaryText","secondaryTextLines","onClick","createFromExample","createEmptyGame","alignItems","justifyContent","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_8__","label","onShowExamples","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_7__","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_9__","fullWidth","value","onChange","type","displayName","kind","component","_temp","_Component","LocalAudioFileOpener","_getPrototypeOf2","_len","args","Array","_key","apply","chooseResources","multiSelections","title","_","selectLocalResourcePath","resources","resourcePath","audioResource","AudioResource","getProjectFile","setFile","setName","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","_temp2","_Component2","LocalFileOpener","_getPrototypeOf3","_len2","_key2","imageResource","ImageResource","_temp3","_Component3","LocalFontFileOpener","_getPrototypeOf4","_len3","_key3","fontResource","FontResource","_temp4","_Component4","LocalVideoFileOpener","_getPrototypeOf5","_this4","_len4","_key4","videoResource","VideoResource","_temp5","_Component5","LocalJsonFileOpener","_getPrototypeOf6","_this5","_len5","_key5","jsonResource","JsonResource","properties","push","showOpenDialog","paths","filter","isPathInProjectFolder","confirm","copyAllToProjectFolder","_LocalPiskelBridge__WEBPACK_IMPORTED_MODULE_0__","_LocalJfxrBridge__WEBPACK_IMPORTED_MODULE_1__","_LocalYarnBridge__WEBPACK_IMPORTED_MODULE_2__","_Utils_Analytics_EventSender__WEBPACK_IMPORTED_MODULE_3__","editors","edit","sendExternalEditorOpened","openPiskel","openJfxr","openYarn","ipcRenderer","resourceNames","resourcesLoader","singleFrame","onChangesSaved","extraOptions","resourceName","originalIndex","getLocalResourceFullPath","externalEditorData","removeAllListeners","event","outputResources","newAnimationName","metadata","pskl","resourcesManager","getResourcesManager","resource","createOrUpdateResource","getResource","setMetadata","d","_ResourceUtils_js__WEBPACK_IMPORTED_MODULE_1__","newFilePath","jfxr","BrowserWindow","LocalPreviewLauncher","canDoNetworkPreview","networkPreviewDialogOpen","networkPreviewHost","networkPreviewPort","networkPreviewError","previewGamePath","devToolsOpen","previewBrowserWindowConfig","_subscriptionChecker","_openPreviewBrowserWindow","win","loadURL","webContents","openDevTools","_openPreviewWindow","gamePath","getGameResolutionWidth","getGameResolutionHeight","useContentSize","backgroundColor","networkPreview","serverParams","_checkSubscription","ipAddresses","findLocalIp","root","_prepareExporter","findGDJS","gdjsRoot","outputDir","exporter","Exporter","launchLayoutPreview","layout","_ref2","exportLayoutForPixiPreview","launchExternalLayoutPreview","externalLayout","_ref3","exportExternalLayoutForPixiPreview","checkHasSubscription","_this$state","react__WEBPACK_IMPORTED_MODULE_6__","_Profile_SubscriptionChecker__WEBPACK_IMPORTED_MODULE_14__","subscriptionChecker","onChangeSubscription","mode","_LocalNetworkPreviewDialog__WEBPACK_IMPORTED_MODULE_11__","open","url","onExport","onRunPreviewLocally","LocalNetworkDialog","_this$props","_UI_Dialog__WEBPACK_IMPORTED_MODULE_7__","actions","_UI_FlatButton__WEBPACK_IMPORTED_MODULE_8__","primary","secondaryActions","modal","onRequestClose","_UI_Grid__WEBPACK_IMPORTED_MODULE_11__","_UI_PlaceholderLoader__WEBPACK_IMPORTED_MODULE_12__","_UI_TextField__WEBPACK_IMPORTED_MODULE_9__","firstLocalIp","find","ipAddress","getLocalExporters","react__WEBPACK_IMPORTED_MODULE_1__","_lingui_react__WEBPACK_IMPORTED_MODULE_0__","renderIcon","_material_ui_icons_PhoneIphone__WEBPACK_IMPORTED_MODULE_10___default","helpPage","description","exportPipeline","localOnlineCordovaExportPipeline","_UI_CustomSvgIcons_Chrome__WEBPACK_IMPORTED_MODULE_15__","localOnlineWebExportPipeline","_material_ui_icons_Folder__WEBPACK_IMPORTED_MODULE_12___default","localHTML5ExportPipeline","advanced","_UI_CustomSvgIcons_Facebook__WEBPACK_IMPORTED_MODULE_13__","localFacebookInstantGamesExportPipeline","_UI_CustomSvgIcons_Cordova__WEBPACK_IMPORTED_MODULE_14__","localCordovaExportPipeline","_material_ui_icons_LaptopMac__WEBPACK_IMPORTED_MODULE_11___default","localOnlineElectronExportPipeline","localElectronExportPipeline","localCocos2dExportPipeline","experimental","shell","getInitialExportState","getLastCompilationDirectory","canLaunchBuild","exportState","renderHeader","updateExportState","react__WEBPACK_IMPORTED_MODULE_1___default","_UI_Grid__WEBPACK_IMPORTED_MODULE_3__","_GenericExporters_CordovaExport__WEBPACK_IMPORTED_MODULE_9__","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_6__","renderLaunchButtonLabel","prepareExporter","context","launchExport","exportOptions","MapStringBoolean","set","exportWholePixiProject","launchResourcesDownload","exportOutput","launchCompression","renderDoneFooter","_ref4","openExportFolder","openItem","renderGameButton","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_2__","_GenericExporters_ElectronExport__WEBPACK_IMPORTED_MODULE_9__","_GenericExporters_HTML5Export__WEBPACK_IMPORTED_MODULE_9__","debugMode","react__WEBPACK_IMPORTED_MODULE_2___default","_UI_Grid__WEBPACK_IMPORTED_MODULE_4__","_GenericExporters_Cocos2dExport__WEBPACK_IMPORTED_MODULE_11__","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_7__","prevState","_UI_Toggle__WEBPACK_IMPORTED_MODULE_10__","onToggle","check","toggled","labelPosition","_lingui_react__WEBPACK_IMPORTED_MODULE_1__","exportWholeCocos2dProject","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_3__","archiveOutputFilename","_GenericExporters_FacebookInstantGamesExport__WEBPACK_IMPORTED_MODULE_10__","_UI_LocalFilePicker__WEBPACK_IMPORTED_MODULE_8__","message","temporaryOutputDir","_ref5","archiveLocalFolder","outputFilename","_ref6","styles","container","position","display","button","marginLeft","textField","flex","LocalFilePicker","onChooseFolder","react__WEBPACK_IMPORTED_MODULE_7___default","style","_TextField__WEBPACK_IMPORTED_MODULE_8__","margin","hintText","_RaisedButton__WEBPACK_IMPORTED_MODULE_10__","_lingui_react__WEBPACK_IMPORTED_MODULE_6__","PureComponent","onlineBuildType","_GenericExporters_OnlineCordovaExport__WEBPACK_IMPORTED_MODULE_9__","archiveOutputDir","launchUpload","outputFile","getBuildFileUploadOptions","uploadOptions","uploadLocalFile","updateStepProgress","launchOnlineBuild","userProfile","uploadBucketKey","getAuthorizationHeader","profile","buildCordovaAndroid","uid","targets","_GenericExporters_OnlineElectronExport__WEBPACK_IMPORTED_MODULE_9__","buildElectron","_GenericExporters_OnlineWebExport__WEBPACK_IMPORTED_MODULE_9__","buildWeb","ElectronMainMenu","_editor","chooseProject","saveProject","saveProjectAs","askToCloseProject","openExportDialog","openCreateDialog","openProjectManager","openStartPage","openDebugger","openAboutDialog","openPreferences","openLanguage","openProfile","status","setUpdateStatus","_buildAndSendMenuTemplate","language","_language","fileTemplate","submenu","accelerator","onClickSendEvent","isMacLike","editTemplate","role","viewTemplate","windowTemplate","helpTemplate","onClickOpenLink","template","unshift","loadExtension","findJsExtensionModules","module","exports","objectsEditorService","objectsRenderingService","filterExamples","loadAllExtensions","extensionModulePaths","extensionModulePath","extensionModule","rethrowException","result","rawError","registerEditorConfigurations","registerInstanceRenderers","JsPlatform","get","extensionsRoot","readdir","extensionFolders","filteredExtensionFolders","folder","extensionFolder","extensionFolderPath","jsExtensionModulePath","stat","stats","modulePaths","modulePath","makeLocalEventsFunctionCodeWriter","slugs__WEBPACK_IMPORTED_MODULE_1__","slugs__WEBPACK_IMPORTED_MODULE_1___default","mkdir","code","getPathFor","codeNamespace","slugs","getIncludeFileFor","writeFunctionCode","functionCodeNamespace","filepath","writeBehaviorCode","behaviorCodeNamespace","LocalEventsFunctionsExtensionWriter","chooseEventsFunctionExtensionFile","writeEventsFunctionsExtension","extension","LocalEventsFunctionsExtensionOpener","readEventsFunctionExtensionFile","encoding","readJSONFile","child_process","process","findDevelopmentNewIdeAppPath","developmentElectronAppFolder","cwd","getAllDevelopmentWatchPaths","pathsWithErrors","gdevelopRepositoryRoot","gdjsSourcesRuntimePath","gdExtensionsPath","files","extensionPath","Boolean","extensionDevelopmentWatchPaths","gdjsDevelopmentWatchPaths","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","importGDJSRuntime","exec","stdout","stderr","onWatchEvent","debounce","eventName","resolvedFilename","LocalGDJSDevelopmentWatcher","shouldWatch","PreferencesContext","values","useGDJSDevelopmentWatcher","stopWatchers","watchers","startTime","watchPath","watcher","watch","keys","totalTimeStr","toFixed","close","LocalFolderPicker","_onChooseFolder","_getTitleAndMessage","titleAndMessage","_RaisedButton__WEBPACK_IMPORTED_MODULE_9__","_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0__","_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0___default","archiver","createWriteStream","archive","zlib","level","pointer","pipe","directory","finalize","_Utils_OptionalRequire__WEBPACK_IMPORTED_MODULE_0__","localFilePath","onProgress","stepCurrentProgress","stepMaxProgress","onOpenWithPicker","unsplit","getReferencePartialObject","referencePath","maxUnsplitDepth","hasAutoSave","compareLastModified","mtime","getTime","onGetAutoSave","objectSpread","internalName","getFileMetadataFromAppArguments","appArguments","POSITIONAL_ARGUMENTS_KEY","createOperations","getOpenErrorMessage","r","create","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_MainFrame__WEBPACK_IMPORTED_MODULE_1__","_Utils_Window__WEBPACK_IMPORTED_MODULE_2__","_Export_ExportDialog__WEBPACK_IMPORTED_MODULE_3__","_ProjectCreation_CreateProjectDialog__WEBPACK_IMPORTED_MODULE_4__","_ExternalEditor__WEBPACK_IMPORTED_MODULE_7__","_ProjectCreation_LocalExamples__WEBPACK_IMPORTED_MODULE_8__","_ProjectCreation_LocalStarters__WEBPACK_IMPORTED_MODULE_9__","_ResourcesList_LocalResourceSources__WEBPACK_IMPORTED_MODULE_10__","_ResourcesList_LocalResourceExternalEditors__WEBPACK_IMPORTED_MODULE_11__","_Export_LocalExporters_LocalPreviewLauncher__WEBPACK_IMPORTED_MODULE_12__","_Export_LocalExporters__WEBPACK_IMPORTED_MODULE_13__","_MainFrame_ElectronMainMenu__WEBPACK_IMPORTED_MODULE_14__","_JsExtensionsLoader_LocalJsExtensionsLoader__WEBPACK_IMPORTED_MODULE_15__","_JsExtensionsLoader_LocalJsExtensionsLoader__WEBPACK_IMPORTED_MODULE_15___default","_EventsFunctionsExtensionsLoader_CodeWriters_LocalEventsFunctionCodeWriter__WEBPACK_IMPORTED_MODULE_16__","_ObjectEditor_ObjectsEditorService__WEBPACK_IMPORTED_MODULE_17__","_ObjectsRendering_ObjectsRenderingService__WEBPACK_IMPORTED_MODULE_18__","_MainFrame_Providers__WEBPACK_IMPORTED_MODULE_19__","_EventsFunctionsExtensionsLoader_Storage_LocalEventsFunctionsExtensionWriter__WEBPACK_IMPORTED_MODULE_20__","_EventsFunctionsExtensionsLoader_Storage_LocalEventsFunctionsExtensionOpener__WEBPACK_IMPORTED_MODULE_21__","_ProjectsStorage_ProjectStorageProviders__WEBPACK_IMPORTED_MODULE_22__","_ProjectsStorage_LocalFileStorageProvider__WEBPACK_IMPORTED_MODULE_23__","_GameEngineFinder_LocalGDJSDevelopmentWatcher__WEBPACK_IMPORTED_MODULE_24__","authentification","setUpContextMenu","getArguments","isDev","disableCheckForUpdates","eventsFunctionCodeWriter","eventsFunctionsExtensionWriter","eventsFunctionsExtensionOpener","eventsFunctionsExtensionsState","storageProviders","currentStorageProviderOperations","useStorageProvider","initialFileMetadataToOpen","resourceSources","localResourceSources","storageProviderOperations","resourceExternalEditors","localResourceExternalEditors","defaultStorageProvider","renderPreviewLauncher","assign","renderExportDialog","exporters","renderCreateDialog","examplesComponent","LocalExamples","startersComponent","renderGDJSDevelopmentWatcher","extensionsLoader","makeExtensionsLoader","ObjectsEditorService","ObjectsRenderingService","showWarningBox","exampleNames","onExamplesLoaded","_UI_Text__WEBPACK_IMPORTED_MODULE_9__","_ExamplesList__WEBPACK_IMPORTED_MODULE_15__","onCreateFromExample","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_8__","tryPath","onExists","onNoAccess","access","constants","R_OK","appPath","getAppPath","_Utils_NewNameGenerator__WEBPACK_IMPORTED_MODULE_0__","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_1__","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_1___default","basePath","folderName","generateName","accessSync","createReference","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","splitObject","currentObject","currentPath","currentReference","isArray","index","itemPath","itemReference","propertyName","propertyPath","propertyReference","unsplitObject","depth","indexOrPropertyName","referenceTo","has","existingNamesForReference","property","newName","newNameGenerator"],"mappings":"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","file":"static/js/local-app.e2df500f.chunk.js","sourcesContent":["import optionalRequire from '../../Utils/OptionalRequire.js';\nvar fs = optionalRequire('fs-extra');\nvar path = optionalRequire('path');\nvar os = optionalRequire('os');\nconst gd = global.gd;\n\nexport default {\n  mkDir: function(path) {\n    try {\n      fs.mkdirsSync(path);\n    } catch (e) {\n      console.log('mkDir(' + path + ') failed: ' + e);\n      return false;\n    }\n    return true;\n  },\n  dirExists: function(path) {\n    return fs.existsSync(path);\n  },\n  clearDir: function(path) {\n    var files = [];\n    var that = this;\n    if (fs.existsSync(path)) {\n      files = fs.readdirSync(path);\n      files.forEach(function(file) {\n        var curPath = path + '/' + file;\n        if (fs.lstatSync(curPath).isDirectory()) {\n          // recurse\n          that.clearDir(curPath);\n        } else {\n          // delete file\n          fs.unlinkSync(curPath);\n        }\n      });\n    }\n  },\n  getTempDir: function() {\n    return os.tmpdir();\n  },\n  fileNameFrom: function(fullpath) {\n    if (this._isExternalURL(fullpath)) return fullpath;\n\n    fullpath = this._translateURL(fullpath);\n    return path.basename(fullpath);\n  },\n  dirNameFrom: function(fullpath) {\n    if (this._isExternalURL(fullpath)) return '';\n\n    fullpath = this._translateURL(fullpath);\n    return path.dirname(fullpath);\n  },\n  makeAbsolute: function(filename, baseDirectory) {\n    if (this._isExternalURL(filename)) return filename;\n\n    filename = this._translateURL(filename);\n    if (!this.isAbsolute(baseDirectory))\n      baseDirectory = path.resolve(baseDirectory);\n\n    return path.resolve(baseDirectory, path.normalize(filename));\n  },\n  makeRelative: function(filename, baseDirectory) {\n    if (this._isExternalURL(filename)) return filename;\n\n    filename = this._translateURL(filename);\n    return path.relative(baseDirectory, path.normalize(filename));\n  },\n  isAbsolute: function(fullpath) {\n    if (this._isExternalURL(fullpath)) return true;\n\n    if (fullpath.length === 0) return true;\n    fullpath = this._translateURL(fullpath);\n    return (\n      (fullpath.length > 0 && fullpath.charAt(0) === '/') ||\n      (fullpath.length > 1 && fullpath.charAt(1) === ':')\n    );\n  },\n  copyFile: function(source, dest) {\n    //URL are not copied.\n    if (this._isExternalURL(source)) return true;\n\n    source = this._translateURL(source);\n    try {\n      if (source !== dest) fs.copySync(source, dest);\n    } catch (e) {\n      console.log('copyFile(' + source + ', ' + dest + ') failed: ' + e);\n      return false;\n    }\n    return true;\n  },\n  writeToFile: function(file, contents) {\n    try {\n      fs.outputFileSync(file, contents);\n    } catch (e) {\n      console.log('writeToFile(' + file + ', ...) failed: ' + e);\n      return false;\n    }\n    return true;\n  },\n  readFile: function(file) {\n    try {\n      var contents = fs.readFileSync(file);\n      return contents.toString();\n    } catch (e) {\n      console.log('readFile(' + file + ') failed: ' + e);\n      return '';\n    }\n  },\n  readDir: function(path, ext) {\n    ext = ext.toUpperCase();\n    var output = new gd.VectorString();\n    try {\n      var files = [];\n      if (fs.existsSync(path)) {\n        files = fs.readdirSync(path);\n        files.forEach(function(file) {\n          if (\n            ext.length === 0 ||\n            file.toUpperCase().indexOf(ext, file.length - ext.length) !== -1\n          ) {\n            output.push_back(path + '/' + file);\n          }\n        });\n      }\n    } catch (e) {\n      console.log('readDir(' + path + ',' + ext + ') failed: ' + e);\n    }\n\n    return output;\n  },\n  fileExists: function(filename) {\n    filename = this._translateURL(filename);\n    try {\n      const stat = fs.statSync(filename);\n      return stat.isFile();\n    } catch (e) {\n      return false;\n    }\n  },\n  _isExternalURL: function(filename) {\n    return filename.substr(0, 4) === 'http' || filename.substr(0, 4) === 'ftp';\n  },\n  /**\n   * Return the filename associated to the URL on the server, relative to the games directory.\n   * (i.e: Transform g/mydirectory/myfile.png to mydirectory/myfile.png).\n   */\n  _translateURL: function(filename) {\n    if (filename.substr(0, 2) === 'g/' || filename.substr(0, 2) === 'g\\\\')\n      filename = filename.substr(2);\n\n    return filename;\n  },\n};\n","// @flow\n\nimport Bridge from './Bridge.js';\nimport React, { Component } from 'react';\nimport Window from '../Utils/Window.js';\nconst gd = global.gd;\n\ntype State = {\n  loading: boolean,\n};\n\ntype Props = {\n  serverPort: number,\n  isIntegrated: boolean,\n  editor: string,\n  editedElementName: string,\n  children: React$Element<any>,\n};\n\nclass ExternalEditor extends Component<Props, State> {\n  bridge: Bridge;\n  editorOpened: boolean = false;\n  lastShowCommandDate: number = 0;\n  sendingUpdate: boolean = false;\n  editor: any = null;\n  _serializedObject: any = null;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.bridge = new Bridge();\n    this.state = {\n      loading: false,\n    };\n\n    if (this.bridge.isSupported()) {\n      console.log('Connection to an external editor...');\n\n      this.bridge.onReceive((command, payload, scope) => {\n        if (command === 'update') {\n          this._onUpdateReceived(payload, scope);\n        } else if (command === 'setBounds') {\n          if (this.props.isIntegrated) {\n            Window.setBounds(\n              payload.x,\n              payload.y,\n              payload.width,\n              payload.height\n            );\n          }\n        } else if (command === 'show') {\n          this.lastShowCommandDate = Date.now();\n          Window.show();\n        } else if (command === 'hide') {\n          if (this.props.isIntegrated) {\n            Window.hide(payload && payload.forceHide);\n          }\n        }\n      });\n      this.bridge.onConnected(() => {\n        this.requestUpdate('', true);\n      });\n      Window.onBlur(() => {\n        if (this.props.isIntegrated) this._hideIfNotJustShown();\n        this.sendUpdate();\n      });\n      Window.onFocus(() => {\n        this.requestUpdate();\n      });\n      Window.onClose(() => {\n        this.sendUpdate();\n      });\n\n      this.bridge.connectTo(this.props.serverPort);\n    } else {\n      console.warn('Connection to an external editor is not supported');\n    }\n  }\n\n  _hideIfNotJustShown = () => {\n    // Sometime, we'll receive the blur event AFTER\n    // the external editor containing this editor\n    // received the activate event from the system (wxActivateEvent in the case of\n    // wxWidgets).\n    // So we'll receive a show command THEN hide, which is not what we want\n    // (we want to hide and then show again the editor if needed).\n    if (Date.now() - this.lastShowCommandDate < 100) {\n      console.info(\n        'The editor is not hidden because it receive a `show` command less ' +\n          'than 100ms ago.'\n      );\n      return;\n    }\n\n    Window.hide();\n  };\n\n  sendUpdate = () => {\n    console.log('Sending update to server editor');\n    if (this.state.loading) {\n      console.warn('Already loading an update, abort send');\n      return;\n    }\n    if (this.sendingUpdate) {\n      console.warn('Already sending an update, abort send');\n      return;\n    }\n    if (!this.editor) {\n      console.error(\n        'No children editor to use to get the updated edited element'\n      );\n      return;\n    }\n\n    this.sendingUpdate = true;\n    const elements = this.editor.getSerializedElements();\n    for (const scope in elements) {\n      if (elements.hasOwnProperty(scope)) {\n        this.bridge.send('update', elements[scope], scope);\n      }\n    }\n    this.sendingUpdate = false;\n\n    console.log('Update send done');\n  };\n\n  editObject = (object: gdObject) => {\n    this.sendUpdate();\n    this.bridge.send('editObject', object.getName());\n  };\n\n  /**\n   * Request an update to the server. Note that if forcedUpdate is set to false,\n   * the server may not send back an update (for example if nothing changed).\n   */\n  requestUpdate = (scope: string = '', forcedUpdate: boolean = false) => {\n    const command = forcedUpdate ? 'requestForcedUpdate' : 'requestUpdate';\n    this.bridge.send(command, undefined, scope);\n  };\n\n  _onUpdateReceived = (payload: any, scope: string) => {\n    console.log('Received project update from server');\n    if (scope !== '') {\n      console.warn(`Not implemented: received ${scope} update from server`);\n      return;\n    }\n\n    this.setState(\n      {\n        loading: true,\n      },\n      () =>\n        setTimeout(() => {\n          // Transform the payload into a gd.SerializerElement\n          // Note that gd.Serializer.fromJSObject returns a new gd.SerializerElement object at every call\n          if (this._serializedObject) this._serializedObject.delete();\n\n          var t1 = performance.now();\n          this._serializedObject = gd.Serializer.fromJSObject(payload);\n          var t2 = performance.now();\n          console.log(\n            'Call to gd.Serializer.fromJSObject took ' +\n              (t2 - t1) +\n              ' milliseconds.'\n          );\n\n          this.editor.loadFromSerializedProject(this._serializedObject, () => {\n            this._serializedObject.delete();\n            this._serializedObject = null;\n\n            if (!this.editorOpened) {\n              this.editorOpened = true;\n\n              if (this.props.editor === 'scene-editor') {\n                this.editor.openLayout(this.props.editedElementName, {\n                  openEventsEditor: false,\n                });\n              }\n              if (this.props.editor === 'external-layout-editor') {\n                this.editor.openExternalLayout(this.props.editedElementName);\n              }\n            }\n\n            this.setState({\n              loading: false,\n            });\n          });\n        })\n    );\n  };\n\n  render() {\n    return React.cloneElement(this.props.children, {\n      loading: this.state.loading,\n      ref: editor => (this.editor = editor),\n      requestUpdate: () => this.requestUpdate('', true),\n      onEditObject: this.editObject,\n      integratedEditor: true,\n    });\n  }\n}\n\nexport default ExternalEditor;\n","import optionalRequire from '../Utils/OptionalRequire.js';\nimport { timeFunction } from '../Utils/TimeFunction.js';\nconst electron = optionalRequire('electron');\nconst Buffer = electron ? electron.remote.require('buffer').Buffer : null;\n\nfunction Bridge() {\n  this.net = optionalRequire('net');\n\n  this.client = null;\n  this.connected = false;\n  this._onReceiveCb = null;\n}\n\nBridge.prototype.isSupported = function() {\n  return !!this.net;\n};\n\nBridge.prototype.connectTo = function(port) {\n  if (!this.net) return;\n\n  var that = this;\n  this.client = new this.net.Socket();\n  this.client.connect(\n    port,\n    'localhost',\n    function() {\n      console.log('Connection made on port', port);\n      that.connected = true;\n      if (that._onConnected) that._onConnected();\n    }\n  );\n\n  let data = '';\n  const nullCharacterBuffer = Buffer.from([0]);\n  this.client.on('data', function(dataBuffer) {\n    let startPos = 0;\n    let nextNullCharacterPos = dataBuffer.indexOf(nullCharacterBuffer);\n    while (startPos < dataBuffer.length) {\n      if (nextNullCharacterPos === -1) {\n        data += dataBuffer.slice(startPos);\n        startPos = dataBuffer.length;\n      } else {\n        data += dataBuffer.slice(startPos, nextNullCharacterPos);\n        that._receive(data);\n\n        data = '';\n        startPos = nextNullCharacterPos + 1;\n        nextNullCharacterPos = dataBuffer.indexOf(\n          nullCharacterBuffer,\n          startPos\n        );\n      }\n    }\n  });\n\n  this.client.on('close', function() {\n    that.connected = false;\n  });\n};\n\nBridge.prototype.send = function(command, payload, scope = '') {\n  if (!this.connected) return false;\n\n  const json = JSON.stringify({\n    command,\n    scope,\n    payload,\n  });\n  this.client.write(json + '\\0');\n\n  return true;\n};\n\nBridge.prototype._receive = function(data) {\n  console.info('Received data');\n\n  // Parse the received JSON\n  let dataObject;\n  timeFunction(\n    () => {\n      try {\n        dataObject = JSON.parse(data);\n      } catch (ex) {\n        console.warn('Received invalid data (JSON parse failed)', ex);\n      }\n    },\n    time => console.info(`JSON parse took ${time}ms`)\n  );\n  if (!dataObject) return;\n\n  if (this._onReceiveCb) {\n    this._onReceiveCb(dataObject.command, dataObject.payload, dataObject.scope);\n  }\n};\n\nBridge.prototype.onReceive = function(cb) {\n  this._onReceiveCb = cb;\n};\n\nBridge.prototype.onConnected = function(cb) {\n  this._onConnected = cb;\n};\n\nexport default Bridge;\n","// @flow\nimport { serializeToJSObject } from '../../Utils/Serializer';\nimport { type FileMetadata } from '../index';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport {\n  split,\n  splitPaths,\n  getSlugifiedUniqueNameFromProperty,\n} from '../../Utils/ObjectSplitter';\nimport localFileSystem from '../../Export/LocalExporters/LocalFileSystem';\nimport assignIn from 'lodash/assignIn';\n\nconst gd = global.gd;\n\nconst fs = optionalRequire('fs-extra');\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst writeJSONFile = (object: Object, filePath: string): Promise<void> => {\n  if (!fs) return Promise.reject(new Error('Filesystem is not supported.'));\n\n  try {\n    const content = JSON.stringify(object, null, 2);\n    return fs.ensureDir(path.dirname(filePath)).then(\n      () =>\n        new Promise((resolve, reject) => {\n          fs.writeFile(filePath, content, (err: ?Error) => {\n            if (err) {\n              return reject(err);\n            }\n\n            return resolve();\n          });\n        })\n    );\n  } catch (stringifyException) {\n    return Promise.reject(stringifyException);\n  }\n};\n\nconst writeProjectFiles = (\n  project: gdProject,\n  filePath: string,\n  projectPath: string\n): Promise<void> => {\n  const serializedProjectObject = serializeToJSObject(project);\n\n  if (project.isFolderProject()) {\n    const partialObjects = split(serializedProjectObject, {\n      pathSeparator: '/',\n      getArrayItemReferenceName: getSlugifiedUniqueNameFromProperty('name'),\n      shouldSplit: splitPaths(\n        new Set([\n          '/layouts/*',\n          '/externalLayouts/*',\n          '/externalEvents/*',\n          '/layouts/*',\n          '/eventsFunctionsExtensions/*',\n        ])\n      ),\n      isReferenceMagicPropertyName: '__REFERENCE_TO_SPLIT_OBJECT',\n    });\n\n    return Promise.all(\n      partialObjects.map(partialObject => {\n        return writeJSONFile(\n          partialObject.object,\n          path.join(projectPath, partialObject.reference) + '.json'\n        ).catch(err => {\n          console.error('Unable to write a partial file:', err);\n          throw err;\n        });\n      })\n    ).then(() => {\n      return writeJSONFile(serializedProjectObject, filePath).catch(err => {\n        console.error('Unable to write the split project:', err);\n        throw err;\n      });\n    });\n  } else {\n    return writeJSONFile(serializedProjectObject, filePath).catch(err => {\n      console.error('Unable to write the project:', err);\n      throw err;\n    });\n  }\n};\n\nexport const onSaveProject = (\n  project: gdProject,\n  fileMetadata: FileMetadata\n): Promise<{|\n  wasSaved: boolean,\n  fileMetadata: FileMetadata,\n|}> => {\n  const filePath = fileMetadata.fileIdentifier;\n  if (!filePath) {\n    return Promise.reject(\n      'Project file is empty, \"Save as\" should have been called?'\n    );\n  }\n\n  const projectPath = path.dirname(filePath);\n  return writeProjectFiles(project, filePath, projectPath).then(() => {\n    return { wasSaved: true, fileMetadata }; // Save was properly done\n  });\n};\n\nexport const onSaveProjectAs = (\n  project: gdProject,\n  fileMetadata: ?FileMetadata\n): Promise<{|\n  wasSaved: boolean,\n  fileMetadata: ?FileMetadata,\n|}> => {\n  const defaultPath = fileMetadata ? fileMetadata.fileIdentifier : '';\n  const fileSystem = assignIn(new gd.AbstractFileSystemJS(), localFileSystem);\n  const browserWindow = electron.remote.getCurrentWindow();\n  const options = {\n    defaultPath,\n    filters: [{ name: 'GDevelop 5 project', extensions: ['json'] }],\n  };\n\n  if (!dialog) {\n    return Promise.reject('Unsupported');\n  }\n  const filePath = dialog.showSaveDialog(browserWindow, options);\n  if (!filePath) {\n    return Promise.resolve({ wasSaved: false, fileMetadata });\n  }\n  const projectPath = path.dirname(filePath);\n\n  // TODO: Ideally, errors while copying resources should be reported.\n  gd.ProjectResourcesCopier.copyAllResourcesTo(\n    project,\n    fileSystem,\n    projectPath,\n    true, // Update the project with the new resource paths\n    false, // Don't move absolute files\n    true // Keep relative files folders structure.\n  );\n\n  // Update the project with the new file path (resources have already been updated)\n  project.setProjectFile(filePath);\n\n  return writeProjectFiles(project, filePath, projectPath).then(() => {\n    return {\n      wasSaved: true,\n      fileMetadata: {\n        ...fileMetadata,\n        fileIdentifier: filePath,\n      },\n    }; // Save was properly done\n  });\n};\n\nexport const onAutoSaveProject = (\n  project: gdProject,\n  fileMetadata: FileMetadata\n) => {\n  const autoSavePath = fileMetadata.fileIdentifier + '.autosave';\n  writeJSONFile(serializeToJSObject(project), autoSavePath).catch(err => {\n    console.error(`Unable to write ${autoSavePath}:`, err);\n    throw err;\n  });\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport React, { Component } from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport RaisedButton from '../UI/RaisedButton';\nimport LocalFolderPicker from '../UI/LocalFolderPicker';\nimport Text from '../UI/Text';\nimport { sendNewGameCreated } from '../Utils/Analytics/EventSender';\nimport { Column, Line } from '../UI/Grid';\nimport { List, ListItem } from '../UI/List';\nimport { findExamples } from './LocalExamplesFinder';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { findEmptyPath } from './LocalPathFinder';\nimport ListIcon from '../UI/ListIcon';\nimport { showGameFileCreationError } from './LocalExamples';\nimport { type StorageProvider, type FileMetadata } from '../ProjectsStorage';\nimport LocalFileStorageProvider from '../ProjectsStorage/LocalFileStorageProvider';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nvar fs = optionalRequire('fs-extra');\nconst gd = global.gd;\n\ntype Props = {|\n  onOpen: (\n    storageProvider: StorageProvider,\n    fileMetadata: FileMetadata\n  ) => void,\n  onCreate: (\n    gdProject,\n    storageProvider: ?StorageProvider,\n    fileMetadata: ?FileMetadata\n  ) => void,\n  onShowExamples: () => void,\n|};\n\ntype State = {|\n  outputPath: string,\n|};\n\nexport default class LocalStarters extends Component<Props, State> {\n  state = {\n    outputPath: findEmptyPath(\n      path && app\n        ? path.join(app.getPath('documents'), 'GDevelop projects')\n        : ''\n    ),\n  };\n\n  _handleChangePath = (outputPath: string) =>\n    this.setState({\n      outputPath,\n    });\n\n  createFromExample(i18n: I18nType, exampleName: string) {\n    const { outputPath } = this.state;\n    if (!fs || !outputPath) return;\n\n    findExamples(examplesPath => {\n      try {\n        fs.mkdirsSync(outputPath);\n        fs.copySync(path.join(examplesPath, exampleName), outputPath);\n      } catch (error) {\n        showGameFileCreationError(i18n, outputPath, error);\n        return;\n      }\n\n      this.props.onOpen(LocalFileStorageProvider, {\n        fileIdentifier: path.join(outputPath, exampleName + '.json'),\n      });\n      sendNewGameCreated(exampleName);\n    });\n  }\n\n  createEmptyGame(i18n: I18nType) {\n    const { outputPath } = this.state;\n    if (!fs || !outputPath) return;\n\n    try {\n      fs.mkdirsSync(outputPath);\n    } catch (error) {\n      showGameFileCreationError(i18n, outputPath, error);\n      return;\n    }\n\n    const project = gd.ProjectHelper.createNewGDJSProject();\n    const filePath = path.join(outputPath, 'game.json');\n    project.setProjectFile(filePath);\n    this.props.onCreate(project, LocalFileStorageProvider, {\n      fileIdentifier: filePath,\n    });\n    sendNewGameCreated('');\n  }\n\n  render() {\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Column noMargin>\n            <Line>\n              <Column>\n                <Text>\n                  <Trans>Choose a game to use as a starter:</Trans>\n                </Text>\n              </Column>\n            </Line>\n            <Line>\n              <Column expand noMargin>\n                <List>\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/platformer.png\"\n                      />\n                    }\n                    primaryText={<Trans>Platformer</Trans>}\n                    secondaryText={\n                      <Trans>\n                        A simple platform game, with coins to collect, moving\n                        platforms and enemies.\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() => this.createFromExample(i18n, 'platformer')}\n                  />\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/space-shooter.png\"\n                      />\n                    }\n                    primaryText={<Trans>8-bit Space Shooter</Trans>}\n                    secondaryText={\n                      <Trans>\n                        A beautiful, retro side-scrolling shooter where you must\n                        defeat incoming enemies with your mecha transforming\n                        spaceship. Huge boss included!\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() =>\n                      this.createFromExample(i18n, 'space-shooter')\n                    }\n                  />\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/geometry-monster.png\"\n                      />\n                    }\n                    primaryText={<Trans>Geometry Monster</Trans>}\n                    secondaryText={\n                      <Trans>\n                        A hyper casual endless game where you have to collect\n                        shapes and avoid bombs, with a progressively increasing\n                        difficulty.\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() =>\n                      this.createFromExample(i18n, 'geometry-monster')\n                    }\n                  />\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/isometric-game.png\"\n                      />\n                    }\n                    primaryText={<Trans>Isometric game</Trans>}\n                    secondaryText={\n                      <Trans>\n                        An example of an isometric game where you can explore a\n                        map with your character.\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() =>\n                      this.createFromExample(i18n, 'isometric-game')\n                    }\n                  />\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/downhill-bike-physics-demo.png\"\n                      />\n                    }\n                    primaryText=\"Downhill Bike Racing\"\n                    secondaryText={\n                      <Trans>\n                        An example of a 2D physics based game, where players\n                        have to reach the end as fast as possible.\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() =>\n                      this.createFromExample(i18n, 'downhill-bike-physics-demo')\n                    }\n                  />\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/pairs.png\"\n                      />\n                    }\n                    primaryText=\"Pairs\"\n                    secondaryText={\n                      <Trans>\n                        Find all matching pairs of cards in this relaxing game.\n                        Use tweens to create smooth, natural animations with a\n                        few events.\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() => this.createFromExample(i18n, 'pairs')}\n                  />\n                  <ListItem\n                    primaryText={<Trans>Empty game</Trans>}\n                    secondaryText={\n                      <Trans>Start a new game from scratch.</Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() => this.createEmptyGame(i18n)}\n                  />\n                </List>\n                <Line alignItems=\"center\" justifyContent=\"center\">\n                  <RaisedButton\n                    label={<Trans>See examples</Trans>}\n                    onClick={() => this.props.onShowExamples()}\n                  />\n                </Line>\n              </Column>\n            </Line>\n            <Divider />\n            <Line expand>\n              <Column expand>\n                <LocalFolderPicker\n                  fullWidth\n                  value={this.state.outputPath}\n                  onChange={this._handleChangePath}\n                  type=\"create-game\"\n                />\n              </Column>\n            </Line>\n          </Column>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { type ResourceSourceComponentProps } from './ResourceSource.flow';\nimport { Component } from 'react';\nimport {\n  isPathInProjectFolder,\n  copyAllToProjectFolder,\n} from './ResourceUtils.js';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\nconst path = optionalRequire('path');\n\nconst gd = global.gd;\n\nexport default [\n  {\n    name: 'localAudioFileOpener',\n    displayName: 'Choose a new audio file',\n    kind: 'audio',\n    component: class LocalAudioFileOpener extends Component<ResourceSourceComponentProps> {\n      chooseResources = (\n        project: gdProject,\n        multiSelections: boolean = true\n      ): Promise<Array<any>> => {\n        const { i18n } = this.props;\n        const options = {\n          multiSelections,\n          title: i18n._(t`Choose an audio file`),\n          name: i18n._(t`Audio files`),\n          extensions: ['wav', 'mp3', 'ogg'],\n        };\n        return selectLocalResourcePath(i18n, project, options).then(\n          resources => {\n            return resources.map(resourcePath => {\n              const audioResource = new gd.AudioResource();\n              const projectPath = path.dirname(project.getProjectFile());\n              audioResource.setFile(path.relative(projectPath, resourcePath));\n              audioResource.setName(path.relative(projectPath, resourcePath));\n\n              return audioResource;\n            });\n          }\n        );\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localFileOpener',\n    displayName: 'Choose a new image',\n    kind: 'image',\n    component: class LocalFileOpener extends Component<ResourceSourceComponentProps> {\n      chooseResources = (\n        project: gdProject,\n        multiSelections: boolean = true\n      ): Promise<Array<any>> => {\n        const { i18n } = this.props;\n        const options = {\n          multiSelections,\n          title: i18n._(t`Choose an image`),\n          name: i18n._(t`Image files`),\n          extensions: ['png', 'jpg'],\n        };\n        return selectLocalResourcePath(i18n, project, options).then(\n          resources => {\n            return resources.map(resourcePath => {\n              const imageResource = new gd.ImageResource();\n              const projectPath = path.dirname(project.getProjectFile());\n              imageResource.setFile(path.relative(projectPath, resourcePath));\n              imageResource.setName(path.relative(projectPath, resourcePath));\n\n              return imageResource;\n            });\n          }\n        );\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localFontFileOpener',\n    displayName: 'Choose a new font file',\n    kind: 'font',\n    component: class LocalFontFileOpener extends Component<ResourceSourceComponentProps> {\n      chooseResources = (\n        project: gdProject,\n        multiSelections: boolean = true\n      ): Promise<Array<any>> => {\n        const { i18n } = this.props;\n        const options = {\n          multiSelections,\n          title: i18n._(t`Choose a font file`),\n          name: i18n._(t`Font files`),\n          extensions: ['ttf', 'otf'],\n        };\n        return selectLocalResourcePath(i18n, project, options).then(\n          resources => {\n            return resources.map(resourcePath => {\n              const fontResource = new gd.FontResource();\n              const projectPath = path.dirname(project.getProjectFile());\n              fontResource.setFile(path.relative(projectPath, resourcePath));\n              fontResource.setName(path.relative(projectPath, resourcePath));\n\n              return fontResource;\n            });\n          }\n        );\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localVideoFileOpener',\n    displayName: 'Choose a new video file',\n    kind: 'video',\n    component: class LocalVideoFileOpener extends Component<ResourceSourceComponentProps> {\n      chooseResources = (\n        project: gdProject,\n        multiSelections: boolean = true\n      ): Promise<Array<any>> => {\n        const { i18n } = this.props;\n        const options = {\n          multiSelections,\n          title: i18n._(t`Choose a video file`),\n          name: i18n._(t`Video files`),\n          extensions: ['mp4'],\n        };\n        return selectLocalResourcePath(i18n, project, options).then(\n          resources => {\n            return resources.map(resourcePath => {\n              const videoResource = new gd.VideoResource();\n              const projectPath = path.dirname(project.getProjectFile());\n              videoResource.setFile(path.relative(projectPath, resourcePath));\n              videoResource.setName(path.relative(projectPath, resourcePath));\n\n              return videoResource;\n            });\n          }\n        );\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localJsonFileOpener',\n    displayName: 'Choose a new json file',\n    kind: 'json',\n    component: class LocalJsonFileOpener extends Component<ResourceSourceComponentProps> {\n      chooseResources = (\n        project: gdProject,\n        multiSelections: boolean = true\n      ): Promise<Array<any>> => {\n        const { i18n } = this.props;\n        const options = {\n          multiSelections,\n          title: i18n._(t`Choose a json file`),\n          name: i18n._(t`JSON file`),\n          extensions: ['json'],\n        };\n        return selectLocalResourcePath(i18n, project, options).then(\n          resources => {\n            return resources.map(resourcePath => {\n              const jsonResource = new gd.JsonResource();\n              const projectPath = path.dirname(project.getProjectFile());\n              jsonResource.setFile(path.relative(projectPath, resourcePath));\n              jsonResource.setName(path.relative(projectPath, resourcePath));\n\n              return jsonResource;\n            });\n          }\n        );\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n];\n\nconst selectLocalResourcePath = (\n  i18n: I18nType,\n  project: gdProject,\n  options: {\n    multiSelections: boolean,\n    title: string,\n    name: string,\n    extensions: Array<string>,\n  }\n): Promise<Array<string>> => {\n  return new Promise((resolve, reject) => {\n    if (!dialog) return reject('Not supported');\n\n    const properties = ['openFile'];\n    if (options.multiSelections) properties.push('multiSelections');\n    const projectPath = path.dirname(project.getProjectFile());\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showOpenDialog(\n      browserWindow,\n      {\n        title: options.title,\n        properties,\n        filters: [{ name: options.name, extensions: options.extensions }],\n        defaultPath: projectPath,\n      },\n      paths => {\n        if (!paths) return resolve([]);\n\n        const outsideProjectFolderPaths = paths.filter(\n          path => !isPathInProjectFolder(project, path)\n        );\n\n        if (outsideProjectFolderPaths.length) {\n          // eslint-disable-next-line\n          const answer = confirm(\n            i18n._(\n              t`This/these file(s) are outside the project folder. Would you like to make a copy of them in your project folder first (recommended)?`\n            )\n          );\n\n          if (answer) {\n            return resolve(copyAllToProjectFolder(project, paths));\n          }\n        }\n\n        return resolve(paths);\n      }\n    );\n  });\n};\n","// @flow\nimport { openPiskel } from './LocalPiskelBridge';\nimport { openJfxr } from './LocalJfxrBridge';\nimport { openYarn } from './LocalYarnBridge';\nimport { type ResourceExternalEditor } from './ResourceExternalEditor.flow';\nimport { sendExternalEditorOpened } from '../Utils/Analytics/EventSender';\n\n/**\n * This is the list of editors that can be used to edit resources\n * on Electron runtime.\n */\nconst editors: Array<ResourceExternalEditor> = [\n  {\n    name: 'piskel-app',\n    displayName: 'Edit with Piskel',\n    kind: 'image',\n    edit: options => {\n      sendExternalEditorOpened('piskel');\n      return openPiskel(options);\n    },\n  },\n  {\n    name: 'Jfxr',\n    displayName: 'Create/Edit a Sound effect with Jfxr (*.wav)',\n    kind: 'audio',\n    edit: options => {\n      sendExternalEditorOpened('jfxr');\n      return openJfxr(options);\n    },\n  },\n  {\n    name: 'Yarn',\n    displayName: 'Create/Edit a Dialogue Tree with Yarn (*.json)',\n    kind: 'json',\n    edit: options => {\n      sendExternalEditorOpened('yarn');\n      return openYarn(options);\n    },\n  },\n];\n\nexport default editors;\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { type ExternalEditorOpenOptions } from './ResourceExternalEditor.flow';\nimport {\n  createOrUpdateResource,\n  getLocalResourceFullPath,\n} from './ResourceUtils.js';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\n/**\n * Open Piskel editor for the specified resources.\n * Take a list of resource names to be edited and will call the callback methods\n * (notably onChangesSaved with the name of the edited resources)\n */\nexport const openPiskel = ({\n  project,\n  resourcesLoader,\n  resourceNames,\n  singleFrame,\n  onChangesSaved,\n  extraOptions,\n}: ExternalEditorOpenOptions) => {\n  if (!electron || !ipcRenderer) return;\n\n  const resources = resourceNames.map((resourceName, originalIndex) => {\n    let resourcePath = getLocalResourceFullPath(project, resourceName);\n    return {\n      resourcePath,\n      resourceName,\n      originalIndex,\n    };\n  });\n\n  const projectPath = path.dirname(project.getProjectFile());\n  const externalEditorData = {\n    ...extraOptions,\n    resources,\n    singleFrame,\n    projectPath,\n  };\n\n  // Listen to events meaning that edition in Piskel is finished\n  ipcRenderer.removeAllListeners('piskel-changes-saved');\n  ipcRenderer.on(\n    'piskel-changes-saved',\n    (event, outputResources, newAnimationName, externalEditorData) => {\n      const metadata = externalEditorData.data\n        ? { pskl: externalEditorData }\n        : null;\n\n      const resourcesManager = project.getResourcesManager();\n      outputResources.forEach(resource => {\n        resource.name = path.relative(projectPath, resource.path); // Still needed for onChangesSaved()\n        createOrUpdateResource(project, new gd.ImageResource(), resource.name);\n      });\n\n      outputResources[0].metadata = metadata;\n      outputResources[0].newAnimationName = newAnimationName;\n      // in case this is for a single frame object, save the metadata in the Image object\n      if (externalEditorData.singleFrame) {\n        if (metadata) {\n          resourcesManager\n            .getResource(path.relative(projectPath, outputResources[0].path))\n            .setMetadata(JSON.stringify(metadata));\n        }\n        onChangesSaved(outputResources);\n      } else {\n        // In case there are multiple frames, pass back the metadata to the editor and let it store it at an appropriate place.\n        // (For example, for sprites, SpritesList.js will save it in the metadata of the gd.Direction).\n\n        onChangesSaved(outputResources);\n      }\n    }\n  );\n\n  // Issue the event to open piskel\n  ipcRenderer.send('piskel-open-then-load-animation', externalEditorData);\n};\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { type ExternalEditorOpenOptions } from './ResourceExternalEditor.flow';\nimport {\n  createOrUpdateResource,\n  getLocalResourceFullPath,\n} from './ResourceUtils.js';\n\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\n/**\n * Open JFXR to create wav resources.\n */\nexport const openJfxr = ({\n  project,\n  resourcesLoader,\n  resourceNames,\n  onChangesSaved,\n  resourcePath,\n  extraOptions,\n}: ExternalEditorOpenOptions) => {\n  if (!electron || !ipcRenderer) return;\n  const projectPath = path.dirname(project.getProjectFile());\n  const initialResourcePath = getLocalResourceFullPath(\n    project,\n    resourceNames[0]\n  );\n\n  const externalEditorData = {\n    resourcePath: initialResourcePath,\n    externalEditorData: extraOptions.externalEditorData,\n    projectPath,\n  };\n\n  ipcRenderer.removeAllListeners('jfxr-changes-saved');\n  ipcRenderer.on(\n    'jfxr-changes-saved',\n    (event, newFilePath, externalEditorData) => {\n      const name = path.relative(projectPath, newFilePath);\n      createOrUpdateResource(project, new gd.AudioResource(), name);\n\n      const metadata = {\n        jfxr: externalEditorData,\n      };\n      project\n        .getResourcesManager()\n        .getResource(name)\n        .setMetadata(JSON.stringify(metadata));\n      onChangesSaved([{ metadata, name }]);\n    }\n  );\n\n  ipcRenderer.send('jfxr-create-wav', externalEditorData);\n};\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { type ExternalEditorOpenOptions } from './ResourceExternalEditor.flow';\nimport {\n  createOrUpdateResource,\n  getLocalResourceFullPath,\n} from './ResourceUtils.js';\n\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\n/**\n * Open YARN to Create/Edit Json Dialogue Tree resources.\n */\nexport const openYarn = ({\n  project,\n  resourcesLoader,\n  resourceNames,\n  onChangesSaved,\n  resourcePath,\n  extraOptions,\n}: ExternalEditorOpenOptions) => {\n  if (!electron || !ipcRenderer) return;\n  const projectPath = path.dirname(project.getProjectFile());\n  const initialResourcePath = getLocalResourceFullPath(\n    project,\n    resourceNames[0]\n  );\n\n  const externalEditorData = {\n    resourcePath: initialResourcePath,\n    externalEditorData: extraOptions.externalEditorData,\n    projectPath,\n  };\n\n  ipcRenderer.removeAllListeners('yarn-changes-saved');\n  ipcRenderer.on('yarn-changes-saved', (event, newFilePath) => {\n    const name = path.relative(projectPath, newFilePath);\n    createOrUpdateResource(project, new gd.JsonResource(), name);\n    onChangesSaved([{ name }]);\n  });\n\n  ipcRenderer.send('yarn-create-json', externalEditorData);\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport localFileSystem from '../LocalFileSystem';\nimport optionalRequire from '../../../Utils/OptionalRequire';\nimport { timeFunction } from '../../../Utils/TimeFunction';\nimport { findGDJS } from '../../../GameEngineFinder/LocalGDJSFinder';\nimport LocalNetworkPreviewDialog from './LocalNetworkPreviewDialog';\nimport assignIn from 'lodash/assignIn';\nimport { type PreviewOptions } from '../../PreviewLauncher.flow';\nimport { findLocalIp } from './LocalIpFinder';\nimport SubscriptionChecker from '../../../Profile/SubscriptionChecker';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst BrowserWindow = electron ? electron.remote.BrowserWindow : null;\nconst gd = global.gd;\n\ntype Props = {|\n  onExport?: () => void,\n  onChangeSubscription?: () => void,\n|};\n\ntype State = {\n  networkPreviewDialogOpen: boolean,\n  networkPreviewHost: ?string,\n  networkPreviewPort: ?number,\n  networkPreviewError: ?any,\n  previewGamePath: ?string,\n  devToolsOpen: boolean,\n  previewBrowserWindowConfig: ?{\n    width: number,\n    height: number,\n    useContentSize: boolean,\n    title: string,\n    backgroundColor: string,\n  },\n};\n\nexport default class LocalPreviewLauncher extends React.Component<\n  Props,\n  State\n> {\n  canDoNetworkPreview = () => true;\n\n  state = {\n    networkPreviewDialogOpen: false,\n    networkPreviewHost: null,\n    networkPreviewPort: null,\n    networkPreviewError: null,\n    previewGamePath: null,\n    devToolsOpen: false,\n    previewBrowserWindowConfig: null,\n  };\n  _subscriptionChecker: ?SubscriptionChecker = null;\n\n  _openPreviewBrowserWindow = () => {\n    if (\n      !BrowserWindow ||\n      !this.state.previewBrowserWindowConfig ||\n      !this.state.previewGamePath\n    )\n      return;\n\n    const win = new BrowserWindow(this.state.previewBrowserWindowConfig);\n    win.loadURL(`file://${this.state.previewGamePath}/index.html`);\n    win.webContents.on('devtools-opened', () => {\n      this.setState({ devToolsOpen: true });\n    });\n    win.webContents.on('devtools-closed', () => {\n      this.setState({ devToolsOpen: false });\n    });\n    if (this.state.devToolsOpen) win.openDevTools();\n  };\n\n  _openPreviewWindow = (\n    project: gdProject,\n    gamePath: string,\n    options: PreviewOptions\n  ): void => {\n    this.setState(\n      {\n        previewBrowserWindowConfig: {\n          width: project.getGameResolutionWidth(),\n          height: project.getGameResolutionHeight(),\n          useContentSize: true,\n          title: `Preview of ${project.getName()}`,\n          backgroundColor: '#000000',\n        },\n        previewGamePath: gamePath,\n      },\n      () => {\n        if (!options.networkPreview) {\n          this._openPreviewBrowserWindow();\n        } else {\n          if (!ipcRenderer) return;\n\n          ipcRenderer.removeAllListeners('serve-folder-done');\n          ipcRenderer.removeAllListeners('local-network-ips');\n          ipcRenderer.on('serve-folder-done', (event, err, serverParams) => {\n            if (err) {\n              this.setState({\n                networkPreviewDialogOpen: true,\n                networkPreviewPort: null,\n                networkPreviewHost: null,\n                networkPreviewError: err,\n              });\n            } else {\n              this.setState({\n                networkPreviewDialogOpen: true,\n                networkPreviewPort: serverParams.port,\n              });\n            }\n\n            setTimeout(() => this._checkSubscription());\n          });\n          ipcRenderer.on('local-network-ips', (event, ipAddresses) => {\n            this.setState({\n              networkPreviewHost: findLocalIp(ipAddresses),\n            });\n          });\n          ipcRenderer.send('serve-folder', {\n            root: gamePath,\n          });\n          ipcRenderer.send('get-local-network-ips');\n        }\n      }\n    );\n  };\n\n  _prepareExporter = (): Promise<any> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const outputDir = path.join(fileSystem.getTempDir(), 'preview');\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        outputDir,\n        exporter,\n      };\n    });\n  };\n\n  launchLayoutPreview = (\n    project: gdProject,\n    layout: gdLayout,\n    options: PreviewOptions\n  ): Promise<any> => {\n    if (!project || !layout) return Promise.reject();\n\n    return this._prepareExporter().then(({ outputDir, exporter }) => {\n      timeFunction(\n        () => {\n          exporter.exportLayoutForPixiPreview(project, layout, outputDir);\n          exporter.delete();\n          this._openPreviewWindow(project, outputDir, options);\n        },\n        time => console.info(`Preview took ${time}ms`)\n      );\n    });\n  };\n\n  launchExternalLayoutPreview = (\n    project: gdProject,\n    layout: gdLayout,\n    externalLayout: gdExternalLayout,\n    options: PreviewOptions\n  ): Promise<any> => {\n    if (!project || !externalLayout) return Promise.reject();\n\n    return this._prepareExporter().then(({ outputDir, exporter }) => {\n      timeFunction(\n        () => {\n          exporter.exportExternalLayoutForPixiPreview(\n            project,\n            layout,\n            externalLayout,\n            outputDir\n          );\n          exporter.delete();\n          this._openPreviewWindow(project, outputDir, options);\n        },\n        time => console.info(`Preview took ${time}ms`)\n      );\n    });\n  };\n\n  _checkSubscription = () => {\n    if (!this._subscriptionChecker) return true;\n\n    return this._subscriptionChecker.checkHasSubscription();\n  };\n\n  render() {\n    const {\n      networkPreviewDialogOpen,\n      networkPreviewHost,\n      networkPreviewPort,\n      networkPreviewError,\n    } = this.state;\n    return (\n      <React.Fragment>\n        <SubscriptionChecker\n          ref={subscriptionChecker =>\n            (this._subscriptionChecker = subscriptionChecker)\n          }\n          onChangeSubscription={() => {\n            this.setState({ networkPreviewDialogOpen: false });\n            if (this.props.onChangeSubscription)\n              this.props.onChangeSubscription();\n          }}\n          id=\"Preview over wifi\"\n          title={<Trans>Preview over wifi</Trans>}\n          mode=\"try\"\n        />\n        <LocalNetworkPreviewDialog\n          open={networkPreviewDialogOpen}\n          url={\n            networkPreviewHost && networkPreviewPort\n              ? `${networkPreviewHost}:${networkPreviewPort}`\n              : null\n          }\n          error={networkPreviewError}\n          onClose={() => this.setState({ networkPreviewDialogOpen: false })}\n          onExport={this.props.onExport}\n          onRunPreviewLocally={this._openPreviewBrowserWindow}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../../UI/Dialog';\nimport FlatButton from '../../../UI/FlatButton';\nimport TextField from '../../../UI/TextField';\nimport Text from '../../../UI/Text';\nimport { Line } from '../../../UI/Grid';\nimport PlaceholderLoader from '../../../UI/PlaceholderLoader';\n\ntype Props = {|\n  open: boolean,\n  url: ?string,\n  onClose: () => void,\n  onExport: ?() => void,\n  onRunPreviewLocally: () => void,\n  error: ?any,\n|};\n\nexport default class LocalNetworkDialog extends React.Component<Props, {}> {\n  render() {\n    const {\n      url,\n      open,\n      error,\n      onExport,\n      onClose,\n      onRunPreviewLocally,\n    } = this.props;\n    if (!open) return null;\n\n    return (\n      <Dialog\n        actions={[\n          <FlatButton\n            key=\"close\"\n            label={<Trans>Close</Trans>}\n            primary\n            onClick={onClose}\n          />,\n        ]}\n        secondaryActions={[\n          onExport && (\n            <FlatButton\n              key=\"export\"\n              label={<Trans>Export game</Trans>}\n              onClick={onExport}\n            />\n          ),\n          <FlatButton\n            key=\"run-preview-locally\"\n            label={<Trans>Run on this computer</Trans>}\n            onClick={onRunPreviewLocally}\n          />,\n        ]}\n        modal\n        open={open}\n        onRequestClose={onClose}\n      >\n        {error && (\n          <Line>\n            <Text>\n              <Trans>\n                Unable to start the server for the preview! Make sure that you\n                are authorized to run servers on this computer. Otherwise, use\n                classic preview to test your game.\n              </Trans>\n            </Text>\n          </Line>\n        )}\n        {!error && !url && <PlaceholderLoader />}\n        {!error && url && (\n          <div>\n            <Line>\n              <Text>\n                <Trans>\n                  Your preview is ready! On your mobile or tablet, open your\n                  browser and enter in the address bar:\n                </Trans>\n              </Text>\n            </Line>\n            <TextField value={url} fullWidth />\n            <Line>\n              <Text>\n                <Trans>\n                  Please note that your device should be connected on the same\n                  network as this computer.\n                </Trans>\n              </Text>\n            </Line>\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n","// @flow\n\nexport const findLocalIp = (ipAddresses: Array<string>): ?string => {\n  if (!ipAddresses.length) return null;\n\n  let firstLocalIp = ipAddresses.find(\n    ipAddress => ipAddress.indexOf('192.168') === 0\n  );\n  if (firstLocalIp) return firstLocalIp;\n\n  firstLocalIp = ipAddresses.find(ipAddress => ipAddress.indexOf('192') === 0);\n  if (firstLocalIp) return firstLocalIp;\n\n  return ipAddresses[0];\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { type Exporter } from '../ExportDialog';\nimport { localCordovaExportPipeline } from './LocalCordovaExport';\nimport { localElectronExportPipeline } from './LocalElectronExport';\nimport { localHTML5ExportPipeline } from './LocalHTML5Export';\nimport { localCocos2dExportPipeline } from './LocalCocos2dExport';\nimport { localFacebookInstantGamesExportPipeline } from './LocalFacebookInstantGamesExport';\nimport { localOnlineCordovaExportPipeline } from './LocalOnlineCordovaExport.js';\nimport { localOnlineElectronExportPipeline } from './LocalOnlineElectronExport.js';\nimport { localOnlineWebExportPipeline } from './LocalOnlineWebExport';\nimport PhoneIphone from '@material-ui/icons/PhoneIphone';\nimport LaptopMac from '@material-ui/icons/LaptopMac';\nimport Folder from '@material-ui/icons/Folder';\nimport Facebook from '../../UI/CustomSvgIcons/Facebook';\nimport Cordova from '../../UI/CustomSvgIcons/Cordova';\nimport Chrome from '../../UI/CustomSvgIcons/Chrome';\n\nexport const getLocalExporters = (): Array<Exporter> => [\n  {\n    name: <Trans>Android (&amp; iOS coming soon)</Trans>,\n    renderIcon: props => <PhoneIphone {...props} />,\n    helpPage: '/publishing/android_and_ios',\n    description: (\n      <Trans>\n        Package your game for Android directly from GDevelop. iOS support is\n        coming soon!\n      </Trans>\n    ),\n    key: 'localonlinecordovaexport',\n    exportPipeline: localOnlineCordovaExportPipeline,\n  },\n  {\n    name: <Trans>Web (upload online)</Trans>,\n    renderIcon: props => <Chrome {...props} />,\n    helpPage: '/publishing/web',\n    description: (\n      <Trans>\n        Upload your game online directly from GDevelop and share the link to\n        players. Play to your game using your browser on computers and mobile\n        phones.\n      </Trans>\n    ),\n    key: 'localonlinewebexport',\n    exportPipeline: localOnlineWebExportPipeline,\n  },\n  {\n    name: <Trans>Local folder</Trans>,\n    renderIcon: props => <Folder {...props} />,\n    helpPage: '/publishing/html5_game_in_a_local_folder',\n    description: (\n      <Trans>\n        Build the game locally as a HTML5 game. You can then publish it on\n        website like Kongregate, Game Jolt, itch.io, Poki...\n      </Trans>\n    ),\n    key: 'localexport',\n    exportPipeline: localHTML5ExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>Facebook Instant Games</Trans>,\n    renderIcon: props => <Facebook {...props} />,\n    helpPage: '/publishing/publishing-to-facebook-instant-games',\n    description: (\n      <Trans>\n        Package your game as a Facebook Instant Games that can be played on\n        Facebook Messenger.\n      </Trans>\n    ),\n    key: 'localfacebookinstantgames',\n    exportPipeline: localFacebookInstantGamesExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>iOS &amp; Android (manual)</Trans>,\n    renderIcon: props => <Cordova {...props} />,\n    helpPage: '/publishing/android_and_ios_with_cordova',\n    description: (\n      <Trans>\n        Build the game locally as a Cordova project, and export it manually to\n        iOS or Android with Cordova developers tools.\n      </Trans>\n    ),\n    key: 'localcordovaexport',\n    exportPipeline: localCordovaExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>Windows/macOS/Linux</Trans>,\n    renderIcon: props => <LaptopMac {...props} />,\n    helpPage: '/publishing/windows-macos-linux',\n    description: (\n      <Trans>\n        Package your game as an app for Windows, macOS or Linux directly from\n        GDevelop.\n      </Trans>\n    ),\n    key: 'localonlineelectronexport',\n    exportPipeline: localOnlineElectronExportPipeline,\n  },\n  {\n    name: <Trans>Windows/macOS/Linux (manual)</Trans>,\n    renderIcon: props => <LaptopMac {...props} />,\n    helpPage: '/publishing/windows-macos-linux-with-electron',\n    description: (\n      <Trans>\n        Build the game locally and export it manually to Windows, macOS or Linux\n        with third-party developer tools.\n      </Trans>\n    ),\n    key: 'localelectronexport',\n    exportPipeline: localElectronExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>Cocos2d-JS</Trans>,\n    renderIcon: props => <PhoneIphone {...props} />,\n    helpPage: '/publishing/android_and_ios_with_cocos2d-js',\n    description: (\n      <Trans>\n        Export your game using Cocos2d-JS game engine. The game can be compiled\n        for Android or iOS if you install Cocos2d-JS developer tools.\n      </Trans>\n    ),\n    key: 'localcocos2dexport',\n    exportPipeline: localCocos2dExportPipeline,\n    experimental: true,\n  },\n];\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/CordovaExport';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype ExportState = {\n  outputDir: string,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n|};\n\ntype ExportOutput = null;\n\ntype ResourcesDownloadOutput = null;\n\ntype CompressionOutput = null;\n\nexport const localCordovaExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-cordova',\n\n  getInitialExportState: (project: gdProject) => ({\n    outputDir: project.getLastCompilationDirectory(),\n  }),\n\n  canLaunchBuild: exportState => !!exportState.outputDir,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <Column noMargin>\n          <ExplanationHeader />\n        </Column>\n      </Line>\n      <Line>\n        <LocalFolderPicker\n          type=\"export\"\n          value={exportState.outputDir}\n          defaultPath={project.getLastCompilationDirectory()}\n          onChange={outputDir => {\n            updateExportState(() => ({ outputDir }));\n          }}\n          fullWidth\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForCordova', true);\n    exporter.exportWholePixiProject(\n      context.project,\n      context.exportState.outputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve(null);\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve(null);\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    return Promise.resolve(null);\n  },\n\n  renderDoneFooter: ({ exportState, onClose }) => {\n    const openExportFolder = () => {\n      if (shell) shell.openItem(exportState.outputDir);\n    };\n\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <RaisedButton\n            key=\"open\"\n            label={<Trans>Open folder</Trans>}\n            primary={true}\n            onClick={openExportFolder}\n          />\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/ElectronExport';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype ExportState = {\n  outputDir: string,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n|};\n\ntype ExportOutput = null;\n\ntype ResourcesDownloadOutput = null;\n\ntype CompressionOutput = null;\n\nexport const localElectronExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-electron',\n\n  getInitialExportState: (project: gdProject) => ({\n    outputDir: project.getLastCompilationDirectory(),\n  }),\n\n  canLaunchBuild: exportState => !!exportState.outputDir,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <Column noMargin>\n          <ExplanationHeader />\n        </Column>\n      </Line>\n      <Line>\n        <LocalFolderPicker\n          type=\"export\"\n          value={exportState.outputDir}\n          defaultPath={project.getLastCompilationDirectory()}\n          onChange={outputDir => {\n            updateExportState(() => ({ outputDir }));\n          }}\n          fullWidth\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForElectron', true);\n    exporter.exportWholePixiProject(\n      context.project,\n      context.exportState.outputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve(null);\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve(null);\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    return Promise.resolve(null);\n  },\n\n  renderDoneFooter: ({ exportState, onClose }) => {\n    const openExportFolder = () => {\n      if (shell) shell.openItem(exportState.outputDir);\n    };\n\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <RaisedButton\n            key=\"open\"\n            label={<Trans>Open folder</Trans>}\n            primary={true}\n            onClick={openExportFolder}\n          />\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport { ExplanationHeader, DoneFooter } from '../GenericExporters/HTML5Export';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype ExportState = {\n  outputDir: string,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n|};\n\ntype ExportOutput = null;\n\ntype ResourcesDownloadOutput = null;\n\ntype CompressionOutput = null;\n\nexport const localHTML5ExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-html5',\n\n  getInitialExportState: (project: gdProject) => ({\n    outputDir: project.getLastCompilationDirectory(),\n  }),\n\n  canLaunchBuild: exportState => !!exportState.outputDir,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <ExplanationHeader />\n      </Line>\n      <Line>\n        <LocalFolderPicker\n          type=\"export\"\n          value={exportState.outputDir}\n          defaultPath={project.getLastCompilationDirectory()}\n          onChange={outputDir => {\n            updateExportState(() => ({ outputDir }));\n          }}\n          fullWidth\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Export as a HTML5 game</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exporter.exportWholePixiProject(\n      context.project,\n      context.exportState.outputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve(null);\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve(null);\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    return Promise.resolve(null);\n  },\n\n  renderDoneFooter: ({ exportState, onClose }) => {\n    const openExportFolder = () => {\n      if (shell) shell.openItem(exportState.outputDir);\n    };\n\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <RaisedButton\n            fullWidth\n            primary\n            onClick={() => openExportFolder()}\n            label={<Trans>Open the exported game folder</Trans>}\n          />\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport Toggle from '../../UI/Toggle';\nimport {\n  DoneFooter,\n  ExplanationHeader,\n} from '../GenericExporters/Cocos2dExport';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype ExportState = {\n  outputDir: string,\n  debugMode: boolean,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n|};\n\ntype ExportOutput = null;\n\ntype ResourcesDownloadOutput = null;\n\ntype CompressionOutput = null;\n\nexport const localCocos2dExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-cocos2d',\n\n  getInitialExportState: (project: gdProject) => ({\n    outputDir: project.getLastCompilationDirectory(),\n    debugMode: false,\n  }),\n\n  canLaunchBuild: exportState => !!exportState.outputDir,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <ExplanationHeader />\n      </Line>\n      <Line>\n        <LocalFolderPicker\n          type=\"export\"\n          value={exportState.outputDir}\n          defaultPath={project.getLastCompilationDirectory()}\n          onChange={outputDir => {\n            updateExportState(prevState => ({ ...prevState, outputDir }));\n          }}\n          fullWidth\n        />\n      </Line>\n      <Line>\n        <Toggle\n          onToggle={(e, check) =>\n            updateExportState(prevState => ({\n              ...prevState,\n              debugMode: check,\n            }))\n          }\n          toggled={exportState.debugMode}\n          labelPosition=\"right\"\n          label={\n            <Trans>\n              Debug mode (show FPS counter and stats in the bottom left)\n            </Trans>\n          }\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    exporter.exportWholeCocos2dProject(\n      context.project,\n      context.exportState.debugMode,\n      context.exportState.outputDir\n    );\n    exporter.delete();\n\n    return Promise.resolve(null);\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve(null);\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    return Promise.resolve(null);\n  },\n\n  renderDoneFooter: ({ exportState, onClose }) => {\n    const openExportFolder = () => {\n      if (shell) shell.openItem(exportState.outputDir);\n    };\n\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <RaisedButton\n            key=\"open\"\n            label={<Trans>Open folder</Trans>}\n            primary={true}\n            onClick={openExportFolder}\n          />\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport LocalFilePicker from '../../UI/LocalFilePicker';\nimport { archiveLocalFolder } from '../../Utils/LocalArchiver';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/FacebookInstantGamesExport';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype ExportState = {\n  archiveOutputFilename: string,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  temporaryOutputDir: string,\n|};\n\ntype ExportOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype ResourcesDownloadOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype CompressionOutput = string;\n\nexport const localFacebookInstantGamesExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-facebook-instant-games',\n\n  getInitialExportState: (project: gdProject) => ({\n    archiveOutputFilename: app\n      ? path.join(app.getPath('documents'), 'fb-instant-game.zip')\n      : '',\n  }),\n\n  canLaunchBuild: exportState => !!exportState.archiveOutputFilename,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <ExplanationHeader />\n      </Line>\n      <Line>\n        <LocalFilePicker\n          title={'Facebook Instant Games export zip file'}\n          message={\n            'Choose where to save the exported file for Facebook Instant Games'\n          }\n          filters={[\n            {\n              name: 'Compressed file for Facebook Instant Games',\n              extensions: ['zip'],\n            },\n          ]}\n          value={exportState.archiveOutputFilename}\n          defaultPath={app ? app.getPath('documents') : ''}\n          onChange={value =>\n            updateExportState(() => ({ archiveOutputFilename: value }))\n          }\n          fullWidth\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n      const temporaryOutputDir = path.join(\n        fileSystem.getTempDir(),\n        'FacebookInstantGamesExport'\n      );\n      fileSystem.mkDir(temporaryOutputDir);\n      fileSystem.clearDir(temporaryOutputDir);\n\n      return {\n        exporter,\n        temporaryOutputDir,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, temporaryOutputDir }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForFacebookInstantGames', true);\n    exporter.exportWholePixiProject(\n      context.project,\n      temporaryOutputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    return archiveLocalFolder({\n      path: temporaryOutputDir,\n      outputFilename: context.exportState.archiveOutputFilename,\n    });\n  },\n\n  renderDoneFooter: ({ exportState, onClose }) => {\n    const openExportFolder = () => {\n      if (shell && path)\n        shell.openItem(path.dirname(exportState.archiveOutputFilename));\n    };\n\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <RaisedButton\n            key=\"open\"\n            label={<Trans>Open folder</Trans>}\n            primary={true}\n            onClick={openExportFolder}\n          />\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport React, { PureComponent } from 'react';\nimport TextField from '../TextField';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport RaisedButton from '../RaisedButton';\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'baseline',\n  },\n  button: {\n    marginLeft: 10,\n  },\n  textField: {\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  value: string,\n  onChange: string => void,\n  title: string,\n  message: string,\n  defaultPath?: string,\n  fullWidth?: boolean,\n  filters: Array<{\n    name: string,\n    extensions: Array<string>,\n  }>,\n|};\n\nexport default class LocalFilePicker extends PureComponent<Props, *> {\n  onChooseFolder = () => {\n    if (!dialog || !electron) return;\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showSaveDialog(\n      browserWindow,\n      {\n        title: this.props.title,\n        filters: this.props.filters,\n        message: this.props.message,\n        defaultPath: this.props.defaultPath,\n      },\n      filename => {\n        this.props.onChange(filename || '');\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          ...styles.container,\n          width: this.props.fullWidth ? '100%' : undefined,\n        }}\n      >\n        <TextField\n          margin=\"dense\"\n          style={styles.textField}\n          type=\"text\"\n          hintText={t`Choose a file`}\n          value={this.props.value}\n          onChange={(event, value) => this.props.onChange(value)}\n        />\n        <RaisedButton\n          label={<Trans>Choose</Trans>}\n          style={styles.button}\n          onClick={this.onChooseFolder}\n        />\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type Build,\n  buildCordovaAndroid,\n  getBuildFileUploadOptions,\n} from '../../Utils/GDevelopServices/Build';\nimport { uploadLocalFile } from './LocalFileUploader';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport { archiveLocalFolder } from '../../Utils/LocalArchiver';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport localFileSystem from './LocalFileSystem';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport { ExplanationHeader } from '../GenericExporters/OnlineCordovaExport';\nconst path = optionalRequire('path');\nconst os = optionalRequire('os');\nconst gd = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  temporaryOutputDir: string,\n|};\n\ntype ExportOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype ResourcesDownloadOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype CompressionOutput = string;\n\nexport const localOnlineCordovaExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-online-cordova',\n  onlineBuildType: 'cordova-build',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Packaging for Android</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n      const temporaryOutputDir = path.join(\n        fileSystem.getTempDir(),\n        'OnlineCordovaExport'\n      );\n      fileSystem.mkDir(temporaryOutputDir);\n      fileSystem.clearDir(temporaryOutputDir);\n\n      return {\n        exporter,\n        temporaryOutputDir,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, temporaryOutputDir }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForCordova', true);\n    exporter.exportWholePixiProject(\n      context.project,\n      temporaryOutputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    const archiveOutputDir = os.tmpdir();\n    return archiveLocalFolder({\n      path: temporaryOutputDir,\n      outputFilename: path.join(archiveOutputDir, 'game-archive.zip'),\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    outputFile: CompressionOutput\n  ): Promise<string> => {\n    return getBuildFileUploadOptions().then(uploadOptions => {\n      return uploadLocalFile(\n        outputFile,\n        uploadOptions,\n        context.updateStepProgress\n      ).then(() => uploadOptions.key);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildCordovaAndroid(\n      getAuthorizationHeader,\n      profile.uid,\n      uploadBucketKey\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type Build,\n  buildElectron,\n  getBuildFileUploadOptions,\n} from '../../Utils/GDevelopServices/Build';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport { uploadLocalFile } from './LocalFileUploader';\nimport { archiveLocalFolder } from '../../Utils/LocalArchiver';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport localFileSystem from './LocalFileSystem';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport {\n  type ExportState,\n  SetupExportHeader,\n} from '../GenericExporters/OnlineElectronExport';\nconst path = optionalRequire('path');\nconst os = optionalRequire('os');\nconst gd = global.gd;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  temporaryOutputDir: string,\n|};\n\ntype ExportOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype ResourcesDownloadOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype CompressionOutput = string;\n\nexport const localOnlineElectronExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-online-electron',\n  onlineBuildType: 'electron-build',\n\n  getInitialExportState: () => ({\n    targets: ['winExe'],\n  }),\n\n  canLaunchBuild: (exportState: ExportState) => !!exportState.targets.length,\n\n  renderHeader: props => <SetupExportHeader {...props} />,\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n      const temporaryOutputDir = path.join(\n        fileSystem.getTempDir(),\n        'OnlineElectronExport'\n      );\n      fileSystem.mkDir(temporaryOutputDir);\n      fileSystem.clearDir(temporaryOutputDir);\n\n      return {\n        exporter,\n        temporaryOutputDir,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, temporaryOutputDir }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForElectron', true);\n    exporter.exportWholePixiProject(\n      context.project,\n      temporaryOutputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    const archiveOutputDir = os.tmpdir();\n    return archiveLocalFolder({\n      path: temporaryOutputDir,\n      outputFilename: path.join(archiveOutputDir, 'game-archive.zip'),\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    outputFile: CompressionOutput\n  ): Promise<string> => {\n    return getBuildFileUploadOptions().then(uploadOptions => {\n      return uploadLocalFile(\n        outputFile,\n        uploadOptions,\n        context.updateStepProgress\n      ).then(() => uploadOptions.key);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildElectron(\n      getAuthorizationHeader,\n      profile.uid,\n      uploadBucketKey,\n      exportState.targets\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type Build,\n  buildWeb,\n  getBuildFileUploadOptions,\n} from '../../Utils/GDevelopServices/Build';\nimport { uploadLocalFile } from './LocalFileUploader';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport { archiveLocalFolder } from '../../Utils/LocalArchiver';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport localFileSystem from './LocalFileSystem';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport { ExplanationHeader } from '../GenericExporters/OnlineWebExport';\nconst path = optionalRequire('path');\nconst os = optionalRequire('os');\nconst gd = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  temporaryOutputDir: string,\n|};\n\ntype ExportOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype ResourcesDownloadOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype CompressionOutput = string;\n\nexport const localOnlineWebExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-online-web',\n  onlineBuildType: 'web-build',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Publish online</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n      const temporaryOutputDir = path.join(\n        fileSystem.getTempDir(),\n        'OnlineWebExport'\n      );\n      fileSystem.mkDir(temporaryOutputDir);\n      fileSystem.clearDir(temporaryOutputDir);\n\n      return {\n        exporter,\n        temporaryOutputDir,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, temporaryOutputDir }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exporter.exportWholePixiProject(\n      context.project,\n      temporaryOutputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    const archiveOutputDir = os.tmpdir();\n    return archiveLocalFolder({\n      path: temporaryOutputDir,\n      outputFilename: path.join(archiveOutputDir, 'game-archive.zip'),\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    outputFile: CompressionOutput\n  ): Promise<string> => {\n    return getBuildFileUploadOptions().then(uploadOptions => {\n      return uploadLocalFile(\n        outputFile,\n        uploadOptions,\n        context.updateStepProgress\n      ).then(() => uploadOptions.key);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildWeb(getAuthorizationHeader, profile.uid, uploadBucketKey);\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport MainFrame from '.';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\nimport { isMacLike } from '../Utils/Platform';\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\n\ntype Props = {|\n  children: React.Element<typeof MainFrame>,\n  i18n: I18nType,\n|};\n\ntype MainMenuEvent =\n  | 'main-menu-open'\n  | 'main-menu-save'\n  | 'main-menu-save-as'\n  | 'main-menu-close'\n  | 'main-menu-export'\n  | 'main-menu-create'\n  | 'main-menu-open-project-manager'\n  | 'main-menu-open-start-page'\n  | 'main-menu-open-debugger'\n  | 'main-menu-open-about'\n  | 'main-menu-open-preferences'\n  | 'main-menu-open-language'\n  | 'main-menu-open-profile'\n  | 'update-status';\n\ntype MenuItemTemplate =\n  | {|\n      onClickSendEvent?: MainMenuEvent,\n      onClickOpenLink?: string,\n      accelerator?: string,\n      enabled?: boolean,\n      label?: string,\n    |}\n  | {|\n      submenu: Array<MenuItemTemplate>,\n      label: string,\n    |}\n  | {|\n      submenu: Array<MenuItemTemplate>,\n      role: string,\n    |}\n  | {|\n      type: 'separator',\n    |}\n  | {|\n      role: string,\n    |};\n\ntype RootMenuTemplate =\n  | {|\n      label: string,\n      submenu: Array<MenuItemTemplate>,\n    |}\n  | {|\n      role: string,\n      submenu: Array<MenuItemTemplate>,\n    |};\n\n/**\n * Forward events received from Electron main process\n * to the underlying child React component.\n */\nclass ElectronMainMenu extends React.Component<Props, {||}> {\n  _editor: ?MainFrame;\n  _language: ?string;\n\n  componentDidMount() {\n    if (!ipcRenderer) return;\n\n    ipcRenderer.on(\n      ('main-menu-open': MainMenuEvent),\n      event => this._editor && this._editor.chooseProject()\n    );\n    ipcRenderer.on(\n      ('main-menu-save': MainMenuEvent),\n      event => this._editor && this._editor.saveProject()\n    );\n    ipcRenderer.on(\n      ('main-menu-save-as': MainMenuEvent),\n      event => this._editor && this._editor.saveProjectAs()\n    );\n    ipcRenderer.on(\n      ('main-menu-close': MainMenuEvent),\n      event => this._editor && this._editor.askToCloseProject()\n    );\n    ipcRenderer.on(\n      ('main-menu-export': MainMenuEvent),\n      event => this._editor && this._editor.openExportDialog()\n    );\n    ipcRenderer.on(\n      ('main-menu-create': MainMenuEvent),\n      event => this._editor && this._editor.openCreateDialog()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-project-manager': MainMenuEvent),\n      event => this._editor && this._editor.openProjectManager()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-start-page': MainMenuEvent),\n      event => this._editor && this._editor.openStartPage()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-debugger': MainMenuEvent),\n      event => this._editor && this._editor.openDebugger()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-about': MainMenuEvent),\n      event => this._editor && this._editor.openAboutDialog()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-preferences': MainMenuEvent),\n      event => this._editor && this._editor.openPreferences()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-language': MainMenuEvent),\n      event => this._editor && this._editor.openLanguage()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-profile': MainMenuEvent),\n      event => this._editor && this._editor.openProfile()\n    );\n    ipcRenderer.on(\n      ('update-status': MainMenuEvent),\n      (event, status) => this._editor && this._editor.setUpdateStatus(status)\n    );\n\n    this._buildAndSendMenuTemplate();\n  }\n\n  componentDidUpdate() {\n    if (this.props.i18n.language !== this._language) {\n      this._buildAndSendMenuTemplate();\n      this._language = this.props.i18n.language;\n    }\n  }\n\n  _buildAndSendMenuTemplate() {\n    const { i18n } = this.props;\n    const fileTemplate = {\n      label: i18n._(t`File`),\n      submenu: [\n        {\n          label: i18n._(t`Create a New Project...`),\n          accelerator: 'CommandOrControl+N',\n          onClickSendEvent: 'main-menu-create',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Open...`),\n          accelerator: 'CommandOrControl+O',\n          onClickSendEvent: 'main-menu-open',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Save`),\n          accelerator: 'CommandOrControl+S',\n          onClickSendEvent: 'main-menu-save',\n        },\n        {\n          label: i18n._(t`Save as...`),\n          accelerator: 'CommandOrControl+Alt+S',\n          onClickSendEvent: 'main-menu-save-as',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Export (web, iOS, Android)...`),\n          onClickSendEvent: 'main-menu-export',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Close Project`),\n          accelerator: 'CommandOrControl+Shift+W',\n          onClickSendEvent: 'main-menu-close',\n        },\n      ],\n    };\n    if (!isMacLike()) {\n      fileTemplate.submenu.push(\n        { type: 'separator' },\n        {\n          label: i18n._(t`My Profile`),\n          onClickSendEvent: 'main-menu-open-profile',\n        },\n        {\n          label: i18n._(t`Preferences`),\n          onClickSendEvent: 'main-menu-open-preferences',\n        },\n        {\n          label: i18n._(t`Language`),\n          onClickSendEvent: 'main-menu-open-language',\n        }\n      );\n    }\n\n    const editTemplate = {\n      label: i18n._(t`Edit`),\n      submenu: [\n        { role: 'undo' },\n        { role: 'redo' },\n        { type: 'separator' },\n        { role: 'cut' },\n        { role: 'copy' },\n        { role: 'paste' },\n        { role: 'pasteandmatchstyle' },\n        { role: 'delete' },\n        { role: 'selectall' },\n      ],\n    };\n\n    const viewTemplate = {\n      label: i18n._(t`View`),\n      submenu: [\n        {\n          label: i18n._(t`Show Project Manager`),\n          accelerator: 'CommandOrControl+Alt+P',\n          onClickSendEvent: 'main-menu-open-project-manager',\n        },\n        {\n          label: i18n._(t`Show Start Page`),\n          onClickSendEvent: 'main-menu-open-start-page',\n        },\n        {\n          label: i18n._(t`Open Debugger`),\n          onClickSendEvent: 'main-menu-open-debugger',\n        },\n        { type: 'separator' },\n        { role: 'toggledevtools' },\n        { type: 'separator' },\n        { role: 'togglefullscreen' },\n      ],\n    };\n\n    const windowTemplate = {\n      role: 'window',\n      submenu: [{ role: 'minimize' }],\n    };\n\n    const helpTemplate = {\n      role: 'help',\n      submenu: [\n        {\n          label: i18n._(t`GDevelop website`),\n          onClickOpenLink: 'http://gdevelop-app.com',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Community Forums`),\n          onClickOpenLink: 'https://forum.gdevelop-app.com',\n        },\n        {\n          label: i18n._(t`Community Discord Chat`),\n          onClickOpenLink: 'https://discord.gg/rjdYHvj',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Contribute to GDevelop`),\n          onClickOpenLink: 'https://gdevelop-app.com/contribute/',\n        },\n        {\n          label: i18n._(t`Create Extensions for GDevelop`),\n          onClickOpenLink:\n            'https://github.com/4ian/GDevelop/blob/master/newIDE/README-extensions.md',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Help to Translate GDevelop`),\n          onClickOpenLink: 'https://crowdin.com/project/gdevelop',\n        },\n        {\n          label: i18n._(t`Report a wrong translation`),\n          onClickOpenLink: 'https://github.com/4ian/GDevelop/issues/969',\n        },\n      ],\n    };\n    if (!isMacLike()) {\n      helpTemplate.submenu.push(\n        { type: 'separator' },\n        {\n          label: i18n._(t`About GDevelop`),\n          onClickSendEvent: 'main-menu-open-about',\n        }\n      );\n    }\n\n    const template: Array<RootMenuTemplate> = [\n      fileTemplate,\n      editTemplate,\n      viewTemplate,\n      windowTemplate,\n      helpTemplate,\n    ];\n\n    if (isMacLike()) {\n      template.unshift({\n        label: i18n._(t`GDevelop 5`),\n        submenu: [\n          {\n            label: i18n._(t`About GDevelop`),\n            onClickSendEvent: 'main-menu-open-about',\n          },\n          { type: 'separator' },\n          {\n            label: i18n._(t`My Profile`),\n            onClickSendEvent: 'main-menu-open-profile',\n          },\n          {\n            label: i18n._(t`Preferences`),\n            onClickSendEvent: 'main-menu-open-preferences',\n          },\n          {\n            label: i18n._(t`Language`),\n            onClickSendEvent: 'main-menu-open-language',\n          },\n          { type: 'separator' },\n          { role: 'services', submenu: [] },\n          { type: 'separator' },\n          { role: 'hide' },\n          { role: 'hideothers' },\n          { role: 'unhide' },\n          { type: 'separator' },\n          { role: 'quit' },\n        ],\n      });\n\n      editTemplate.submenu.push(\n        { type: 'separator' },\n        {\n          label: i18n._(t`Speech`),\n          submenu: [{ role: 'startspeaking' }, { role: 'stopspeaking' }],\n        }\n      );\n\n      windowTemplate.submenu = [\n        { role: 'minimize' },\n        { role: 'zoom' },\n        { type: 'separator' },\n        { role: 'front' },\n      ];\n    }\n\n    if (ipcRenderer) {\n      ipcRenderer.send('set-main-menu', template);\n    }\n  }\n\n  render() {\n    return React.cloneElement(this.props.children, {\n      ref: editor => (this._editor = editor),\n    });\n  }\n}\n\nexport default ElectronMainMenu;\n","// @flow\n// Note: this file does not use export/imports and use Flow comments to allow its usage from Node.js\n\nconst { loadExtension } = require('.');\nconst optionalRequire = require('../Utils/OptionalRequire');\nconst { findJsExtensionModules } = require('./LocalJsExtensionsFinder');\n\n/*flow-include\nimport type {JsExtensionsLoader, TranslationFunction} from '.';\nimport ObjectsEditorService from '../ObjectEditor/ObjectsEditorService';\nimport ObjectsRenderingService from '../ObjectsRendering/ObjectsRenderingService';\n\ntype MakeExtensionsLoaderArguments = {|\n  gd: any,\n  objectsEditorService: typeof ObjectsEditorService,\n  objectsRenderingService: typeof ObjectsRenderingService,\n  filterExamples: boolean,\n|};\n*/\n\n/**\n * Loader that will find all JS extensions declared in GDJS/Runtime/Extensions/xxx/JsExtension.js.\n * If you add a new extension and also want it to be available for the web-app version, add it in\n * BrowserJsExtensionsLoader.js\n */\nmodule.exports = function makeExtensionsLoader(\n  {\n    gd,\n    objectsEditorService,\n    objectsRenderingService,\n    filterExamples,\n  } /*: MakeExtensionsLoaderArguments*/\n) /*: JsExtensionsLoader*/ {\n  return {\n    loadAllExtensions: (_ /*: TranslationFunction */) => {\n      return findJsExtensionModules({ filterExamples }).then(\n        extensionModulePaths => {\n          return Promise.all(\n            extensionModulePaths.map(extensionModulePath => {\n              let extensionModule = null;\n              try {\n                extensionModule = optionalRequire(extensionModulePath, {\n                  rethrowException: true,\n                });\n              } catch (ex) {\n                return {\n                  extensionModulePath,\n                  result: {\n                    message:\n                      'Unable to import extension. Please check for any syntax error or error that would prevent it from being run.',\n                    error: true,\n                    rawError: ex,\n                  },\n                };\n              }\n\n              if (extensionModule) {\n                // Load any editor for objects, if we have somewhere where\n                // to register them.\n                if (\n                  objectsEditorService &&\n                  extensionModule.registerEditorConfigurations\n                ) {\n                  extensionModule.registerEditorConfigurations(\n                    objectsEditorService\n                  );\n                }\n\n                // Load any renderer for objects, if we have somewhere where\n                // to register them.\n                if (\n                  objectsRenderingService &&\n                  extensionModule.registerInstanceRenderers\n                ) {\n                  extensionModule.registerInstanceRenderers(\n                    objectsRenderingService\n                  );\n                }\n\n                return {\n                  extensionModulePath,\n                  result: loadExtension(\n                    _,\n                    gd,\n                    gd.JsPlatform.get(),\n                    extensionModule\n                  ),\n                };\n              }\n\n              return {\n                extensionModulePath,\n                result: {\n                  error: true,\n                  message:\n                    'Unknown error. Please check for any syntax error or error that would prevent it from being run.',\n                },\n              };\n            })\n          );\n        },\n        err => {\n          console.error(`Unable to find JS extensions modules`);\n          throw err;\n        }\n      );\n    },\n  };\n};\n","// Note: this file does not use export/imports nor Flow to allow its usage from Node.js\n\nconst { findGDJS } = require('../GameEngineFinder/LocalGDJSFinder');\nconst optionalRequire = require('../Utils/OptionalRequire');\nconst path = optionalRequire('path');\nconst fs = optionalRequire('fs');\n\nconst checkIfPathHasJsExtensionModule = extensionFolderPath => {\n  return new Promise(resolve => {\n    const jsExtensionModulePath = path.join(\n      extensionFolderPath,\n      'JsExtension.js'\n    );\n    fs.stat(jsExtensionModulePath, (err, stats) => {\n      if (err) {\n        return resolve(null);\n      }\n\n      return resolve(stats.isFile() ? jsExtensionModulePath : null);\n    });\n  });\n};\n\nconst findJsExtensionModules = ({ filterExamples }) => {\n  return findGDJS().then(({ gdjsRoot }) => {\n    const extensionsRoot = path.join(gdjsRoot, 'Runtime', 'Extensions');\n    console.info(\n      `Searching for JS extensions (file called JsExtension.js) in ${extensionsRoot}...`\n    );\n    return new Promise((resolve, reject) => {\n      fs.readdir(extensionsRoot, (error, extensionFolders) => {\n        if (error) {\n          return reject(error);\n        }\n\n        const filteredExtensionFolders = extensionFolders.filter(folder => {\n          if (!filterExamples) return true;\n\n          return folder.indexOf('Example') === -1;\n        });\n\n        Promise.all(\n          filteredExtensionFolders.map(extensionFolder =>\n            checkIfPathHasJsExtensionModule(\n              path.join(extensionsRoot, extensionFolder)\n            )\n          )\n        ).then(modulePaths => {\n          resolve(modulePaths.filter(modulePath => !!modulePath));\n        }, reject);\n      });\n    });\n  });\n};\n\nmodule.exports = {\n  findJsExtensionModules,\n};\n","// @flow\nimport { type EventsFunctionCodeWriter } from '..';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport slugs from 'slugs';\nconst os = optionalRequire('os');\nconst fs = optionalRequire('fs');\n\n/**\n * Create the EventsFunctionCodeWriter that writes generated code for events functions\n * to local files.\n */\nexport const makeLocalEventsFunctionCodeWriter = (): EventsFunctionCodeWriter => {\n  const outputDir = os.tmpdir() + '/GDGeneratedEventsFunctions';\n  fs.mkdir(outputDir, err => {\n    if (err && err.code !== 'EEXIST') {\n      console.error(\n        'Unable to create the directory where to output events functions generated code: ',\n        err\n      );\n      return;\n    }\n  });\n\n  const getPathFor = (codeNamespace: string) => {\n    return `${outputDir}/${slugs(codeNamespace)}.js`;\n  };\n\n  return {\n    getIncludeFileFor: (codeNamespace: string) => getPathFor(codeNamespace),\n    writeFunctionCode: (\n      functionCodeNamespace: string,\n      code: string\n    ): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        const filepath = getPathFor(functionCodeNamespace);\n        fs.writeFile(filepath, code, err => {\n          if (err) return reject(err);\n\n          resolve();\n        });\n      });\n    },\n    writeBehaviorCode: (\n      behaviorCodeNamespace: string,\n      code: string\n    ): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        const filepath = getPathFor(behaviorCodeNamespace);\n        fs.writeFile(filepath, code, err => {\n          if (err) return reject(err);\n\n          resolve();\n        });\n      });\n    },\n  };\n};\n","// @flow\nimport { serializeToJSObject } from '../../Utils/Serializer';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst fs = optionalRequire('fs-extra');\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst writeJSONFile = (object: Object, filepath: string): Promise<void> => {\n  if (!fs) return Promise.reject(new Error('Filesystem is not supported.'));\n\n  try {\n    const content = JSON.stringify(object, null, 2);\n    return fs.ensureDir(path.dirname(filepath)).then(\n      () =>\n        new Promise((resolve, reject) => {\n          fs.writeFile(filepath, content, (err: ?Error) => {\n            if (err) {\n              return reject(err);\n            }\n\n            return resolve();\n          });\n        })\n    );\n  } catch (stringifyException) {\n    return Promise.reject(stringifyException);\n  }\n};\n\nexport default class LocalEventsFunctionsExtensionWriter {\n  static chooseEventsFunctionExtensionFile = (): Promise<?string> => {\n    return new Promise((resolve, reject) => {\n      if (!dialog) return reject('Not supported');\n\n      const browserWindow = electron.remote.getCurrentWindow();\n      dialog.showSaveDialog(\n        browserWindow,\n        {\n          title: 'Export an extension of the project',\n          filters: [\n            {\n              name: 'GDevelop 5 \"events based\" extension',\n              extensions: ['json'],\n            },\n          ],\n          defaultPath: 'Extension.json',\n        },\n        path => {\n          if (!path) return resolve(null);\n\n          return resolve(path);\n        }\n      );\n    });\n  };\n\n  static writeEventsFunctionsExtension = (\n    extension: gdEventsFunctionsExtension,\n    filepath: string\n  ): Promise<void> => {\n    const serializedObject = serializeToJSObject(extension);\n    return writeJSONFile(serializedObject, filepath).catch(err => {\n      console.error('Unable to write the events function extension:', err);\n      throw err;\n    });\n  };\n}\n","// @flow\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst fs = optionalRequire('fs');\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst readJSONFile = (filepath: string): Promise<Object> => {\n  if (!fs) return Promise.reject('Filesystem is not supported.');\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(filepath, { encoding: 'utf8' }, (err, data) => {\n      if (err) return reject(err);\n\n      try {\n        const dataObject = JSON.parse(data);\n        return resolve(dataObject);\n      } catch (ex) {\n        return reject(filepath + ' is a corrupted/malformed file.');\n      }\n    });\n  });\n};\n\nexport default class LocalEventsFunctionsExtensionOpener {\n  static chooseEventsFunctionExtensionFile = (): Promise<?string> => {\n    return new Promise((resolve, reject) => {\n      if (!dialog) return reject('Not supported');\n\n      const browserWindow = electron.remote.getCurrentWindow();\n      dialog.showOpenDialog(\n        browserWindow,\n        {\n          title: 'Import an extension in the project',\n          properties: ['openFile'],\n          message: 'Choose an extension file to import (.json file)',\n          filters: [\n            {\n              name: 'GDevelop 5 \"events based\" extension',\n              extensions: ['json'],\n            },\n          ],\n        },\n        paths => {\n          if (!paths || !paths.length) return resolve(null);\n\n          return resolve(paths[0]);\n        }\n      );\n    });\n  };\n\n  static readEventsFunctionExtensionFile = (\n    filepath: string\n  ): Promise<Object> => {\n    return readJSONFile(filepath);\n  };\n}\n","// @flow\nimport * as React from 'react';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport debounce from 'lodash/debounce';\nconst electron = optionalRequire('electron');\nconst fs = optionalRequire('fs');\nconst child_process = optionalRequire('child_process');\nconst process = optionalRequire('process');\nconst path = optionalRequire('path');\n\ntype DevelopmentWatchPaths = {\n  paths: Array<string>,\n  pathsWithErrors: { [string]: Error },\n};\n\n/**\n * Returns the folder corresponding to newIDE/app in **development**. Works\n * only when running in Electron.\n */\nconst findDevelopmentNewIdeAppPath = () /*: string */ => {\n  if (!electron) return '';\n\n  const developmentElectronAppFolder = process.cwd();\n  return path.join(developmentElectronAppFolder, '../app');\n};\n\n/**\n * Returns the list of folders to watch containing the **sources** of\n * GDJS and Extensions, found relatively to the current working directory which is the\n * Electron working directory during **development**. Won't work\n * if running on production.\n */\nconst getAllDevelopmentWatchPaths = (): Promise<DevelopmentWatchPaths> => {\n  if (!electron || !fs)\n    return Promise.resolve({ paths: [], pathsWithErrors: {} });\n\n  const pathsWithErrors: { [string]: Error } = {};\n\n  const gdevelopRepositoryRoot = path.join(\n    findDevelopmentNewIdeAppPath(),\n    '../..'\n  );\n  const gdjsSourcesRuntimePath = path.join(\n    gdevelopRepositoryRoot,\n    'GDJS/Runtime'\n  );\n  const gdExtensionsPath = path.join(gdevelopRepositoryRoot, 'Extensions');\n\n  const getExtensionDevelopmentWatchPaths = (): Promise<Array<string>> =>\n    new Promise(resolve =>\n      fs.readdir(gdExtensionsPath, (error: ?Error, files: Array<string>) => {\n        if (error) {\n          pathsWithErrors[gdExtensionsPath] = error;\n          resolve([]);\n          return;\n        }\n\n        resolve(\n          Promise.all(\n            files.map(\n              (file): Promise<?string> =>\n                new Promise(resolve => {\n                  const extensionPath = path.join(gdExtensionsPath, file);\n                  fs.stat(extensionPath, (error, stat) => {\n                    if (error) {\n                      pathsWithErrors[extensionPath] = error;\n                      resolve(extensionPath);\n                      return;\n                    }\n\n                    resolve(stat.isDirectory() ? extensionPath : null);\n                  });\n                })\n            )\n          ).then(paths => paths.filter(Boolean))\n        );\n      })\n    );\n\n  const getGDJSDevelopmentWatchPaths = (): Promise<Array<string>> => {\n    return Promise.resolve(\n      [gdjsSourcesRuntimePath].concat(\n        [\n          // List of all sub folders in GDJS Runtime.\n          // If you add any folder, add it here too so that it\n          // can be watched for changes.\n          'Cocos2d',\n          'Cordova',\n          'Electron',\n          'FacebookInstantGames',\n          'cocos-renderers',\n          'cocos-sound-manager',\n          'events-tools',\n          'fontfaceobserver-font-manager',\n          'howler-sound-manager',\n          'libs',\n          'pixi-renderers',\n          'websocket-debugger-client',\n        ].map(folder => path.join(gdjsSourcesRuntimePath, folder))\n      )\n    );\n  };\n\n  return getExtensionDevelopmentWatchPaths().then(\n    extensionDevelopmentWatchPaths => {\n      return getGDJSDevelopmentWatchPaths().then(gdjsDevelopmentWatchPaths => {\n        return {\n          paths: [\n            ...gdjsDevelopmentWatchPaths,\n            ...extensionDevelopmentWatchPaths,\n          ],\n          pathsWithErrors,\n        };\n      });\n    }\n  );\n};\n\n/**\n * Launch the newIDE script `import-GDJS-Runtime`.\n */\nconst importGDJSRuntime = (): Promise<void> => {\n  if (!child_process || !path) return Promise.reject(new Error('Unsupported'));\n\n  return new Promise((resolve, reject) => {\n    child_process.exec(\n      `node \"${path.join(\n        findDevelopmentNewIdeAppPath(),\n        'scripts/import-GDJS-Runtime.js'\n      )}\"`,\n      (error, stdout, stderr) => {\n        if (error) {\n          console.error(`GDJS Runtime update error: ${error}`);\n          reject(error);\n          return;\n        }\n\n        console.info(`GDJS Runtime update: ${stdout}`);\n\n        if (stderr) {\n          console.error(`GDJS Runtime update error: ${stderr}`);\n          reject(new Error('Error while updating GDJS Runtime'));\n          return;\n        }\n\n        resolve();\n      }\n    );\n  });\n};\n\n/**\n * Callback for fs.watch, so that  whenever a source file is changed,\n * it relaunchs automatically the script to import.\n */\nconst onWatchEvent = debounce((event: ?string, filename: ?string) => {\n  const eventName = event || 'unknown-event';\n  const resolvedFilename = filename || 'unknown-file';\n  console.info(\n    `GDJS/extensions watchers found a \"${eventName}\" in ${resolvedFilename}, updating GDJS Runtime...`\n  );\n  importGDJSRuntime().catch(() => {});\n}, 100 /* Avoid running the script too much in case multiple changes are fired at the same time. */);\n\nconst genericWatcherErrorMessage =\n  'Error in watcher for GDJS Runtime - manually call npm run `node import-GDJS-Runtime.js` in the newIDE/app/scripts folder if you make changes to GDJS.';\n\n/**\n * Set up some watchers for GDJS and Extensions sources.\n * Stop the watchers when the component is unmounted or `shouldWatch` prop is false.\n */\nexport const LocalGDJSDevelopmentWatcher = () => {\n  const preferences = React.useContext(PreferencesContext);\n  const shouldWatch = preferences.values.useGDJSDevelopmentWatcher;\n\n  React.useEffect(\n    () => {\n      if (!shouldWatch) {\n        // Nothing to set up in the effect if watch is deactivated.\n        return;\n      }\n\n      let stopWatchers = false;\n      let watchers = [];\n      let startTime = performance.now();\n      getAllDevelopmentWatchPaths().then(({ paths, pathsWithErrors }) => {\n        // There is a non nul chance that for some reason the effect was cleaned up\n        // before we retrieved all the paths. Stop there if it's the case.\n        if (stopWatchers) return;\n\n        if (!fs) {\n          console.error(\n            \"Unable to use 'fs' from Node.js to watch changes in GDJS.\"\n          );\n          return;\n        }\n\n        // Reload extensions when the component is first mounted\n        importGDJSRuntime().catch(() => {});\n\n        // Create watchers\n        paths.forEach(watchPath => {\n          let watcher = null;\n          try {\n            watcher = fs.watch(watchPath, {}, onWatchEvent);\n          } catch (error) {\n            pathsWithErrors[watchPath] = error;\n            return null;\n          }\n\n          if (watcher) {\n            watcher.on('error', error => {\n              console.warn(genericWatcherErrorMessage, error);\n            });\n\n            watchers.push(watcher);\n          }\n        });\n\n        if (Object.keys(pathsWithErrors).length) {\n          console.warn(\n            'Error while setting up watchers for some paths: ',\n            pathsWithErrors\n          );\n        }\n\n        const totalTimeStr = (performance.now() - startTime).toFixed(2);\n        if (watchers.length) {\n          console.info(\n            `Watchers for GDJS Runtime/extensions installed in ${totalTimeStr}ms.`\n          );\n        } else {\n          console.warn(\n            `No watchers for GDJS Runtime/extensions installed (took ${totalTimeStr}ms).`\n          );\n        }\n      });\n\n      // Close all the watchers when the React effect is unregistered\n      return () => {\n        stopWatchers = true;\n        if (!watchers.length) return;\n\n        watchers.forEach(watcher => {\n          watcher.close();\n        });\n        console.info('Watchers for GDJS Runtime closed.');\n      };\n    },\n    [shouldWatch]\n  );\n\n  return null;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport React, { PureComponent } from 'react';\nimport TextField from '../TextField';\nimport RaisedButton from '../RaisedButton';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'baseline',\n  },\n  button: {\n    marginLeft: 10,\n  },\n  textField: {\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  type: 'export' | 'create-game',\n  value: string,\n  onChange: string => void,\n  defaultPath?: string,\n  fullWidth?: boolean,\n|};\n\ntype TitleAndMessage = {|\n  title: ?string,\n  message: ?string,\n|};\n\nexport default class LocalFolderPicker extends PureComponent<Props, {||}> {\n  _onChooseFolder = ({ title, message }: TitleAndMessage) => {\n    if (!dialog || !electron) return;\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showOpenDialog(\n      browserWindow,\n      {\n        title,\n        properties: ['openDirectory', 'createDirectory'],\n        message,\n        defaultPath: this.props.defaultPath,\n      },\n      paths => {\n        if (!paths || !paths.length) return;\n\n        this.props.onChange(paths[0]);\n      }\n    );\n  };\n\n  _getTitleAndMessage = (i18n: I18nType): TitleAndMessage => {\n    const { type } = this.props;\n    if (type === 'export') {\n      return {\n        title: i18n._(t`Choose an export folder`),\n        message: i18n._(t`Choose where to export the game`),\n      };\n    } else if (type === 'create-game') {\n      return {\n        title: i18n._(t`Choose a folder for the new game`),\n        message: i18n._(t`Choose where to create the game`),\n      };\n    }\n\n    return {\n      title: undefined,\n      message: undefined,\n    };\n  };\n\n  render() {\n    return (\n      <I18n>\n        {({ i18n }) => {\n          const titleAndMessage = this._getTitleAndMessage(i18n);\n          return (\n            <div\n              style={{\n                ...styles.container,\n                width: this.props.fullWidth ? '100%' : undefined,\n              }}\n            >\n              <TextField\n                margin=\"dense\"\n                style={styles.textField}\n                type=\"text\"\n                hintText={titleAndMessage.title}\n                value={this.props.value}\n                onChange={(event, value) => this.props.onChange(value)}\n              />\n              <RaisedButton\n                label={<Trans>Choose folder</Trans>}\n                primary={false}\n                style={styles.button}\n                onClick={() => this._onChooseFolder(titleAndMessage)}\n              />\n            </div>\n          );\n        }}\n      </I18n>\n    );\n  }\n}\n","// @flow\n\nimport optionalRequire from './OptionalRequire.js';\nconst fs = optionalRequire('fs');\nconst archiver = optionalRequire('archiver');\n\n// TODO: Move in a Archiver folder?\n/**\n * Archive the given folder to a file. Only available when running on Electron runtime.\n */\nexport const archiveLocalFolder = ({\n  path,\n  outputFilename,\n}: {|\n  path: string,\n  outputFilename: string,\n|}): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    if (!fs || !archiver) return reject(new Error('Archiver unavailable'));\n\n    const output = fs.createWriteStream(outputFilename);\n    const archive = archiver('zip', {\n      zlib: { level: 9 }, // Sets the compression level.\n    });\n\n    output.on('close', () => {\n      console.log(\n        `Archive written at ${outputFilename}, ${archive.pointer()} total bytes.`\n      );\n      resolve(outputFilename);\n    });\n\n    archive.on('error', err => {\n      reject(err);\n    });\n\n    archive.pipe(output);\n\n    archive.directory(path, false);\n\n    archive.finalize();\n  });\n};\n","// @flow\nimport optionalRequire from '../../Utils/OptionalRequire';\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\n\ntype UploadOptions = {\n  signedUrl: string,\n  contentType: string,\n};\n\nexport const uploadLocalFile = (\n  localFilePath: string,\n  uploadOptions: UploadOptions,\n  onProgress: (progress: number, total: number) => void\n): Promise<void> => {\n  if (!ipcRenderer) return Promise.reject('No support for local file upload');\n\n  ipcRenderer.removeAllListeners('local-file-upload-progress');\n  ipcRenderer.removeAllListeners('local-file-upload-done');\n\n  return new Promise((resolve, reject) => {\n    ipcRenderer.on(\n      'local-file-upload-progress',\n      (event, stepCurrentProgress, stepMaxProgress) => {\n        onProgress(stepCurrentProgress, stepMaxProgress);\n      }\n    );\n    ipcRenderer.on('local-file-upload-done', (event, err) => {\n      if (err) return reject(err);\n      resolve();\n    });\n    ipcRenderer.send('local-file-upload', localFilePath, uploadOptions);\n  });\n};\n","// @flow\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport { type FileMetadata } from '../index';\nimport { unsplit } from '../../Utils/ObjectSplitter.js';\nconst fs = optionalRequire('fs');\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst readJSONFile = (filepath: string): Promise<Object> => {\n  if (!fs) return Promise.reject('Filesystem is not supported.');\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(filepath, { encoding: 'utf8' }, (err, data) => {\n      if (err) return reject(err);\n\n      try {\n        const dataObject = JSON.parse(data);\n        return resolve(dataObject);\n      } catch (ex) {\n        return reject(filepath + ' is a corrupted/malformed file.');\n      }\n    });\n  });\n};\n\nexport const onOpenWithPicker = (): Promise<?FileMetadata> => {\n  return new Promise((resolve, reject) => {\n    if (!dialog) return reject('Not supported');\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showOpenDialog(\n      browserWindow,\n      {\n        title: 'Open a project',\n        properties: ['openFile'],\n        message:\n          'If you want to open your GDevelop 4 project, be sure to save it as a .json file',\n        filters: [{ name: 'GDevelop 5 project', extensions: ['json'] }],\n      },\n      paths => {\n        if (!paths || !paths.length) return resolve(null);\n\n        return resolve({ fileIdentifier: paths[0] });\n      }\n    );\n  });\n};\n\nexport const onOpen = (\n  fileMetadata: FileMetadata\n): Promise<{|\n  content: Object,\n|}> => {\n  const filePath = fileMetadata.fileIdentifier;\n  const projectPath = path.dirname(filePath);\n  return readJSONFile(filePath).then(object => {\n    return unsplit(object, {\n      getReferencePartialObject: referencePath => {\n        return readJSONFile(path.join(projectPath, referencePath) + '.json');\n      },\n      isReferenceMagicPropertyName: '__REFERENCE_TO_SPLIT_OBJECT',\n      // Limit unsplitting to depth 3 (which would allow properties of layouts/external layouts/external events\n      // to be un-splitted, but not the content of these properties), to avoid very slow processing\n      // of large game files.\n      maxUnsplitDepth: 3,\n    }).then(() => {\n      return { content: object };\n    });\n  });\n};\n\nexport const hasAutoSave = (\n  fileMetadata: FileMetadata,\n  compareLastModified: boolean\n): Promise<boolean> => {\n  const filePath = fileMetadata.fileIdentifier;\n  const autoSavePath = filePath + '.autosave';\n  if (fs.existsSync(autoSavePath)) {\n    if (!compareLastModified) {\n      return Promise.resolve(true);\n    }\n    try {\n      const autoSavedTime = fs.statSync(autoSavePath).mtime.getTime();\n      const saveTime = fs.statSync(filePath).mtime.getTime();\n      if (autoSavedTime > saveTime) {\n        return Promise.resolve(true);\n      }\n    } catch (err) {\n      console.error('Unable to compare *.autosave to project', err);\n      return Promise.resolve(false);\n    }\n    return Promise.resolve(false);\n  }\n  return Promise.resolve(false);\n};\n\nexport const onGetAutoSave = (fileMetadata: FileMetadata) => {\n  return Promise.resolve({\n    ...fileMetadata,\n    fileIdentifier: fileMetadata.fileIdentifier + '.autosave',\n  });\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type StorageProvider } from '../index';\nimport {\n  onOpenWithPicker,\n  onOpen,\n  hasAutoSave,\n  onGetAutoSave,\n} from './LocalProjectOpener';\nimport {\n  onSaveProject,\n  onSaveProjectAs,\n  onAutoSaveProject,\n} from './LocalProjectWriter';\nimport {\n  type AppArguments,\n  POSITIONAL_ARGUMENTS_KEY,\n} from '../../Utils/Window';\nimport { type MessageDescriptor } from '../../Utils/i18n/MessageDescriptor.flow';\n\n/**\n * Use the Electron APIs to provide access to the native\n * file system (with native save/open dialogs).\n */\nexport default ({\n  internalName: 'LocalFile',\n  name: t`Local file system`,\n  getFileMetadataFromAppArguments: (appArguments: AppArguments) => {\n    if (!appArguments[POSITIONAL_ARGUMENTS_KEY]) return null;\n    if (!appArguments[POSITIONAL_ARGUMENTS_KEY].length) return null;\n\n    return {\n      fileIdentifier: appArguments[POSITIONAL_ARGUMENTS_KEY][0],\n    };\n  },\n  createOperations: () => ({\n    onOpenWithPicker,\n    onOpen,\n    hasAutoSave,\n    onSaveProject,\n    onSaveProjectAs,\n    onAutoSaveProject,\n    onGetAutoSave,\n    getOpenErrorMessage: (error: Error): MessageDescriptor => {\n      return t`Check that the file exists, that this file is a proper game created with GDevelop and that you have the authorizations to open it.`;\n    },\n  }),\n}: StorageProvider);\n","// @flow\nimport React from 'react';\nimport MainFrame from './MainFrame';\nimport Window from './Utils/Window';\nimport ExportDialog from './Export/ExportDialog';\nimport CreateProjectDialog from './ProjectCreation/CreateProjectDialog';\nimport Authentification from './Utils/GDevelopServices/Authentification';\nimport './UI/iconmoon-font.css'; // Styles for Iconmoon font.\n\n// Import for Electron powered IDE.\nimport ExternalEditor from './ExternalEditor';\nimport LocalExamples from './ProjectCreation/LocalExamples';\nimport LocalStarters from './ProjectCreation/LocalStarters';\nimport localResourceSources from './ResourcesList/LocalResourceSources';\nimport localResourceExternalEditors from './ResourcesList/LocalResourceExternalEditors';\nimport LocalPreviewLauncher from './Export/LocalExporters/LocalPreviewLauncher';\nimport { getLocalExporters } from './Export/LocalExporters';\nimport ElectronMainMenu from './MainFrame/ElectronMainMenu';\nimport makeExtensionsLoader from './JsExtensionsLoader/LocalJsExtensionsLoader';\nimport { makeLocalEventsFunctionCodeWriter } from './EventsFunctionsExtensionsLoader/CodeWriters/LocalEventsFunctionCodeWriter';\nimport ObjectsEditorService from './ObjectEditor/ObjectsEditorService';\nimport ObjectsRenderingService from './ObjectsRendering/ObjectsRenderingService';\nimport Providers from './MainFrame/Providers';\nimport LocalEventsFunctionsExtensionWriter from './EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionWriter';\nimport LocalEventsFunctionsExtensionOpener from './EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionOpener';\nimport ProjectStorageProviders from './ProjectsStorage/ProjectStorageProviders';\nimport LocalFileStorageProvider from './ProjectsStorage/LocalFileStorageProvider';\nimport {LocalGDJSDevelopmentWatcher} from './GameEngineFinder/LocalGDJSDevelopmentWatcher';\nconst gd = global.gd;\n\nexport const create = (authentification: Authentification) => {\n  Window.setUpContextMenu();\n\n  let app = null;\n  const appArguments = Window.getArguments();\n  const isDev = Window.isDev();\n\n  if (appArguments['server-port']) {\n    app = (\n      <Providers\n        authentification={authentification}\n        disableCheckForUpdates={!!appArguments['disable-update-check']}\n        eventsFunctionCodeWriter={null}\n        eventsFunctionsExtensionWriter={null}\n        eventsFunctionsExtensionOpener={null}\n      >\n        {({ i18n, eventsFunctionsExtensionsState }) => (\n          <ProjectStorageProviders\n            appArguments={appArguments}\n            storageProviders={[]}\n          >\n            {({\n              currentStorageProviderOperations,\n              useStorageProvider,\n              storageProviders,\n              initialFileMetadataToOpen,\n            }) => (\n              <ExternalEditor\n                serverPort={appArguments['server-port']}\n                isIntegrated={appArguments['mode'] === 'integrated'}\n                editor={appArguments['editor']}\n                editedElementName={appArguments['edited-element-name']}\n              >\n                <MainFrame\n                  i18n={i18n}\n                  eventsFunctionsExtensionsState={\n                    eventsFunctionsExtensionsState\n                  }\n                  resourceSources={localResourceSources}\n                  storageProviders={storageProviders}\n                  useStorageProvider={useStorageProvider}\n                  storageProviderOperations={currentStorageProviderOperations}\n                  resourceExternalEditors={localResourceExternalEditors}\n                  initialFileMetadataToOpen={initialFileMetadataToOpen}\n                />\n              </ExternalEditor>\n            )}\n          </ProjectStorageProviders>\n        )}\n      </Providers>\n    );\n  } else {\n    app = (\n      <Providers\n        authentification={authentification}\n        disableCheckForUpdates={!!appArguments['disable-update-check']}\n        eventsFunctionCodeWriter={makeLocalEventsFunctionCodeWriter()}\n        eventsFunctionsExtensionWriter={LocalEventsFunctionsExtensionWriter}\n        eventsFunctionsExtensionOpener={LocalEventsFunctionsExtensionOpener}\n      >\n        {({ i18n, eventsFunctionsExtensionsState }) => (\n          <ProjectStorageProviders\n            appArguments={appArguments}\n            storageProviders={[LocalFileStorageProvider]}\n            defaultStorageProvider={LocalFileStorageProvider}\n          >\n            {({\n              currentStorageProviderOperations,\n              useStorageProvider,\n              storageProviders,\n              initialFileMetadataToOpen,\n            }) => (\n              <ElectronMainMenu i18n={i18n}>\n                <MainFrame\n                  i18n={i18n}\n                  eventsFunctionsExtensionsState={\n                    eventsFunctionsExtensionsState\n                  }\n                  renderPreviewLauncher={(props, ref) => <LocalPreviewLauncher {...props} ref={ref} />}\n                  renderExportDialog={props => (\n                    <ExportDialog {...props} exporters={getLocalExporters()} />\n                  )}\n                  renderCreateDialog={props => (\n                    <CreateProjectDialog\n                      {...props}\n                      examplesComponent={LocalExamples}\n                      startersComponent={LocalStarters}\n                    />\n                  )}\n                  renderGDJSDevelopmentWatcher={isDev ? () => <LocalGDJSDevelopmentWatcher /> : null}\n                  storageProviders={storageProviders}\n                  useStorageProvider={useStorageProvider}\n                  storageProviderOperations={currentStorageProviderOperations}\n                  resourceSources={localResourceSources}\n                  resourceExternalEditors={localResourceExternalEditors}\n                  extensionsLoader={makeExtensionsLoader({\n                    gd,\n                    objectsEditorService: ObjectsEditorService,\n                    objectsRenderingService: ObjectsRenderingService,\n                    filterExamples: !isDev,\n                  })}\n                  initialFileMetadataToOpen={initialFileMetadataToOpen}\n                />\n              </ElectronMainMenu>\n            )}\n          </ProjectStorageProviders>\n        )}\n      </Providers>\n    );\n  }\n\n  return app;\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport React, { Component } from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport LocalFolderPicker from '../UI/LocalFolderPicker';\nimport Text from '../UI/Text';\nimport { sendNewGameCreated } from '../Utils/Analytics/EventSender';\nimport { Column, Line } from '../UI/Grid';\nimport { findExamples } from './LocalExamplesFinder';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { findEmptyPath } from './LocalPathFinder';\nimport ExamplesList from './ExamplesList';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport { type StorageProvider, type FileMetadata } from '../ProjectsStorage';\nimport LocalFileStorageProvider from '../ProjectsStorage/LocalFileStorageProvider';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nvar fs = optionalRequire('fs-extra');\n\n// To add a new example, add it first in resources/examples (at which point you can see it\n// in the desktop version), then run these scripts:\n// * scripts/update-examples-information-from-resources-examples.js (update metadata)\n// * scripts/update-fixtures-from-resources-examples.js (update web-app examples)\n// and upload the examples to `gdevelop-resources` s3.\n\ntype Props = {|\n  onOpen: (\n    storageProvider: StorageProvider,\n    fileMetadata: FileMetadata\n  ) => void,\n  onExamplesLoaded: () => void,\n|};\n\ntype State = {|\n  outputPath: string,\n  exampleNames: ?Array<string>,\n|};\n\nexport const showGameFileCreationError = (\n  i18n: I18nType,\n  outputPath: string,\n  error: Error\n) => {\n  showWarningBox(\n    i18n._(\n      t`Unable to create the game in the specified folder. Check that you have permissions to write in this folder: ${outputPath} or choose another folder.`\n    ),\n    error\n  );\n};\n\nexport default class LocalExamples extends Component<Props, State> {\n  state = {\n    outputPath: findEmptyPath(\n      path && app\n        ? path.join(app.getPath('documents'), 'GDevelop projects')\n        : ''\n    ),\n    exampleNames: null,\n  };\n\n  componentDidMount() {\n    findExamples(examplesPath => {\n      fs.readdir(examplesPath, (error, exampleNames) => {\n        if (error) {\n          console.error('Unable to read examples:', error);\n          return;\n        }\n\n        this.setState(\n          {\n            exampleNames: exampleNames.filter(name => name !== '.DS_Store'),\n          },\n          () => this.props.onExamplesLoaded()\n        );\n      });\n    });\n  }\n\n  _handleChangePath = (outputPath: string) =>\n    this.setState({\n      outputPath,\n    });\n\n  createFromExample = (i18n: I18nType, exampleName: string) => {\n    const { outputPath } = this.state;\n    if (!fs || !outputPath) return;\n\n    findExamples(examplesPath => {\n      try {\n        fs.mkdirsSync(outputPath);\n        fs.copySync(path.join(examplesPath, exampleName), outputPath);\n      } catch (error) {\n        showGameFileCreationError(i18n, outputPath, error);\n        return;\n      }\n\n      this.props.onOpen(LocalFileStorageProvider, {\n        fileIdentifier: path.join(outputPath, exampleName + '.json'),\n      });\n      sendNewGameCreated(exampleName);\n    });\n  };\n\n  render() {\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Column noMargin>\n            <Line>\n              <Column>\n                <Text>\n                  <Trans>Choose or search for an example to open:</Trans>\n                </Text>\n              </Column>\n            </Line>\n            <Line>\n              <ExamplesList\n                exampleNames={this.state.exampleNames}\n                onCreateFromExample={exampleName =>\n                  this.createFromExample(i18n, exampleName)\n                }\n              />\n            </Line>\n            <Divider />\n            <Line expand>\n              <Column expand>\n                <LocalFolderPicker\n                  fullWidth\n                  value={this.state.outputPath}\n                  onChange={this._handleChangePath}\n                  type=\"create-game\"\n                />\n              </Column>\n            </Line>\n          </Column>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\n\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst app = electron ? electron.remote.app : null;\nconst fs = optionalRequire('fs');\nconst process = optionalRequire('process');\n\nconst tryPath = (\n  path: string,\n  onExists: string => void,\n  onNoAccess: Function\n) =>\n  fs.access(path, fs.constants.R_OK, err => {\n    if (!err) onExists(path);\n    else onNoAccess();\n  });\n\nexport const findExamples = (cb: (?string) => void) => {\n  if (!process || !fs) return '';\n\n  const appPath = app ? app.getAppPath() : process.cwd();\n\n  // First try to find examples in app resources folder\n  tryPath(path.join(appPath, '..', 'examples'), cb, () => {\n    tryPath(\n      path.join(appPath, '..', '..', 'app', 'resources', 'examples'),\n      cb,\n      () => {\n        cb(null);\n      }\n    );\n  });\n};\n","import generateName from '../Utils/NewNameGenerator';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst path = optionalRequire('path');\nvar fs = optionalRequire('fs-extra');\n\nexport const findEmptyPath = basePath => {\n  if (!path) return basePath;\n\n  const folderName = generateName('My project', name => {\n    try {\n      fs.accessSync(path.join(basePath, name));\n    } catch (ex) {\n      return false;\n    }\n    return true;\n  });\n\n  return path.join(basePath, folderName);\n};\n","// @flow\n// TODO: This module could be published on npm if useful.\nimport newNameGenerator from './NewNameGenerator';\nimport slugs from 'slugs';\n\ntype PartialObjectDescription = {|\n  reference: string,\n  object: Object,\n|};\n\ntype Reference = {\n  referenceTo: string,\n};\n\ntype SplitConfiguration = {|\n  pathSeparator: string,\n  getArrayItemReferenceName: (\n    object: Object,\n    currentReference: string\n  ) => string,\n  shouldSplit: (path: string) => boolean,\n  isReferenceMagicPropertyName: string,\n|};\n\ntype UnsplitConfiguration = {|\n  isReferenceMagicPropertyName: string,\n  getReferencePartialObject: (referencePath: string) => Promise<Object>,\n  maxUnsplitDepth?: number,\n|};\n\n/**\n * Mutate the given object to split it into multiple partial objects.\n * Partial objects will be replaced by references.\n *\n * @param object The object to be split.\n * @param configuration Configuration to be used to split the object.\n */\nexport const split = (\n  object: Object,\n  {\n    pathSeparator,\n    getArrayItemReferenceName,\n    shouldSplit,\n    isReferenceMagicPropertyName,\n  }: SplitConfiguration\n): Array<PartialObjectDescription> => {\n  const partialObjects = [];\n  const createReference = (reference, object): Reference => {\n    partialObjects.push({\n      reference,\n      object,\n    });\n\n    return {\n      [isReferenceMagicPropertyName]: true,\n      referenceTo: reference,\n    };\n  };\n\n  const splitObject = (\n    currentObject: Object,\n    currentPath: string,\n    currentReference: string\n  ) => {\n    if (currentObject !== null && typeof currentObject === 'object') {\n      if (Array.isArray(currentObject)) {\n        for (let index in currentObject) {\n          const itemPath = currentPath + pathSeparator + '*';\n          if (shouldSplit(itemPath)) {\n            const partialObject = currentObject[index];\n            const name = getArrayItemReferenceName(\n              partialObject,\n              currentReference\n            );\n            const itemReference = currentReference + pathSeparator + name;\n\n            currentObject[index] = createReference(\n              itemReference,\n              partialObject\n            );\n\n            splitObject(partialObject, itemPath, itemReference);\n          } else {\n            const itemReference = currentReference + pathSeparator + index;\n\n            splitObject(currentObject[index], itemPath, itemReference);\n          }\n        }\n      } else {\n        for (let propertyName in currentObject) {\n          const propertyPath = currentPath + pathSeparator + propertyName;\n          const propertyReference =\n            currentReference + pathSeparator + propertyName;\n          if (shouldSplit(propertyPath)) {\n            const partialObject = currentObject[propertyName];\n\n            currentObject[propertyName] = createReference(\n              propertyReference,\n              partialObject\n            );\n\n            splitObject(partialObject, propertyPath, propertyReference);\n          } else {\n            splitObject(\n              currentObject[propertyName],\n              propertyPath,\n              propertyReference\n            );\n          }\n        }\n      }\n    }\n  };\n\n  splitObject(object, '', '');\n  return partialObjects;\n};\n\n/**\n * Mutate the given object to recompose it from partial objects.\n * References to partial objects will be fetched as needed.\n *\n * @param object The object to be unsplit.\n * @param configuration Configuration to be used to unsplit the object.\n */\nexport const unsplit = (\n  object: Object,\n  {\n    isReferenceMagicPropertyName,\n    getReferencePartialObject,\n    maxUnsplitDepth,\n  }: UnsplitConfiguration\n): Promise<void> => {\n  const isReference = (object: Object): ?Reference => {\n    if (object[isReferenceMagicPropertyName] === true) {\n      return object;\n    }\n\n    return null;\n  };\n\n  const unsplitObject = (\n    currentObject: Object,\n    depth: number\n  ): Promise<void> => {\n    if (maxUnsplitDepth !== undefined && depth >= maxUnsplitDepth) {\n      return Promise.resolve();\n    }\n\n    if (currentObject !== null && typeof currentObject === 'object') {\n      const keys = Object.keys(currentObject);\n      if (keys) {\n        return Promise.all(\n          keys.map(indexOrPropertyName => {\n            const reference = isReference(currentObject[indexOrPropertyName]);\n            if (reference) {\n              return getReferencePartialObject(reference.referenceTo).then(\n                partialObject => {\n                  currentObject[indexOrPropertyName] = partialObject;\n\n                  return unsplitObject(\n                    currentObject[indexOrPropertyName],\n                    depth + 1\n                  );\n                }\n              );\n            }\n\n            return unsplitObject(currentObject[indexOrPropertyName], depth + 1);\n          })\n        ).then(() => {});\n      }\n    }\n\n    return Promise.resolve();\n  };\n\n  return unsplitObject(object, 0);\n};\n\n/**\n * A helper that can be used to split according to a list of hardcoded paths\n */\nexport const splitPaths = (paths: Set<string>) => {\n  return (path: string) => paths.has(path);\n};\n\n/**\n * A helper that can be used to get the name of items in array using an hardcoded property name.\n */\nexport const getNameFromProperty = (propertyName: string) => {\n  return (object: Object): string => {\n    const property = object[propertyName];\n    if (typeof property !== 'string') {\n      throw new Error(`Property ${propertyName} is not a string`);\n    }\n\n    return property;\n  };\n};\n\n/**\n * A helper that can be used to get the name of items in array using an hardcoded property name.\n */\nexport const getSlugifiedUniqueNameFromProperty = (propertyName: string) => {\n  const existingNamesForReference = {};\n\n  return (object: Object, currentReference: string): string => {\n    const property = object[propertyName];\n    if (typeof property !== 'string') {\n      throw new Error(`Property ${propertyName} is not a string`);\n    }\n\n    existingNamesForReference[currentReference] =\n      existingNamesForReference[currentReference] || {};\n    const newName = newNameGenerator(\n      slugs(property),\n      name => !!existingNamesForReference[currentReference][name]\n    );\n    existingNamesForReference[currentReference][newName] = true;\n    return newName;\n  };\n};\n"],"sourceRoot":""}