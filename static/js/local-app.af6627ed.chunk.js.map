{"version":3,"sources":["ExternalEditor/index.js","ExternalEditor/Bridge.js","ProjectsStorage/LocalFileStorageProvider/LocalProjectWriter.js","ProjectCreation/LocalStarters.js","ResourcesList/LocalResourceSources.js","ResourcesList/LocalResourceExternalEditors.js","ResourcesList/LocalPiskelBridge.js","ResourcesList/LocalJfxrBridge.js","ResourcesList/LocalYarnBridge.js","Export/LocalExporters/LocalPreviewLauncher/index.js","Export/LocalExporters/LocalPreviewLauncher/LocalNetworkPreviewDialog.js","Export/LocalExporters/LocalPreviewLauncher/LocalIpFinder.js","Export/LocalExporters/index.js","Export/LocalExporters/LocalCordovaExport.js","Export/LocalExporters/LocalElectronExport.js","Export/LocalExporters/LocalHTML5Export.js","Export/LocalExporters/LocalCocos2dExport.js","Export/LocalExporters/LocalFacebookInstantGamesExport.js","UI/LocalFilePicker/index.js","Export/LocalExporters/LocalOnlineCordovaExport.js","Export/LocalExporters/LocalOnlineElectronExport.js","Export/LocalExporters/LocalOnlineWebExport.js","MainFrame/ElectronMainMenu.js","JsExtensionsLoader/LocalJsExtensionsLoader.js","JsExtensionsLoader/LocalJsExtensionsFinder.js","EventsFunctionsExtensionsLoader/CodeWriters/LocalEventsFunctionCodeWriter.js","EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionWriter.js","EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionOpener.js","GameEngineFinder/LocalGDJSDevelopmentWatcher.js","LocalApp.js","Export/LocalExporters/LocalFileSystem.js","UI/LocalFolderPicker/index.js","Utils/LocalArchiver.js","ProjectsStorage/LocalFileStorageProvider/LocalProjectOpener.js","ProjectsStorage/LocalFileStorageProvider/index.js","ProjectCreation/LocalExamples.js","ProjectCreation/LocalExamplesFinder.js","ProjectCreation/LocalPathFinder.js","Utils/ObjectSplitter.js"],"names":["gd","global","ExternalEditor","props","_this","Object","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","editorOpened","lastShowCommandDate","sendingUpdate","editor","_serializedObject","_hideIfNotJustShown","Date","now","console","info","Window","hide","sendUpdate","log","state","loading","warn","elements","getSerializedElements","scope","hasOwnProperty","bridge","send","error","editObject","object","getName","requestUpdate","arguments","length","undefined","command","_onUpdateReceived","payload","setState","setTimeout","delete","t1","performance","Serializer","fromJSObject","t2","loadFromSerializedProject","openLayout","editedElementName","openEventsEditor","openExternalLayout","concat","Bridge","isSupported","onReceive","isIntegrated","setBounds","x","y","width","height","show","forceHide","onConnected","onBlur","onFocus","onClose","connectTo","serverPort","_this2","React","cloneElement","children","ref","onEditObject","integratedEditor","Component","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0___default","n","_Utils_TimeFunction_js__WEBPACK_IMPORTED_MODULE_1__","electron","optionalRequire","Buffer","remote","require","net","client","connected","_onReceiveCb","prototype","port","that","Socket","connect","_onConnected","data","nullCharacterBuffer","from","on","dataBuffer","startPos","nextNullCharacterPos","indexOf","slice","_receive","json","JSON","stringify","write","dataObject","timeFunction","parse","ex","time","cb","fs","path","dialog","writeJSONFile","filePath","Promise","reject","Error","content","ensureDir","dirname","then","resolve","writeFile","err","stringifyException","writeProjectFiles","project","projectPath","serializedProjectObject","serializeToJSObject","isFolderProject","partialObjects","split","pathSeparator","getArrayItemReferenceName","getSlugifiedUniqueNameFromProperty","shouldSplit","splitPaths","Set","isReferenceMagicPropertyName","all","map","partialObject","join","reference","catch","onSaveProject","fileMetadata","fileIdentifier","wasSaved","onSaveProjectAs","defaultPath","fileSystem","assignIn","AbstractFileSystemJS","localFileSystem","browserWindow","getCurrentWindow","options","filters","name","extensions","showSaveDialog","ProjectResourcesCopier","copyAllResourcesTo","setProjectFile","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","onAutoSaveProject","autoSavePath","app","LocalStarters","outputPath","findEmptyPath","getPath","_handleChangePath","i18n","exampleName","findExamples","examplesPath","mkdirsSync","copySync","showGameFileCreationError","onOpen","LocalFileStorageProvider","sendNewGameCreated","ProjectHelper","createNewGDJSProject","onCreate","_this3","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_lingui_react__WEBPACK_IMPORTED_MODULE_5__","_ref","_UI_Grid__WEBPACK_IMPORTED_MODULE_12__","noMargin","_UI_Text__WEBPACK_IMPORTED_MODULE_10__","id","expand","_UI_List__WEBPACK_IMPORTED_MODULE_13__","leftIcon","_UI_ListIcon__WEBPACK_IMPORTED_MODULE_17__","iconSize","src","primaryText","secondaryText","secondaryTextLines","onClick","createFromExample","createEmptyGame","alignItems","justifyContent","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_8__","label","onShowExamples","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_7__","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_9__","fullWidth","value","onChange","type","__webpack_exports__","displayName","kind","component","_temp","_Component","LocalAudioFileOpener","_getPrototypeOf2","_len","args","Array","_key","apply","chooseResources","multiSelections","title","_","selectLocalResourcePath","resources","resourcePath","audioResource","AudioResource","getProjectFile","setFile","relative","setName","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","_temp2","_Component2","LocalFileOpener","_getPrototypeOf3","_len2","_key2","imageResource","ImageResource","_temp3","_Component3","LocalFontFileOpener","_getPrototypeOf4","_len3","_key3","fontResource","FontResource","_temp4","_Component4","LocalVideoFileOpener","_getPrototypeOf5","_this4","_len4","_key4","videoResource","VideoResource","_temp5","_Component5","LocalJsonFileOpener","_getPrototypeOf6","_this5","_len5","_key5","jsonResource","JsonResource","properties","push","showOpenDialog","paths","filter","isPathInProjectFolder","confirm","copyAllToProjectFolder","_LocalPiskelBridge__WEBPACK_IMPORTED_MODULE_0__","_LocalJfxrBridge__WEBPACK_IMPORTED_MODULE_1__","_LocalYarnBridge__WEBPACK_IMPORTED_MODULE_2__","_Utils_Analytics_EventSender__WEBPACK_IMPORTED_MODULE_3__","editors","edit","sendExternalEditorOpened","openPiskel","openJfxr","openYarn","ipcRenderer","resourceNames","resourcesLoader","singleFrame","onChangesSaved","extraOptions","resourceName","originalIndex","getLocalResourceFullPath","externalEditorData","removeAllListeners","event","outputResources","newAnimationName","metadata","pskl","resourcesManager","getResourcesManager","forEach","resource","createOrUpdateResource","getResource","setMetadata","d","_ResourceUtils_js__WEBPACK_IMPORTED_MODULE_1__","newFilePath","jfxr","BrowserWindow","LocalPreviewLauncher","canDoNetworkPreview","networkPreviewDialogOpen","networkPreviewHost","networkPreviewPort","networkPreviewError","previewGamePath","devToolsOpen","previewBrowserWindowConfig","_subscriptionChecker","_openPreviewBrowserWindow","win","loadURL","webContents","openDevTools","_openPreviewWindow","gamePath","getGameResolutionWidth","getGameResolutionHeight","useContentSize","backgroundColor","networkPreview","serverParams","_checkSubscription","ipAddresses","findLocalIp","root","_prepareExporter","findGDJS","gdjsRoot","outputDir","getTempDir","exporter","Exporter","launchLayoutPreview","layout","_ref2","exportLayoutForPixiPreview","launchExternalLayoutPreview","externalLayout","_ref3","exportExternalLayoutForPixiPreview","checkHasSubscription","_this$state","react__WEBPACK_IMPORTED_MODULE_6__","_Profile_SubscriptionChecker__WEBPACK_IMPORTED_MODULE_14__","subscriptionChecker","onChangeSubscription","mode","_LocalNetworkPreviewDialog__WEBPACK_IMPORTED_MODULE_11__","open","url","onExport","onRunPreviewLocally","LocalNetworkDialog","_this$props","_UI_Dialog__WEBPACK_IMPORTED_MODULE_7__","actions","_UI_FlatButton__WEBPACK_IMPORTED_MODULE_8__","primary","secondaryActions","modal","onRequestClose","_UI_Grid__WEBPACK_IMPORTED_MODULE_11__","_UI_PlaceholderLoader__WEBPACK_IMPORTED_MODULE_12__","_UI_TextField__WEBPACK_IMPORTED_MODULE_9__","firstLocalIp","find","ipAddress","getLocalExporters","react__WEBPACK_IMPORTED_MODULE_1__","_lingui_react__WEBPACK_IMPORTED_MODULE_0__","renderIcon","_material_ui_icons_PhoneIphone__WEBPACK_IMPORTED_MODULE_10___default","helpPage","description","exportPipeline","localOnlineCordovaExportPipeline","_UI_CustomSvgIcons_Chrome__WEBPACK_IMPORTED_MODULE_15__","localOnlineWebExportPipeline","_material_ui_icons_Folder__WEBPACK_IMPORTED_MODULE_12___default","localHTML5ExportPipeline","advanced","_UI_CustomSvgIcons_Facebook__WEBPACK_IMPORTED_MODULE_13__","localFacebookInstantGamesExportPipeline","_UI_CustomSvgIcons_Cordova__WEBPACK_IMPORTED_MODULE_14__","localCordovaExportPipeline","_material_ui_icons_LaptopMac__WEBPACK_IMPORTED_MODULE_11___default","localOnlineElectronExportPipeline","localElectronExportPipeline","localCocos2dExportPipeline","experimental","shell","getInitialExportState","getLastCompilationDirectory","canLaunchBuild","exportState","renderHeader","updateExportState","react__WEBPACK_IMPORTED_MODULE_1___default","_UI_Grid__WEBPACK_IMPORTED_MODULE_3__","_GenericExporters_CordovaExport__WEBPACK_IMPORTED_MODULE_9__","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_6__","renderLaunchButtonLabel","prepareExporter","context","launchExport","exportOptions","MapStringBoolean","set","exportWholePixiProject","launchResourcesDownload","exportOutput","launchCompression","renderDoneFooter","_ref4","openExportFolder","openItem","renderGameButton","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_2__","_GenericExporters_ElectronExport__WEBPACK_IMPORTED_MODULE_9__","_GenericExporters_HTML5Export__WEBPACK_IMPORTED_MODULE_9__","debugMode","react__WEBPACK_IMPORTED_MODULE_2___default","_UI_Grid__WEBPACK_IMPORTED_MODULE_4__","_GenericExporters_Cocos2dExport__WEBPACK_IMPORTED_MODULE_11__","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_7__","prevState","_UI_Toggle__WEBPACK_IMPORTED_MODULE_10__","onToggle","e","check","toggled","labelPosition","_lingui_react__WEBPACK_IMPORTED_MODULE_1__","exportWholeCocos2dProject","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_3__","archiveOutputFilename","_GenericExporters_FacebookInstantGamesExport__WEBPACK_IMPORTED_MODULE_10__","_UI_LocalFilePicker__WEBPACK_IMPORTED_MODULE_8__","message","temporaryOutputDir","mkDir","clearDir","_ref5","archiveLocalFolder","outputFilename","_ref6","styles","container","position","display","button","marginLeft","textField","flex","LocalFilePicker","onChooseFolder","filename","react__WEBPACK_IMPORTED_MODULE_7___default","style","_TextField__WEBPACK_IMPORTED_MODULE_8__","margin","hintText","_RaisedButton__WEBPACK_IMPORTED_MODULE_10__","_lingui_react__WEBPACK_IMPORTED_MODULE_6__","PureComponent","os","onlineBuildType","_GenericExporters_OnlineCordovaExport__WEBPACK_IMPORTED_MODULE_8__","archiveOutputDir","tmpdir","launchUpload","outputFile","stepCurrentProgress","stepMaxProgress","updateStepProgress","prefix","launchOnlineBuild","userProfile","uploadBucketKey","getAuthorizationHeader","profile","buildCordovaAndroid","uid","targets","_GenericExporters_OnlineElectronExport__WEBPACK_IMPORTED_MODULE_8__","buildElectron","_GenericExporters_OnlineWebExport__WEBPACK_IMPORTED_MODULE_8__","buildWeb","ElectronMainMenu","_editor","chooseProject","saveProject","saveProjectAs","askToCloseProject","openExportDialog","openCreateDialog","openProjectManager","openStartPage","openDebugger","openAboutDialog","openPreferences","openLanguage","openProfile","status","setUpdateStatus","_buildAndSendMenuTemplate","language","_language","fileTemplate","submenu","accelerator","onClickSendEvent","isMacLike","editTemplate","role","viewTemplate","windowTemplate","helpTemplate","onClickOpenLink","template","unshift","loadExtension","findJsExtensionModules","module","exports","objectsEditorService","objectsRenderingService","filterExamples","loadAllExtensions","extensionModulePaths","extensionModulePath","extensionModule","rethrowException","result","rawError","registerEditorConfigurations","registerInstanceRenderers","JsPlatform","get","extensionsRoot","readdir","extensionFolders","filteredExtensionFolders","folder","extensionFolder","extensionFolderPath","jsExtensionModulePath","stat","stats","isFile","modulePaths","modulePath","makeLocalEventsFunctionCodeWriter","slugs__WEBPACK_IMPORTED_MODULE_1__","slugs__WEBPACK_IMPORTED_MODULE_1___default","mkdir","code","getPathFor","codeNamespace","slugs","getIncludeFileFor","writeFunctionCode","functionCodeNamespace","filepath","writeBehaviorCode","behaviorCodeNamespace","LocalEventsFunctionsExtensionWriter","chooseEventsFunctionExtensionFile","writeEventsFunctionsExtension","extension","LocalEventsFunctionsExtensionOpener","readEventsFunctionExtensionFile","readFile","encoding","readJSONFile","child_process","process","findDevelopmentNewIdeAppPath","developmentElectronAppFolder","cwd","getAllDevelopmentWatchPaths","pathsWithErrors","gdevelopRepositoryRoot","gdjsSourcesRuntimePath","gdExtensionsPath","files","file","extensionPath","isDirectory","Boolean","extensionDevelopmentWatchPaths","gdjsDevelopmentWatchPaths","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","importGDJSRuntime","exec","stdout","stderr","onWatchEvent","debounce","eventName","resolvedFilename","LocalGDJSDevelopmentWatcher","shouldWatch","PreferencesContext","values","useGDJSDevelopmentWatcher","stopWatchers","watchers","startTime","watchPath","watcher","watch","keys","totalTimeStr","toFixed","close","r","create","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_MainFrame__WEBPACK_IMPORTED_MODULE_1__","_Utils_Window__WEBPACK_IMPORTED_MODULE_2__","_Export_ExportDialog__WEBPACK_IMPORTED_MODULE_3__","_ProjectCreation_CreateProjectDialog__WEBPACK_IMPORTED_MODULE_4__","_ExternalEditor__WEBPACK_IMPORTED_MODULE_7__","_ProjectCreation_LocalExamples__WEBPACK_IMPORTED_MODULE_8__","_ProjectCreation_LocalStarters__WEBPACK_IMPORTED_MODULE_9__","_ResourcesList_LocalResourceSources__WEBPACK_IMPORTED_MODULE_10__","_ResourcesList_LocalResourceExternalEditors__WEBPACK_IMPORTED_MODULE_11__","_Export_LocalExporters_LocalPreviewLauncher__WEBPACK_IMPORTED_MODULE_12__","_Export_LocalExporters__WEBPACK_IMPORTED_MODULE_13__","_MainFrame_ElectronMainMenu__WEBPACK_IMPORTED_MODULE_14__","_JsExtensionsLoader_LocalJsExtensionsLoader__WEBPACK_IMPORTED_MODULE_15__","_JsExtensionsLoader_LocalJsExtensionsLoader__WEBPACK_IMPORTED_MODULE_15___default","_EventsFunctionsExtensionsLoader_CodeWriters_LocalEventsFunctionCodeWriter__WEBPACK_IMPORTED_MODULE_16__","_ObjectEditor_ObjectsEditorService__WEBPACK_IMPORTED_MODULE_17__","_ObjectsRendering_ObjectsRenderingService__WEBPACK_IMPORTED_MODULE_18__","_MainFrame_Providers__WEBPACK_IMPORTED_MODULE_19__","_EventsFunctionsExtensionsLoader_Storage_LocalEventsFunctionsExtensionWriter__WEBPACK_IMPORTED_MODULE_20__","_EventsFunctionsExtensionsLoader_Storage_LocalEventsFunctionsExtensionOpener__WEBPACK_IMPORTED_MODULE_21__","_ProjectsStorage_ProjectStorageProviders__WEBPACK_IMPORTED_MODULE_22__","_ProjectsStorage_LocalFileStorageProvider__WEBPACK_IMPORTED_MODULE_23__","_GameEngineFinder_LocalGDJSDevelopmentWatcher__WEBPACK_IMPORTED_MODULE_24__","authentification","setUpContextMenu","appArguments","getArguments","isDev","disableCheckForUpdates","eventsFunctionCodeWriter","eventsFunctionsExtensionWriter","eventsFunctionsExtensionOpener","eventsFunctionsExtensionsState","storageProviders","currentStorageProviderOperations","useStorageProvider","initialFileMetadataToOpen","resourceSources","localResourceSources","storageProviderOperations","resourceExternalEditors","localResourceExternalEditors","defaultStorageProvider","renderPreviewLauncher","assign","renderExportDialog","exporters","renderCreateDialog","examplesComponent","LocalExamples","startersComponent","renderGDJSDevelopmentWatcher","extensionsLoader","makeExtensionsLoader","ObjectsEditorService","ObjectsRenderingService","dirExists","existsSync","readdirSync","curPath","lstatSync","unlinkSync","fileNameFrom","fullpath","_isExternalURL","_translateURL","basename","dirNameFrom","makeAbsolute","baseDirectory","isAbsolute","normalize","makeRelative","charAt","copyFile","source","dest","writeToFile","contents","outputFileSync","readFileSync","toString","readDir","ext","toUpperCase","output","VectorString","push_back","fileExists","statSync","substr","LocalFolderPicker","_onChooseFolder","_getTitleAndMessage","titleAndMessage","_RaisedButton__WEBPACK_IMPORTED_MODULE_9__","_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0__","_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0___default","archiver","createWriteStream","archive","zlib","level","pointer","pipe","directory","finalize","onOpenWithPicker","unsplit","getReferencePartialObject","referencePath","maxUnsplitDepth","hasAutoSave","compareLastModified","mtime","getTime","onGetAutoSave","objectSpread","internalName","getFileMetadataFromAppArguments","POSITIONAL_ARGUMENTS_KEY","createOperations","getOpenErrorMessage","showWarningBox","exampleNames","onExamplesLoaded","_UI_Text__WEBPACK_IMPORTED_MODULE_9__","_ExamplesList__WEBPACK_IMPORTED_MODULE_15__","onCreateFromExample","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_8__","tryPath","onExists","onNoAccess","access","constants","R_OK","appPath","getAppPath","_Utils_NewNameGenerator__WEBPACK_IMPORTED_MODULE_0__","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_1__","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_1___default","basePath","folderName","generateName","accessSync","createReference","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","splitObject","currentObject","currentPath","currentReference","isArray","index","itemPath","itemReference","propertyName","propertyPath","propertyReference","unsplitObject","depth","indexOrPropertyName","referenceTo","has","existingNamesForReference","property","newName","newNameGenerator"],"mappings":"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","file":"static/js/local-app.af6627ed.chunk.js","sourcesContent":["// @flow\n\nimport Bridge from './Bridge.js';\nimport React, { Component } from 'react';\nimport Window from '../Utils/Window.js';\nconst gd = global.gd;\n\ntype State = {\n  loading: boolean,\n};\n\ntype Props = {\n  serverPort: number,\n  isIntegrated: boolean,\n  editor: string,\n  editedElementName: string,\n  children: React$Element<any>,\n};\n\nclass ExternalEditor extends Component<Props, State> {\n  bridge: Bridge;\n  editorOpened: boolean = false;\n  lastShowCommandDate: number = 0;\n  sendingUpdate: boolean = false;\n  editor: any = null;\n  _serializedObject: any = null;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.bridge = new Bridge();\n    this.state = {\n      loading: false,\n    };\n\n    if (this.bridge.isSupported()) {\n      console.log('Connection to an external editor...');\n\n      this.bridge.onReceive((command, payload, scope) => {\n        if (command === 'update') {\n          this._onUpdateReceived(payload, scope);\n        } else if (command === 'setBounds') {\n          if (this.props.isIntegrated) {\n            Window.setBounds(\n              payload.x,\n              payload.y,\n              payload.width,\n              payload.height\n            );\n          }\n        } else if (command === 'show') {\n          this.lastShowCommandDate = Date.now();\n          Window.show();\n        } else if (command === 'hide') {\n          if (this.props.isIntegrated) {\n            Window.hide(payload && payload.forceHide);\n          }\n        }\n      });\n      this.bridge.onConnected(() => {\n        this.requestUpdate('', true);\n      });\n      Window.onBlur(() => {\n        if (this.props.isIntegrated) this._hideIfNotJustShown();\n        this.sendUpdate();\n      });\n      Window.onFocus(() => {\n        this.requestUpdate();\n      });\n      Window.onClose(() => {\n        this.sendUpdate();\n      });\n\n      this.bridge.connectTo(this.props.serverPort);\n    } else {\n      console.warn('Connection to an external editor is not supported');\n    }\n  }\n\n  _hideIfNotJustShown = () => {\n    // Sometime, we'll receive the blur event AFTER\n    // the external editor containing this editor\n    // received the activate event from the system (wxActivateEvent in the case of\n    // wxWidgets).\n    // So we'll receive a show command THEN hide, which is not what we want\n    // (we want to hide and then show again the editor if needed).\n    if (Date.now() - this.lastShowCommandDate < 100) {\n      console.info(\n        'The editor is not hidden because it receive a `show` command less ' +\n          'than 100ms ago.'\n      );\n      return;\n    }\n\n    Window.hide();\n  };\n\n  sendUpdate = () => {\n    console.log('Sending update to server editor');\n    if (this.state.loading) {\n      console.warn('Already loading an update, abort send');\n      return;\n    }\n    if (this.sendingUpdate) {\n      console.warn('Already sending an update, abort send');\n      return;\n    }\n    if (!this.editor) {\n      console.error(\n        'No children editor to use to get the updated edited element'\n      );\n      return;\n    }\n\n    this.sendingUpdate = true;\n    const elements = this.editor.getSerializedElements();\n    for (const scope in elements) {\n      if (elements.hasOwnProperty(scope)) {\n        this.bridge.send('update', elements[scope], scope);\n      }\n    }\n    this.sendingUpdate = false;\n\n    console.log('Update send done');\n  };\n\n  editObject = (object: gdObject) => {\n    this.sendUpdate();\n    this.bridge.send('editObject', object.getName());\n  };\n\n  /**\n   * Request an update to the server. Note that if forcedUpdate is set to false,\n   * the server may not send back an update (for example if nothing changed).\n   */\n  requestUpdate = (scope: string = '', forcedUpdate: boolean = false) => {\n    const command = forcedUpdate ? 'requestForcedUpdate' : 'requestUpdate';\n    this.bridge.send(command, undefined, scope);\n  };\n\n  _onUpdateReceived = (payload: any, scope: string) => {\n    console.log('Received project update from server');\n    if (scope !== '') {\n      console.warn(`Not implemented: received ${scope} update from server`);\n      return;\n    }\n\n    this.setState(\n      {\n        loading: true,\n      },\n      () =>\n        setTimeout(() => {\n          // Transform the payload into a gd.SerializerElement\n          // Note that gd.Serializer.fromJSObject returns a new gd.SerializerElement object at every call\n          if (this._serializedObject) this._serializedObject.delete();\n\n          var t1 = performance.now();\n          this._serializedObject = gd.Serializer.fromJSObject(payload);\n          var t2 = performance.now();\n          console.log(\n            'Call to gd.Serializer.fromJSObject took ' +\n              (t2 - t1) +\n              ' milliseconds.'\n          );\n\n          this.editor.loadFromSerializedProject(this._serializedObject, () => {\n            this._serializedObject.delete();\n            this._serializedObject = null;\n\n            if (!this.editorOpened) {\n              this.editorOpened = true;\n\n              if (this.props.editor === 'scene-editor') {\n                this.editor.openLayout(this.props.editedElementName, {\n                  openEventsEditor: false,\n                });\n              }\n              if (this.props.editor === 'external-layout-editor') {\n                this.editor.openExternalLayout(this.props.editedElementName);\n              }\n            }\n\n            this.setState({\n              loading: false,\n            });\n          });\n        })\n    );\n  };\n\n  render() {\n    return React.cloneElement(this.props.children, {\n      loading: this.state.loading,\n      ref: editor => (this.editor = editor),\n      requestUpdate: () => this.requestUpdate('', true),\n      onEditObject: this.editObject,\n      integratedEditor: true,\n    });\n  }\n}\n\nexport default ExternalEditor;\n","import optionalRequire from '../Utils/OptionalRequire.js';\nimport { timeFunction } from '../Utils/TimeFunction.js';\nconst electron = optionalRequire('electron');\nconst Buffer = electron ? electron.remote.require('buffer').Buffer : null;\n\nfunction Bridge() {\n  this.net = optionalRequire('net');\n\n  this.client = null;\n  this.connected = false;\n  this._onReceiveCb = null;\n}\n\nBridge.prototype.isSupported = function() {\n  return !!this.net;\n};\n\nBridge.prototype.connectTo = function(port) {\n  if (!this.net) return;\n\n  var that = this;\n  this.client = new this.net.Socket();\n  this.client.connect(\n    port,\n    'localhost',\n    function() {\n      console.log('Connection made on port', port);\n      that.connected = true;\n      if (that._onConnected) that._onConnected();\n    }\n  );\n\n  let data = '';\n  const nullCharacterBuffer = Buffer.from([0]);\n  this.client.on('data', function(dataBuffer) {\n    let startPos = 0;\n    let nextNullCharacterPos = dataBuffer.indexOf(nullCharacterBuffer);\n    while (startPos < dataBuffer.length) {\n      if (nextNullCharacterPos === -1) {\n        data += dataBuffer.slice(startPos);\n        startPos = dataBuffer.length;\n      } else {\n        data += dataBuffer.slice(startPos, nextNullCharacterPos);\n        that._receive(data);\n\n        data = '';\n        startPos = nextNullCharacterPos + 1;\n        nextNullCharacterPos = dataBuffer.indexOf(\n          nullCharacterBuffer,\n          startPos\n        );\n      }\n    }\n  });\n\n  this.client.on('close', function() {\n    that.connected = false;\n  });\n};\n\nBridge.prototype.send = function(command, payload, scope = '') {\n  if (!this.connected) return false;\n\n  const json = JSON.stringify({\n    command,\n    scope,\n    payload,\n  });\n  this.client.write(json + '\\0');\n\n  return true;\n};\n\nBridge.prototype._receive = function(data) {\n  console.info('Received data');\n\n  // Parse the received JSON\n  let dataObject;\n  timeFunction(\n    () => {\n      try {\n        dataObject = JSON.parse(data);\n      } catch (ex) {\n        console.warn('Received invalid data (JSON parse failed)', ex);\n      }\n    },\n    time => console.info(`JSON parse took ${time}ms`)\n  );\n  if (!dataObject) return;\n\n  if (this._onReceiveCb) {\n    this._onReceiveCb(dataObject.command, dataObject.payload, dataObject.scope);\n  }\n};\n\nBridge.prototype.onReceive = function(cb) {\n  this._onReceiveCb = cb;\n};\n\nBridge.prototype.onConnected = function(cb) {\n  this._onConnected = cb;\n};\n\nexport default Bridge;\n","// @flow\nimport { serializeToJSObject } from '../../Utils/Serializer';\nimport { type FileMetadata } from '../index';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport {\n  split,\n  splitPaths,\n  getSlugifiedUniqueNameFromProperty,\n} from '../../Utils/ObjectSplitter';\nimport localFileSystem from '../../Export/LocalExporters/LocalFileSystem';\nimport assignIn from 'lodash/assignIn';\n\nconst gd = global.gd;\n\nconst fs = optionalRequire('fs-extra');\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst writeJSONFile = (object: Object, filePath: string): Promise<void> => {\n  if (!fs) return Promise.reject(new Error('Filesystem is not supported.'));\n\n  try {\n    const content = JSON.stringify(object, null, 2);\n    return fs.ensureDir(path.dirname(filePath)).then(\n      () =>\n        new Promise((resolve, reject) => {\n          fs.writeFile(filePath, content, (err: ?Error) => {\n            if (err) {\n              return reject(err);\n            }\n\n            return resolve();\n          });\n        })\n    );\n  } catch (stringifyException) {\n    return Promise.reject(stringifyException);\n  }\n};\n\nconst writeProjectFiles = (\n  project: gdProject,\n  filePath: string,\n  projectPath: string\n): Promise<void> => {\n  const serializedProjectObject = serializeToJSObject(project);\n\n  if (project.isFolderProject()) {\n    const partialObjects = split(serializedProjectObject, {\n      pathSeparator: '/',\n      getArrayItemReferenceName: getSlugifiedUniqueNameFromProperty('name'),\n      shouldSplit: splitPaths(\n        new Set([\n          '/layouts/*',\n          '/externalLayouts/*',\n          '/externalEvents/*',\n          '/layouts/*',\n          '/eventsFunctionsExtensions/*',\n        ])\n      ),\n      isReferenceMagicPropertyName: '__REFERENCE_TO_SPLIT_OBJECT',\n    });\n\n    return Promise.all(\n      partialObjects.map(partialObject => {\n        return writeJSONFile(\n          partialObject.object,\n          path.join(projectPath, partialObject.reference) + '.json'\n        ).catch(err => {\n          console.error('Unable to write a partial file:', err);\n          throw err;\n        });\n      })\n    ).then(() => {\n      return writeJSONFile(serializedProjectObject, filePath).catch(err => {\n        console.error('Unable to write the split project:', err);\n        throw err;\n      });\n    });\n  } else {\n    return writeJSONFile(serializedProjectObject, filePath).catch(err => {\n      console.error('Unable to write the project:', err);\n      throw err;\n    });\n  }\n};\n\nexport const onSaveProject = (\n  project: gdProject,\n  fileMetadata: FileMetadata\n): Promise<{|\n  wasSaved: boolean,\n  fileMetadata: FileMetadata,\n|}> => {\n  const filePath = fileMetadata.fileIdentifier;\n  if (!filePath) {\n    return Promise.reject(\n      'Project file is empty, \"Save as\" should have been called?'\n    );\n  }\n\n  const projectPath = path.dirname(filePath);\n  return writeProjectFiles(project, filePath, projectPath).then(() => {\n    return { wasSaved: true, fileMetadata }; // Save was properly done\n  });\n};\n\nexport const onSaveProjectAs = (\n  project: gdProject,\n  fileMetadata: ?FileMetadata\n): Promise<{|\n  wasSaved: boolean,\n  fileMetadata: ?FileMetadata,\n|}> => {\n  const defaultPath = fileMetadata ? fileMetadata.fileIdentifier : '';\n  const fileSystem = assignIn(new gd.AbstractFileSystemJS(), localFileSystem);\n  const browserWindow = electron.remote.getCurrentWindow();\n  const options = {\n    defaultPath,\n    filters: [{ name: 'GDevelop 5 project', extensions: ['json'] }],\n  };\n\n  if (!dialog) {\n    return Promise.reject('Unsupported');\n  }\n  const filePath = dialog.showSaveDialog(browserWindow, options);\n  if (!filePath) {\n    return Promise.resolve({ wasSaved: false, fileMetadata });\n  }\n  const projectPath = path.dirname(filePath);\n\n  // TODO: Ideally, errors while copying resources should be reported.\n  gd.ProjectResourcesCopier.copyAllResourcesTo(\n    project,\n    fileSystem,\n    projectPath,\n    true, // Update the project with the new resource paths\n    false, // Don't move absolute files\n    true // Keep relative files folders structure.\n  );\n\n  // Update the project with the new file path (resources have already been updated)\n  project.setProjectFile(filePath);\n\n  return writeProjectFiles(project, filePath, projectPath).then(() => {\n    return {\n      wasSaved: true,\n      fileMetadata: {\n        ...fileMetadata,\n        fileIdentifier: filePath,\n      },\n    }; // Save was properly done\n  });\n};\n\nexport const onAutoSaveProject = (\n  project: gdProject,\n  fileMetadata: FileMetadata\n) => {\n  const autoSavePath = fileMetadata.fileIdentifier + '.autosave';\n  writeJSONFile(serializeToJSObject(project), autoSavePath).catch(err => {\n    console.error(`Unable to write ${autoSavePath}:`, err);\n    throw err;\n  });\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport React, { Component } from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport RaisedButton from '../UI/RaisedButton';\nimport LocalFolderPicker from '../UI/LocalFolderPicker';\nimport Text from '../UI/Text';\nimport { sendNewGameCreated } from '../Utils/Analytics/EventSender';\nimport { Column, Line } from '../UI/Grid';\nimport { List, ListItem } from '../UI/List';\nimport { findExamples } from './LocalExamplesFinder';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { findEmptyPath } from './LocalPathFinder';\nimport ListIcon from '../UI/ListIcon';\nimport { showGameFileCreationError } from './LocalExamples';\nimport { type StorageProvider, type FileMetadata } from '../ProjectsStorage';\nimport LocalFileStorageProvider from '../ProjectsStorage/LocalFileStorageProvider';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nvar fs = optionalRequire('fs-extra');\nconst gd = global.gd;\n\ntype Props = {|\n  onOpen: (\n    storageProvider: StorageProvider,\n    fileMetadata: FileMetadata\n  ) => void,\n  onCreate: (\n    gdProject,\n    storageProvider: ?StorageProvider,\n    fileMetadata: ?FileMetadata\n  ) => void,\n  onShowExamples: () => void,\n|};\n\ntype State = {|\n  outputPath: string,\n|};\n\nexport default class LocalStarters extends Component<Props, State> {\n  state = {\n    outputPath: findEmptyPath(\n      path && app\n        ? path.join(app.getPath('documents'), 'GDevelop projects')\n        : ''\n    ),\n  };\n\n  _handleChangePath = (outputPath: string) =>\n    this.setState({\n      outputPath,\n    });\n\n  createFromExample(i18n: I18nType, exampleName: string) {\n    const { outputPath } = this.state;\n    if (!fs || !outputPath) return;\n\n    findExamples(examplesPath => {\n      try {\n        fs.mkdirsSync(outputPath);\n        fs.copySync(path.join(examplesPath, exampleName), outputPath);\n      } catch (error) {\n        showGameFileCreationError(i18n, outputPath, error);\n        return;\n      }\n\n      this.props.onOpen(LocalFileStorageProvider, {\n        fileIdentifier: path.join(outputPath, exampleName + '.json'),\n      });\n      sendNewGameCreated(exampleName);\n    });\n  }\n\n  createEmptyGame(i18n: I18nType) {\n    const { outputPath } = this.state;\n    if (!fs || !outputPath) return;\n\n    try {\n      fs.mkdirsSync(outputPath);\n    } catch (error) {\n      showGameFileCreationError(i18n, outputPath, error);\n      return;\n    }\n\n    const project = gd.ProjectHelper.createNewGDJSProject();\n    const filePath = path.join(outputPath, 'game.json');\n    project.setProjectFile(filePath);\n    this.props.onCreate(project, LocalFileStorageProvider, {\n      fileIdentifier: filePath,\n    });\n    sendNewGameCreated('');\n  }\n\n  render() {\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Column noMargin>\n            <Line>\n              <Column>\n                <Text>\n                  <Trans>Choose a game to use as a starter:</Trans>\n                </Text>\n              </Column>\n            </Line>\n            <Line>\n              <Column expand noMargin>\n                <List>\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/platformer.png\"\n                      />\n                    }\n                    primaryText={<Trans>Platformer</Trans>}\n                    secondaryText={\n                      <Trans>\n                        A simple platform game, with coins to collect, moving\n                        platforms and enemies.\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() => this.createFromExample(i18n, 'platformer')}\n                  />\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/space-shooter.png\"\n                      />\n                    }\n                    primaryText={<Trans>8-bit Space Shooter</Trans>}\n                    secondaryText={\n                      <Trans>\n                        A beautiful, retro side-scrolling shooter where you must\n                        defeat incoming enemies with your mecha transforming\n                        spaceship. Huge boss included!\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() =>\n                      this.createFromExample(i18n, 'space-shooter')\n                    }\n                  />\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/geometry-monster.png\"\n                      />\n                    }\n                    primaryText={<Trans>Geometry Monster</Trans>}\n                    secondaryText={\n                      <Trans>\n                        A hyper casual endless game where you have to collect\n                        shapes and avoid bombs, with a progressively increasing\n                        difficulty.\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() =>\n                      this.createFromExample(i18n, 'geometry-monster')\n                    }\n                  />\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/isometric-game.png\"\n                      />\n                    }\n                    primaryText={<Trans>Isometric game</Trans>}\n                    secondaryText={\n                      <Trans>\n                        An example of an isometric game where you can explore a\n                        map with your character.\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() =>\n                      this.createFromExample(i18n, 'isometric-game')\n                    }\n                  />\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/downhill-bike-physics-demo.png\"\n                      />\n                    }\n                    primaryText=\"Downhill Bike Racing\"\n                    secondaryText={\n                      <Trans>\n                        An example of a 2D physics based game, where players\n                        have to reach the end as fast as possible.\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() =>\n                      this.createFromExample(i18n, 'downhill-bike-physics-demo')\n                    }\n                  />\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/pairs.png\"\n                      />\n                    }\n                    primaryText=\"Pairs\"\n                    secondaryText={\n                      <Trans>\n                        Find all matching pairs of cards in this relaxing game.\n                        Use tweens to create smooth, natural animations with a\n                        few events.\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() => this.createFromExample(i18n, 'pairs')}\n                  />\n                  <ListItem\n                    primaryText={<Trans>Empty game</Trans>}\n                    secondaryText={\n                      <Trans>Start a new game from scratch.</Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() => this.createEmptyGame(i18n)}\n                  />\n                </List>\n                <Line alignItems=\"center\" justifyContent=\"center\">\n                  <RaisedButton\n                    label={<Trans>See examples</Trans>}\n                    onClick={() => this.props.onShowExamples()}\n                  />\n                </Line>\n              </Column>\n            </Line>\n            <Divider />\n            <Line expand>\n              <Column expand>\n                <LocalFolderPicker\n                  fullWidth\n                  value={this.state.outputPath}\n                  onChange={this._handleChangePath}\n                  type=\"create-game\"\n                />\n              </Column>\n            </Line>\n          </Column>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { type ResourceSourceComponentProps } from './ResourceSource.flow';\nimport { Component } from 'react';\nimport {\n  isPathInProjectFolder,\n  copyAllToProjectFolder,\n} from './ResourceUtils.js';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\nconst path = optionalRequire('path');\n\nconst gd = global.gd;\n\nexport default [\n  {\n    name: 'localAudioFileOpener',\n    displayName: 'Choose a new audio file',\n    kind: 'audio',\n    component: class LocalAudioFileOpener extends Component<ResourceSourceComponentProps> {\n      chooseResources = (\n        project: gdProject,\n        multiSelections: boolean = true\n      ): Promise<Array<any>> => {\n        const { i18n } = this.props;\n        const options = {\n          multiSelections,\n          title: i18n._(t`Choose an audio file`),\n          name: i18n._(t`Audio files`),\n          extensions: ['wav', 'mp3', 'ogg'],\n        };\n        return selectLocalResourcePath(i18n, project, options).then(\n          resources => {\n            return resources.map(resourcePath => {\n              const audioResource = new gd.AudioResource();\n              const projectPath = path.dirname(project.getProjectFile());\n              audioResource.setFile(path.relative(projectPath, resourcePath));\n              audioResource.setName(path.relative(projectPath, resourcePath));\n\n              return audioResource;\n            });\n          }\n        );\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localFileOpener',\n    displayName: 'Choose a new image',\n    kind: 'image',\n    component: class LocalFileOpener extends Component<ResourceSourceComponentProps> {\n      chooseResources = (\n        project: gdProject,\n        multiSelections: boolean = true\n      ): Promise<Array<any>> => {\n        const { i18n } = this.props;\n        const options = {\n          multiSelections,\n          title: i18n._(t`Choose an image`),\n          name: i18n._(t`Image files`),\n          extensions: ['png', 'jpg'],\n        };\n        return selectLocalResourcePath(i18n, project, options).then(\n          resources => {\n            return resources.map(resourcePath => {\n              const imageResource = new gd.ImageResource();\n              const projectPath = path.dirname(project.getProjectFile());\n              imageResource.setFile(path.relative(projectPath, resourcePath));\n              imageResource.setName(path.relative(projectPath, resourcePath));\n\n              return imageResource;\n            });\n          }\n        );\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localFontFileOpener',\n    displayName: 'Choose a new font file',\n    kind: 'font',\n    component: class LocalFontFileOpener extends Component<ResourceSourceComponentProps> {\n      chooseResources = (\n        project: gdProject,\n        multiSelections: boolean = true\n      ): Promise<Array<any>> => {\n        const { i18n } = this.props;\n        const options = {\n          multiSelections,\n          title: i18n._(t`Choose a font file`),\n          name: i18n._(t`Font files`),\n          extensions: ['ttf', 'otf'],\n        };\n        return selectLocalResourcePath(i18n, project, options).then(\n          resources => {\n            return resources.map(resourcePath => {\n              const fontResource = new gd.FontResource();\n              const projectPath = path.dirname(project.getProjectFile());\n              fontResource.setFile(path.relative(projectPath, resourcePath));\n              fontResource.setName(path.relative(projectPath, resourcePath));\n\n              return fontResource;\n            });\n          }\n        );\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localVideoFileOpener',\n    displayName: 'Choose a new video file',\n    kind: 'video',\n    component: class LocalVideoFileOpener extends Component<ResourceSourceComponentProps> {\n      chooseResources = (\n        project: gdProject,\n        multiSelections: boolean = true\n      ): Promise<Array<any>> => {\n        const { i18n } = this.props;\n        const options = {\n          multiSelections,\n          title: i18n._(t`Choose a video file`),\n          name: i18n._(t`Video files`),\n          extensions: ['mp4'],\n        };\n        return selectLocalResourcePath(i18n, project, options).then(\n          resources => {\n            return resources.map(resourcePath => {\n              const videoResource = new gd.VideoResource();\n              const projectPath = path.dirname(project.getProjectFile());\n              videoResource.setFile(path.relative(projectPath, resourcePath));\n              videoResource.setName(path.relative(projectPath, resourcePath));\n\n              return videoResource;\n            });\n          }\n        );\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localJsonFileOpener',\n    displayName: 'Choose a new json file',\n    kind: 'json',\n    component: class LocalJsonFileOpener extends Component<ResourceSourceComponentProps> {\n      chooseResources = (\n        project: gdProject,\n        multiSelections: boolean = true\n      ): Promise<Array<any>> => {\n        const { i18n } = this.props;\n        const options = {\n          multiSelections,\n          title: i18n._(t`Choose a json file`),\n          name: i18n._(t`JSON file`),\n          extensions: ['json'],\n        };\n        return selectLocalResourcePath(i18n, project, options).then(\n          resources => {\n            return resources.map(resourcePath => {\n              const jsonResource = new gd.JsonResource();\n              const projectPath = path.dirname(project.getProjectFile());\n              jsonResource.setFile(path.relative(projectPath, resourcePath));\n              jsonResource.setName(path.relative(projectPath, resourcePath));\n\n              return jsonResource;\n            });\n          }\n        );\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n];\n\nconst selectLocalResourcePath = (\n  i18n: I18nType,\n  project: gdProject,\n  options: {\n    multiSelections: boolean,\n    title: string,\n    name: string,\n    extensions: Array<string>,\n  }\n): Promise<Array<string>> => {\n  return new Promise((resolve, reject) => {\n    if (!dialog) return reject('Not supported');\n\n    const properties = ['openFile'];\n    if (options.multiSelections) properties.push('multiSelections');\n    const projectPath = path.dirname(project.getProjectFile());\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showOpenDialog(\n      browserWindow,\n      {\n        title: options.title,\n        properties,\n        filters: [{ name: options.name, extensions: options.extensions }],\n        defaultPath: projectPath,\n      },\n      paths => {\n        if (!paths) return resolve([]);\n\n        const outsideProjectFolderPaths = paths.filter(\n          path => !isPathInProjectFolder(project, path)\n        );\n\n        if (outsideProjectFolderPaths.length) {\n          // eslint-disable-next-line\n          const answer = confirm(\n            i18n._(\n              t`This/these file(s) are outside the project folder. Would you like to make a copy of them in your project folder first (recommended)?`\n            )\n          );\n\n          if (answer) {\n            return resolve(copyAllToProjectFolder(project, paths));\n          }\n        }\n\n        return resolve(paths);\n      }\n    );\n  });\n};\n","// @flow\nimport { openPiskel } from './LocalPiskelBridge';\nimport { openJfxr } from './LocalJfxrBridge';\nimport { openYarn } from './LocalYarnBridge';\nimport { type ResourceExternalEditor } from './ResourceExternalEditor.flow';\nimport { sendExternalEditorOpened } from '../Utils/Analytics/EventSender';\n\n/**\n * This is the list of editors that can be used to edit resources\n * on Electron runtime.\n */\nconst editors: Array<ResourceExternalEditor> = [\n  {\n    name: 'piskel-app',\n    displayName: 'Edit with Piskel',\n    kind: 'image',\n    edit: options => {\n      sendExternalEditorOpened('piskel');\n      return openPiskel(options);\n    },\n  },\n  {\n    name: 'Jfxr',\n    displayName: 'Create/Edit a Sound effect with Jfxr (*.wav)',\n    kind: 'audio',\n    edit: options => {\n      sendExternalEditorOpened('jfxr');\n      return openJfxr(options);\n    },\n  },\n  {\n    name: 'Yarn',\n    displayName: 'Create/Edit a Dialogue Tree with Yarn (*.json)',\n    kind: 'json',\n    edit: options => {\n      sendExternalEditorOpened('yarn');\n      return openYarn(options);\n    },\n  },\n];\n\nexport default editors;\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { type ExternalEditorOpenOptions } from './ResourceExternalEditor.flow';\nimport {\n  createOrUpdateResource,\n  getLocalResourceFullPath,\n} from './ResourceUtils.js';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\n/**\n * Open Piskel editor for the specified resources.\n * Take a list of resource names to be edited and will call the callback methods\n * (notably onChangesSaved with the name of the edited resources)\n */\nexport const openPiskel = ({\n  project,\n  resourcesLoader,\n  resourceNames,\n  singleFrame,\n  onChangesSaved,\n  extraOptions,\n}: ExternalEditorOpenOptions) => {\n  if (!electron || !ipcRenderer) return;\n\n  const resources = resourceNames.map((resourceName, originalIndex) => {\n    let resourcePath = getLocalResourceFullPath(project, resourceName);\n    return {\n      resourcePath,\n      resourceName,\n      originalIndex,\n    };\n  });\n\n  const projectPath = path.dirname(project.getProjectFile());\n  const externalEditorData = {\n    ...extraOptions,\n    resources,\n    singleFrame,\n    projectPath,\n  };\n\n  // Listen to events meaning that edition in Piskel is finished\n  ipcRenderer.removeAllListeners('piskel-changes-saved');\n  ipcRenderer.on(\n    'piskel-changes-saved',\n    (event, outputResources, newAnimationName, externalEditorData) => {\n      const metadata = externalEditorData.data\n        ? { pskl: externalEditorData }\n        : null;\n\n      const resourcesManager = project.getResourcesManager();\n      outputResources.forEach(resource => {\n        resource.name = path.relative(projectPath, resource.path); // Still needed for onChangesSaved()\n        createOrUpdateResource(project, new gd.ImageResource(), resource.name);\n      });\n\n      outputResources[0].metadata = metadata;\n      outputResources[0].newAnimationName = newAnimationName;\n      // in case this is for a single frame object, save the metadata in the Image object\n      if (externalEditorData.singleFrame) {\n        if (metadata) {\n          resourcesManager\n            .getResource(path.relative(projectPath, outputResources[0].path))\n            .setMetadata(JSON.stringify(metadata));\n        }\n        onChangesSaved(outputResources);\n      } else {\n        // In case there are multiple frames, pass back the metadata to the editor and let it store it at an appropriate place.\n        // (For example, for sprites, SpritesList.js will save it in the metadata of the gd.Direction).\n\n        onChangesSaved(outputResources);\n      }\n    }\n  );\n\n  // Issue the event to open piskel\n  ipcRenderer.send('piskel-open-then-load-animation', externalEditorData);\n};\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { type ExternalEditorOpenOptions } from './ResourceExternalEditor.flow';\nimport {\n  createOrUpdateResource,\n  getLocalResourceFullPath,\n} from './ResourceUtils.js';\n\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\n/**\n * Open JFXR to create wav resources.\n */\nexport const openJfxr = ({\n  project,\n  resourcesLoader,\n  resourceNames,\n  onChangesSaved,\n  resourcePath,\n  extraOptions,\n}: ExternalEditorOpenOptions) => {\n  if (!electron || !ipcRenderer) return;\n  const projectPath = path.dirname(project.getProjectFile());\n  const initialResourcePath = getLocalResourceFullPath(\n    project,\n    resourceNames[0]\n  );\n\n  const externalEditorData = {\n    resourcePath: initialResourcePath,\n    externalEditorData: extraOptions.externalEditorData,\n    projectPath,\n  };\n\n  ipcRenderer.removeAllListeners('jfxr-changes-saved');\n  ipcRenderer.on(\n    'jfxr-changes-saved',\n    (event, newFilePath, externalEditorData) => {\n      const name = path.relative(projectPath, newFilePath);\n      createOrUpdateResource(project, new gd.AudioResource(), name);\n\n      const metadata = {\n        jfxr: externalEditorData,\n      };\n      project\n        .getResourcesManager()\n        .getResource(name)\n        .setMetadata(JSON.stringify(metadata));\n      onChangesSaved([{ metadata, name }]);\n    }\n  );\n\n  ipcRenderer.send('jfxr-create-wav', externalEditorData);\n};\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { type ExternalEditorOpenOptions } from './ResourceExternalEditor.flow';\nimport {\n  createOrUpdateResource,\n  getLocalResourceFullPath,\n} from './ResourceUtils.js';\n\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\n/**\n * Open YARN to Create/Edit Json Dialogue Tree resources.\n */\nexport const openYarn = ({\n  project,\n  resourcesLoader,\n  resourceNames,\n  onChangesSaved,\n  resourcePath,\n  extraOptions,\n}: ExternalEditorOpenOptions) => {\n  if (!electron || !ipcRenderer) return;\n  const projectPath = path.dirname(project.getProjectFile());\n  const initialResourcePath = getLocalResourceFullPath(\n    project,\n    resourceNames[0]\n  );\n\n  const externalEditorData = {\n    resourcePath: initialResourcePath,\n    externalEditorData: extraOptions.externalEditorData,\n    projectPath,\n  };\n\n  ipcRenderer.removeAllListeners('yarn-changes-saved');\n  ipcRenderer.on('yarn-changes-saved', (event, newFilePath) => {\n    const name = path.relative(projectPath, newFilePath);\n    createOrUpdateResource(project, new gd.JsonResource(), name);\n    onChangesSaved([{ name }]);\n  });\n\n  ipcRenderer.send('yarn-create-json', externalEditorData);\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport localFileSystem from '../LocalFileSystem';\nimport optionalRequire from '../../../Utils/OptionalRequire';\nimport { timeFunction } from '../../../Utils/TimeFunction';\nimport { findGDJS } from '../../../GameEngineFinder/LocalGDJSFinder';\nimport LocalNetworkPreviewDialog from './LocalNetworkPreviewDialog';\nimport assignIn from 'lodash/assignIn';\nimport { type PreviewOptions } from '../../PreviewLauncher.flow';\nimport { findLocalIp } from './LocalIpFinder';\nimport SubscriptionChecker from '../../../Profile/SubscriptionChecker';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst BrowserWindow = electron ? electron.remote.BrowserWindow : null;\nconst gd = global.gd;\n\ntype Props = {|\n  onExport?: () => void,\n  onChangeSubscription?: () => void,\n|};\n\ntype State = {\n  networkPreviewDialogOpen: boolean,\n  networkPreviewHost: ?string,\n  networkPreviewPort: ?number,\n  networkPreviewError: ?any,\n  previewGamePath: ?string,\n  devToolsOpen: boolean,\n  previewBrowserWindowConfig: ?{\n    width: number,\n    height: number,\n    useContentSize: boolean,\n    title: string,\n    backgroundColor: string,\n  },\n};\n\nexport default class LocalPreviewLauncher extends React.Component<\n  Props,\n  State\n> {\n  canDoNetworkPreview = () => true;\n\n  state = {\n    networkPreviewDialogOpen: false,\n    networkPreviewHost: null,\n    networkPreviewPort: null,\n    networkPreviewError: null,\n    previewGamePath: null,\n    devToolsOpen: true,\n    previewBrowserWindowConfig: null,\n  };\n  _subscriptionChecker: ?SubscriptionChecker = null;\n\n  _openPreviewBrowserWindow = () => {\n    if (\n      !BrowserWindow ||\n      !this.state.previewBrowserWindowConfig ||\n      !this.state.previewGamePath\n    )\n      return;\n\n    const win = new BrowserWindow(this.state.previewBrowserWindowConfig);\n    win.loadURL(`file://${this.state.previewGamePath}/index.html`);\n    win.webContents.on('devtools-opened', () => {\n      this.setState({ devToolsOpen: true });\n    });\n    win.webContents.on('devtools-closed', () => {\n      this.setState({ devToolsOpen: false });\n    });\n    if (this.state.devToolsOpen) win.openDevTools();\n  };\n\n  _openPreviewWindow = (\n    project: gdProject,\n    gamePath: string,\n    options: PreviewOptions\n  ): void => {\n    this.setState(\n      {\n        previewBrowserWindowConfig: {\n          width: project.getGameResolutionWidth(),\n          height: project.getGameResolutionHeight(),\n          useContentSize: true,\n          title: `Preview of ${project.getName()}`,\n          backgroundColor: '#000000',\n        },\n        previewGamePath: gamePath,\n      },\n      () => {\n        if (!options.networkPreview) {\n          this._openPreviewBrowserWindow();\n        } else {\n          if (!ipcRenderer) return;\n\n          ipcRenderer.removeAllListeners('serve-folder-done');\n          ipcRenderer.removeAllListeners('local-network-ips');\n          ipcRenderer.on('serve-folder-done', (event, err, serverParams) => {\n            if (err) {\n              this.setState({\n                networkPreviewDialogOpen: true,\n                networkPreviewPort: null,\n                networkPreviewHost: null,\n                networkPreviewError: err,\n              });\n            } else {\n              this.setState({\n                networkPreviewDialogOpen: true,\n                networkPreviewPort: serverParams.port,\n              });\n            }\n\n            setTimeout(() => this._checkSubscription());\n          });\n          ipcRenderer.on('local-network-ips', (event, ipAddresses) => {\n            this.setState({\n              networkPreviewHost: findLocalIp(ipAddresses),\n            });\n          });\n          ipcRenderer.send('serve-folder', {\n            root: gamePath,\n          });\n          ipcRenderer.send('get-local-network-ips');\n        }\n      }\n    );\n  };\n\n  _prepareExporter = (): Promise<any> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const outputDir = path.join(fileSystem.getTempDir(), 'preview');\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        outputDir,\n        exporter,\n      };\n    });\n  };\n\n  launchLayoutPreview = (\n    project: gdProject,\n    layout: gdLayout,\n    options: PreviewOptions\n  ): Promise<any> => {\n    if (!project || !layout) return Promise.reject();\n\n    return this._prepareExporter().then(({ outputDir, exporter }) => {\n      timeFunction(\n        () => {\n          exporter.exportLayoutForPixiPreview(project, layout, outputDir);\n          exporter.delete();\n          this._openPreviewWindow(project, outputDir, options);\n        },\n        time => console.info(`Preview took ${time}ms`)\n      );\n    });\n  };\n\n  launchExternalLayoutPreview = (\n    project: gdProject,\n    layout: gdLayout,\n    externalLayout: gdExternalLayout,\n    options: PreviewOptions\n  ): Promise<any> => {\n    if (!project || !externalLayout) return Promise.reject();\n\n    return this._prepareExporter().then(({ outputDir, exporter }) => {\n      timeFunction(\n        () => {\n          exporter.exportExternalLayoutForPixiPreview(\n            project,\n            layout,\n            externalLayout,\n            outputDir\n          );\n          exporter.delete();\n          this._openPreviewWindow(project, outputDir, options);\n        },\n        time => console.info(`Preview took ${time}ms`)\n      );\n    });\n  };\n\n  _checkSubscription = () => {\n    if (!this._subscriptionChecker) return true;\n\n    return this._subscriptionChecker.checkHasSubscription();\n  };\n\n  render() {\n    const {\n      networkPreviewDialogOpen,\n      networkPreviewHost,\n      networkPreviewPort,\n      networkPreviewError,\n    } = this.state;\n    return (\n      <React.Fragment>\n        <SubscriptionChecker\n          ref={subscriptionChecker =>\n            (this._subscriptionChecker = subscriptionChecker)\n          }\n          onChangeSubscription={() => {\n            this.setState({ networkPreviewDialogOpen: false });\n            if (this.props.onChangeSubscription)\n              this.props.onChangeSubscription();\n          }}\n          id=\"Preview over wifi\"\n          title={<Trans>Preview over wifi</Trans>}\n          mode=\"try\"\n        />\n        <LocalNetworkPreviewDialog\n          open={networkPreviewDialogOpen}\n          url={\n            networkPreviewHost && networkPreviewPort\n              ? `${networkPreviewHost}:${networkPreviewPort}`\n              : null\n          }\n          error={networkPreviewError}\n          onClose={() => this.setState({ networkPreviewDialogOpen: false })}\n          onExport={this.props.onExport}\n          onRunPreviewLocally={this._openPreviewBrowserWindow}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../../UI/Dialog';\nimport FlatButton from '../../../UI/FlatButton';\nimport TextField from '../../../UI/TextField';\nimport Text from '../../../UI/Text';\nimport { Line } from '../../../UI/Grid';\nimport PlaceholderLoader from '../../../UI/PlaceholderLoader';\n\ntype Props = {|\n  open: boolean,\n  url: ?string,\n  onClose: () => void,\n  onExport: ?() => void,\n  onRunPreviewLocally: () => void,\n  error: ?any,\n|};\n\nexport default class LocalNetworkDialog extends React.Component<Props, {}> {\n  render() {\n    const {\n      url,\n      open,\n      error,\n      onExport,\n      onClose,\n      onRunPreviewLocally,\n    } = this.props;\n    if (!open) return null;\n\n    return (\n      <Dialog\n        actions={[\n          <FlatButton\n            key=\"close\"\n            label={<Trans>Close</Trans>}\n            primary\n            onClick={onClose}\n          />,\n        ]}\n        secondaryActions={[\n          onExport && (\n            <FlatButton\n              key=\"export\"\n              label={<Trans>Export game</Trans>}\n              onClick={onExport}\n            />\n          ),\n          <FlatButton\n            key=\"run-preview-locally\"\n            label={<Trans>Run on this computer</Trans>}\n            onClick={onRunPreviewLocally}\n          />,\n        ]}\n        modal\n        open={open}\n        onRequestClose={onClose}\n      >\n        {error && (\n          <Line>\n            <Text>\n              <Trans>\n                Unable to start the server for the preview! Make sure that you\n                are authorized to run servers on this computer. Otherwise, use\n                classic preview to test your game.\n              </Trans>\n            </Text>\n          </Line>\n        )}\n        {!error && !url && <PlaceholderLoader />}\n        {!error && url && (\n          <div>\n            <Line>\n              <Text>\n                <Trans>\n                  Your preview is ready! On your mobile or tablet, open your\n                  browser and enter in the address bar:\n                </Trans>\n              </Text>\n            </Line>\n            <TextField value={url} fullWidth />\n            <Line>\n              <Text>\n                <Trans>\n                  Please note that your device should be connected on the same\n                  network as this computer.\n                </Trans>\n              </Text>\n            </Line>\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n","// @flow\n\nexport const findLocalIp = (ipAddresses: Array<string>): ?string => {\n  if (!ipAddresses.length) return null;\n\n  let firstLocalIp = ipAddresses.find(\n    ipAddress => ipAddress.indexOf('192.168') === 0\n  );\n  if (firstLocalIp) return firstLocalIp;\n\n  firstLocalIp = ipAddresses.find(ipAddress => ipAddress.indexOf('192') === 0);\n  if (firstLocalIp) return firstLocalIp;\n\n  return ipAddresses[0];\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { type Exporter } from '../ExportDialog';\nimport { localCordovaExportPipeline } from './LocalCordovaExport';\nimport { localElectronExportPipeline } from './LocalElectronExport';\nimport { localHTML5ExportPipeline } from './LocalHTML5Export';\nimport { localCocos2dExportPipeline } from './LocalCocos2dExport';\nimport { localFacebookInstantGamesExportPipeline } from './LocalFacebookInstantGamesExport';\nimport { localOnlineCordovaExportPipeline } from './LocalOnlineCordovaExport.js';\nimport { localOnlineElectronExportPipeline } from './LocalOnlineElectronExport.js';\nimport { localOnlineWebExportPipeline } from './LocalOnlineWebExport';\nimport PhoneIphone from '@material-ui/icons/PhoneIphone';\nimport LaptopMac from '@material-ui/icons/LaptopMac';\nimport Folder from '@material-ui/icons/Folder';\nimport Facebook from '../../UI/CustomSvgIcons/Facebook';\nimport Cordova from '../../UI/CustomSvgIcons/Cordova';\nimport Chrome from '../../UI/CustomSvgIcons/Chrome';\n\nexport const getLocalExporters = (): Array<Exporter> => [\n  {\n    name: <Trans>Android (&amp; iOS coming soon)</Trans>,\n    renderIcon: props => <PhoneIphone {...props} />,\n    helpPage: '/publishing/android_and_ios',\n    description: (\n      <Trans>\n        Package your game for Android directly from GDevelop. iOS support is\n        coming soon!\n      </Trans>\n    ),\n    key: 'localonlinecordovaexport',\n    exportPipeline: localOnlineCordovaExportPipeline,\n  },\n  {\n    name: <Trans>Web (upload online)</Trans>,\n    renderIcon: props => <Chrome {...props} />,\n    helpPage: '/publishing/web',\n    description: (\n      <Trans>\n        Upload your game online directly from GDevelop and share the link to\n        players. Play to your game using your browser on computers and mobile\n        phones.\n      </Trans>\n    ),\n    key: 'localonlinewebexport',\n    exportPipeline: localOnlineWebExportPipeline,\n  },\n  {\n    name: <Trans>Local folder</Trans>,\n    renderIcon: props => <Folder {...props} />,\n    helpPage: '/publishing/html5_game_in_a_local_folder',\n    description: (\n      <Trans>\n        Build the game locally as a HTML5 game. You can then publish it on\n        website like Kongregate, Game Jolt, itch.io, Poki...\n      </Trans>\n    ),\n    key: 'localexport',\n    exportPipeline: localHTML5ExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>Facebook Instant Games</Trans>,\n    renderIcon: props => <Facebook {...props} />,\n    helpPage: '/publishing/publishing-to-facebook-instant-games',\n    description: (\n      <Trans>\n        Package your game as a Facebook Instant Games that can be played on\n        Facebook Messenger.\n      </Trans>\n    ),\n    key: 'localfacebookinstantgames',\n    exportPipeline: localFacebookInstantGamesExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>iOS &amp; Android (manual)</Trans>,\n    renderIcon: props => <Cordova {...props} />,\n    helpPage: '/publishing/android_and_ios_with_cordova',\n    description: (\n      <Trans>\n        Build the game locally as a Cordova project, and export it manually to\n        iOS or Android with Cordova developers tools.\n      </Trans>\n    ),\n    key: 'localcordovaexport',\n    exportPipeline: localCordovaExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>Windows/macOS/Linux</Trans>,\n    renderIcon: props => <LaptopMac {...props} />,\n    helpPage: '/publishing/windows-macos-linux',\n    description: (\n      <Trans>\n        Package your game as an app for Windows, macOS or Linux directly from\n        GDevelop.\n      </Trans>\n    ),\n    key: 'localonlineelectronexport',\n    exportPipeline: localOnlineElectronExportPipeline,\n  },\n  {\n    name: <Trans>Windows/macOS/Linux (manual)</Trans>,\n    renderIcon: props => <LaptopMac {...props} />,\n    helpPage: '/publishing/windows-macos-linux-with-electron',\n    description: (\n      <Trans>\n        Build the game locally and export it manually to Windows, macOS or Linux\n        with third-party developer tools.\n      </Trans>\n    ),\n    key: 'localelectronexport',\n    exportPipeline: localElectronExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>Cocos2d-JS</Trans>,\n    renderIcon: props => <PhoneIphone {...props} />,\n    helpPage: '/publishing/android_and_ios_with_cocos2d-js',\n    description: (\n      <Trans>\n        Export your game using Cocos2d-JS game engine. The game can be compiled\n        for Android or iOS if you install Cocos2d-JS developer tools.\n      </Trans>\n    ),\n    key: 'localcocos2dexport',\n    exportPipeline: localCocos2dExportPipeline,\n    experimental: true,\n  },\n];\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/CordovaExport';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype ExportState = {\n  outputDir: string,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n|};\n\ntype ExportOutput = null;\n\ntype ResourcesDownloadOutput = null;\n\ntype CompressionOutput = null;\n\nexport const localCordovaExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-cordova',\n\n  getInitialExportState: (project: gdProject) => ({\n    outputDir: project.getLastCompilationDirectory(),\n  }),\n\n  canLaunchBuild: exportState => !!exportState.outputDir,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <Column noMargin>\n          <ExplanationHeader />\n        </Column>\n      </Line>\n      <Line>\n        <LocalFolderPicker\n          type=\"export\"\n          value={exportState.outputDir}\n          defaultPath={project.getLastCompilationDirectory()}\n          onChange={outputDir => {\n            updateExportState(() => ({ outputDir }));\n          }}\n          fullWidth\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForCordova', true);\n    exporter.exportWholePixiProject(\n      context.project,\n      context.exportState.outputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve(null);\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve(null);\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    return Promise.resolve(null);\n  },\n\n  renderDoneFooter: ({ exportState, onClose }) => {\n    const openExportFolder = () => {\n      if (shell) shell.openItem(exportState.outputDir);\n    };\n\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <RaisedButton\n            key=\"open\"\n            label={<Trans>Open folder</Trans>}\n            primary={true}\n            onClick={openExportFolder}\n          />\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/ElectronExport';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype ExportState = {\n  outputDir: string,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n|};\n\ntype ExportOutput = null;\n\ntype ResourcesDownloadOutput = null;\n\ntype CompressionOutput = null;\n\nexport const localElectronExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-electron',\n\n  getInitialExportState: (project: gdProject) => ({\n    outputDir: project.getLastCompilationDirectory(),\n  }),\n\n  canLaunchBuild: exportState => !!exportState.outputDir,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <Column noMargin>\n          <ExplanationHeader />\n        </Column>\n      </Line>\n      <Line>\n        <LocalFolderPicker\n          type=\"export\"\n          value={exportState.outputDir}\n          defaultPath={project.getLastCompilationDirectory()}\n          onChange={outputDir => {\n            updateExportState(() => ({ outputDir }));\n          }}\n          fullWidth\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForElectron', true);\n    exporter.exportWholePixiProject(\n      context.project,\n      context.exportState.outputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve(null);\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve(null);\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    return Promise.resolve(null);\n  },\n\n  renderDoneFooter: ({ exportState, onClose }) => {\n    const openExportFolder = () => {\n      if (shell) shell.openItem(exportState.outputDir);\n    };\n\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <RaisedButton\n            key=\"open\"\n            label={<Trans>Open folder</Trans>}\n            primary={true}\n            onClick={openExportFolder}\n          />\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport { ExplanationHeader, DoneFooter } from '../GenericExporters/HTML5Export';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype ExportState = {\n  outputDir: string,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n|};\n\ntype ExportOutput = null;\n\ntype ResourcesDownloadOutput = null;\n\ntype CompressionOutput = null;\n\nexport const localHTML5ExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-html5',\n\n  getInitialExportState: (project: gdProject) => ({\n    outputDir: project.getLastCompilationDirectory(),\n  }),\n\n  canLaunchBuild: exportState => !!exportState.outputDir,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <ExplanationHeader />\n      </Line>\n      <Line>\n        <LocalFolderPicker\n          type=\"export\"\n          value={exportState.outputDir}\n          defaultPath={project.getLastCompilationDirectory()}\n          onChange={outputDir => {\n            updateExportState(() => ({ outputDir }));\n          }}\n          fullWidth\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Export as a HTML5 game</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exporter.exportWholePixiProject(\n      context.project,\n      context.exportState.outputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve(null);\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve(null);\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    return Promise.resolve(null);\n  },\n\n  renderDoneFooter: ({ exportState, onClose }) => {\n    const openExportFolder = () => {\n      if (shell) shell.openItem(exportState.outputDir);\n    };\n\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <RaisedButton\n            fullWidth\n            primary\n            onClick={() => openExportFolder()}\n            label={<Trans>Open the exported game folder</Trans>}\n          />\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport Toggle from '../../UI/Toggle';\nimport {\n  DoneFooter,\n  ExplanationHeader,\n} from '../GenericExporters/Cocos2dExport';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype ExportState = {\n  outputDir: string,\n  debugMode: boolean,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n|};\n\ntype ExportOutput = null;\n\ntype ResourcesDownloadOutput = null;\n\ntype CompressionOutput = null;\n\nexport const localCocos2dExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-cocos2d',\n\n  getInitialExportState: (project: gdProject) => ({\n    outputDir: project.getLastCompilationDirectory(),\n    debugMode: false,\n  }),\n\n  canLaunchBuild: exportState => !!exportState.outputDir,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <ExplanationHeader />\n      </Line>\n      <Line>\n        <LocalFolderPicker\n          type=\"export\"\n          value={exportState.outputDir}\n          defaultPath={project.getLastCompilationDirectory()}\n          onChange={outputDir => {\n            updateExportState(prevState => ({ ...prevState, outputDir }));\n          }}\n          fullWidth\n        />\n      </Line>\n      <Line>\n        <Toggle\n          onToggle={(e, check) =>\n            updateExportState(prevState => ({\n              ...prevState,\n              debugMode: check,\n            }))\n          }\n          toggled={exportState.debugMode}\n          labelPosition=\"right\"\n          label={\n            <Trans>\n              Debug mode (show FPS counter and stats in the bottom left)\n            </Trans>\n          }\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    exporter.exportWholeCocos2dProject(\n      context.project,\n      context.exportState.debugMode,\n      context.exportState.outputDir\n    );\n    exporter.delete();\n\n    return Promise.resolve(null);\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve(null);\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    return Promise.resolve(null);\n  },\n\n  renderDoneFooter: ({ exportState, onClose }) => {\n    const openExportFolder = () => {\n      if (shell) shell.openItem(exportState.outputDir);\n    };\n\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <RaisedButton\n            key=\"open\"\n            label={<Trans>Open folder</Trans>}\n            primary={true}\n            onClick={openExportFolder}\n          />\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport LocalFilePicker from '../../UI/LocalFilePicker';\nimport { archiveLocalFolder } from '../../Utils/LocalArchiver';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/FacebookInstantGamesExport';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype ExportState = {\n  archiveOutputFilename: string,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  temporaryOutputDir: string,\n|};\n\ntype ExportOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype ResourcesDownloadOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype CompressionOutput = string;\n\nexport const localFacebookInstantGamesExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-facebook-instant-games',\n\n  getInitialExportState: (project: gdProject) => ({\n    archiveOutputFilename: app\n      ? path.join(app.getPath('documents'), 'fb-instant-game.zip')\n      : '',\n  }),\n\n  canLaunchBuild: exportState => !!exportState.archiveOutputFilename,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <ExplanationHeader />\n      </Line>\n      <Line>\n        <LocalFilePicker\n          title={'Facebook Instant Games export zip file'}\n          message={\n            'Choose where to save the exported file for Facebook Instant Games'\n          }\n          filters={[\n            {\n              name: 'Compressed file for Facebook Instant Games',\n              extensions: ['zip'],\n            },\n          ]}\n          value={exportState.archiveOutputFilename}\n          defaultPath={app ? app.getPath('documents') : ''}\n          onChange={value =>\n            updateExportState(() => ({ archiveOutputFilename: value }))\n          }\n          fullWidth\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n      const temporaryOutputDir = path.join(\n        fileSystem.getTempDir(),\n        'FacebookInstantGamesExport'\n      );\n      fileSystem.mkDir(temporaryOutputDir);\n      fileSystem.clearDir(temporaryOutputDir);\n\n      return {\n        exporter,\n        temporaryOutputDir,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, temporaryOutputDir }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForFacebookInstantGames', true);\n    exporter.exportWholePixiProject(\n      context.project,\n      temporaryOutputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    return archiveLocalFolder({\n      path: temporaryOutputDir,\n      outputFilename: context.exportState.archiveOutputFilename,\n    });\n  },\n\n  renderDoneFooter: ({ exportState, onClose }) => {\n    const openExportFolder = () => {\n      if (shell && path)\n        shell.openItem(path.dirname(exportState.archiveOutputFilename));\n    };\n\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <RaisedButton\n            key=\"open\"\n            label={<Trans>Open folder</Trans>}\n            primary={true}\n            onClick={openExportFolder}\n          />\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport React, { PureComponent } from 'react';\nimport TextField from '../TextField';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport RaisedButton from '../RaisedButton';\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'baseline',\n  },\n  button: {\n    marginLeft: 10,\n  },\n  textField: {\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  value: string,\n  onChange: string => void,\n  title: string,\n  message: string,\n  defaultPath?: string,\n  fullWidth?: boolean,\n  filters: Array<{\n    name: string,\n    extensions: Array<string>,\n  }>,\n|};\n\nexport default class LocalFilePicker extends PureComponent<Props, *> {\n  onChooseFolder = () => {\n    if (!dialog || !electron) return;\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showSaveDialog(\n      browserWindow,\n      {\n        title: this.props.title,\n        filters: this.props.filters,\n        message: this.props.message,\n        defaultPath: this.props.defaultPath,\n      },\n      filename => {\n        this.props.onChange(filename || '');\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          ...styles.container,\n          width: this.props.fullWidth ? '100%' : undefined,\n        }}\n      >\n        <TextField\n          margin=\"dense\"\n          style={styles.textField}\n          type=\"text\"\n          hintText={t`Choose a file`}\n          value={this.props.value}\n          onChange={(event, value) => this.props.onChange(value)}\n        />\n        <RaisedButton\n          label={<Trans>Choose</Trans>}\n          style={styles.button}\n          onClick={this.onChooseFolder}\n        />\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type Build,\n  buildCordovaAndroid,\n} from '../../Utils/GDevelopServices/Build';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport { archiveLocalFolder } from '../../Utils/LocalArchiver';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport localFileSystem from './LocalFileSystem';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport { ExplanationHeader } from '../GenericExporters/OnlineCordovaExport';\nconst path = optionalRequire('path');\nconst os = optionalRequire('os');\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  temporaryOutputDir: string,\n|};\n\ntype ExportOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype ResourcesDownloadOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype CompressionOutput = string;\n\nexport const localOnlineCordovaExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-online-cordova',\n  onlineBuildType: 'cordova-build',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Packaging for Android</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n      const temporaryOutputDir = path.join(\n        fileSystem.getTempDir(),\n        'OnlineCordovaExport'\n      );\n      fileSystem.mkDir(temporaryOutputDir);\n      fileSystem.clearDir(temporaryOutputDir);\n\n      return {\n        exporter,\n        temporaryOutputDir,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, temporaryOutputDir }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForCordova', true);\n    exporter.exportWholePixiProject(\n      context.project,\n      temporaryOutputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    const archiveOutputDir = os.tmpdir();\n    return archiveLocalFolder({\n      path: temporaryOutputDir,\n      outputFilename: path.join(archiveOutputDir, 'game-archive.zip'),\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    outputFile: CompressionOutput\n  ): Promise<string> => {\n    if (!ipcRenderer) return Promise.reject('No support for upload');\n\n    ipcRenderer.removeAllListeners('s3-file-upload-progress');\n    ipcRenderer.removeAllListeners('s3-file-upload-done');\n\n    return new Promise((resolve, reject) => {\n      ipcRenderer.on(\n        's3-file-upload-progress',\n        (event, stepCurrentProgress, stepMaxProgress) => {\n          context.updateStepProgress(stepCurrentProgress, stepMaxProgress);\n        }\n      );\n      ipcRenderer.on('s3-file-upload-done', (event, err, prefix) => {\n        if (err) return reject(err);\n        resolve(prefix);\n      });\n      ipcRenderer.send('s3-file-upload', outputFile);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildCordovaAndroid(\n      getAuthorizationHeader,\n      profile.uid,\n      uploadBucketKey\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport { type Build, buildElectron } from '../../Utils/GDevelopServices/Build';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport { archiveLocalFolder } from '../../Utils/LocalArchiver';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport localFileSystem from './LocalFileSystem';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport {\n  type ExportState,\n  SetupExportHeader,\n} from '../GenericExporters/OnlineElectronExport';\nconst path = optionalRequire('path');\nconst os = optionalRequire('os');\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  temporaryOutputDir: string,\n|};\n\ntype ExportOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype ResourcesDownloadOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype CompressionOutput = string;\n\nexport const localOnlineElectronExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-online-electron',\n  onlineBuildType: 'electron-build',\n\n  getInitialExportState: () => ({\n    targets: ['winExe'],\n  }),\n\n  canLaunchBuild: (exportState: ExportState) => !!exportState.targets.length,\n\n  renderHeader: props => <SetupExportHeader {...props} />,\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n      const temporaryOutputDir = path.join(\n        fileSystem.getTempDir(),\n        'OnlineElectronExport'\n      );\n      fileSystem.mkDir(temporaryOutputDir);\n      fileSystem.clearDir(temporaryOutputDir);\n\n      return {\n        exporter,\n        temporaryOutputDir,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, temporaryOutputDir }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForElectron', true);\n    exporter.exportWholePixiProject(\n      context.project,\n      temporaryOutputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    const archiveOutputDir = os.tmpdir();\n    return archiveLocalFolder({\n      path: temporaryOutputDir,\n      outputFilename: path.join(archiveOutputDir, 'game-archive.zip'),\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    outputFile: CompressionOutput\n  ): Promise<string> => {\n    if (!ipcRenderer) return Promise.reject('No support for upload');\n\n    ipcRenderer.removeAllListeners('s3-file-upload-progress');\n    ipcRenderer.removeAllListeners('s3-file-upload-done');\n\n    return new Promise((resolve, reject) => {\n      ipcRenderer.on(\n        's3-file-upload-progress',\n        (event, stepCurrentProgress, stepMaxProgress) => {\n          context.updateStepProgress(stepCurrentProgress, stepMaxProgress);\n        }\n      );\n      ipcRenderer.on('s3-file-upload-done', (event, err, prefix) => {\n        if (err) return reject(err);\n        resolve(prefix);\n      });\n      ipcRenderer.send('s3-file-upload', outputFile);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildElectron(\n      getAuthorizationHeader,\n      profile.uid,\n      uploadBucketKey,\n      exportState.targets\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport { type Build, buildWeb } from '../../Utils/GDevelopServices/Build';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport { findGDJS } from '../../GameEngineFinder/LocalGDJSFinder';\nimport { archiveLocalFolder } from '../../Utils/LocalArchiver';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport localFileSystem from './LocalFileSystem';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport { ExplanationHeader } from '../GenericExporters/OnlineWebExport';\nconst path = optionalRequire('path');\nconst os = optionalRequire('os');\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  temporaryOutputDir: string,\n|};\n\ntype ExportOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype ResourcesDownloadOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype CompressionOutput = string;\n\nexport const localOnlineWebExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-online-web',\n  onlineBuildType: 'web-build',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Publish online</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n      const temporaryOutputDir = path.join(\n        fileSystem.getTempDir(),\n        'OnlineWebExport'\n      );\n      fileSystem.mkDir(temporaryOutputDir);\n      fileSystem.clearDir(temporaryOutputDir);\n\n      return {\n        exporter,\n        temporaryOutputDir,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, temporaryOutputDir }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exporter.exportWholePixiProject(\n      context.project,\n      temporaryOutputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    const archiveOutputDir = os.tmpdir();\n    return archiveLocalFolder({\n      path: temporaryOutputDir,\n      outputFilename: path.join(archiveOutputDir, 'game-archive.zip'),\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    outputFile: CompressionOutput\n  ): Promise<string> => {\n    if (!ipcRenderer) return Promise.reject('No support for upload');\n\n    ipcRenderer.removeAllListeners('s3-file-upload-progress');\n    ipcRenderer.removeAllListeners('s3-file-upload-done');\n\n    return new Promise((resolve, reject) => {\n      ipcRenderer.on(\n        's3-file-upload-progress',\n        (event, stepCurrentProgress, stepMaxProgress) => {\n          context.updateStepProgress(stepCurrentProgress, stepMaxProgress);\n        }\n      );\n      ipcRenderer.on('s3-file-upload-done', (event, err, prefix) => {\n        if (err) return reject(err);\n        resolve(prefix);\n      });\n      ipcRenderer.send('s3-file-upload', outputFile);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildWeb(getAuthorizationHeader, profile.uid, uploadBucketKey);\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport MainFrame from '.';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\nimport { isMacLike } from '../Utils/Platform';\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\n\ntype Props = {|\n  children: React.Element<typeof MainFrame>,\n  i18n: I18nType,\n|};\n\ntype MainMenuEvent =\n  | 'main-menu-open'\n  | 'main-menu-save'\n  | 'main-menu-save-as'\n  | 'main-menu-close'\n  | 'main-menu-export'\n  | 'main-menu-create'\n  | 'main-menu-open-project-manager'\n  | 'main-menu-open-start-page'\n  | 'main-menu-open-debugger'\n  | 'main-menu-open-about'\n  | 'main-menu-open-preferences'\n  | 'main-menu-open-language'\n  | 'main-menu-open-profile'\n  | 'update-status';\n\ntype MenuItemTemplate =\n  | {|\n      onClickSendEvent?: MainMenuEvent,\n      onClickOpenLink?: string,\n      accelerator?: string,\n      enabled?: boolean,\n      label?: string,\n    |}\n  | {|\n      submenu: Array<MenuItemTemplate>,\n      label: string,\n    |}\n  | {|\n      submenu: Array<MenuItemTemplate>,\n      role: string,\n    |}\n  | {|\n      type: 'separator',\n    |}\n  | {|\n      role: string,\n    |};\n\ntype RootMenuTemplate =\n  | {|\n      label: string,\n      submenu: Array<MenuItemTemplate>,\n    |}\n  | {|\n      role: string,\n      submenu: Array<MenuItemTemplate>,\n    |};\n\n/**\n * Forward events received from Electron main process\n * to the underlying child React component.\n */\nclass ElectronMainMenu extends React.Component<Props, {||}> {\n  _editor: ?MainFrame;\n  _language: ?string;\n\n  componentDidMount() {\n    if (!ipcRenderer) return;\n\n    ipcRenderer.on(\n      ('main-menu-open': MainMenuEvent),\n      event => this._editor && this._editor.chooseProject()\n    );\n    ipcRenderer.on(\n      ('main-menu-save': MainMenuEvent),\n      event => this._editor && this._editor.saveProject()\n    );\n    ipcRenderer.on(\n      ('main-menu-save-as': MainMenuEvent),\n      event => this._editor && this._editor.saveProjectAs()\n    );\n    ipcRenderer.on(\n      ('main-menu-close': MainMenuEvent),\n      event => this._editor && this._editor.askToCloseProject()\n    );\n    ipcRenderer.on(\n      ('main-menu-export': MainMenuEvent),\n      event => this._editor && this._editor.openExportDialog()\n    );\n    ipcRenderer.on(\n      ('main-menu-create': MainMenuEvent),\n      event => this._editor && this._editor.openCreateDialog()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-project-manager': MainMenuEvent),\n      event => this._editor && this._editor.openProjectManager()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-start-page': MainMenuEvent),\n      event => this._editor && this._editor.openStartPage()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-debugger': MainMenuEvent),\n      event => this._editor && this._editor.openDebugger()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-about': MainMenuEvent),\n      event => this._editor && this._editor.openAboutDialog()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-preferences': MainMenuEvent),\n      event => this._editor && this._editor.openPreferences()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-language': MainMenuEvent),\n      event => this._editor && this._editor.openLanguage()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-profile': MainMenuEvent),\n      event => this._editor && this._editor.openProfile()\n    );\n    ipcRenderer.on(\n      ('update-status': MainMenuEvent),\n      (event, status) => this._editor && this._editor.setUpdateStatus(status)\n    );\n\n    this._buildAndSendMenuTemplate();\n  }\n\n  componentDidUpdate() {\n    if (this.props.i18n.language !== this._language) {\n      this._buildAndSendMenuTemplate();\n      this._language = this.props.i18n.language;\n    }\n  }\n\n  _buildAndSendMenuTemplate() {\n    const { i18n } = this.props;\n    const fileTemplate = {\n      label: i18n._(t`File`),\n      submenu: [\n        {\n          label: i18n._(t`Create a New Project...`),\n          accelerator: 'CommandOrControl+N',\n          onClickSendEvent: 'main-menu-create',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Open...`),\n          accelerator: 'CommandOrControl+O',\n          onClickSendEvent: 'main-menu-open',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Save`),\n          accelerator: 'CommandOrControl+S',\n          onClickSendEvent: 'main-menu-save',\n        },\n        {\n          label: i18n._(t`Save as...`),\n          accelerator: 'CommandOrControl+Alt+S',\n          onClickSendEvent: 'main-menu-save-as',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Export (web, iOS, Android)...`),\n          onClickSendEvent: 'main-menu-export',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Close Project`),\n          accelerator: 'CommandOrControl+Shift+W',\n          onClickSendEvent: 'main-menu-close',\n        },\n      ],\n    };\n    if (!isMacLike()) {\n      fileTemplate.submenu.push(\n        { type: 'separator' },\n        {\n          label: i18n._(t`My Profile`),\n          onClickSendEvent: 'main-menu-open-profile',\n        },\n        {\n          label: i18n._(t`Preferences`),\n          onClickSendEvent: 'main-menu-open-preferences',\n        },\n        {\n          label: i18n._(t`Language`),\n          onClickSendEvent: 'main-menu-open-language',\n        }\n      );\n    }\n\n    const editTemplate = {\n      label: i18n._(t`Edit`),\n      submenu: [\n        { role: 'undo' },\n        { role: 'redo' },\n        { type: 'separator' },\n        { role: 'cut' },\n        { role: 'copy' },\n        { role: 'paste' },\n        { role: 'pasteandmatchstyle' },\n        { role: 'delete' },\n        { role: 'selectall' },\n      ],\n    };\n\n    const viewTemplate = {\n      label: i18n._(t`View`),\n      submenu: [\n        {\n          label: i18n._(t`Show Project Manager`),\n          accelerator: 'CommandOrControl+Alt+P',\n          onClickSendEvent: 'main-menu-open-project-manager',\n        },\n        {\n          label: i18n._(t`Show Start Page`),\n          onClickSendEvent: 'main-menu-open-start-page',\n        },\n        {\n          label: i18n._(t`Open Debugger`),\n          onClickSendEvent: 'main-menu-open-debugger',\n        },\n        { type: 'separator' },\n        { role: 'toggledevtools' },\n        { type: 'separator' },\n        { role: 'togglefullscreen' },\n      ],\n    };\n\n    const windowTemplate = {\n      role: 'window',\n      submenu: [{ role: 'minimize' }],\n    };\n\n    const helpTemplate = {\n      role: 'help',\n      submenu: [\n        {\n          label: i18n._(t`GDevelop website`),\n          onClickOpenLink: 'http://gdevelop-app.com',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Community Forums`),\n          onClickOpenLink: 'https://forum.gdevelop-app.com',\n        },\n        {\n          label: i18n._(t`Community Discord Chat`),\n          onClickOpenLink: 'https://discord.gg/rjdYHvj',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Contribute to GDevelop`),\n          onClickOpenLink: 'https://gdevelop-app.com/contribute/',\n        },\n        {\n          label: i18n._(t`Create Extensions for GDevelop`),\n          onClickOpenLink:\n            'https://github.com/4ian/GDevelop/blob/master/newIDE/README-extensions.md',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Help to Translate GDevelop`),\n          onClickOpenLink: 'https://crowdin.com/project/gdevelop',\n        },\n        {\n          label: i18n._(t`Report a wrong translation`),\n          onClickOpenLink: 'https://github.com/4ian/GDevelop/issues/969',\n        },\n      ],\n    };\n    if (!isMacLike()) {\n      helpTemplate.submenu.push(\n        { type: 'separator' },\n        {\n          label: i18n._(t`About GDevelop`),\n          onClickSendEvent: 'main-menu-open-about',\n        }\n      );\n    }\n\n    const template: Array<RootMenuTemplate> = [\n      fileTemplate,\n      editTemplate,\n      viewTemplate,\n      windowTemplate,\n      helpTemplate,\n    ];\n\n    if (isMacLike()) {\n      template.unshift({\n        label: i18n._(t`GDevelop 5`),\n        submenu: [\n          {\n            label: i18n._(t`About GDevelop`),\n            onClickSendEvent: 'main-menu-open-about',\n          },\n          { type: 'separator' },\n          {\n            label: i18n._(t`My Profile`),\n            onClickSendEvent: 'main-menu-open-profile',\n          },\n          {\n            label: i18n._(t`Preferences`),\n            onClickSendEvent: 'main-menu-open-preferences',\n          },\n          {\n            label: i18n._(t`Language`),\n            onClickSendEvent: 'main-menu-open-language',\n          },\n          { type: 'separator' },\n          { role: 'services', submenu: [] },\n          { type: 'separator' },\n          { role: 'hide' },\n          { role: 'hideothers' },\n          { role: 'unhide' },\n          { type: 'separator' },\n          { role: 'quit' },\n        ],\n      });\n\n      editTemplate.submenu.push(\n        { type: 'separator' },\n        {\n          label: i18n._(t`Speech`),\n          submenu: [{ role: 'startspeaking' }, { role: 'stopspeaking' }],\n        }\n      );\n\n      windowTemplate.submenu = [\n        { role: 'minimize' },\n        { role: 'zoom' },\n        { type: 'separator' },\n        { role: 'front' },\n      ];\n    }\n\n    if (ipcRenderer) {\n      ipcRenderer.send('set-main-menu', template);\n    }\n  }\n\n  render() {\n    return React.cloneElement(this.props.children, {\n      ref: editor => (this._editor = editor),\n    });\n  }\n}\n\nexport default ElectronMainMenu;\n","// @flow\n// Note: this file does not use export/imports and use Flow comments to allow its usage from Node.js\n\nconst { loadExtension } = require('.');\nconst optionalRequire = require('../Utils/OptionalRequire');\nconst { findJsExtensionModules } = require('./LocalJsExtensionsFinder');\n\n/*flow-include\nimport type {JsExtensionsLoader, TranslationFunction} from '.';\nimport ObjectsEditorService from '../ObjectEditor/ObjectsEditorService';\nimport ObjectsRenderingService from '../ObjectsRendering/ObjectsRenderingService';\n\ntype MakeExtensionsLoaderArguments = {|\n  gd: any,\n  objectsEditorService: typeof ObjectsEditorService,\n  objectsRenderingService: typeof ObjectsRenderingService,\n  filterExamples: boolean,\n|};\n*/\n\n/**\n * Loader that will find all JS extensions declared in GDJS/Runtime/Extensions/xxx/JsExtension.js.\n * If you add a new extension and also want it to be available for the web-app version, add it in\n * BrowserJsExtensionsLoader.js\n */\nmodule.exports = function makeExtensionsLoader(\n  {\n    gd,\n    objectsEditorService,\n    objectsRenderingService,\n    filterExamples,\n  } /*: MakeExtensionsLoaderArguments*/\n) /*: JsExtensionsLoader*/ {\n  return {\n    loadAllExtensions: (_ /*: TranslationFunction */) => {\n      return findJsExtensionModules({ filterExamples }).then(\n        extensionModulePaths => {\n          return Promise.all(\n            extensionModulePaths.map(extensionModulePath => {\n              let extensionModule = null;\n              try {\n                extensionModule = optionalRequire(extensionModulePath, {\n                  rethrowException: true,\n                });\n              } catch (ex) {\n                return {\n                  extensionModulePath,\n                  result: {\n                    message:\n                      'Unable to import extension. Please check for any syntax error or error that would prevent it from being run.',\n                    error: true,\n                    rawError: ex,\n                  },\n                };\n              }\n\n              if (extensionModule) {\n                // Load any editor for objects, if we have somewhere where\n                // to register them.\n                if (\n                  objectsEditorService &&\n                  extensionModule.registerEditorConfigurations\n                ) {\n                  extensionModule.registerEditorConfigurations(\n                    objectsEditorService\n                  );\n                }\n\n                // Load any renderer for objects, if we have somewhere where\n                // to register them.\n                if (\n                  objectsRenderingService &&\n                  extensionModule.registerInstanceRenderers\n                ) {\n                  extensionModule.registerInstanceRenderers(\n                    objectsRenderingService\n                  );\n                }\n\n                return {\n                  extensionModulePath,\n                  result: loadExtension(\n                    _,\n                    gd,\n                    gd.JsPlatform.get(),\n                    extensionModule\n                  ),\n                };\n              }\n\n              return {\n                extensionModulePath,\n                result: {\n                  error: true,\n                  message:\n                    'Unknown error. Please check for any syntax error or error that would prevent it from being run.',\n                },\n              };\n            })\n          );\n        },\n        err => {\n          console.error(`Unable to find JS extensions modules`);\n          throw err;\n        }\n      );\n    },\n  };\n};\n","// Note: this file does not use export/imports nor Flow to allow its usage from Node.js\n\nconst { findGDJS } = require('../GameEngineFinder/LocalGDJSFinder');\nconst optionalRequire = require('../Utils/OptionalRequire');\nconst path = optionalRequire('path');\nconst fs = optionalRequire('fs');\n\nconst checkIfPathHasJsExtensionModule = extensionFolderPath => {\n  return new Promise(resolve => {\n    const jsExtensionModulePath = path.join(\n      extensionFolderPath,\n      'JsExtension.js'\n    );\n    fs.stat(jsExtensionModulePath, (err, stats) => {\n      if (err) {\n        return resolve(null);\n      }\n\n      return resolve(stats.isFile() ? jsExtensionModulePath : null);\n    });\n  });\n};\n\nconst findJsExtensionModules = ({ filterExamples }) => {\n  return findGDJS().then(({ gdjsRoot }) => {\n    const extensionsRoot = path.join(gdjsRoot, 'Runtime', 'Extensions');\n    console.info(\n      `Searching for JS extensions (file called JsExtension.js) in ${extensionsRoot}...`\n    );\n    return new Promise((resolve, reject) => {\n      fs.readdir(extensionsRoot, (error, extensionFolders) => {\n        if (error) {\n          return reject(error);\n        }\n\n        const filteredExtensionFolders = extensionFolders.filter(folder => {\n          if (!filterExamples) return true;\n\n          return folder.indexOf('Example') === -1;\n        });\n\n        Promise.all(\n          filteredExtensionFolders.map(extensionFolder =>\n            checkIfPathHasJsExtensionModule(\n              path.join(extensionsRoot, extensionFolder)\n            )\n          )\n        ).then(modulePaths => {\n          resolve(modulePaths.filter(modulePath => !!modulePath));\n        }, reject);\n      });\n    });\n  });\n};\n\nmodule.exports = {\n  findJsExtensionModules,\n};\n","// @flow\nimport { type EventsFunctionCodeWriter } from '..';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport slugs from 'slugs';\nconst os = optionalRequire('os');\nconst fs = optionalRequire('fs');\n\n/**\n * Create the EventsFunctionCodeWriter that writes generated code for events functions\n * to local files.\n */\nexport const makeLocalEventsFunctionCodeWriter = (): EventsFunctionCodeWriter => {\n  const outputDir = os.tmpdir() + '/GDGeneratedEventsFunctions';\n  fs.mkdir(outputDir, err => {\n    if (err && err.code !== 'EEXIST') {\n      console.error(\n        'Unable to create the directory where to output events functions generated code: ',\n        err\n      );\n      return;\n    }\n  });\n\n  const getPathFor = (codeNamespace: string) => {\n    return `${outputDir}/${slugs(codeNamespace)}.js`;\n  };\n\n  return {\n    getIncludeFileFor: (codeNamespace: string) => getPathFor(codeNamespace),\n    writeFunctionCode: (\n      functionCodeNamespace: string,\n      code: string\n    ): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        const filepath = getPathFor(functionCodeNamespace);\n        fs.writeFile(filepath, code, err => {\n          if (err) return reject(err);\n\n          resolve();\n        });\n      });\n    },\n    writeBehaviorCode: (\n      behaviorCodeNamespace: string,\n      code: string\n    ): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        const filepath = getPathFor(behaviorCodeNamespace);\n        fs.writeFile(filepath, code, err => {\n          if (err) return reject(err);\n\n          resolve();\n        });\n      });\n    },\n  };\n};\n","// @flow\nimport { serializeToJSObject } from '../../Utils/Serializer';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst fs = optionalRequire('fs-extra');\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst writeJSONFile = (object: Object, filepath: string): Promise<void> => {\n  if (!fs) return Promise.reject(new Error('Filesystem is not supported.'));\n\n  try {\n    const content = JSON.stringify(object, null, 2);\n    return fs.ensureDir(path.dirname(filepath)).then(\n      () =>\n        new Promise((resolve, reject) => {\n          fs.writeFile(filepath, content, (err: ?Error) => {\n            if (err) {\n              return reject(err);\n            }\n\n            return resolve();\n          });\n        })\n    );\n  } catch (stringifyException) {\n    return Promise.reject(stringifyException);\n  }\n};\n\nexport default class LocalEventsFunctionsExtensionWriter {\n  static chooseEventsFunctionExtensionFile = (): Promise<?string> => {\n    return new Promise((resolve, reject) => {\n      if (!dialog) return reject('Not supported');\n\n      const browserWindow = electron.remote.getCurrentWindow();\n      dialog.showSaveDialog(\n        browserWindow,\n        {\n          title: 'Export an extension of the project',\n          filters: [\n            {\n              name: 'GDevelop 5 \"events based\" extension',\n              extensions: ['json'],\n            },\n          ],\n          defaultPath: 'Extension.json',\n        },\n        path => {\n          if (!path) return resolve(null);\n\n          return resolve(path);\n        }\n      );\n    });\n  };\n\n  static writeEventsFunctionsExtension = (\n    extension: gdEventsFunctionsExtension,\n    filepath: string\n  ): Promise<void> => {\n    const serializedObject = serializeToJSObject(extension);\n    return writeJSONFile(serializedObject, filepath).catch(err => {\n      console.error('Unable to write the events function extension:', err);\n      throw err;\n    });\n  };\n}\n","// @flow\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst fs = optionalRequire('fs');\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst readJSONFile = (filepath: string): Promise<Object> => {\n  if (!fs) return Promise.reject('Filesystem is not supported.');\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(filepath, { encoding: 'utf8' }, (err, data) => {\n      if (err) return reject(err);\n\n      try {\n        const dataObject = JSON.parse(data);\n        return resolve(dataObject);\n      } catch (ex) {\n        return reject(filepath + ' is a corrupted/malformed file.');\n      }\n    });\n  });\n};\n\nexport default class LocalEventsFunctionsExtensionOpener {\n  static chooseEventsFunctionExtensionFile = (): Promise<?string> => {\n    return new Promise((resolve, reject) => {\n      if (!dialog) return reject('Not supported');\n\n      const browserWindow = electron.remote.getCurrentWindow();\n      dialog.showOpenDialog(\n        browserWindow,\n        {\n          title: 'Import an extension in the project',\n          properties: ['openFile'],\n          message: 'Choose an extension file to import (.json file)',\n          filters: [\n            {\n              name: 'GDevelop 5 \"events based\" extension',\n              extensions: ['json'],\n            },\n          ],\n        },\n        paths => {\n          if (!paths || !paths.length) return resolve(null);\n\n          return resolve(paths[0]);\n        }\n      );\n    });\n  };\n\n  static readEventsFunctionExtensionFile = (\n    filepath: string\n  ): Promise<Object> => {\n    return readJSONFile(filepath);\n  };\n}\n","// @flow\nimport * as React from 'react';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport PreferencesContext from '../MainFrame/Preferences/PreferencesContext';\nimport debounce from 'lodash/debounce';\nconst electron = optionalRequire('electron');\nconst fs = optionalRequire('fs');\nconst child_process = optionalRequire('child_process');\nconst process = optionalRequire('process');\nconst path = optionalRequire('path');\n\ntype DevelopmentWatchPaths = {\n  paths: Array<string>,\n  pathsWithErrors: { [string]: Error },\n};\n\n/**\n * Returns the folder corresponding to newIDE/app in **development**. Works\n * only when running in Electron.\n */\nconst findDevelopmentNewIdeAppPath = () /*: string */ => {\n  if (!electron) return '';\n\n  const developmentElectronAppFolder = process.cwd();\n  return path.join(developmentElectronAppFolder, '../app');\n};\n\n/**\n * Returns the list of folders to watch containing the **sources** of\n * GDJS and Extensions, found relatively to the current working directory which is the\n * Electron working directory during **development**. Won't work\n * if running on production.\n */\nconst getAllDevelopmentWatchPaths = (): Promise<DevelopmentWatchPaths> => {\n  if (!electron || !fs)\n    return Promise.resolve({ paths: [], pathsWithErrors: {} });\n\n  const pathsWithErrors: { [string]: Error } = {};\n\n  const gdevelopRepositoryRoot = path.join(\n    findDevelopmentNewIdeAppPath(),\n    '../..'\n  );\n  const gdjsSourcesRuntimePath = path.join(\n    gdevelopRepositoryRoot,\n    'GDJS/Runtime'\n  );\n  const gdExtensionsPath = path.join(gdevelopRepositoryRoot, 'Extensions');\n\n  const getExtensionDevelopmentWatchPaths = (): Promise<Array<string>> =>\n    new Promise(resolve =>\n      fs.readdir(gdExtensionsPath, (error: ?Error, files: Array<string>) => {\n        if (error) {\n          pathsWithErrors[gdExtensionsPath] = error;\n          resolve([]);\n          return;\n        }\n\n        resolve(\n          Promise.all(\n            files.map(\n              (file): Promise<?string> =>\n                new Promise(resolve => {\n                  const extensionPath = path.join(gdExtensionsPath, file);\n                  fs.stat(extensionPath, (error, stat) => {\n                    if (error) {\n                      pathsWithErrors[extensionPath] = error;\n                      resolve(extensionPath);\n                      return;\n                    }\n\n                    resolve(stat.isDirectory() ? extensionPath : null);\n                  });\n                })\n            )\n          ).then(paths => paths.filter(Boolean))\n        );\n      })\n    );\n\n  const getGDJSDevelopmentWatchPaths = (): Promise<Array<string>> => {\n    return Promise.resolve(\n      [gdjsSourcesRuntimePath].concat(\n        [\n          // List of all sub folders in GDJS Runtime.\n          // If you add any folder, add it here too so that it\n          // can be watched for changes.\n          'Cocos2d',\n          'Cordova',\n          'Electron',\n          'FacebookInstantGames',\n          'cocos-renderers',\n          'cocos-sound-manager',\n          'events-tools',\n          'fontfaceobserver-font-manager',\n          'howler-sound-manager',\n          'libs',\n          'pixi-renderers',\n          'websocket-debugger-client',\n        ].map(folder => path.join(gdjsSourcesRuntimePath, folder))\n      )\n    );\n  };\n\n  return getExtensionDevelopmentWatchPaths().then(\n    extensionDevelopmentWatchPaths => {\n      return getGDJSDevelopmentWatchPaths().then(gdjsDevelopmentWatchPaths => {\n        return {\n          paths: [\n            ...gdjsDevelopmentWatchPaths,\n            ...extensionDevelopmentWatchPaths,\n          ],\n          pathsWithErrors,\n        };\n      });\n    }\n  );\n};\n\n/**\n * Launch the newIDE script `import-GDJS-Runtime`.\n */\nconst importGDJSRuntime = (): Promise<void> => {\n  if (!child_process || !path) return Promise.reject(new Error('Unsupported'));\n\n  return new Promise((resolve, reject) => {\n    child_process.exec(\n      `node \"${path.join(\n        findDevelopmentNewIdeAppPath(),\n        'scripts/import-GDJS-Runtime.js'\n      )}\"`,\n      (error, stdout, stderr) => {\n        if (error) {\n          console.error(`GDJS Runtime update error: ${error}`);\n          reject(error);\n          return;\n        }\n\n        console.info(`GDJS Runtime update: ${stdout}`);\n\n        if (stderr) {\n          console.error(`GDJS Runtime update error: ${stderr}`);\n          reject(new Error('Error while updating GDJS Runtime'));\n          return;\n        }\n\n        resolve();\n      }\n    );\n  });\n};\n\n/**\n * Callback for fs.watch, so that  whenever a source file is changed,\n * it relaunchs automatically the script to import.\n */\nconst onWatchEvent = debounce((event: ?string, filename: ?string) => {\n  const eventName = event || 'unknown-event';\n  const resolvedFilename = filename || 'unknown-file';\n  console.info(\n    `GDJS/extensions watchers found a \"${eventName}\" in ${resolvedFilename}, updating GDJS Runtime...`\n  );\n  importGDJSRuntime().catch(() => {});\n}, 100 /* Avoid running the script too much in case multiple changes are fired at the same time. */);\n\nconst genericWatcherErrorMessage =\n  'Error in watcher for GDJS Runtime - manually call npm run `node import-GDJS-Runtime.js` in the newIDE/app/scripts folder if you make changes to GDJS.';\n\n/**\n * Set up some watchers for GDJS and Extensions sources.\n * Stop the watchers when the component is unmounted or `shouldWatch` prop is false.\n */\nexport const LocalGDJSDevelopmentWatcher = () => {\n  const preferences = React.useContext(PreferencesContext);\n  const shouldWatch = preferences.values.useGDJSDevelopmentWatcher;\n\n  React.useEffect(\n    () => {\n      if (!shouldWatch) {\n        // Nothing to set up in the effect if watch is deactivated.\n        return;\n      }\n\n      let stopWatchers = false;\n      let watchers = [];\n      let startTime = performance.now();\n      getAllDevelopmentWatchPaths().then(({ paths, pathsWithErrors }) => {\n        // There is a non nul chance that for some reason the effect was cleaned up\n        // before we retrieved all the paths. Stop there if it's the case.\n        if (stopWatchers) return;\n\n        if (!fs) {\n          console.error(\n            \"Unable to use 'fs' from Node.js to watch changes in GDJS.\"\n          );\n          return;\n        }\n\n        // Reload extensions\n        importGDJSRuntime().catch(() => {});\n\n        // Create watchers\n        paths.forEach(watchPath => {\n          let watcher = null;\n          try {\n            watcher = fs.watch(watchPath, {}, onWatchEvent);\n          } catch (error) {\n            pathsWithErrors[watchPath] = error;\n            return null;\n          }\n\n          if (watcher) {\n            watcher.on('error', error => {\n              console.warn(genericWatcherErrorMessage, error);\n            });\n\n            watchers.push(watcher);\n          }\n        });\n\n        if (Object.keys(pathsWithErrors).length) {\n          console.warn(\n            'Error while setting up watchers for some paths: ',\n            pathsWithErrors\n          );\n        }\n\n        const totalTimeStr = (performance.now() - startTime).toFixed(2);\n        if (watchers.length) {\n          console.info(\n            `Watchers for GDJS Runtime/extensions installed in ${totalTimeStr}ms.`\n          );\n        } else {\n          console.warn(\n            `No watchers for GDJS Runtime/extensions installed (took ${totalTimeStr}ms).`\n          );\n        }\n      });\n\n      // Close all the watchers when the React effect is unregistered\n      return () => {\n        stopWatchers = true;\n        if (!watchers.length) return;\n\n        watchers.forEach(watcher => {\n          watcher.close();\n        });\n        console.info('Watchers for GDJS Runtime closed.');\n      };\n    },\n    [shouldWatch]\n  );\n\n  return null;\n};\n","// @flow\nimport React from 'react';\nimport MainFrame from './MainFrame';\nimport Window from './Utils/Window';\nimport ExportDialog from './Export/ExportDialog';\nimport CreateProjectDialog from './ProjectCreation/CreateProjectDialog';\nimport Authentification from './Utils/GDevelopServices/Authentification';\nimport './UI/iconmoon-font.css'; // Styles for Iconmoon font.\n\n// Import for Electron powered IDE.\nimport ExternalEditor from './ExternalEditor';\nimport LocalExamples from './ProjectCreation/LocalExamples';\nimport LocalStarters from './ProjectCreation/LocalStarters';\nimport localResourceSources from './ResourcesList/LocalResourceSources';\nimport localResourceExternalEditors from './ResourcesList/LocalResourceExternalEditors';\nimport LocalPreviewLauncher from './Export/LocalExporters/LocalPreviewLauncher';\nimport { getLocalExporters } from './Export/LocalExporters';\nimport ElectronMainMenu from './MainFrame/ElectronMainMenu';\nimport makeExtensionsLoader from './JsExtensionsLoader/LocalJsExtensionsLoader';\nimport { makeLocalEventsFunctionCodeWriter } from './EventsFunctionsExtensionsLoader/CodeWriters/LocalEventsFunctionCodeWriter';\nimport ObjectsEditorService from './ObjectEditor/ObjectsEditorService';\nimport ObjectsRenderingService from './ObjectsRendering/ObjectsRenderingService';\nimport Providers from './MainFrame/Providers';\nimport LocalEventsFunctionsExtensionWriter from './EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionWriter';\nimport LocalEventsFunctionsExtensionOpener from './EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionOpener';\nimport ProjectStorageProviders from './ProjectsStorage/ProjectStorageProviders';\nimport LocalFileStorageProvider from './ProjectsStorage/LocalFileStorageProvider';\nimport {LocalGDJSDevelopmentWatcher} from './GameEngineFinder/LocalGDJSDevelopmentWatcher';\nconst gd = global.gd;\n\nexport const create = (authentification: Authentification) => {\n  Window.setUpContextMenu();\n\n  let app = null;\n  const appArguments = Window.getArguments();\n  const isDev = Window.isDev();\n\n  if (appArguments['server-port']) {\n    app = (\n      <Providers\n        authentification={authentification}\n        disableCheckForUpdates={!!appArguments['disable-update-check']}\n        eventsFunctionCodeWriter={null}\n        eventsFunctionsExtensionWriter={null}\n        eventsFunctionsExtensionOpener={null}\n      >\n        {({ i18n, eventsFunctionsExtensionsState }) => (\n          <ProjectStorageProviders\n            appArguments={appArguments}\n            storageProviders={[]}\n          >\n            {({\n              currentStorageProviderOperations,\n              useStorageProvider,\n              storageProviders,\n              initialFileMetadataToOpen,\n            }) => (\n              <ExternalEditor\n                serverPort={appArguments['server-port']}\n                isIntegrated={appArguments['mode'] === 'integrated'}\n                editor={appArguments['editor']}\n                editedElementName={appArguments['edited-element-name']}\n              >\n                <MainFrame\n                  i18n={i18n}\n                  eventsFunctionsExtensionsState={\n                    eventsFunctionsExtensionsState\n                  }\n                  resourceSources={localResourceSources}\n                  storageProviders={storageProviders}\n                  useStorageProvider={useStorageProvider}\n                  storageProviderOperations={currentStorageProviderOperations}\n                  resourceExternalEditors={localResourceExternalEditors}\n                  initialFileMetadataToOpen={initialFileMetadataToOpen}\n                />\n              </ExternalEditor>\n            )}\n          </ProjectStorageProviders>\n        )}\n      </Providers>\n    );\n  } else {\n    app = (\n      <Providers\n        authentification={authentification}\n        disableCheckForUpdates={!!appArguments['disable-update-check']}\n        eventsFunctionCodeWriter={makeLocalEventsFunctionCodeWriter()}\n        eventsFunctionsExtensionWriter={LocalEventsFunctionsExtensionWriter}\n        eventsFunctionsExtensionOpener={LocalEventsFunctionsExtensionOpener}\n      >\n        {({ i18n, eventsFunctionsExtensionsState }) => (\n          <ProjectStorageProviders\n            appArguments={appArguments}\n            storageProviders={[LocalFileStorageProvider]}\n            defaultStorageProvider={LocalFileStorageProvider}\n          >\n            {({\n              currentStorageProviderOperations,\n              useStorageProvider,\n              storageProviders,\n              initialFileMetadataToOpen,\n            }) => (\n              <ElectronMainMenu i18n={i18n}>\n                <MainFrame\n                  i18n={i18n}\n                  eventsFunctionsExtensionsState={\n                    eventsFunctionsExtensionsState\n                  }\n                  renderPreviewLauncher={(props, ref) => <LocalPreviewLauncher {...props} ref={ref} />}\n                  renderExportDialog={props => (\n                    <ExportDialog {...props} exporters={getLocalExporters()} />\n                  )}\n                  renderCreateDialog={props => (\n                    <CreateProjectDialog\n                      {...props}\n                      examplesComponent={LocalExamples}\n                      startersComponent={LocalStarters}\n                    />\n                  )}\n                  renderGDJSDevelopmentWatcher={isDev ? () => <LocalGDJSDevelopmentWatcher /> : null}\n                  storageProviders={storageProviders}\n                  useStorageProvider={useStorageProvider}\n                  storageProviderOperations={currentStorageProviderOperations}\n                  resourceSources={localResourceSources}\n                  resourceExternalEditors={localResourceExternalEditors}\n                  extensionsLoader={makeExtensionsLoader({\n                    gd,\n                    objectsEditorService: ObjectsEditorService,\n                    objectsRenderingService: ObjectsRenderingService,\n                    filterExamples: !isDev,\n                  })}\n                  initialFileMetadataToOpen={initialFileMetadataToOpen}\n                />\n              </ElectronMainMenu>\n            )}\n          </ProjectStorageProviders>\n        )}\n      </Providers>\n    );\n  }\n\n  return app;\n};\n","import optionalRequire from '../../Utils/OptionalRequire.js';\nvar fs = optionalRequire('fs-extra');\nvar path = optionalRequire('path');\nvar os = optionalRequire('os');\nconst gd = global.gd;\n\nexport default {\n  mkDir: function(path) {\n    try {\n      fs.mkdirsSync(path);\n    } catch (e) {\n      console.log('mkDir(' + path + ') failed: ' + e);\n      return false;\n    }\n    return true;\n  },\n  dirExists: function(path) {\n    return fs.existsSync(path);\n  },\n  clearDir: function(path) {\n    var files = [];\n    var that = this;\n    if (fs.existsSync(path)) {\n      files = fs.readdirSync(path);\n      files.forEach(function(file) {\n        var curPath = path + '/' + file;\n        if (fs.lstatSync(curPath).isDirectory()) {\n          // recurse\n          that.clearDir(curPath);\n        } else {\n          // delete file\n          fs.unlinkSync(curPath);\n        }\n      });\n    }\n  },\n  getTempDir: function() {\n    return os.tmpdir();\n  },\n  fileNameFrom: function(fullpath) {\n    if (this._isExternalURL(fullpath)) return fullpath;\n\n    fullpath = this._translateURL(fullpath);\n    return path.basename(fullpath);\n  },\n  dirNameFrom: function(fullpath) {\n    if (this._isExternalURL(fullpath)) return '';\n\n    fullpath = this._translateURL(fullpath);\n    return path.dirname(fullpath);\n  },\n  makeAbsolute: function(filename, baseDirectory) {\n    if (this._isExternalURL(filename)) return filename;\n\n    filename = this._translateURL(filename);\n    if (!this.isAbsolute(baseDirectory))\n      baseDirectory = path.resolve(baseDirectory);\n\n    return path.resolve(baseDirectory, path.normalize(filename));\n  },\n  makeRelative: function(filename, baseDirectory) {\n    if (this._isExternalURL(filename)) return filename;\n\n    filename = this._translateURL(filename);\n    return path.relative(baseDirectory, path.normalize(filename));\n  },\n  isAbsolute: function(fullpath) {\n    if (this._isExternalURL(fullpath)) return true;\n\n    if (fullpath.length === 0) return true;\n    fullpath = this._translateURL(fullpath);\n    return (\n      (fullpath.length > 0 && fullpath.charAt(0) === '/') ||\n      (fullpath.length > 1 && fullpath.charAt(1) === ':')\n    );\n  },\n  copyFile: function(source, dest) {\n    //URL are not copied.\n    if (this._isExternalURL(source)) return true;\n\n    source = this._translateURL(source);\n    try {\n      if (source !== dest) fs.copySync(source, dest);\n    } catch (e) {\n      console.log('copyFile(' + source + ', ' + dest + ') failed: ' + e);\n      return false;\n    }\n    return true;\n  },\n  writeToFile: function(file, contents) {\n    try {\n      fs.outputFileSync(file, contents);\n    } catch (e) {\n      console.log('writeToFile(' + file + ', ...) failed: ' + e);\n      return false;\n    }\n    return true;\n  },\n  readFile: function(file) {\n    try {\n      var contents = fs.readFileSync(file);\n      return contents.toString();\n    } catch (e) {\n      console.log('readFile(' + file + ') failed: ' + e);\n      return '';\n    }\n  },\n  readDir: function(path, ext) {\n    ext = ext.toUpperCase();\n    var output = new gd.VectorString();\n    try {\n      var files = [];\n      if (fs.existsSync(path)) {\n        files = fs.readdirSync(path);\n        files.forEach(function(file) {\n          if (\n            ext.length === 0 ||\n            file.toUpperCase().indexOf(ext, file.length - ext.length) !== -1\n          ) {\n            output.push_back(path + '/' + file);\n          }\n        });\n      }\n    } catch (e) {\n      console.log('readDir(' + path + ',' + ext + ') failed: ' + e);\n    }\n\n    return output;\n  },\n  fileExists: function(filename) {\n    filename = this._translateURL(filename);\n    try {\n      const stat = fs.statSync(filename);\n      return stat.isFile();\n    } catch (e) {\n      return false;\n    }\n  },\n  _isExternalURL: function(filename) {\n    return filename.substr(0, 4) === 'http' || filename.substr(0, 4) === 'ftp';\n  },\n  /**\n   * Return the filename associated to the URL on the server, relative to the games directory.\n   * (i.e: Transform g/mydirectory/myfile.png to mydirectory/myfile.png).\n   */\n  _translateURL: function(filename) {\n    if (filename.substr(0, 2) === 'g/' || filename.substr(0, 2) === 'g\\\\')\n      filename = filename.substr(2);\n\n    return filename;\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport React, { PureComponent } from 'react';\nimport TextField from '../TextField';\nimport RaisedButton from '../RaisedButton';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'baseline',\n  },\n  button: {\n    marginLeft: 10,\n  },\n  textField: {\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  type: 'export' | 'create-game',\n  value: string,\n  onChange: string => void,\n  defaultPath?: string,\n  fullWidth?: boolean,\n|};\n\ntype TitleAndMessage = {|\n  title: ?string,\n  message: ?string,\n|};\n\nexport default class LocalFolderPicker extends PureComponent<Props, {||}> {\n  _onChooseFolder = ({ title, message }: TitleAndMessage) => {\n    if (!dialog || !electron) return;\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showOpenDialog(\n      browserWindow,\n      {\n        title,\n        properties: ['openDirectory', 'createDirectory'],\n        message,\n        defaultPath: this.props.defaultPath,\n      },\n      paths => {\n        if (!paths || !paths.length) return;\n\n        this.props.onChange(paths[0]);\n      }\n    );\n  };\n\n  _getTitleAndMessage = (i18n: I18nType): TitleAndMessage => {\n    const { type } = this.props;\n    if (type === 'export') {\n      return {\n        title: i18n._(t`Choose an export folder`),\n        message: i18n._(t`Choose where to export the game`),\n      };\n    } else if (type === 'create-game') {\n      return {\n        title: i18n._(t`Choose a folder for the new game`),\n        message: i18n._(t`Choose where to create the game`),\n      };\n    }\n\n    return {\n      title: undefined,\n      message: undefined,\n    };\n  };\n\n  render() {\n    return (\n      <I18n>\n        {({ i18n }) => {\n          const titleAndMessage = this._getTitleAndMessage(i18n);\n          return (\n            <div\n              style={{\n                ...styles.container,\n                width: this.props.fullWidth ? '100%' : undefined,\n              }}\n            >\n              <TextField\n                margin=\"dense\"\n                style={styles.textField}\n                type=\"text\"\n                hintText={titleAndMessage.title}\n                value={this.props.value}\n                onChange={(event, value) => this.props.onChange(value)}\n              />\n              <RaisedButton\n                label={<Trans>Choose folder</Trans>}\n                primary={false}\n                style={styles.button}\n                onClick={() => this._onChooseFolder(titleAndMessage)}\n              />\n            </div>\n          );\n        }}\n      </I18n>\n    );\n  }\n}\n","// @flow\n\nimport optionalRequire from './OptionalRequire.js';\nconst fs = optionalRequire('fs');\nconst archiver = optionalRequire('archiver');\n\n// TODO: Move in a Archiver folder?\n/**\n * Archive the given folder to a file. Only available when running on Electron runtime.\n */\nexport const archiveLocalFolder = ({\n  path,\n  outputFilename,\n}: {|\n  path: string,\n  outputFilename: string,\n|}): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    if (!fs || !archiver) return reject(new Error('Archiver unavailable'));\n\n    const output = fs.createWriteStream(outputFilename);\n    const archive = archiver('zip', {\n      zlib: { level: 9 }, // Sets the compression level.\n    });\n\n    output.on('close', () => {\n      console.log(\n        `Archive written at ${outputFilename}, ${archive.pointer()} total bytes.`\n      );\n      resolve(outputFilename);\n    });\n\n    archive.on('error', err => {\n      reject(err);\n    });\n\n    archive.pipe(output);\n\n    archive.directory(path, false);\n\n    archive.finalize();\n  });\n};\n","// @flow\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport { type FileMetadata } from '../index';\nimport { unsplit } from '../../Utils/ObjectSplitter.js';\nconst fs = optionalRequire('fs');\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst readJSONFile = (filepath: string): Promise<Object> => {\n  if (!fs) return Promise.reject('Filesystem is not supported.');\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(filepath, { encoding: 'utf8' }, (err, data) => {\n      if (err) return reject(err);\n\n      try {\n        const dataObject = JSON.parse(data);\n        return resolve(dataObject);\n      } catch (ex) {\n        return reject(filepath + ' is a corrupted/malformed file.');\n      }\n    });\n  });\n};\n\nexport const onOpenWithPicker = (): Promise<?FileMetadata> => {\n  return new Promise((resolve, reject) => {\n    if (!dialog) return reject('Not supported');\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showOpenDialog(\n      browserWindow,\n      {\n        title: 'Open a project',\n        properties: ['openFile'],\n        message:\n          'If you want to open your GDevelop 4 project, be sure to save it as a .json file',\n        filters: [{ name: 'GDevelop 5 project', extensions: ['json'] }],\n      },\n      paths => {\n        if (!paths || !paths.length) return resolve(null);\n\n        return resolve({ fileIdentifier: paths[0] });\n      }\n    );\n  });\n};\n\nexport const onOpen = (\n  fileMetadata: FileMetadata\n): Promise<{|\n  content: Object,\n|}> => {\n  const filePath = fileMetadata.fileIdentifier;\n  const projectPath = path.dirname(filePath);\n  return readJSONFile(filePath).then(object => {\n    return unsplit(object, {\n      getReferencePartialObject: referencePath => {\n        return readJSONFile(path.join(projectPath, referencePath) + '.json');\n      },\n      isReferenceMagicPropertyName: '__REFERENCE_TO_SPLIT_OBJECT',\n      // Limit unsplitting to depth 3 (which would allow properties of layouts/external layouts/external events\n      // to be un-splitted, but not the content of these properties), to avoid very slow processing\n      // of large game files.\n      maxUnsplitDepth: 3,\n    }).then(() => {\n      return { content: object };\n    });\n  });\n};\n\nexport const hasAutoSave = (\n  fileMetadata: FileMetadata,\n  compareLastModified: boolean\n): Promise<boolean> => {\n  const filePath = fileMetadata.fileIdentifier;\n  const autoSavePath = filePath + '.autosave';\n  if (fs.existsSync(autoSavePath)) {\n    if (!compareLastModified) {\n      return Promise.resolve(true);\n    }\n    try {\n      const autoSavedTime = fs.statSync(autoSavePath).mtime.getTime();\n      const saveTime = fs.statSync(filePath).mtime.getTime();\n      if (autoSavedTime > saveTime) {\n        return Promise.resolve(true);\n      }\n    } catch (err) {\n      console.error('Unable to compare *.autosave to project', err);\n      return Promise.resolve(false);\n    }\n    return Promise.resolve(false);\n  }\n  return Promise.resolve(false);\n};\n\nexport const onGetAutoSave = (fileMetadata: FileMetadata) => {\n  return Promise.resolve({\n    ...fileMetadata,\n    fileIdentifier: fileMetadata.fileIdentifier + '.autosave',\n  });\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type StorageProvider } from '../index';\nimport {\n  onOpenWithPicker,\n  onOpen,\n  hasAutoSave,\n  onGetAutoSave,\n} from './LocalProjectOpener';\nimport {\n  onSaveProject,\n  onSaveProjectAs,\n  onAutoSaveProject,\n} from './LocalProjectWriter';\nimport {\n  type AppArguments,\n  POSITIONAL_ARGUMENTS_KEY,\n} from '../../Utils/Window';\nimport { type MessageDescriptor } from '../../Utils/i18n/MessageDescriptor.flow';\n\n/**\n * Use the Electron APIs to provide access to the native\n * file system (with native save/open dialogs).\n */\nexport default ({\n  internalName: 'LocalFile',\n  name: t`Local file system`,\n  getFileMetadataFromAppArguments: (appArguments: AppArguments) => {\n    if (!appArguments[POSITIONAL_ARGUMENTS_KEY]) return null;\n    if (!appArguments[POSITIONAL_ARGUMENTS_KEY].length) return null;\n\n    return {\n      fileIdentifier: appArguments[POSITIONAL_ARGUMENTS_KEY][0],\n    };\n  },\n  createOperations: () => ({\n    onOpenWithPicker,\n    onOpen,\n    hasAutoSave,\n    onSaveProject,\n    onSaveProjectAs,\n    onAutoSaveProject,\n    onGetAutoSave,\n    getOpenErrorMessage: (error: Error): MessageDescriptor => {\n      return t`Check that the file exists, that this file is a proper game created with GDevelop and that you have the authorizations to open it.`;\n    },\n  }),\n}: StorageProvider);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport React, { Component } from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport LocalFolderPicker from '../UI/LocalFolderPicker';\nimport Text from '../UI/Text';\nimport { sendNewGameCreated } from '../Utils/Analytics/EventSender';\nimport { Column, Line } from '../UI/Grid';\nimport { findExamples } from './LocalExamplesFinder';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { findEmptyPath } from './LocalPathFinder';\nimport ExamplesList from './ExamplesList';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport { type StorageProvider, type FileMetadata } from '../ProjectsStorage';\nimport LocalFileStorageProvider from '../ProjectsStorage/LocalFileStorageProvider';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nvar fs = optionalRequire('fs-extra');\n\n// To add a new example, add it first in resources/examples (at which point you can see it\n// in the desktop version), then run these scripts:\n// * scripts/update-examples-information-from-resources-examples.js (update metadata)\n// * scripts/update-fixtures-from-resources-examples.js (update web-app examples)\n// and upload the examples to `gdevelop-resources` s3.\n\ntype Props = {|\n  onOpen: (\n    storageProvider: StorageProvider,\n    fileMetadata: FileMetadata\n  ) => void,\n  onExamplesLoaded: () => void,\n|};\n\ntype State = {|\n  outputPath: string,\n  exampleNames: ?Array<string>,\n|};\n\nexport const showGameFileCreationError = (\n  i18n: I18nType,\n  outputPath: string,\n  error: Error\n) => {\n  showWarningBox(\n    i18n._(\n      t`Unable to create the game in the specified folder. Check that you have permissions to write in this folder: ${outputPath} or choose another folder.`\n    ),\n    error\n  );\n};\n\nexport default class LocalExamples extends Component<Props, State> {\n  state = {\n    outputPath: findEmptyPath(\n      path && app\n        ? path.join(app.getPath('documents'), 'GDevelop projects')\n        : ''\n    ),\n    exampleNames: null,\n  };\n\n  componentDidMount() {\n    findExamples(examplesPath => {\n      fs.readdir(examplesPath, (error, exampleNames) => {\n        if (error) {\n          console.error('Unable to read examples:', error);\n          return;\n        }\n\n        this.setState(\n          {\n            exampleNames: exampleNames.filter(name => name !== '.DS_Store'),\n          },\n          () => this.props.onExamplesLoaded()\n        );\n      });\n    });\n  }\n\n  _handleChangePath = (outputPath: string) =>\n    this.setState({\n      outputPath,\n    });\n\n  createFromExample = (i18n: I18nType, exampleName: string) => {\n    const { outputPath } = this.state;\n    if (!fs || !outputPath) return;\n\n    findExamples(examplesPath => {\n      try {\n        fs.mkdirsSync(outputPath);\n        fs.copySync(path.join(examplesPath, exampleName), outputPath);\n      } catch (error) {\n        showGameFileCreationError(i18n, outputPath, error);\n        return;\n      }\n\n      this.props.onOpen(LocalFileStorageProvider, {\n        fileIdentifier: path.join(outputPath, exampleName + '.json'),\n      });\n      sendNewGameCreated(exampleName);\n    });\n  };\n\n  render() {\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Column noMargin>\n            <Line>\n              <Column>\n                <Text>\n                  <Trans>Choose or search for an example to open:</Trans>\n                </Text>\n              </Column>\n            </Line>\n            <Line>\n              <ExamplesList\n                exampleNames={this.state.exampleNames}\n                onCreateFromExample={exampleName =>\n                  this.createFromExample(i18n, exampleName)\n                }\n              />\n            </Line>\n            <Divider />\n            <Line expand>\n              <Column expand>\n                <LocalFolderPicker\n                  fullWidth\n                  value={this.state.outputPath}\n                  onChange={this._handleChangePath}\n                  type=\"create-game\"\n                />\n              </Column>\n            </Line>\n          </Column>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\n\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst app = electron ? electron.remote.app : null;\nconst fs = optionalRequire('fs');\nconst process = optionalRequire('process');\n\nconst tryPath = (\n  path: string,\n  onExists: string => void,\n  onNoAccess: Function\n) =>\n  fs.access(path, fs.constants.R_OK, err => {\n    if (!err) onExists(path);\n    else onNoAccess();\n  });\n\nexport const findExamples = (cb: (?string) => void) => {\n  if (!process || !fs) return '';\n\n  const appPath = app ? app.getAppPath() : process.cwd();\n\n  // First try to find examples in app resources folder\n  tryPath(path.join(appPath, '..', 'examples'), cb, () => {\n    tryPath(\n      path.join(appPath, '..', '..', 'app', 'resources', 'examples'),\n      cb,\n      () => {\n        cb(null);\n      }\n    );\n  });\n};\n","import generateName from '../Utils/NewNameGenerator';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst path = optionalRequire('path');\nvar fs = optionalRequire('fs-extra');\n\nexport const findEmptyPath = basePath => {\n  if (!path) return basePath;\n\n  const folderName = generateName('My project', name => {\n    try {\n      fs.accessSync(path.join(basePath, name));\n    } catch (ex) {\n      return false;\n    }\n    return true;\n  });\n\n  return path.join(basePath, folderName);\n};\n","// @flow\n// TODO: This module could be published on npm if useful.\nimport newNameGenerator from './NewNameGenerator';\nimport slugs from 'slugs';\n\ntype PartialObjectDescription = {|\n  reference: string,\n  object: Object,\n|};\n\ntype Reference = {\n  referenceTo: string,\n};\n\ntype SplitConfiguration = {|\n  pathSeparator: string,\n  getArrayItemReferenceName: (\n    object: Object,\n    currentReference: string\n  ) => string,\n  shouldSplit: (path: string) => boolean,\n  isReferenceMagicPropertyName: string,\n|};\n\ntype UnsplitConfiguration = {|\n  isReferenceMagicPropertyName: string,\n  getReferencePartialObject: (referencePath: string) => Promise<Object>,\n  maxUnsplitDepth?: number,\n|};\n\n/**\n * Mutate the given object to split it into multiple partial objects.\n * Partial objects will be replaced by references.\n *\n * @param object The object to be split.\n * @param configuration Configuration to be used to split the object.\n */\nexport const split = (\n  object: Object,\n  {\n    pathSeparator,\n    getArrayItemReferenceName,\n    shouldSplit,\n    isReferenceMagicPropertyName,\n  }: SplitConfiguration\n): Array<PartialObjectDescription> => {\n  const partialObjects = [];\n  const createReference = (reference, object): Reference => {\n    partialObjects.push({\n      reference,\n      object,\n    });\n\n    return {\n      [isReferenceMagicPropertyName]: true,\n      referenceTo: reference,\n    };\n  };\n\n  const splitObject = (\n    currentObject: Object,\n    currentPath: string,\n    currentReference: string\n  ) => {\n    if (currentObject !== null && typeof currentObject === 'object') {\n      if (Array.isArray(currentObject)) {\n        for (let index in currentObject) {\n          const itemPath = currentPath + pathSeparator + '*';\n          if (shouldSplit(itemPath)) {\n            const partialObject = currentObject[index];\n            const name = getArrayItemReferenceName(\n              partialObject,\n              currentReference\n            );\n            const itemReference = currentReference + pathSeparator + name;\n\n            currentObject[index] = createReference(\n              itemReference,\n              partialObject\n            );\n\n            splitObject(partialObject, itemPath, itemReference);\n          } else {\n            const itemReference = currentReference + pathSeparator + index;\n\n            splitObject(currentObject[index], itemPath, itemReference);\n          }\n        }\n      } else {\n        for (let propertyName in currentObject) {\n          const propertyPath = currentPath + pathSeparator + propertyName;\n          const propertyReference =\n            currentReference + pathSeparator + propertyName;\n          if (shouldSplit(propertyPath)) {\n            const partialObject = currentObject[propertyName];\n\n            currentObject[propertyName] = createReference(\n              propertyReference,\n              partialObject\n            );\n\n            splitObject(partialObject, propertyPath, propertyReference);\n          } else {\n            splitObject(\n              currentObject[propertyName],\n              propertyPath,\n              propertyReference\n            );\n          }\n        }\n      }\n    }\n  };\n\n  splitObject(object, '', '');\n  return partialObjects;\n};\n\n/**\n * Mutate the given object to recompose it from partial objects.\n * References to partial objects will be fetched as needed.\n *\n * @param object The object to be unsplit.\n * @param configuration Configuration to be used to unsplit the object.\n */\nexport const unsplit = (\n  object: Object,\n  {\n    isReferenceMagicPropertyName,\n    getReferencePartialObject,\n    maxUnsplitDepth,\n  }: UnsplitConfiguration\n): Promise<void> => {\n  const isReference = (object: Object): ?Reference => {\n    if (object[isReferenceMagicPropertyName] === true) {\n      return object;\n    }\n\n    return null;\n  };\n\n  const unsplitObject = (\n    currentObject: Object,\n    depth: number\n  ): Promise<void> => {\n    if (maxUnsplitDepth !== undefined && depth >= maxUnsplitDepth) {\n      return Promise.resolve();\n    }\n\n    if (currentObject !== null && typeof currentObject === 'object') {\n      const keys = Object.keys(currentObject);\n      if (keys) {\n        return Promise.all(\n          keys.map(indexOrPropertyName => {\n            const reference = isReference(currentObject[indexOrPropertyName]);\n            if (reference) {\n              return getReferencePartialObject(reference.referenceTo).then(\n                partialObject => {\n                  currentObject[indexOrPropertyName] = partialObject;\n\n                  return unsplitObject(\n                    currentObject[indexOrPropertyName],\n                    depth + 1\n                  );\n                }\n              );\n            }\n\n            return unsplitObject(currentObject[indexOrPropertyName], depth + 1);\n          })\n        ).then(() => {});\n      }\n    }\n\n    return Promise.resolve();\n  };\n\n  return unsplitObject(object, 0);\n};\n\n/**\n * A helper that can be used to split according to a list of hardcoded paths\n */\nexport const splitPaths = (paths: Set<string>) => {\n  return (path: string) => paths.has(path);\n};\n\n/**\n * A helper that can be used to get the name of items in array using an hardcoded property name.\n */\nexport const getNameFromProperty = (propertyName: string) => {\n  return (object: Object): string => {\n    const property = object[propertyName];\n    if (typeof property !== 'string') {\n      throw new Error(`Property ${propertyName} is not a string`);\n    }\n\n    return property;\n  };\n};\n\n/**\n * A helper that can be used to get the name of items in array using an hardcoded property name.\n */\nexport const getSlugifiedUniqueNameFromProperty = (propertyName: string) => {\n  const existingNamesForReference = {};\n\n  return (object: Object, currentReference: string): string => {\n    const property = object[propertyName];\n    if (typeof property !== 'string') {\n      throw new Error(`Property ${propertyName} is not a string`);\n    }\n\n    existingNamesForReference[currentReference] =\n      existingNamesForReference[currentReference] || {};\n    const newName = newNameGenerator(\n      slugs(property),\n      name => !!existingNamesForReference[currentReference][name]\n    );\n    existingNamesForReference[currentReference][newName] = true;\n    return newName;\n  };\n};\n"],"sourceRoot":""}