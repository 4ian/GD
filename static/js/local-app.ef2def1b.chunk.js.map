{"version":3,"sources":["LocalApp.js","ExternalEditor/index.js","ExternalEditor/Bridge.js","ProjectsStorage/LocalFileStorageProvider/LocalProjectWriter.js","ProjectCreation/LocalStarters.js","ResourcesList/LocalResourceSources.js","ResourcesList/LocalResourceExternalEditors.js","ResourcesList/LocalPiskelBridge.js","ResourcesList/LocalJfxrBridge.js","ResourcesList/LocalYarnBridge.js","Export/LocalExporters/LocalPreviewLauncher/index.js","Export/LocalExporters/LocalPreviewLauncher/LocalNetworkPreviewDialog.js","Export/LocalExporters/LocalPreviewLauncher/LocalIpFinder.js","Export/LocalExporters/index.js","Export/LocalExporters/LocalCordovaExport.js","Export/LocalExporters/LocalElectronExport.js","Export/LocalExporters/LocalHTML5Export.js","Export/LocalExporters/LocalCocos2dExport.js","Export/LocalExporters/LocalFacebookInstantGamesExport.js","UI/LocalFilePicker/index.js","Export/LocalExporters/LocalOnlineCordovaExport.js","Export/LocalExporters/LocalOnlineElectronExport.js","Export/LocalExporters/LocalOnlineWebExport.js","MainFrame/ElectronMainMenu.js","JsExtensionsLoader/LocalJsExtensionsLoader.js","JsExtensionsLoader/LocalJsExtensionsFinder.js","EventsFunctionsExtensionsLoader/CodeWriters/LocalEventsFunctionCodeWriter.js","EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionWriter.js","EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionOpener.js","Export/LocalExporters/LocalFileSystem.js","UI/LocalFolderPicker/index.js","Utils/LocalArchiver.js","ProjectsStorage/LocalFileStorageProvider/LocalProjectOpener.js","ProjectsStorage/LocalFileStorageProvider/index.js","ProjectCreation/LocalExamples.js","ProjectCreation/LocalExamplesFinder.js","ProjectCreation/LocalPathFinder.js","Utils/ObjectSplitter.js"],"names":["__webpack_require__","r","__webpack_exports__","global","d","create","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_MainFrame__WEBPACK_IMPORTED_MODULE_1__","_Utils_Window__WEBPACK_IMPORTED_MODULE_2__","_Export_ExportDialog__WEBPACK_IMPORTED_MODULE_3__","_ProjectCreation_CreateProjectDialog__WEBPACK_IMPORTED_MODULE_4__","_ExternalEditor__WEBPACK_IMPORTED_MODULE_7__","_ProjectCreation_LocalExamples__WEBPACK_IMPORTED_MODULE_8__","_ProjectCreation_LocalStarters__WEBPACK_IMPORTED_MODULE_9__","_ResourcesList_LocalResourceSources__WEBPACK_IMPORTED_MODULE_10__","_ResourcesList_LocalResourceExternalEditors__WEBPACK_IMPORTED_MODULE_11__","_Export_LocalExporters_LocalPreviewLauncher__WEBPACK_IMPORTED_MODULE_12__","_Export_LocalExporters__WEBPACK_IMPORTED_MODULE_13__","_MainFrame_ElectronMainMenu__WEBPACK_IMPORTED_MODULE_14__","_JsExtensionsLoader_LocalJsExtensionsLoader__WEBPACK_IMPORTED_MODULE_15__","_JsExtensionsLoader_LocalJsExtensionsLoader__WEBPACK_IMPORTED_MODULE_15___default","_EventsFunctionsExtensionsLoader_CodeWriters_LocalEventsFunctionCodeWriter__WEBPACK_IMPORTED_MODULE_16__","_ObjectEditor_ObjectsEditorService__WEBPACK_IMPORTED_MODULE_17__","_ObjectsRendering_ObjectsRenderingService__WEBPACK_IMPORTED_MODULE_18__","_MainFrame_Providers__WEBPACK_IMPORTED_MODULE_19__","_EventsFunctionsExtensionsLoader_Storage_LocalEventsFunctionsExtensionWriter__WEBPACK_IMPORTED_MODULE_20__","_EventsFunctionsExtensionsLoader_Storage_LocalEventsFunctionsExtensionOpener__WEBPACK_IMPORTED_MODULE_21__","_ProjectsStorage_ProjectStorageProviders__WEBPACK_IMPORTED_MODULE_22__","_ProjectsStorage_LocalFileStorageProvider__WEBPACK_IMPORTED_MODULE_23__","gd","authentification","Window","setUpContextMenu","appArguments","getArguments","a","createElement","disableCheckForUpdates","eventsFunctionCodeWriter","eventsFunctionsExtensionWriter","eventsFunctionsExtensionOpener","_ref","i18n","eventsFunctionsExtensionsState","storageProviders","_ref2","currentStorageProviderOperations","useStorageProvider","initialFileMetadataToOpen","serverPort","isIntegrated","editor","editedElementName","resourceSources","localResourceSources","storageProviderOperations","resourceExternalEditors","localResourceExternalEditors","makeLocalEventsFunctionCodeWriter","LocalEventsFunctionsExtensionWriter","LocalEventsFunctionsExtensionOpener","_ref3","LocalFileStorageProvider","defaultStorageProvider","_ref4","renderPreviewLauncher","props","ref","Object","assign","renderExportDialog","exporters","getLocalExporters","renderCreateDialog","examplesComponent","LocalExamples","startersComponent","LocalStarters","extensionsLoader","makeExtensionsLoader","objectsEditorService","ObjectsEditorService","objectsRenderingService","ObjectsRenderingService","filterExamples","isDev","ExternalEditor","_this","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","editorOpened","lastShowCommandDate","sendingUpdate","_serializedObject","_hideIfNotJustShown","Date","now","console","info","hide","sendUpdate","log","state","loading","warn","elements","getSerializedElements","scope","hasOwnProperty","bridge","send","error","editObject","object","getName","requestUpdate","arguments","length","undefined","command","_onUpdateReceived","payload","setState","setTimeout","delete","t1","performance","Serializer","fromJSObject","t2","loadFromSerializedProject","openLayout","openEventsEditor","openExternalLayout","concat","Bridge","isSupported","onReceive","setBounds","x","y","width","height","show","forceHide","onConnected","onBlur","onFocus","onClose","connectTo","_this2","React","cloneElement","children","onEditObject","integratedEditor","Component","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0__","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0___default","_Utils_TimeFunction_js__WEBPACK_IMPORTED_MODULE_1__","electron","optionalRequire","Buffer","remote","require","net","client","connected","_onReceiveCb","prototype","port","that","Socket","connect","_onConnected","data","nullCharacterBuffer","from","on","dataBuffer","startPos","nextNullCharacterPos","indexOf","slice","_receive","json","JSON","stringify","write","dataObject","timeFunction","parse","ex","time","cb","fs","path","dialog","writeJSONFile","filePath","Promise","reject","Error","content","ensureDir","dirname","then","resolve","writeFile","err","stringifyException","writeProjectFiles","project","projectPath","serializedProjectObject","serializeToJSObject","isFolderProject","partialObjects","split","pathSeparator","getArrayItemReferenceName","getSlugifiedUniqueNameFromProperty","shouldSplit","splitPaths","Set","isReferenceMagicPropertyName","all","map","partialObject","join","reference","catch","onSaveProject","fileMetadata","fileIdentifier","wasSaved","onSaveProjectAs","defaultPath","fileSystem","assignIn","AbstractFileSystemJS","localFileSystem","browserWindow","getCurrentWindow","options","filters","name","extensions","showSaveDialog","ProjectResourcesCopier","copyAllResourcesTo","setProjectFile","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","onAutoSaveProject","autoSavePath","app","outputPath","findEmptyPath","getPath","_handleChangePath","exampleName","findExamples","examplesPath","mkdirsSync","copySync","showGameFileCreationError","onOpen","sendNewGameCreated","ProjectHelper","createNewGDJSProject","onCreate","_this3","react__WEBPACK_IMPORTED_MODULE_6___default","_lingui_react__WEBPACK_IMPORTED_MODULE_5__","_UI_Grid__WEBPACK_IMPORTED_MODULE_12__","noMargin","_UI_Text__WEBPACK_IMPORTED_MODULE_10__","id","expand","_UI_List__WEBPACK_IMPORTED_MODULE_13__","leftIcon","_UI_ListIcon__WEBPACK_IMPORTED_MODULE_17__","iconSize","src","primaryText","secondaryText","secondaryTextLines","onClick","createFromExample","createEmptyGame","alignItems","justifyContent","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_8__","label","onShowExamples","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_7__","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_9__","fullWidth","value","onChange","type","displayName","kind","component","_temp","_Component","LocalAudioFileOpener","_getPrototypeOf2","_len","args","Array","_key","apply","chooseResources","multiSelections","title","_","selectLocalResourcePath","resources","resourcePath","audioResource","AudioResource","getProjectFile","setFile","relative","setName","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","_temp2","_Component2","LocalFileOpener","_getPrototypeOf3","_len2","_key2","imageResource","ImageResource","_temp3","_Component3","LocalFontFileOpener","_getPrototypeOf4","_len3","_key3","fontResource","FontResource","_temp4","_Component4","LocalVideoFileOpener","_getPrototypeOf5","_this4","_len4","_key4","videoResource","VideoResource","_temp5","_Component5","LocalJsonFileOpener","_getPrototypeOf6","_this5","_len5","_key5","jsonResource","JsonResource","properties","push","showOpenDialog","paths","filter","isPathInProjectFolder","confirm","copyAllToProjectFolder","_LocalPiskelBridge__WEBPACK_IMPORTED_MODULE_0__","_LocalJfxrBridge__WEBPACK_IMPORTED_MODULE_1__","_LocalYarnBridge__WEBPACK_IMPORTED_MODULE_2__","_Utils_Analytics_EventSender__WEBPACK_IMPORTED_MODULE_3__","editors","edit","sendExternalEditorOpened","openPiskel","openJfxr","openYarn","ipcRenderer","resourceNames","resourcesLoader","singleFrame","onChangesSaved","extraOptions","resourceName","originalIndex","getLocalResourceFullPath","externalEditorData","removeAllListeners","event","outputResources","newAnimationName","metadata","pskl","resourcesManager","getResourcesManager","forEach","resource","createOrUpdateResource","getResource","setMetadata","_ResourceUtils_js__WEBPACK_IMPORTED_MODULE_1__","newFilePath","jfxr","BrowserWindow","LocalPreviewLauncher","canDoNetworkPreview","networkPreviewDialogOpen","networkPreviewHost","networkPreviewPort","networkPreviewError","previewGamePath","previewBrowserWindowConfig","_subscriptionChecker","_openPreviewBrowserWindow","loadURL","_openPreviewWindow","gamePath","getMainWindowDefaultWidth","getMainWindowDefaultHeight","useContentSize","backgroundColor","networkPreview","serverParams","_checkSubscription","ipAddresses","findLocalIp","root","_prepareExporter","findGDJS","gdjsRoot","outputDir","getTempDir","exporter","Exporter","launchLayoutPreview","layout","exportLayoutForPixiPreview","launchExternalLayoutPreview","externalLayout","exportExternalLayoutForPixiPreview","checkHasSubscription","_this$state","react__WEBPACK_IMPORTED_MODULE_6__","_Profile_SubscriptionChecker__WEBPACK_IMPORTED_MODULE_14__","subscriptionChecker","onChangeSubscription","mode","_LocalNetworkPreviewDialog__WEBPACK_IMPORTED_MODULE_11__","open","url","onExport","onRunPreviewLocally","LocalNetworkDialog","_this$props","_UI_Dialog__WEBPACK_IMPORTED_MODULE_7__","actions","_UI_FlatButton__WEBPACK_IMPORTED_MODULE_8__","primary","secondaryActions","modal","onRequestClose","_UI_Grid__WEBPACK_IMPORTED_MODULE_11__","_UI_PlaceholderLoader__WEBPACK_IMPORTED_MODULE_12__","_UI_TextField__WEBPACK_IMPORTED_MODULE_9__","firstLocalIp","find","ipAddress","react__WEBPACK_IMPORTED_MODULE_1__","_lingui_react__WEBPACK_IMPORTED_MODULE_0__","renderIcon","_material_ui_icons_PhoneIphone__WEBPACK_IMPORTED_MODULE_10___default","helpPage","description","exportPipeline","localOnlineCordovaExportPipeline","_UI_CustomSvgIcons_Chrome__WEBPACK_IMPORTED_MODULE_15__","localOnlineWebExportPipeline","_material_ui_icons_Folder__WEBPACK_IMPORTED_MODULE_12___default","localHTML5ExportPipeline","advanced","_UI_CustomSvgIcons_Facebook__WEBPACK_IMPORTED_MODULE_13__","localFacebookInstantGamesExportPipeline","_UI_CustomSvgIcons_Cordova__WEBPACK_IMPORTED_MODULE_14__","localCordovaExportPipeline","_material_ui_icons_LaptopMac__WEBPACK_IMPORTED_MODULE_11___default","localOnlineElectronExportPipeline","localElectronExportPipeline","localCocos2dExportPipeline","experimental","shell","getInitialExportState","getLastCompilationDirectory","canLaunchBuild","exportState","renderHeader","updateExportState","react__WEBPACK_IMPORTED_MODULE_1___default","_UI_Grid__WEBPACK_IMPORTED_MODULE_3__","_GenericExporters_CordovaExport__WEBPACK_IMPORTED_MODULE_9__","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_6__","renderLaunchButtonLabel","prepareExporter","context","launchExport","exportOptions","MapStringBoolean","set","exportWholePixiProject","launchResourcesDownload","exportOutput","launchCompression","renderDoneFooter","openExportFolder","openItem","renderGameButton","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_2__","_GenericExporters_ElectronExport__WEBPACK_IMPORTED_MODULE_9__","_GenericExporters_HTML5Export__WEBPACK_IMPORTED_MODULE_9__","debugMode","react__WEBPACK_IMPORTED_MODULE_2___default","_UI_Grid__WEBPACK_IMPORTED_MODULE_4__","_GenericExporters_Cocos2dExport__WEBPACK_IMPORTED_MODULE_11__","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_7__","prevState","_UI_Toggle__WEBPACK_IMPORTED_MODULE_10__","onToggle","e","check","toggled","labelPosition","_lingui_react__WEBPACK_IMPORTED_MODULE_1__","exportWholeCocos2dProject","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_3__","archiveOutputFilename","_GenericExporters_FacebookInstantGamesExport__WEBPACK_IMPORTED_MODULE_10__","_UI_LocalFilePicker__WEBPACK_IMPORTED_MODULE_8__","message","temporaryOutputDir","mkDir","clearDir","_ref5","archiveLocalFolder","outputFilename","_ref6","styles","container","position","display","button","marginLeft","textField","flex","LocalFilePicker","onChooseFolder","filename","react__WEBPACK_IMPORTED_MODULE_7___default","style","_TextField__WEBPACK_IMPORTED_MODULE_8__","floatingLabelText","floatingLabelFixed","hintText","_FlatButton__WEBPACK_IMPORTED_MODULE_9__","_lingui_react__WEBPACK_IMPORTED_MODULE_6__","PureComponent","os","onlineBuildType","_GenericExporters_OnlineCordovaExport__WEBPACK_IMPORTED_MODULE_8__","archiveOutputDir","tmpdir","launchUpload","outputFile","stepCurrentProgress","stepMaxProgress","updateStepProgress","prefix","launchOnlineBuild","userProfile","uploadBucketKey","getAuthorizationHeader","profile","buildCordovaAndroid","uid","targets","_GenericExporters_OnlineElectronExport__WEBPACK_IMPORTED_MODULE_8__","buildElectron","_GenericExporters_OnlineWebExport__WEBPACK_IMPORTED_MODULE_8__","buildWeb","ElectronMainMenu","_editor","chooseProject","saveProject","saveProjectAs","askToCloseProject","openExportDialog","openCreateDialog","openProjectManager","openStartPage","openDebugger","openAboutDialog","openPreferences","openLanguage","openProfile","status","setUpdateStatus","language","_language","_buildAndSendMenuTemplate","fileTemplate","submenu","accelerator","onClickSendEvent","isMacLike","editTemplate","role","viewTemplate","windowTemplate","helpTemplate","onClickOpenLink","template","unshift","loadExtension","findJsExtensionModules","module","exports","loadAllExtensions","extensionModulePaths","extensionModulePath","extensionModule","rethrowException","result","rawError","registerEditorConfigurations","registerInstanceRenderers","JsPlatform","get","extensionsRoot","readdir","extensionFolders","filteredExtensionFolders","folder","extensionFolder","extensionFolderPath","jsExtensionModulePath","stat","stats","isFile","modulePaths","modulePath","slugs__WEBPACK_IMPORTED_MODULE_1__","slugs__WEBPACK_IMPORTED_MODULE_1___default","mkdir","code","getPathFor","codeNamespace","slugs","getIncludeFileFor","writeFunctionCode","functionCodeNamespace","filepath","writeBehaviorCode","behaviorCodeNamespace","chooseEventsFunctionExtensionFile","writeEventsFunctionsExtension","extension","readEventsFunctionExtensionFile","readFile","encoding","readJSONFile","dirExists","existsSync","readdirSync","file","curPath","lstatSync","isDirectory","unlinkSync","fileNameFrom","fullpath","_isExternalURL","_translateURL","basename","dirNameFrom","makeAbsolute","baseDirectory","isAbsolute","normalize","makeRelative","charAt","copyFile","source","dest","writeToFile","contents","outputFileSync","readFileSync","toString","readDir","ext","toUpperCase","output","VectorString","push_back","fileExists","statSync","substr","LocalFolderPicker","_onChooseFolder","_getTitleAndMessage","_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0__","_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0___default","archiver","createWriteStream","archive","zlib","level","pointer","pipe","directory","finalize","onOpenWithPicker","unsplit","getReferencePartialObject","referencePath","maxUnsplitDepth","hasAutoSave","compareLastModified","mtime","getTime","onGetAutoSave","objectSpread","internalName","getFileMetadataFromAppArguments","POSITIONAL_ARGUMENTS_KEY","createOperations","getOpenErrorMessage","showWarningBox","values","exampleNames","onExamplesLoaded","_UI_Text__WEBPACK_IMPORTED_MODULE_9__","_ExamplesList__WEBPACK_IMPORTED_MODULE_15__","onCreateFromExample","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_8__","process","tryPath","onExists","onNoAccess","access","constants","R_OK","appPath","getAppPath","cwd","_Utils_NewNameGenerator__WEBPACK_IMPORTED_MODULE_0__","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_1__","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_1___default","basePath","folderName","generateName","accessSync","createReference","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","splitObject","currentObject","currentPath","currentReference","isArray","index","itemPath","itemReference","propertyName","propertyPath","propertyReference","unsplitObject","depth","keys","indexOrPropertyName","referenceTo","has","existingNamesForReference","property","newName","newNameGenerator"],"mappings":"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","file":"static/js/local-app.ef2def1b.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport MainFrame from './MainFrame';\nimport Window from './Utils/Window';\nimport ExportDialog from './Export/ExportDialog';\nimport CreateProjectDialog from './ProjectCreation/CreateProjectDialog';\nimport Authentification from './Utils/GDevelopServices/Authentification';\nimport './UI/iconmoon-font.css'; // Styles for Iconmoon font.\n\n// Import for Electron powered IDE.\nimport ExternalEditor from './ExternalEditor';\nimport LocalExamples from './ProjectCreation/LocalExamples';\nimport LocalStarters from './ProjectCreation/LocalStarters';\nimport localResourceSources from './ResourcesList/LocalResourceSources';\nimport localResourceExternalEditors from './ResourcesList/LocalResourceExternalEditors';\nimport LocalPreviewLauncher from './Export/LocalExporters/LocalPreviewLauncher';\nimport { getLocalExporters } from './Export/LocalExporters';\nimport ElectronMainMenu from './MainFrame/ElectronMainMenu';\nimport makeExtensionsLoader from './JsExtensionsLoader/LocalJsExtensionsLoader';\nimport { makeLocalEventsFunctionCodeWriter } from './EventsFunctionsExtensionsLoader/CodeWriters/LocalEventsFunctionCodeWriter';\nimport ObjectsEditorService from './ObjectEditor/ObjectsEditorService';\nimport ObjectsRenderingService from './ObjectsRendering/ObjectsRenderingService';\nimport Providers from './MainFrame/Providers';\nimport LocalEventsFunctionsExtensionWriter from './EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionWriter';\nimport LocalEventsFunctionsExtensionOpener from './EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionOpener';\nimport ProjectStorageProviders from './ProjectsStorage/ProjectStorageProviders';\nimport LocalFileStorageProvider from './ProjectsStorage/LocalFileStorageProvider';\nconst gd = global.gd;\n\nexport const create = (authentification: Authentification) => {\n  Window.setUpContextMenu();\n\n  let app = null;\n  const appArguments = Window.getArguments();\n\n  if (appArguments['server-port']) {\n    app = (\n      <Providers\n        authentification={authentification}\n        disableCheckForUpdates={!!appArguments['disable-update-check']}\n        eventsFunctionCodeWriter={null}\n        eventsFunctionsExtensionWriter={null}\n        eventsFunctionsExtensionOpener={null}\n      >\n        {({ i18n, eventsFunctionsExtensionsState }) => (\n          <ProjectStorageProviders\n            appArguments={appArguments}\n            storageProviders={[]}\n          >\n            {({\n              currentStorageProviderOperations,\n              useStorageProvider,\n              storageProviders,\n              initialFileMetadataToOpen,\n            }) => (\n              <ExternalEditor\n                serverPort={appArguments['server-port']}\n                isIntegrated={appArguments['mode'] === 'integrated'}\n                editor={appArguments['editor']}\n                editedElementName={appArguments['edited-element-name']}\n              >\n                <MainFrame\n                  i18n={i18n}\n                  eventsFunctionsExtensionsState={\n                    eventsFunctionsExtensionsState\n                  }\n                  resourceSources={localResourceSources}\n                  storageProviders={storageProviders}\n                  useStorageProvider={useStorageProvider}\n                  storageProviderOperations={currentStorageProviderOperations}\n                  resourceExternalEditors={localResourceExternalEditors}\n                  initialFileMetadataToOpen={initialFileMetadataToOpen}\n                />\n              </ExternalEditor>\n            )}\n          </ProjectStorageProviders>\n        )}\n      </Providers>\n    );\n  } else {\n    app = (\n      <Providers\n        authentification={authentification}\n        disableCheckForUpdates={!!appArguments['disable-update-check']}\n        eventsFunctionCodeWriter={makeLocalEventsFunctionCodeWriter()}\n        eventsFunctionsExtensionWriter={LocalEventsFunctionsExtensionWriter}\n        eventsFunctionsExtensionOpener={LocalEventsFunctionsExtensionOpener}\n      >\n        {({ i18n, eventsFunctionsExtensionsState }) => (\n          <ProjectStorageProviders\n            appArguments={appArguments}\n            storageProviders={[LocalFileStorageProvider]}\n            defaultStorageProvider={LocalFileStorageProvider}\n          >\n            {({\n              currentStorageProviderOperations,\n              useStorageProvider,\n              storageProviders,\n              initialFileMetadataToOpen,\n            }) => (\n              <ElectronMainMenu i18n={i18n}>\n                <MainFrame\n                  i18n={i18n}\n                  eventsFunctionsExtensionsState={\n                    eventsFunctionsExtensionsState\n                  }\n                  renderPreviewLauncher={(props, ref) => <LocalPreviewLauncher {...props} ref={ref} />}\n                  renderExportDialog={props => (\n                    <ExportDialog {...props} exporters={getLocalExporters()} />\n                  )}\n                  renderCreateDialog={props => (\n                    <CreateProjectDialog\n                      {...props}\n                      examplesComponent={LocalExamples}\n                      startersComponent={LocalStarters}\n                    />\n                  )}\n                  storageProviders={storageProviders}\n                  useStorageProvider={useStorageProvider}\n                  storageProviderOperations={currentStorageProviderOperations}\n                  resourceSources={localResourceSources}\n                  resourceExternalEditors={localResourceExternalEditors}\n                  extensionsLoader={makeExtensionsLoader({\n                    gd,\n                    objectsEditorService: ObjectsEditorService,\n                    objectsRenderingService: ObjectsRenderingService,\n                    filterExamples: !Window.isDev(),\n                  })}\n                  initialFileMetadataToOpen={initialFileMetadataToOpen}\n                />\n              </ElectronMainMenu>\n            )}\n          </ProjectStorageProviders>\n        )}\n      </Providers>\n    );\n  }\n\n  return app;\n};\n","// @flow\n\nimport Bridge from './Bridge.js';\nimport React, { Component } from 'react';\nimport Window from '../Utils/Window.js';\nconst gd = global.gd;\n\ntype State = {\n  loading: boolean,\n};\n\ntype Props = {\n  serverPort: number,\n  isIntegrated: boolean,\n  editor: string,\n  editedElementName: string,\n  children: React$Element<any>,\n};\n\nclass ExternalEditor extends Component<Props, State> {\n  bridge: Bridge;\n  editorOpened: boolean = false;\n  lastShowCommandDate: number = 0;\n  sendingUpdate: boolean = false;\n  editor: any = null;\n  _serializedObject: any = null;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.bridge = new Bridge();\n    this.state = {\n      loading: false,\n    };\n\n    if (this.bridge.isSupported()) {\n      console.log('Connection to an external editor...');\n\n      this.bridge.onReceive((command, payload, scope) => {\n        if (command === 'update') {\n          this._onUpdateReceived(payload, scope);\n        } else if (command === 'setBounds') {\n          if (this.props.isIntegrated) {\n            Window.setBounds(\n              payload.x,\n              payload.y,\n              payload.width,\n              payload.height\n            );\n          }\n        } else if (command === 'show') {\n          this.lastShowCommandDate = Date.now();\n          Window.show();\n        } else if (command === 'hide') {\n          if (this.props.isIntegrated) {\n            Window.hide(payload && payload.forceHide);\n          }\n        }\n      });\n      this.bridge.onConnected(() => {\n        this.requestUpdate('', true);\n      });\n      Window.onBlur(() => {\n        if (this.props.isIntegrated) this._hideIfNotJustShown();\n        this.sendUpdate();\n      });\n      Window.onFocus(() => {\n        this.requestUpdate();\n      });\n      Window.onClose(() => {\n        this.sendUpdate();\n      });\n\n      this.bridge.connectTo(this.props.serverPort);\n    } else {\n      console.warn('Connection to an external editor is not supported');\n    }\n  }\n\n  _hideIfNotJustShown = () => {\n    // Sometime, we'll receive the blur event AFTER\n    // the external editor containing this editor\n    // received the activate event from the system (wxActivateEvent in the case of\n    // wxWidgets).\n    // So we'll receive a show command THEN hide, which is not what we want\n    // (we want to hide and then show again the editor if needed).\n    if (Date.now() - this.lastShowCommandDate < 100) {\n      console.info(\n        'The editor is not hidden because it receive a `show` command less ' +\n          'than 100ms ago.'\n      );\n      return;\n    }\n\n    Window.hide();\n  };\n\n  sendUpdate = () => {\n    console.log('Sending update to server editor');\n    if (this.state.loading) {\n      console.warn('Already loading an update, abort send');\n      return;\n    }\n    if (this.sendingUpdate) {\n      console.warn('Already sending an update, abort send');\n      return;\n    }\n    if (!this.editor) {\n      console.error(\n        'No children editor to use to get the updated edited element'\n      );\n      return;\n    }\n\n    this.sendingUpdate = true;\n    const elements = this.editor.getSerializedElements();\n    for (const scope in elements) {\n      if (elements.hasOwnProperty(scope)) {\n        this.bridge.send('update', elements[scope], scope);\n      }\n    }\n    this.sendingUpdate = false;\n\n    console.log('Update send done');\n  };\n\n  editObject = (object: gdObject) => {\n    this.sendUpdate();\n    this.bridge.send('editObject', object.getName());\n  };\n\n  /**\n   * Request an update to the server. Note that if forcedUpdate is set to false,\n   * the server may not send back an update (for example if nothing changed).\n   */\n  requestUpdate = (scope: string = '', forcedUpdate: boolean = false) => {\n    const command = forcedUpdate ? 'requestForcedUpdate' : 'requestUpdate';\n    this.bridge.send(command, undefined, scope);\n  };\n\n  _onUpdateReceived = (payload: any, scope: string) => {\n    console.log('Received project update from server');\n    if (scope !== '') {\n      console.warn(`Not implemented: received ${scope} update from server`);\n      return;\n    }\n\n    this.setState(\n      {\n        loading: true,\n      },\n      () =>\n        setTimeout(() => {\n          // Transform the payload into a gd.SerializerElement\n          // Note that gd.Serializer.fromJSObject returns a new gd.SerializerElement object at every call\n          if (this._serializedObject) this._serializedObject.delete();\n\n          var t1 = performance.now();\n          this._serializedObject = gd.Serializer.fromJSObject(payload);\n          var t2 = performance.now();\n          console.log(\n            'Call to gd.Serializer.fromJSObject took ' +\n              (t2 - t1) +\n              ' milliseconds.'\n          );\n\n          this.editor.loadFromSerializedProject(this._serializedObject, () => {\n            this._serializedObject.delete();\n            this._serializedObject = null;\n\n            if (!this.editorOpened) {\n              this.editorOpened = true;\n\n              if (this.props.editor === 'scene-editor') {\n                this.editor.openLayout(this.props.editedElementName, {\n                  openEventsEditor: false,\n                });\n              }\n              if (this.props.editor === 'external-layout-editor') {\n                this.editor.openExternalLayout(this.props.editedElementName);\n              }\n            }\n\n            this.setState({\n              loading: false,\n            });\n          });\n        })\n    );\n  };\n\n  render() {\n    return React.cloneElement(this.props.children, {\n      loading: this.state.loading,\n      ref: editor => (this.editor = editor),\n      requestUpdate: () => this.requestUpdate('', true),\n      onEditObject: this.editObject,\n      integratedEditor: true,\n    });\n  }\n}\n\nexport default ExternalEditor;\n","import optionalRequire from '../Utils/OptionalRequire.js';\nimport { timeFunction } from '../Utils/TimeFunction.js';\nconst electron = optionalRequire('electron');\nconst Buffer = electron ? electron.remote.require('buffer').Buffer : null;\n\nfunction Bridge() {\n  this.net = optionalRequire('net');\n\n  this.client = null;\n  this.connected = false;\n  this._onReceiveCb = null;\n}\n\nBridge.prototype.isSupported = function() {\n  return !!this.net;\n};\n\nBridge.prototype.connectTo = function(port) {\n  if (!this.net) return;\n\n  var that = this;\n  this.client = new this.net.Socket();\n  this.client.connect(\n    port,\n    'localhost',\n    function() {\n      console.log('Connection made on port', port);\n      that.connected = true;\n      if (that._onConnected) that._onConnected();\n    }\n  );\n\n  let data = '';\n  const nullCharacterBuffer = Buffer.from([0]);\n  this.client.on('data', function(dataBuffer) {\n    let startPos = 0;\n    let nextNullCharacterPos = dataBuffer.indexOf(nullCharacterBuffer);\n    while (startPos < dataBuffer.length) {\n      if (nextNullCharacterPos === -1) {\n        data += dataBuffer.slice(startPos);\n        startPos = dataBuffer.length;\n      } else {\n        data += dataBuffer.slice(startPos, nextNullCharacterPos);\n        that._receive(data);\n\n        data = '';\n        startPos = nextNullCharacterPos + 1;\n        nextNullCharacterPos = dataBuffer.indexOf(\n          nullCharacterBuffer,\n          startPos\n        );\n      }\n    }\n  });\n\n  this.client.on('close', function() {\n    that.connected = false;\n  });\n};\n\nBridge.prototype.send = function(command, payload, scope = '') {\n  if (!this.connected) return false;\n\n  const json = JSON.stringify({\n    command,\n    scope,\n    payload,\n  });\n  this.client.write(json + '\\0');\n\n  return true;\n};\n\nBridge.prototype._receive = function(data) {\n  console.info('Received data');\n\n  // Parse the received JSON\n  let dataObject;\n  timeFunction(\n    () => {\n      try {\n        dataObject = JSON.parse(data);\n      } catch (ex) {\n        console.warn('Received invalid data (JSON parse failed)', ex);\n      }\n    },\n    time => console.info(`JSON parse took ${time}ms`)\n  );\n  if (!dataObject) return;\n\n  if (this._onReceiveCb) {\n    this._onReceiveCb(dataObject.command, dataObject.payload, dataObject.scope);\n  }\n};\n\nBridge.prototype.onReceive = function(cb) {\n  this._onReceiveCb = cb;\n};\n\nBridge.prototype.onConnected = function(cb) {\n  this._onConnected = cb;\n};\n\nexport default Bridge;\n","// @flow\nimport { serializeToJSObject } from '../../Utils/Serializer';\nimport { type FileMetadata } from '../index';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport {\n  split,\n  splitPaths,\n  getSlugifiedUniqueNameFromProperty,\n} from '../../Utils/ObjectSplitter';\nimport localFileSystem from '../../Export/LocalExporters/LocalFileSystem';\nimport assignIn from 'lodash/assignIn';\n\nconst gd = global.gd;\n\nconst fs = optionalRequire('fs-extra');\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst writeJSONFile = (object: Object, filePath: string): Promise<void> => {\n  if (!fs) return Promise.reject(new Error('Filesystem is not supported.'));\n\n  try {\n    const content = JSON.stringify(object, null, 2);\n    return fs.ensureDir(path.dirname(filePath)).then(\n      () =>\n        new Promise((resolve, reject) => {\n          fs.writeFile(filePath, content, (err: ?Error) => {\n            if (err) {\n              return reject(err);\n            }\n\n            return resolve();\n          });\n        })\n    );\n  } catch (stringifyException) {\n    return Promise.reject(stringifyException);\n  }\n};\n\nconst writeProjectFiles = (\n  project: gdProject,\n  filePath: string,\n  projectPath: string\n): Promise<void> => {\n  const serializedProjectObject = serializeToJSObject(project);\n\n  if (project.isFolderProject()) {\n    const partialObjects = split(serializedProjectObject, {\n      pathSeparator: '/',\n      getArrayItemReferenceName: getSlugifiedUniqueNameFromProperty('name'),\n      shouldSplit: splitPaths(\n        new Set([\n          '/layouts/*',\n          '/externalLayouts/*',\n          '/externalEvents/*',\n          '/layouts/*',\n          '/eventsFunctionsExtensions/*',\n        ])\n      ),\n      isReferenceMagicPropertyName: '__REFERENCE_TO_SPLIT_OBJECT',\n    });\n\n    return Promise.all(\n      partialObjects.map(partialObject => {\n        return writeJSONFile(\n          partialObject.object,\n          path.join(projectPath, partialObject.reference) + '.json'\n        ).catch(err => {\n          console.error('Unable to write a partial file:', err);\n          throw err;\n        });\n      })\n    ).then(() => {\n      return writeJSONFile(serializedProjectObject, filePath).catch(err => {\n        console.error('Unable to write the split project:', err);\n        throw err;\n      });\n    });\n  } else {\n    return writeJSONFile(serializedProjectObject, filePath).catch(err => {\n      console.error('Unable to write the project:', err);\n      throw err;\n    });\n  }\n};\n\nexport const onSaveProject = (\n  project: gdProject,\n  fileMetadata: FileMetadata\n): Promise<{|\n  wasSaved: boolean,\n  fileMetadata: FileMetadata,\n|}> => {\n  const filePath = fileMetadata.fileIdentifier;\n  if (!filePath) {\n    return Promise.reject(\n      'Project file is empty, \"Save as\" should have been called?'\n    );\n  }\n\n  const projectPath = path.dirname(filePath);\n  return writeProjectFiles(project, filePath, projectPath).then(() => {\n    return { wasSaved: true, fileMetadata }; // Save was properly done\n  });\n};\n\nexport const onSaveProjectAs = (\n  project: gdProject,\n  fileMetadata: ?FileMetadata\n): Promise<{|\n  wasSaved: boolean,\n  fileMetadata: ?FileMetadata,\n|}> => {\n  const defaultPath = fileMetadata ? fileMetadata.fileIdentifier : '';\n  const fileSystem = assignIn(new gd.AbstractFileSystemJS(), localFileSystem);\n  const browserWindow = electron.remote.getCurrentWindow();\n  const options = {\n    defaultPath,\n    filters: [{ name: 'GDevelop 5 project', extensions: ['json'] }],\n  };\n\n  if (!dialog) {\n    return Promise.reject('Unsupported');\n  }\n  const filePath = dialog.showSaveDialog(browserWindow, options);\n  if (!filePath) {\n    return Promise.resolve({ wasSaved: false, fileMetadata });\n  }\n  const projectPath = path.dirname(filePath);\n\n  // TODO: Ideally, errors while copying resources should be reported.\n  gd.ProjectResourcesCopier.copyAllResourcesTo(\n    project,\n    fileSystem,\n    projectPath,\n    true, // Update the project with the new resource paths\n    false, // Don't move absolute files\n    true // Keep relative files folders structure.\n  );\n\n  // Update the project with the new file path (resources have already been updated)\n  project.setProjectFile(filePath);\n\n  return writeProjectFiles(project, filePath, projectPath).then(() => {\n    return {\n      wasSaved: true,\n      fileMetadata: {\n        ...fileMetadata,\n        fileIdentifier: filePath,\n      },\n    }; // Save was properly done\n  });\n};\n\nexport const onAutoSaveProject = (\n  project: gdProject,\n  fileMetadata: FileMetadata\n) => {\n  const autoSavePath = fileMetadata.fileIdentifier + '.autosave';\n  writeJSONFile(serializeToJSObject(project), autoSavePath).catch(err => {\n    console.error(`Unable to write ${autoSavePath}:`, err);\n    throw err;\n  });\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport React, { Component } from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport RaisedButton from '../UI/RaisedButton';\nimport LocalFolderPicker from '../UI/LocalFolderPicker';\nimport Text from '../UI/Text';\nimport { sendNewGameCreated } from '../Utils/Analytics/EventSender';\nimport { Column, Line } from '../UI/Grid';\nimport { List, ListItem } from '../UI/List';\nimport { findExamples } from './LocalExamplesFinder';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { findEmptyPath } from './LocalPathFinder';\nimport ListIcon from '../UI/ListIcon';\nimport { showGameFileCreationError } from './LocalExamples';\nimport { type StorageProvider, type FileMetadata } from '../ProjectsStorage';\nimport LocalFileStorageProvider from '../ProjectsStorage/LocalFileStorageProvider';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nvar fs = optionalRequire('fs-extra');\nconst gd = global.gd;\n\ntype Props = {|\n  onOpen: (\n    storageProvider: StorageProvider,\n    fileMetadata: FileMetadata\n  ) => void,\n  onCreate: (\n    gdProject,\n    storageProvider: ?StorageProvider,\n    fileMetadata: ?FileMetadata\n  ) => void,\n  onShowExamples: () => void,\n|};\n\ntype State = {|\n  outputPath: string,\n|};\n\nexport default class LocalStarters extends Component<Props, State> {\n  state = {\n    outputPath: findEmptyPath(\n      path && app\n        ? path.join(app.getPath('documents'), 'GDevelop projects')\n        : ''\n    ),\n  };\n\n  _handleChangePath = (outputPath: string) =>\n    this.setState({\n      outputPath,\n    });\n\n  createFromExample(i18n: I18nType, exampleName: string) {\n    const { outputPath } = this.state;\n    if (!fs || !outputPath) return;\n\n    findExamples(examplesPath => {\n      try {\n        fs.mkdirsSync(outputPath);\n        fs.copySync(path.join(examplesPath, exampleName), outputPath);\n      } catch (error) {\n        showGameFileCreationError(i18n, outputPath, error);\n        return;\n      }\n\n      this.props.onOpen(LocalFileStorageProvider, {\n        fileIdentifier: path.join(outputPath, exampleName + '.json'),\n      });\n      sendNewGameCreated(exampleName);\n    });\n  }\n\n  createEmptyGame(i18n: I18nType) {\n    const { outputPath } = this.state;\n    if (!fs || !outputPath) return;\n\n    try {\n      fs.mkdirsSync(outputPath);\n    } catch (error) {\n      showGameFileCreationError(i18n, outputPath, error);\n      return;\n    }\n\n    const project = gd.ProjectHelper.createNewGDJSProject();\n    const filePath = path.join(outputPath, 'game.json');\n    project.setProjectFile(filePath);\n    this.props.onCreate(project, LocalFileStorageProvider, {\n      fileIdentifier: filePath,\n    });\n    sendNewGameCreated('');\n  }\n\n  render() {\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Column noMargin>\n            <Line>\n              <Column>\n                <Text>\n                  <Trans>Choose a game to use as a starter:</Trans>\n                </Text>\n              </Column>\n            </Line>\n            <Line>\n              <Column expand noMargin>\n                <List>\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/platformer.png\"\n                      />\n                    }\n                    primaryText={<Trans>Platformer</Trans>}\n                    secondaryText={\n                      <Trans>\n                        A simple platform game, with coins to collect, moving\n                        platforms and enemies.\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() => this.createFromExample(i18n, 'platformer')}\n                  />\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/space-shooter.png\"\n                      />\n                    }\n                    primaryText={<Trans>8-bit Space Shooter</Trans>}\n                    secondaryText={\n                      <Trans>\n                        A beautiful, retro side-scrolling shooter where you must\n                        defeat incoming enemies with your mecha transforming\n                        spaceship. Huge boss included!\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() =>\n                      this.createFromExample(i18n, 'space-shooter')\n                    }\n                  />\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/isometric-game.png\"\n                      />\n                    }\n                    primaryText={<Trans>Isometric game</Trans>}\n                    secondaryText={\n                      <Trans>\n                        An example of an isometric game where you can explore a\n                        map with your character.\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() =>\n                      this.createFromExample(i18n, 'isometric-game')\n                    }\n                  />\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/downhill-bike-physics-demo.png\"\n                      />\n                    }\n                    primaryText=\"Downhill Bike Racing\"\n                    secondaryText={\n                      <Trans>\n                        An example of a 2D physics based driving game, where\n                        player have to reach the end as fast as possible.\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() =>\n                      this.createFromExample(i18n, 'downhill-bike-physics-demo')\n                    }\n                  />\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/pairs.png\"\n                      />\n                    }\n                    primaryText=\"Pairs\"\n                    secondaryText={\n                      <Trans>\n                        Find all matching pairs of cards in this relaxing game.\n                        Use tweens to create smooth, natural animations with a\n                        few events.\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() => this.createFromExample(i18n, 'pairs')}\n                  />\n                  <ListItem\n                    primaryText={<Trans>Empty game</Trans>}\n                    secondaryText={\n                      <Trans>Start a new game from scratch.</Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() => this.createEmptyGame(i18n)}\n                  />\n                </List>\n                <Line alignItems=\"center\" justifyContent=\"center\">\n                  <RaisedButton\n                    label={<Trans>See examples</Trans>}\n                    onClick={() => this.props.onShowExamples()}\n                  />\n                </Line>\n              </Column>\n            </Line>\n            <Divider />\n            <Line expand>\n              <Column expand>\n                <LocalFolderPicker\n                  fullWidth\n                  value={this.state.outputPath}\n                  onChange={this._handleChangePath}\n                  type=\"create-game\"\n                />\n              </Column>\n            </Line>\n          </Column>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { type ResourceSourceComponentProps } from './ResourceSource.flow';\nimport { Component } from 'react';\nimport {\n  isPathInProjectFolder,\n  copyAllToProjectFolder,\n} from './ResourceUtils.js';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\nconst path = optionalRequire('path');\n\nconst gd = global.gd;\n\nexport default [\n  {\n    name: 'localAudioFileOpener',\n    displayName: 'Choose a new audio file',\n    kind: 'audio',\n    component: class LocalAudioFileOpener extends Component<ResourceSourceComponentProps> {\n      chooseResources = (\n        project: gdProject,\n        multiSelections: boolean = true\n      ): Promise<Array<any>> => {\n        const { i18n } = this.props;\n        const options = {\n          multiSelections,\n          title: i18n._(t`Choose an audio file`),\n          name: i18n._(t`Audio files`),\n          extensions: ['wav', 'mp3', 'ogg'],\n        };\n        return selectLocalResourcePath(i18n, project, options).then(\n          resources => {\n            return resources.map(resourcePath => {\n              const audioResource = new gd.AudioResource();\n              const projectPath = path.dirname(project.getProjectFile());\n              audioResource.setFile(path.relative(projectPath, resourcePath));\n              audioResource.setName(path.relative(projectPath, resourcePath));\n\n              return audioResource;\n            });\n          }\n        );\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localFileOpener',\n    displayName: 'Choose a new image',\n    kind: 'image',\n    component: class LocalFileOpener extends Component<ResourceSourceComponentProps> {\n      chooseResources = (\n        project: gdProject,\n        multiSelections: boolean = true\n      ): Promise<Array<any>> => {\n        const { i18n } = this.props;\n        const options = {\n          multiSelections,\n          title: i18n._(t`Choose an image`),\n          name: i18n._(t`Image files`),\n          extensions: ['png', 'jpg'],\n        };\n        return selectLocalResourcePath(i18n, project, options).then(\n          resources => {\n            return resources.map(resourcePath => {\n              const imageResource = new gd.ImageResource();\n              const projectPath = path.dirname(project.getProjectFile());\n              imageResource.setFile(path.relative(projectPath, resourcePath));\n              imageResource.setName(path.relative(projectPath, resourcePath));\n\n              return imageResource;\n            });\n          }\n        );\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localFontFileOpener',\n    displayName: 'Choose a new font file',\n    kind: 'font',\n    component: class LocalFontFileOpener extends Component<ResourceSourceComponentProps> {\n      chooseResources = (\n        project: gdProject,\n        multiSelections: boolean = true\n      ): Promise<Array<any>> => {\n        const { i18n } = this.props;\n        const options = {\n          multiSelections,\n          title: i18n._(t`Choose a font file`),\n          name: i18n._(t`Font files`),\n          extensions: ['ttf', 'otf'],\n        };\n        return selectLocalResourcePath(i18n, project, options).then(\n          resources => {\n            return resources.map(resourcePath => {\n              const fontResource = new gd.FontResource();\n              const projectPath = path.dirname(project.getProjectFile());\n              fontResource.setFile(path.relative(projectPath, resourcePath));\n              fontResource.setName(path.relative(projectPath, resourcePath));\n\n              return fontResource;\n            });\n          }\n        );\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localVideoFileOpener',\n    displayName: 'Choose a new video file',\n    kind: 'video',\n    component: class LocalVideoFileOpener extends Component<ResourceSourceComponentProps> {\n      chooseResources = (\n        project: gdProject,\n        multiSelections: boolean = true\n      ): Promise<Array<any>> => {\n        const { i18n } = this.props;\n        const options = {\n          multiSelections,\n          title: i18n._(t`Choose a video file`),\n          name: i18n._(t`Video files`),\n          extensions: ['mp4'],\n        };\n        return selectLocalResourcePath(i18n, project, options).then(\n          resources => {\n            return resources.map(resourcePath => {\n              const videoResource = new gd.VideoResource();\n              const projectPath = path.dirname(project.getProjectFile());\n              videoResource.setFile(path.relative(projectPath, resourcePath));\n              videoResource.setName(path.relative(projectPath, resourcePath));\n\n              return videoResource;\n            });\n          }\n        );\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localJsonFileOpener',\n    displayName: 'Choose a new json file',\n    kind: 'json',\n    component: class LocalJsonFileOpener extends Component<ResourceSourceComponentProps> {\n      chooseResources = (\n        project: gdProject,\n        multiSelections: boolean = true\n      ): Promise<Array<any>> => {\n        const { i18n } = this.props;\n        const options = {\n          multiSelections,\n          title: i18n._(t`Choose a json file`),\n          name: i18n._(t`JSON file`),\n          extensions: ['json'],\n        };\n        return selectLocalResourcePath(i18n, project, options).then(\n          resources => {\n            return resources.map(resourcePath => {\n              const jsonResource = new gd.JsonResource();\n              const projectPath = path.dirname(project.getProjectFile());\n              jsonResource.setFile(path.relative(projectPath, resourcePath));\n              jsonResource.setName(path.relative(projectPath, resourcePath));\n\n              return jsonResource;\n            });\n          }\n        );\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n];\n\nconst selectLocalResourcePath = (\n  i18n: I18nType,\n  project: gdProject,\n  options: {\n    multiSelections: boolean,\n    title: string,\n    name: string,\n    extensions: Array<string>,\n  }\n): Promise<Array<string>> => {\n  return new Promise((resolve, reject) => {\n    if (!dialog) return reject('Not supported');\n\n    const properties = ['openFile'];\n    if (options.multiSelections) properties.push('multiSelections');\n    const projectPath = path.dirname(project.getProjectFile());\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showOpenDialog(\n      browserWindow,\n      {\n        title: options.title,\n        properties,\n        filters: [{ name: options.name, extensions: options.extensions }],\n        defaultPath: projectPath,\n      },\n      paths => {\n        if (!paths) return resolve([]);\n\n        const outsideProjectFolderPaths = paths.filter(\n          path => !isPathInProjectFolder(project, path)\n        );\n\n        if (outsideProjectFolderPaths.length) {\n          // eslint-disable-next-line\n          const answer = confirm(\n            i18n._(\n              t`This/these file(s) are outside the project folder. Would you like to make a copy of them in your project folder first (recommended)?`\n            )\n          );\n\n          if (answer) {\n            return resolve(copyAllToProjectFolder(project, paths));\n          }\n        }\n\n        return resolve(paths);\n      }\n    );\n  });\n};\n","// @flow\nimport { openPiskel } from './LocalPiskelBridge';\nimport { openJfxr } from './LocalJfxrBridge';\nimport { openYarn } from './LocalYarnBridge';\nimport { type ResourceExternalEditor } from './ResourceExternalEditor.flow';\nimport { sendExternalEditorOpened } from '../Utils/Analytics/EventSender';\n\n/**\n * This is the list of editors that can be used to edit resources\n * on Electron runtime.\n */\nconst editors: Array<ResourceExternalEditor> = [\n  {\n    name: 'piskel-app',\n    displayName: 'Edit with Piskel',\n    kind: 'image',\n    edit: options => {\n      sendExternalEditorOpened('piskel');\n      return openPiskel(options);\n    },\n  },\n  {\n    name: 'Jfxr',\n    displayName: 'Create/Edit a Sound effect with Jfxr (*.wav)',\n    kind: 'audio',\n    edit: options => {\n      sendExternalEditorOpened('jfxr');\n      return openJfxr(options);\n    },\n  },\n  {\n    name: 'Yarn',\n    displayName: 'Create/Edit a Dialogue Tree with Yarn (*.json)',\n    kind: 'json',\n    edit: options => {\n      sendExternalEditorOpened('yarn');\n      return openYarn(options);\n    },\n  },\n];\n\nexport default editors;\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { type ExternalEditorOpenOptions } from './ResourceExternalEditor.flow';\nimport {\n  createOrUpdateResource,\n  getLocalResourceFullPath,\n} from './ResourceUtils.js';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\n/**\n * Open Piskel editor for the specified resources.\n * Take a list of resource names to be edited and will call the callback methods\n * (notably onChangesSaved with the name of the edited resources)\n */\nexport const openPiskel = ({\n  project,\n  resourcesLoader,\n  resourceNames,\n  singleFrame,\n  onChangesSaved,\n  extraOptions,\n}: ExternalEditorOpenOptions) => {\n  if (!electron || !ipcRenderer) return;\n\n  const resources = resourceNames.map((resourceName, originalIndex) => {\n    let resourcePath = getLocalResourceFullPath(project, resourceName);\n    return {\n      resourcePath,\n      resourceName,\n      originalIndex,\n    };\n  });\n\n  const projectPath = path.dirname(project.getProjectFile());\n  const externalEditorData = {\n    ...extraOptions,\n    resources,\n    singleFrame,\n    projectPath,\n  };\n\n  // Listen to events meaning that edition in Piskel is finished\n  ipcRenderer.removeAllListeners('piskel-changes-saved');\n  ipcRenderer.on(\n    'piskel-changes-saved',\n    (event, outputResources, newAnimationName, externalEditorData) => {\n      const metadata = externalEditorData.data\n        ? { pskl: externalEditorData }\n        : null;\n\n      const resourcesManager = project.getResourcesManager();\n      outputResources.forEach(resource => {\n        resource.name = path.relative(projectPath, resource.path); // Still needed for onChangesSaved()\n        createOrUpdateResource(project, new gd.ImageResource(), resource.name);\n      });\n\n      outputResources[0].metadata = metadata;\n      outputResources[0].newAnimationName = newAnimationName;\n      // in case this is for a single frame object, save the metadata in the Image object\n      if (externalEditorData.singleFrame) {\n        if (metadata) {\n          resourcesManager\n            .getResource(path.relative(projectPath, outputResources[0].path))\n            .setMetadata(JSON.stringify(metadata));\n        }\n        onChangesSaved(outputResources);\n      } else {\n        // In case there are multiple frames, pass back the metadata to the editor and let it store it at an appropriate place.\n        // (For example, for sprites, SpritesList.js will save it in the metadata of the gd.Direction).\n\n        onChangesSaved(outputResources);\n      }\n    }\n  );\n\n  // Issue the event to open piskel\n  ipcRenderer.send('piskel-open-then-load-animation', externalEditorData);\n};\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { type ExternalEditorOpenOptions } from './ResourceExternalEditor.flow';\nimport {\n  createOrUpdateResource,\n  getLocalResourceFullPath,\n} from './ResourceUtils.js';\n\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\n/**\n * Open JFXR to create wav resources.\n */\nexport const openJfxr = ({\n  project,\n  resourcesLoader,\n  resourceNames,\n  onChangesSaved,\n  resourcePath,\n  extraOptions,\n}: ExternalEditorOpenOptions) => {\n  if (!electron || !ipcRenderer) return;\n  const projectPath = path.dirname(project.getProjectFile());\n  const initialResourcePath = getLocalResourceFullPath(\n    project,\n    resourceNames[0]\n  );\n\n  const externalEditorData = {\n    resourcePath: initialResourcePath,\n    externalEditorData: extraOptions.externalEditorData,\n    projectPath,\n  };\n\n  ipcRenderer.removeAllListeners('jfxr-changes-saved');\n  ipcRenderer.on(\n    'jfxr-changes-saved',\n    (event, newFilePath, externalEditorData) => {\n      const name = path.relative(projectPath, newFilePath);\n      createOrUpdateResource(project, new gd.AudioResource(), name);\n\n      const metadata = {\n        jfxr: externalEditorData,\n      };\n      project\n        .getResourcesManager()\n        .getResource(name)\n        .setMetadata(JSON.stringify(metadata));\n      onChangesSaved([{ metadata, name }]);\n    }\n  );\n\n  ipcRenderer.send('jfxr-create-wav', externalEditorData);\n};\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { type ExternalEditorOpenOptions } from './ResourceExternalEditor.flow';\nimport {\n  createOrUpdateResource,\n  getLocalResourceFullPath,\n} from './ResourceUtils.js';\n\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\n/**\n * Open YARN to Create/Edit Json Dialogue Tree resources.\n */\nexport const openYarn = ({\n  project,\n  resourcesLoader,\n  resourceNames,\n  onChangesSaved,\n  resourcePath,\n  extraOptions,\n}: ExternalEditorOpenOptions) => {\n  if (!electron || !ipcRenderer) return;\n  const projectPath = path.dirname(project.getProjectFile());\n  const initialResourcePath = getLocalResourceFullPath(\n    project,\n    resourceNames[0]\n  );\n\n  const externalEditorData = {\n    resourcePath: initialResourcePath,\n    externalEditorData: extraOptions.externalEditorData,\n    projectPath,\n  };\n\n  ipcRenderer.removeAllListeners('yarn-changes-saved');\n  ipcRenderer.on('yarn-changes-saved', (event, newFilePath) => {\n    const name = path.relative(projectPath, newFilePath);\n    createOrUpdateResource(project, new gd.JsonResource(), name);\n    onChangesSaved([{ name }]);\n  });\n\n  ipcRenderer.send('yarn-create-json', externalEditorData);\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport localFileSystem from '../LocalFileSystem';\nimport optionalRequire from '../../../Utils/OptionalRequire';\nimport { timeFunction } from '../../../Utils/TimeFunction';\nimport { findGDJS } from '../LocalGDJSFinder';\nimport LocalNetworkPreviewDialog from './LocalNetworkPreviewDialog';\nimport assignIn from 'lodash/assignIn';\nimport { type PreviewOptions } from '../../PreviewLauncher.flow';\nimport { findLocalIp } from './LocalIpFinder';\nimport SubscriptionChecker from '../../../Profile/SubscriptionChecker';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst BrowserWindow = electron ? electron.remote.BrowserWindow : null;\nconst gd = global.gd;\n\ntype Props = {|\n  onExport?: () => void,\n  onChangeSubscription?: () => void,\n|};\n\ntype State = {\n  networkPreviewDialogOpen: boolean,\n  networkPreviewHost: ?string,\n  networkPreviewPort: ?number,\n  networkPreviewError: ?any,\n  previewGamePath: ?string,\n  previewBrowserWindowConfig: ?{\n    width: number,\n    height: number,\n    useContentSize: boolean,\n    title: string,\n    backgroundColor: string,\n  },\n};\n\nexport default class LocalPreviewLauncher extends React.Component<\n  Props,\n  State\n> {\n  canDoNetworkPreview = () => true;\n\n  state = {\n    networkPreviewDialogOpen: false,\n    networkPreviewHost: null,\n    networkPreviewPort: null,\n    networkPreviewError: null,\n    previewGamePath: null,\n    previewBrowserWindowConfig: null,\n  };\n  _subscriptionChecker: ?SubscriptionChecker = null;\n\n  _openPreviewBrowserWindow = () => {\n    if (\n      !BrowserWindow ||\n      !this.state.previewBrowserWindowConfig ||\n      !this.state.previewGamePath\n    )\n      return;\n\n    const win = new BrowserWindow(this.state.previewBrowserWindowConfig);\n    win.loadURL(`file://${this.state.previewGamePath}/index.html`);\n  };\n\n  _openPreviewWindow = (\n    project: gdProject,\n    gamePath: string,\n    options: PreviewOptions\n  ): void => {\n    this.setState(\n      {\n        previewBrowserWindowConfig: {\n          width: project.getMainWindowDefaultWidth(),\n          height: project.getMainWindowDefaultHeight(),\n          useContentSize: true,\n          title: `Preview of ${project.getName()}`,\n          backgroundColor: '#000000',\n        },\n        previewGamePath: gamePath,\n      },\n      () => {\n        if (!options.networkPreview) {\n          this._openPreviewBrowserWindow();\n        } else {\n          if (!ipcRenderer) return;\n\n          ipcRenderer.removeAllListeners('serve-folder-done');\n          ipcRenderer.removeAllListeners('local-network-ips');\n          ipcRenderer.on('serve-folder-done', (event, err, serverParams) => {\n            if (err) {\n              this.setState({\n                networkPreviewDialogOpen: true,\n                networkPreviewPort: null,\n                networkPreviewHost: null,\n                networkPreviewError: err,\n              });\n            } else {\n              this.setState({\n                networkPreviewDialogOpen: true,\n                networkPreviewPort: serverParams.port,\n              });\n            }\n\n            setTimeout(() => this._checkSubscription());\n          });\n          ipcRenderer.on('local-network-ips', (event, ipAddresses) => {\n            this.setState({\n              networkPreviewHost: findLocalIp(ipAddresses),\n            });\n          });\n          ipcRenderer.send('serve-folder', {\n            root: gamePath,\n          });\n          ipcRenderer.send('get-local-network-ips');\n        }\n      }\n    );\n  };\n\n  _prepareExporter = (): Promise<any> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const outputDir = path.join(fileSystem.getTempDir(), 'preview');\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        outputDir,\n        exporter,\n      };\n    });\n  };\n\n  launchLayoutPreview = (\n    project: gdProject,\n    layout: gdLayout,\n    options: PreviewOptions\n  ): Promise<any> => {\n    if (!project || !layout) return Promise.reject();\n\n    return this._prepareExporter().then(({ outputDir, exporter }) => {\n      timeFunction(\n        () => {\n          exporter.exportLayoutForPixiPreview(project, layout, outputDir);\n          exporter.delete();\n          this._openPreviewWindow(project, outputDir, options);\n        },\n        time => console.info(`Preview took ${time}ms`)\n      );\n    });\n  };\n\n  launchExternalLayoutPreview = (\n    project: gdProject,\n    layout: gdLayout,\n    externalLayout: gdExternalLayout,\n    options: PreviewOptions\n  ): Promise<any> => {\n    if (!project || !externalLayout) return Promise.reject();\n\n    return this._prepareExporter().then(({ outputDir, exporter }) => {\n      timeFunction(\n        () => {\n          exporter.exportExternalLayoutForPixiPreview(\n            project,\n            layout,\n            externalLayout,\n            outputDir\n          );\n          exporter.delete();\n          this._openPreviewWindow(project, outputDir, options);\n        },\n        time => console.info(`Preview took ${time}ms`)\n      );\n    });\n  };\n\n  _checkSubscription = () => {\n    if (!this._subscriptionChecker) return true;\n\n    return this._subscriptionChecker.checkHasSubscription();\n  };\n\n  render() {\n    const {\n      networkPreviewDialogOpen,\n      networkPreviewHost,\n      networkPreviewPort,\n      networkPreviewError,\n    } = this.state;\n    return (\n      <React.Fragment>\n        <SubscriptionChecker\n          ref={subscriptionChecker =>\n            (this._subscriptionChecker = subscriptionChecker)\n          }\n          onChangeSubscription={() => {\n            this.setState({ networkPreviewDialogOpen: false });\n            if (this.props.onChangeSubscription)\n              this.props.onChangeSubscription();\n          }}\n          id=\"Preview over wifi\"\n          title={<Trans>Preview over wifi</Trans>}\n          mode=\"try\"\n        />\n        <LocalNetworkPreviewDialog\n          open={networkPreviewDialogOpen}\n          url={\n            networkPreviewHost && networkPreviewPort\n              ? `${networkPreviewHost}:${networkPreviewPort}`\n              : null\n          }\n          error={networkPreviewError}\n          onClose={() => this.setState({ networkPreviewDialogOpen: false })}\n          onExport={this.props.onExport}\n          onRunPreviewLocally={this._openPreviewBrowserWindow}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../../UI/Dialog';\nimport FlatButton from '../../../UI/FlatButton';\nimport TextField from '../../../UI/TextField';\nimport Text from '../../../UI/Text';\nimport { Line } from '../../../UI/Grid';\nimport PlaceholderLoader from '../../../UI/PlaceholderLoader';\n\ntype Props = {|\n  open: boolean,\n  url: ?string,\n  onClose: () => void,\n  onExport: ?() => void,\n  onRunPreviewLocally: () => void,\n  error: ?any,\n|};\n\nexport default class LocalNetworkDialog extends React.Component<Props, {}> {\n  render() {\n    const {\n      url,\n      open,\n      error,\n      onExport,\n      onClose,\n      onRunPreviewLocally,\n    } = this.props;\n    if (!open) return null;\n\n    return (\n      <Dialog\n        actions={[\n          <FlatButton\n            key=\"close\"\n            label={<Trans>Close</Trans>}\n            primary\n            onClick={onClose}\n          />,\n        ]}\n        secondaryActions={[\n          onExport && (\n            <FlatButton\n              key=\"export\"\n              label={<Trans>Export game</Trans>}\n              onClick={onExport}\n            />\n          ),\n          <FlatButton\n            key=\"run-preview-locally\"\n            label={<Trans>Run on this computer</Trans>}\n            onClick={onRunPreviewLocally}\n          />,\n        ]}\n        modal\n        open={open}\n        onRequestClose={onClose}\n      >\n        {error && (\n          <Line>\n            <Text>\n              <Trans>\n                Unable to start the server for the preview! Make sure that you\n                are authorized to run servers on this computer. Otherwise, use\n                classic preview to test your game.\n              </Trans>\n            </Text>\n          </Line>\n        )}\n        {!error && !url && <PlaceholderLoader />}\n        {!error && url && (\n          <div>\n            <Line>\n              <Text>\n                <Trans>\n                  Your preview is ready! On your mobile or tablet, open your\n                  browser and enter in the address bar:\n                </Trans>\n              </Text>\n            </Line>\n            <TextField value={url} fullWidth />\n            <Line>\n              <Text>\n                <Trans>\n                  Please note that your device should be connected on the same\n                  network as this computer.\n                </Trans>\n              </Text>\n            </Line>\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n","// @flow\n\nexport const findLocalIp = (ipAddresses: Array<string>): ?string => {\n  if (!ipAddresses.length) return null;\n\n  let firstLocalIp = ipAddresses.find(\n    ipAddress => ipAddress.indexOf('192.168') === 0\n  );\n  if (firstLocalIp) return firstLocalIp;\n\n  firstLocalIp = ipAddresses.find(ipAddress => ipAddress.indexOf('192') === 0);\n  if (firstLocalIp) return firstLocalIp;\n\n  return ipAddresses[0];\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { type Exporter } from '../ExportDialog';\nimport { localCordovaExportPipeline } from './LocalCordovaExport';\nimport { localElectronExportPipeline } from './LocalElectronExport';\nimport { localHTML5ExportPipeline } from './LocalHTML5Export';\nimport { localCocos2dExportPipeline } from './LocalCocos2dExport';\nimport { localFacebookInstantGamesExportPipeline } from './LocalFacebookInstantGamesExport';\nimport { localOnlineCordovaExportPipeline } from './LocalOnlineCordovaExport.js';\nimport { localOnlineElectronExportPipeline } from './LocalOnlineElectronExport.js';\nimport { localOnlineWebExportPipeline } from './LocalOnlineWebExport';\nimport PhoneIphone from '@material-ui/icons/PhoneIphone';\nimport LaptopMac from '@material-ui/icons/LaptopMac';\nimport Folder from '@material-ui/icons/Folder';\nimport Facebook from '../../UI/CustomSvgIcons/Facebook';\nimport Cordova from '../../UI/CustomSvgIcons/Cordova';\nimport Chrome from '../../UI/CustomSvgIcons/Chrome';\n\nexport const getLocalExporters = (): Array<Exporter> => [\n  {\n    name: <Trans>Android (&amp; iOS coming soon)</Trans>,\n    renderIcon: props => <PhoneIphone {...props} />,\n    helpPage: '/publishing/android_and_ios',\n    description: (\n      <Trans>\n        Package your game for Android directly from GDevelop. iOS support is\n        coming soon!\n      </Trans>\n    ),\n    key: 'localonlinecordovaexport',\n    exportPipeline: localOnlineCordovaExportPipeline,\n  },\n  {\n    name: <Trans>Web (upload online)</Trans>,\n    renderIcon: props => <Chrome {...props} />,\n    helpPage: '/publishing/web',\n    description: (\n      <Trans>\n        Upload your game online directly from GDevelop and share the link to\n        players. Play to your game using your browser on computers and mobile\n        phones.\n      </Trans>\n    ),\n    key: 'localonlinewebexport',\n    exportPipeline: localOnlineWebExportPipeline,\n  },\n  {\n    name: <Trans>Local folder</Trans>,\n    renderIcon: props => <Folder {...props} />,\n    helpPage: '/publishing/html5_game_in_a_local_folder',\n    description: (\n      <Trans>\n        Build the game locally as a HTML5 game. You can then publish it on\n        website like Kongregate, Game Jolt, itch.io, Poki...\n      </Trans>\n    ),\n    key: 'localexport',\n    exportPipeline: localHTML5ExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>Facebook Instant Games</Trans>,\n    renderIcon: props => <Facebook {...props} />,\n    helpPage: '/publishing/publishing-to-facebook-instant-games',\n    description: (\n      <Trans>\n        Package your game as a Facebook Instant Games that can be played on\n        Facebook Messenger.\n      </Trans>\n    ),\n    key: 'localfacebookinstantgames',\n    exportPipeline: localFacebookInstantGamesExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>iOS &amp; Android (manual)</Trans>,\n    renderIcon: props => <Cordova {...props} />,\n    helpPage: '/publishing/android_and_ios_with_cordova',\n    description: (\n      <Trans>\n        Build the game locally as a Cordova project, and export it manually to\n        iOS or Android with Cordova developers tools.\n      </Trans>\n    ),\n    key: 'localcordovaexport',\n    exportPipeline: localCordovaExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>Windows/macOS/Linux</Trans>,\n    renderIcon: props => <LaptopMac {...props} />,\n    helpPage: '/publishing/windows-macos-linux',\n    description: (\n      <Trans>\n        Package your game as an app for Windows, macOS or Linux directly from\n        GDevelop.\n      </Trans>\n    ),\n    key: 'localonlineelectronexport',\n    exportPipeline: localOnlineElectronExportPipeline,\n  },\n  {\n    name: <Trans>Windows/macOS/Linux (manual)</Trans>,\n    renderIcon: props => <LaptopMac {...props} />,\n    helpPage: '/publishing/windows-macos-linux-with-electron',\n    description: (\n      <Trans>\n        Build the game locally and export it manually to Windows, macOS or Linux\n        with third-party developer tools.\n      </Trans>\n    ),\n    key: 'localelectronexport',\n    exportPipeline: localElectronExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>Cocos2d-JS</Trans>,\n    renderIcon: props => <PhoneIphone {...props} />,\n    helpPage: '/publishing/android_and_ios_with_cocos2d-js',\n    description: (\n      <Trans>\n        Export your game using Cocos2d-JS game engine. The game can be compiled\n        for Android or iOS if you install Cocos2d-JS developer tools.\n      </Trans>\n    ),\n    key: 'localcocos2dexport',\n    exportPipeline: localCocos2dExportPipeline,\n    experimental: true,\n  },\n];\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport { findGDJS } from './LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/CordovaExport';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype ExportState = {\n  outputDir: string,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n|};\n\ntype ExportOutput = null;\n\ntype ResourcesDownloadOutput = null;\n\ntype CompressionOutput = null;\n\nexport const localCordovaExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-cordova',\n\n  getInitialExportState: (project: gdProject) => ({\n    outputDir: project.getLastCompilationDirectory(),\n  }),\n\n  canLaunchBuild: exportState => !!exportState.outputDir,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <Column noMargin>\n          <ExplanationHeader />\n        </Column>\n      </Line>\n      <Line>\n        <LocalFolderPicker\n          type=\"export\"\n          value={exportState.outputDir}\n          defaultPath={project.getLastCompilationDirectory()}\n          onChange={outputDir => {\n            updateExportState(() => ({ outputDir }));\n          }}\n          fullWidth\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForCordova', true);\n    exporter.exportWholePixiProject(\n      context.project,\n      context.exportState.outputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve(null);\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve(null);\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    return Promise.resolve(null);\n  },\n\n  renderDoneFooter: ({ exportState, onClose }) => {\n    const openExportFolder = () => {\n      if (shell) shell.openItem(exportState.outputDir);\n    };\n\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <RaisedButton\n            key=\"open\"\n            label={<Trans>Open folder</Trans>}\n            primary={true}\n            onClick={openExportFolder}\n          />\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport { findGDJS } from './LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/ElectronExport';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype ExportState = {\n  outputDir: string,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n|};\n\ntype ExportOutput = null;\n\ntype ResourcesDownloadOutput = null;\n\ntype CompressionOutput = null;\n\nexport const localElectronExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-electron',\n\n  getInitialExportState: (project: gdProject) => ({\n    outputDir: project.getLastCompilationDirectory(),\n  }),\n\n  canLaunchBuild: exportState => !!exportState.outputDir,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <Column noMargin>\n          <ExplanationHeader />\n        </Column>\n      </Line>\n      <Line>\n        <LocalFolderPicker\n          type=\"export\"\n          value={exportState.outputDir}\n          defaultPath={project.getLastCompilationDirectory()}\n          onChange={outputDir => {\n            updateExportState(() => ({ outputDir }));\n          }}\n          fullWidth\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForElectron', true);\n    exporter.exportWholePixiProject(\n      context.project,\n      context.exportState.outputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve(null);\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve(null);\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    return Promise.resolve(null);\n  },\n\n  renderDoneFooter: ({ exportState, onClose }) => {\n    const openExportFolder = () => {\n      if (shell) shell.openItem(exportState.outputDir);\n    };\n\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <RaisedButton\n            key=\"open\"\n            label={<Trans>Open folder</Trans>}\n            primary={true}\n            onClick={openExportFolder}\n          />\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport { findGDJS } from './LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport { ExplanationHeader, DoneFooter } from '../GenericExporters/HTML5Export';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype ExportState = {\n  outputDir: string,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n|};\n\ntype ExportOutput = null;\n\ntype ResourcesDownloadOutput = null;\n\ntype CompressionOutput = null;\n\nexport const localHTML5ExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-html5',\n\n  getInitialExportState: (project: gdProject) => ({\n    outputDir: project.getLastCompilationDirectory(),\n  }),\n\n  canLaunchBuild: exportState => !!exportState.outputDir,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <ExplanationHeader />\n      </Line>\n      <Line>\n        <LocalFolderPicker\n          type=\"export\"\n          value={exportState.outputDir}\n          defaultPath={project.getLastCompilationDirectory()}\n          onChange={outputDir => {\n            updateExportState(() => ({ outputDir }));\n          }}\n          fullWidth\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Export as a HTML5 game</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exporter.exportWholePixiProject(\n      context.project,\n      context.exportState.outputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve(null);\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve(null);\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    return Promise.resolve(null);\n  },\n\n  renderDoneFooter: ({ exportState, onClose }) => {\n    const openExportFolder = () => {\n      if (shell) shell.openItem(exportState.outputDir);\n    };\n\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <RaisedButton\n            fullWidth\n            primary\n            onClick={() => openExportFolder()}\n            label={<Trans>Open the exported game folder</Trans>}\n          />\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport { findGDJS } from './LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport Toggle from '../../UI/Toggle';\nimport {\n  DoneFooter,\n  ExplanationHeader,\n} from '../GenericExporters/Cocos2dExport';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype ExportState = {\n  outputDir: string,\n  debugMode: boolean,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n|};\n\ntype ExportOutput = null;\n\ntype ResourcesDownloadOutput = null;\n\ntype CompressionOutput = null;\n\nexport const localCocos2dExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-cocos2d',\n\n  getInitialExportState: (project: gdProject) => ({\n    outputDir: project.getLastCompilationDirectory(),\n    debugMode: false,\n  }),\n\n  canLaunchBuild: exportState => !!exportState.outputDir,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <ExplanationHeader />\n      </Line>\n      <Line>\n        <LocalFolderPicker\n          type=\"export\"\n          value={exportState.outputDir}\n          defaultPath={project.getLastCompilationDirectory()}\n          onChange={outputDir => {\n            updateExportState(prevState => ({ ...prevState, outputDir }));\n          }}\n          fullWidth\n        />\n      </Line>\n      <Line>\n        <Toggle\n          onToggle={(e, check) =>\n            updateExportState(prevState => ({\n              ...prevState,\n              debugMode: check,\n            }))\n          }\n          toggled={exportState.debugMode}\n          labelPosition=\"right\"\n          label={\n            <Trans>\n              Debug mode (show FPS counter and stats in the bottom left)\n            </Trans>\n          }\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    exporter.exportWholeCocos2dProject(\n      context.project,\n      context.exportState.debugMode,\n      context.exportState.outputDir\n    );\n    exporter.delete();\n\n    return Promise.resolve(null);\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve(null);\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    exportOutput: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    return Promise.resolve(null);\n  },\n\n  renderDoneFooter: ({ exportState, onClose }) => {\n    const openExportFolder = () => {\n      if (shell) shell.openItem(exportState.outputDir);\n    };\n\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <RaisedButton\n            key=\"open\"\n            label={<Trans>Open folder</Trans>}\n            primary={true}\n            onClick={openExportFolder}\n          />\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport { findGDJS } from './LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport LocalFilePicker from '../../UI/LocalFilePicker';\nimport { archiveLocalFolder } from '../../Utils/LocalArchiver';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/FacebookInstantGamesExport';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype ExportState = {\n  archiveOutputFilename: string,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  temporaryOutputDir: string,\n|};\n\ntype ExportOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype ResourcesDownloadOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype CompressionOutput = string;\n\nexport const localFacebookInstantGamesExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-facebook-instant-games',\n\n  getInitialExportState: (project: gdProject) => ({\n    archiveOutputFilename: app\n      ? path.join(app.getPath('documents'), 'fb-instant-game.zip')\n      : '',\n  }),\n\n  canLaunchBuild: exportState => !!exportState.archiveOutputFilename,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <ExplanationHeader />\n      </Line>\n      <Line>\n        <LocalFilePicker\n          title={'Facebook Instant Games export zip file'}\n          message={\n            'Choose where to save the exported file for Facebook Instant Games'\n          }\n          filters={[\n            {\n              name: 'Compressed file for Facebook Instant Games',\n              extensions: ['zip'],\n            },\n          ]}\n          value={exportState.archiveOutputFilename}\n          defaultPath={app ? app.getPath('documents') : ''}\n          onChange={value =>\n            updateExportState(() => ({ archiveOutputFilename: value }))\n          }\n          fullWidth\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n      const temporaryOutputDir = path.join(\n        fileSystem.getTempDir(),\n        'FacebookInstantGamesExport'\n      );\n      fileSystem.mkDir(temporaryOutputDir);\n      fileSystem.clearDir(temporaryOutputDir);\n\n      return {\n        exporter,\n        temporaryOutputDir,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, temporaryOutputDir }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForFacebookInstantGames', true);\n    exporter.exportWholePixiProject(\n      context.project,\n      temporaryOutputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    return archiveLocalFolder({\n      path: temporaryOutputDir,\n      outputFilename: context.exportState.archiveOutputFilename,\n    });\n  },\n\n  renderDoneFooter: ({ exportState, onClose }) => {\n    const openExportFolder = () => {\n      if (shell && path)\n        shell.openItem(path.dirname(exportState.archiveOutputFilename));\n    };\n\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <RaisedButton\n            key=\"open\"\n            label={<Trans>Open folder</Trans>}\n            primary={true}\n            onClick={openExportFolder}\n          />\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport React, { PureComponent } from 'react';\nimport TextField from '../TextField';\nimport FlatButton from '../FlatButton';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'baseline',\n  },\n  button: {\n    marginLeft: 10,\n  },\n  textField: {\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  value: string,\n  onChange: string => void,\n  title: string,\n  message: string,\n  defaultPath?: string,\n  fullWidth?: boolean,\n  floatingLabelText?: string,\n  filters: Array<{\n    name: string,\n    extensions: Array<string>,\n  }>,\n|};\n\nexport default class LocalFilePicker extends PureComponent<Props, *> {\n  onChooseFolder = () => {\n    if (!dialog || !electron) return;\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showSaveDialog(\n      browserWindow,\n      {\n        title: this.props.title,\n        filters: this.props.filters,\n        message: this.props.message,\n        defaultPath: this.props.defaultPath,\n      },\n      filename => {\n        this.props.onChange(filename || '');\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          ...styles.container,\n          width: this.props.fullWidth ? '100%' : undefined,\n        }}\n      >\n        <TextField\n          style={styles.textField}\n          floatingLabelText={this.props.floatingLabelText}\n          floatingLabelFixed\n          type=\"text\"\n          hintText={t`Click to choose`}\n          value={this.props.value}\n          onChange={(event, value) => this.props.onChange(value)}\n        />\n        <FlatButton\n          label={<Trans>Choose</Trans>}\n          style={styles.button}\n          onClick={this.onChooseFolder}\n        />\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type Build,\n  buildCordovaAndroid,\n} from '../../Utils/GDevelopServices/Build';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport { findGDJS } from './LocalGDJSFinder';\nimport { archiveLocalFolder } from '../../Utils/LocalArchiver';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport localFileSystem from './LocalFileSystem';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport { ExplanationHeader } from '../GenericExporters/OnlineCordovaExport';\nconst path = optionalRequire('path');\nconst os = optionalRequire('os');\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  temporaryOutputDir: string,\n|};\n\ntype ExportOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype ResourcesDownloadOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype CompressionOutput = string;\n\nexport const localOnlineCordovaExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-online-cordova',\n  onlineBuildType: 'cordova-build',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Packaging for Android</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n      const temporaryOutputDir = path.join(\n        fileSystem.getTempDir(),\n        'OnlineCordovaExport'\n      );\n      fileSystem.mkDir(temporaryOutputDir);\n      fileSystem.clearDir(temporaryOutputDir);\n\n      return {\n        exporter,\n        temporaryOutputDir,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, temporaryOutputDir }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForCordova', true);\n    exporter.exportWholePixiProject(\n      context.project,\n      temporaryOutputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    const archiveOutputDir = os.tmpdir();\n    return archiveLocalFolder({\n      path: temporaryOutputDir,\n      outputFilename: path.join(archiveOutputDir, 'game-archive.zip'),\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    outputFile: CompressionOutput\n  ): Promise<string> => {\n    if (!ipcRenderer) return Promise.reject('No support for upload');\n\n    ipcRenderer.removeAllListeners('s3-file-upload-progress');\n    ipcRenderer.removeAllListeners('s3-file-upload-done');\n\n    return new Promise((resolve, reject) => {\n      ipcRenderer.on(\n        's3-file-upload-progress',\n        (event, stepCurrentProgress, stepMaxProgress) => {\n          context.updateStepProgress(stepCurrentProgress, stepMaxProgress);\n        }\n      );\n      ipcRenderer.on('s3-file-upload-done', (event, err, prefix) => {\n        if (err) return reject(err);\n        resolve(prefix);\n      });\n      ipcRenderer.send('s3-file-upload', outputFile);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildCordovaAndroid(\n      getAuthorizationHeader,\n      profile.uid,\n      uploadBucketKey\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport { type Build, buildElectron } from '../../Utils/GDevelopServices/Build';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport { findGDJS } from './LocalGDJSFinder';\nimport { archiveLocalFolder } from '../../Utils/LocalArchiver';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport localFileSystem from './LocalFileSystem';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport {\n  type ExportState,\n  SetupExportHeader,\n} from '../GenericExporters/OnlineElectronExport';\nconst path = optionalRequire('path');\nconst os = optionalRequire('os');\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  temporaryOutputDir: string,\n|};\n\ntype ExportOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype ResourcesDownloadOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype CompressionOutput = string;\n\nexport const localOnlineElectronExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-online-electron',\n  onlineBuildType: 'electron-build',\n\n  getInitialExportState: () => ({\n    targets: ['winExe'],\n  }),\n\n  canLaunchBuild: (exportState: ExportState) => !!exportState.targets.length,\n\n  renderHeader: props => <SetupExportHeader {...props} />,\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n      const temporaryOutputDir = path.join(\n        fileSystem.getTempDir(),\n        'OnlineElectronExport'\n      );\n      fileSystem.mkDir(temporaryOutputDir);\n      fileSystem.clearDir(temporaryOutputDir);\n\n      return {\n        exporter,\n        temporaryOutputDir,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, temporaryOutputDir }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForElectron', true);\n    exporter.exportWholePixiProject(\n      context.project,\n      temporaryOutputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    const archiveOutputDir = os.tmpdir();\n    return archiveLocalFolder({\n      path: temporaryOutputDir,\n      outputFilename: path.join(archiveOutputDir, 'game-archive.zip'),\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    outputFile: CompressionOutput\n  ): Promise<string> => {\n    if (!ipcRenderer) return Promise.reject('No support for upload');\n\n    ipcRenderer.removeAllListeners('s3-file-upload-progress');\n    ipcRenderer.removeAllListeners('s3-file-upload-done');\n\n    return new Promise((resolve, reject) => {\n      ipcRenderer.on(\n        's3-file-upload-progress',\n        (event, stepCurrentProgress, stepMaxProgress) => {\n          context.updateStepProgress(stepCurrentProgress, stepMaxProgress);\n        }\n      );\n      ipcRenderer.on('s3-file-upload-done', (event, err, prefix) => {\n        if (err) return reject(err);\n        resolve(prefix);\n      });\n      ipcRenderer.send('s3-file-upload', outputFile);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildElectron(\n      getAuthorizationHeader,\n      profile.uid,\n      uploadBucketKey,\n      exportState.targets\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport { type Build, buildWeb } from '../../Utils/GDevelopServices/Build';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport { findGDJS } from './LocalGDJSFinder';\nimport { archiveLocalFolder } from '../../Utils/LocalArchiver';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport localFileSystem from './LocalFileSystem';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport { ExplanationHeader } from '../GenericExporters/OnlineWebExport';\nconst path = optionalRequire('path');\nconst os = optionalRequire('os');\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  temporaryOutputDir: string,\n|};\n\ntype ExportOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype ResourcesDownloadOutput = {|\n  temporaryOutputDir: string,\n|};\n\ntype CompressionOutput = string;\n\nexport const localOnlineWebExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'local-online-web',\n  onlineBuildType: 'web-build',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Publish online</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS().then(({ gdjsRoot }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        localFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n      const temporaryOutputDir = path.join(\n        fileSystem.getTempDir(),\n        'OnlineWebExport'\n      );\n      fileSystem.mkDir(temporaryOutputDir);\n      fileSystem.clearDir(temporaryOutputDir);\n\n      return {\n        exporter,\n        temporaryOutputDir,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, temporaryOutputDir }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const exportOptions = new gd.MapStringBoolean();\n    exporter.exportWholePixiProject(\n      context.project,\n      temporaryOutputDir,\n      exportOptions\n    );\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return Promise.resolve({ temporaryOutputDir });\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { temporaryOutputDir }: ResourcesDownloadOutput\n  ): Promise<CompressionOutput> => {\n    const archiveOutputDir = os.tmpdir();\n    return archiveLocalFolder({\n      path: temporaryOutputDir,\n      outputFilename: path.join(archiveOutputDir, 'game-archive.zip'),\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    outputFile: CompressionOutput\n  ): Promise<string> => {\n    if (!ipcRenderer) return Promise.reject('No support for upload');\n\n    ipcRenderer.removeAllListeners('s3-file-upload-progress');\n    ipcRenderer.removeAllListeners('s3-file-upload-done');\n\n    return new Promise((resolve, reject) => {\n      ipcRenderer.on(\n        's3-file-upload-progress',\n        (event, stepCurrentProgress, stepMaxProgress) => {\n          context.updateStepProgress(stepCurrentProgress, stepMaxProgress);\n        }\n      );\n      ipcRenderer.on('s3-file-upload-done', (event, err, prefix) => {\n        if (err) return reject(err);\n        resolve(prefix);\n      });\n      ipcRenderer.send('s3-file-upload', outputFile);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildWeb(getAuthorizationHeader, profile.uid, uploadBucketKey);\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport MainFrame from '.';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\nimport { isMacLike } from '../Utils/Platform';\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\n\ntype Props = {|\n  children: React.Element<typeof MainFrame>,\n  i18n: I18nType,\n|};\n\ntype MainMenuEvent =\n  | 'main-menu-open'\n  | 'main-menu-save'\n  | 'main-menu-save-as'\n  | 'main-menu-close'\n  | 'main-menu-export'\n  | 'main-menu-create'\n  | 'main-menu-open-project-manager'\n  | 'main-menu-open-start-page'\n  | 'main-menu-open-debugger'\n  | 'main-menu-open-about'\n  | 'main-menu-open-preferences'\n  | 'main-menu-open-language'\n  | 'main-menu-open-profile'\n  | 'update-status';\n\ntype MenuItemTemplate =\n  | {|\n      onClickSendEvent?: MainMenuEvent,\n      onClickOpenLink?: string,\n      accelerator?: string,\n      enabled?: boolean,\n      label?: string,\n    |}\n  | {|\n      submenu: Array<MenuItemTemplate>,\n      label: string,\n    |}\n  | {|\n      submenu: Array<MenuItemTemplate>,\n      role: string,\n    |}\n  | {|\n      type: 'separator',\n    |}\n  | {|\n      role: string,\n    |};\n\ntype RootMenuTemplate =\n  | {|\n      label: string,\n      submenu: Array<MenuItemTemplate>,\n    |}\n  | {|\n      role: string,\n      submenu: Array<MenuItemTemplate>,\n    |};\n\n/**\n * Forward events received from Electron main process\n * to the underlying child React component.\n */\nclass ElectronMainMenu extends React.Component<Props, {||}> {\n  _editor: ?MainFrame;\n  _language: ?string;\n\n  componentDidMount() {\n    if (!ipcRenderer) return;\n\n    ipcRenderer.on(\n      ('main-menu-open': MainMenuEvent),\n      event => this._editor && this._editor.chooseProject()\n    );\n    ipcRenderer.on(\n      ('main-menu-save': MainMenuEvent),\n      event => this._editor && this._editor.saveProject()\n    );\n    ipcRenderer.on(\n      ('main-menu-save-as': MainMenuEvent),\n      event => this._editor && this._editor.saveProjectAs()\n    );\n    ipcRenderer.on(\n      ('main-menu-close': MainMenuEvent),\n      event => this._editor && this._editor.askToCloseProject()\n    );\n    ipcRenderer.on(\n      ('main-menu-export': MainMenuEvent),\n      event => this._editor && this._editor.openExportDialog()\n    );\n    ipcRenderer.on(\n      ('main-menu-create': MainMenuEvent),\n      event => this._editor && this._editor.openCreateDialog()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-project-manager': MainMenuEvent),\n      event => this._editor && this._editor.openProjectManager()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-start-page': MainMenuEvent),\n      event => this._editor && this._editor.openStartPage()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-debugger': MainMenuEvent),\n      event => this._editor && this._editor.openDebugger()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-about': MainMenuEvent),\n      event => this._editor && this._editor.openAboutDialog()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-preferences': MainMenuEvent),\n      event => this._editor && this._editor.openPreferences()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-language': MainMenuEvent),\n      event => this._editor && this._editor.openLanguage()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-profile': MainMenuEvent),\n      event => this._editor && this._editor.openProfile()\n    );\n    ipcRenderer.on(\n      ('update-status': MainMenuEvent),\n      (event, status) => this._editor && this._editor.setUpdateStatus(status)\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.props.i18n.language !== this._language) {\n      this._buildAndSendMenuTemplate();\n      this._language = this.props.i18n.language;\n    }\n  }\n\n  _buildAndSendMenuTemplate() {\n    const { i18n } = this.props;\n    const fileTemplate = {\n      label: i18n._(t`File`),\n      submenu: [\n        {\n          label: i18n._(t`Create a New Project...`),\n          accelerator: 'CommandOrControl+N',\n          onClickSendEvent: 'main-menu-create',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Open...`),\n          accelerator: 'CommandOrControl+O',\n          onClickSendEvent: 'main-menu-open',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Save`),\n          accelerator: 'CommandOrControl+S',\n          onClickSendEvent: 'main-menu-save',\n        },\n        {\n          label: i18n._(t`Save as...`),\n          accelerator: 'CommandOrControl+Alt+S',\n          onClickSendEvent: 'main-menu-save-as',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Export (web, iOS, Android)...`),\n          onClickSendEvent: 'main-menu-export',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Close Project`),\n          accelerator: 'CommandOrControl+Shift+W',\n          onClickSendEvent: 'main-menu-close',\n        },\n      ],\n    };\n    if (!isMacLike()) {\n      fileTemplate.submenu.push(\n        { type: 'separator' },\n        {\n          label: i18n._(t`My Profile`),\n          onClickSendEvent: 'main-menu-open-profile',\n        },\n        {\n          label: i18n._(t`Preferences`),\n          onClickSendEvent: 'main-menu-open-preferences',\n        },\n        {\n          label: i18n._(t`Language`),\n          onClickSendEvent: 'main-menu-open-language',\n        }\n      );\n    }\n\n    const editTemplate = {\n      label: i18n._(t`Edit`),\n      submenu: [\n        { role: 'undo' },\n        { role: 'redo' },\n        { type: 'separator' },\n        { role: 'cut' },\n        { role: 'copy' },\n        { role: 'paste' },\n        { role: 'pasteandmatchstyle' },\n        { role: 'delete' },\n        { role: 'selectall' },\n      ],\n    };\n\n    const viewTemplate = {\n      label: i18n._(t`View`),\n      submenu: [\n        {\n          label: i18n._(t`Show Project Manager`),\n          accelerator: 'CommandOrControl+Alt+P',\n          onClickSendEvent: 'main-menu-open-project-manager',\n        },\n        {\n          label: i18n._(t`Show Start Page`),\n          onClickSendEvent: 'main-menu-open-start-page',\n        },\n        {\n          label: i18n._(t`Open Debugger`),\n          onClickSendEvent: 'main-menu-open-debugger',\n        },\n        { type: 'separator' },\n        { role: 'toggledevtools' },\n        { type: 'separator' },\n        { role: 'togglefullscreen' },\n      ],\n    };\n\n    const windowTemplate = {\n      role: 'window',\n      submenu: [{ role: 'minimize' }],\n    };\n\n    const helpTemplate = {\n      role: 'help',\n      submenu: [\n        {\n          label: i18n._(t`GDevelop website`),\n          onClickOpenLink: 'http://gdevelop-app.com',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Community Forums`),\n          onClickOpenLink: 'https://forum.gdevelop-app.com',\n        },\n        {\n          label: i18n._(t`Community Discord Chat`),\n          onClickOpenLink: 'https://discord.gg/rjdYHvj',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Contribute to GDevelop`),\n          onClickOpenLink: 'https://gdevelop-app.com/contribute/',\n        },\n        {\n          label: i18n._(t`Create Extensions for GDevelop`),\n          onClickOpenLink:\n            'https://github.com/4ian/GDevelop/blob/master/newIDE/README-extensions.md',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Help to Translate GDevelop`),\n          onClickOpenLink: 'https://crowdin.com/project/gdevelop',\n        },\n        {\n          label: i18n._(t`Report a wrong translation`),\n          onClickOpenLink: 'https://github.com/4ian/GDevelop/issues/969',\n        },\n      ],\n    };\n    if (!isMacLike()) {\n      helpTemplate.submenu.push(\n        { type: 'separator' },\n        {\n          label: i18n._(t`About GDevelop`),\n          onClickSendEvent: 'main-menu-open-about',\n        }\n      );\n    }\n\n    const template: Array<RootMenuTemplate> = [\n      fileTemplate,\n      editTemplate,\n      viewTemplate,\n      windowTemplate,\n      helpTemplate,\n    ];\n\n    if (isMacLike()) {\n      template.unshift({\n        label: i18n._(t`GDevelop 5`),\n        submenu: [\n          {\n            label: i18n._(t`About GDevelop`),\n            onClickSendEvent: 'main-menu-open-about',\n          },\n          { type: 'separator' },\n          {\n            label: i18n._(t`My Profile`),\n            onClickSendEvent: 'main-menu-open-profile',\n          },\n          {\n            label: i18n._(t`Preferences`),\n            onClickSendEvent: 'main-menu-open-preferences',\n          },\n          {\n            label: i18n._(t`Language`),\n            onClickSendEvent: 'main-menu-open-language',\n          },\n          { type: 'separator' },\n          { role: 'services', submenu: [] },\n          { type: 'separator' },\n          { role: 'hide' },\n          { role: 'hideothers' },\n          { role: 'unhide' },\n          { type: 'separator' },\n          { role: 'quit' },\n        ],\n      });\n\n      editTemplate.submenu.push(\n        { type: 'separator' },\n        {\n          label: i18n._(t`Speech`),\n          submenu: [{ role: 'startspeaking' }, { role: 'stopspeaking' }],\n        }\n      );\n\n      windowTemplate.submenu = [\n        { role: 'minimize' },\n        { role: 'zoom' },\n        { type: 'separator' },\n        { role: 'front' },\n      ];\n    }\n\n    if (ipcRenderer) {\n      ipcRenderer.send('set-main-menu', template);\n    }\n  }\n\n  render() {\n    return React.cloneElement(this.props.children, {\n      ref: editor => (this._editor = editor),\n    });\n  }\n}\n\nexport default ElectronMainMenu;\n","// @flow\n// Note: this file does not use export/imports and use Flow comments to allow its usage from Node.js\n\nconst { loadExtension } = require('.');\nconst optionalRequire = require('../Utils/OptionalRequire');\nconst { findJsExtensionModules } = require('./LocalJsExtensionsFinder');\n\n/*flow-include\nimport type {JsExtensionsLoader, TranslationFunction} from '.';\nimport ObjectsEditorService from '../ObjectEditor/ObjectsEditorService';\nimport ObjectsRenderingService from '../ObjectsRendering/ObjectsRenderingService';\n\ntype MakeExtensionsLoaderArguments = {|\n  gd: any,\n  objectsEditorService: typeof ObjectsEditorService,\n  objectsRenderingService: typeof ObjectsRenderingService,\n  filterExamples: boolean,\n|};\n*/\n\n/**\n * Loader that will find all JS extensions declared in GDJS/Runtime/Extensions/xxx/JsExtension.js.\n * If you add a new extension and also want it to be available for the web-app version, add it in\n * BrowserJsExtensionsLoader.js\n */\nmodule.exports = function makeExtensionsLoader(\n  {\n    gd,\n    objectsEditorService,\n    objectsRenderingService,\n    filterExamples,\n  } /*: MakeExtensionsLoaderArguments*/\n) /*: JsExtensionsLoader*/ {\n  return {\n    loadAllExtensions: (_ /*: TranslationFunction */) => {\n      return findJsExtensionModules({ filterExamples }).then(\n        extensionModulePaths => {\n          return Promise.all(\n            extensionModulePaths.map(extensionModulePath => {\n              let extensionModule = null;\n              try {\n                extensionModule = optionalRequire(extensionModulePath, {\n                  rethrowException: true,\n                });\n              } catch (ex) {\n                return {\n                  extensionModulePath,\n                  result: {\n                    message:\n                      'Unable to import extension. Please check for any syntax error or error that would prevent it from being run.',\n                    error: true,\n                    rawError: ex,\n                  },\n                };\n              }\n\n              if (extensionModule) {\n                // Load any editor for objects, if we have somewhere where\n                // to register them.\n                if (\n                  objectsEditorService &&\n                  extensionModule.registerEditorConfigurations\n                ) {\n                  extensionModule.registerEditorConfigurations(\n                    objectsEditorService\n                  );\n                }\n\n                // Load any renderer for objects, if we have somewhere where\n                // to register them.\n                if (\n                  objectsRenderingService &&\n                  extensionModule.registerInstanceRenderers\n                ) {\n                  extensionModule.registerInstanceRenderers(\n                    objectsRenderingService\n                  );\n                }\n\n                return {\n                  extensionModulePath,\n                  result: loadExtension(\n                    _,\n                    gd,\n                    gd.JsPlatform.get(),\n                    extensionModule\n                  ),\n                };\n              }\n\n              return {\n                extensionModulePath,\n                result: {\n                  error: true,\n                  message:\n                    'Unknown error. Please check for any syntax error or error that would prevent it from being run.',\n                },\n              };\n            })\n          );\n        },\n        err => {\n          console.error(`Unable to find JS extensions modules`);\n          throw err;\n        }\n      );\n    },\n  };\n};\n","// Note: this file does not use export/imports nor Flow to allow its usage from Node.js\n\nconst { findGDJS } = require('../Export/LocalExporters/LocalGDJSFinder');\nconst optionalRequire = require('../Utils/OptionalRequire');\nconst path = optionalRequire('path');\nconst fs = optionalRequire('fs');\n\nconst checkIfPathHasJsExtensionModule = extensionFolderPath => {\n  return new Promise(resolve => {\n    const jsExtensionModulePath = path.join(\n      extensionFolderPath,\n      'JsExtension.js'\n    );\n    fs.stat(jsExtensionModulePath, (err, stats) => {\n      if (err) {\n        return resolve(null);\n      }\n\n      return resolve(stats.isFile() ? jsExtensionModulePath : null);\n    });\n  });\n};\n\nconst findJsExtensionModules = ({ filterExamples }) => {\n  return findGDJS().then(({ gdjsRoot }) => {\n    const extensionsRoot = path.join(gdjsRoot, 'Runtime', 'Extensions');\n    console.info(\n      `Searching for JS extensions (file called JsExtension.js) in ${extensionsRoot}...`\n    );\n    return new Promise((resolve, reject) => {\n      fs.readdir(extensionsRoot, (error, extensionFolders) => {\n        if (error) {\n          return reject(error);\n        }\n\n        const filteredExtensionFolders = extensionFolders.filter(folder => {\n          if (!filterExamples) return true;\n\n          return folder.indexOf('Example') === -1;\n        });\n\n        Promise.all(\n          filteredExtensionFolders.map(extensionFolder =>\n            checkIfPathHasJsExtensionModule(\n              path.join(extensionsRoot, extensionFolder)\n            )\n          )\n        ).then(modulePaths => {\n          resolve(modulePaths.filter(modulePath => !!modulePath));\n        }, reject);\n      });\n    });\n  });\n};\n\nmodule.exports = {\n  findJsExtensionModules,\n};\n","// @flow\nimport { type EventsFunctionCodeWriter } from '..';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport slugs from 'slugs';\nconst os = optionalRequire('os');\nconst fs = optionalRequire('fs');\n\n/**\n * Create the EventsFunctionCodeWriter that writes generated code for events functions\n * to local files.\n */\nexport const makeLocalEventsFunctionCodeWriter = (): EventsFunctionCodeWriter => {\n  const outputDir = os.tmpdir() + '/GDGeneratedEventsFunctions';\n  fs.mkdir(outputDir, err => {\n    if (err && err.code !== 'EEXIST') {\n      console.error(\n        'Unable to create the directory where to output events functions generated code: ',\n        err\n      );\n      return;\n    }\n  });\n\n  const getPathFor = (codeNamespace: string) => {\n    return `${outputDir}/${slugs(codeNamespace)}.js`;\n  };\n\n  return {\n    getIncludeFileFor: (codeNamespace: string) => getPathFor(codeNamespace),\n    writeFunctionCode: (\n      functionCodeNamespace: string,\n      code: string\n    ): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        const filepath = getPathFor(functionCodeNamespace);\n        fs.writeFile(filepath, code, err => {\n          if (err) return reject(err);\n\n          resolve();\n        });\n      });\n    },\n    writeBehaviorCode: (\n      behaviorCodeNamespace: string,\n      code: string\n    ): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        const filepath = getPathFor(behaviorCodeNamespace);\n        fs.writeFile(filepath, code, err => {\n          if (err) return reject(err);\n\n          resolve();\n        });\n      });\n    },\n  };\n};\n","// @flow\nimport { serializeToJSObject } from '../../Utils/Serializer';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst fs = optionalRequire('fs-extra');\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst writeJSONFile = (object: Object, filepath: string): Promise<void> => {\n  if (!fs) return Promise.reject(new Error('Filesystem is not supported.'));\n\n  try {\n    const content = JSON.stringify(object, null, 2);\n    return fs.ensureDir(path.dirname(filepath)).then(\n      () =>\n        new Promise((resolve, reject) => {\n          fs.writeFile(filepath, content, (err: ?Error) => {\n            if (err) {\n              return reject(err);\n            }\n\n            return resolve();\n          });\n        })\n    );\n  } catch (stringifyException) {\n    return Promise.reject(stringifyException);\n  }\n};\n\nexport default class LocalEventsFunctionsExtensionWriter {\n  static chooseEventsFunctionExtensionFile = (): Promise<?string> => {\n    return new Promise((resolve, reject) => {\n      if (!dialog) return reject('Not supported');\n\n      const browserWindow = electron.remote.getCurrentWindow();\n      dialog.showSaveDialog(\n        browserWindow,\n        {\n          title: 'Export an extension of the project',\n          filters: [\n            {\n              name: 'GDevelop 5 \"events based\" extension',\n              extensions: ['json'],\n            },\n          ],\n          defaultPath: 'Extension.json',\n        },\n        path => {\n          if (!path) return resolve(null);\n\n          return resolve(path);\n        }\n      );\n    });\n  };\n\n  static writeEventsFunctionsExtension = (\n    extension: gdEventsFunctionsExtension,\n    filepath: string\n  ): Promise<void> => {\n    const serializedObject = serializeToJSObject(extension);\n    return writeJSONFile(serializedObject, filepath).catch(err => {\n      console.error('Unable to write the events function extension:', err);\n      throw err;\n    });\n  };\n}\n","// @flow\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst fs = optionalRequire('fs');\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst readJSONFile = (filepath: string): Promise<Object> => {\n  if (!fs) return Promise.reject('Filesystem is not supported.');\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(filepath, { encoding: 'utf8' }, (err, data) => {\n      if (err) return reject(err);\n\n      try {\n        const dataObject = JSON.parse(data);\n        return resolve(dataObject);\n      } catch (ex) {\n        return reject(filepath + ' is a corrupted/malformed file.');\n      }\n    });\n  });\n};\n\nexport default class LocalEventsFunctionsExtensionOpener {\n  static chooseEventsFunctionExtensionFile = (): Promise<?string> => {\n    return new Promise((resolve, reject) => {\n      if (!dialog) return reject('Not supported');\n\n      const browserWindow = electron.remote.getCurrentWindow();\n      dialog.showOpenDialog(\n        browserWindow,\n        {\n          title: 'Import an extension in the project',\n          properties: ['openFile'],\n          message: 'Choose an extension file to import (.json file)',\n          filters: [\n            {\n              name: 'GDevelop 5 \"events based\" extension',\n              extensions: ['json'],\n            },\n          ],\n        },\n        paths => {\n          if (!paths || !paths.length) return resolve(null);\n\n          return resolve(paths[0]);\n        }\n      );\n    });\n  };\n\n  static readEventsFunctionExtensionFile = (\n    filepath: string\n  ): Promise<Object> => {\n    return readJSONFile(filepath);\n  };\n}\n","import optionalRequire from '../../Utils/OptionalRequire.js';\nvar fs = optionalRequire('fs-extra');\nvar path = optionalRequire('path');\nvar os = optionalRequire('os');\nconst gd = global.gd;\n\nexport default {\n  mkDir: function(path) {\n    try {\n      fs.mkdirsSync(path);\n    } catch (e) {\n      console.log('mkDir(' + path + ') failed: ' + e);\n      return false;\n    }\n    return true;\n  },\n  dirExists: function(path) {\n    return fs.existsSync(path);\n  },\n  clearDir: function(path) {\n    var files = [];\n    var that = this;\n    if (fs.existsSync(path)) {\n      files = fs.readdirSync(path);\n      files.forEach(function(file) {\n        var curPath = path + '/' + file;\n        if (fs.lstatSync(curPath).isDirectory()) {\n          // recurse\n          that.clearDir(curPath);\n        } else {\n          // delete file\n          fs.unlinkSync(curPath);\n        }\n      });\n    }\n  },\n  getTempDir: function() {\n    return os.tmpdir();\n  },\n  fileNameFrom: function(fullpath) {\n    if (this._isExternalURL(fullpath)) return fullpath;\n\n    fullpath = this._translateURL(fullpath);\n    return path.basename(fullpath);\n  },\n  dirNameFrom: function(fullpath) {\n    if (this._isExternalURL(fullpath)) return '';\n\n    fullpath = this._translateURL(fullpath);\n    return path.dirname(fullpath);\n  },\n  makeAbsolute: function(filename, baseDirectory) {\n    if (this._isExternalURL(filename)) return filename;\n\n    filename = this._translateURL(filename);\n    if (!this.isAbsolute(baseDirectory))\n      baseDirectory = path.resolve(baseDirectory);\n\n    return path.resolve(baseDirectory, path.normalize(filename));\n  },\n  makeRelative: function(filename, baseDirectory) {\n    if (this._isExternalURL(filename)) return filename;\n\n    filename = this._translateURL(filename);\n    return path.relative(baseDirectory, path.normalize(filename));\n  },\n  isAbsolute: function(fullpath) {\n    if (this._isExternalURL(fullpath)) return true;\n\n    if (fullpath.length === 0) return true;\n    fullpath = this._translateURL(fullpath);\n    return (\n      (fullpath.length > 0 && fullpath.charAt(0) === '/') ||\n      (fullpath.length > 1 && fullpath.charAt(1) === ':')\n    );\n  },\n  copyFile: function(source, dest) {\n    //URL are not copied.\n    if (this._isExternalURL(source)) return true;\n\n    source = this._translateURL(source);\n    try {\n      if (source !== dest) fs.copySync(source, dest);\n    } catch (e) {\n      console.log('copyFile(' + source + ', ' + dest + ') failed: ' + e);\n      return false;\n    }\n    return true;\n  },\n  writeToFile: function(file, contents) {\n    try {\n      fs.outputFileSync(file, contents);\n    } catch (e) {\n      console.log('writeToFile(' + file + ', ...) failed: ' + e);\n      return false;\n    }\n    return true;\n  },\n  readFile: function(file) {\n    try {\n      var contents = fs.readFileSync(file);\n      return contents.toString();\n    } catch (e) {\n      console.log('readFile(' + file + ') failed: ' + e);\n      return '';\n    }\n  },\n  readDir: function(path, ext) {\n    ext = ext.toUpperCase();\n    var output = new gd.VectorString();\n    try {\n      var files = [];\n      if (fs.existsSync(path)) {\n        files = fs.readdirSync(path);\n        files.forEach(function(file) {\n          if (\n            ext.length === 0 ||\n            file.toUpperCase().indexOf(ext, file.length - ext.length) !== -1\n          ) {\n            output.push_back(path + '/' + file);\n          }\n        });\n      }\n    } catch (e) {\n      console.log('readDir(' + path + ',' + ext + ') failed: ' + e);\n    }\n\n    return output;\n  },\n  fileExists: function(filename) {\n    filename = this._translateURL(filename);\n    try {\n      const stat = fs.statSync(filename);\n      return stat.isFile();\n    } catch (e) {\n      return false;\n    }\n  },\n  _isExternalURL: function(filename) {\n    return filename.substr(0, 4) === 'http' || filename.substr(0, 4) === 'ftp';\n  },\n  /**\n   * Return the filename associated to the URL on the server, relative to the games directory.\n   * (i.e: Transform g/mydirectory/myfile.png to mydirectory/myfile.png).\n   */\n  _translateURL: function(filename) {\n    if (filename.substr(0, 2) === 'g/' || filename.substr(0, 2) === 'g\\\\')\n      filename = filename.substr(2);\n\n    return filename;\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport React, { PureComponent } from 'react';\nimport TextField from '../TextField';\nimport FlatButton from '../FlatButton';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'baseline',\n  },\n  button: {\n    marginLeft: 10,\n  },\n  textField: {\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  type: 'export' | 'create-game',\n  value: string,\n  onChange: string => void,\n  defaultPath?: string,\n  fullWidth?: boolean,\n  floatingLabelText?: string,\n|};\n\ntype TitleAndMessage = {|\n  title: ?string,\n  message: ?string,\n|};\n\nexport default class LocalFolderPicker extends PureComponent<Props, {||}> {\n  _onChooseFolder = ({ title, message }: TitleAndMessage) => {\n    if (!dialog || !electron) return;\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showOpenDialog(\n      browserWindow,\n      {\n        title,\n        properties: ['openDirectory', 'createDirectory'],\n        message,\n        defaultPath: this.props.defaultPath,\n      },\n      paths => {\n        if (!paths || !paths.length) return;\n\n        this.props.onChange(paths[0]);\n      }\n    );\n  };\n\n  _getTitleAndMessage = (i18n: I18nType): TitleAndMessage => {\n    const { type } = this.props;\n    if (type === 'export') {\n      return {\n        title: i18n._(t`Choose an export folder`),\n        message: i18n._(t`Choose where to export the game`),\n      };\n    } else if (type === 'create-game') {\n      return {\n        title: i18n._(t`Choose a folder for the new game`),\n        message: i18n._(t`Choose where to create the game`),\n      };\n    }\n\n    return {\n      title: undefined,\n      message: undefined,\n    };\n  };\n\n  render() {\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <div\n            style={{\n              ...styles.container,\n              width: this.props.fullWidth ? '100%' : undefined,\n            }}\n          >\n            <TextField\n              style={styles.textField}\n              floatingLabelText={this.props.floatingLabelText}\n              floatingLabelFixed\n              type=\"text\"\n              hintText={t`Click to choose`}\n              value={this.props.value}\n              onChange={(event, value) => this.props.onChange(value)}\n            />\n            <FlatButton\n              label={<Trans>Choose folder</Trans>}\n              style={styles.button}\n              onClick={() =>\n                this._onChooseFolder(this._getTitleAndMessage(i18n))\n              }\n            />\n          </div>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\n\nimport optionalRequire from './OptionalRequire.js';\nconst fs = optionalRequire('fs');\nconst archiver = optionalRequire('archiver');\n\n// TODO: Move in a Archiver folder?\n/**\n * Archive the given folder to a file. Only available when running on Electron runtime.\n */\nexport const archiveLocalFolder = ({\n  path,\n  outputFilename,\n}: {|\n  path: string,\n  outputFilename: string,\n|}): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    if (!fs || !archiver) return reject(new Error('Archiver unavailable'));\n\n    const output = fs.createWriteStream(outputFilename);\n    const archive = archiver('zip', {\n      zlib: { level: 9 }, // Sets the compression level.\n    });\n\n    output.on('close', () => {\n      console.log(\n        `Archive written at ${outputFilename}, ${archive.pointer()} total bytes.`\n      );\n      resolve(outputFilename);\n    });\n\n    archive.on('error', err => {\n      reject(err);\n    });\n\n    archive.pipe(output);\n\n    archive.directory(path, false);\n\n    archive.finalize();\n  });\n};\n","// @flow\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport { type FileMetadata } from '../index';\nimport { unsplit } from '../../Utils/ObjectSplitter.js';\nconst fs = optionalRequire('fs');\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst readJSONFile = (filepath: string): Promise<Object> => {\n  if (!fs) return Promise.reject('Filesystem is not supported.');\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(filepath, { encoding: 'utf8' }, (err, data) => {\n      if (err) return reject(err);\n\n      try {\n        const dataObject = JSON.parse(data);\n        return resolve(dataObject);\n      } catch (ex) {\n        return reject(filepath + ' is a corrupted/malformed file.');\n      }\n    });\n  });\n};\n\nexport const onOpenWithPicker = (): Promise<?FileMetadata> => {\n  return new Promise((resolve, reject) => {\n    if (!dialog) return reject('Not supported');\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showOpenDialog(\n      browserWindow,\n      {\n        title: 'Open a project',\n        properties: ['openFile'],\n        message:\n          'If you want to open your GDevelop 4 project, be sure to save it as a .json file',\n        filters: [{ name: 'GDevelop 5 project', extensions: ['json'] }],\n      },\n      paths => {\n        if (!paths || !paths.length) return resolve(null);\n\n        return resolve({ fileIdentifier: paths[0] });\n      }\n    );\n  });\n};\n\nexport const onOpen = (\n  fileMetadata: FileMetadata\n): Promise<{|\n  content: Object,\n  fileMetadata: FileMetadata,\n|}> => {\n  const filePath = fileMetadata.fileIdentifier;\n  const projectPath = path.dirname(filePath);\n  return readJSONFile(filePath).then(object => {\n    return unsplit(object, {\n      getReferencePartialObject: referencePath => {\n        return readJSONFile(path.join(projectPath, referencePath) + '.json');\n      },\n      isReferenceMagicPropertyName: '__REFERENCE_TO_SPLIT_OBJECT',\n      // Limit unsplitting to depth 3 (which would allow properties of layouts/external layouts/external events\n      // to be un-splitted, but not the content of these properties), to avoid very slow processing\n      // of large game files.\n      maxUnsplitDepth: 3,\n    }).then(() => {\n      return { content: object, fileMetadata };\n    });\n  });\n};\n\nexport const hasAutoSave = (\n  fileMetadata: FileMetadata,\n  compareLastModified: boolean\n): Promise<boolean> => {\n  const filePath = fileMetadata.fileIdentifier;\n  const autoSavePath = filePath + '.autosave';\n  if (fs.existsSync(autoSavePath)) {\n    if (!compareLastModified) {\n      return Promise.resolve(true);\n    }\n    try {\n      const autoSavedTime = fs.statSync(autoSavePath).mtime.getTime();\n      const saveTime = fs.statSync(filePath).mtime.getTime();\n      if (autoSavedTime > saveTime) {\n        return Promise.resolve(true);\n      }\n    } catch (err) {\n      console.error('Unable to compare *.autosave to project', err);\n      return Promise.resolve(false);\n    }\n    return Promise.resolve(false);\n  }\n  return Promise.resolve(false);\n};\n\nexport const onGetAutoSave = (fileMetadata: FileMetadata) => {\n  return Promise.resolve({\n    ...fileMetadata,\n    fileIdentifier: fileMetadata.fileIdentifier + '.autosave',\n  });\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type StorageProvider } from '../index';\nimport {\n  onOpenWithPicker,\n  onOpen,\n  hasAutoSave,\n  onGetAutoSave,\n} from './LocalProjectOpener';\nimport {\n  onSaveProject,\n  onSaveProjectAs,\n  onAutoSaveProject,\n} from './LocalProjectWriter';\nimport {\n  type AppArguments,\n  POSITIONAL_ARGUMENTS_KEY,\n} from '../../Utils/Window';\nimport { type MessageDescriptor } from '../../Utils/i18n/MessageDescriptor.flow';\n\n/**\n * Use the Electron APIs to provide access to the native\n * file system (with native save/open dialogs).\n */\nexport default ({\n  internalName: 'LocalFile',\n  name: t`Local file system`,\n  getFileMetadataFromAppArguments: (appArguments: AppArguments) => {\n    if (!appArguments[POSITIONAL_ARGUMENTS_KEY]) return null;\n    if (!appArguments[POSITIONAL_ARGUMENTS_KEY].length) return null;\n\n    return {\n      fileIdentifier: appArguments[POSITIONAL_ARGUMENTS_KEY][0],\n    };\n  },\n  createOperations: () => ({\n    onOpenWithPicker,\n    onOpen,\n    hasAutoSave,\n    onSaveProject,\n    onSaveProjectAs,\n    onAutoSaveProject,\n    onGetAutoSave,\n    getOpenErrorMessage: (error: Error): MessageDescriptor => {\n      return t`Check that the file exists, that this file is a proper game created with GDevelop and that you have the authorizations to open it.`;\n    },\n  }),\n}: StorageProvider);\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport React, { Component } from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport LocalFolderPicker from '../UI/LocalFolderPicker';\nimport Text from '../UI/Text';\nimport { sendNewGameCreated } from '../Utils/Analytics/EventSender';\nimport { Column, Line } from '../UI/Grid';\nimport { findExamples } from './LocalExamplesFinder';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { findEmptyPath } from './LocalPathFinder';\nimport ExamplesList from './ExamplesList';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nimport { type StorageProvider, type FileMetadata } from '../ProjectsStorage';\nimport LocalFileStorageProvider from '../ProjectsStorage/LocalFileStorageProvider';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nvar fs = optionalRequire('fs-extra');\n\ntype Props = {|\n  onOpen: (\n    storageProvider: StorageProvider,\n    fileMetadata: FileMetadata\n  ) => void,\n  onExamplesLoaded: () => void,\n|};\n\ntype State = {|\n  outputPath: string,\n  exampleNames: ?Array<string>,\n|};\n\nexport const showGameFileCreationError = (\n  i18n: I18nType,\n  outputPath: string,\n  error: Error\n) => {\n  showWarningBox(\n    i18n._(\n      t`Unable to create the game in the specified folder. Check that you have permissions to write in this folder: ${outputPath} or choose another folder.`\n    ),\n    error\n  );\n};\n\nexport default class LocalExamples extends Component<Props, State> {\n  state = {\n    outputPath: findEmptyPath(\n      path && app\n        ? path.join(app.getPath('documents'), 'GDevelop projects')\n        : ''\n    ),\n    exampleNames: null,\n  };\n\n  componentDidMount() {\n    findExamples(examplesPath => {\n      fs.readdir(examplesPath, (error, exampleNames) => {\n        if (error) {\n          console.error('Unable to read examples:', error);\n          return;\n        }\n\n        this.setState(\n          {\n            exampleNames: exampleNames.filter(name => name !== '.DS_Store'),\n          },\n          () => this.props.onExamplesLoaded()\n        );\n      });\n    });\n  }\n\n  _handleChangePath = (outputPath: string) =>\n    this.setState({\n      outputPath,\n    });\n\n  createFromExample = (i18n: I18nType, exampleName: string) => {\n    const { outputPath } = this.state;\n    if (!fs || !outputPath) return;\n\n    findExamples(examplesPath => {\n      try {\n        fs.mkdirsSync(outputPath);\n        fs.copySync(path.join(examplesPath, exampleName), outputPath);\n      } catch (error) {\n        showGameFileCreationError(i18n, outputPath, error);\n        return;\n      }\n\n      this.props.onOpen(LocalFileStorageProvider, {\n        fileIdentifier: path.join(outputPath, exampleName + '.json'),\n      });\n      sendNewGameCreated(exampleName);\n    });\n  };\n\n  render() {\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Column noMargin>\n            <Line>\n              <Column>\n                <Text>\n                  <Trans>Choose or search for an example to open:</Trans>\n                </Text>\n              </Column>\n            </Line>\n            <Line>\n              <ExamplesList\n                exampleNames={this.state.exampleNames}\n                onCreateFromExample={exampleName =>\n                  this.createFromExample(i18n, exampleName)\n                }\n              />\n            </Line>\n            <Divider />\n            <Line expand>\n              <Column expand>\n                <LocalFolderPicker\n                  fullWidth\n                  value={this.state.outputPath}\n                  onChange={this._handleChangePath}\n                  type=\"create-game\"\n                />\n              </Column>\n            </Line>\n          </Column>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\n\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst app = electron ? electron.remote.app : null;\nconst fs = optionalRequire('fs');\nconst process = optionalRequire('process');\n\nconst tryPath = (\n  path: string,\n  onExists: string => void,\n  onNoAccess: Function\n) =>\n  fs.access(path, fs.constants.R_OK, err => {\n    if (!err) onExists(path);\n    else onNoAccess();\n  });\n\nexport const findExamples = (cb: (?string) => void) => {\n  if (!process || !fs) return '';\n\n  const appPath = app ? app.getAppPath() : process.cwd();\n\n  // First try to find examples in app resources folder\n  tryPath(path.join(appPath, '..', 'examples'), cb, () => {\n    tryPath(\n      path.join(appPath, '..', '..', 'app', 'resources', 'examples'),\n      cb,\n      () => {\n        cb(null);\n      }\n    );\n  });\n};\n","import generateName from '../Utils/NewNameGenerator';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst path = optionalRequire('path');\nvar fs = optionalRequire('fs-extra');\n\nexport const findEmptyPath = basePath => {\n  if (!path) return basePath;\n\n  const folderName = generateName('My project', name => {\n    try {\n      fs.accessSync(path.join(basePath, name));\n    } catch (ex) {\n      return false;\n    }\n    return true;\n  });\n\n  return path.join(basePath, folderName);\n};\n","// @flow\n// TODO: This module could be published on npm if useful.\nimport newNameGenerator from './NewNameGenerator';\nimport slugs from 'slugs';\n\ntype PartialObjectDescription = {|\n  reference: string,\n  object: Object,\n|};\n\ntype Reference = {\n  referenceTo: string,\n};\n\ntype SplitConfiguration = {|\n  pathSeparator: string,\n  getArrayItemReferenceName: (\n    object: Object,\n    currentReference: string\n  ) => string,\n  shouldSplit: (path: string) => boolean,\n  isReferenceMagicPropertyName: string,\n|};\n\ntype UnsplitConfiguration = {|\n  isReferenceMagicPropertyName: string,\n  getReferencePartialObject: (referencePath: string) => Promise<Object>,\n  maxUnsplitDepth?: number,\n|};\n\n/**\n * Mutate the given object to split it into multiple partial objects.\n * Partial objects will be replaced by references.\n *\n * @param object The object to be split.\n * @param configuration Configuration to be used to split the object.\n */\nexport const split = (\n  object: Object,\n  {\n    pathSeparator,\n    getArrayItemReferenceName,\n    shouldSplit,\n    isReferenceMagicPropertyName,\n  }: SplitConfiguration\n): Array<PartialObjectDescription> => {\n  const partialObjects = [];\n  const createReference = (reference, object): Reference => {\n    partialObjects.push({\n      reference,\n      object,\n    });\n\n    return {\n      [isReferenceMagicPropertyName]: true,\n      referenceTo: reference,\n    };\n  };\n\n  const splitObject = (\n    currentObject: Object,\n    currentPath: string,\n    currentReference: string\n  ) => {\n    if (currentObject !== null && typeof currentObject === 'object') {\n      if (Array.isArray(currentObject)) {\n        for (let index in currentObject) {\n          const itemPath = currentPath + pathSeparator + '*';\n          if (shouldSplit(itemPath)) {\n            const partialObject = currentObject[index];\n            const name = getArrayItemReferenceName(\n              partialObject,\n              currentReference\n            );\n            const itemReference = currentReference + pathSeparator + name;\n\n            currentObject[index] = createReference(\n              itemReference,\n              partialObject\n            );\n\n            splitObject(partialObject, itemPath, itemReference);\n          } else {\n            const itemReference = currentReference + pathSeparator + index;\n\n            splitObject(currentObject[index], itemPath, itemReference);\n          }\n        }\n      } else {\n        for (let propertyName in currentObject) {\n          const propertyPath = currentPath + pathSeparator + propertyName;\n          const propertyReference =\n            currentReference + pathSeparator + propertyName;\n          if (shouldSplit(propertyPath)) {\n            const partialObject = currentObject[propertyName];\n\n            currentObject[propertyName] = createReference(\n              propertyReference,\n              partialObject\n            );\n\n            splitObject(partialObject, propertyPath, propertyReference);\n          } else {\n            splitObject(\n              currentObject[propertyName],\n              propertyPath,\n              propertyReference\n            );\n          }\n        }\n      }\n    }\n  };\n\n  splitObject(object, '', '');\n  return partialObjects;\n};\n\n/**\n * Mutate the given object to recompose it from partial objects.\n * References to partial objects will be fetched as needed.\n *\n * @param object The object to be unsplit.\n * @param configuration Configuration to be used to unsplit the object.\n */\nexport const unsplit = (\n  object: Object,\n  {\n    isReferenceMagicPropertyName,\n    getReferencePartialObject,\n    maxUnsplitDepth,\n  }: UnsplitConfiguration\n): Promise<void> => {\n  const isReference = (object: Object): ?Reference => {\n    if (object[isReferenceMagicPropertyName] === true) {\n      return object;\n    }\n\n    return null;\n  };\n\n  const unsplitObject = (\n    currentObject: Object,\n    depth: number\n  ): Promise<void> => {\n    if (maxUnsplitDepth !== undefined && depth >= maxUnsplitDepth) {\n      return Promise.resolve();\n    }\n\n    if (currentObject !== null && typeof currentObject === 'object') {\n      const keys = Object.keys(currentObject);\n      if (keys) {\n        return Promise.all(\n          keys.map(indexOrPropertyName => {\n            const reference = isReference(currentObject[indexOrPropertyName]);\n            if (reference) {\n              return getReferencePartialObject(reference.referenceTo).then(\n                partialObject => {\n                  currentObject[indexOrPropertyName] = partialObject;\n\n                  return unsplitObject(\n                    currentObject[indexOrPropertyName],\n                    depth + 1\n                  );\n                }\n              );\n            }\n\n            return unsplitObject(currentObject[indexOrPropertyName], depth + 1);\n          })\n        ).then(() => {});\n      }\n    }\n\n    return Promise.resolve();\n  };\n\n  return unsplitObject(object, 0);\n};\n\n/**\n * A helper that can be used to split according to a list of hardcoded paths\n */\nexport const splitPaths = (paths: Set<string>) => {\n  return (path: string) => paths.has(path);\n};\n\n/**\n * A helper that can be used to get the name of items in array using an hardcoded property name.\n */\nexport const getNameFromProperty = (propertyName: string) => {\n  return (object: Object): string => {\n    const property = object[propertyName];\n    if (typeof property !== 'string') {\n      throw new Error(`Property ${propertyName} is not a string`);\n    }\n\n    return property;\n  };\n};\n\n/**\n * A helper that can be used to get the name of items in array using an hardcoded property name.\n */\nexport const getSlugifiedUniqueNameFromProperty = (propertyName: string) => {\n  const existingNamesForReference = {};\n\n  return (object: Object, currentReference: string): string => {\n    const property = object[propertyName];\n    if (typeof property !== 'string') {\n      throw new Error(`Property ${propertyName} is not a string`);\n    }\n\n    existingNamesForReference[currentReference] =\n      existingNamesForReference[currentReference] || {};\n    const newName = newNameGenerator(\n      slugs(property),\n      name => !!existingNamesForReference[currentReference][name]\n    );\n    existingNamesForReference[currentReference][newName] = true;\n    return newName;\n  };\n};\n"],"sourceRoot":""}