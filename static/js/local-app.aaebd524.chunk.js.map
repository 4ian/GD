{"version":3,"sources":["ExternalEditor/index.js","ExternalEditor/Bridge.js","ProjectCreation/LocalStarters.js","ResourcesList/LocalResourceSources.js","ResourcesList/LocalResourceExternalEditors.js","ResourcesList/LocalPiskelBridge.js","ResourcesList/LocalJfxrBridge.js","ResourcesList/LocalYarnBridge.js","ProjectsStorage/LocalProjectWriter.js","ProjectsStorage/LocalProjectOpener.js","Export/LocalExporters/LocalPreviewLauncher/index.js","Export/LocalExporters/LocalPreviewLauncher/LocalNetworkPreviewDialog.js","Export/LocalExporters/LocalPreviewLauncher/LocalIpFinder.js","Export/LocalExporters/index.js","Export/LocalExporters/LocalS3Export.js","Export/LocalExporters/LocalOnlineCordovaExport/index.js","Export/LocalExporters/LocalCordovaExport.js","Export/LocalExporters/LocalCocos2dExport.js","Export/LocalExporters/LocalOnlineElectronExport/index.js","Export/LocalExporters/LocalFacebookInstantGamesExport/index.js","UI/LocalFilePicker/index.js","Export/LocalExporters/LocalFacebookInstantGamesExport/Progress.js","Export/LocalExporters/LocalElectronExport.js","MainFrame/ElectronMainMenu.js","JsExtensionsLoader/LocalJsExtensionsLoader.js","JsExtensionsLoader/LocalJsExtensionsFinder.js","EventsFunctionsExtensionsLoader/CodeWriters/LocalEventsFunctionCodeWriter.js","EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionWriter.js","EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionOpener.js","LocalApp.js","Export/LocalExporters/LocalFileSystem.js","UI/LocalFolderPicker/index.js","Utils/Archiver.js","ProjectCreation/LocalExamples.js","ProjectCreation/LocalExamplesFinder.js","ProjectCreation/LocalPathFinder.js","Utils/ObjectSplitter.js","Export/LocalExporters/LocalExport.js","Profile/LimitDisplayer.js","Export/Builds/BuildStepsProgress.js"],"names":["gd","global","ExternalEditor","props","_this","Object","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","editorOpened","lastShowCommandDate","sendingUpdate","editor","_serializedObject","_hideIfNotJustShown","Date","now","console","info","Window","hide","sendUpdate","log","state","loading","warn","elements","getSerializedElements","scope","hasOwnProperty","bridge","send","error","editObject","object","getName","requestUpdate","arguments","length","undefined","command","_onUpdateReceived","payload","setState","setTimeout","delete","t1","performance","Serializer","fromJSObject","t2","loadFromSerializedProject","openLayout","editedElementName","openEventsEditor","openExternalLayout","concat","Bridge","isSupported","onReceive","isIntegrated","setBounds","x","y","width","height","show","forceHide","onConnected","onBlur","onFocus","onClose","connectTo","serverPort","_this2","React","cloneElement","children","ref","onEditObject","integratedEditor","Component","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0___default","n","_Utils_TimeFunction_js__WEBPACK_IMPORTED_MODULE_1__","electron","optionalRequire","Buffer","remote","require","net","client","connected","_onReceiveCb","prototype","port","that","Socket","connect","_onConnected","data","nullCharacterBuffer","from","on","dataBuffer","startPos","nextNullCharacterPos","indexOf","slice","_receive","json","JSON","stringify","write","dataObject","timeFunction","parse","ex","time","cb","path","app","fs","LocalStarters","outputPath","findEmptyPath","join","getPath","_handleChangePath","i18n","exampleName","findExamples","examplesPath","mkdirsSync","copySync","showGameFileCreationError","onOpen","sendNewGameCreated","project","ProjectHelper","createNewGDJSProject","setProjectFile","onCreate","_this3","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_lingui_react__WEBPACK_IMPORTED_MODULE_5__","_ref","_UI_Grid__WEBPACK_IMPORTED_MODULE_12__","noMargin","_UI_Text__WEBPACK_IMPORTED_MODULE_10__","id","expand","_UI_List__WEBPACK_IMPORTED_MODULE_13__","leftIcon","_UI_ListIcon__WEBPACK_IMPORTED_MODULE_17__","iconSize","src","primaryText","secondaryText","secondaryTextLines","onClick","createFromExample","createEmptyGame","alignItems","justifyContent","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_8__","label","onShowExamples","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_7__","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_9__","fullWidth","value","onChange","type","dialog","__webpack_exports__","name","displayName","kind","component","_temp","_Component","LocalAudioFileOpener","_getPrototypeOf2","_len","args","Array","_key","apply","chooseResources","multiSelections","options","title","_","extensions","selectLocalResourcePath","then","resources","map","resourcePath","audioResource","AudioResource","projectPath","dirname","getProjectFile","setFile","relative","setName","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","_temp2","_Component2","LocalFileOpener","_getPrototypeOf3","_len2","_key2","imageResource","ImageResource","_temp3","_Component3","LocalFontFileOpener","_getPrototypeOf4","_len3","_key3","fontResource","FontResource","_temp4","_Component4","LocalVideoFileOpener","_getPrototypeOf5","_this4","_len4","_key4","videoResource","VideoResource","_temp5","_Component5","LocalJsonFileOpener","_getPrototypeOf6","_this5","_len5","_key5","jsonResource","JsonResource","Promise","resolve","reject","properties","push","browserWindow","getCurrentWindow","showOpenDialog","filters","defaultPath","paths","filter","isPathInProjectFolder","confirm","copyAllToProjectFolder","_LocalPiskelBridge__WEBPACK_IMPORTED_MODULE_0__","_LocalJfxrBridge__WEBPACK_IMPORTED_MODULE_1__","_LocalYarnBridge__WEBPACK_IMPORTED_MODULE_2__","_Utils_Analytics_EventSender__WEBPACK_IMPORTED_MODULE_3__","editors","edit","sendExternalEditorOpened","openPiskel","openJfxr","openYarn","ipcRenderer","resourceNames","resourcesLoader","singleFrame","onChangesSaved","extraOptions","resourceName","originalIndex","getLocalResourceFullPath","externalEditorData","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","removeAllListeners","event","outputResources","newAnimationName","metadata","pskl","resourcesManager","getResourcesManager","forEach","resource","createOrUpdateResource","getResource","setMetadata","d","_ResourceUtils_js__WEBPACK_IMPORTED_MODULE_1__","newFilePath","jfxr","writeJSONFile","filePath","Error","content","ensureDir","writeFile","err","stringifyException","writeProjectFiles","serializedProjectObject","serializeToJSObject","isFolderProject","partialObjects","split","pathSeparator","getArrayItemReferenceName","getSlugifiedUniqueNameFromProperty","shouldSplit","splitPaths","Set","isReferenceMagicPropertyName","all","partialObject","reference","catch","LocalProjectWriter","saveProject","saveProjectAs","fileSystem","assignIn","AbstractFileSystemJS","localFileSystem","showSaveDialog","ProjectResourcesCopier","copyAllResourcesTo","autoSaveProject","autoSavePath","readJSONFile","filepath","readFile","encoding","LocalProjectOpener","chooseProjectFile","message","readProjectFile","unsplit","getReferencePartialObject","referencePath","maxUnsplitDepth","shouldOpenAutosave","compareLastModified","existsSync","statSync","mtime","getTime","BrowserWindow","LocalPreviewLauncher","canDoNetworkPreview","networkPreviewDialogOpen","networkPreviewHost","networkPreviewPort","networkPreviewError","previewGamePath","previewBrowserWindowConfig","_subscriptionChecker","_openPreviewBrowserWindow","loadURL","_openPreviewWindow","gamePath","getMainWindowDefaultWidth","getMainWindowDefaultHeight","useContentSize","backgroundColor","networkPreview","serverParams","_checkSubscription","ipAddresses","findLocalIp","root","_prepareExporter","findGDJS","gdjsRoot","outputDir","getTempDir","exporter","Exporter","launchLayoutPreview","layout","exportLayoutForPixiPreview","launchExternalLayoutPreview","externalLayout","_ref2","exportExternalLayoutForPixiPreview","checkHasSubscription","_this$state","react__WEBPACK_IMPORTED_MODULE_6__","_Profile_SubscriptionChecker__WEBPACK_IMPORTED_MODULE_14__","subscriptionChecker","onChangeSubscription","mode","_LocalNetworkPreviewDialog__WEBPACK_IMPORTED_MODULE_11__","open","url","onExport","onRunPreviewLocally","LocalNetworkDialog","_this$props","_UI_Dialog__WEBPACK_IMPORTED_MODULE_7__","actions","_UI_FlatButton__WEBPACK_IMPORTED_MODULE_8__","primary","secondaryActions","modal","onRequestClose","_UI_Grid__WEBPACK_IMPORTED_MODULE_11__","_UI_PlaceholderLoader__WEBPACK_IMPORTED_MODULE_12__","_UI_TextField__WEBPACK_IMPORTED_MODULE_9__","firstLocalIp","find","ipAddress","getLocalExporters","react__WEBPACK_IMPORTED_MODULE_0__","_LocalExport__WEBPACK_IMPORTED_MODULE_1__","_LocalS3Export__WEBPACK_IMPORTED_MODULE_2__","_LocalOnlineCordovaExport__WEBPACK_IMPORTED_MODULE_3__","_LocalCordovaExport__WEBPACK_IMPORTED_MODULE_4__","_LocalCocos2dExport__WEBPACK_IMPORTED_MODULE_5__","_LocalOnlineElectronExport__WEBPACK_IMPORTED_MODULE_6__","_LocalFacebookInstantGamesExport__WEBPACK_IMPORTED_MODULE_7__","_LocalElectronExport__WEBPACK_IMPORTED_MODULE_8__","_material_ui_icons_PhoneIphone__WEBPACK_IMPORTED_MODULE_9__","_material_ui_icons_PhoneIphone__WEBPACK_IMPORTED_MODULE_9___default","_material_ui_icons_LaptopMac__WEBPACK_IMPORTED_MODULE_10__","_material_ui_icons_LaptopMac__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_icons_Folder__WEBPACK_IMPORTED_MODULE_11__","_material_ui_icons_Folder__WEBPACK_IMPORTED_MODULE_11___default","_UI_CustomSvgIcons_Facebook__WEBPACK_IMPORTED_MODULE_12__","_UI_CustomSvgIcons_Cordova__WEBPACK_IMPORTED_MODULE_13__","_UI_CustomSvgIcons_Chrome__WEBPACK_IMPORTED_MODULE_14__","renderIcon","helpPage","description","ExportComponent","LocalOnlineCordovaExport","LocalFacebookInstantGamesExport","LocalS3Export","LocalExport","advanced","LocalCordovaExport","LocalOnlineElectronExport","LocalElectronExport","LocalCocos2dExport","experimental","os","shell","_uploadToS3","localDir","uploadProgress","uploadMax","prefix","uploadDone","_deploy","sleep","axios","GDevelopHostingApi","deployEndpoint","method","params","response","deployDone","deployedPrefix","launchExport","sendExportLaunched","exportStarted","exportDone","tmpdir","makeTimestampedId","prepareExporter","exportOptions","MapStringBoolean","exportWholePixiProject","uploadPrefix","deployPrefix","gamesHost","showErrorBox","openURL","openExternal","renderUrl","_UI_Grid__WEBPACK_IMPORTED_MODULE_13__","_UI_TextField__WEBPACK_IMPORTED_MODULE_17__","style","flex","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_9__","_UI_Text__WEBPACK_IMPORTED_MODULE_19__","_material_ui_core_LinearProgress__WEBPACK_IMPORTED_MODULE_14__","variant","disabled","exportStep","build","errored","buildsWatcher","BuildsWatcher","set","launchCompression","archiveOutputDir","archiveFolder","outputFilename","launchUpload","outputFile","launchBuild","userProfile","uploadBucketKey","getAuthorizationHeader","profile","buildCordovaAndroid","uid","startBuildWatch","start","builds","onBuildUpdated","launchWholeExport","t","str","displayProjectErrorsBox","getErrors","handleError","rawError","_download","openExternalURL","getUrl","stop","getBuildLimit","limits","react__WEBPACK_IMPORTED_MODULE_5___default","_UI_Grid__WEBPACK_IMPORTED_MODULE_10__","_UI_Text__WEBPACK_IMPORTED_MODULE_22__","authenticated","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_7__","limit","limitReached","canLaunchBuild","_Profile_LimitDisplayer__WEBPACK_IMPORTED_MODULE_18__","subscription","_Profile_CreateProfile__WEBPACK_IMPORTED_MODULE_17__","onLogin","_Builds_BuildStepsProgress__WEBPACK_IMPORTED_MODULE_21__","onDownload","mkDir","clearDir","exportFinishedDialogOpen","setLastCompilationDirectory","openExportFolder","openItem","openPhoneGapBuild","getLastCompilationDirectory","_UI_Text__WEBPACK_IMPORTED_MODULE_21__","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_15__","_UI_HelpButton__WEBPACK_IMPORTED_MODULE_16__","helpPagePath","debugMode","exportWholeCocos2dProject","_UI_Text__WEBPACK_IMPORTED_MODULE_20__","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_17__","_UI_Toggle__WEBPACK_IMPORTED_MODULE_10__","onToggle","e","check","toggled","labelPosition","_UI_HelpButton__WEBPACK_IMPORTED_MODULE_13__","targets","buildElectron","_setTarget","targetName","enable","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_7___default","_UI_Text__WEBPACK_IMPORTED_MODULE_25__","_UI_Checkbox__WEBPACK_IMPORTED_MODULE_10__","_lingui_react__WEBPACK_IMPORTED_MODULE_6__","checked","onCheck","_Profile_LimitDisplayer__WEBPACK_IMPORTED_MODULE_21__","_Profile_CreateProfile__WEBPACK_IMPORTED_MODULE_20__","_Builds_BuildStepsProgress__WEBPACK_IMPORTED_MODULE_24__","showSeeAllMyBuildsExplanation","archiveOutputFilename","openLearnMore","getHelpLink","_UI_Grid__WEBPACK_IMPORTED_MODULE_9__","_UI_LocalFilePicker__WEBPACK_IMPORTED_MODULE_10__","_Progress__WEBPACK_IMPORTED_MODULE_14__","onOpenExportFolder","onOpenLearnMore","styles","container","position","display","button","marginLeft","textField","LocalFilePicker","onChooseFolder","filename","_TextField__WEBPACK_IMPORTED_MODULE_8__","floatingLabelText","floatingLabelFixed","hintText","_FlatButton__WEBPACK_IMPORTED_MODULE_9__","PureComponent","react__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Stepper__WEBPACK_IMPORTED_MODULE_2__","activeStep","orientation","_material_ui_core_Step__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_StepLabel__WEBPACK_IMPORTED_MODULE_4__","_lingui_react__WEBPACK_IMPORTED_MODULE_0__","_material_ui_core_StepContent__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_6__","size","_UI_Text__WEBPACK_IMPORTED_MODULE_9__","ElectronMainMenu","_editor","chooseProject","save","saveAs","askToCloseProject","openExportDialog","openCreateDialog","openProjectManager","openStartPage","openDebugger","openAboutDialog","openPreferences","openLanguage","openProfile","status","setUpdateStatus","language","_language","_buildAndSendMenuTemplate","fileTemplate","submenu","accelerator","onClickSendEvent","isMacLike","editTemplate","role","viewTemplate","windowTemplate","helpTemplate","onClickOpenLink","template","unshift","loadExtension","findJsExtensionModules","module","exports","objectsEditorService","objectsRenderingService","filterExamples","loadAllExtensions","extensionModulePaths","extensionModulePath","extensionModule","rethrowException","result","registerEditorConfigurations","registerInstanceRenderers","JsPlatform","get","extensionsRoot","readdir","extensionFolders","filteredExtensionFolders","folder","extensionFolder","extensionFolderPath","jsExtensionModulePath","stat","stats","isFile","modulePaths","modulePath","makeLocalEventsFunctionCodeWriter","slugs__WEBPACK_IMPORTED_MODULE_1__","slugs__WEBPACK_IMPORTED_MODULE_1___default","mkdir","code","getPathFor","codeNamespace","slugs","getIncludeFileFor","writeFunctionCode","functionCodeNamespace","writeBehaviorCode","behaviorCodeNamespace","LocalEventsFunctionsExtensionWriter","chooseEventsFunctionExtensionFile","writeEventsFunctionsExtension","extension","LocalEventsFunctionsExtensionOpener","readEventsFunctionExtensionFile","r","create","react__WEBPACK_IMPORTED_MODULE_0___default","_MainFrame__WEBPACK_IMPORTED_MODULE_1__","_Utils_Window__WEBPACK_IMPORTED_MODULE_2__","_Export_ExportDialog__WEBPACK_IMPORTED_MODULE_3__","_ProjectCreation_CreateProjectDialog__WEBPACK_IMPORTED_MODULE_4__","_ExternalEditor__WEBPACK_IMPORTED_MODULE_7__","_ProjectCreation_LocalExamples__WEBPACK_IMPORTED_MODULE_8__","_ProjectCreation_LocalStarters__WEBPACK_IMPORTED_MODULE_9__","_ResourcesList_LocalResourceSources__WEBPACK_IMPORTED_MODULE_10__","_ResourcesList_LocalResourceExternalEditors__WEBPACK_IMPORTED_MODULE_11__","_ProjectsStorage_LocalProjectWriter__WEBPACK_IMPORTED_MODULE_12__","_ProjectsStorage_LocalProjectOpener__WEBPACK_IMPORTED_MODULE_13__","_Export_LocalExporters_LocalPreviewLauncher__WEBPACK_IMPORTED_MODULE_14__","_Export_LocalExporters__WEBPACK_IMPORTED_MODULE_15__","_MainFrame_ElectronMainMenu__WEBPACK_IMPORTED_MODULE_16__","_JsExtensionsLoader_LocalJsExtensionsLoader__WEBPACK_IMPORTED_MODULE_17__","_JsExtensionsLoader_LocalJsExtensionsLoader__WEBPACK_IMPORTED_MODULE_17___default","_EventsFunctionsExtensionsLoader_CodeWriters_LocalEventsFunctionCodeWriter__WEBPACK_IMPORTED_MODULE_18__","_ObjectEditor_ObjectsEditorService__WEBPACK_IMPORTED_MODULE_19__","_ObjectsRendering_ObjectsRenderingService__WEBPACK_IMPORTED_MODULE_20__","_MainFrame_Providers__WEBPACK_IMPORTED_MODULE_21__","_EventsFunctionsExtensionsLoader_Storage_LocalEventsFunctionsExtensionWriter__WEBPACK_IMPORTED_MODULE_22__","_EventsFunctionsExtensionsLoader_Storage_LocalEventsFunctionsExtensionOpener__WEBPACK_IMPORTED_MODULE_23__","authentification","setUpContextMenu","appArguments","getArguments","disableCheckForUpdates","eventsFunctionCodeWriter","eventsFunctionsExtensionWriter","eventsFunctionsExtensionOpener","eventsFunctionsExtensionsState","resourceSources","localResourceSources","onReadFromPathOrURL","resourceExternalEditors","localResourceExternalEditors","initialPathsOrURLsToOpen","previewLauncher","renderExportDialog","assign","exporters","createDialog","examplesComponent","LocalExamples","startersComponent","onSaveProject","onSaveProjectAs","onAutoSaveProject","onChooseProject","extensionsLoader","makeExtensionsLoader","ObjectsEditorService","ObjectsRenderingService","isDev","dirExists","readdirSync","file","curPath","lstatSync","isDirectory","unlinkSync","fileNameFrom","fullpath","_isExternalURL","_translateURL","basename","dirNameFrom","makeAbsolute","baseDirectory","isAbsolute","normalize","makeRelative","charAt","copyFile","source","dest","copyDir","writeToFile","contents","outputFileSync","readFileSync","toString","readDir","ext","toUpperCase","output","VectorString","push_back","fileExists","substr","LocalFolderPicker","_onChooseFolder","_getTitleAndMessage","_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0__","_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0___default","archiver","createWriteStream","archive","zlib","level","pointer","pipe","directory","finalize","showWarningBox","values","exampleNames","onExamplesLoaded","_ExamplesList__WEBPACK_IMPORTED_MODULE_15__","onCreateFromExample","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_8__","process","tryPath","onExists","onNoAccess","access","constants","R_OK","appPath","getAppPath","cwd","_Utils_NewNameGenerator__WEBPACK_IMPORTED_MODULE_0__","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_1__","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_1___default","basePath","folderName","generateName","accessSync","createReference","_Users_florian_Projects_F_GD_newIDE_app_node_modules_react_scripts_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","splitObject","currentObject","currentPath","currentReference","isArray","index","itemPath","itemReference","propertyName","propertyPath","propertyReference","_ref3","unsplitObject","depth","keys","indexOrPropertyName","referenceTo","has","existingNamesForReference","property","newName","newNameGenerator","_UI_AlertMessage__WEBPACK_IMPORTED_MODULE_20__","_UI_PlaceholderLoader__WEBPACK_IMPORTED_MODULE_4__","hasSubscription","planId","noSubscription","_UI_Grid__WEBPACK_IMPORTED_MODULE_3__","_UI_Text__WEBPACK_IMPORTED_MODULE_5__","0","Math","max","current","1","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_2__","stepper","linearProgress","_UI_Grid__WEBPACK_IMPORTED_MODULE_8__","_UI_Text__WEBPACK_IMPORTED_MODULE_11__","_material_ui_core_LinearProgress__WEBPACK_IMPORTED_MODULE_7__","_BuildProgress__WEBPACK_IMPORTED_MODULE_9__","_UI_EmptyMessage__WEBPACK_IMPORTED_MODULE_10__"],"mappings":"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","file":"static/js/local-app.aaebd524.chunk.js","sourcesContent":["// @flow\n\nimport Bridge from './Bridge.js';\nimport React, { Component } from 'react';\nimport Window from '../Utils/Window.js';\nconst gd = global.gd;\n\ntype State = {\n  loading: boolean,\n};\n\ntype Props = {\n  serverPort: number,\n  isIntegrated: boolean,\n  editor: string,\n  editedElementName: string,\n  children: React$Element<any>,\n};\n\nclass ExternalEditor extends Component<Props, State> {\n  bridge: Bridge;\n  editorOpened: boolean = false;\n  lastShowCommandDate: number = 0;\n  sendingUpdate: boolean = false;\n  editor: any = null;\n  _serializedObject: any = null;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.bridge = new Bridge();\n    this.state = {\n      loading: false,\n    };\n\n    if (this.bridge.isSupported()) {\n      console.log('Connection to an external editor...');\n\n      this.bridge.onReceive((command, payload, scope) => {\n        if (command === 'update') {\n          this._onUpdateReceived(payload, scope);\n        } else if (command === 'setBounds') {\n          if (this.props.isIntegrated) {\n            Window.setBounds(\n              payload.x,\n              payload.y,\n              payload.width,\n              payload.height\n            );\n          }\n        } else if (command === 'show') {\n          this.lastShowCommandDate = Date.now();\n          Window.show();\n        } else if (command === 'hide') {\n          if (this.props.isIntegrated) {\n            Window.hide(payload && payload.forceHide);\n          }\n        }\n      });\n      this.bridge.onConnected(() => {\n        this.requestUpdate('', true);\n      });\n      Window.onBlur(() => {\n        if (this.props.isIntegrated) this._hideIfNotJustShown();\n        this.sendUpdate();\n      });\n      Window.onFocus(() => {\n        this.requestUpdate();\n      });\n      Window.onClose(() => {\n        this.sendUpdate();\n      });\n\n      this.bridge.connectTo(this.props.serverPort);\n    } else {\n      console.warn('Connection to an external editor is not supported');\n    }\n  }\n\n  _hideIfNotJustShown = () => {\n    // Sometime, we'll receive the blur event AFTER\n    // the external editor containing this editor\n    // received the activate event from the system (wxActivateEvent in the case of\n    // wxWidgets).\n    // So we'll receive a show command THEN hide, which is not what we want\n    // (we want to hide and then show again the editor if needed).\n    if (Date.now() - this.lastShowCommandDate < 100) {\n      console.info(\n        'The editor is not hidden because it receive a `show` command less ' +\n          'than 100ms ago.'\n      );\n      return;\n    }\n\n    Window.hide();\n  };\n\n  sendUpdate = () => {\n    console.log('Sending update to server editor');\n    if (this.state.loading) {\n      console.warn('Already loading an update, abort send');\n      return;\n    }\n    if (this.sendingUpdate) {\n      console.warn('Already sending an update, abort send');\n      return;\n    }\n    if (!this.editor) {\n      console.error(\n        'No children editor to use to get the updated edited element'\n      );\n      return;\n    }\n\n    this.sendingUpdate = true;\n    const elements = this.editor.getSerializedElements();\n    for (const scope in elements) {\n      if (elements.hasOwnProperty(scope)) {\n        this.bridge.send('update', elements[scope], scope);\n      }\n    }\n    this.sendingUpdate = false;\n\n    console.log('Update send done');\n  };\n\n  editObject = (object: gdObject) => {\n    this.sendUpdate();\n    this.bridge.send('editObject', object.getName());\n  };\n\n  /**\n   * Request an update to the server. Note that if forcedUpdate is set to false,\n   * the server may not send back an update (for example if nothing changed).\n   */\n  requestUpdate = (scope: string = '', forcedUpdate: boolean = false) => {\n    const command = forcedUpdate ? 'requestForcedUpdate' : 'requestUpdate';\n    this.bridge.send(command, undefined, scope);\n  };\n\n  _onUpdateReceived = (payload: any, scope: string) => {\n    console.log('Received project update from server');\n    if (scope !== '') {\n      console.warn(`Not implemented: received ${scope} update from server`);\n      return;\n    }\n\n    this.setState(\n      {\n        loading: true,\n      },\n      () =>\n        setTimeout(() => {\n          // Transform the payload into a gd.SerializerElement\n          // Note that gd.Serializer.fromJSObject returns a new gd.SerializerElement object at every call\n          if (this._serializedObject) this._serializedObject.delete();\n\n          var t1 = performance.now();\n          this._serializedObject = gd.Serializer.fromJSObject(payload);\n          var t2 = performance.now();\n          console.log(\n            'Call to gd.Serializer.fromJSObject took ' +\n              (t2 - t1) +\n              ' milliseconds.'\n          );\n\n          this.editor.loadFromSerializedProject(this._serializedObject, () => {\n            this._serializedObject.delete();\n            this._serializedObject = null;\n\n            if (!this.editorOpened) {\n              this.editorOpened = true;\n\n              if (this.props.editor === 'scene-editor') {\n                this.editor.openLayout(this.props.editedElementName, {\n                  openEventsEditor: false,\n                });\n              }\n              if (this.props.editor === 'external-layout-editor') {\n                this.editor.openExternalLayout(this.props.editedElementName);\n              }\n            }\n\n            this.setState({\n              loading: false,\n            });\n          });\n        })\n    );\n  };\n\n  render() {\n    return React.cloneElement(this.props.children, {\n      loading: this.state.loading,\n      ref: editor => (this.editor = editor),\n      requestUpdate: () => this.requestUpdate('', true),\n      onEditObject: this.editObject,\n      integratedEditor: true,\n    });\n  }\n}\n\nexport default ExternalEditor;\n","import optionalRequire from '../Utils/OptionalRequire.js';\nimport { timeFunction } from '../Utils/TimeFunction.js';\nconst electron = optionalRequire('electron');\nconst Buffer = electron ? electron.remote.require('buffer').Buffer : null;\n\nfunction Bridge() {\n  this.net = optionalRequire('net');\n\n  this.client = null;\n  this.connected = false;\n  this._onReceiveCb = null;\n}\n\nBridge.prototype.isSupported = function() {\n  return !!this.net;\n};\n\nBridge.prototype.connectTo = function(port) {\n  if (!this.net) return;\n\n  var that = this;\n  this.client = new this.net.Socket();\n  this.client.connect(\n    port,\n    'localhost',\n    function() {\n      console.log('Connection made on port', port);\n      that.connected = true;\n      if (that._onConnected) that._onConnected();\n    }\n  );\n\n  let data = '';\n  const nullCharacterBuffer = Buffer.from([0]);\n  this.client.on('data', function(dataBuffer) {\n    let startPos = 0;\n    let nextNullCharacterPos = dataBuffer.indexOf(nullCharacterBuffer);\n    while (startPos < dataBuffer.length) {\n      if (nextNullCharacterPos === -1) {\n        data += dataBuffer.slice(startPos);\n        startPos = dataBuffer.length;\n      } else {\n        data += dataBuffer.slice(startPos, nextNullCharacterPos);\n        that._receive(data);\n\n        data = '';\n        startPos = nextNullCharacterPos + 1;\n        nextNullCharacterPos = dataBuffer.indexOf(\n          nullCharacterBuffer,\n          startPos\n        );\n      }\n    }\n  });\n\n  this.client.on('close', function() {\n    that.connected = false;\n  });\n};\n\nBridge.prototype.send = function(command, payload, scope = '') {\n  if (!this.connected) return false;\n\n  const json = JSON.stringify({\n    command,\n    scope,\n    payload,\n  });\n  this.client.write(json + '\\0');\n\n  return true;\n};\n\nBridge.prototype._receive = function(data) {\n  console.info('Received data');\n\n  // Parse the received JSON\n  let dataObject;\n  timeFunction(\n    () => {\n      try {\n        dataObject = JSON.parse(data);\n      } catch (ex) {\n        console.warn('Received invalid data (JSON parse failed)', ex);\n      }\n    },\n    time => console.info(`JSON parse took ${time}ms`)\n  );\n  if (!dataObject) return;\n\n  if (this._onReceiveCb) {\n    this._onReceiveCb(dataObject.command, dataObject.payload, dataObject.scope);\n  }\n};\n\nBridge.prototype.onReceive = function(cb) {\n  this._onReceiveCb = cb;\n};\n\nBridge.prototype.onConnected = function(cb) {\n  this._onConnected = cb;\n};\n\nexport default Bridge;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport React, { Component } from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport RaisedButton from '../UI/RaisedButton';\nimport LocalFolderPicker from '../UI/LocalFolderPicker';\nimport Text from '../UI/Text';\nimport { sendNewGameCreated } from '../Utils/Analytics/EventSender';\nimport { Column, Line } from '../UI/Grid';\nimport { List, ListItem } from '../UI/List';\nimport { findExamples } from './LocalExamplesFinder';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { findEmptyPath } from './LocalPathFinder';\nimport ListIcon from '../UI/ListIcon';\nimport { showGameFileCreationError } from './LocalExamples';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nvar fs = optionalRequire('fs-extra');\nconst gd = global.gd;\n\ntype Props = {|\n  onOpen: string => void,\n  onCreate: gdProject => void,\n  onShowExamples: () => void,\n|};\n\ntype State = {|\n  outputPath: string,\n|};\n\nexport default class LocalStarters extends Component<Props, State> {\n  state = {\n    outputPath: findEmptyPath(\n      path && app\n        ? path.join(app.getPath('documents'), 'GDevelop projects')\n        : ''\n    ),\n  };\n\n  _handleChangePath = (outputPath: string) =>\n    this.setState({\n      outputPath,\n    });\n\n  createFromExample(i18n: I18nType, exampleName: string) {\n    const { outputPath } = this.state;\n    if (!fs || !outputPath) return;\n\n    findExamples(examplesPath => {\n      try {\n        fs.mkdirsSync(outputPath);\n        fs.copySync(path.join(examplesPath, exampleName), outputPath);\n      } catch (error) {\n        showGameFileCreationError(i18n, outputPath, error);\n        return;\n      }\n\n      this.props.onOpen(path.join(outputPath, exampleName + '.json'));\n      sendNewGameCreated(exampleName);\n    });\n  }\n\n  createEmptyGame(i18n: I18nType) {\n    const { outputPath } = this.state;\n    if (!fs || !outputPath) return;\n\n    try {\n      fs.mkdirsSync(outputPath);\n    } catch (error) {\n      showGameFileCreationError(i18n, outputPath, error);\n      return;\n    }\n\n    const project = gd.ProjectHelper.createNewGDJSProject();\n    project.setProjectFile(path.join(outputPath, 'game.json'));\n    this.props.onCreate(project);\n    sendNewGameCreated('');\n  }\n\n  render() {\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Column noMargin>\n            <Line>\n              <Column>\n                <Text>\n                  <Trans>Choose a game to use as a starter:</Trans>\n                </Text>\n              </Column>\n            </Line>\n            <Line>\n              <Column expand noMargin>\n                <List>\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/platformer.png\"\n                      />\n                    }\n                    primaryText={<Trans>Platformer</Trans>}\n                    secondaryText={\n                      <Trans>\n                        A simple platform game, with coins to collect, moving\n                        platforms and enemies.\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() => this.createFromExample(i18n, 'platformer')}\n                  />\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/space-shooter.png\"\n                      />\n                    }\n                    primaryText={<Trans>8-bit Space Shooter</Trans>}\n                    secondaryText={\n                      <Trans>\n                        A beautiful, retro side-scrolling shooter where you must\n                        defeat incoming enemies with your mecha transforming\n                        spaceship. Huge boss included!\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() =>\n                      this.createFromExample(i18n, 'space-shooter')\n                    }\n                  />\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/isometric-game.png\"\n                      />\n                    }\n                    primaryText={<Trans>Isometric game</Trans>}\n                    secondaryText={\n                      <Trans>\n                        An example of an isometric game where you can explore a\n                        map with your character.\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() =>\n                      this.createFromExample(i18n, 'isometric-game')\n                    }\n                  />\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/downhill-bike-physics-demo.png\"\n                      />\n                    }\n                    primaryText=\"Downhill Bike Racing\"\n                    secondaryText={\n                      <Trans>\n                        An example of a 2D physics based driving game, where\n                        player have to reach the end as fast as possible.\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() =>\n                      this.createFromExample(i18n, 'downhill-bike-physics-demo')\n                    }\n                  />\n                  <ListItem\n                    leftIcon={\n                      <ListIcon\n                        iconSize={40}\n                        src=\"res/starters_icons/pairs.png\"\n                      />\n                    }\n                    primaryText=\"Pairs\"\n                    secondaryText={\n                      <Trans>\n                        Find all matching pairs of cards in this relaxing game.\n                        Use tweens to create smooth, natural animations with a\n                        few events.\n                      </Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() => this.createFromExample(i18n, 'pairs')}\n                  />\n                  <ListItem\n                    primaryText={<Trans>Empty game</Trans>}\n                    secondaryText={\n                      <Trans>Start a new game from scratch.</Trans>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() => this.createEmptyGame(i18n)}\n                  />\n                </List>\n                <Line alignItems=\"center\" justifyContent=\"center\">\n                  <RaisedButton\n                    label={<Trans>See examples</Trans>}\n                    onClick={() => this.props.onShowExamples()}\n                  />\n                </Line>\n              </Column>\n            </Line>\n            <Divider />\n            <Line expand>\n              <Column expand>\n                <LocalFolderPicker\n                  fullWidth\n                  value={this.state.outputPath}\n                  onChange={this._handleChangePath}\n                  type=\"create-game\"\n                />\n              </Column>\n            </Line>\n          </Column>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { type ResourceSourceComponentProps } from './ResourceSource.flow';\nimport { Component } from 'react';\nimport {\n  isPathInProjectFolder,\n  copyAllToProjectFolder,\n} from './ResourceUtils.js';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\nconst path = optionalRequire('path');\n\nconst gd = global.gd;\n\nexport default [\n  {\n    name: 'localAudioFileOpener',\n    displayName: 'Choose a new audio file',\n    kind: 'audio',\n    component: class LocalAudioFileOpener extends Component<ResourceSourceComponentProps> {\n      chooseResources = (\n        project: gdProject,\n        multiSelections: boolean = true\n      ): Promise<Array<any>> => {\n        const { i18n } = this.props;\n        const options = {\n          multiSelections,\n          title: i18n._(t`Choose an audio file`),\n          name: i18n._(t`Audio files`),\n          extensions: ['wav', 'mp3', 'ogg'],\n        };\n        return selectLocalResourcePath(i18n, project, options).then(\n          resources => {\n            return resources.map(resourcePath => {\n              const audioResource = new gd.AudioResource();\n              const projectPath = path.dirname(project.getProjectFile());\n              audioResource.setFile(path.relative(projectPath, resourcePath));\n              audioResource.setName(path.relative(projectPath, resourcePath));\n\n              return audioResource;\n            });\n          }\n        );\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localFileOpener',\n    displayName: 'Choose a new image',\n    kind: 'image',\n    component: class LocalFileOpener extends Component<ResourceSourceComponentProps> {\n      chooseResources = (\n        project: gdProject,\n        multiSelections: boolean = true\n      ): Promise<Array<any>> => {\n        const { i18n } = this.props;\n        const options = {\n          multiSelections,\n          title: i18n._(t`Choose an image`),\n          name: i18n._(t`Image files`),\n          extensions: ['png', 'jpg'],\n        };\n        return selectLocalResourcePath(i18n, project, options).then(\n          resources => {\n            return resources.map(resourcePath => {\n              const imageResource = new gd.ImageResource();\n              const projectPath = path.dirname(project.getProjectFile());\n              imageResource.setFile(path.relative(projectPath, resourcePath));\n              imageResource.setName(path.relative(projectPath, resourcePath));\n\n              return imageResource;\n            });\n          }\n        );\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localFontFileOpener',\n    displayName: 'Choose a new font file',\n    kind: 'font',\n    component: class LocalFontFileOpener extends Component<ResourceSourceComponentProps> {\n      chooseResources = (\n        project: gdProject,\n        multiSelections: boolean = true\n      ): Promise<Array<any>> => {\n        const { i18n } = this.props;\n        const options = {\n          multiSelections,\n          title: i18n._(t`Choose a font file`),\n          name: i18n._(t`Font files`),\n          extensions: ['ttf', 'otf'],\n        };\n        return selectLocalResourcePath(i18n, project, options).then(\n          resources => {\n            return resources.map(resourcePath => {\n              const fontResource = new gd.FontResource();\n              const projectPath = path.dirname(project.getProjectFile());\n              fontResource.setFile(path.relative(projectPath, resourcePath));\n              fontResource.setName(path.relative(projectPath, resourcePath));\n\n              return fontResource;\n            });\n          }\n        );\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localVideoFileOpener',\n    displayName: 'Choose a new video file',\n    kind: 'video',\n    component: class LocalVideoFileOpener extends Component<ResourceSourceComponentProps> {\n      chooseResources = (\n        project: gdProject,\n        multiSelections: boolean = true\n      ): Promise<Array<any>> => {\n        const { i18n } = this.props;\n        const options = {\n          multiSelections,\n          title: i18n._(t`Choose a video file`),\n          name: i18n._(t`Video files`),\n          extensions: ['mp4'],\n        };\n        return selectLocalResourcePath(i18n, project, options).then(\n          resources => {\n            return resources.map(resourcePath => {\n              const videoResource = new gd.VideoResource();\n              const projectPath = path.dirname(project.getProjectFile());\n              videoResource.setFile(path.relative(projectPath, resourcePath));\n              videoResource.setName(path.relative(projectPath, resourcePath));\n\n              return videoResource;\n            });\n          }\n        );\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localJsonFileOpener',\n    displayName: 'Choose a new json file',\n    kind: 'json',\n    component: class LocalJsonFileOpener extends Component<ResourceSourceComponentProps> {\n      chooseResources = (\n        project: gdProject,\n        multiSelections: boolean = true\n      ): Promise<Array<any>> => {\n        const { i18n } = this.props;\n        const options = {\n          multiSelections,\n          title: i18n._(t`Choose a json file`),\n          name: i18n._(t`JSON file`),\n          extensions: ['json'],\n        };\n        return selectLocalResourcePath(i18n, project, options).then(\n          resources => {\n            return resources.map(resourcePath => {\n              const jsonResource = new gd.JsonResource();\n              const projectPath = path.dirname(project.getProjectFile());\n              jsonResource.setFile(path.relative(projectPath, resourcePath));\n              jsonResource.setName(path.relative(projectPath, resourcePath));\n\n              return jsonResource;\n            });\n          }\n        );\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n];\n\nconst selectLocalResourcePath = (\n  i18n: I18nType,\n  project: gdProject,\n  options: {\n    multiSelections: boolean,\n    title: string,\n    name: string,\n    extensions: Array<string>,\n  }\n): Promise<Array<string>> => {\n  return new Promise((resolve, reject) => {\n    if (!dialog) return reject('Not supported');\n\n    const properties = ['openFile'];\n    if (options.multiSelections) properties.push('multiSelections');\n    const projectPath = path.dirname(project.getProjectFile());\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showOpenDialog(\n      browserWindow,\n      {\n        title: options.title,\n        properties,\n        filters: [{ name: options.name, extensions: options.extensions }],\n        defaultPath: projectPath,\n      },\n      paths => {\n        if (!paths) return resolve([]);\n\n        const outsideProjectFolderPaths = paths.filter(\n          path => !isPathInProjectFolder(project, path)\n        );\n\n        if (outsideProjectFolderPaths.length) {\n          // eslint-disable-next-line\n          const answer = confirm(\n            i18n._(\n              t`This/these file(s) are outside the project folder. Would you like to make a copy of them in your project folder first (recommended)?`\n            )\n          );\n\n          if (answer) {\n            return resolve(copyAllToProjectFolder(project, paths));\n          }\n        }\n\n        return resolve(paths);\n      }\n    );\n  });\n};\n","// @flow\nimport { openPiskel } from './LocalPiskelBridge';\nimport { openJfxr } from './LocalJfxrBridge';\nimport { openYarn } from './LocalYarnBridge';\nimport { type ResourceExternalEditor } from './ResourceExternalEditor.flow';\nimport { sendExternalEditorOpened } from '../Utils/Analytics/EventSender';\n\n/**\n * This is the list of editors that can be used to edit resources\n * on Electron runtime.\n */\nconst editors: Array<ResourceExternalEditor> = [\n  {\n    name: 'piskel-app',\n    displayName: 'Edit with Piskel',\n    kind: 'image',\n    edit: options => {\n      sendExternalEditorOpened('piskel');\n      return openPiskel(options);\n    },\n  },\n  {\n    name: 'Jfxr',\n    displayName: 'Create/Edit a Sound effect with Jfxr (*.wav)',\n    kind: 'audio',\n    edit: options => {\n      sendExternalEditorOpened('jfxr');\n      return openJfxr(options);\n    },\n  },\n  {\n    name: 'Yarn',\n    displayName: 'Create/Edit a Dialogue Tree with Yarn (*.json)',\n    kind: 'json',\n    edit: options => {\n      sendExternalEditorOpened('yarn');\n      return openYarn(options);\n    },\n  },\n];\n\nexport default editors;\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { type ExternalEditorOpenOptions } from './ResourceExternalEditor.flow';\nimport {\n  createOrUpdateResource,\n  getLocalResourceFullPath,\n} from './ResourceUtils.js';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\n/**\n * Open Piskel editor for the specified resources.\n * Take a list of resource names to be edited and will call the callback methods\n * (notably onChangesSaved with the name of the edited resources)\n */\nexport const openPiskel = ({\n  project,\n  resourcesLoader,\n  resourceNames,\n  singleFrame,\n  onChangesSaved,\n  extraOptions,\n}: ExternalEditorOpenOptions) => {\n  if (!electron || !ipcRenderer) return;\n\n  const resources = resourceNames.map((resourceName, originalIndex) => {\n    let resourcePath = getLocalResourceFullPath(project, resourceName);\n    return {\n      resourcePath,\n      resourceName,\n      originalIndex,\n    };\n  });\n\n  const projectPath = path.dirname(project.getProjectFile());\n  const externalEditorData = {\n    ...extraOptions,\n    resources,\n    singleFrame,\n    projectPath,\n  };\n\n  // Listen to events meaning that edition in Piskel is finished\n  ipcRenderer.removeAllListeners('piskel-changes-saved');\n  ipcRenderer.on(\n    'piskel-changes-saved',\n    (event, outputResources, newAnimationName, externalEditorData) => {\n      const metadata = externalEditorData.data\n        ? { pskl: externalEditorData }\n        : null;\n\n      const resourcesManager = project.getResourcesManager();\n      outputResources.forEach(resource => {\n        resource.name = path.relative(projectPath, resource.path); // Still needed for onChangesSaved()\n        createOrUpdateResource(project, new gd.ImageResource(), resource.name);\n      });\n\n      outputResources[0].metadata = metadata;\n      outputResources[0].newAnimationName = newAnimationName;\n      // in case this is for a single frame object, save the metadata in the Image object\n      if (externalEditorData.singleFrame) {\n        if (metadata) {\n          resourcesManager\n            .getResource(path.relative(projectPath, outputResources[0].path))\n            .setMetadata(JSON.stringify(metadata));\n        }\n        onChangesSaved(outputResources);\n      } else {\n        // In case there are multiple frames, pass back the metadata to the editor and let it store it at an appropriate place.\n        // (For example, for sprites, SpritesList.js will save it in the metadata of the gd.Direction).\n\n        onChangesSaved(outputResources);\n      }\n    }\n  );\n\n  // Issue the event to open piskel\n  ipcRenderer.send('piskel-open-then-load-animation', externalEditorData);\n};\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { type ExternalEditorOpenOptions } from './ResourceExternalEditor.flow';\nimport {\n  createOrUpdateResource,\n  getLocalResourceFullPath,\n} from './ResourceUtils.js';\n\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\n/**\n * Open JFXR to create wav resources.\n */\nexport const openJfxr = ({\n  project,\n  resourcesLoader,\n  resourceNames,\n  onChangesSaved,\n  resourcePath,\n  extraOptions,\n}: ExternalEditorOpenOptions) => {\n  if (!electron || !ipcRenderer) return;\n  const projectPath = path.dirname(project.getProjectFile());\n  const initialResourcePath = getLocalResourceFullPath(\n    project,\n    resourceNames[0]\n  );\n\n  const externalEditorData = {\n    resourcePath: initialResourcePath,\n    externalEditorData: extraOptions.externalEditorData,\n    projectPath,\n  };\n\n  ipcRenderer.removeAllListeners('jfxr-changes-saved');\n  ipcRenderer.on(\n    'jfxr-changes-saved',\n    (event, newFilePath, externalEditorData) => {\n      const name = path.relative(projectPath, newFilePath);\n      createOrUpdateResource(project, new gd.AudioResource(), name);\n\n      const metadata = {\n        jfxr: externalEditorData,\n      };\n      project\n        .getResourcesManager()\n        .getResource(name)\n        .setMetadata(JSON.stringify(metadata));\n      onChangesSaved([{ metadata, name }]);\n    }\n  );\n\n  ipcRenderer.send('jfxr-create-wav', externalEditorData);\n};\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { type ExternalEditorOpenOptions } from './ResourceExternalEditor.flow';\nimport {\n  createOrUpdateResource,\n  getLocalResourceFullPath,\n} from './ResourceUtils.js';\n\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\n/**\n * Open YARN to Create/Edit Json Dialogue Tree resources.\n */\nexport const openYarn = ({\n  project,\n  resourcesLoader,\n  resourceNames,\n  onChangesSaved,\n  resourcePath,\n  extraOptions,\n}: ExternalEditorOpenOptions) => {\n  if (!electron || !ipcRenderer) return;\n  const projectPath = path.dirname(project.getProjectFile());\n  const initialResourcePath = getLocalResourceFullPath(\n    project,\n    resourceNames[0]\n  );\n\n  const externalEditorData = {\n    resourcePath: initialResourcePath,\n    externalEditorData: extraOptions.externalEditorData,\n    projectPath,\n  };\n\n  ipcRenderer.removeAllListeners('yarn-changes-saved');\n  ipcRenderer.on('yarn-changes-saved', (event, newFilePath) => {\n    const name = path.relative(projectPath, newFilePath);\n    createOrUpdateResource(project, new gd.JsonResource(), name);\n    onChangesSaved([{ name }]);\n  });\n\n  ipcRenderer.send('yarn-create-json', externalEditorData);\n};\n","// @flow\nimport { serializeToJSObject } from '../Utils/Serializer';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport {\n  split,\n  splitPaths,\n  getSlugifiedUniqueNameFromProperty,\n} from '../Utils/ObjectSplitter';\nimport localFileSystem from '../Export/LocalExporters/LocalFileSystem';\nimport assignIn from 'lodash/assignIn';\n\nconst gd = global.gd;\n\nconst fs = optionalRequire('fs-extra');\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst writeJSONFile = (object: Object, filePath: string): Promise<void> => {\n  if (!fs) return Promise.reject(new Error('Filesystem is not supported.'));\n\n  try {\n    const content = JSON.stringify(object, null, 2);\n    return fs.ensureDir(path.dirname(filePath)).then(\n      () =>\n        new Promise((resolve, reject) => {\n          fs.writeFile(filePath, content, (err: ?Error) => {\n            if (err) {\n              return reject(err);\n            }\n\n            return resolve();\n          });\n        })\n    );\n  } catch (stringifyException) {\n    return Promise.reject(stringifyException);\n  }\n};\n\nconst writeProjectFiles = (\n  project: gdProject,\n  filePath: string,\n  projectPath: string\n): Promise<void> => {\n  const serializedProjectObject = serializeToJSObject(project);\n\n  if (project.isFolderProject()) {\n    const partialObjects = split(serializedProjectObject, {\n      pathSeparator: '/',\n      getArrayItemReferenceName: getSlugifiedUniqueNameFromProperty('name'),\n      shouldSplit: splitPaths(\n        new Set([\n          '/layouts/*',\n          '/externalLayouts/*',\n          '/externalEvents/*',\n          '/layouts/*',\n          '/eventsFunctionsExtensions/*',\n        ])\n      ),\n      isReferenceMagicPropertyName: '__REFERENCE_TO_SPLIT_OBJECT',\n    });\n\n    return Promise.all(\n      partialObjects.map(partialObject => {\n        return writeJSONFile(\n          partialObject.object,\n          path.join(projectPath, partialObject.reference) + '.json'\n        ).catch(err => {\n          console.error('Unable to write a partial file:', err);\n          throw err;\n        });\n      })\n    ).then(() => {\n      return writeJSONFile(serializedProjectObject, filePath).catch(err => {\n        console.error('Unable to write the split project:', err);\n        throw err;\n      });\n    });\n  } else {\n    return writeJSONFile(serializedProjectObject, filePath).catch(err => {\n      console.error('Unable to write the project:', err);\n      throw err;\n    });\n  }\n};\n\nexport default class LocalProjectWriter {\n  static saveProject = (project: gdProject): Promise<boolean> => {\n    const filePath = project.getProjectFile();\n    const projectPath = path.dirname(project.getProjectFile());\n    if (!filePath) {\n      return Promise.reject(\n        'Project file is empty, \"Save as\" should have been called?'\n      );\n    }\n\n    return writeProjectFiles(project, filePath, projectPath).then(() => {\n      return true; // Save was properly done\n    });\n  };\n\n  static saveProjectAs = (project: gdProject): Promise<boolean> => {\n    const defaultPath = project.getProjectFile();\n    const fileSystem = assignIn(new gd.AbstractFileSystemJS(), localFileSystem);\n    const browserWindow = electron.remote.getCurrentWindow();\n    const options = {\n      defaultPath,\n      filters: [{ name: 'GDevelop 5 project', extensions: ['json'] }],\n    };\n\n    if (!dialog) {\n      return Promise.reject('Unsupported');\n    }\n    const filePath = dialog.showSaveDialog(browserWindow, options);\n    if (!filePath) {\n      return Promise.resolve(false); // Nothing was saved.\n    }\n    const projectPath = path.dirname(filePath);\n\n    // TODO: Ideally, errors while copying resources should be reported.\n    gd.ProjectResourcesCopier.copyAllResourcesTo(\n      project,\n      fileSystem,\n      projectPath,\n      true, // Update the project with the new resource paths\n      false, // Don't move absolute files\n      true // Keep relative files folders structure.\n    );\n\n    // Update the project with the new file path (resources have already been updated)\n    project.setProjectFile(filePath);\n\n    return writeProjectFiles(project, filePath, projectPath).then(() => {\n      return true; // Save was properly done\n    });\n  };\n\n  static autoSaveProject = (project: gdProject) => {\n    const autoSavePath = project.getProjectFile() + '.autosave';\n    writeJSONFile(serializeToJSObject(project), autoSavePath).catch(err => {\n      console.error(`Unable to write ${autoSavePath}:`, err);\n      throw err;\n    });\n  };\n}\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { unsplit } from '../Utils/ObjectSplitter.js';\nconst fs = optionalRequire('fs');\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst readJSONFile = (filepath: string): Promise<Object> => {\n  if (!fs) return Promise.reject('Filesystem is not supported.');\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(filepath, { encoding: 'utf8' }, (err, data) => {\n      if (err) return reject(err);\n\n      try {\n        const dataObject = JSON.parse(data);\n        return resolve(dataObject);\n      } catch (ex) {\n        return reject(filepath + ' is a corrupted/malformed file.');\n      }\n    });\n  });\n};\n\nexport default class LocalProjectOpener {\n  static chooseProjectFile = (): Promise<?string> => {\n    return new Promise((resolve, reject) => {\n      if (!dialog) return reject('Not supported');\n\n      const browserWindow = electron.remote.getCurrentWindow();\n      dialog.showOpenDialog(\n        browserWindow,\n        {\n          title: 'Open a project',\n          properties: ['openFile'],\n          message:\n            'If you want to open your GDevelop 4 project, be sure to save it as a .json file',\n          filters: [{ name: 'GDevelop 5 project', extensions: ['json'] }],\n        },\n        paths => {\n          if (!paths || !paths.length) return resolve(null);\n\n          return resolve(paths[0]);\n        }\n      );\n    });\n  };\n\n  static readProjectFile = (filepath: string): Object => {\n    const projectPath = path.dirname(filepath);\n    return readJSONFile(filepath).then(object => {\n      return unsplit(object, {\n        getReferencePartialObject: referencePath => {\n          return readJSONFile(path.join(projectPath, referencePath) + '.json');\n        },\n        isReferenceMagicPropertyName: '__REFERENCE_TO_SPLIT_OBJECT',\n        // Limit unsplitting to depth 3 (which would allow properties of layouts/external layouts/external events\n        // to be un-splitted, but not the content of these properties), to avoid very slow processing\n        // of large game files.\n        maxUnsplitDepth: 3,\n      }).then(() => {\n        return object;\n      });\n    });\n  };\n\n  static shouldOpenAutosave = (\n    filePath: string,\n    autoSavePath: string,\n    compareLastModified: boolean\n  ): boolean => {\n    if (fs.existsSync(autoSavePath)) {\n      if (!compareLastModified) {\n        return true;\n      }\n      try {\n        const autoSavedTime = fs.statSync(autoSavePath).mtime.getTime();\n        const saveTime = fs.statSync(filePath).mtime.getTime();\n        if (autoSavedTime > saveTime) {\n          return true;\n        }\n      } catch (err) {\n        console.error('Unable to compare *.autosave to project', err);\n        return false;\n      }\n      return false;\n    }\n    return false;\n  };\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport localFileSystem from '../LocalFileSystem';\nimport optionalRequire from '../../../Utils/OptionalRequire';\nimport { timeFunction } from '../../../Utils/TimeFunction';\nimport { findGDJS } from '../LocalGDJSFinder';\nimport LocalNetworkPreviewDialog from './LocalNetworkPreviewDialog';\nimport assignIn from 'lodash/assignIn';\nimport { type PreviewOptions } from '../../PreviewLauncher.flow';\nimport { findLocalIp } from './LocalIpFinder';\nimport SubscriptionChecker from '../../../Profile/SubscriptionChecker';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst BrowserWindow = electron ? electron.remote.BrowserWindow : null;\nconst gd = global.gd;\n\ntype Props = {|\n  onExport?: () => void,\n  onChangeSubscription?: () => void,\n|};\n\ntype State = {\n  networkPreviewDialogOpen: boolean,\n  networkPreviewHost: ?string,\n  networkPreviewPort: ?number,\n  networkPreviewError: ?any,\n  previewGamePath: ?string,\n  previewBrowserWindowConfig: ?{\n    width: number,\n    height: number,\n    useContentSize: boolean,\n    title: string,\n    backgroundColor: string,\n  },\n};\n\nexport default class LocalPreviewLauncher extends React.Component<\n  Props,\n  State\n> {\n  canDoNetworkPreview = () => true;\n\n  state = {\n    networkPreviewDialogOpen: false,\n    networkPreviewHost: null,\n    networkPreviewPort: null,\n    networkPreviewError: null,\n    previewGamePath: null,\n    previewBrowserWindowConfig: null,\n  };\n  _subscriptionChecker: ?SubscriptionChecker = null;\n\n  _openPreviewBrowserWindow = () => {\n    if (\n      !BrowserWindow ||\n      !this.state.previewBrowserWindowConfig ||\n      !this.state.previewGamePath\n    )\n      return;\n\n    const win = new BrowserWindow(this.state.previewBrowserWindowConfig);\n    win.loadURL(`file://${this.state.previewGamePath}/index.html`);\n  };\n\n  _openPreviewWindow = (\n    project: gdProject,\n    gamePath: string,\n    options: PreviewOptions\n  ): void => {\n    this.setState(\n      {\n        previewBrowserWindowConfig: {\n          width: project.getMainWindowDefaultWidth(),\n          height: project.getMainWindowDefaultHeight(),\n          useContentSize: true,\n          title: `Preview of ${project.getName()}`,\n          backgroundColor: '#000000',\n        },\n        previewGamePath: gamePath,\n      },\n      () => {\n        if (!options.networkPreview) {\n          this._openPreviewBrowserWindow();\n        } else {\n          if (!ipcRenderer) return;\n\n          ipcRenderer.removeAllListeners('serve-folder-done');\n          ipcRenderer.removeAllListeners('local-network-ips');\n          ipcRenderer.on('serve-folder-done', (event, err, serverParams) => {\n            if (err) {\n              this.setState({\n                networkPreviewDialogOpen: true,\n                networkPreviewPort: null,\n                networkPreviewHost: null,\n                networkPreviewError: err,\n              });\n            } else {\n              this.setState({\n                networkPreviewDialogOpen: true,\n                networkPreviewPort: serverParams.port,\n              });\n            }\n\n            setTimeout(() => this._checkSubscription());\n          });\n          ipcRenderer.on('local-network-ips', (event, ipAddresses) => {\n            this.setState({\n              networkPreviewHost: findLocalIp(ipAddresses),\n            });\n          });\n          ipcRenderer.send('serve-folder', {\n            root: gamePath,\n          });\n          ipcRenderer.send('get-local-network-ips');\n        }\n      }\n    );\n  };\n\n  _prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          //TODO\n          console.error('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const outputDir = path.join(fileSystem.getTempDir(), 'preview');\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n        resolve({\n          outputDir,\n          exporter,\n        });\n      });\n    });\n  };\n\n  launchLayoutPreview = (\n    project: gdProject,\n    layout: gdLayout,\n    options: PreviewOptions\n  ): Promise<any> => {\n    if (!project || !layout) return Promise.reject();\n\n    return this._prepareExporter().then(({ outputDir, exporter }) => {\n      timeFunction(\n        () => {\n          exporter.exportLayoutForPixiPreview(project, layout, outputDir);\n          exporter.delete();\n          this._openPreviewWindow(project, outputDir, options);\n        },\n        time => console.info(`Preview took ${time}ms`)\n      );\n    });\n  };\n\n  launchExternalLayoutPreview = (\n    project: gdProject,\n    layout: gdLayout,\n    externalLayout: gdExternalLayout,\n    options: PreviewOptions\n  ): Promise<any> => {\n    if (!project || !externalLayout) return Promise.reject();\n\n    return this._prepareExporter().then(({ outputDir, exporter }) => {\n      timeFunction(\n        () => {\n          exporter.exportExternalLayoutForPixiPreview(\n            project,\n            layout,\n            externalLayout,\n            outputDir\n          );\n          exporter.delete();\n          this._openPreviewWindow(project, outputDir, options);\n        },\n        time => console.info(`Preview took ${time}ms`)\n      );\n    });\n  };\n\n  _checkSubscription = (options: PreviewOptions) => {\n    if (!this._subscriptionChecker) return true;\n\n    return this._subscriptionChecker.checkHasSubscription();\n  };\n\n  render() {\n    const {\n      networkPreviewDialogOpen,\n      networkPreviewHost,\n      networkPreviewPort,\n      networkPreviewError,\n    } = this.state;\n    return (\n      <React.Fragment>\n        <SubscriptionChecker\n          ref={subscriptionChecker =>\n            (this._subscriptionChecker = subscriptionChecker)\n          }\n          onChangeSubscription={() => {\n            this.setState({ networkPreviewDialogOpen: false });\n            if (this.props.onChangeSubscription)\n              this.props.onChangeSubscription();\n          }}\n          id=\"Preview over wifi\"\n          title={<Trans>Preview over wifi</Trans>}\n          mode=\"try\"\n        />\n        <LocalNetworkPreviewDialog\n          open={networkPreviewDialogOpen}\n          url={\n            networkPreviewHost && networkPreviewPort\n              ? `${networkPreviewHost}:${networkPreviewPort}`\n              : null\n          }\n          error={networkPreviewError}\n          onClose={() => this.setState({ networkPreviewDialogOpen: false })}\n          onExport={this.props.onExport}\n          onRunPreviewLocally={this._openPreviewBrowserWindow}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../../UI/Dialog';\nimport FlatButton from '../../../UI/FlatButton';\nimport TextField from '../../../UI/TextField';\nimport Text from '../../../UI/Text';\nimport { Line } from '../../../UI/Grid';\nimport PlaceholderLoader from '../../../UI/PlaceholderLoader';\n\ntype Props = {|\n  open: boolean,\n  url: ?string,\n  onClose: () => void,\n  onExport: ?() => void,\n  onRunPreviewLocally: () => void,\n  error: ?any,\n|};\n\nexport default class LocalNetworkDialog extends React.Component<Props, {}> {\n  render() {\n    const {\n      url,\n      open,\n      error,\n      onExport,\n      onClose,\n      onRunPreviewLocally,\n    } = this.props;\n    if (!open) return null;\n\n    return (\n      <Dialog\n        actions={[\n          <FlatButton\n            key=\"close\"\n            label={<Trans>Close</Trans>}\n            primary\n            onClick={onClose}\n          />,\n        ]}\n        secondaryActions={[\n          onExport && (\n            <FlatButton\n              key=\"export\"\n              label={<Trans>Export game</Trans>}\n              onClick={onExport}\n            />\n          ),\n          <FlatButton\n            key=\"run-preview-locally\"\n            label={<Trans>Run on this computer</Trans>}\n            onClick={onRunPreviewLocally}\n          />,\n        ]}\n        modal\n        open={open}\n        onRequestClose={onClose}\n      >\n        {error && (\n          <Line>\n            <Text>\n              <Trans>\n                Unable to start the server for the preview! Make sure that you\n                are authorized to run servers on this computer. Otherwise, use\n                classic preview to test your game.\n              </Trans>\n            </Text>\n          </Line>\n        )}\n        {!error && !url && <PlaceholderLoader />}\n        {!error && url && (\n          <div>\n            <Line>\n              <Text>\n                <Trans>\n                  Your preview is ready! On your mobile or tablet, open your\n                  browser and enter in the address bar:\n                </Trans>\n              </Text>\n            </Line>\n            <TextField value={url} fullWidth />\n            <Line>\n              <Text>\n                <Trans>\n                  Please note that your device should be connected on the same\n                  network as this computer.\n                </Trans>\n              </Text>\n            </Line>\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n","// @flow\n\nexport const findLocalIp = (ipAddresses: Array<string>): ?string => {\n  if (!ipAddresses.length) return null;\n\n  let firstLocalIp = ipAddresses.find(\n    ipAddress => ipAddress.indexOf('192.168') === 0\n  );\n  if (firstLocalIp) return firstLocalIp;\n\n  firstLocalIp = ipAddresses.find(ipAddress => ipAddress.indexOf('192') === 0);\n  if (firstLocalIp) return firstLocalIp;\n\n  return ipAddresses[0];\n};\n","import * as React from 'react';\nimport LocalExport from './LocalExport';\nimport LocalS3Export from './LocalS3Export';\nimport LocalOnlineCordovaExport from './LocalOnlineCordovaExport';\nimport LocalCordovaExport from './LocalCordovaExport';\nimport LocalCocos2dExport from './LocalCocos2dExport';\nimport LocalOnlineElectronExport from './LocalOnlineElectronExport';\nimport LocalFacebookInstantGamesExport from './LocalFacebookInstantGamesExport';\nimport LocalElectronExport from './LocalElectronExport';\nimport PhoneIphone from '@material-ui/icons/PhoneIphone';\nimport LaptopMac from '@material-ui/icons/LaptopMac';\nimport Folder from '@material-ui/icons/Folder';\nimport Facebook from '../../UI/CustomSvgIcons/Facebook';\nimport Cordova from '../../UI/CustomSvgIcons/Cordova';\nimport Chrome from '../../UI/CustomSvgIcons/Chrome';\n\nexport const getLocalExporters = () => [\n  {\n    name: 'Android (& iOS coming soon)',\n    renderIcon: props => <PhoneIphone {...props} />,\n    helpPage: '/publishing/android_and_ios',\n    description:\n      'Package your game for Android directly from GDevelop. iOS support is coming soon!',\n    key: 'localonlinecordovaexport',\n    ExportComponent: LocalOnlineCordovaExport,\n  },\n  {\n    name: 'Facebook Instant Games',\n    renderIcon: props => <Facebook {...props} />,\n    helpPage: '/publishing/publishing-to-facebook-instant-games',\n    description:\n      'Package your game as a Facebook Instant Games that can be played on Facebook Messenger.',\n    key: 'localfacebookinstantgames',\n    ExportComponent: LocalFacebookInstantGamesExport,\n  },\n  {\n    name: 'Web (upload online)',\n    renderIcon: props => <Chrome {...props} />,\n    helpPage: '/publishing/web',\n    description:\n      'Upload your game online directly from GDevelop and share the link to players. Play to your game using your browser on computers and mobile phones.',\n    key: 'locals3export',\n    ExportComponent: LocalS3Export,\n  },\n  {\n    name: 'Local folder',\n    renderIcon: props => <Folder {...props} />,\n    helpPage: '/publishing/html5_game_in_a_local_folder',\n    description:\n      'Build the game locally as a HTML5 game. You can then export it on website like Itch.io or Kongregate.',\n    key: 'localexport',\n    ExportComponent: LocalExport,\n    advanced: true,\n  },\n  {\n    name: 'iOS & Android (manual)',\n    renderIcon: props => <Cordova {...props} />,\n    helpPage: '/publishing/android_and_ios_with_cordova',\n    description:\n      'Build the game locally as a Cordova project, and export it manually to iOS or Android with Cordova developers tools.',\n    key: 'localcordovaexport',\n    ExportComponent: LocalCordovaExport,\n    advanced: true,\n  },\n  {\n    name: 'Windows/macOS/Linux (beta)',\n    renderIcon: props => <LaptopMac {...props} />,\n    helpPage: '/publishing/windows-macos-linux',\n    description:\n      'Package your game as an app for Windows, macOS or Linux directly from GDevelop.',\n    key: 'localonlineelectronexport',\n    ExportComponent: LocalOnlineElectronExport,\n  },\n  {\n    name: 'Windows/macOS/Linux (manual)',\n    renderIcon: props => <LaptopMac {...props} />,\n    helpPage: '/publishing/windows-macos-linux-with-electron',\n    description:\n      'Build the game locally and export it manually to Windows, macOS or Linux with third-party developer tools.',\n    key: 'localelectronexport',\n    ExportComponent: LocalElectronExport,\n    advanced: true,\n  },\n  {\n    name: 'Cocos2d-JS',\n    renderIcon: props => <PhoneIphone {...props} />,\n    helpPage: '/publishing/android_and_ios_with_cocos2d-js',\n    description:\n      'Export your game using Cocos2d-JS game engine. The game can be compiled for Android or iOS if you install Cocos2d-JS developer tools.',\n    key: 'localcocos2dexport',\n    ExportComponent: LocalCocos2dExport,\n    experimental: true,\n  },\n];\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { sleep } from 'wait-promise';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { sendExportLaunched } from '../../Utils/Analytics/EventSender';\nimport LocalExport from './LocalExport';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { GDevelopHostingApi } from '../../Utils/GDevelopServices/ApiConfigs';\nimport { makeTimestampedId } from '../../Utils/TimestampedId';\nimport TextField from '../../UI/TextField';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport Text from '../../UI/Text';\nconst os = optionalRequire('os');\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst shell = electron ? electron.shell : null;\nconst gd = global.gd;\n\nexport default class LocalS3Export extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      exportStarted: false,\n      exportDone: false,\n      uploadDone: false,\n      deployDone: false,\n    };\n  }\n\n  _uploadToS3 = localDir => {\n    ipcRenderer.removeAllListeners('s3-folder-upload-progress');\n    ipcRenderer.removeAllListeners('s3-folder-upload-done');\n\n    return new Promise((resolve, reject) => {\n      ipcRenderer.on(\n        's3-folder-upload-progress',\n        (event, uploadProgress, uploadMax) =>\n          this.setState({\n            uploadProgress,\n            uploadMax,\n          })\n      );\n      ipcRenderer.on('s3-folder-upload-done', (event, err, prefix) => {\n        if (err) return reject(err);\n\n        this.setState({\n          uploadDone: true,\n        });\n        resolve(prefix);\n      });\n      ipcRenderer.send('s3-folder-upload', localDir);\n    });\n  };\n\n  _deploy = prefix => {\n    return sleep(200)\n      .then(() =>\n        //TODO: Move this to a GDevelopServices/Hosting.js file\n        axios(GDevelopHostingApi.deployEndpoint, {\n          method: 'post',\n          params: {\n            name: prefix,\n          },\n        })\n      )\n      .then(response => {\n        this.setState({\n          deployDone: true,\n        });\n        return response.data.deployedPrefix;\n      });\n  };\n\n  launchExport = () => {\n    const { project } = this.props;\n    if (!project) return;\n\n    sendExportLaunched('s3');\n    this.setState({\n      exportStarted: true,\n      exportDone: false,\n      uploadDone: false,\n      deployDone: false,\n    });\n\n    const outputDir = os.tmpdir() + '/GDS3Export-' + makeTimestampedId();\n    LocalExport.prepareExporter()\n      .then(({ exporter }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        this.setState({\n          exportDone: true,\n        });\n      })\n      .then(() => this._uploadToS3(outputDir))\n      .then(uploadPrefix => this._deploy(uploadPrefix))\n      .then(deployPrefix => {\n        //TODO: Move this to a function getURL in a GDevelopServices/Hosting.js file.\n        this.setState({\n          url: `${GDevelopHostingApi.gamesHost}/${deployPrefix}`,\n        });\n      })\n      .catch(err => {\n        showErrorBox(\n          'An error occured while exporting the game online. Please check your internet connection and try again.',\n          err\n        );\n      })\n      .then(() =>\n        this.setState({\n          exportStarted: false,\n        })\n      );\n  };\n\n  openURL = () => {\n    shell.openExternal(this.state.url);\n  };\n\n  renderUrl = () => {\n    return (\n      <Line alignItems=\"baseline\">\n        <Trans>You game is available here:</Trans>\n        <Spacer />\n        <TextField value={this.state.url} style={{ flex: 1 }} />\n        <Spacer />\n        <RaisedButton\n          label={<Trans>Open</Trans>}\n          primary={true}\n          onClick={this.openURL}\n        />\n      </Line>\n    );\n  };\n\n  render() {\n    const { project } = this.props;\n    if (!project) return null;\n\n    const {\n      url,\n      exportStarted,\n      exportDone,\n      uploadProgress,\n      uploadMax,\n      uploadDone,\n      deployDone,\n    } = this.state;\n\n    return (\n      <Column noMargin>\n        <Line>\n          <Text>\n            <Trans>\n              This will export your game and upload it on GDevelop games\n              hosting. The game will be free and available for a few days.\n            </Trans>\n          </Text>\n        </Line>\n        <Line alignItems=\"center\">\n          <LinearProgress\n            style={{ flex: 1 }}\n            value={uploadMax > 0 ? (uploadProgress / uploadMax) * 100 : 0}\n            variant={\n              (exportStarted && !exportDone) || (uploadDone && !deployDone)\n                ? 'indeterminate'\n                : 'determinate'\n            }\n          />\n          <Spacer />\n          <RaisedButton\n            label={<Trans>Export and upload my game</Trans>}\n            primary={true}\n            onClick={this.launchExport}\n            disabled={exportStarted}\n          />\n        </Line>\n        {!!url && this.renderUrl()}\n      </Column>\n    );\n  }\n}\n","// @flow\n\nimport React, { Component } from 'react';\nimport assignIn from 'lodash/assignIn';\nimport RaisedButton from '../../../UI/RaisedButton';\nimport { sendExportLaunched } from '../../../Utils/Analytics/EventSender';\nimport {\n  type Build,\n  buildCordovaAndroid,\n  getUrl,\n} from '../../../Utils/GDevelopServices/Build';\nimport { type UserProfile } from '../../../Profile/UserProfileContext';\nimport { Column, Line } from '../../../UI/Grid';\nimport { showErrorBox } from '../../../UI/Messages/MessageBox';\nimport { findGDJS } from '../LocalGDJSFinder';\nimport localFileSystem from '../LocalFileSystem';\nimport { archiveFolder } from '../../../Utils/Archiver';\nimport optionalRequire from '../../../Utils/OptionalRequire.js';\nimport Window from '../../../Utils/Window';\nimport CreateProfile from '../../../Profile/CreateProfile';\nimport LimitDisplayer from '../../../Profile/LimitDisplayer';\nimport {\n  displayProjectErrorsBox,\n  getErrors,\n} from '../../../ProjectManager/ProjectErrorsChecker';\nimport { type Limit } from '../../../Utils/GDevelopServices/Usage';\nimport BuildsWatcher from '../../Builds/BuildsWatcher';\nimport BuildStepsProgress, {\n  type BuildStep,\n} from '../../Builds/BuildStepsProgress';\nimport Text from '../../../UI/Text';\nconst path = optionalRequire('path');\nconst os = optionalRequire('os');\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\ntype State = {\n  exportStep: BuildStep,\n  build: ?Build,\n  uploadProgress: number,\n  uploadMax: number,\n  errored: boolean,\n};\n\ntype Props = {\n  project: gdProject,\n  onChangeSubscription: Function,\n  userProfile: UserProfile,\n};\n\nclass LocalOnlineCordovaExport extends Component<Props, State> {\n  state = {\n    exportStep: '',\n    build: null,\n    uploadProgress: 0,\n    uploadMax: 0,\n    errored: false,\n  };\n  buildsWatcher = new BuildsWatcher();\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n        const outputDir = path.join(\n          fileSystem.getTempDir(),\n          'OnlineCordovaExport'\n        );\n        fileSystem.mkDir(outputDir);\n        fileSystem.clearDir(outputDir);\n\n        resolve({\n          exporter,\n          outputDir,\n        });\n      });\n    });\n  };\n\n  componentWillUnmount() {\n    this.buildsWatcher.stop();\n  }\n\n  launchExport = (): Promise<string> => {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return Promise.reject();\n\n    return LocalOnlineCordovaExport.prepareExporter()\n      .then(({ exporter, outputDir }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exportOptions.set('exportForCordova', true);\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        return outputDir;\n      })\n      .catch(err => {\n        showErrorBox(t('Unable to export the game'), err);\n        throw err;\n      });\n  };\n\n  launchCompression = (outputDir: string): Promise<string> => {\n    const archiveOutputDir = os.tmpdir();\n    return archiveFolder({\n      path: outputDir,\n      outputFilename: path.join(archiveOutputDir, 'game-archive.zip'),\n    });\n  };\n\n  launchUpload = (outputFile: string): Promise<string> => {\n    if (!ipcRenderer) return Promise.reject('No support for upload');\n\n    ipcRenderer.removeAllListeners('s3-file-upload-progress');\n    ipcRenderer.removeAllListeners('s3-file-upload-done');\n\n    return new Promise((resolve, reject) => {\n      ipcRenderer.on(\n        's3-file-upload-progress',\n        (event, uploadProgress, uploadMax) => {\n          this.setState({\n            uploadProgress,\n            uploadMax,\n          });\n        }\n      );\n      ipcRenderer.on('s3-file-upload-done', (event, err, prefix) => {\n        if (err) return reject(err);\n        resolve(prefix);\n      });\n      ipcRenderer.send('s3-file-upload', outputFile);\n    });\n  };\n\n  launchBuild = (\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildCordovaAndroid(\n      getAuthorizationHeader,\n      profile.uid,\n      uploadBucketKey\n    );\n  };\n\n  startBuildWatch = (userProfile: UserProfile) => {\n    if (!this.state.build) return;\n\n    this.buildsWatcher.start({\n      userProfile,\n      builds: [this.state.build],\n      onBuildUpdated: (build: Build) => this.setState({ build }),\n    });\n  };\n\n  launchWholeExport = (userProfile: UserProfile) => {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    sendExportLaunched('local-online-cordova');\n\n    if (!displayProjectErrorsBox(t, getErrors(t, project))) return;\n\n    const handleError = (message: string) => err => {\n      if (!this.state.errored) {\n        this.setState({\n          errored: true,\n        });\n        showErrorBox(message + (err.message ? `\\n${err.message}` : ''), {\n          exportStep: this.state.exportStep,\n          rawError: err,\n        });\n      }\n\n      throw err;\n    };\n\n    this.setState({\n      exportStep: 'export',\n      uploadProgress: 0,\n      uploadMax: 0,\n      errored: false,\n      build: null,\n    });\n    this.launchExport()\n      .then(outputDir => {\n        this.setState({\n          exportStep: 'compress',\n        });\n        return this.launchCompression(outputDir);\n      }, handleError(t('Error while exporting the game.')))\n      .then(outputFile => {\n        this.setState({\n          exportStep: 'upload',\n        });\n        return this.launchUpload(outputFile);\n      }, handleError(t('Error while compressing the game.')))\n      .then((uploadBucketKey: string) => {\n        this.setState({\n          exportStep: 'waiting-for-build',\n        });\n        return this.launchBuild(userProfile, uploadBucketKey);\n      }, handleError(t('Error while uploading the game. Check your internet connection or try again later.')))\n      .then(build => {\n        this.setState(\n          {\n            build,\n            exportStep: 'build',\n          },\n          () => {\n            this.startBuildWatch(userProfile);\n          }\n        );\n      }, handleError(t('Error while lauching the build of the game.')))\n      .catch(() => {\n        /* Error handled previously */\n      });\n  };\n\n  _download = (key: string) => {\n    if (!this.state.build || !this.state.build[key]) return;\n\n    Window.openExternalURL(getUrl(this.state.build[key]));\n  };\n\n  render() {\n    const {\n      exportStep,\n      build,\n      uploadMax,\n      uploadProgress,\n      errored,\n    } = this.state;\n    const t = str => str; //TODO;\n    const { project, userProfile } = this.props;\n    if (!project) return null;\n\n    const getBuildLimit = (userProfile: UserProfile): ?Limit =>\n      userProfile.limits ? userProfile.limits['cordova-build'] : null;\n    const canLaunchBuild = (userProfile: UserProfile) => {\n      if (!errored && exportStep !== '' && exportStep !== 'build') return false;\n\n      const limit: ?Limit = getBuildLimit(userProfile);\n      if (limit && limit.limitReached) return false;\n\n      return true;\n    };\n\n    return (\n      <Column noMargin>\n        <Line>\n          <Text>\n            {t(\n              'Packaging your game for Android will create an APK file that can be installed on Android phones, based on Cordova framework.'\n            )}\n          </Text>\n        </Line>\n        {userProfile.authenticated && (\n          <Line justifyContent=\"center\">\n            <RaisedButton\n              label={t('Package for Android')}\n              primary\n              onClick={() => this.launchWholeExport(userProfile)}\n              disabled={!canLaunchBuild(userProfile)}\n            />\n          </Line>\n        )}\n        {userProfile.authenticated && (\n          <LimitDisplayer\n            subscription={userProfile.subscription}\n            limit={getBuildLimit(userProfile)}\n            onChangeSubscription={this.props.onChangeSubscription}\n          />\n        )}\n        {!userProfile.authenticated && (\n          <CreateProfile\n            message={t(\n              'Create an account to build your game for Android in one-click:'\n            )}\n            onLogin={userProfile.onLogin}\n          />\n        )}\n        <Line expand>\n          <BuildStepsProgress\n            exportStep={exportStep}\n            build={build}\n            onDownload={this._download}\n            uploadMax={uploadMax}\n            uploadProgress={uploadProgress}\n            errored={errored}\n          />\n        </Line>\n      </Column>\n    );\n  }\n}\n\nexport default LocalOnlineCordovaExport;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { sendExportLaunched } from '../../Utils/Analytics/EventSender';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport { findGDJS } from './LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport HelpButton from '../../UI/HelpButton';\nimport {\n  displayProjectErrorsBox,\n  getErrors,\n} from '../../ProjectManager/ProjectErrorsChecker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport Window from '../../Utils/Window';\nimport Text from '../../UI/Text';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype Props = {|\n  project: gdProject,\n|};\n\ntype State = {|\n  outputDir: string,\n  exportFinishedDialogOpen: boolean,\n|};\n\nclass LocalCordovaExport extends Component<Props, State> {\n  state = {\n    exportFinishedDialogOpen: false,\n    outputDir: '',\n  };\n\n  componentDidMount() {\n    const { project } = this.props;\n    this.setState({\n      outputDir: project ? project.getLastCompilationDirectory() : '',\n    });\n  }\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n        resolve({\n          exporter,\n        });\n      });\n    });\n  };\n\n  launchExport = () => {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return;\n\n    sendExportLaunched('local-cordova');\n\n    if (!displayProjectErrorsBox(t, getErrors(t, project))) return;\n\n    const outputDir = this.state.outputDir;\n    project.setLastCompilationDirectory(outputDir);\n\n    LocalCordovaExport.prepareExporter()\n      .then(({ exporter }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exportOptions.set('exportForCordova', true);\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        this.setState({\n          exportFinishedDialogOpen: true,\n        });\n      })\n      .catch(err => {\n        showErrorBox('Unable to export the game', err);\n      });\n  };\n\n  openExportFolder = () => {\n    if (shell) shell.openItem(this.state.outputDir);\n  };\n\n  openPhoneGapBuild = () => {\n    Window.openExternalURL('https://build.phonegap.com');\n  };\n\n  render() {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return null;\n\n    return (\n      <Column noMargin>\n        <Line>\n          <Column noMargin>\n            <Text>\n              This will export your game as a Cordova project. Cordova is a\n              technology that enables HTML5 games to be packaged for <b>iOS</b>,{' '}\n              <b>Android</b> and more.\n            </Text>\n            <Text>\n              Third-party tools like <b>Adobe PhoneGap Build</b> allow game\n              developers to bundle their games using Cordova.\n            </Text>\n          </Column>\n        </Line>\n        <Line>\n          <LocalFolderPicker\n            type=\"export\"\n            value={this.state.outputDir}\n            defaultPath={project.getLastCompilationDirectory()}\n            onChange={value => this.setState({ outputDir: value })}\n            fullWidth\n          />\n        </Line>\n        <Line>\n          <Spacer expand />\n          <RaisedButton\n            label={<Trans>Export</Trans>}\n            primary={true}\n            onClick={this.launchExport}\n            disabled={!this.state.outputDir}\n          />\n        </Line>\n        <Dialog\n          title={t('Export finished')}\n          actions={[\n            <FlatButton\n              key=\"open\"\n              label={<Trans>Open folder</Trans>}\n              primary={true}\n              onClick={this.openExportFolder}\n            />,\n            <FlatButton\n              key=\"close\"\n              label={<Trans>Close</Trans>}\n              primary={false}\n              onClick={() =>\n                this.setState({\n                  exportFinishedDialogOpen: false,\n                })\n              }\n            />,\n          ]}\n          secondaryActions={\n            <HelpButton key=\"help\" helpPagePath=\"/publishing\" />\n          }\n          modal\n          open={this.state.exportFinishedDialogOpen}\n        >\n          <Text>\n            <Trans>\n              You can now compress and upload the game to PhoneGap Build which\n              will compile it for you to an iOS and Android app.\n            </Trans>\n          </Text>\n          <Text>\n            <Trans>\n              You can also compile the game by yourself using Cordova\n              command-line tool to iOS (XCode is required) or Android (Android\n              SDK is required).\n            </Trans>\n          </Text>\n          <RaisedButton\n            fullWidth\n            primary\n            onClick={() => this.openPhoneGapBuild()}\n            label={t('Open PhoneGap Build')}\n          />\n        </Dialog>\n      </Column>\n    );\n  }\n}\n\nexport default LocalCordovaExport;\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport RaisedButton from '../../UI/RaisedButton';\nimport Toggle from '../../UI/Toggle';\nimport { sendExportLaunched } from '../../Utils/Analytics/EventSender';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport HelpButton from '../../UI/HelpButton';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport { findGDJS } from './LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport Text from '../../UI/Text';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\nexport default class LocalCocos2dExport extends Component {\n  state = {\n    exportFinishedDialogOpen: false,\n    outputDir: '',\n    debugMode: false,\n  };\n\n  componentDidMount() {\n    const { project } = this.props;\n    this.setState({\n      outputDir: project ? project.getLastCompilationDirectory() : '',\n    });\n  }\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n        resolve({\n          exporter,\n        });\n      });\n    });\n  };\n\n  launchExport = () => {\n    const { project } = this.props;\n    if (!project) return;\n\n    sendExportLaunched('local-cocos2d');\n\n    const { outputDir, debugMode } = this.state;\n    project.setLastCompilationDirectory(outputDir);\n\n    LocalCocos2dExport.prepareExporter()\n      .then(({ exporter }) => {\n        exporter.exportWholeCocos2dProject(project, debugMode, outputDir);\n        exporter.delete();\n        this.setState({\n          exportFinishedDialogOpen: true,\n        });\n      })\n      .catch(err => {\n        showErrorBox('Unable to export the game with Cocos2d-JS', err);\n      });\n  };\n\n  openExportFolder = () => {\n    shell.openItem(this.state.outputDir);\n  };\n\n  render() {\n    const { project } = this.props;\n    if (!project) return null;\n\n    return (\n      <Column noMargin>\n        <Line>\n          <Text>\n            <Trans>\n              This will export your game using Cocos2d-JS game engine. The game\n              can be compiled for Android or iOS if you install Cocos2d-JS\n              developer tools.\n            </Trans>\n          </Text>\n        </Line>\n        <Line>\n          <LocalFolderPicker\n            type=\"export\"\n            value={this.state.outputDir}\n            defaultPath={project.getLastCompilationDirectory()}\n            onChange={value => this.setState({ outputDir: value })}\n            fullWidth\n          />\n        </Line>\n        <Line>\n          <Toggle\n            onToggle={(e, check) =>\n              this.setState({\n                debugMode: check,\n              })\n            }\n            toggled={this.state.debugMode}\n            labelPosition=\"right\"\n            label={\n              <Trans>\n                Debug mode (show FPS counter and stats in the bottom left)\n              </Trans>\n            }\n          />\n        </Line>\n        <Line>\n          <Spacer expand />\n          <RaisedButton\n            label={<Trans>Export</Trans>}\n            primary={true}\n            onClick={this.launchExport}\n            disabled={!this.state.outputDir}\n          />\n        </Line>\n        <Dialog\n          title={<Trans>Export finished</Trans>}\n          actions={[\n            <FlatButton\n              key=\"open\"\n              label={<Trans>Open folder</Trans>}\n              primary={true}\n              onClick={this.openExportFolder}\n            />,\n            <FlatButton\n              key=\"close\"\n              label={<Trans>Close</Trans>}\n              primary={false}\n              onClick={() =>\n                this.setState({\n                  exportFinishedDialogOpen: false,\n                })\n              }\n            />,\n          ]}\n          secondaryActions={\n            <HelpButton key=\"help\" helpPagePath=\"/publishing\" />\n          }\n          modal\n          open={this.state.exportFinishedDialogOpen}\n        >\n          <Text>\n            You can now upload the game to a web hosting or use Cocos2d-JS\n            command line tools to export it to other platforms like iOS (XCode\n            is required) or Android (Android SDK is required).\n          </Text>\n        </Dialog>\n      </Column>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport assignIn from 'lodash/assignIn';\nimport RaisedButton from '../../../UI/RaisedButton';\nimport Checkbox from '../../../UI/Checkbox';\nimport { sendExportLaunched } from '../../../Utils/Analytics/EventSender';\nimport {\n  type Build,\n  buildElectron,\n  getUrl,\n} from '../../../Utils/GDevelopServices/Build';\nimport { type UserProfile } from '../../../Profile/UserProfileContext';\nimport { Column, Line } from '../../../UI/Grid';\nimport { showErrorBox } from '../../../UI/Messages/MessageBox';\nimport { findGDJS } from '../LocalGDJSFinder';\nimport localFileSystem from '../LocalFileSystem';\nimport { archiveFolder } from '../../../Utils/Archiver';\nimport optionalRequire from '../../../Utils/OptionalRequire.js';\nimport Window from '../../../Utils/Window';\nimport CreateProfile from '../../../Profile/CreateProfile';\nimport LimitDisplayer from '../../../Profile/LimitDisplayer';\nimport {\n  displayProjectErrorsBox,\n  getErrors,\n} from '../../../ProjectManager/ProjectErrorsChecker';\nimport { type Limit } from '../../../Utils/GDevelopServices/Usage';\nimport { type TargetName } from '../../../Utils/GDevelopServices/Build';\nimport BuildsWatcher from '../../Builds/BuildsWatcher';\nimport BuildStepsProgress, {\n  type BuildStep,\n} from '../../Builds/BuildStepsProgress';\nimport Text from '../../../UI/Text';\nconst path = optionalRequire('path');\nconst os = optionalRequire('os');\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\ntype State = {\n  exportStep: BuildStep,\n  build: ?Build,\n  uploadProgress: number,\n  uploadMax: number,\n  errored: boolean,\n  targets: Array<TargetName>,\n};\n\ntype Props = {\n  project: gdProject,\n  onChangeSubscription: Function,\n  userProfile: UserProfile,\n};\n\nclass LocalOnlineElectronExport extends Component<Props, State> {\n  state = {\n    exportStep: '',\n    build: null,\n    uploadProgress: 0,\n    uploadMax: 0,\n    errored: false,\n    targets: ['winExe'],\n  };\n  buildsWatcher = new BuildsWatcher();\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n        const outputDir = path.join(\n          fileSystem.getTempDir(),\n          'OnlineElectronExport'\n        );\n        fileSystem.mkDir(outputDir);\n        fileSystem.clearDir(outputDir);\n\n        resolve({\n          exporter,\n          outputDir,\n        });\n      });\n    });\n  };\n\n  componentWillUnmount() {\n    this.buildsWatcher.stop();\n  }\n\n  launchExport = (): Promise<string> => {\n    const t = str => str; //TODO\n    const { project } = this.props;\n    if (!project) return Promise.reject();\n\n    return LocalOnlineElectronExport.prepareExporter()\n      .then(({ exporter, outputDir }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exportOptions.set('exportForElectron', true);\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        return outputDir;\n      })\n      .catch(err => {\n        showErrorBox(t('Unable to export the game'), err);\n        throw err;\n      });\n  };\n\n  launchCompression = (outputDir: string): Promise<string> => {\n    const archiveOutputDir = os.tmpdir();\n    return archiveFolder({\n      path: outputDir,\n      outputFilename: path.join(archiveOutputDir, 'game-archive.zip'),\n    });\n  };\n\n  launchUpload = (outputFile: string): Promise<string> => {\n    if (!ipcRenderer) return Promise.reject('No support for upload');\n\n    ipcRenderer.removeAllListeners('s3-file-upload-progress');\n    ipcRenderer.removeAllListeners('s3-file-upload-done');\n\n    return new Promise((resolve, reject) => {\n      ipcRenderer.on(\n        's3-file-upload-progress',\n        (event, uploadProgress, uploadMax) => {\n          this.setState({\n            uploadProgress,\n            uploadMax,\n          });\n        }\n      );\n      ipcRenderer.on('s3-file-upload-done', (event, err, prefix) => {\n        if (err) return reject(err);\n        resolve(prefix);\n      });\n      ipcRenderer.send('s3-file-upload', outputFile);\n    });\n  };\n\n  launchBuild = (\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildElectron(\n      getAuthorizationHeader,\n      profile.uid,\n      uploadBucketKey,\n      this.state.targets\n    );\n  };\n\n  startBuildWatch = (userProfile: UserProfile) => {\n    if (!this.state.build) return;\n\n    this.buildsWatcher.start({\n      userProfile,\n      builds: [this.state.build],\n      onBuildUpdated: (build: Build) => this.setState({ build }),\n    });\n  };\n\n  launchWholeExport = (userProfile: UserProfile) => {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    sendExportLaunched('local-online-electron');\n\n    if (!displayProjectErrorsBox(t, getErrors(t, project))) return;\n\n    const handleError = (message: string) => err => {\n      if (!this.state.errored) {\n        this.setState({\n          errored: true,\n        });\n        showErrorBox(message + (err.message ? `\\n${err.message}` : ''), {\n          exportStep: this.state.exportStep,\n          rawError: err,\n        });\n      }\n\n      throw err;\n    };\n\n    this.setState({\n      exportStep: 'export',\n      uploadProgress: 0,\n      uploadMax: 0,\n      errored: false,\n      build: null,\n    });\n    this.launchExport()\n      .then(outputDir => {\n        this.setState({\n          exportStep: 'compress',\n        });\n        return this.launchCompression(outputDir);\n      }, handleError(t('Error while exporting the game.')))\n      .then(outputFile => {\n        this.setState({\n          exportStep: 'upload',\n        });\n        return this.launchUpload(outputFile);\n      }, handleError(t('Error while compressing the game.')))\n      .then((uploadBucketKey: string) => {\n        this.setState({\n          exportStep: 'waiting-for-build',\n        });\n        return this.launchBuild(userProfile, uploadBucketKey);\n      }, handleError(t('Error while uploading the game. Check your internet connection or try again later.')))\n      .then(build => {\n        this.setState(\n          {\n            build,\n            exportStep: 'build',\n          },\n          () => {\n            this.startBuildWatch(userProfile);\n          }\n        );\n      }, handleError(t('Error while lauching the build of the game.')))\n      .catch(() => {\n        /* Error handled previously */\n      });\n  };\n\n  _download = (key: string) => {\n    if (!this.state.build || !this.state.build[key]) return;\n\n    Window.openExternalURL(getUrl(this.state.build[key]));\n  };\n\n  _setTarget = (targetName: TargetName, enable: boolean) => {\n    if (enable && this.state.targets.indexOf(targetName) === -1) {\n      this.setState({\n        targets: [...this.state.targets, targetName],\n      });\n    } else if (!enable && this.state.targets.indexOf(targetName) !== -1) {\n      this.setState({\n        targets: this.state.targets.filter(name => name !== targetName),\n      });\n    }\n  };\n\n  render() {\n    const {\n      exportStep,\n      build,\n      uploadMax,\n      uploadProgress,\n      errored,\n    } = this.state;\n    const t = str => str; //TODO;\n    const { project, userProfile } = this.props;\n    if (!project) return null;\n\n    const getBuildLimit = (userProfile: UserProfile): ?Limit =>\n      userProfile.limits ? userProfile.limits['electron-build'] : null;\n    const canLaunchBuild = (userProfile: UserProfile) => {\n      if (!errored && exportStep !== '' && exportStep !== 'build') return false;\n\n      const limit: ?Limit = getBuildLimit(userProfile);\n      if (limit && limit.limitReached) return false;\n\n      if (!this.state.targets.length) return false;\n\n      return true;\n    };\n\n    return (\n      <Column noMargin>\n        <Line>\n          <Text>\n            {t(\n              'Your game will be exported and packaged online as an stand-alone game for Windows, Linux and/or macOS.'\n            )}\n          </Text>\n        </Line>\n        <Checkbox\n          label={<Trans>Windows (zip file)</Trans>}\n          checked={this.state.targets.indexOf('winZip') !== -1}\n          onCheck={(e, checked) => this._setTarget('winZip', checked)}\n        />\n        <Checkbox\n          label={<Trans>Windows (auto-installer file)</Trans>}\n          checked={this.state.targets.indexOf('winExe') !== -1}\n          onCheck={(e, checked) => this._setTarget('winExe', checked)}\n        />\n        <Checkbox\n          label={<Trans>macOS (zip file)</Trans>}\n          checked={this.state.targets.indexOf('macZip') !== -1}\n          onCheck={(e, checked) => this._setTarget('macZip', checked)}\n        />\n        <Checkbox\n          label={<Trans>Linux (AppImage)</Trans>}\n          checked={this.state.targets.indexOf('linuxAppImage') !== -1}\n          onCheck={(e, checked) => this._setTarget('linuxAppImage', checked)}\n        />\n        {userProfile.authenticated && (\n          <Line justifyContent=\"center\">\n            <RaisedButton\n              label={t('Export')}\n              primary\n              onClick={() => this.launchWholeExport(userProfile)}\n              disabled={!canLaunchBuild(userProfile)}\n            />\n          </Line>\n        )}\n        {userProfile.authenticated && (\n          <LimitDisplayer\n            subscription={userProfile.subscription}\n            limit={getBuildLimit(userProfile)}\n            onChangeSubscription={this.props.onChangeSubscription}\n          />\n        )}\n        {!userProfile.authenticated && (\n          <CreateProfile\n            message={t(\n              'Create an account to build your game for Windows, Linux and macOS in one-click:'\n            )}\n            onLogin={userProfile.onLogin}\n          />\n        )}\n        <Line expand>\n          <BuildStepsProgress\n            exportStep={exportStep}\n            build={build}\n            onDownload={this._download}\n            uploadMax={uploadMax}\n            uploadProgress={uploadProgress}\n            errored={errored}\n            showSeeAllMyBuildsExplanation\n          />\n        </Line>\n      </Column>\n    );\n  }\n}\n\nexport default LocalOnlineElectronExport;\n","// @flow\n\nimport React, { Component } from 'react';\nimport assignIn from 'lodash/assignIn';\nimport RaisedButton from '../../../UI/RaisedButton';\nimport { sendExportLaunched } from '../../../Utils/Analytics/EventSender';\nimport { Column, Line, Spacer } from '../../../UI/Grid';\nimport LocalFilePicker from '../../../UI/LocalFilePicker';\nimport { showErrorBox } from '../../../UI/Messages/MessageBox';\nimport { findGDJS } from '../LocalGDJSFinder';\nimport localFileSystem from '../LocalFileSystem';\nimport Progress from './Progress';\nimport { archiveFolder } from '../../../Utils/Archiver';\nimport optionalRequire from '../../../Utils/OptionalRequire.js';\nimport Window from '../../../Utils/Window';\nimport { getHelpLink } from '../../../Utils/HelpLink';\nimport Text from '../../../UI/Text';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\nexport type LocalFacebookInstantGamesExportStep =\n  | ''\n  | 'export'\n  | 'compress'\n  | 'done';\n\ntype State = {|\n  archiveOutputFilename: string,\n  exportStep: LocalFacebookInstantGamesExportStep,\n  errored: boolean,\n|};\n\ntype Props = {\n  project: gdProject,\n  onChangeSubscription: Function,\n};\n\nclass LocalFacebookInstantGamesExport extends Component<Props, State> {\n  state = {\n    archiveOutputFilename: app\n      ? path.join(app.getPath('documents'), 'fb-instant-game.zip')\n      : '',\n    exportStep: '',\n    errored: false,\n  };\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n        const outputDir = path.join(\n          fileSystem.getTempDir(),\n          'FacebookInstantGamesExport'\n        );\n        fileSystem.mkDir(outputDir);\n        fileSystem.clearDir(outputDir);\n\n        resolve({\n          exporter,\n          outputDir,\n        });\n      });\n    });\n  };\n\n  launchExport = (): Promise<string> => {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return Promise.reject();\n\n    return LocalFacebookInstantGamesExport.prepareExporter()\n      .then(({ exporter, outputDir }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exportOptions.set('exportForFacebookInstantGames', true);\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        return outputDir;\n      })\n      .catch(err => {\n        showErrorBox(t('Unable to export the game'), err);\n        throw err;\n      });\n  };\n\n  launchCompression = (outputDir: string): Promise<string> => {\n    return archiveFolder({\n      path: outputDir,\n      outputFilename: this.state.archiveOutputFilename,\n    });\n  };\n\n  launchWholeExport = () => {\n    const t = str => str; //TODO\n    sendExportLaunched('local-facebook-instant-games');\n\n    const handleError = (message: string) => err => {\n      if (!this.state.errored) {\n        this.setState({\n          errored: true,\n        });\n        showErrorBox(message, {\n          exportStep: this.state.exportStep,\n          rawError: err,\n        });\n      }\n\n      throw err;\n    };\n\n    this.setState({\n      exportStep: 'export',\n      errored: false,\n    });\n    this.launchExport()\n      .then(outputDir => {\n        this.setState({\n          exportStep: 'compress',\n        });\n        return this.launchCompression(outputDir);\n      }, handleError(t('Error while exporting the game.')))\n      .then(() => {\n        this.setState({\n          exportStep: 'done',\n        });\n      }, handleError(t('Error while building the game.')))\n      .catch(() => {\n        /* Error handled previously */\n      });\n  };\n\n  openExportFolder = () => {\n    if (shell) shell.openItem(path.dirname(this.state.archiveOutputFilename));\n  };\n\n  openLearnMore = () => {\n    Window.openExternalURL(\n      getHelpLink('/publishing/publishing-to-facebook-instant-games')\n    );\n  };\n\n  render() {\n    const { exportStep, errored } = this.state;\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return null;\n\n    return (\n      <Column noMargin>\n        <Line>\n          <Text>\n            {t(\n              'Prepare your game for Facebook Instant Games so that it can be play on Facebook Messenger. GDevelop will create a compressed file that you can upload on your Facebook Developer account.'\n            )}\n          </Text>\n        </Line>\n        <Line>\n          <LocalFilePicker\n            title={t('Facebook Instant Games export zip file')}\n            message={t(\n              'Choose where to save the exported file for Facebook Instant Games'\n            )}\n            filters={[\n              {\n                name: t('Compressed file for Facebook Instant Games'),\n                extensions: ['zip'],\n              },\n            ]}\n            value={this.state.archiveOutputFilename}\n            defaultPath={app ? app.getPath('documents') : ''}\n            onChange={value => this.setState({ archiveOutputFilename: value })}\n            fullWidth\n          />\n        </Line>\n        <Line>\n          <Spacer expand />\n          <RaisedButton\n            label={t('Export')}\n            primary\n            onClick={this.launchWholeExport}\n            disabled={!this.state.archiveOutputFilename}\n          />\n        </Line>\n        <Line>\n          <Progress\n            exportStep={exportStep}\n            errored={errored}\n            onOpenExportFolder={this.openExportFolder}\n            onOpenLearnMore={this.openLearnMore}\n          />\n        </Line>\n      </Column>\n    );\n  }\n}\n\nexport default LocalFacebookInstantGamesExport;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\n\nimport React, { PureComponent } from 'react';\nimport TextField from '../TextField';\nimport FlatButton from '../FlatButton';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'baseline',\n  },\n  button: {\n    marginLeft: 10,\n  },\n  textField: {\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  value: string,\n  onChange: string => void,\n  title: string,\n  message: string,\n  defaultPath?: string,\n  fullWidth?: boolean,\n  floatingLabelText?: string,\n  filters: Array<{\n    name: string,\n    extensions: Array<string>,\n  }>,\n|};\n\nexport default class LocalFilePicker extends PureComponent<Props, *> {\n  onChooseFolder = () => {\n    if (!dialog || !electron) return;\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showSaveDialog(\n      browserWindow,\n      {\n        title: this.props.title,\n        filters: this.props.filters,\n        message: this.props.message,\n        defaultPath: this.props.defaultPath,\n      },\n      filename => {\n        this.props.onChange(filename || '');\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          ...styles.container,\n          width: this.props.fullWidth ? '100%' : undefined,\n        }}\n      >\n        <TextField\n          style={styles.textField}\n          floatingLabelText={this.props.floatingLabelText}\n          floatingLabelFixed\n          type=\"text\"\n          hintText={t`Click to choose`}\n          value={this.props.value}\n          onChange={(event, value) => this.props.onChange(value)}\n        />\n        <FlatButton\n          label={<Trans>Choose</Trans>}\n          style={styles.button}\n          onClick={this.onChooseFolder}\n        />\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RaisedButton from '../../../UI/RaisedButton';\nimport FlatButton from '../../../UI/FlatButton';\nimport Text from '../../../UI/Text';\nimport { Line, Spacer } from '../../../UI/Grid';\nimport { type LocalFacebookInstantGamesExportStep } from '.';\n\ntype Props = {|\n  exportStep: LocalFacebookInstantGamesExportStep,\n  errored: boolean,\n  onOpenExportFolder: () => void,\n  onOpenLearnMore: () => void,\n|};\n\nexport default ({\n  exportStep,\n  errored,\n  onOpenExportFolder,\n  onOpenLearnMore,\n}: Props) => (\n  <Stepper\n    activeStep={\n      exportStep === 'export'\n        ? 0\n        : exportStep === 'compress'\n        ? 1\n        : exportStep === 'done'\n        ? 2\n        : -1\n    }\n    orientation=\"vertical\"\n  >\n    <Step>\n      <StepLabel>\n        <Trans>Game export</Trans>\n      </StepLabel>\n      <StepContent>\n        <Line alignItems=\"center\">\n          <CircularProgress size={20} />\n          <Spacer />\n          <Text>\n            <Trans>Export in progress...</Trans>\n          </Text>\n        </Line>\n      </StepContent>\n    </Step>\n    <Step>\n      <StepLabel>\n        <Trans>Upload to build service</Trans>\n      </StepLabel>\n      <StepContent>\n        {errored ? (\n          <Text>\n            <Trans>\n              Can't compress the game. Please check that you have rights to\n              write on this computer.\n            </Trans>\n          </Text>\n        ) : (\n          <Line alignItems=\"center\">\n            <CircularProgress size={20} />\n            <Spacer />\n            <Text>\n              <Trans>Compressing...</Trans>\n            </Text>\n          </Line>\n        )}\n      </StepContent>\n    </Step>\n    <Step>\n      <StepLabel>\n        <Trans>Export finished</Trans>\n      </StepLabel>\n      <StepContent>\n        <Line expand>\n          <Text>\n            <Trans>\n              You can now create a game on Facebook Instant Games, if not\n              already done, and upload the archive generated.\n            </Trans>\n          </Text>\n        </Line>\n        <Line expand>\n          <FlatButton\n            label={<Trans>Open folder</Trans>}\n            onClick={onOpenExportFolder}\n          />\n          <RaisedButton\n            label={<Trans>Learn more about Instant Games publication</Trans>}\n            primary\n            onClick={onOpenLearnMore}\n          />\n        </Line>\n      </StepContent>\n    </Step>\n  </Stepper>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { sendExportLaunched } from '../../Utils/Analytics/EventSender';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport { findGDJS } from './LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport HelpButton from '../../UI/HelpButton';\nimport {\n  displayProjectErrorsBox,\n  getErrors,\n} from '../../ProjectManager/ProjectErrorsChecker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport Text from '../../UI/Text';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype Props = {|\n  project: gdProject,\n|};\n\ntype State = {|\n  outputDir: string,\n  exportFinishedDialogOpen: boolean,\n|};\n\nclass LocalElectronExport extends Component<Props, State> {\n  state = {\n    exportFinishedDialogOpen: false,\n    outputDir: '',\n  };\n\n  componentDidMount() {\n    const { project } = this.props;\n    this.setState({\n      outputDir: project ? project.getLastCompilationDirectory() : '',\n    });\n  }\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n        resolve({\n          exporter,\n        });\n      });\n    });\n  };\n\n  launchExport = () => {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return;\n\n    sendExportLaunched('local-electron');\n\n    if (!displayProjectErrorsBox(t, getErrors(t, project))) return;\n\n    const outputDir = this.state.outputDir;\n    project.setLastCompilationDirectory(outputDir);\n\n    LocalElectronExport.prepareExporter()\n      .then(({ exporter }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exportOptions.set('exportForElectron', true);\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        this.setState({\n          exportFinishedDialogOpen: true,\n        });\n      })\n      .catch(err => {\n        showErrorBox('Unable to export the game', err);\n      });\n  };\n\n  openExportFolder = () => {\n    if (shell) shell.openItem(this.state.outputDir);\n  };\n\n  render() {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return null;\n\n    return (\n      <Column noMargin>\n        <Line>\n          <Column noMargin>\n            <Text>\n              <Trans>\n                This will export your game so that you can package it for\n                Windows, macOS or Linux. You will need to install third-party\n                tools (Node.js, Electron Builder) to package your game by\n                yourself.\n              </Trans>\n            </Text>\n          </Column>\n        </Line>\n        <Line>\n          <LocalFolderPicker\n            type=\"export\"\n            value={this.state.outputDir}\n            defaultPath={project.getLastCompilationDirectory()}\n            onChange={value => this.setState({ outputDir: value })}\n            fullWidth\n          />\n        </Line>\n        <Line>\n          <Spacer expand />\n          <RaisedButton\n            label={<Trans>Export</Trans>}\n            primary={true}\n            onClick={this.launchExport}\n            disabled={!this.state.outputDir}\n          />\n        </Line>\n        <Dialog\n          title={t('Export finished')}\n          actions={[\n            <FlatButton\n              key=\"open\"\n              label={<Trans>Open folder</Trans>}\n              primary={true}\n              onClick={this.openExportFolder}\n            />,\n            <FlatButton\n              key=\"close\"\n              label={<Trans>Close</Trans>}\n              primary={false}\n              onClick={() =>\n                this.setState({\n                  exportFinishedDialogOpen: false,\n                })\n              }\n            />,\n          ]}\n          secondaryActions={\n            <HelpButton key=\"help\" helpPagePath=\"/publishing\" />\n          }\n          modal\n          open={this.state.exportFinishedDialogOpen}\n        >\n          <Text>\n            <Trans>\n              The game was properly exported. You can now use Electron Builder\n              (you need Node.js installed and to use the command-line to run it)\n              to create an executable.\n            </Trans>\n          </Text>\n        </Dialog>\n      </Column>\n    );\n  }\n}\n\nexport default LocalElectronExport;\n","// @flow\nimport * as React from 'react';\nimport MainFrame from '.';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\nimport { isMacLike } from '../Utils/Platform';\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\n\ntype Props = {|\n  children: React.Element<typeof MainFrame>,\n  i18n: I18nType,\n|};\n\ntype MainMenuEvent =\n  | 'main-menu-open'\n  | 'main-menu-save'\n  | 'main-menu-save-as'\n  | 'main-menu-close'\n  | 'main-menu-export'\n  | 'main-menu-create'\n  | 'main-menu-open-project-manager'\n  | 'main-menu-open-start-page'\n  | 'main-menu-open-debugger'\n  | 'main-menu-open-about'\n  | 'main-menu-open-preferences'\n  | 'main-menu-open-language'\n  | 'main-menu-open-profile'\n  | 'update-status';\n\ntype MenuItemTemplate =\n  | {|\n      onClickSendEvent?: MainMenuEvent,\n      onClickOpenLink?: string,\n      accelerator?: string,\n      enabled?: boolean,\n      label?: string,\n    |}\n  | {|\n      submenu: Array<MenuItemTemplate>,\n      label: string,\n    |}\n  | {|\n      submenu: Array<MenuItemTemplate>,\n      role: string,\n    |}\n  | {|\n      type: 'separator',\n    |}\n  | {|\n      role: string,\n    |};\n\ntype RootMenuTemplate =\n  | {|\n      label: string,\n      submenu: Array<MenuItemTemplate>,\n    |}\n  | {|\n      role: string,\n      submenu: Array<MenuItemTemplate>,\n    |};\n\n/**\n * Forward events received from Electron main process\n * to the underlying child React component.\n */\nclass ElectronMainMenu extends React.Component<Props, {||}> {\n  _editor: ?MainFrame;\n  _language: ?string;\n\n  componentDidMount() {\n    if (!ipcRenderer) return;\n\n    ipcRenderer.on(\n      ('main-menu-open': MainMenuEvent),\n      event => this._editor && this._editor.chooseProject()\n    );\n    ipcRenderer.on(\n      ('main-menu-save': MainMenuEvent),\n      event => this._editor && this._editor.save()\n    );\n    ipcRenderer.on(\n      ('main-menu-save-as': MainMenuEvent),\n      event => this._editor && this._editor.saveAs()\n    );\n    ipcRenderer.on(\n      ('main-menu-close': MainMenuEvent),\n      event => this._editor && this._editor.askToCloseProject(() => {})\n    );\n    ipcRenderer.on(\n      ('main-menu-export': MainMenuEvent),\n      event => this._editor && this._editor.openExportDialog()\n    );\n    ipcRenderer.on(\n      ('main-menu-create': MainMenuEvent),\n      event => this._editor && this._editor.openCreateDialog()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-project-manager': MainMenuEvent),\n      event => this._editor && this._editor.openProjectManager()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-start-page': MainMenuEvent),\n      event => this._editor && this._editor.openStartPage()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-debugger': MainMenuEvent),\n      event => this._editor && this._editor.openDebugger()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-about': MainMenuEvent),\n      event => this._editor && this._editor.openAboutDialog()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-preferences': MainMenuEvent),\n      event => this._editor && this._editor.openPreferences()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-language': MainMenuEvent),\n      event => this._editor && this._editor.openLanguage()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-profile': MainMenuEvent),\n      event => this._editor && this._editor.openProfile()\n    );\n    ipcRenderer.on(\n      ('update-status': MainMenuEvent),\n      (event, status) => this._editor && this._editor.setUpdateStatus(status)\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.props.i18n.language !== this._language) {\n      this._buildAndSendMenuTemplate();\n      this._language = this.props.i18n.language;\n    }\n  }\n\n  _buildAndSendMenuTemplate() {\n    const { i18n } = this.props;\n    const fileTemplate = {\n      label: i18n._(t`File`),\n      submenu: [\n        {\n          label: i18n._(t`Create a New Project...`),\n          accelerator: 'CommandOrControl+N',\n          onClickSendEvent: 'main-menu-create',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Open...`),\n          accelerator: 'CommandOrControl+O',\n          onClickSendEvent: 'main-menu-open',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Save`),\n          accelerator: 'CommandOrControl+S',\n          onClickSendEvent: 'main-menu-save',\n        },\n        {\n          label: i18n._(t`Save as...`),\n          accelerator: 'CommandOrControl+Alt+S',\n          onClickSendEvent: 'main-menu-save-as',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Export (web, iOS, Android)...`),\n          onClickSendEvent: 'main-menu-export',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Close Project`),\n          accelerator: 'CommandOrControl+Shift+W',\n          onClickSendEvent: 'main-menu-close',\n        },\n      ],\n    };\n    if (!isMacLike()) {\n      fileTemplate.submenu.push(\n        { type: 'separator' },\n        {\n          label: i18n._(t`My Profile`),\n          onClickSendEvent: 'main-menu-open-profile',\n        },\n        {\n          label: i18n._(t`Preferences`),\n          onClickSendEvent: 'main-menu-open-preferences',\n        },\n        {\n          label: i18n._(t`Language`),\n          onClickSendEvent: 'main-menu-open-language',\n        }\n      );\n    }\n\n    const editTemplate = {\n      label: i18n._(t`Edit`),\n      submenu: [\n        { role: 'undo' },\n        { role: 'redo' },\n        { type: 'separator' },\n        { role: 'cut' },\n        { role: 'copy' },\n        { role: 'paste' },\n        { role: 'pasteandmatchstyle' },\n        { role: 'delete' },\n        { role: 'selectall' },\n      ],\n    };\n\n    const viewTemplate = {\n      label: i18n._(t`View`),\n      submenu: [\n        {\n          label: i18n._(t`Show Project Manager`),\n          accelerator: 'CommandOrControl+Alt+P',\n          onClickSendEvent: 'main-menu-open-project-manager',\n        },\n        {\n          label: i18n._(t`Show Start Page`),\n          onClickSendEvent: 'main-menu-open-start-page',\n        },\n        {\n          label: i18n._(t`Open Debugger`),\n          onClickSendEvent: 'main-menu-open-debugger',\n        },\n        { type: 'separator' },\n        { role: 'toggledevtools' },\n        { type: 'separator' },\n        { role: 'togglefullscreen' },\n      ],\n    };\n\n    const windowTemplate = {\n      role: 'window',\n      submenu: [{ role: 'minimize' }],\n    };\n\n    const helpTemplate = {\n      role: 'help',\n      submenu: [\n        {\n          label: i18n._(t`GDevelop website`),\n          onClickOpenLink: 'http://gdevelop-app.com',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Community Forums`),\n          onClickOpenLink: 'https://forum.gdevelop-app.com',\n        },\n        {\n          label: i18n._(t`Community Discord Chat`),\n          onClickOpenLink: 'https://discord.gg/rjdYHvj',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Contribute to GDevelop`),\n          onClickOpenLink: 'https://gdevelop-app.com/contribute/',\n        },\n        {\n          label: i18n._(t`Create Extensions for GDevelop`),\n          onClickOpenLink:\n            'https://github.com/4ian/GDevelop/blob/master/newIDE/README-extensions.md',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Help to Translate GDevelop`),\n          onClickOpenLink: 'https://crowdin.com/project/gdevelop',\n        },\n        {\n          label: i18n._(t`Report a wrong translation`),\n          onClickOpenLink: 'https://github.com/4ian/GDevelop/issues/969',\n        },\n      ],\n    };\n    if (!isMacLike()) {\n      helpTemplate.submenu.push(\n        { type: 'separator' },\n        {\n          label: i18n._(t`About GDevelop`),\n          onClickSendEvent: 'main-menu-open-about',\n        }\n      );\n    }\n\n    const template: Array<RootMenuTemplate> = [\n      fileTemplate,\n      editTemplate,\n      viewTemplate,\n      windowTemplate,\n      helpTemplate,\n    ];\n\n    if (isMacLike()) {\n      template.unshift({\n        label: i18n._(t`GDevelop 5`),\n        submenu: [\n          {\n            label: i18n._(t`About GDevelop`),\n            onClickSendEvent: 'main-menu-open-about',\n          },\n          { type: 'separator' },\n          {\n            label: i18n._(t`My Profile`),\n            onClickSendEvent: 'main-menu-open-profile',\n          },\n          {\n            label: i18n._(t`Preferences`),\n            onClickSendEvent: 'main-menu-open-preferences',\n          },\n          {\n            label: i18n._(t`Language`),\n            onClickSendEvent: 'main-menu-open-language',\n          },\n          { type: 'separator' },\n          { role: 'services', submenu: [] },\n          { type: 'separator' },\n          { role: 'hide' },\n          { role: 'hideothers' },\n          { role: 'unhide' },\n          { type: 'separator' },\n          { role: 'quit' },\n        ],\n      });\n\n      editTemplate.submenu.push(\n        { type: 'separator' },\n        {\n          label: i18n._(t`Speech`),\n          submenu: [{ role: 'startspeaking' }, { role: 'stopspeaking' }],\n        }\n      );\n\n      windowTemplate.submenu = [\n        { role: 'minimize' },\n        { role: 'zoom' },\n        { type: 'separator' },\n        { role: 'front' },\n      ];\n    }\n\n    if (ipcRenderer) {\n      ipcRenderer.send('set-main-menu', template);\n    }\n  }\n\n  render() {\n    return React.cloneElement(this.props.children, {\n      ref: editor => (this._editor = editor),\n    });\n  }\n}\n\nexport default ElectronMainMenu;\n","// @flow\n// Note: this file does not use export/imports and use Flow comments to allow its usage from Node.js\n\nconst { loadExtension } = require('.');\nconst optionalRequire = require('../Utils/OptionalRequire');\nconst { findJsExtensionModules } = require('./LocalJsExtensionsFinder');\n\n/*flow-include\nimport type {JsExtensionsLoader, TranslationFunction} from '.';\nimport ObjectsEditorService from '../ObjectEditor/ObjectsEditorService';\nimport ObjectsRenderingService from '../ObjectsRendering/ObjectsRenderingService';\n\ntype MakeExtensionsLoaderArguments = {|\n  gd: any,\n  objectsEditorService: typeof ObjectsEditorService,\n  objectsRenderingService: typeof ObjectsRenderingService,\n  filterExamples: boolean,\n|};\n*/\n\n/**\n * Loader that will find all JS extensions declared in GDJS/Runtime/Extensions/xxx/JsExtension.js.\n * If you add a new extension and also want it to be available for the web-app version, add it in\n * BrowserJsExtensionsLoader.js\n */\nmodule.exports = function makeExtensionsLoader(\n  {\n    gd,\n    objectsEditorService,\n    objectsRenderingService,\n    filterExamples,\n  } /*: MakeExtensionsLoaderArguments*/\n) /*: JsExtensionsLoader*/ {\n  return {\n    loadAllExtensions: (_ /*: TranslationFunction */) => {\n      return findJsExtensionModules({ filterExamples }).then(\n        extensionModulePaths => {\n          return Promise.all(\n            extensionModulePaths.map(extensionModulePath => {\n              let extensionModule = null;\n              try {\n                extensionModule = optionalRequire(extensionModulePath, {\n                  rethrowException: true,\n                });\n              } catch (ex) {\n                return {\n                  extensionModulePath,\n                  result: {\n                    message:\n                      'Unable to import extension. Please check for any syntax error or error that would prevent it from being run.',\n                    error: true,\n                    rawError: ex,\n                  },\n                };\n              }\n\n              if (extensionModule) {\n                // Load any editor for objects, if we have somewhere where\n                // to register them.\n                if (\n                  objectsEditorService &&\n                  extensionModule.registerEditorConfigurations\n                ) {\n                  extensionModule.registerEditorConfigurations(\n                    objectsEditorService\n                  );\n                }\n\n                // Load any renderer for objects, if we have somewhere where\n                // to register them.\n                if (\n                  objectsRenderingService &&\n                  extensionModule.registerInstanceRenderers\n                ) {\n                  extensionModule.registerInstanceRenderers(\n                    objectsRenderingService\n                  );\n                }\n\n                return {\n                  extensionModulePath,\n                  result: loadExtension(\n                    _,\n                    gd,\n                    gd.JsPlatform.get(),\n                    extensionModule\n                  ),\n                };\n              }\n\n              return {\n                extensionModulePath,\n                result: {\n                  error: true,\n                  message:\n                    'Unknown error. Please check for any syntax error or error that would prevent it from being run.',\n                },\n              };\n            })\n          );\n        },\n        err => {\n          console.error(`Unable to find JS extensions modules`);\n          throw err;\n        }\n      );\n    },\n  };\n};\n","// Note: this file does not use export/imports nor Flow to allow its usage from Node.js\n\nconst { findGDJS } = require('../Export/LocalExporters/LocalGDJSFinder');\nconst optionalRequire = require('../Utils/OptionalRequire');\nconst path = optionalRequire('path');\nconst fs = optionalRequire('fs');\n\nconst checkIfPathHasJsExtensionModule = extensionFolderPath => {\n  return new Promise(resolve => {\n    const jsExtensionModulePath = path.join(\n      extensionFolderPath,\n      'JsExtension.js'\n    );\n    fs.stat(jsExtensionModulePath, (err, stats) => {\n      if (err) {\n        return resolve(null);\n      }\n\n      return resolve(stats.isFile() ? jsExtensionModulePath : null);\n    });\n  });\n};\n\nconst findJsExtensionModules = ({ filterExamples }) => {\n  return new Promise((resolve, reject) => {\n    findGDJS(gdjsRoot => {\n      if (!gdjsRoot) {\n        return reject();\n      }\n\n      const extensionsRoot = path.join(gdjsRoot, 'Runtime', 'Extensions');\n      console.info(\n        `Searching for JS extensions (file called JsExtension.js) in ${extensionsRoot}...`\n      );\n      fs.readdir(extensionsRoot, (error, extensionFolders) => {\n        if (error) {\n          return reject(error);\n        }\n\n        const filteredExtensionFolders = extensionFolders.filter(folder => {\n          if (!filterExamples) return true;\n\n          return folder.indexOf('Example') === -1;\n        });\n\n        Promise.all(\n          filteredExtensionFolders.map(extensionFolder =>\n            checkIfPathHasJsExtensionModule(\n              path.join(extensionsRoot, extensionFolder)\n            )\n          )\n        ).then(modulePaths => {\n          resolve(modulePaths.filter(modulePath => !!modulePath));\n        }, reject);\n      });\n    });\n  });\n};\n\nmodule.exports = {\n  findJsExtensionModules,\n};\n","// @flow\nimport { type EventsFunctionCodeWriter } from '..';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport slugs from 'slugs';\nconst os = optionalRequire('os');\nconst fs = optionalRequire('fs');\n\n/**\n * Create the EventsFunctionCodeWriter that writes generated code for events functions\n * to local files.\n */\nexport const makeLocalEventsFunctionCodeWriter = (): EventsFunctionCodeWriter => {\n  const outputDir = os.tmpdir() + '/GDGeneratedEventsFunctions';\n  fs.mkdir(outputDir, err => {\n    if (err && err.code !== 'EEXIST') {\n      console.error(\n        'Unable to create the directory where to output events functions generated code: ',\n        err\n      );\n      return;\n    }\n  });\n\n  const getPathFor = (codeNamespace: string) => {\n    return `${outputDir}/${slugs(codeNamespace)}.js`;\n  };\n\n  return {\n    getIncludeFileFor: (codeNamespace: string) => getPathFor(codeNamespace),\n    writeFunctionCode: (\n      functionCodeNamespace: string,\n      code: string\n    ): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        const filepath = getPathFor(functionCodeNamespace);\n        fs.writeFile(filepath, code, err => {\n          if (err) return reject(err);\n\n          resolve();\n        });\n      });\n    },\n    writeBehaviorCode: (\n      behaviorCodeNamespace: string,\n      code: string\n    ): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        const filepath = getPathFor(behaviorCodeNamespace);\n        fs.writeFile(filepath, code, err => {\n          if (err) return reject(err);\n\n          resolve();\n        });\n      });\n    },\n  };\n};\n","// @flow\nimport { serializeToJSObject } from '../../Utils/Serializer';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst fs = optionalRequire('fs-extra');\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst writeJSONFile = (object: Object, filepath: string): Promise<void> => {\n  if (!fs) return Promise.reject(new Error('Filesystem is not supported.'));\n\n  try {\n    const content = JSON.stringify(object, null, 2);\n    return fs.ensureDir(path.dirname(filepath)).then(\n      () =>\n        new Promise((resolve, reject) => {\n          fs.writeFile(filepath, content, (err: ?Error) => {\n            if (err) {\n              return reject(err);\n            }\n\n            return resolve();\n          });\n        })\n    );\n  } catch (stringifyException) {\n    return Promise.reject(stringifyException);\n  }\n};\n\nexport default class LocalEventsFunctionsExtensionWriter {\n  static chooseEventsFunctionExtensionFile = (): Promise<?string> => {\n    return new Promise((resolve, reject) => {\n      if (!dialog) return reject('Not supported');\n\n      const browserWindow = electron.remote.getCurrentWindow();\n      dialog.showSaveDialog(\n        browserWindow,\n        {\n          title: 'Export an extension of the project',\n          filters: [\n            {\n              name: 'GDevelop 5 \"events based\" extension',\n              extensions: ['json'],\n            },\n          ],\n          defaultPath: 'Extension.json',\n        },\n        path => {\n          if (!path) return resolve(null);\n\n          return resolve(path);\n        }\n      );\n    });\n  };\n\n  static writeEventsFunctionsExtension = (\n    extension: gdEventsFunctionsExtension,\n    filepath: string\n  ): Promise<void> => {\n    const serializedObject = serializeToJSObject(extension);\n    return writeJSONFile(serializedObject, filepath).catch(err => {\n      console.error('Unable to write the events function extension:', err);\n      throw err;\n    });\n  };\n}\n","// @flow\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst fs = optionalRequire('fs');\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst readJSONFile = (filepath: string): Promise<Object> => {\n  if (!fs) return Promise.reject('Filesystem is not supported.');\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(filepath, { encoding: 'utf8' }, (err, data) => {\n      if (err) return reject(err);\n\n      try {\n        const dataObject = JSON.parse(data);\n        return resolve(dataObject);\n      } catch (ex) {\n        return reject(filepath + ' is a corrupted/malformed file.');\n      }\n    });\n  });\n};\n\nexport default class LocalEventsFunctionsExtensionOpener {\n  static chooseEventsFunctionExtensionFile = (): Promise<?string> => {\n    return new Promise((resolve, reject) => {\n      if (!dialog) return reject('Not supported');\n\n      const browserWindow = electron.remote.getCurrentWindow();\n      dialog.showOpenDialog(\n        browserWindow,\n        {\n          title: 'Import an extension in the project',\n          properties: ['openFile'],\n          message: 'Choose an extension file to import (.json file)',\n          filters: [\n            {\n              name: 'GDevelop 5 \"events based\" extension',\n              extensions: ['json'],\n            },\n          ],\n        },\n        paths => {\n          if (!paths || !paths.length) return resolve(null);\n\n          return resolve(paths[0]);\n        }\n      );\n    });\n  };\n\n  static readEventsFunctionExtensionFile = (\n    filepath: string\n  ): Promise<Object> => {\n    return readJSONFile(filepath);\n  };\n}\n","// @flow\nimport React from 'react';\nimport MainFrame from './MainFrame';\nimport Window from './Utils/Window';\nimport ExportDialog from './Export/ExportDialog';\nimport CreateProjectDialog from './ProjectCreation/CreateProjectDialog';\nimport Authentification from './Utils/GDevelopServices/Authentification';\nimport './UI/iconmoon-font.css'; // Styles for Iconmoon font.\n\n// Import for Electron powered IDE.\nimport ExternalEditor from './ExternalEditor';\nimport LocalExamples from './ProjectCreation/LocalExamples';\nimport LocalStarters from './ProjectCreation/LocalStarters';\nimport localResourceSources from './ResourcesList/LocalResourceSources';\nimport localResourceExternalEditors from './ResourcesList/LocalResourceExternalEditors';\nimport LocalProjectWriter from './ProjectsStorage/LocalProjectWriter';\nimport LocalProjectOpener from './ProjectsStorage/LocalProjectOpener';\nimport LocalPreviewLauncher from './Export/LocalExporters/LocalPreviewLauncher';\nimport { getLocalExporters } from './Export/LocalExporters';\nimport ElectronMainMenu from './MainFrame/ElectronMainMenu';\nimport makeExtensionsLoader from './JsExtensionsLoader/LocalJsExtensionsLoader';\nimport { makeLocalEventsFunctionCodeWriter } from './EventsFunctionsExtensionsLoader/CodeWriters/LocalEventsFunctionCodeWriter';\nimport ObjectsEditorService from './ObjectEditor/ObjectsEditorService';\nimport ObjectsRenderingService from './ObjectsRendering/ObjectsRenderingService';\nimport Providers from './MainFrame/Providers';\nimport LocalEventsFunctionsExtensionWriter from './EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionWriter';\nimport LocalEventsFunctionsExtensionOpener from './EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionOpener';\nconst gd = global.gd;\n\nexport const create = (authentification: Authentification) => {\n  Window.setUpContextMenu();\n\n  let app = null;\n  const appArguments = Window.getArguments();\n\n  if (appArguments['server-port']) {\n    app = (\n      <Providers\n        authentification={authentification}\n        disableCheckForUpdates={!!appArguments['disable-update-check']}\n        eventsFunctionCodeWriter={null}\n        eventsFunctionsExtensionWriter={null}\n        eventsFunctionsExtensionOpener={null}\n      >\n        {({ i18n, eventsFunctionsExtensionsState }) => (\n          <ExternalEditor\n            serverPort={appArguments['server-port']}\n            isIntegrated={appArguments['mode'] === 'integrated'}\n            editor={appArguments['editor']}\n            editedElementName={appArguments['edited-element-name']}\n          >\n            <MainFrame\n              i18n={i18n}\n              eventsFunctionsExtensionsState={eventsFunctionsExtensionsState}\n              resourceSources={localResourceSources}\n              authentification={authentification}\n              onReadFromPathOrURL={() =>\n                Promise.reject('Should never be called')\n              }\n              resourceExternalEditors={localResourceExternalEditors}\n              initialPathsOrURLsToOpen={[]}\n            />\n          </ExternalEditor>\n        )}\n      </Providers>\n    );\n  } else {\n    app = (\n      <Providers\n        authentification={authentification}\n        disableCheckForUpdates={!!appArguments['disable-update-check']}\n        eventsFunctionCodeWriter={makeLocalEventsFunctionCodeWriter()}\n        eventsFunctionsExtensionWriter={LocalEventsFunctionsExtensionWriter}\n        eventsFunctionsExtensionOpener={LocalEventsFunctionsExtensionOpener}\n      >\n        {({ i18n, eventsFunctionsExtensionsState }) => (\n          <ElectronMainMenu i18n={i18n}>\n            <MainFrame\n              i18n={i18n}\n              eventsFunctionsExtensionsState={eventsFunctionsExtensionsState}\n              previewLauncher={<LocalPreviewLauncher />}\n              renderExportDialog={(props) => <ExportDialog {...props} exporters={getLocalExporters()} />}\n              createDialog={\n                <CreateProjectDialog\n                  examplesComponent={LocalExamples}\n                  startersComponent={LocalStarters}\n                />\n              }\n              onSaveProject={LocalProjectWriter.saveProject}\n              onSaveProjectAs={LocalProjectWriter.saveProjectAs}\n              onAutoSaveProject={LocalProjectWriter.autoSaveProject}\n              onChooseProject={LocalProjectOpener.chooseProjectFile}\n              onReadFromPathOrURL={LocalProjectOpener.readProjectFile}\n              shouldOpenAutosave={LocalProjectOpener.shouldOpenAutosave}\n              resourceSources={localResourceSources}\n              resourceExternalEditors={localResourceExternalEditors}\n              authentification={authentification}\n              extensionsLoader={makeExtensionsLoader({\n                gd,\n                objectsEditorService: ObjectsEditorService,\n                objectsRenderingService: ObjectsRenderingService,\n                filterExamples: !Window.isDev(),\n              })}\n              initialPathsOrURLsToOpen={appArguments['_']}\n            />\n          </ElectronMainMenu>\n        )}\n      </Providers>\n    );\n  }\n\n  return app;\n};\n","import optionalRequire from '../../Utils/OptionalRequire.js';\nvar fs = optionalRequire('fs-extra');\nvar path = optionalRequire('path');\nvar os = optionalRequire('os');\nconst gd = global.gd;\n\nexport default {\n  mkDir: function(path) {\n    try {\n      fs.mkdirsSync(path);\n    } catch (e) {\n      console.log('mkDir(' + path + ') failed: ' + e);\n      return false;\n    }\n    return true;\n  },\n  dirExists: function(path) {\n    return fs.existsSync(path);\n  },\n  clearDir: function(path) {\n    var files = [];\n    var that = this;\n    if (fs.existsSync(path)) {\n      files = fs.readdirSync(path);\n      files.forEach(function(file) {\n        var curPath = path + '/' + file;\n        if (fs.lstatSync(curPath).isDirectory()) {\n          // recurse\n          that.clearDir(curPath);\n        } else {\n          // delete file\n          fs.unlinkSync(curPath);\n        }\n      });\n    }\n  },\n  getTempDir: function() {\n    return os.tmpdir();\n  },\n  fileNameFrom: function(fullpath) {\n    if (this._isExternalURL(fullpath)) return fullpath;\n\n    fullpath = this._translateURL(fullpath);\n    return path.basename(fullpath);\n  },\n  dirNameFrom: function(fullpath) {\n    if (this._isExternalURL(fullpath)) return '';\n\n    fullpath = this._translateURL(fullpath);\n    return path.dirname(fullpath);\n  },\n  makeAbsolute: function(filename, baseDirectory) {\n    if (this._isExternalURL(filename)) return filename;\n\n    filename = this._translateURL(filename);\n    if (!this.isAbsolute(baseDirectory))\n      baseDirectory = path.resolve(baseDirectory);\n\n    return path.resolve(baseDirectory, path.normalize(filename));\n  },\n  makeRelative: function(filename, baseDirectory) {\n    if (this._isExternalURL(filename)) return filename;\n\n    filename = this._translateURL(filename);\n    return path.relative(baseDirectory, path.normalize(filename));\n  },\n  isAbsolute: function(fullpath) {\n    if (this._isExternalURL(fullpath)) return true;\n\n    if (fullpath.length === 0) return true;\n    fullpath = this._translateURL(fullpath);\n    return (\n      (fullpath.length > 0 && fullpath.charAt(0) === '/') ||\n      (fullpath.length > 1 && fullpath.charAt(1) === ':')\n    );\n  },\n  copyFile: function(source, dest) {\n    //URL are not copied.\n    if (this._isExternalURL(source)) return true;\n\n    source = this._translateURL(source);\n    try {\n      if (source !== dest) fs.copySync(source, dest);\n    } catch (e) {\n      console.log('copyFile(' + source + ', ' + dest + ') failed: ' + e);\n      return false;\n    }\n    return true;\n  },\n  copyDir: function(source, dest) {\n    throw new Error(\n      'copyDir was never tested, please check that it does what you want to.'\n    );\n\n    // try {\n    //   if (source !== dest)\n    //     fs.copySync(source, dest, {\n    //       clobber: true,\n    //     });\n    // } catch (e) {\n    //   console.log('copyDir(' + source + ', ' + dest + ') failed: ' + e);\n    //   return false;\n    // }\n    // return true;\n  },\n  writeToFile: function(file, contents) {\n    try {\n      fs.outputFileSync(file, contents);\n    } catch (e) {\n      console.log('writeToFile(' + file + ', ...) failed: ' + e);\n      return false;\n    }\n    return true;\n  },\n  readFile: function(file) {\n    try {\n      var contents = fs.readFileSync(file);\n      return contents.toString();\n    } catch (e) {\n      console.log('readFile(' + file + ') failed: ' + e);\n      return '';\n    }\n  },\n  readDir: function(path, ext) {\n    ext = ext.toUpperCase();\n    var output = new gd.VectorString();\n    try {\n      var files = [];\n      if (fs.existsSync(path)) {\n        files = fs.readdirSync(path);\n        files.forEach(function(file) {\n          if (\n            ext.length === 0 ||\n            file.toUpperCase().indexOf(ext, file.length - ext.length) !== -1\n          ) {\n            output.push_back(path + '/' + file);\n          }\n        });\n      }\n    } catch (e) {\n      console.log('readDir(' + path + ',' + ext + ') failed: ' + e);\n    }\n\n    return output;\n  },\n  fileExists: function(filename) {\n    filename = this._translateURL(filename);\n    try {\n      const stat = fs.statSync(filename);\n      return stat.isFile();\n    } catch (e) {\n      return false;\n    }\n  },\n  _isExternalURL: function(filename) {\n    return filename.substr(0, 4) === 'http' || filename.substr(0, 4) === 'ftp';\n  },\n  /**\n   * Return the filename associated to the URL on the server, relative to the games directory.\n   * (i.e: Transform g/mydirectory/myfile.png to mydirectory/myfile.png).\n   */\n  _translateURL: function(filename) {\n    if (filename.substr(0, 2) === 'g/' || filename.substr(0, 2) === 'g\\\\')\n      filename = filename.substr(2);\n\n    return filename;\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport React, { PureComponent } from 'react';\nimport TextField from '../TextField';\nimport FlatButton from '../FlatButton';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'baseline',\n  },\n  button: {\n    marginLeft: 10,\n  },\n  textField: {\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  type: 'export' | 'create-game',\n  value: string,\n  onChange: string => void,\n  defaultPath?: string,\n  fullWidth?: boolean,\n  floatingLabelText?: string,\n|};\n\ntype TitleAndMessage = {|\n  title: ?string,\n  message: ?string,\n|};\n\nexport default class LocalFolderPicker extends PureComponent<Props, {||}> {\n  _onChooseFolder = ({ title, message }: TitleAndMessage) => {\n    if (!dialog || !electron) return;\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showOpenDialog(\n      browserWindow,\n      {\n        title,\n        properties: ['openDirectory', 'createDirectory'],\n        message,\n        defaultPath: this.props.defaultPath,\n      },\n      paths => {\n        if (!paths || !paths.length) return;\n\n        this.props.onChange(paths[0]);\n      }\n    );\n  };\n\n  _getTitleAndMessage = (i18n: I18nType): TitleAndMessage => {\n    const { type } = this.props;\n    if (type === 'export') {\n      return {\n        title: i18n._(t`Choose an export folder`),\n        message: i18n._(t`Choose where to export the game`),\n      };\n    } else if (type === 'create-game') {\n      return {\n        title: i18n._(t`Choose a folder for the new game`),\n        message: i18n._(t`Choose where to create the game`),\n      };\n    }\n\n    return {\n      title: undefined,\n      message: undefined,\n    };\n  };\n\n  render() {\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <div\n            style={{\n              ...styles.container,\n              width: this.props.fullWidth ? '100%' : undefined,\n            }}\n          >\n            <TextField\n              style={styles.textField}\n              floatingLabelText={this.props.floatingLabelText}\n              floatingLabelFixed\n              type=\"text\"\n              hintText={t`Click to choose`}\n              value={this.props.value}\n              onChange={(event, value) => this.props.onChange(value)}\n            />\n            <FlatButton\n              label={<Trans>Choose folder</Trans>}\n              style={styles.button}\n              onClick={() =>\n                this._onChooseFolder(this._getTitleAndMessage(i18n))\n              }\n            />\n          </div>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\n\nimport optionalRequire from './OptionalRequire.js';\nconst fs = optionalRequire('fs');\nconst archiver = optionalRequire('archiver');\n\n/**\n * Archive the given folder to a file. Only available when running on Electron runtime.\n */\nexport const archiveFolder = ({\n  path,\n  outputFilename,\n}: {\n  path: string,\n  outputFilename: string,\n}): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    if (!fs || !archiver) return reject(new Error('Archiver unavailable'));\n\n    const output = fs.createWriteStream(outputFilename);\n    const archive = archiver('zip', {\n      zlib: { level: 9 }, // Sets the compression level.\n    });\n\n    output.on('close', () => {\n      console.log(\n        `Archive written at ${outputFilename}, ${archive.pointer()} total bytes.`\n      );\n      resolve(outputFilename);\n    });\n\n    archive.on('error', err => {\n      reject(err);\n    });\n\n    archive.pipe(output);\n\n    archive.directory(path, false);\n\n    archive.finalize();\n  });\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport React, { Component } from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport LocalFolderPicker from '../UI/LocalFolderPicker';\nimport Text from '../UI/Text';\nimport { sendNewGameCreated } from '../Utils/Analytics/EventSender';\nimport { Column, Line } from '../UI/Grid';\nimport { findExamples } from './LocalExamplesFinder';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { findEmptyPath } from './LocalPathFinder';\nimport ExamplesList from './ExamplesList';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nvar fs = optionalRequire('fs-extra');\n\ntype Props = {|\n  onOpen: string => void,\n  onExamplesLoaded: () => void,\n|};\n\ntype State = {|\n  outputPath: string,\n  exampleNames: ?Array<string>,\n|};\n\nexport const showGameFileCreationError = (\n  i18n: I18nType,\n  outputPath: string,\n  error: Error\n) => {\n  showWarningBox(\n    i18n._(\n      t`Unable to create the game in the specified folder. Check that you have permissions to write in this folder: ${outputPath} or choose another folder.`\n    ),\n    error\n  );\n};\n\nexport default class LocalExamples extends Component<Props, State> {\n  state = {\n    outputPath: findEmptyPath(\n      path && app\n        ? path.join(app.getPath('documents'), 'GDevelop projects')\n        : ''\n    ),\n    exampleNames: null,\n  };\n\n  componentDidMount() {\n    findExamples(examplesPath => {\n      fs.readdir(examplesPath, (error, exampleNames) => {\n        if (error) {\n          console.error('Unable to read examples:', error);\n          return;\n        }\n\n        this.setState(\n          {\n            exampleNames: exampleNames.filter(name => name !== '.DS_Store'),\n          },\n          () => this.props.onExamplesLoaded()\n        );\n      });\n    });\n  }\n\n  _handleChangePath = (outputPath: string) =>\n    this.setState({\n      outputPath,\n    });\n\n  createFromExample = (i18n: I18nType, exampleName: string) => {\n    const { outputPath } = this.state;\n    if (!fs || !outputPath) return;\n\n    findExamples(examplesPath => {\n      try {\n        fs.mkdirsSync(outputPath);\n        fs.copySync(path.join(examplesPath, exampleName), outputPath);\n      } catch (error) {\n        showGameFileCreationError(i18n, outputPath, error);\n        return;\n      }\n\n      this.props.onOpen(path.join(outputPath, exampleName + '.json'));\n      sendNewGameCreated(exampleName);\n    });\n  };\n\n  render() {\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Column noMargin>\n            <Line>\n              <Column>\n                <Text>\n                  <Trans>Choose or search for an example to open:</Trans>\n                </Text>\n              </Column>\n            </Line>\n            <Line>\n              <ExamplesList\n                exampleNames={this.state.exampleNames}\n                onCreateFromExample={exampleName =>\n                  this.createFromExample(i18n, exampleName)\n                }\n              />\n            </Line>\n            <Divider />\n            <Line expand>\n              <Column expand>\n                <LocalFolderPicker\n                  fullWidth\n                  value={this.state.outputPath}\n                  onChange={this._handleChangePath}\n                  type=\"create-game\"\n                />\n              </Column>\n            </Line>\n          </Column>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\n\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst app = electron ? electron.remote.app : null;\nconst fs = optionalRequire('fs');\nconst process = optionalRequire('process');\n\nconst tryPath = (\n  path: string,\n  onExists: string => void,\n  onNoAccess: Function\n) =>\n  fs.access(path, fs.constants.R_OK, err => {\n    if (!err) onExists(path);\n    else onNoAccess();\n  });\n\nexport const findExamples = (cb: (?string) => void) => {\n  if (!process || !fs) return '';\n\n  const appPath = app ? app.getAppPath() : process.cwd();\n\n  // First try to find examples in app resources folder\n  tryPath(path.join(appPath, '..', 'examples'), cb, () => {\n    tryPath(\n      path.join(appPath, '..', '..', 'app', 'resources', 'examples'),\n      cb,\n      () => {\n        cb(null);\n      }\n    );\n  });\n};\n","import generateName from '../Utils/NewNameGenerator';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst path = optionalRequire('path');\nvar fs = optionalRequire('fs-extra');\n\nexport const findEmptyPath = basePath => {\n  if (!path) return basePath;\n\n  const folderName = generateName('My project', name => {\n    try {\n      fs.accessSync(path.join(basePath, name));\n    } catch (ex) {\n      return false;\n    }\n    return true;\n  });\n\n  return path.join(basePath, folderName);\n};\n","// @flow\n// TODO: This module could be published on npm if useful.\nimport newNameGenerator from './NewNameGenerator';\nimport slugs from 'slugs';\n\ntype PartialObjectDescription = {|\n  reference: string,\n  object: Object,\n|};\n\ntype Reference = {\n  referenceTo: string,\n};\n\ntype SplitConfiguration = {|\n  pathSeparator: string,\n  getArrayItemReferenceName: (\n    object: Object,\n    currentReference: string\n  ) => string,\n  shouldSplit: (path: string) => boolean,\n  isReferenceMagicPropertyName: string,\n|};\n\ntype UnsplitConfiguration = {|\n  isReferenceMagicPropertyName: string,\n  getReferencePartialObject: (referencePath: string) => Promise<Object>,\n  maxUnsplitDepth?: number,\n|};\n\n/**\n * Mutate the given object to split it into multiple partial objects.\n * Partial objects will be replaced by references.\n *\n * @param object The object to be split.\n * @param configuration Configuration to be used to split the object.\n */\nexport const split = (\n  object: Object,\n  {\n    pathSeparator,\n    getArrayItemReferenceName,\n    shouldSplit,\n    isReferenceMagicPropertyName,\n  }: SplitConfiguration\n): Array<PartialObjectDescription> => {\n  const partialObjects = [];\n  const createReference = (reference, object): Reference => {\n    partialObjects.push({\n      reference,\n      object,\n    });\n\n    return {\n      [isReferenceMagicPropertyName]: true,\n      referenceTo: reference,\n    };\n  };\n\n  const splitObject = (\n    currentObject: Object,\n    currentPath: string,\n    currentReference: string\n  ) => {\n    if (currentObject !== null && typeof currentObject === 'object') {\n      if (Array.isArray(currentObject)) {\n        for (let index in currentObject) {\n          const itemPath = currentPath + pathSeparator + '*';\n          if (shouldSplit(itemPath)) {\n            const partialObject = currentObject[index];\n            const name = getArrayItemReferenceName(\n              partialObject,\n              currentReference\n            );\n            const itemReference = currentReference + pathSeparator + name;\n\n            currentObject[index] = createReference(\n              itemReference,\n              partialObject\n            );\n\n            splitObject(partialObject, itemPath, itemReference);\n          } else {\n            const itemReference = currentReference + pathSeparator + index;\n\n            splitObject(currentObject[index], itemPath, itemReference);\n          }\n        }\n      } else {\n        for (let propertyName in currentObject) {\n          const propertyPath = currentPath + pathSeparator + propertyName;\n          const propertyReference =\n            currentReference + pathSeparator + propertyName;\n          if (shouldSplit(propertyPath)) {\n            const partialObject = currentObject[propertyName];\n\n            currentObject[propertyName] = createReference(\n              propertyReference,\n              partialObject\n            );\n\n            splitObject(partialObject, propertyPath, propertyReference);\n          } else {\n            splitObject(\n              currentObject[propertyName],\n              propertyPath,\n              propertyReference\n            );\n          }\n        }\n      }\n    }\n  };\n\n  splitObject(object, '', '');\n  return partialObjects;\n};\n\n/**\n * Mutate the given object to recompose it from partial objects.\n * References to partial objects will be fetched as needed.\n *\n * @param object The object to be unsplit.\n * @param configuration Configuration to be used to unsplit the object.\n */\nexport const unsplit = (\n  object: Object,\n  {\n    isReferenceMagicPropertyName,\n    getReferencePartialObject,\n    maxUnsplitDepth,\n  }: UnsplitConfiguration\n): Promise<void> => {\n  const isReference = (object: Object): ?Reference => {\n    if (object[isReferenceMagicPropertyName] === true) {\n      return object;\n    }\n\n    return null;\n  };\n\n  const unsplitObject = (\n    currentObject: Object,\n    depth: number\n  ): Promise<void> => {\n    if (maxUnsplitDepth !== undefined && depth >= maxUnsplitDepth) {\n      return Promise.resolve();\n    }\n\n    if (currentObject !== null && typeof currentObject === 'object') {\n      const keys = Object.keys(currentObject);\n      if (keys) {\n        return Promise.all(\n          keys.map(indexOrPropertyName => {\n            const reference = isReference(currentObject[indexOrPropertyName]);\n            if (reference) {\n              return getReferencePartialObject(reference.referenceTo).then(\n                partialObject => {\n                  currentObject[indexOrPropertyName] = partialObject;\n\n                  return unsplitObject(\n                    currentObject[indexOrPropertyName],\n                    depth + 1\n                  );\n                }\n              );\n            }\n\n            return unsplitObject(currentObject[indexOrPropertyName], depth + 1);\n          })\n        ).then(() => {});\n      }\n    }\n\n    return Promise.resolve();\n  };\n\n  return unsplitObject(object, 0);\n};\n\n/**\n * A helper that can be used to split according to a list of hardcoded paths\n */\nexport const splitPaths = (paths: Set<string>) => {\n  return (path: string) => paths.has(path);\n};\n\n/**\n * A helper that can be used to get the name of items in array using an hardcoded property name.\n */\nexport const getNameFromProperty = (propertyName: string) => {\n  return (object: Object): string => {\n    const property = object[propertyName];\n    if (typeof property !== 'string') {\n      throw new Error(`Property ${propertyName} is not a string`);\n    }\n\n    return property;\n  };\n};\n\n/**\n * A helper that can be used to get the name of items in array using an hardcoded property name.\n */\nexport const getSlugifiedUniqueNameFromProperty = (propertyName: string) => {\n  const existingNamesForReference = {};\n\n  return (object: Object, currentReference: string): string => {\n    const property = object[propertyName];\n    if (typeof property !== 'string') {\n      throw new Error(`Property ${propertyName} is not a string`);\n    }\n\n    existingNamesForReference[currentReference] =\n      existingNamesForReference[currentReference] || {};\n    const newName = newNameGenerator(\n      slugs(property),\n      name => !!existingNamesForReference[currentReference][name]\n    );\n    existingNamesForReference[currentReference][newName] = true;\n    return newName;\n  };\n};\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { sendExportLaunched } from '../../Utils/Analytics/EventSender';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport { findGDJS } from './LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport Window from '../../Utils/Window';\nimport { getHelpLink } from '../../Utils/HelpLink';\nimport AlertMessage from '../../UI/AlertMessage';\nimport Text from '../../UI/Text';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\nexport default class LocalExport extends Component {\n  state = {\n    exportFinishedDialogOpen: false,\n    outputDir: '',\n  };\n\n  componentDidMount() {\n    const { project } = this.props;\n    this.setState({\n      outputDir: project ? project.getLastCompilationDirectory() : '',\n    });\n  }\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n        resolve({\n          exporter,\n        });\n      });\n    });\n  };\n\n  launchExport = () => {\n    const { project } = this.props;\n    if (!project) return;\n\n    sendExportLaunched('local');\n\n    const outputDir = this.state.outputDir;\n    project.setLastCompilationDirectory(outputDir);\n\n    LocalExport.prepareExporter()\n      .then(({ exporter }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        this.setState({\n          exportFinishedDialogOpen: true,\n        });\n      })\n      .catch(err => {\n        showErrorBox('Unable to export the game', err);\n      });\n  };\n\n  openExportFolder = () => {\n    if (shell) shell.openItem(this.state.outputDir);\n  };\n\n  render() {\n    const { project } = this.props;\n    if (!project) return null;\n\n    return (\n      <Column noMargin>\n        <Line>\n          <Text>\n            <Trans>\n              This will export your game to a folder that you can then upload on\n              a website or on game hosting like itch.io.\n            </Trans>\n          </Text>\n        </Line>\n        <Line>\n          <LocalFolderPicker\n            type=\"export\"\n            value={this.state.outputDir}\n            defaultPath={project.getLastCompilationDirectory()}\n            onChange={value => this.setState({ outputDir: value })}\n            fullWidth\n          />\n        </Line>\n        <Line>\n          <Spacer expand />\n          <RaisedButton\n            label={<Trans>Export</Trans>}\n            primary={true}\n            onClick={this.launchExport}\n            disabled={!this.state.outputDir}\n          />\n        </Line>\n        <Dialog\n          title={<Trans>Export finished</Trans>}\n          actions={[\n            <FlatButton\n              key=\"open\"\n              label={<Trans>Open folder</Trans>}\n              primary={true}\n              onClick={this.openExportFolder}\n            />,\n            <FlatButton\n              key=\"close\"\n              label={<Trans>Close</Trans>}\n              primary={false}\n              onClick={() =>\n                this.setState({\n                  exportFinishedDialogOpen: false,\n                })\n              }\n            />,\n          ]}\n          modal\n          open={this.state.exportFinishedDialogOpen}\n        >\n          <Text>\n            <Trans>\n              You can now upload the game to a web hosting to play to the game.\n            </Trans>\n          </Text>\n          <AlertMessage kind=\"warning\">\n            <Trans>\n              Your game won't work if you open index.html on your computer. You\n              must upload it to a web hosting (Kongregate, Itch.io, etc...) or a\n              web server to run it.\n            </Trans>\n          </AlertMessage>\n          <Spacer />\n          <RaisedButton\n            fullWidth\n            primary\n            onClick={() =>\n              Window.openExternalURL(\n                getHelpLink('/publishing/publishing-to-gamejolt-store')\n              )\n            }\n            label={<Trans>Publish your game on Game Jolt</Trans>}\n          />\n          <RaisedButton\n            fullWidth\n            primary\n            onClick={() =>\n              Window.openExternalURL(\n                getHelpLink('/publishing/publishing-to-kongregate-store')\n              )\n            }\n            label={<Trans>Publish your game on Kongregate</Trans>}\n          />\n          <RaisedButton\n            fullWidth\n            primary\n            onClick={() =>\n              Window.openExternalURL(\n                getHelpLink('/publishing/publishing-to-itch-io')\n              )\n            }\n            label={<Trans>Publish your game on Itch.io</Trans>}\n          />\n          <FlatButton\n            fullWidth\n            onClick={() => Window.openExternalURL(getHelpLink('/publishing'))}\n            label={<Trans>Learn more about publishing</Trans>}\n          />\n        </Dialog>\n      </Column>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Column, Line } from '../UI/Grid';\nimport { type Limit, type Subscription } from '../Utils/GDevelopServices/Usage';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\nimport Text from '../UI/Text';\n\ntype Props = {|\n  subscription: ?Subscription,\n  limit: ?Limit,\n  onChangeSubscription: Function,\n|};\n\nexport default ({ subscription, limit, onChangeSubscription }: Props) => {\n  if (!limit) return <PlaceholderLoader />;\n  const hasSubscription = subscription && !!subscription.planId;\n  const noSubscription = subscription && !subscription.planId;\n\n  return (\n    <Column noMargin>\n      <Text>\n        <Trans>\n          You have {Math.max(limit.max - limit.current, 0)} remaining builds for\n          today (out of {limit.max}).\n        </Trans>\n      </Text>\n      {hasSubscription && limit.limitReached && (\n        <Text>\n          <Trans>\n            Need more power? You can upgrade to a new plan to increase the\n            limit!\n          </Trans>\n        </Text>\n      )}\n      {hasSubscription && limit.limitReached && (\n        <Line justifyContent=\"center\" alignItems=\"center\">\n          <RaisedButton\n            label={<Trans>Upgrade my account</Trans>}\n            onClick={onChangeSubscription}\n            primary\n          />\n        </Line>\n      )}\n      {noSubscription && (\n        <Text>\n          <Trans>\n            You don't have a subscription. Get one to increase the limits!\n          </Trans>\n        </Text>\n      )}\n      {noSubscription && (\n        <Line justifyContent=\"center\" alignItems=\"center\">\n          <RaisedButton\n            label={<Trans>Get a subscription</Trans>}\n            onClick={onChangeSubscription}\n            primary\n          />\n        </Line>\n      )}\n    </Column>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Line, Spacer } from '../../UI/Grid';\nimport BuildProgress from './BuildProgress';\nimport { type Build } from '../../Utils/GDevelopServices/Build';\nimport EmptyMessage from '../../UI/EmptyMessage';\nimport Text from '../../UI/Text';\n\nconst styles = {\n  stepper: { flex: 1 },\n  linearProgress: { flex: 1 },\n};\n\nexport type BuildStep =\n  | ''\n  | 'export'\n  | 'compress'\n  | 'upload'\n  | 'waiting-for-build'\n  | 'build';\n\ntype Props = {|\n  exportStep: BuildStep,\n  onDownload: (key: string) => void,\n  build: ?Build,\n  uploadMax: number,\n  uploadProgress: number,\n  errored: boolean,\n  showSeeAllMyBuildsExplanation?: boolean,\n|};\n\n/**\n * Can be used in an exporter to show the overall progress of a build\n * (including local archiving/upload steps and remote build progress)\n */\nexport default ({\n  exportStep,\n  onDownload,\n  build,\n  uploadMax,\n  uploadProgress,\n  errored,\n  showSeeAllMyBuildsExplanation,\n}: Props) => (\n  <Stepper\n    activeStep={\n      exportStep === 'export'\n        ? 0\n        : exportStep === 'compress' || exportStep === 'upload'\n        ? 1\n        : exportStep === 'waiting-for-build' || exportStep === 'build'\n        ? 2\n        : -1\n    }\n    orientation=\"vertical\"\n    style={styles.stepper}\n  >\n    <Step>\n      <StepLabel>\n        <Trans>Game export</Trans>\n      </StepLabel>\n      <StepContent>\n        <Line alignItems=\"center\">\n          <CircularProgress size={20} />\n          <Spacer />\n          <Text>\n            <Trans>Export in progress...</Trans>\n          </Text>\n        </Line>\n      </StepContent>\n    </Step>\n    <Step>\n      <StepLabel>\n        <Trans>Upload to build service</Trans>\n      </StepLabel>\n      <StepContent>\n        {errored ? (\n          <Text>\n            <Trans>\n              Can't upload your game to the build service. Please check your\n              internet connection or try again later.\n            </Trans>\n          </Text>\n        ) : exportStep === 'compress' ? (\n          <Line alignItems=\"center\">\n            <CircularProgress size={20} />\n            <Spacer />\n            <Text>\n              <Trans>Compressing before upload...</Trans>\n            </Text>\n          </Line>\n        ) : (\n          <Line alignItems=\"center\" expand>\n            <LinearProgress\n              style={styles.linearProgress}\n              value={uploadMax > 0 ? (uploadProgress / uploadMax) * 100 : 0}\n              variant=\"determinate\"\n            />\n          </Line>\n        )}\n      </StepContent>\n    </Step>\n    <Step>\n      <StepLabel>\n        <Trans>Build and download</Trans>\n      </StepLabel>\n      <StepContent>\n        {errored && (\n          <Text>\n            <Trans>\n              Build could not start or errored. Please check your internet\n              connection or try again later.\n            </Trans>\n          </Text>\n        )}\n        {!build && !errored && (\n          <Text>\n            <Trans>Build is starting...</Trans>\n          </Text>\n        )}\n        {build && <BuildProgress build={build} onDownload={onDownload} />}\n        {showSeeAllMyBuildsExplanation && (\n          <EmptyMessage>\n            <Trans>\n              If you close this window while the build is being done, you can\n              see its progress and download the game later by clicking on See\n              All My Builds below.\n            </Trans>\n          </EmptyMessage>\n        )}\n      </StepContent>\n    </Step>\n  </Stepper>\n);\n"],"sourceRoot":""}