{"version":3,"sources":["GameEngineFinder/BrowserS3GDJSFinder.js","Export/BrowserExporters/BrowserFileSystem.js","Utils/BrowserArchiver.js","ProjectCreation/BrowserStarters.js","ResourcesList/BrowserResourceSources.js","Export/BrowserExporters/BrowserS3PreviewLauncher/index.js","Export/BrowserExporters/BrowserS3PreviewLauncher/BrowserPreviewLinkDialog.js","Export/BrowserExporters/BrowserS3PreviewLauncher/BrowserPreviewErrorDialog.js","Export/BrowserExporters/BrowserS3FileSystem.js","Export/BrowserExporters/BrowserOnlineCordovaExport.js","Utils/Zip.js/index.js","Export/BrowserExporters/BrowserOnlineElectronExport.js","Export/BrowserExporters/BrowserOnlineWebExport.js","Export/BrowserExporters/BrowserHTML5Export.js","Export/BrowserExporters/BrowserCordovaExport.js","Export/BrowserExporters/BrowserElectronExport.js","Export/BrowserExporters/BrowserCocos2dExport.js","Export/BrowserExporters/BrowserFacebookInstantGamesExport.js","JsExtensionsLoader/BrowserJsExtensionsLoader.js","ProjectsStorage/GoogleDriveStorageProvider/index.js","UI/CustomSvgIcons/GoogleDrive.js","ProjectsStorage/GoogleDriveStorageProvider/GoogleDriveFileOrFolderPicker.js","ProjectsStorage/GoogleDriveStorageProvider/GoogleDriveSaveAsDialog.js","Export/BrowserExporters/index.js","Utils/BlobDownloadUrlHolder.js","Utils/GDevelopServices/Preview.js","Export/BrowserExporters/BrowserFileUploader.js","ProjectsStorage/InternalFileStorageProvider/InternalExampleFiles.js","ProjectsStorage/InternalFileStorageProvider/index.js","ProjectCreation/BrowserExamples.js","MainFrame/BrowserIntroDialog.js","ResourcesList/BrowserResourceExternalEditors.js","EventsFunctionsExtensionsLoader/CodeWriters/BrowserS3EventsFunctionCodeWriter.js","ProjectsStorage/DownloadFileStorageProvider/DownloadSaveAsDialog.js","ProjectsStorage/DownloadFileStorageProvider/index.js","UI/CustomSvgIcons/Dropbox.js","ProjectsStorage/DropboxStorageProvider/index.js","UI/CustomSvgIcons/OneDrive.js","ProjectsStorage/OneDriveStorageProvider/index.js","BrowserApp.js"],"names":["filesToDownload","preview","web","cordova","electron","findGDJS","fileSet","gdjsRoot","getIDEVersion","Promise","all","map","relativeFilePath","url","fetch","then","response","ok","console","error","Error","status","text","filePath","filesContent","gd","global","isURL","filename","substr","pathPosix","path","posix","BrowserFileSystem","textFiles","_textFiles","_filesToDownload","getAllTextFilesIn","pathPrefix","Object","keys","filter","indexOf","getAllUrlFilesIn","mkDir","dirExists","clearDir","forEach","getTempDir","fileNameFrom","fullpath","basename","dirNameFrom","dirname","makeAbsolute","filePathOrURL","baseDirectoryOrURL","isAbsolute","resolve","normalize","makeRelative","substring","length","warn","relative","charAt","copyFile","source","dest","writeToFile","content","readFile","file","readDir","ext","toUpperCase","output","VectorString","upperCaseFilePath","push_back","fileExists","normalizedFilePath","textFileDescriptor","eachCallback","array","callback","done","index","callNextCallback","downloadUrlsToBlobs","a","urlFiles","onProgress","count","blob","downloadedBlobs","info","archiveFiles","blobFiles","basePath","initializeZipJs","zipJs","zippedFilesCount","totalFilesCount","reject","createWriter","BlobWriter","zipWriter","add","BlobReader","TextReader","close","BrowserStarters","noMargin","expand","leftIcon","iconSize","src","primaryText","secondaryText","secondaryTextLines","onClick","sendNewGameCreated","props","onOpen","InternalFileStorageProvider","fileIdentifier","project","ProjectHelper","createNewGDJSProject","onCreate","alignItems","justifyContent","label","onShowExamples","Component","styles","explanations","textAlign","margin","publicImageUrls","publicAudioUrls","publicFontUrls","publicVideoUrls","publicJsonUrls","nameFromUrl","urlParts","split","replace","GenericResourcesChooser","state","open","resolveWithResources","chooseResources","setState","_onChoose","chosenResourceUrl","newResource","createNewResource","setFile","setName","_onClose","listItems","urls","key","urlsAreImages","undefined","Window","openExternalURL","this","actions","primary","title","cannotBeDismissed","style","_onOpenWebsite","name","displayName","kind","component","_chooser","AudioResource","ref","chooser","React","ImageResource","FontResource","VideoResource","JsonResource","BrowserS3PreviewLauncher","canDoNetworkPreview","canDoHotReload","showPreviewLinkDialog","_openPreviewWindow","windowObjectReference","window","_prepareExporter","prefix","makeTimestampedId","outputDir","getBaseUrl","browserS3FileSystem","BrowserS3FileSystem","bucketBaseUrl","fileSystem","assignIn","AbstractFileSystemJS","exporter","Exporter","setCodeOutputDirectory","launchPreview","previewOptions","layout","externalLayout","previewExportOptions","PreviewExportOptions","setLayoutName","getName","setExternalLayoutName","exportProjectForPixiPreview","delete","uploadPendingObjects","finalUrl","catch","onClose","BrowserPreviewLinkDialog","_makeOnOpen","i18n","showErrorBox","_","BrowserPreviewErrorDialog","onRequestClose","code","message","_pendingUploadObjects","_allCopiedExternalUrls","Set","uploadObject","result","log","baseDirectory","fullPath","contents","fileExtension","extname","push","Key","Body","ContentType","_indexedFilesContent","upperCaseUrl","browserOnlineCordovaExportPipeline","onlineBuildType","getInitialExportState","canLaunchBuild","renderHeader","renderLaunchButtonLabel","prepareExporter","context","abstractFileSystem","launchExport","exportOptions","MapStringBoolean","set","exportWholePixiProject","launchResourcesDownload","updateStepProgress","launchCompression","launchUpload","blobFile","getBuildFileUploadOptions","uploadOptions","uploadBlobFile","launchOnlineBuild","exportState","userProfile","uploadBucketKey","getAuthorizationHeader","profile","buildCordovaAndroid","uid","zipJsLoaded","zipJsLoadingPromise","zip","loadScript","PUBLIC_URL","workerScripts","deflater","inflater","browserOnlineElectronExportPipeline","targets","buildElectron","browserOnlineWebExportPipeline","buildWeb","browserHTML5ExportPipeline","renderDoneFooter","compressionOutput","renderGameButton","blobDownloadUrl","fullWidth","body","document","createElement","appendChild","display","href","download","click","removeChild","openBlobDownloadUrl","browserCordovaExportPipeline","browserElectronExportPipeline","browserCocos2dExportPipeline","debugMode","updateExportState","onToggle","e","check","prevState","toggled","labelPosition","exportWholeCocos2dProject","browserFacebookInstantGamesExportPipeline","jsExtensions","extensionModule","require","objectsRenderingServiceModules","makeExtensionsLoader","objectsEditorService","objectsRenderingService","filterExamples","loadAllExtensions","includes","registerEditorConfigurations","requirePath","registerModule","registerInstanceRenderers","extensionModulePath","loadExtension","JsPlatform","get","DEVELOPER_KEY","DISCOVERY_DOCS","SCOPE","apisLoaded","apisLoadingPromise","initializeApis","gapi","load","auth2LoadPromise","auth2","init","apiKey","clientId","discoveryDocs","scope","client","setApiKey","driveLoadPromise","onerror","isAuthenticated","authenticate","googleAuth","getAuthInstance","isSignedIn","currentUser","listen","authenticated","signIn","googleUser","getAuthResponse","patchJsonFile","fileId","method","headers","Headers","Authorization","access_token","res","showFilePicker","selectFolderEnabled","showUploadView","google","picker","pickerBuilder","PickerBuilder","addView","DocsView","setIncludeFolders","setSelectFolderEnabled","setOAuthToken","setDeveloperKey","setAppId","setCallback","data","Response","ACTION","Action","PICKED","doc","DOCUMENTS","id","Document","ID","NAME","parentId","PARENT_ID","TYPE","Type","LOCATION","MIME_TYPE","type","dispose","CANCEL","DocsUploadView","build","setVisible","pickerElements","getElementsByClassName","i","zIndex","internalName","renderIcon","getFileMetadataFromAppArguments","appArguments","googleDriveState","JSON","parse","ids","createOperations","setDialog","closeDialog","doesInitialOpenRequireUserInteraction","fileMetadata","fileContent","ex","onOpenWithPicker","googleDriveFileOrFolder","onSaveProject","serializeToJSON","wasSaved","onSaveProjectAs","onShowFilePicker","onCancel","onSave","selectedFileOrFolder","newFileName","drive","files","create","uploadType","parents","mimeType","fields","apiResponse","newFileId","getOpenErrorMessage","memo","d","container","position","width","button","marginLeft","textField","flex","TextField","floatingLabelText","floatingLabelFixed","hintText","value","onChange","RaisedButton","onOpenPicker","setSelectedFileOrFolder","setNewFileName","saving","setSaving","saveError","setSaveError","pickerError","setPickerError","dialogHidden","hideDialog","canCancel","Dialog","FlatButton","disabled","LeftLoader","isLoading","canSave","maxWidth","GoogleDriveFileOrFolderPicker","event","AlertMessage","getBrowserExporters","helpPage","description","exportPipeline","advanced","experimental","BlobDownloadUrlHolder","children","setBlobDownloadUrl","URL","revokeObjectURL","createObjectURL","params","getSignedUrl","contentType","signedUrl","axios","put","GDevelopGamePreviews","baseUrl","maxContentLength","Infinity","onUploadProgress","progressEvent","total","loaded","hiddenInOpenDialog","hiddenInSaveDialog","POSITIONAL_ARGUMENTS_KEY","internalExampleFiles","exampleNames","ExamplesInformation","BrowserExamples","ExamplesList","onCreateFromExample","exampleName","BetaIntroDialog","ResponsiveWindowMeasurer","windowWidth","Text","isFullscreen","Fragment","requestFullscreen","setTimeout","forceUpdate","icon","editors","edit","sendExternalEditorOpened","showMessageBox","makeBrowserS3EventsFunctionCodeWriter","onWriteFile","getPathFor","codeNamespace","slugs","getIncludeFileFor","writeFunctionCode","functionCodeNamespace","includeFile","writeBehaviorCode","behaviorCodeNamespace","DownloadSaveAsDialog","_download","stringify","serializeToJSObject","err","uri","encodeURI","downloadLink","onDone","SvgIcon","Dropbox","OneDrive","authentification","setUpContextMenu","getArguments","Providers","disableCheckForUpdates","makeEventsFunctionCodeWriter","eventsFunctionsExtensionWriter","eventsFunctionsExtensionOpener","eventsFunctionsExtensionsState","ProjectStorageProviders","storageProviders","GoogleDriveStorageProvider","DropboxStorageProvider","OneDriveStorageProvider","DownloadFileStorageProvider","defaultStorageProvider","getStorageProviderOperations","initialFileMetadataToOpen","getStorageProvider","UnsavedChangesContext","Consumer","unsavedChanges","MainFrame","renderPreviewLauncher","renderExportDialog","ExportDialog","exporters","allExportersRequireOnline","renderCreateDialog","CreateProjectDialog","examplesComponent","startersComponent","introDialog","resourceSources","browserResourceSources","resourceExternalEditors","browserResourceExternalEditors","extensionsLoader","ObjectsEditorService","ObjectsRenderingService","isDev"],"mappings":"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","file":"static/js/browser-app.ac9a05fe.chunk.js","sourcesContent":["// @flow\nimport { getIDEVersion } from '../Version';\n\ntype FileSet =\n  | 'preview'\n  | 'cordova'\n  | 'electron'\n  | 'web'\n  | 'cocos2d-js'\n  | 'facebook-instant-games';\n\nconst filesToDownload: { [FileSet]: Array<string> } = {\n  preview: ['/Runtime/index.html'],\n  web: ['/Runtime/index.html'],\n  'cocos2d-js': [\n    '/Runtime/Cocos2d/cocos2d-js-v3.10.js',\n    '/Runtime/Cocos2d/index.html',\n    '/Runtime/Cocos2d/main.js',\n    '/Runtime/Cocos2d/project.json',\n  ],\n  'facebook-instant-games': [\n    '/Runtime/FacebookInstantGames/fbapp-config.json',\n    '/Runtime/FacebookInstantGames/index.html',\n  ],\n  cordova: [\n    '/Runtime/Cordova/www/index.html',\n    '/Runtime/Cordova/config.xml',\n    '/Runtime/Cordova/package.json',\n  ],\n  electron: [\n    '/Runtime/index.html',\n    '/Runtime/Electron/main.js',\n    '/Runtime/Electron/package.json',\n  ],\n};\n\nexport type TextFileDescriptor = {| text: string, filePath: string |};\n\nexport const findGDJS = (\n  fileSet: FileSet\n): Promise<{|\n  gdjsRoot: string,\n  filesContent: Array<TextFileDescriptor>,\n|}> => {\n  // Get GDJS for this version. If you updated the version,\n  // run `newIDE/web0app/scripts/deploy-GDJS-Runtime` script.\n  const gdjsRoot = `https://resources.gdevelop-app.com/GDJS-${getIDEVersion()}`;\n\n  return Promise.all(\n    filesToDownload[fileSet].map(relativeFilePath => {\n      const url = gdjsRoot + relativeFilePath;\n\n      // Don't do any caching, rely on the browser cache only.\n      return fetch(url).then(response => {\n        if (!response.ok) {\n          console.error(`Error while downloading \"${url}\"`, response);\n          throw new Error(\n            `Error while downloading \"${url}\" (status: ${response.status})`\n          );\n        }\n        return response.text().then(text => ({\n          filePath: url,\n          text,\n        }));\n      });\n    })\n  ).then(filesContent => {\n    return {\n      gdjsRoot,\n      filesContent,\n    };\n  });\n};\n","// @flow\nimport path from 'path';\nconst gd: libGDevelop = global.gd;\n\nexport type BlobFileDescriptor = {|\n  filePath: string,\n  blob: Blob,\n|};\n\nexport type TextFileDescriptor = {|\n  filePath: string,\n  text: string,\n|};\n\nexport type UrlFileDescriptor = {|\n  filePath: string,\n  url: string,\n|};\n\ntype ConstructorArgs = {|\n  textFiles: Array<TextFileDescriptor>,\n|};\n\nconst isURL = (filename: string) => {\n  return (\n    filename.substr(0, 7) === 'http://' ||\n    filename.substr(0, 8) === 'https://' ||\n    filename.substr(0, 6) === 'ftp://'\n  );\n};\n\n// For some reason, `path.posix` is undefined when packaged\n// with webpack, so we're using `path` directly. As it's for the web-app,\n// it should always be the posix version. In tests on Windows,\n// it's necessary to use path.posix.\nconst pathPosix = path.posix || path;\n\n// TODO: Merge BrowserS3FileSystem into this? The way URLs are handled\n// is different though (BrowserS3FileSystem is not downloading anything\n// from URLs, while this file system does download files).\n\n/**\n * An in-memory \"file system\" that can be used for GDevelop exports.\n */\nexport default class BrowserFileSystem {\n  // The representation of the \"file system\":\n\n  /**\n   * Store all the text files (filepath => content)\n   * @private\n   */\n  _textFiles: { [string]: string } = {};\n\n  /**\n   * Store all the files that should be downloaded (filepath => url)\n   * @private\n   */\n  _filesToDownload: { [string]: string } = {};\n\n  /**\n   * Create a new in-memory file system.\n   */\n  constructor({ textFiles }: ConstructorArgs) {\n    textFiles.forEach(textFileDescriptor => {\n      this._textFiles[textFileDescriptor.filePath] = textFileDescriptor.text;\n    });\n  }\n\n  /**\n   * Returns all the in memory text files with the specified path prefix.\n   */\n  getAllTextFilesIn = (pathPrefix: string): Array<TextFileDescriptor> => {\n    return Object.keys(this._textFiles)\n      .filter(filePath => filePath.indexOf(pathPrefix) === 0)\n      .map(filePath => ({\n        filePath,\n        text: this._textFiles[filePath],\n      }));\n  };\n\n  /**\n   * Returns all the files that should be downloaded from a URL, with the specified path prefix.\n   */\n  getAllUrlFilesIn = (pathPrefix: string): Array<UrlFileDescriptor> => {\n    return Object.keys(this._filesToDownload)\n      .filter(filePath => filePath.indexOf(pathPrefix) === 0)\n      .map(filePath => ({\n        filePath,\n        url: this._filesToDownload[filePath],\n      }));\n  };\n\n  mkDir = (path: string) => {\n    // \"Directories\" are assumed to exist.\n    return true;\n  };\n  dirExists = (path: string) => {\n    // TODO: To be changed to be EnsureDirExists.\n    // \"Directories\" are assumed to exist.\n    return true;\n  };\n  clearDir = (path: string) => {\n    // Clear the files to be written in the specified directory.\n    const filePaths = Object.keys(this._textFiles);\n    filePaths.forEach(filePath => {\n      if (filePath.indexOf(path) === 0) {\n        delete this._textFiles[filePath];\n      }\n    });\n\n    return true;\n  };\n  getTempDir = () => {\n    return '/browser-file-system-tmp-dir';\n  };\n  fileNameFrom = (fullpath: string) => {\n    return pathPosix.basename(fullpath);\n  };\n  dirNameFrom = (fullpath: string) => {\n    return pathPosix.dirname(fullpath);\n  };\n  makeAbsolute = (filePathOrURL: string, baseDirectoryOrURL: string) => {\n    // URLs are always absolute\n    if (isURL(filePathOrURL)) return filePathOrURL;\n\n    if (!this.isAbsolute(baseDirectoryOrURL))\n      baseDirectoryOrURL = pathPosix.resolve(baseDirectoryOrURL);\n\n    return pathPosix.resolve(\n      baseDirectoryOrURL,\n      pathPosix.normalize(filePathOrURL)\n    );\n  };\n  makeRelative = (filePathOrURL: string, baseDirectoryOrURL: string) => {\n    if (isURL(filePathOrURL)) {\n      // Cutting the start if the URL is relative to the base URL\n      if (filePathOrURL.indexOf(baseDirectoryOrURL) === 0) {\n        return filePathOrURL.substring(baseDirectoryOrURL.length);\n      }\n\n      // Keep the URL \"absolute\" if on different domains.\n      console.warn(\n        `${filePathOrURL} cannot be made relative to ${baseDirectoryOrURL}, please double check this behavior is correct.`\n      );\n      return filePathOrURL;\n    }\n\n    // Paths are treated as usual paths.\n    return pathPosix.relative(\n      baseDirectoryOrURL,\n      pathPosix.normalize(filePathOrURL)\n    );\n  };\n  isAbsolute = (fullpath: string) => {\n    // URLs are always absolute\n    if (isURL(fullpath)) return true;\n\n    // Paths are absolute if starting from the root\n    return fullpath.length > 0 && fullpath.charAt(0) === '/';\n  };\n\n  copyFile = (source: string, dest: string) => {\n    // URLs are not copied, but marked as to be downloaded.\n    if (isURL(source)) {\n      if (isURL(dest)) {\n        console.error(\n          `Destination can't be a URL in copyFile (from ${source} to ${dest}).`\n        );\n        return false;\n      }\n\n      this._filesToDownload[pathPosix.normalize(dest)] = source;\n      return true;\n    }\n\n    // If this is a file that we have already in memory,\n    // copy its path.\n    if (!!this._textFiles[source]) {\n      this._textFiles[pathPosix.normalize(dest)] = this._textFiles[source];\n      return true;\n    }\n\n    console.error(`File not found in copyFile (from ${source} to ${dest}).`);\n    return false;\n  };\n\n  writeToFile = (filePath: string, content: string) => {\n    this._textFiles[pathPosix.normalize(filePath)] = content;\n    return true;\n  };\n\n  readFile = (file: string): string => {\n    if (this._textFiles[file]) return this._textFiles[file];\n\n    console.error(`Unknown file ${file}, returning an empty string`);\n    return '';\n  };\n\n  readDir = (path: string, ext: string) => {\n    ext = ext.toUpperCase();\n    var output = new gd.VectorString();\n\n    // Simulate ReadDir by returning all external URLs\n    // with the filename matching the extension.\n    Object.keys(this._filesToDownload).forEach(filePath => {\n      const upperCaseFilePath = filePath.toUpperCase();\n      if (\n        upperCaseFilePath.indexOf(ext) ===\n        upperCaseFilePath.length - ext.length\n      ) {\n        output.push_back(filePath);\n      }\n    });\n\n    return output;\n  };\n\n  fileExists = (filePath: string) => {\n    if (isURL(filePath)) return true;\n\n    const normalizedFilePath = pathPosix.normalize(filePath);\n    return (\n      !!this._textFiles[normalizedFilePath] ||\n      !!this._filesToDownload[normalizedFilePath]\n    );\n  };\n}\n","// @flow\n\nimport { initializeZipJs } from './Zip.js';\nimport path from 'path';\n\nexport type BlobFileDescriptor = {|\n  filePath: string,\n  blob: Blob,\n|};\n\nexport type TextFileDescriptor = {|\n  filePath: string,\n  text: string,\n|};\n\nexport type UrlFileDescriptor = {|\n  filePath: string,\n  url: string,\n|};\n\nfunction eachCallback<T>(\n  array: Array<T>,\n  callback: (T, () => void) => void,\n  done: () => void\n) {\n  if (!array.length) {\n    done();\n    return;\n  }\n  let index = 0;\n\n  const callNextCallback = () => {\n    callback(array[index], () => {\n      index++;\n      if (index >= array.length) {\n        done();\n      } else {\n        callNextCallback();\n      }\n    });\n  };\n\n  callNextCallback();\n}\n\nexport const downloadUrlsToBlobs = async ({\n  urlFiles,\n  onProgress,\n}: {|\n  urlFiles: Array<UrlFileDescriptor>,\n  onProgress: (count: number, total: number) => void,\n|}): Promise<Array<BlobFileDescriptor>> => {\n  let count = 0;\n  return Promise.all(\n    urlFiles\n      .filter(({ url }) => url.indexOf('.h') === -1) // TODO\n      .map(({ url, filePath }) => {\n        return fetch(url)\n          .then(response => {\n            if (!response.ok) {\n              console.error(`Error while downloading \"${url}\"`, response);\n              throw new Error(\n                `Error while downloading \"${url}\" (status: ${response.status})`\n              );\n            }\n            return response.blob();\n          })\n          .then(blob => {\n            count++;\n            onProgress(count, urlFiles.length);\n            return {\n              filePath,\n              blob,\n            };\n          });\n      })\n  ).then((downloadedBlobs: Array<BlobFileDescriptor>) => {\n    console.info('All download done');\n    return downloadedBlobs;\n  });\n};\n\n/**\n * Archive the specified blobs and texts into a zip file,\n * returned as a blob.\n */\nexport const archiveFiles = async ({\n  textFiles,\n  blobFiles,\n  basePath,\n  onProgress,\n}: {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n  basePath: string,\n  onProgress: (count: number, total: number) => void,\n|}): Promise<Blob> => {\n  const zipJs: ZipJs = await initializeZipJs();\n\n  let zippedFilesCount = 0;\n  let totalFilesCount = blobFiles.length + textFiles.length;\n\n  return new Promise((resolve, reject) => {\n    zipJs.createWriter(\n      new zipJs.BlobWriter('application/zip'),\n      function(zipWriter) {\n        eachCallback(\n          blobFiles,\n          ({ filePath, blob }, done) => {\n            // All files in a zip are relative\n            const relativeFilePath = path.relative(basePath, filePath);\n\n            zipWriter.add(\n              relativeFilePath,\n              new zipJs.BlobReader(blob),\n              () => {\n                zippedFilesCount++;\n                onProgress(zippedFilesCount, totalFilesCount);\n                done();\n              },\n              () => {\n                /* We don't track progress at the file level */\n              }\n            );\n          },\n          () => {\n            eachCallback(\n              textFiles,\n              ({ filePath, text }, done) => {\n                // All files in a zip are relative\n                const relativeFilePath = path.relative(basePath, filePath);\n\n                zipWriter.add(\n                  relativeFilePath,\n                  new zipJs.TextReader(text),\n                  () => {\n                    zippedFilesCount++;\n                    onProgress(zippedFilesCount, totalFilesCount);\n                    done();\n                  },\n                  () => {\n                    /* We don't track progress at the file level */\n                  }\n                );\n              },\n              () => {\n                zipWriter.close((blob: Blob) => {\n                  resolve(blob);\n                });\n              }\n            );\n          }\n        );\n      },\n      error => {\n        console.error('Error while making zip:', error);\n        reject(error);\n      }\n    );\n  });\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport { List, ListItem } from '../UI/List';\nimport Subheader from '../UI/Subheader';\nimport RaisedButton from '../UI/RaisedButton';\nimport { sendNewGameCreated } from '../Utils/Analytics/EventSender';\nimport { Column, Line } from '../UI/Grid';\nimport ListIcon from '../UI/ListIcon';\nimport Text from '../UI/Text';\nimport { type StorageProvider, type FileMetadata } from '../ProjectsStorage';\nimport InternalFileStorageProvider from '../ProjectsStorage/InternalFileStorageProvider';\nconst gd: libGDevelop = global.gd;\n\ntype Props = {|\n  onOpen: (\n    storageProvider: StorageProvider,\n    fileMetadata: FileMetadata\n  ) => void,\n  onCreate: (\n    gdProject,\n    storageProvider: ?StorageProvider,\n    fileMetadata: ?FileMetadata\n  ) => void,\n  onShowExamples: () => void,\n|};\n\nexport default class BrowserStarters extends Component<Props> {\n  render() {\n    return (\n      <Column noMargin>\n        <Line>\n          <Column>\n            <Text>\n              <Trans>Choose a game to use as a starter:</Trans>\n            </Text>\n          </Column>\n        </Line>\n        <Line>\n          <Column expand noMargin>\n            <List>\n              <ListItem\n                leftIcon={\n                  <ListIcon\n                    iconSize={40}\n                    src=\"res/starters_icons/platformer.png\"\n                  />\n                }\n                primaryText={<Trans>Platformer</Trans>}\n                secondaryText={\n                  <Trans>\n                    A simple platform game, with coins to collect, moving\n                    platforms and enemies.\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('platformer');\n                  this.props.onOpen(InternalFileStorageProvider, {\n                    fileIdentifier: 'example://platformer',\n                  });\n                }}\n              />\n              <ListItem\n                leftIcon={\n                  <ListIcon\n                    iconSize={40}\n                    src=\"res/starters_icons/space-shooter.png\"\n                  />\n                }\n                primaryText={<Trans>8-bit Space Shooter</Trans>}\n                secondaryText={\n                  <Trans>\n                    A beautiful, retro side-scrolling shooter where you must\n                    defeat incoming enemies with your mecha transforming\n                    spaceship. Huge boss included!\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('space-shooter');\n                  this.props.onOpen(InternalFileStorageProvider, {\n                    fileIdentifier: 'example://space-shooter',\n                  });\n                }}\n              />\n              <ListItem\n                leftIcon={\n                  <ListIcon\n                    iconSize={40}\n                    src=\"res/starters_icons/geometry-monster.png\"\n                  />\n                }\n                primaryText={<Trans>Geometry Monster</Trans>}\n                secondaryText={\n                  <Trans>\n                    A hyper casual endless game where you have to collect shapes\n                    and avoid bombs, with a progressively increasing difficulty.\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('geometry-monster');\n                  this.props.onOpen(InternalFileStorageProvider, {\n                    fileIdentifier: 'example://geometry-monster',\n                  });\n                }}\n              />\n              <ListItem\n                leftIcon={\n                  <ListIcon\n                    iconSize={40}\n                    src=\"res/starters_icons/isometric-game.png\"\n                  />\n                }\n                primaryText={<Trans>Isometric game</Trans>}\n                secondaryText={\n                  <Trans>\n                    An example of an isometric game where you can explore a map\n                    with your character.\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('isometric-game');\n                  this.props.onOpen(InternalFileStorageProvider, {\n                    fileIdentifier: 'example://isometric-game',\n                  });\n                }}\n              />\n              <ListItem\n                leftIcon={\n                  <ListIcon\n                    iconSize={40}\n                    src=\"res/starters_icons/downhill-bike-physics-demo.png\"\n                  />\n                }\n                primaryText=\"Downhill Bike Racing\"\n                secondaryText={\n                  <Trans>\n                    An example of a 2D physics based game, where players have to\n                    reach the end as fast as possible.\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('downhill-bike-physics-demo');\n                  this.props.onOpen(InternalFileStorageProvider, {\n                    fileIdentifier: 'example://downhill-bike-physics-demo',\n                  });\n                }}\n              />\n              <ListItem\n                leftIcon={\n                  <ListIcon iconSize={40} src=\"res/starters_icons/pairs.png\" />\n                }\n                primaryText=\"Pairs\"\n                secondaryText={\n                  <Trans>\n                    Find all matching pairs of cards in this relaxing game. Use\n                    tweens to create smooth, natural animations with a few\n                    events.\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('pairs');\n                  this.props.onOpen(InternalFileStorageProvider, {\n                    fileIdentifier: 'example://pairs',\n                  });\n                }}\n              />\n              <ListItem\n                primaryText={<Trans>Empty game</Trans>}\n                secondaryText={<Trans>Start a new game from scratch.</Trans>}\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('');\n\n                  const project = gd.ProjectHelper.createNewGDJSProject();\n                  this.props.onCreate(project, null, null);\n                }}\n              />\n              <Subheader>\n                <Trans>Advanced</Trans>\n              </Subheader>\n              <ListItem\n                leftIcon={\n                  <ListIcon\n                    iconSize={40}\n                    src=\"res/starters_icons/particle-effects-demo.png\"\n                  />\n                }\n                primaryText={<Trans>Particle Effects Demo</Trans>}\n                secondaryText={\n                  <Trans>\n                    A demo of various high quality particle effects (fire,\n                    magic, snow, rune spell...) that you can try and use in your\n                    game.\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('particle-effects-demo');\n                  this.props.onOpen(InternalFileStorageProvider, {\n                    fileIdentifier: 'example://particle-effects-demo',\n                  });\n                }}\n              />\n              <ListItem\n                leftIcon={\n                  <ListIcon\n                    iconSize={40}\n                    src=\"res/starters_icons/game-feel-demo.png\"\n                  />\n                }\n                primaryText={<Trans>Game Feel Demo</Trans>}\n                secondaryText={\n                  <Trans>\n                    A demo showing how to enhance the \"game feel\" of your\n                    project: VFX, shot trail, ambient sounds and SFX,\n                    screenshake, wobble...\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('game-feel-demo');\n                  this.props.onOpen(InternalFileStorageProvider, {\n                    fileIdentifier: 'example://game-feel-demo',\n                  });\n                }}\n              />\n            </List>\n            <Line alignItems=\"center\" justifyContent=\"center\">\n              <RaisedButton\n                label={<Trans>See examples</Trans>}\n                onClick={() => this.props.onShowExamples()}\n              />\n            </Line>\n          </Column>\n        </Line>\n      </Column>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport ListIcon from '../UI/ListIcon';\nimport { List, ListItem } from '../UI/List';\nimport Text from '../UI/Text';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Line } from '../UI/Grid';\nimport Window from '../Utils/Window';\nconst gd = global.gd;\n\nconst styles = {\n  explanations: {\n    textAlign: 'center',\n    margin: 20,\n  },\n};\n\nconst publicImageUrls = [\n  // Platformer images (see platformer.json in fixtures)\n  'https://resources.gdevelop-app.com/examples/platformer/p1_stand.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_jump.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk01.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk02.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk03.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk04.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk05.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk06.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk07.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk08.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk09.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk10.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk11.png',\n  'https://resources.gdevelop-app.com/examples/platformer/brickWall.png',\n  'https://resources.gdevelop-app.com/examples/platformer/bridge.png',\n  'https://resources.gdevelop-app.com/examples/platformer/grassHalfMid.png',\n  'https://resources.gdevelop-app.com/examples/platformer/castleCenter.png',\n  'https://resources.gdevelop-app.com/examples/platformer/bridgeLogs.png',\n  'https://resources.gdevelop-app.com/examples/platformer/Left.png',\n  'https://resources.gdevelop-app.com/examples/platformer/Right.png',\n  'https://resources.gdevelop-app.com/examples/platformer/ladder_mid.png',\n  'https://resources.gdevelop-app.com/examples/platformer/Grass.png',\n  'https://resources.gdevelop-app.com/examples/platformer/PlayerArea.png',\n  'https://resources.gdevelop-app.com/examples/platformer/slimeWalk1.png',\n  'https://resources.gdevelop-app.com/examples/platformer/slimeWalk2.png',\n  'https://resources.gdevelop-app.com/examples/platformer/slimeDead.png',\n  'https://resources.gdevelop-app.com/examples/platformer/flyFly1.png',\n  'https://resources.gdevelop-app.com/examples/platformer/flyFly2.png',\n  'https://resources.gdevelop-app.com/examples/platformer/flyDead.png',\n  'https://resources.gdevelop-app.com/examples/platformer/cloud1.png',\n  'https://resources.gdevelop-app.com/examples/platformer/cloud2.png',\n  'https://resources.gdevelop-app.com/examples/platformer/cloud3.png',\n  'https://resources.gdevelop-app.com/examples/platformer/bush.png',\n  'https://resources.gdevelop-app.com/examples/platformer/cactus.png',\n  'https://resources.gdevelop-app.com/examples/platformer/plant.png',\n  'https://resources.gdevelop-app.com/examples/platformer/coinGold.png',\n  'https://resources.gdevelop-app.com/examples/platformer/shadedDark06.png',\n  'https://resources.gdevelop-app.com/examples/platformer/shadedDark05.png',\n  'https://resources.gdevelop-app.com/examples/platformer/shadedDark45.png',\n  'https://resources.gdevelop-app.com/examples/platformer/shadedDark09.png',\n\n  // Subset of space shooter images (see space-shooter.json in fixtures)\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/idle1.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/idle2.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/up1.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/up2.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/down1.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/down2.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/background/space bg.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/background/corridor.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/asteroid/asteroid1.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/asteroid/asteroid2.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/asteroid/asteroid3.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy200.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy201.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy202.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy203.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy204.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy205.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy206.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy207.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy208.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy209.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy210.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy211.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/bullet.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/powerUp/powerUp00.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/powerUp/powerUp01.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/powerUp/powerUp02.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/powerUp/powerUp03.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/powerUp/powerUp04.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/explosion/explosion00.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/explosion/explosion01.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/explosion/explosion02.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/explosion/explosion03.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/explosion/explosion04.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/explosion/explosion05.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy3/enemy3.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy bullet/enemyBullet00.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy bullet/enemyBullet01.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy bullet/enemyBullet02.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/tiles mechanical/tiles mechanical 1.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/tiles mechanical/tiles mechanical 2.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/background/boss background.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/gameover.png',\n];\n\nconst publicAudioUrls = [\n  // Platformer audio (see platformer.json in fixtures)\n  'https://resources.gdevelop-app.com/examples/platformer/jump.wav',\n  'https://resources.gdevelop-app.com/examples/platformer/coin.wav',\n\n  // Space shooter audio (see space-shooter.json in fixtures)\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/audio/sfx_shieldDown.ogg',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/audio/sfx_twoTone.ogg',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/audio/sfx_laser1.ogg',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/audio/Heal.wav',\n];\n\nconst publicFontUrls = [\n  // Platformer fonts (see platformer.json in fixtures)\n  'https://resources.gdevelop-app.com/examples/platformer/Bimbo_JVE.ttf',\n];\n\nconst publicVideoUrls = [\n  // Video Player example video\n  'https://resources.gdevelop-app.com/examples/video-player/The-Daily-Dweebs-By-Blender-Foundation-Short.mp4',\n];\n\nconst publicJsonUrls = [\n  // Yarn example - todo Upload elsewhere?\n  'https://raw.githubusercontent.com/jhayley/bondage.js/master/tests/yarn_files/assignment.json',\n];\n\nconst nameFromUrl = (url: string): string => {\n  const urlParts = url.split('/');\n  return urlParts[urlParts.length - 1]\n    .replace('.png', '')\n    .replace('.wav', '')\n    .replace('.ogg', '')\n    .replace('.json', '')\n    .replace('.mp4', '');\n};\n\nclass GenericResourcesChooser extends Component {\n  state = {\n    open: false,\n    resolveWithResources: null,\n  };\n\n  constructor(props) {\n    super(props);\n\n    // Cache rendered public images list to avoid doing this each time\n    // a rendering is done.\n    this.listItems = props.urls.map((url: string) => {\n      return (\n        <ListItem\n          key={url}\n          primaryText={nameFromUrl(url)}\n          leftIcon={\n            props.urlsAreImages ? (\n              <ListIcon iconSize={40} src={url} />\n            ) : (\n              undefined\n            )\n          }\n          onClick={() => this._onChoose(url)}\n        />\n      );\n    });\n  }\n\n  chooseResources = (project, multiSelections = true): Promise<Array<any>> => {\n    return new Promise(resolve => {\n      this.setState({\n        open: true,\n        resolveWithResources: resolve,\n      });\n    });\n  };\n\n  _onChoose = (chosenResourceUrl: string) => {\n    const { resolveWithResources } = this.state;\n    if (!resolveWithResources) return;\n\n    const newResource = this.props.createNewResource();\n    newResource.setFile(chosenResourceUrl);\n    newResource.setName(chosenResourceUrl);\n\n    resolveWithResources([newResource]);\n    this.setState({\n      open: false,\n      resolveWithResources: null,\n    });\n  };\n\n  _onClose = () => {\n    const { resolveWithResources } = this.state;\n    if (!resolveWithResources) return;\n\n    resolveWithResources([]);\n    this.setState({\n      open: false,\n      resolveWithResources: null,\n    });\n  };\n\n  _onOpenWebsite() {\n    Window.openExternalURL('http://gdevelop-app.com');\n  }\n\n  render() {\n    // Avoid rendering the dialog if it's not opened.\n    if (!this.state.open) return null;\n\n    const actions = [\n      <FlatButton\n        key=\"close\"\n        label={<Trans>Close</Trans>}\n        primary={false}\n        onClick={this._onClose}\n      />,\n    ];\n\n    return (\n      <Dialog\n        title={this.props.title}\n        actions={actions}\n        cannotBeDismissed={false}\n        open={this.state.open}\n        noMargin\n      >\n        <div style={styles.explanations}>\n          <Text>\n            <Trans>\n              You can choose a resource from the library below. Adding resources\n              from Dropbox, Google Drive... is coming soon! Download GDevelop\n              for desktop to use your own assets.\n            </Trans>\n          </Text>\n          <Line justifyContent=\"center\">\n            <RaisedButton\n              primary\n              label={<Trans>Download GDevelop desktop app</Trans>}\n              onClick={this._onOpenWebsite}\n            />\n          </Line>\n        </div>\n        <List>{this.listItems}</List>\n      </Dialog>\n    );\n  }\n}\n\nexport default [\n  {\n    name: 'publicAudioUrlChooser',\n    displayName: 'Choose an audio file from library',\n    kind: 'audio',\n    component: class AudioResourceChooser extends React.Component {\n      chooseResources = () => {\n        if (this._chooser) return this._chooser.chooseResources();\n      };\n      render() {\n        return (\n          <GenericResourcesChooser\n            {...this.props}\n            urls={publicAudioUrls}\n            urlsAreImages={false}\n            createNewResource={() => new gd.AudioResource()}\n            title={<Trans>Choose an audio file from the library</Trans>}\n            ref={chooser => (this._chooser = chooser)}\n          />\n        );\n      }\n    },\n  },\n  {\n    name: 'publicImageUrlChooser',\n    displayName: 'Choose an image from library',\n    kind: 'image',\n    component: class ImageResourceChooser extends React.Component {\n      chooseResources = () => {\n        if (this._chooser) return this._chooser.chooseResources();\n      };\n      render() {\n        return (\n          <GenericResourcesChooser\n            {...this.props}\n            urls={publicImageUrls}\n            urlsAreImages\n            createNewResource={() => new gd.ImageResource()}\n            title={<Trans>Choose an image from the library</Trans>}\n            ref={chooser => (this._chooser = chooser)}\n          />\n        );\n      }\n    },\n  },\n  {\n    name: 'publicFontUrlChooser',\n    displayName: 'Choose a font from library',\n    kind: 'font',\n    component: class FontResourceChooser extends React.Component {\n      chooseResources = () => {\n        if (this._chooser) return this._chooser.chooseResources();\n      };\n      render() {\n        return (\n          <GenericResourcesChooser\n            {...this.props}\n            urls={publicFontUrls}\n            urlsAreImages={false}\n            createNewResource={() => new gd.FontResource()}\n            title={<Trans>Choose a font from the library</Trans>}\n            ref={chooser => (this._chooser = chooser)}\n          />\n        );\n      }\n    },\n  },\n  {\n    name: 'publicVideoUrlChooser',\n    displayName: 'Choose a video from library',\n    kind: 'video',\n    component: class VideoResourceChooser extends React.Component {\n      chooseResources = () => {\n        if (this._chooser) return this._chooser.chooseResources();\n      };\n      render() {\n        return (\n          <GenericResourcesChooser\n            {...this.props}\n            urls={publicVideoUrls}\n            urlsAreImages={false}\n            createNewResource={() => new gd.VideoResource()}\n            title={<Trans>Choose a video from the library</Trans>}\n            ref={chooser => (this._chooser = chooser)}\n          />\n        );\n      }\n    },\n  },\n  {\n    name: 'publicJsonUrlChooser',\n    displayName: 'Choose a json file from library',\n    kind: 'json',\n    component: class JsonResourceChooser extends React.Component {\n      chooseResources = () => {\n        if (this._chooser) return this._chooser.chooseResources();\n      };\n      render() {\n        return (\n          <GenericResourcesChooser\n            {...this.props}\n            urls={publicJsonUrls}\n            urlsAreImages={false}\n            createNewResource={() => new gd.JsonResource()}\n            title={<Trans>Choose a Json File from the library</Trans>}\n            ref={chooser => (this._chooser = chooser)}\n          />\n        );\n      }\n    },\n  },\n];\n","// @flow\nimport * as React from 'react';\nimport BrowserPreviewLinkDialog from './BrowserPreviewLinkDialog';\nimport BrowserPreviewErrorDialog from './BrowserPreviewErrorDialog';\nimport BrowserS3FileSystem from '../BrowserS3FileSystem';\nimport { findGDJS } from '../../../GameEngineFinder/BrowserS3GDJSFinder';\nimport assignIn from 'lodash/assignIn';\nimport { type PreviewOptions } from '../../PreviewLauncher.flow';\nimport { getBaseUrl } from '../../../Utils/GDevelopServices/Preview';\nimport { makeTimestampedId } from '../../../Utils/TimestampedId';\nconst gd: libGDevelop = global.gd;\n\ntype State = {|\n  showPreviewLinkDialog: boolean,\n  url: ?string,\n  error: ?Error,\n|};\n\ntype Props = {|\n  getIncludeFileHashs: () => { [string]: number },\n  onExport?: () => void,\n  onChangeSubscription?: () => void,\n|};\n\nexport default class BrowserS3PreviewLauncher extends React.Component<\n  Props,\n  State\n> {\n  canDoNetworkPreview = () => false;\n  canDoHotReload = () => false;\n\n  state = {\n    showPreviewLinkDialog: false,\n    url: null,\n    error: null,\n  };\n\n  _openPreviewWindow = (project: gdProject, url: string): any => {\n    const windowObjectReference = window.open(url, `_blank`);\n    return {\n      url,\n      windowObjectReference,\n    };\n  };\n\n  _prepareExporter = (): Promise<any> => {\n    return findGDJS('preview').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const prefix = makeTimestampedId();\n\n      const outputDir = getBaseUrl() + prefix;\n      const browserS3FileSystem = new BrowserS3FileSystem({\n        filesContent,\n        bucketBaseUrl: getBaseUrl(),\n        prefix,\n      });\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        browserS3FileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n      exporter.setCodeOutputDirectory(outputDir);\n\n      return {\n        exporter,\n        outputDir,\n        browserS3FileSystem,\n      };\n    });\n  };\n\n  launchPreview = (previewOptions: PreviewOptions): Promise<any> => {\n    const { project, layout, externalLayout } = previewOptions;\n    this.setState({\n      error: null,\n    });\n\n    return this._prepareExporter()\n      .then(({ exporter, outputDir, browserS3FileSystem }) => {\n        const previewExportOptions = new gd.PreviewExportOptions(\n          project,\n          outputDir\n        );\n        previewExportOptions.setLayoutName(layout.getName());\n        if (externalLayout) {\n          previewExportOptions.setExternalLayoutName(externalLayout.getName());\n        }\n\n        exporter.exportProjectForPixiPreview(previewExportOptions);\n        previewExportOptions.delete();\n        exporter.delete();\n        return browserS3FileSystem\n          .uploadPendingObjects()\n          .then(() => {\n            const finalUrl = outputDir + '/index.html';\n            return this._openPreviewWindow(project, finalUrl);\n          })\n          .then(({ url, windowObjectReference }) => {\n            if (!windowObjectReference) {\n              this.setState({\n                showPreviewLinkDialog: true,\n                url,\n              });\n            }\n          });\n      })\n      .catch((error: Error) => {\n        this.setState({\n          error,\n        });\n      });\n  };\n\n  getPreviewDebuggerServer() {\n    // Debugger server is not supported in the web-app.\n    return null;\n  }\n\n  render() {\n    const { showPreviewLinkDialog, url, error } = this.state;\n\n    if (error) {\n      return (\n        <BrowserPreviewErrorDialog\n          error={error}\n          onClose={() =>\n            this.setState({\n              error: null,\n            })\n          }\n        />\n      );\n    }\n\n    if (showPreviewLinkDialog) {\n      return (\n        <BrowserPreviewLinkDialog\n          url={url}\n          onClose={() =>\n            this.setState({\n              showPreviewLinkDialog: false,\n            })\n          }\n        />\n      );\n    }\n\n    return null;\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport React, { Component } from 'react';\nimport Dialog from '../../../UI/Dialog';\nimport FlatButton from '../../../UI/FlatButton';\nimport { showErrorBox } from '../../../UI/Messages/MessageBox';\nimport { Column, Line } from '../../../UI/Grid';\nimport Text from '../../../UI/Text';\n\ntype Props = {|\n  url: ?string,\n  onClose: () => void,\n|};\n\nexport default class BrowserPreviewLinkDialog extends Component<Props> {\n  _makeOnOpen = (i18n: I18nType) => () => {\n    const windowObjectReference = window.open(this.props.url, '_blank');\n    if (!windowObjectReference) {\n      showErrorBox(\n        i18n._(\n          t`Unable to open the preview! Be sure that popup are allowed for this website.`\n        ),\n        undefined\n      );\n    }\n    this.props.onClose();\n  };\n\n  render() {\n    const { url } = this.props;\n    if (!url) return null;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Dialog\n            actions={[\n              <FlatButton\n                key=\"launch-preview\"\n                label={<Trans>Launch the preview</Trans>}\n                primary\n                onClick={this._makeOnOpen(i18n)}\n              />,\n            ]}\n            cannotBeDismissed={true}\n            open\n          >\n            <Line>\n              <Column>\n                <Text>\n                  <Trans>\n                    Your preview is ready! Click on the button to launch the\n                    preview.\n                  </Trans>\n                </Text>\n              </Column>\n            </Line>\n            <Line>\n              <Column>\n                <Text>\n                  <Trans>\n                    To skip this dialog and{' '}\n                    <b>directly open the preview next time</b>, please allow\n                    popups to be opened for this website in your browser.\n                  </Trans>\n                </Text>\n              </Column>\n            </Line>\n          </Dialog>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport React, { Component } from 'react';\nimport Dialog from '../../../UI/Dialog';\nimport FlatButton from '../../../UI/FlatButton';\nimport { Column, Line } from '../../../UI/Grid';\nimport Text from '../../../UI/Text';\n\ntype Props = {|\n  error: Error,\n  onClose: () => void,\n|};\n\nexport default class BrowserPreviewErrorDialog extends Component<Props> {\n  render() {\n    const { error, onClose } = this.props;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Dialog\n            actions={[\n              <FlatButton\n                key=\"close\"\n                label={<Trans>Close</Trans>}\n                onClick={onClose}\n              />,\n            ]}\n            title={<Trans>Could not launch the preview</Trans>}\n            cannotBeDismissed={false}\n            onRequestClose={onClose}\n            open\n          >\n            <Line>\n              <Column>\n                <Text>\n                  {// $FlowFixMe - AWS returned errors can have extra fields\n                  error.code === 'NetworkingError' ? (\n                    <Trans>\n                      The preview could not be launched because you're offline.\n                    </Trans>\n                  ) : (\n                    <Trans>\n                      The preview could not be launched because an error\n                      happened: {error.message}.\n                    </Trans>\n                  )}\n                </Text>\n              </Column>\n            </Line>\n            <Line>\n              <Column>\n                <Text>\n                  <Trans>\n                    Make sure you're online, have a proper internet connection\n                    and try again. If you download and use GDevelop desktop\n                    application, you can also run previews without any internet\n                    connection.\n                  </Trans>\n                </Text>\n              </Column>\n            </Line>\n          </Dialog>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport path from 'path';\nimport { uploadObject } from '../../Utils/GDevelopServices/Preview';\nconst gd: libGDevelop = global.gd;\n\nexport type TextFileDescriptor = {|\n  filePath: string,\n  text: string,\n|};\n\ntype PendingUploadFileDescriptor = {|\n  Key: string,\n  Body: string,\n  ContentType: 'text/javascript' | 'text/html',\n|};\n\ntype ConstructorArgs = {|\n  filesContent: Array<TextFileDescriptor>,\n  prefix: string,\n  bucketBaseUrl: string,\n|};\n\nconst isURL = (filename: string) => {\n  return (\n    filename.substr(0, 7) === 'http://' ||\n    filename.substr(0, 8) === 'https://' ||\n    filename.substr(0, 6) === 'ftp://'\n  );\n};\n\n/**\n * An in-memory \"file system\" that can be used for GDevelop previews.\n */\nexport default class BrowserS3FileSystem {\n  prefix: string;\n  bucketBaseUrl: string;\n\n  // Store the content of some files.\n  _indexedFilesContent: { [string]: TextFileDescriptor };\n\n  // Store all the objects that should be written on the S3 bucket.\n  // Call uploadPendingObjects to send them\n  _pendingUploadObjects: Array<PendingUploadFileDescriptor> = [];\n\n  // Store a set of all external URLs copied so that we can simulate\n  // readDir result.\n  _allCopiedExternalUrls = new Set<string>();\n\n  constructor({ filesContent, prefix, bucketBaseUrl }: ConstructorArgs) {\n    this.prefix = prefix;\n    this.bucketBaseUrl = bucketBaseUrl;\n\n    this._indexedFilesContent = {};\n    filesContent.forEach(textFileDescriptor => {\n      this._indexedFilesContent[\n        textFileDescriptor.filePath\n      ] = textFileDescriptor;\n    });\n  }\n\n  uploadPendingObjects = () => {\n    return Promise.all(this._pendingUploadObjects.map(uploadObject)).then(\n      result => {\n        console.log('Uploaded all objects:', result);\n        this._pendingUploadObjects = [];\n      },\n      error => {\n        console.error(\"Can't upload all objects:\", error);\n        throw error;\n      }\n    );\n  };\n\n  mkDir = (path: string) => {\n    // Assume required directories always exist.\n  };\n  dirExists = (path: string) => {\n    // Assume required directories always exist.\n    return true;\n  };\n  clearDir = (path: string) => {\n    // Assume path is cleared.\n  };\n  getTempDir = () => {\n    return '/virtual-unused-tmp-dir';\n  };\n  fileNameFrom = (fullpath: string) => {\n    if (isURL(fullpath)) return fullpath;\n\n    return path.basename(fullpath);\n  };\n  dirNameFrom = (fullpath: string) => {\n    if (isURL(fullpath)) return '';\n\n    return path.dirname(fullpath);\n  };\n  makeAbsolute = (filename: string, baseDirectory: string) => {\n    if (isURL(filename)) return filename;\n\n    if (!this.isAbsolute(baseDirectory))\n      baseDirectory = path.resolve(baseDirectory);\n\n    return path.resolve(baseDirectory, path.normalize(filename));\n  };\n  makeRelative = (filename: string, baseDirectory: string) => {\n    if (isURL(filename)) return filename;\n\n    return path.relative(baseDirectory, path.normalize(filename));\n  };\n  isAbsolute = (fullpath: string) => {\n    if (isURL(fullpath)) return true;\n\n    if (fullpath.length === 0) return true;\n    return (\n      (fullpath.length > 0 && fullpath.charAt(0) === '/') ||\n      (fullpath.length > 1 && fullpath.charAt(1) === ':')\n    );\n  };\n  copyFile = (source: string, dest: string) => {\n    //URL are not copied.\n    if (isURL(source)) {\n      this._allCopiedExternalUrls.add(source);\n      return true;\n    }\n\n    console.warn('Copy not done from', source, 'to', dest);\n    return true;\n  };\n  writeToFile = (fullPath: string, contents: string) => {\n    const key = fullPath.replace(this.bucketBaseUrl, '');\n    const mime = {\n      '.js': 'text/javascript',\n      '.html': 'text/html',\n    };\n    const fileExtension = path.extname(fullPath);\n\n    // Defer real upload until it's triggered by calling\n    // uploadPendingObjects.\n    this._pendingUploadObjects.push({\n      Key: key,\n      Body: contents,\n      ContentType: mime[fileExtension],\n    });\n    return true;\n  };\n\n  readFile = (file: string) => {\n    if (!!this._indexedFilesContent[file])\n      return this._indexedFilesContent[file].text;\n\n    console.error(`Unknown file ${file}, returning an empty string`);\n    return '';\n  };\n\n  readDir = (path: string, ext: string) => {\n    ext = ext.toUpperCase();\n    var output = new gd.VectorString();\n\n    // Simulate ReadDir by returning all external URLs\n    // with the filename matching the extension.\n    this._allCopiedExternalUrls.forEach(url => {\n      const upperCaseUrl = url.toUpperCase();\n      if (upperCaseUrl.indexOf(ext) === upperCaseUrl.length - ext.length) {\n        output.push_back(url);\n      }\n    });\n\n    return output;\n  };\n\n  fileExists = (filename: string) => {\n    if (isURL(filename)) return true;\n\n    // Assume all files asked for exists.\n    return true;\n  };\n}\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type Build,\n  buildCordovaAndroid,\n  getBuildFileUploadOptions,\n} from '../../Utils/GDevelopServices/Build';\nimport { uploadBlobFile } from './BrowserFileUploader';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport { ExplanationHeader } from '../GenericExporters/OnlineCordovaExport';\nconst gd: libGDevelop = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserOnlineCordovaExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-online-cordova',\n  onlineBuildType: 'cordova-build',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Packaging for Android</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('cordova').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForCordova', true);\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    blobFile: Blob\n  ): Promise<string> => {\n    return getBuildFileUploadOptions().then(uploadOptions => {\n      return uploadBlobFile(\n        blobFile,\n        uploadOptions,\n        context.updateStepProgress\n      ).then(() => uploadOptions.key);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildCordovaAndroid(\n      getAuthorizationHeader,\n      profile.uid,\n      uploadBucketKey\n    );\n  },\n};\n","// @flow\nimport { loadScript } from '../LoadScript';\n\nconst PUBLIC_URL: string = process.env.PUBLIC_URL || '';\nconst ZIPJS_EXTERNAL_PATH = '/external/zip.js/WebContent';\nconst ZLIBASM_EXTERNAL_PATH = '/external/zlib-asm';\n\nlet zipJsLoaded = false;\nlet zipJsLoadingPromise: ?Promise<ZipJs> = null;\n\n/**\n * Initialize Zip.js, resolving with the instance of it.\n * Promise will be rejected if there is an error while loading Zip.js\n * (call initializeZipJs again to retry).\n */\nexport const initializeZipJs = (): Promise<ZipJs> => {\n  if (zipJsLoaded) {\n    const zip: ZipJs = global.zip;\n    return Promise.resolve(zip);\n  }\n\n  if (zipJsLoadingPromise) {\n    return zipJsLoadingPromise;\n  }\n\n  zipJsLoadingPromise = loadScript(\n    PUBLIC_URL + ZIPJS_EXTERNAL_PATH + '/zip.js'\n  ).then(() => {\n    const zip: ?ZipJs = global.zip;\n    if (!zip) {\n      throw new Error(\n        'Can not find \"zip\" in the global namespace after loading zip.js. Has the zip.js script being loaded properly?'\n      );\n    }\n\n    zipJsLoadingPromise = null;\n    zipJsLoaded = true;\n\n    zip.workerScripts = {\n      deflater: [\n        PUBLIC_URL + ZIPJS_EXTERNAL_PATH + '/z-worker.js',\n        PUBLIC_URL + ZLIBASM_EXTERNAL_PATH + '/zlib.js',\n        PUBLIC_URL + ZIPJS_EXTERNAL_PATH + '/zlib-asm/codecs.js',\n      ],\n      inflater: [\n        PUBLIC_URL + ZIPJS_EXTERNAL_PATH + '/z-worker.js',\n        PUBLIC_URL + ZLIBASM_EXTERNAL_PATH + '/zlib.js',\n        PUBLIC_URL + ZIPJS_EXTERNAL_PATH + '/zlib-asm/codecs.js',\n      ],\n    };\n    return zip;\n  });\n\n  return zipJsLoadingPromise;\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type Build,\n  buildElectron,\n  getBuildFileUploadOptions,\n} from '../../Utils/GDevelopServices/Build';\nimport { uploadBlobFile } from './BrowserFileUploader';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport {\n  type ExportState,\n  SetupExportHeader,\n} from '../GenericExporters/OnlineElectronExport';\nconst gd: libGDevelop = global.gd;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserOnlineElectronExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-online-electron',\n  onlineBuildType: 'electron-build',\n\n  getInitialExportState: () => ({\n    targets: ['winExe'],\n  }),\n\n  canLaunchBuild: (exportState: ExportState) => !!exportState.targets.length,\n\n  renderHeader: props => <SetupExportHeader {...props} />,\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('electron').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForElectron', true);\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    blobFile: Blob\n  ): Promise<string> => {\n    return getBuildFileUploadOptions().then(uploadOptions => {\n      return uploadBlobFile(\n        blobFile,\n        uploadOptions,\n        context.updateStepProgress\n      ).then(() => uploadOptions.key);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildElectron(\n      getAuthorizationHeader,\n      profile.uid,\n      uploadBucketKey,\n      exportState.targets\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type Build,\n  buildWeb,\n  getBuildFileUploadOptions,\n} from '../../Utils/GDevelopServices/Build';\nimport { uploadBlobFile } from './BrowserFileUploader';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport { ExplanationHeader } from '../GenericExporters/OnlineWebExport';\nconst gd: libGDevelop = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserOnlineWebExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-online-web',\n  onlineBuildType: 'web-build',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Publish online</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('web').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    blobFile: Blob\n  ): Promise<string> => {\n    return getBuildFileUploadOptions().then(uploadOptions => {\n      return uploadBlobFile(\n        blobFile,\n        uploadOptions,\n        context.updateStepProgress\n      ).then(() => uploadOptions.key);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildWeb(getAuthorizationHeader, profile.uid, uploadBucketKey);\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { BlobDownloadUrlHolder } from '../../Utils/BlobDownloadUrlHolder';\nimport { ExplanationHeader, DoneFooter } from '../GenericExporters/HTML5Export';\nconst gd: libGDevelop = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nconst openBlobDownloadUrl = (url: string, filename: string) => {\n  const { body } = document;\n  if (!body) return;\n\n  // Not using Window.openExternalURL because blob urls are blocked\n  // by Adblock Plus (and maybe other ad blockers).\n  const a = document.createElement('a');\n  body.appendChild(a);\n  a.style.display = 'none';\n  a.href = url;\n  a.download = filename;\n  a.click();\n  body.removeChild(a);\n};\n\nexport const browserHTML5ExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-html5',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Export as a HTML5 game</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('web').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  renderDoneFooter: ({ compressionOutput, exportState, onClose }) => {\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <BlobDownloadUrlHolder blob={compressionOutput}>\n            {blobDownloadUrl => (\n              <RaisedButton\n                fullWidth\n                primary\n                onClick={() => openBlobDownloadUrl(blobDownloadUrl, 'game.zip')}\n                label={<Trans>Download the exported game</Trans>}\n              />\n            )}\n          </BlobDownloadUrlHolder>\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { BlobDownloadUrlHolder } from '../../Utils/BlobDownloadUrlHolder';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/CordovaExport';\nimport { openBlobDownloadUrl } from '.';\nconst gd: libGDevelop = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserCordovaExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-cordova',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('cordova').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForCordova', true);\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  renderDoneFooter: ({ compressionOutput, exportState, onClose }) => {\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <BlobDownloadUrlHolder blob={compressionOutput}>\n            {blobDownloadUrl => (\n              <RaisedButton\n                fullWidth\n                primary\n                onClick={() => openBlobDownloadUrl(blobDownloadUrl, 'game.zip')}\n                label={<Trans>Download the exported game</Trans>}\n              />\n            )}\n          </BlobDownloadUrlHolder>\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { BlobDownloadUrlHolder } from '../../Utils/BlobDownloadUrlHolder';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/ElectronExport';\nimport { openBlobDownloadUrl } from '.';\nconst gd: libGDevelop = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserElectronExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-electron',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('electron').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForElectron', true);\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  renderDoneFooter: ({ compressionOutput, exportState, onClose }) => {\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <BlobDownloadUrlHolder blob={compressionOutput}>\n            {blobDownloadUrl => (\n              <RaisedButton\n                fullWidth\n                primary\n                onClick={() => openBlobDownloadUrl(blobDownloadUrl, 'game.zip')}\n                label={<Trans>Download the exported game</Trans>}\n              />\n            )}\n          </BlobDownloadUrlHolder>\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { BlobDownloadUrlHolder } from '../../Utils/BlobDownloadUrlHolder';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/Cocos2dExport';\nimport { openBlobDownloadUrl } from '.';\nimport { Column, Line } from '../../UI/Grid';\nimport Toggle from '../../UI/Toggle';\nconst gd: libGDevelop = global.gd;\n\ntype ExportState = {\n  debugMode: boolean,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserCocos2dExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-cocos2d',\n\n  getInitialExportState: () => ({\n    debugMode: false,\n  }),\n\n  canLaunchBuild: () => true,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <ExplanationHeader />\n      </Line>\n      <Line>\n        <Toggle\n          onToggle={(e, check) =>\n            updateExportState(prevState => ({\n              ...prevState,\n              debugMode: check,\n            }))\n          }\n          toggled={exportState.debugMode}\n          labelPosition=\"right\"\n          label={\n            <Trans>\n              Debug mode (show FPS counter and stats in the bottom left)\n            </Trans>\n          }\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('cocos2d-js').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    exporter.exportWholeCocos2dProject(\n      context.project,\n      context.exportState.debugMode,\n      outputDir\n    );\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  renderDoneFooter: ({ compressionOutput, exportState, onClose }) => {\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <BlobDownloadUrlHolder blob={compressionOutput}>\n            {blobDownloadUrl => (\n              <RaisedButton\n                fullWidth\n                primary\n                onClick={() => openBlobDownloadUrl(blobDownloadUrl, 'game.zip')}\n                label={<Trans>Download the exported game</Trans>}\n              />\n            )}\n          </BlobDownloadUrlHolder>\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { BlobDownloadUrlHolder } from '../../Utils/BlobDownloadUrlHolder';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/FacebookInstantGamesExport';\nimport { openBlobDownloadUrl } from '.';\nconst gd: libGDevelop = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserFacebookInstantGamesExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-facebook-instant-games',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('facebook-instant-games').then(\n      ({ gdjsRoot, filesContent }) => {\n        console.info('GDJS found in ', gdjsRoot);\n\n        const outputDir = '/export/';\n        const abstractFileSystem = new BrowserFileSystem({\n          textFiles: filesContent,\n        });\n        // TODO: Memory leak? Check for other exporters too.\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          abstractFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n        return {\n          exporter,\n          outputDir,\n          abstractFileSystem,\n        };\n      }\n    );\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForFacebookInstantGames', true);\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  renderDoneFooter: ({ compressionOutput, exportState, onClose }) => {\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <BlobDownloadUrlHolder blob={compressionOutput}>\n            {blobDownloadUrl => (\n              <RaisedButton\n                primary\n                onClick={() =>\n                  openBlobDownloadUrl(blobDownloadUrl, 'fb-instant-game.zip')\n                }\n                label={<Trans>Download the Instant Game archive</Trans>}\n              />\n            )}\n          </BlobDownloadUrlHolder>\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport {\n  type JsExtensionsLoader,\n  type ExtensionLoadingResult,\n  type TranslationFunction,\n  loadExtension,\n} from '.';\nimport ObjectsEditorService from '../ObjectEditor/ObjectsEditorService';\nimport ObjectsRenderingService from '../ObjectsRendering/ObjectsRenderingService';\nconst gd: libGDevelop = global.gd;\n\n// The list of \"JsExtension.js\" files to be bundled in the webapp, keyed by their extension name.\nconst jsExtensions = [\n  {\n    name: 'AdMob',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/AdMob/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'FacebookInstantGames',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/FacebookInstantGames/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'DeviceSensors',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/DeviceSensors/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'DeviceVibration',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/DeviceVibration/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'Physics2',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/Physics2Behavior/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'ExampleJsExtension',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/ExampleJsExtension/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'Tween',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/TweenBehavior/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'Video',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/Video/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'FileSystem',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/FileSystem/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'DialogueTree',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/DialogueTree/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'BBText',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/BBText/JsExtension.js'),\n    objectsRenderingServiceModules: {\n      'pixi-multistyle-text/dist/pixi-multistyle-text.umd': require('GDJS-for-web-app-only/Runtime/Extensions/BBText/pixi-multistyle-text/dist/pixi-multistyle-text.umd'),\n    },\n  },\n  {\n    name: 'Effects',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/Effects/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'P2P',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/P2P/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'Lighting',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/Lighting/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n];\n\ntype MakeExtensionsLoaderArguments = {|\n  objectsEditorService: typeof ObjectsEditorService,\n  objectsRenderingService: typeof ObjectsRenderingService,\n  filterExamples: boolean,\n|};\n\n/**\n * Loader that load all JS extensions required in this file.\n * Extensions are usually auto-discovered when declared in Extensions/xxx/JsExtension.js, but not\n * for the web-app where everything must be bundled.\n */\nexport default function makeExtensionsLoader({\n  objectsEditorService,\n  objectsRenderingService,\n  filterExamples,\n}: MakeExtensionsLoaderArguments): JsExtensionsLoader {\n  return {\n    loadAllExtensions(\n      _: TranslationFunction\n    ): Promise<\n      Array<{ extensionModulePath: string, result: ExtensionLoadingResult }>\n    > {\n      return Promise.resolve(\n        jsExtensions\n          .filter(({ name }) => !filterExamples || !name.includes('Example'))\n          .map(({ name, extensionModule, objectsRenderingServiceModules }) => {\n            // Load any editor for objects, if we have somewhere where\n            // to register them.\n            if (\n              objectsEditorService &&\n              extensionModule.registerEditorConfigurations\n            ) {\n              extensionModule.registerEditorConfigurations(\n                objectsEditorService\n              );\n            }\n\n            // Register modules for ObjectsRenderingService\n            if (objectsRenderingService && objectsRenderingServiceModules) {\n              for (let requirePath in objectsRenderingServiceModules) {\n                objectsRenderingService.registerModule(\n                  requirePath,\n                  objectsRenderingServiceModules[requirePath]\n                );\n              }\n            }\n\n            // Load any renderer for objects, if we have somewhere where\n            // to register them.\n            if (\n              objectsRenderingService &&\n              extensionModule.registerInstanceRenderers\n            ) {\n              extensionModule.registerInstanceRenderers(\n                objectsRenderingService\n              );\n            }\n\n            return {\n              extensionModulePath: 'internal-extension://' + name,\n              result: loadExtension(\n                _,\n                gd,\n                gd.JsPlatform.get(),\n                extensionModule\n              ),\n            };\n          })\n      );\n    },\n  };\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { type StorageProvider, type FileMetadata } from '../index';\nimport { serializeToJSON } from '../../Utils/Serializer';\nimport GoogleDrive from '../../UI/CustomSvgIcons/GoogleDrive';\nimport GoogleDriveSaveAsDialog from './GoogleDriveSaveAsDialog';\nimport { type MessageDescriptor } from '../../Utils/i18n/MessageDescriptor.flow';\nimport { type AppArguments } from '../../Utils/Window';\nimport { loadScript } from '../../Utils/LoadScript';\nconst isDev = process.env.NODE_ENV === 'development';\n\nconst DEVELOPER_KEY = isDev\n  ? 'AIzaSyDH3UNpxzIpcTyd6aMCWI5oNFSptG_BhOc'\n  : 'AIzaSyDJYQmzLCfjXnNImDa1X_cDTWjl2BOrcM4';\nconst CLIENT_ID = isDev\n  ? '28563107180-bd29h9f3og4h1632m94nv6hat2igrej6.apps.googleusercontent.com'\n  : '44882707384-3t4tubr3fbht87sbtdp7u5mlo45k5uku.apps.googleusercontent.com';\nconst APP_ID = isDev ? '28563107180' : '44882707384'; // This is the first part of CLIENT_ID.\nconst DISCOVERY_DOCS = [\n  'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest',\n];\nconst SCOPE =\n  'https://www.googleapis.com/auth/drive.file https://www.googleapis.com/auth/drive.install';\n\nlet apisLoaded = false;\nlet apisLoadingPromise = null;\n\n/**\n * Load Google Drive APIs. Return a fulfilled promise when done.\n */\nconst initializeApis = (): Promise<void> => {\n  if (apisLoaded) {\n    return Promise.resolve();\n  }\n\n  if (apisLoadingPromise) {\n    // Only do a single initialization attempt at a given time.\n    return apisLoadingPromise;\n  }\n\n  apisLoadingPromise = loadScript('https://apis.google.com/js/api:client.js')\n    .then(() => {\n      const gapi = global.gapi;\n      if (!gapi) {\n        throw new Error(\n          'No gapi global object found after loading Google Drive API script'\n        );\n      }\n\n      return new Promise((resolve, reject) => {\n        gapi.load('client:auth2:picker', {\n          callback: () => {\n            const auth2LoadPromise = gapi.auth2.init({\n              apiKey: DEVELOPER_KEY,\n              clientId: CLIENT_ID,\n              discoveryDocs: DISCOVERY_DOCS,\n              scope: SCOPE,\n            });\n\n            gapi.client.setApiKey(DEVELOPER_KEY);\n            const driveLoadPromise = gapi.client.load('drive', 'v3');\n\n            resolve(Promise.all([auth2LoadPromise, driveLoadPromise]));\n          },\n          onerror: () => {\n            reject(\n              new Error(\n                'Unable to load auth2 and picker APIs for Google Drive.'\n              )\n            );\n          },\n        });\n      });\n    })\n    .then(() => {\n      apisLoaded = true;\n      apisLoadingPromise = null;\n    })\n    .catch(error => {\n      console.error('Error while loading Google Drive APIs:', error);\n      apisLoadingPromise = null;\n\n      throw error;\n    });\n\n  return apisLoadingPromise;\n};\n\ntype GoogleUser = {\n  getAuthResponse: () => { access_token: string, error?: ?Error },\n};\n\nlet isAuthenticated = false;\n\n/**\n * Sign in the user to Google Drive, returning the user object after a successful sign up\n * (or if the user is already signed in).\n */\nexport const authenticate = (): Promise<GoogleUser> => {\n  return initializeApis().then(() => {\n    const gapi = global.gapi;\n    const googleAuth = gapi.auth2.getAuthInstance();\n    if (isAuthenticated && googleAuth.isSignedIn.get()) {\n      return googleAuth.currentUser.get();\n    }\n\n    isAuthenticated = false;\n    googleAuth.isSignedIn.listen(authenticated => {\n      console.info('Authenticated with Google APIs: ', authenticated);\n      isAuthenticated = authenticated;\n    });\n    return googleAuth\n      .signIn({ scope: SCOPE })\n      .then((googleUser: GoogleUser) => {\n        if (\n          !googleUser.getAuthResponse() ||\n          googleUser.getAuthResponse().error\n        ) {\n          console.error(\n            'OAuth2 error while sign in:',\n            googleUser.getAuthResponse()\n              ? googleUser.getAuthResponse().error\n              : 'No AuthResponse'\n          );\n          throw new Error('Authentication error');\n        }\n\n        isAuthenticated = true;\n        return googleUser;\n      });\n  });\n};\n\n/**\n * Update a JSON file, given its file id.\n */\nexport const patchJsonFile = (\n  fileId: string,\n  googleUser: GoogleUser,\n  content: string\n): Promise<void> => {\n  return fetch(`https://www.googleapis.com/upload/drive/v3/files/${fileId}`, {\n    method: 'PATCH',\n    headers: new Headers({\n      Authorization: `Bearer ${googleUser.getAuthResponse().access_token}`,\n      'Content-Type': 'application/json',\n    }),\n    body: content,\n  }).then(res => {\n    if (res.status !== 200) {\n      if (res.status === 401) {\n        isAuthenticated = false;\n      }\n\n      throw res;\n    }\n  });\n};\n\n/**\n * Create a new empty JSON file, returning its fileid.\n */\nexport const createNewJsonFile = (\n  parentId: string,\n  name: string\n): Promise<string> => {\n  const gapi = global.gapi;\n\n  return gapi.client.drive.files\n    .create({\n      'content-type': 'application/json',\n      uploadType: 'multipart',\n      name: name,\n      parents: [parentId],\n      mimeType: 'application/json',\n      fields: 'id, name, kind, size',\n    })\n    .then(apiResponse => {\n      return apiResponse.result.id;\n    });\n};\n\n/**\n * Information about a file or folder picked by the user.\n */\nexport type GoogleDriveFileOrFolder =\n  | {|\n      type: 'FOLDER',\n      id: string,\n      name: string,\n    |}\n  | {|\n      type: 'FILE',\n      id: string,\n      name: string,\n      parentId: string,\n    |};\n\nexport type GoogleDriveFilePickerOptions = {|\n  selectFolderEnabled: boolean,\n  showUploadView: boolean,\n|};\n\n/**\n * Display a file picker as a modal, resolving with the selected file or folder,\n * if any.\n *\n * The picker dialog is not playing nice with material-ui dialogs or overlays. They should\n * not be displayed when the picker is on screen.\n */\nconst showFilePicker = ({\n  selectFolderEnabled,\n  showUploadView,\n}: GoogleDriveFilePickerOptions): Promise<?GoogleDriveFileOrFolder> => {\n  return authenticate().then(googleUser => {\n    const google = global.google;\n\n    return new Promise(resolve => {\n      let picker = null;\n      const pickerBuilder = new google.picker.PickerBuilder()\n        .addView(\n          new google.picker.DocsView()\n            .setIncludeFolders(true)\n            .setSelectFolderEnabled(selectFolderEnabled)\n        )\n        .setOAuthToken(googleUser.getAuthResponse().access_token)\n        .setDeveloperKey(DEVELOPER_KEY)\n        .setAppId(APP_ID) // App ID is required to correctly identify files created with the app.\n        .setCallback(data => {\n          if (\n            data[google.picker.Response.ACTION] === google.picker.Action.PICKED\n          ) {\n            const doc = data[google.picker.Response.DOCUMENTS][0];\n            const id: string = doc[google.picker.Document.ID];\n            const name: string = doc[google.picker.Document.NAME];\n            const parentId: string = doc[google.picker.Document.PARENT_ID];\n            if (\n              doc[google.picker.Document.TYPE] ===\n                google.picker.Type.LOCATION ||\n              doc[google.picker.Document.MIME_TYPE] ===\n                'application/vnd.google-apps.folder'\n            ) {\n              resolve({ id, name, type: 'FOLDER' });\n            } else {\n              resolve({ id, name, type: 'FILE', parentId });\n            }\n            if (picker) picker.dispose();\n          } else if (\n            data[google.picker.Response.ACTION] === google.picker.Action.CANCEL\n          ) {\n            resolve(null);\n            if (picker) picker.dispose();\n          }\n        });\n      if (showUploadView) {\n        pickerBuilder.addView(\n          new google.picker.DocsUploadView().setIncludeFolders(true)\n        );\n      }\n\n      picker = pickerBuilder.build();\n\n      picker.setVisible(true);\n      const pickerElements = document.getElementsByClassName('picker-dialog');\n      for (var i = 0; i < pickerElements.length; ++i) {\n        pickerElements[i].style.zIndex = '5000'; // Higher than Material UI modals\n      }\n    });\n  });\n};\n\n/**\n * A storage that is using Google Drive to open and store files.\n */\nexport default ({\n  internalName: 'GoogleDrive',\n  name: t`Google Drive`,\n  renderIcon: () => <GoogleDrive />,\n  getFileMetadataFromAppArguments: (appArguments: AppArguments) => {\n    if (appArguments.state) {\n      try {\n        // See \"state\" argument passed by Google Drive API:\n        // https://developers.google.com/drive/api/v3/enable-sdk#construct\n        const googleDriveState = JSON.parse(appArguments.state);\n        if (googleDriveState.ids && googleDriveState.ids[0]) {\n          return {\n            fileIdentifier: googleDriveState.ids[0],\n          };\n        }\n      } catch (e) {\n        console.warn(\n          \"Error while trying to parse the Google Drive 'ids' in 'state' from the app arguments.\"\n        );\n      }\n    }\n\n    return null;\n  },\n  createOperations: ({ setDialog, closeDialog }) => {\n    initializeApis().catch(() => {\n      // Ignore error as we'll retry later.\n    });\n\n    return {\n      doesInitialOpenRequireUserInteraction: true, // Authentication will open a popup, requiring user interaction\n      onOpen: (\n        fileMetadata: FileMetadata\n      ): Promise<{|\n        content: Object,\n      |}> => {\n        const fileId = fileMetadata.fileIdentifier;\n\n        return authenticate()\n          .then(googleUser =>\n            fetch(\n              `https://www.googleapis.com/drive/v3/files/${fileId}?alt=media`,\n              {\n                method: 'GET',\n                headers: new Headers({\n                  Authorization: `Bearer ${\n                    googleUser.getAuthResponse().access_token\n                  }`,\n                }),\n              }\n            )\n          )\n          .then(\n            response => {\n              return response.text().then(\n                fileContent => {\n                  return new Promise((resolve, reject) => {\n                    try {\n                      const dataObject = JSON.parse(fileContent);\n                      return resolve({\n                        content: dataObject,\n                      });\n                    } catch (ex) {\n                      return reject(fileId + ' is a corrupted/malformed file.');\n                    }\n                  });\n                },\n                error => {\n                  console.error(\n                    'Error while reading the file from Google Drive API: ',\n                    error\n                  );\n                  throw error;\n                }\n              );\n            },\n            error => {\n              console.error(\n                'Error while fetching the file from Google Drive API: ',\n                error\n              );\n              throw error;\n            }\n          );\n      },\n      onOpenWithPicker: (): Promise<?FileMetadata> => {\n        return authenticate()\n          .then(googleUser =>\n            showFilePicker({ selectFolderEnabled: false, showUploadView: true })\n          )\n          .then(googleDriveFileOrFolder => {\n            if (!googleDriveFileOrFolder) {\n              return null;\n            }\n\n            return {\n              fileIdentifier: googleDriveFileOrFolder.id,\n            };\n          });\n      },\n      onSaveProject: (project: gdProject, fileMetadata: FileMetadata) => {\n        const fileId = fileMetadata.fileIdentifier;\n\n        const content = serializeToJSON(project);\n        return authenticate()\n          .then(googleUser => patchJsonFile(fileId, googleUser, content))\n          .then(() => ({\n            wasSaved: true,\n            fileMetadata,\n          }));\n      },\n      onSaveProjectAs: (project: gdProject, fileMetadata: ?FileMetadata) => {\n        return new Promise(resolve => {\n          setDialog(() => (\n            <GoogleDriveSaveAsDialog\n              onShowFilePicker={showFilePicker}\n              onCancel={() => {\n                closeDialog();\n                resolve({ wasSaved: false, fileMetadata });\n              }}\n              onSave={({ selectedFileOrFolder, newFileName }) => {\n                const content = serializeToJSON(project);\n\n                if (selectedFileOrFolder.type === 'FOLDER') {\n                  return authenticate().then(googleUser =>\n                    createNewJsonFile(\n                      selectedFileOrFolder.id,\n                      newFileName\n                    ).then(newFileId =>\n                      patchJsonFile(newFileId, googleUser, content).then(() => {\n                        closeDialog();\n                        resolve({\n                          wasSaved: true,\n                          fileMetadata: {\n                            fileIdentifier: newFileId,\n                          },\n                        });\n                      })\n                    )\n                  );\n                } else {\n                  return authenticate()\n                    .then(googleUser =>\n                      patchJsonFile(\n                        selectedFileOrFolder.id,\n                        googleUser,\n                        content\n                      )\n                    )\n                    .then(() => {\n                      closeDialog();\n                      resolve({\n                        wasSaved: true,\n                        fileMetadata: {\n                          fileIdentifier: selectedFileOrFolder.id,\n                        },\n                      });\n                    });\n                }\n              }}\n            />\n          ));\n        });\n      },\n      getOpenErrorMessage: (error: Error): MessageDescriptor => {\n        if (!apisLoaded) {\n          return t`Google Drive could not be loaded. Check that your are not offline and have a proper internet connection, then try again.`;\n        }\n\n        return t`Check that you don't have any blocked popup (if so, allow them and retry) and that you have the authorizations for reading the file you're trying to access.`;\n      },\n    };\n  },\n}: StorageProvider);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M7.71,3.5L1.15,15L4.58,21L11.13,9.5M9.73,15L6.3,21H19.42L22.85,15M22.28,14L15.42,2H8.58L8.57,2L15.43,14H22.28Z\" />\n  </SvgIcon>\n));\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport TextField from '../../UI/TextField';\nimport { type GoogleDriveFileOrFolder } from '.';\n\ntype Props = {|\n  floatingLabelText: React.Node,\n  value: ?GoogleDriveFileOrFolder,\n  onOpenPicker: () => void,\n|};\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'baseline',\n    width: '100%',\n  },\n  button: {\n    marginLeft: 10,\n  },\n  textField: {\n    flex: 1,\n  },\n};\n\nexport default (props: Props) => {\n  return (\n    <div\n      style={{\n        ...styles.container,\n      }}\n    >\n      <TextField\n        style={styles.textField}\n        floatingLabelText={props.floatingLabelText}\n        floatingLabelFixed\n        type=\"text\"\n        hintText={t`Choose a file or folder`}\n        value={props.value ? props.value.name : ''}\n        onChange={() => {}}\n      />\n      <RaisedButton\n        label={<Trans>Choose...</Trans>}\n        primary\n        style={styles.button}\n        onClick={props.onOpenPicker}\n      />\n    </div>\n  );\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport { Column, Line } from '../../UI/Grid';\nimport GoogleDriveFileOrFolderPicker from './GoogleDriveFileOrFolderPicker';\nimport {\n  type GoogleDriveFileOrFolder,\n  type GoogleDriveFilePickerOptions,\n} from '.';\nimport TextField from '../../UI/TextField';\nimport LeftLoader from '../../UI/LeftLoader';\nimport AlertMessage from '../../UI/AlertMessage';\n\ntype Props = {|\n  onCancel: () => void,\n  onSave: ({|\n    selectedFileOrFolder: GoogleDriveFileOrFolder,\n    newFileName: string,\n  |}) => Promise<void>,\n  onShowFilePicker: GoogleDriveFilePickerOptions => Promise<?GoogleDriveFileOrFolder>,\n|};\n\n/**\n * A \"Save as\" dialog for Google Drive, allowing to pick a file to overwrite or a folder\n * and a new filename where to save the game.\n */\nexport default (props: Props) => {\n  const [selectedFileOrFolder, setSelectedFileOrFolder] = React.useState(\n    (null: ?GoogleDriveFileOrFolder)\n  );\n  const [newFileName, setNewFileName] = React.useState('');\n  const [saving, setSaving] = React.useState(false);\n  const [saveError, setSaveError] = React.useState((null: ?Error));\n  const [pickerError, setPickerError] = React.useState((null: ?Error));\n  const [dialogHidden, hideDialog] = React.useState(false);\n\n  const canSave = () => {\n    if (saving) return;\n    if (!selectedFileOrFolder) return;\n\n    return selectedFileOrFolder.type === 'FOLDER' ? !!newFileName : true;\n  };\n  const save = () => {\n    if (!selectedFileOrFolder) return;\n\n    setSaveError(null);\n    setSaving(true);\n    props\n      .onSave({\n        selectedFileOrFolder,\n        newFileName,\n      })\n      .catch(error => {\n        setSaveError(error);\n        setSaving(false);\n      });\n  };\n  const canCancel = () => !saving;\n  const cancel = () => {\n    if (!canCancel()) return;\n\n    props.onCancel();\n  };\n  const openPicker = () => {\n    hideDialog(true);\n    setPickerError(null);\n    props\n      .onShowFilePicker({ selectFolderEnabled: true, showUploadView: false })\n      .then(selectedFileOrFolder => {\n        setSelectedFileOrFolder(selectedFileOrFolder);\n        hideDialog(false);\n      })\n      .catch(error => {\n        setPickerError(error);\n        hideDialog(false);\n      });\n  };\n\n  // Hide the dialog while the picker is opened, as it does not play nice with material-ui's\n  // Dialog.\n  if (dialogHidden) {\n    return null;\n  }\n\n  return (\n    <Dialog\n      title={<Trans>Save on Google Drive</Trans>}\n      actions={[\n        <FlatButton\n          key=\"cancel\"\n          label={<Trans>Cancel</Trans>}\n          primary={false}\n          disabled={!canCancel()}\n          onClick={props.onCancel}\n        />,\n        <LeftLoader key=\"save\" isLoading={saving}>\n          <FlatButton\n            label={<Trans>Save</Trans>}\n            primary\n            disabled={!canSave()}\n            onClick={save}\n          />\n        </LeftLoader>,\n      ]}\n      cannotBeDismissed={true}\n      open\n      onRequestClose={cancel}\n      maxWidth=\"sm\"\n    >\n      <Column noMargin>\n        <Line>\n          <GoogleDriveFileOrFolderPicker\n            floatingLabelText={\n              <Trans>Google Drive folder or existing file to overwrite</Trans>\n            }\n            value={selectedFileOrFolder}\n            onOpenPicker={openPicker}\n          />\n        </Line>\n        <Line>\n          {selectedFileOrFolder && selectedFileOrFolder.type === 'FOLDER' ? (\n            <TextField\n              floatingLabelText={<Trans>New file name</Trans>}\n              floatingLabelFixed\n              type=\"text\"\n              hintText={t`YourGame.json`}\n              value={newFileName}\n              onChange={(event, newFileName) => setNewFileName(newFileName)}\n              fullWidth\n            />\n          ) : null}\n        </Line>\n        {saveError && (\n          <Line>\n            <AlertMessage kind=\"error\">\n              There was an error when saving your game. Verify that you have the\n              rights on the folder or file that you selected and try again.\n            </AlertMessage>\n          </Line>\n        )}\n        {pickerError && (\n          <Line>\n            <AlertMessage kind=\"error\">\n              There was an error when selecting a file or folder from Google\n              Drive. Try again later or verify that you are properly connected\n              to Google Drive.\n            </AlertMessage>\n          </Line>\n        )}\n      </Column>\n    </Dialog>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { type Exporter } from '../ExportDialog';\nimport { browserOnlineCordovaExportPipeline } from './BrowserOnlineCordovaExport.js';\nimport { browserOnlineElectronExportPipeline } from './BrowserOnlineElectronExport.js';\nimport { browserOnlineWebExportPipeline } from './BrowserOnlineWebExport';\nimport { browserHTML5ExportPipeline } from './BrowserHTML5Export';\nimport { browserCordovaExportPipeline } from './BrowserCordovaExport';\nimport { browserElectronExportPipeline } from './BrowserElectronExport';\nimport { browserCocos2dExportPipeline } from './BrowserCocos2dExport';\nimport { browserFacebookInstantGamesExportPipeline } from './BrowserFacebookInstantGamesExport';\nimport PhoneIphone from '@material-ui/icons/PhoneIphone';\nimport LaptopMac from '@material-ui/icons/LaptopMac';\nimport Folder from '@material-ui/icons/Folder';\nimport Facebook from '../../UI/CustomSvgIcons/Facebook';\nimport Cordova from '../../UI/CustomSvgIcons/Cordova';\nimport Chrome from '../../UI/CustomSvgIcons/Chrome';\n\nexport const getBrowserExporters = (): Array<Exporter> => [\n  {\n    name: <Trans>Android (&amp; iOS coming soon)</Trans>,\n    renderIcon: props => <PhoneIphone {...props} />,\n    helpPage: '/publishing/android_and_ios',\n    description: (\n      <Trans>\n        Package your game for Android directly from GDevelop. iOS support is\n        coming soon!\n      </Trans>\n    ),\n    key: 'browseronlinecordovaexport',\n    exportPipeline: browserOnlineCordovaExportPipeline,\n  },\n  {\n    name: <Trans>Web (upload online)</Trans>,\n    renderIcon: props => <Chrome {...props} />,\n    helpPage: '/publishing/web',\n    description: (\n      <Trans>\n        Upload your game online directly from GDevelop and share the link to\n        players. Play to your game using your browser on computers and mobile\n        phones.\n      </Trans>\n    ),\n    key: 'browsers3export',\n    exportPipeline: browserOnlineWebExportPipeline,\n  },\n  {\n    name: <Trans>HTML5 game (zip)</Trans>,\n    renderIcon: props => <Folder {...props} />,\n    helpPage: '/publishing/html5_game_in_a_local_folder',\n    description: (\n      <Trans>\n        Build the game locally as a HTML5 game. You can then publish it on\n        website like Kongregate, Game Jolt, itch.io, Poki...\n      </Trans>\n    ),\n    key: 'browserhtml5export',\n    exportPipeline: browserHTML5ExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>Facebook Instant Games</Trans>,\n    renderIcon: props => <Facebook {...props} />,\n    helpPage: '/publishing/publishing-to-facebook-instant-games',\n    description: (\n      <Trans>\n        Package your game as a Facebook Instant Games that can be played on\n        Facebook Messenger.\n      </Trans>\n    ),\n    key: 'browserfacebookinstantgames',\n    exportPipeline: browserFacebookInstantGamesExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>iOS &amp; Android (manual)</Trans>,\n    renderIcon: props => <Cordova {...props} />,\n    helpPage: '/publishing/android_and_ios_with_cordova',\n    description: (\n      <Trans>\n        Build the game locally as a Cordova project, and export it manually then\n        to iOS or Android with Cordova developers tools.\n      </Trans>\n    ),\n    key: 'browsercordovaexport',\n    exportPipeline: browserCordovaExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>Windows/macOS/Linux</Trans>,\n    renderIcon: props => <LaptopMac {...props} />,\n    helpPage: '/publishing/windows-macos-linux',\n    description: (\n      <Trans>\n        Package your game as an app for Windows, macOS or Linux directly from\n        GDevelop.\n      </Trans>\n    ),\n    key: 'browseronlineelectronexport',\n    exportPipeline: browserOnlineElectronExportPipeline,\n  },\n  {\n    name: <Trans>Windows/macOS/Linux (manual)</Trans>,\n    renderIcon: props => <LaptopMac {...props} />,\n    helpPage: '/publishing/windows-macos-linux-with-electron',\n    description: (\n      <Trans>\n        Build the game locally and export it manually to Windows, macOS or Linux\n        with third-party developer tools.\n      </Trans>\n    ),\n    key: 'browserelectronexport',\n    exportPipeline: browserElectronExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>Cocos2d-JS</Trans>,\n    renderIcon: props => <PhoneIphone {...props} />,\n    helpPage: '/publishing/android_and_ios_with_cocos2d-js',\n    description: (\n      <Trans>\n        Export your game using Cocos2d-JS game engine. The game can be compiled\n        for Android or iOS if you install Cocos2d-JS developer tools.\n      </Trans>\n    ),\n    key: 'browsercocos2dexport',\n    exportPipeline: browserCocos2dExportPipeline,\n    experimental: true,\n  },\n];\n\n/**\n * Open an URL generated from a blob, to download it with the specified filename.\n */\nexport const openBlobDownloadUrl = (url: string, filename: string) => {\n  const { body } = document;\n  if (!body) return;\n\n  // Not using Window.openExternalURL because blob urls are blocked\n  // by Adblock Plus (and maybe other ad blockers).\n  const a = document.createElement('a');\n  body.appendChild(a);\n  a.style.display = 'none';\n  a.href = url;\n  a.download = filename;\n  a.click();\n  body.removeChild(a);\n};\n","// @flow\nimport * as React from 'react';\n\ntype Props = {\n  blob: ?Blob,\n  children: (blobDownloadUrl: string) => React.Node,\n};\n\nexport const BlobDownloadUrlHolder = ({ blob, children }: Props) => {\n  const [blobDownloadUrl, setBlobDownloadUrl] = React.useState('');\n  React.useEffect(\n    () => {\n      // Release the existing blob URL, if any.\n      if (blobDownloadUrl) {\n        URL.revokeObjectURL(blobDownloadUrl);\n      }\n\n      if (blob) {\n        setBlobDownloadUrl(URL.createObjectURL(blob));\n      } else {\n        setBlobDownloadUrl('');\n      }\n\n      return () => {\n        // Release the blob URL if component is unmounted.\n        if (blobDownloadUrl) {\n          URL.revokeObjectURL(blobDownloadUrl);\n        }\n      };\n    },\n    [blob, blobDownloadUrl]\n  );\n\n  return children(blobDownloadUrl);\n};\n","// @flow\nimport axios from 'axios';\nimport { GDevelopGamePreviews } from './ApiConfigs';\nimport { getSignedUrl } from './Usage';\n\nexport type UploadedObject = {|\n  Key: string,\n  Body: string,\n  ContentType: 'text/javascript' | 'text/html',\n|};\n\nexport const uploadObject = (params: UploadedObject): Promise<any> => {\n  return getSignedUrl({\n    uploadType: 'preview',\n    key: params.Key,\n    contentType: params.ContentType,\n  }).then(({ signedUrl }) =>\n    axios.put(signedUrl, params.Body, {\n      headers: {\n        'Content-Type': params.ContentType,\n      },\n    })\n  );\n};\n\nexport const getBaseUrl = () => {\n  return GDevelopGamePreviews.baseUrl;\n};\n","// @flow\nimport axios from 'axios';\n\ntype UploadOptions = {\n  signedUrl: string,\n  contentType: string,\n};\n\nexport const uploadBlobFile = (\n  blob: Blob,\n  uploadOptions: UploadOptions,\n  onProgress: (progress: number, total: number) => void\n): Promise<void> => {\n  return axios\n    .put(uploadOptions.signedUrl, blob, {\n      headers: {\n        'Content-Type': uploadOptions.contentType,\n      },\n      // Allow any arbitrary large file to be sent\n      maxContentLength: Infinity,\n      onUploadProgress: progressEvent => {\n        if (!progressEvent || !progressEvent.total) {\n          onProgress(0, 0);\n          return;\n        }\n\n        onProgress(progressEvent.loaded, progressEvent.total);\n      },\n    })\n    .then(() => undefined);\n};\n","// @flow\n// This file is generated by update-fixtures-from-resources-examples.js script\n\nimport exampleFile0 from '../../fixtures/admob/admob.json';\nimport exampleFile1 from '../../fixtures/advanced-shape-based-painter/advanced-shape-based-painter.json';\nimport exampleFile2 from '../../fixtures/animation-speed-scale/animation-speed-scale.json';\nimport exampleFile3 from '../../fixtures/asteroids/asteroids.json';\nimport exampleFile4 from '../../fixtures/basic-ai-with-pathfinding/basic-ai-with-pathfinding.json';\nimport exampleFile5 from '../../fixtures/basic-artificial-intelligence/basic-artificial-intelligence.json';\nimport exampleFile6 from '../../fixtures/basic-topdown-car-driving/basic-topdown-car-driving.json';\nimport exampleFile7 from '../../fixtures/bbtext-object-demo/bbtext-object-demo.json';\nimport exampleFile8 from '../../fixtures/betabox-basics-learning-experience/betabox-basics-learning-experience.json';\nimport exampleFile9 from '../../fixtures/board-walk-with-raycast/board-walk-with-raycast.json';\nimport exampleFile10 from '../../fixtures/bomb-the-crate/bomb-the-crate.json';\nimport exampleFile11 from '../../fixtures/bouncing-ball-and-rope/bouncing-ball-and-rope.json';\nimport exampleFile12 from '../../fixtures/breakout/breakout.json';\nimport exampleFile13 from '../../fixtures/buttons/buttons.json';\nimport exampleFile14 from '../../fixtures/cannon-ball-with-physics/cannon-ball-with-physics.json';\nimport exampleFile15 from '../../fixtures/car-physics/car-physics.json';\nimport exampleFile16 from '../../fixtures/center-object-within-another/center-object-within-another.json';\nimport exampleFile17 from '../../fixtures/change-position-of-object/change-position-of-object.json';\nimport exampleFile18 from '../../fixtures/change-scale-of-sprites/change-scale-of-sprites.json';\nimport exampleFile19 from '../../fixtures/change-sprite-animation/change-sprite-animation.json';\nimport exampleFile20 from '../../fixtures/change-sprite-color/change-sprite-color.json';\nimport exampleFile21 from '../../fixtures/character-selection/character-selection.json';\nimport exampleFile22 from '../../fixtures/count-down-timer/count-down-timer.json';\nimport exampleFile23 from '../../fixtures/create-object-with-mouseclick/create-object-with-mouseclick.json';\nimport exampleFile24 from '../../fixtures/create-random-object/create-random-object.json';\nimport exampleFile25 from '../../fixtures/custom-font/custom-font.json';\nimport exampleFile26 from '../../fixtures/custom-mouse-pointer/custom-mouse-pointer.json';\nimport exampleFile27 from '../../fixtures/customize-keys-with-lastpressedkey/customize-keys-with-lastpressedkey.json';\nimport exampleFile28 from '../../fixtures/device-orientation-ballgame/device-orientation-ballgame.json';\nimport exampleFile29 from '../../fixtures/device-orientation-compass/device-orientation-compass.json';\nimport exampleFile30 from '../../fixtures/device-vibration/device-vibration.json';\nimport exampleFile31 from '../../fixtures/dialogue-tree-with-yarn/dialogue-tree-with-yarn.json';\nimport exampleFile32 from '../../fixtures/downhill-bike-physics-demo/downhill-bike-physics-demo.json';\nimport exampleFile33 from '../../fixtures/drag-camera-with-mouse/drag-camera-with-mouse.json';\nimport exampleFile34 from '../../fixtures/drop-collect-items-from-storage/drop-collect-items-from-storage.json';\nimport exampleFile35 from '../../fixtures/endless-up-runner/endless-up-runner.json';\nimport exampleFile36 from '../../fixtures/exit-app/exit-app.json';\nimport exampleFile37 from '../../fixtures/facebook-instant-game/facebook-instant-game.json';\nimport exampleFile38 from '../../fixtures/filesystem-create-directory/filesystem-create-directory.json';\nimport exampleFile39 from '../../fixtures/find-diagonals/find-diagonals.json';\nimport exampleFile40 from '../../fixtures/flappy-bird/flappy-bird.json';\nimport exampleFile41 from '../../fixtures/game-feel-demo/game-feel-demo.json';\nimport exampleFile42 from '../../fixtures/geodash/geodash.json';\nimport exampleFile43 from '../../fixtures/geometry-monster/geometry-monster.json';\nimport exampleFile44 from '../../fixtures/health-bar/health-bar.json';\nimport exampleFile45 from '../../fixtures/infinite-scrolling-background/infinite-scrolling-background.json';\nimport exampleFile46 from '../../fixtures/inventory-system/inventory-system.json';\nimport exampleFile47 from '../../fixtures/isometric-game/isometric-game.json';\nimport exampleFile48 from '../../fixtures/javascript-blocks-in-platformer/javascript-blocks-in-platformer.json';\nimport exampleFile49 from '../../fixtures/keyboard-practice/keyboard-practice.json';\nimport exampleFile50 from '../../fixtures/level-editor/level-editor.json';\nimport exampleFile51 from '../../fixtures/level-selection-unlock/level-selection-unlock.json';\nimport exampleFile52 from '../../fixtures/lights/lights.json';\nimport exampleFile53 from '../../fixtures/load-image-from-url/load-image-from-url.json';\nimport exampleFile54 from '../../fixtures/magnet/magnet.json';\nimport exampleFile55 from '../../fixtures/manipulate-text-object/manipulate-text-object.json';\nimport exampleFile56 from '../../fixtures/menu-with-functions-and-text-effects/menu-with-functions-and-text-effects.json';\nimport exampleFile57 from '../../fixtures/move-camera-to-position/move-camera-to-position.json';\nimport exampleFile58 from '../../fixtures/move-object-back-and-forth/move-object-back-and-forth.json';\nimport exampleFile59 from '../../fixtures/move-object-in-circle/move-object-in-circle.json';\nimport exampleFile60 from '../../fixtures/move-object-toward-position/move-object-toward-position.json';\nimport exampleFile61 from '../../fixtures/move-object-with-mouse-joint/move-object-with-mouse-joint.json';\nimport exampleFile62 from '../../fixtures/move-object-with-physics/move-object-with-physics.json';\nimport exampleFile63 from '../../fixtures/multi-language-menu/multi-language-menu.json';\nimport exampleFile64 from '../../fixtures/multiplayer-platformer-with-gamepads/multiplayer-platformer-with-gamepads.json';\nimport exampleFile65 from '../../fixtures/multitouch/multitouch.json';\nimport exampleFile66 from '../../fixtures/object-gravity/object-gravity.json';\nimport exampleFile67 from '../../fixtures/object-selection/object-selection.json';\nimport exampleFile68 from '../../fixtures/objects-timers/objects-timers.json';\nimport exampleFile69 from '../../fixtures/online-multiplayer/online-multiplayer.json';\nimport exampleFile70 from '../../fixtures/open-url-in-browser/open-url-in-browser.json';\nimport exampleFile71 from '../../fixtures/pairs/pairs.json';\nimport exampleFile72 from '../../fixtures/parallax/parallax.json';\nimport exampleFile73 from '../../fixtures/parallax-scrolling/parallax-scrolling.json';\nimport exampleFile74 from '../../fixtures/parse-json-from-api/parse-json-from-api.json';\nimport exampleFile75 from '../../fixtures/parse-json-string/parse-json-string.json';\nimport exampleFile76 from '../../fixtures/particle-effects-demo/particle-effects-demo.json';\nimport exampleFile77 from '../../fixtures/particles-explosions/particles-explosions.json';\nimport exampleFile78 from '../../fixtures/particles-various-effects/particles-various-effects.json';\nimport exampleFile79 from '../../fixtures/pathfinding/pathfinding.json';\nimport exampleFile80 from '../../fixtures/pathfinding-basics/pathfinding-basics.json';\nimport exampleFile81 from '../../fixtures/physics/physics.json';\nimport exampleFile82 from '../../fixtures/physics-joints-demo/physics-joints-demo.json';\nimport exampleFile83 from '../../fixtures/physics-joints-settings-demo/physics-joints-settings-demo.json';\nimport exampleFile84 from '../../fixtures/pin-object-to-another/pin-object-to-another.json';\nimport exampleFile85 from '../../fixtures/pin-object-to-another-multiple-parents/pin-object-to-another-multiple-parents.json';\nimport exampleFile86 from '../../fixtures/pixel-perfect-platform-game/pixel-perfect-platform-game.json';\nimport exampleFile87 from '../../fixtures/plane-and-clouds/plane-and-clouds.json';\nimport exampleFile88 from '../../fixtures/platformer/platformer.json';\nimport exampleFile89 from '../../fixtures/platformer-double-jump/platformer-double-jump.json';\nimport exampleFile90 from '../../fixtures/play-music-on-mobile/play-music-on-mobile.json';\nimport exampleFile91 from '../../fixtures/play-stop-sprite-animation/play-stop-sprite-animation.json';\nimport exampleFile92 from '../../fixtures/racing-game/racing-game.json';\nimport exampleFile93 from '../../fixtures/ragdoll/ragdoll.json';\nimport exampleFile94 from '../../fixtures/rain/rain.json';\nimport exampleFile95 from '../../fixtures/random-color-picker/random-color-picker.json';\nimport exampleFile96 from '../../fixtures/rotate-toward-mouse/rotate-toward-mouse.json';\nimport exampleFile97 from '../../fixtures/rotate-toward-position/rotate-toward-position.json';\nimport exampleFile98 from '../../fixtures/rotate-with-keypress/rotate-with-keypress.json';\nimport exampleFile99 from '../../fixtures/save-load/save-load.json';\nimport exampleFile100 from '../../fixtures/screen-shake/screen-shake.json';\nimport exampleFile101 from '../../fixtures/shoot-bullet-in-parabola/shoot-bullet-in-parabola.json';\nimport exampleFile102 from '../../fixtures/shoot-bullets/shoot-bullets.json';\nimport exampleFile103 from '../../fixtures/shooting-bullets-explanation/shooting-bullets-explanation.json';\nimport exampleFile104 from '../../fixtures/simple-space-shooter/simple-space-shooter.json';\nimport exampleFile105 from '../../fixtures/snap-object-to-grid/snap-object-to-grid.json';\nimport exampleFile106 from '../../fixtures/space-invaders/space-invaders.json';\nimport exampleFile107 from '../../fixtures/space-shooter/space-shooter.json';\nimport exampleFile108 from '../../fixtures/splash-screen/splash-screen.json';\nimport exampleFile109 from '../../fixtures/sprite-fade-in-out/sprite-fade-in-out.json';\nimport exampleFile110 from '../../fixtures/tabbed-menu-with-layers/tabbed-menu-with-layers.json';\nimport exampleFile111 from '../../fixtures/take-screenshot/take-screenshot.json';\nimport exampleFile112 from '../../fixtures/text-entry-object/text-entry-object.json';\nimport exampleFile113 from '../../fixtures/text-fade-in-out/text-fade-in-out.json';\nimport exampleFile114 from '../../fixtures/text-to-speech/text-to-speech.json';\nimport exampleFile115 from '../../fixtures/toggle-music-play-sound/toggle-music-play-sound.json';\nimport exampleFile116 from '../../fixtures/type-on-text-effect/type-on-text-effect.json';\nimport exampleFile117 from '../../fixtures/unlock-items/unlock-items.json';\nimport exampleFile118 from '../../fixtures/video-player/video-player.json';\nimport exampleFile119 from '../../fixtures/z-depth/z-depth.json';\nimport exampleFile120 from '../../fixtures/zombie-laser/zombie-laser.json';\n\n// prettier-ignore\nexport default {\n  'example://admob': exampleFile0,\n  'example://advanced-shape-based-painter': exampleFile1,\n  'example://animation-speed-scale': exampleFile2,\n  'example://asteroids': exampleFile3,\n  'example://basic-ai-with-pathfinding': exampleFile4,\n  'example://basic-artificial-intelligence': exampleFile5,\n  'example://basic-topdown-car-driving': exampleFile6,\n  'example://bbtext-object-demo': exampleFile7,\n  'example://betabox-basics-learning-experience': exampleFile8,\n  'example://board-walk-with-raycast': exampleFile9,\n  'example://bomb-the-crate': exampleFile10,\n  'example://bouncing-ball-and-rope': exampleFile11,\n  'example://breakout': exampleFile12,\n  'example://buttons': exampleFile13,\n  'example://cannon-ball-with-physics': exampleFile14,\n  'example://car-physics': exampleFile15,\n  'example://center-object-within-another': exampleFile16,\n  'example://change-position-of-object': exampleFile17,\n  'example://change-scale-of-sprites': exampleFile18,\n  'example://change-sprite-animation': exampleFile19,\n  'example://change-sprite-color': exampleFile20,\n  'example://character-selection': exampleFile21,\n  'example://count-down-timer': exampleFile22,\n  'example://create-object-with-mouseclick': exampleFile23,\n  'example://create-random-object': exampleFile24,\n  'example://custom-font': exampleFile25,\n  'example://custom-mouse-pointer': exampleFile26,\n  'example://customize-keys-with-lastpressedkey': exampleFile27,\n  'example://device-orientation-ballgame': exampleFile28,\n  'example://device-orientation-compass': exampleFile29,\n  'example://device-vibration': exampleFile30,\n  'example://dialogue-tree-with-yarn': exampleFile31,\n  'example://downhill-bike-physics-demo': exampleFile32,\n  'example://drag-camera-with-mouse': exampleFile33,\n  'example://drop-collect-items-from-storage': exampleFile34,\n  'example://endless-up-runner': exampleFile35,\n  'example://exit-app': exampleFile36,\n  'example://facebook-instant-game': exampleFile37,\n  'example://filesystem-create-directory': exampleFile38,\n  'example://find-diagonals': exampleFile39,\n  'example://flappy-bird': exampleFile40,\n  'example://game-feel-demo': exampleFile41,\n  'example://geodash': exampleFile42,\n  'example://geometry-monster': exampleFile43,\n  'example://health-bar': exampleFile44,\n  'example://infinite-scrolling-background': exampleFile45,\n  'example://inventory-system': exampleFile46,\n  'example://isometric-game': exampleFile47,\n  'example://javascript-blocks-in-platformer': exampleFile48,\n  'example://keyboard-practice': exampleFile49,\n  'example://level-editor': exampleFile50,\n  'example://level-selection-unlock': exampleFile51,\n  'example://lights': exampleFile52,\n  'example://load-image-from-url': exampleFile53,\n  'example://magnet': exampleFile54,\n  'example://manipulate-text-object': exampleFile55,\n  'example://menu-with-functions-and-text-effects': exampleFile56,\n  'example://move-camera-to-position': exampleFile57,\n  'example://move-object-back-and-forth': exampleFile58,\n  'example://move-object-in-circle': exampleFile59,\n  'example://move-object-toward-position': exampleFile60,\n  'example://move-object-with-mouse-joint': exampleFile61,\n  'example://move-object-with-physics': exampleFile62,\n  'example://multi-language-menu': exampleFile63,\n  'example://multiplayer-platformer-with-gamepads': exampleFile64,\n  'example://multitouch': exampleFile65,\n  'example://object-gravity': exampleFile66,\n  'example://object-selection': exampleFile67,\n  'example://objects-timers': exampleFile68,\n  'example://online-multiplayer': exampleFile69,\n  'example://open-url-in-browser': exampleFile70,\n  'example://pairs': exampleFile71,\n  'example://parallax': exampleFile72,\n  'example://parallax-scrolling': exampleFile73,\n  'example://parse-json-from-api': exampleFile74,\n  'example://parse-json-string': exampleFile75,\n  'example://particle-effects-demo': exampleFile76,\n  'example://particles-explosions': exampleFile77,\n  'example://particles-various-effects': exampleFile78,\n  'example://pathfinding': exampleFile79,\n  'example://pathfinding-basics': exampleFile80,\n  'example://physics': exampleFile81,\n  'example://physics-joints-demo': exampleFile82,\n  'example://physics-joints-settings-demo': exampleFile83,\n  'example://pin-object-to-another': exampleFile84,\n  'example://pin-object-to-another-multiple-parents': exampleFile85,\n  'example://pixel-perfect-platform-game': exampleFile86,\n  'example://plane-and-clouds': exampleFile87,\n  'example://platformer': exampleFile88,\n  'example://platformer-double-jump': exampleFile89,\n  'example://play-music-on-mobile': exampleFile90,\n  'example://play-stop-sprite-animation': exampleFile91,\n  'example://racing-game': exampleFile92,\n  'example://ragdoll': exampleFile93,\n  'example://rain': exampleFile94,\n  'example://random-color-picker': exampleFile95,\n  'example://rotate-toward-mouse': exampleFile96,\n  'example://rotate-toward-position': exampleFile97,\n  'example://rotate-with-keypress': exampleFile98,\n  'example://save-load': exampleFile99,\n  'example://screen-shake': exampleFile100,\n  'example://shoot-bullet-in-parabola': exampleFile101,\n  'example://shoot-bullets': exampleFile102,\n  'example://shooting-bullets-explanation': exampleFile103,\n  'example://simple-space-shooter': exampleFile104,\n  'example://snap-object-to-grid': exampleFile105,\n  'example://space-invaders': exampleFile106,\n  'example://space-shooter': exampleFile107,\n  'example://splash-screen': exampleFile108,\n  'example://sprite-fade-in-out': exampleFile109,\n  'example://tabbed-menu-with-layers': exampleFile110,\n  'example://take-screenshot': exampleFile111,\n  'example://text-entry-object': exampleFile112,\n  'example://text-fade-in-out': exampleFile113,\n  'example://text-to-speech': exampleFile114,\n  'example://toggle-music-play-sound': exampleFile115,\n  'example://type-on-text-effect': exampleFile116,\n  'example://unlock-items': exampleFile117,\n  'example://video-player': exampleFile118,\n  'example://z-depth': exampleFile119,\n  'example://zombie-laser': exampleFile120,\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type StorageProvider, type FileMetadata } from '../index';\nimport internalExampleFiles from './InternalExampleFiles';\nimport {\n  POSITIONAL_ARGUMENTS_KEY,\n  type AppArguments,\n} from '../../Utils/Window';\n\n/**\n * \"Internal\" storage giving access to embedded examples.\n * Used for the web-app.\n */\nexport default ({\n  internalName: 'InternalFile',\n  name: t`Internal files`,\n  hiddenInOpenDialog: true,\n  hiddenInSaveDialog: true,\n  getFileMetadataFromAppArguments: (appArguments: AppArguments) => {\n    if (!appArguments[POSITIONAL_ARGUMENTS_KEY]) return null;\n    if (!appArguments[POSITIONAL_ARGUMENTS_KEY].length) return null;\n\n    return {\n      fileIdentifier: appArguments[POSITIONAL_ARGUMENTS_KEY][0],\n    };\n  },\n  createOperations: ({ setDialog, closeDialog }) => ({\n    onOpen: (fileMetadata: FileMetadata) => {\n      const url = fileMetadata.fileIdentifier;\n      if (internalExampleFiles[url])\n        return Promise.resolve({\n          content: internalExampleFiles[url],\n        });\n\n      return Promise.reject(new Error(`Unknown built-in game with URL ${url}`));\n    },\n  }),\n}: StorageProvider);\n","import React, { Component } from 'react';\nimport { sendNewGameCreated } from '../Utils/Analytics/EventSender';\nimport { Column } from '../UI/Grid';\nimport ExamplesList from './ExamplesList';\nimport InternalFileStorageProvider from '../ProjectsStorage/InternalFileStorageProvider';\nimport ExamplesInformation from './ExamplesInformation';\n\n// To add a new example, add it first in resources/examples (at which point you can see it\n// in the desktop version), then run these scripts:\n// * scripts/update-examples-information-from-resources-examples.js (update metadata)\n// * scripts/update-fixtures-from-resources-examples.js (update web-app examples)\n// and upload the examples to `gdevelop-resources` s3.\nconst exampleNames: Array<string> = Object.keys(ExamplesInformation);\n\nexport default class BrowserExamples extends Component {\n  render() {\n    return (\n      <Column noMargin>\n        <ExamplesList\n          exampleNames={exampleNames}\n          onCreateFromExample={exampleName => {\n            sendNewGameCreated(exampleName);\n            this.props.onOpen(InternalFileStorageProvider, {\n              fileIdentifier: `example://${exampleName}`,\n            });\n          }}\n        />\n      </Column>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport Dialog from '../UI/Dialog';\nimport Window from '../Utils/Window';\nimport FlatButton from '../UI/FlatButton';\nimport Text from '../UI/Text';\nimport { ResponsiveWindowMeasurer } from '../UI/Reponsive/ResponsiveWindowMeasurer';\nimport Fullscreen from '@material-ui/icons/Fullscreen';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Spacer, Line } from '../UI/Grid';\n\nexport default class BetaIntroDialog extends Component {\n  _onOpenWebsite() {\n    Window.openExternalURL('http://gdevelop-app.com');\n  }\n\n  render() {\n    const { open, onClose } = this.props;\n\n    return (\n      <ResponsiveWindowMeasurer>\n        {windowWidth => (\n          <Dialog\n            title={<Trans>Welcome to GDevelop</Trans>}\n            actions={[\n              <FlatButton\n                key=\"download\"\n                label={<Trans>Download GDevelop desktop app</Trans>}\n                primary={false}\n                onClick={this._onOpenWebsite}\n              />,\n              <FlatButton\n                label={<Trans>Close</Trans>}\n                primary={false}\n                onClick={onClose}\n                key=\"close\"\n              />,\n            ]}\n            cannotBeDismissed={false}\n            open={open}\n            onRequestClose={onClose}\n          >\n            <div>\n              <Text>\n                <Trans>\n                  This is a version of GDevelop 5 that you can try online.\n                </Trans>\n              </Text>\n              <Text>\n                Choose a <b>new project to create</b>, then edit the scene or\n                the events ruling the game. You can{' '}\n                <b>launch a preview of your game</b> at any time.\n              </Text>\n              <Text>\n                <Trans>\n                  Download the full version of GDevelop on your desktop computer\n                  to create your own game without limits!\n                </Trans>\n              </Text>\n              {windowWidth === 'small' &&\n                (!Window.isFullscreen() ? (\n                  <React.Fragment>\n                    <Spacer />\n                    <Text>\n                      <Trans>\n                        You're working on a small screen. It's recommended to\n                        activate Fullscreen Mode for using GDevelop.\n                      </Trans>\n                    </Text>\n                    <Line justifyContent=\"center\">\n                      <RaisedButton\n                        label={<Trans>Activate Fullscreen</Trans>}\n                        primary\n                        onClick={() => {\n                          Window.requestFullscreen();\n                          setTimeout(() => {\n                            this.forceUpdate();\n                          }, 250 /* Let a bit of time for the fullscreen to kick in */);\n                        }}\n                        icon={<Fullscreen />}\n                      />\n                    </Line>\n                  </React.Fragment>\n                ) : (\n                  <Line justifyContent=\"center\">\n                    <RaisedButton\n                      label={<Trans>Start using GDevelop</Trans>}\n                      primary\n                      onClick={onClose}\n                    />\n                  </Line>\n                ))}\n            </div>\n          </Dialog>\n        )}\n      </ResponsiveWindowMeasurer>\n    );\n  }\n}\n","// @flow\nimport Window from '../Utils/Window';\nimport { type ResourceExternalEditor } from './ResourceExternalEditor.flow';\nimport { sendExternalEditorOpened } from '../Utils/Analytics/EventSender';\n\n/**\n * This is the list of editors that can be used to edit resources\n * when running in a browser.\n */\nconst editors: Array<ResourceExternalEditor> = [\n  {\n    name: 'piskel-app',\n    displayName: 'Edit with Piskel',\n    kind: 'image',\n    edit: () => {\n      sendExternalEditorOpened('piskel');\n      Window.showMessageBox(\n        'This feature is only supported in the desktop version for now!\\nDownload it from GDevelop website.'\n      );\n    },\n  },\n  {\n    name: 'jfxr-app',\n    displayName: 'Edit with Jfxr',\n    kind: 'audio',\n    edit: () => {\n      sendExternalEditorOpened('jfxr');\n      Window.showMessageBox(\n        'This feature is only supported in the desktop version for now!\\nDownload it from GDevelop website.'\n      );\n    },\n  },\n  {\n    name: 'yarn-app',\n    displayName: 'Edit with Yarn',\n    kind: 'json',\n    edit: () => {\n      sendExternalEditorOpened('yarn');\n      Window.showMessageBox(\n        'This feature is only supported in the desktop version for now!\\nDownload it from GDevelop website.'\n      );\n    },\n  },\n];\n\nexport default editors;\n","// @flow\nimport {\n  type EventsFunctionCodeWriter,\n  type EventsFunctionCodeWriterCallbacks,\n} from '..';\nimport { uploadObject, getBaseUrl } from '../../Utils/GDevelopServices/Preview';\nimport { makeTimestampedId } from '../../Utils/TimestampedId';\nimport slugs from 'slugs';\n\n/**\n * Create the EventsFunctionCodeWriter that writes generated code for events functions\n * to temporary S3 files.\n */\nexport const makeBrowserS3EventsFunctionCodeWriter = ({\n  onWriteFile,\n}: EventsFunctionCodeWriterCallbacks): EventsFunctionCodeWriter => {\n  const prefix = makeTimestampedId();\n  const getPathFor = (codeNamespace: string) => {\n    return `${prefix}/${slugs(codeNamespace)}.js`;\n  };\n\n  return {\n    getIncludeFileFor: (codeNamespace: string) =>\n      getBaseUrl() + getPathFor(codeNamespace),\n    writeFunctionCode: (\n      functionCodeNamespace: string,\n      code: string\n    ): Promise<void> => {\n      const key = getPathFor(functionCodeNamespace);\n      onWriteFile({ includeFile: key, content: code });\n      console.log(`Uploading function generated code to ${key}...`);\n      return uploadObject({\n        Key: getPathFor(functionCodeNamespace),\n        Body: code,\n        ContentType: 'text/javascript',\n      });\n    },\n    writeBehaviorCode: (\n      behaviorCodeNamespace: string,\n      code: string\n    ): Promise<void> => {\n      const key = getPathFor(behaviorCodeNamespace);\n      onWriteFile({ includeFile: key, content: code });\n      console.log(`Uploading behavior generated code to ${key}...`);\n      return uploadObject({\n        Key: getPathFor(behaviorCodeNamespace),\n        Body: code,\n        ContentType: 'text/javascript',\n      });\n    },\n  };\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport Window from '../../Utils/Window';\nimport { serializeToJSObject } from '../../Utils/Serializer';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport Text from '../../UI/Text';\n\ntype Props = {|\n  project: gdProject,\n  onDone: () => void,\n|};\n\nexport default class DownloadSaveAsDialog extends React.Component<Props> {\n  _download = () => {\n    let content = '';\n    try {\n      content = JSON.stringify(serializeToJSObject(this.props.project));\n    } catch (err) {\n      showErrorBox('Unable to save your project', err);\n      return;\n    }\n    var uri = encodeURI('data:application/json;charset=utf-8,' + content);\n\n    var downloadLink = document.createElement('a');\n    downloadLink.href = uri;\n    downloadLink.download = 'game.json';\n\n    const { body } = document;\n    if (!body) return;\n\n    body.appendChild(downloadLink);\n    downloadLink.click();\n    body.removeChild(downloadLink);\n  };\n\n  render() {\n    const { onDone } = this.props;\n\n    const actions = [\n      <FlatButton\n        key=\"download\"\n        label={<Trans>Download GDevelop desktop version</Trans>}\n        primary={false}\n        onClick={() => Window.openExternalURL('http://gdevelop-app.com')}\n      />,\n      <FlatButton\n        key=\"close\"\n        label={<Trans>Close</Trans>}\n        primary={false}\n        onClick={onDone}\n      />,\n    ];\n\n    return (\n      <Dialog\n        actions={actions}\n        open\n        cannotBeDismissed={false}\n        onRequestClose={onDone}\n        maxWidth=\"sm\"\n      >\n        <Column noMargin>\n          <Line>\n            <Text>\n              <Trans>\n                You can download the file of your game to continue working on it\n                using the full GDevelop version:\n              </Trans>\n            </Text>\n          </Line>\n          <Line>\n            <Column expand>\n              <RaisedButton\n                label={<Trans>Download game file</Trans>}\n                fullWidth\n                primary\n                onClick={this._download}\n              />\n            </Column>\n          </Line>\n        </Column>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { type StorageProvider, type FileMetadata } from '../index';\nimport DownloadSaveAsDialog from './DownloadSaveAsDialog';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\n\n/**\n * \"Storage\" allowing to download a copy of the game.\n * Used for the web-app.\n */\nexport default ({\n  internalName: 'DownloadFile',\n  name: t`Download a copy`,\n  renderIcon: () => <SaveAlt />,\n  hiddenInOpenDialog: true,\n  createOperations: ({ setDialog, closeDialog }) => ({\n    onSaveProjectAs: (project: gdProject, fileMetadata: ?FileMetadata) => {\n      return new Promise(resolve => {\n        setDialog(() => (\n          <DownloadSaveAsDialog\n            onDone={() => {\n              closeDialog();\n              resolve({ wasSaved: false, fileMetadata });\n            }}\n            project={project}\n          />\n        ));\n      });\n    },\n  }),\n}: StorageProvider);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M12,14.56L16.35,18.16L18.2,16.95V18.3L12,22L5.82,18.3V16.95L7.68,18.16L12,14.56M7.68,2.5L12,6.09L16.32,2.5L22.5,6.5L18.23,9.94L22.5,13.36L16.32,17.39L12,13.78L7.68,17.39L1.5,13.36L5.77,9.94L1.5,6.5L7.68,2.5M12,13.68L18.13,9.94L12,6.19L5.87,9.94L12,13.68Z\" />\n  </SvgIcon>\n));\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { type StorageProvider, type FileMetadata } from '../index';\nimport Dropbox from '../../UI/CustomSvgIcons/Dropbox';\n\nlet apisLoaded = false;\nlet apisLoadingPromise = null;\n\n/**\n * Load Dropbox APIs. Return a fulfilled promise when done.\n */\nconst initializeApis = (): Promise<void> => {\n  if (apisLoaded) {\n    return Promise.resolve();\n  }\n\n  if (apisLoadingPromise) {\n    // Only do a single initialization attempt at a given time.\n    return apisLoadingPromise;\n  }\n\n  apisLoadingPromise = new Promise((resolve, reject) => {\n    reject(new Error('Unimplemented'));\n  })\n    .then(() => {\n      apisLoaded = true;\n      apisLoadingPromise = null;\n    })\n    .catch(error => {\n      console.error('Error while loading Dropbox APIs:', error);\n      apisLoadingPromise = null;\n\n      throw error;\n    });\n\n  return apisLoadingPromise;\n};\n\ntype DropboxUser = {};\n\n/**\n * Sign in the user to Dropbox, returning the user object after a successful sign up\n * (or if the user is already signed in).\n */\nexport const authenticate = (): Promise<DropboxUser> => {\n  return initializeApis().then(() => {\n    throw new Error('Unimplemented');\n  });\n};\n\n/**\n * A storage that is using Dropbox to open and store files.\n */\nexport default ({\n  internalName: 'Dropbox',\n  name: t`Dropbox (coming soon)`,\n  disabled: true,\n  renderIcon: () => <Dropbox />,\n  createOperations: ({ setDialog, closeDialog }) => {\n    initializeApis().catch(() => {});\n\n    return {\n      doesInitialOpenRequireUserInteraction: true,\n      onOpen: (\n        fileMetadata: FileMetadata\n      ): Promise<{|\n        content: Object,\n      |}> => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n      onOpenWithPicker: (): Promise<?FileMetadata> => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n      onSaveProject: (project: gdProject, fileMetadata: FileMetadata) => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n      onSaveProjectAs: (project: gdProject, fileMetadata: ?FileMetadata) => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n    };\n  },\n}: StorageProvider);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M20.08,13.64C21.17,13.81 22,14.75 22,15.89C22,16.78 21.5,17.55 20.75,17.92L20.58,18H9.18L9.16,18V18C7.71,18 6.54,16.81 6.54,15.36C6.54,13.9 7.72,12.72 9.18,12.72L9.4,12.73L9.39,12.53A3.3,3.3 0 0,1 12.69,9.23C13.97,9.23 15.08,9.96 15.63,11C16.08,10.73 16.62,10.55 17.21,10.55A2.88,2.88 0 0,1 20.09,13.43L20.08,13.64M8.82,12.16C7.21,12.34 5.96,13.7 5.96,15.36C5.96,16.04 6.17,16.66 6.5,17.18H4.73A2.73,2.73 0 0,1 2,14.45C2,13 3.12,11.83 4.53,11.73L4.46,11.06C4.46,9.36 5.84,8 7.54,8C8.17,8 8.77,8.18 9.26,8.5C9.95,7.11 11.4,6.15 13.07,6.15C15.27,6.15 17.08,7.83 17.3,9.97H17.21C16.73,9.97 16.27,10.07 15.84,10.25C15.12,9.25 13.96,8.64 12.69,8.64C10.67,8.64 9,10.19 8.82,12.16Z\" />\n  </SvgIcon>\n));\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { type StorageProvider, type FileMetadata } from '../index';\nimport OneDrive from '../../UI/CustomSvgIcons/OneDrive';\n\nlet apisLoaded = false;\nlet apisLoadingPromise = null;\n\n/**\n * Load OneDrive APIs. Return a fulfilled promise when done.\n */\nconst initializeApis = (): Promise<void> => {\n  if (apisLoaded) {\n    return Promise.resolve();\n  }\n\n  if (apisLoadingPromise) {\n    // Only do a single initialization attempt at a given time.\n    return apisLoadingPromise;\n  }\n\n  apisLoadingPromise = new Promise((resolve, reject) => {\n    reject(new Error('Unimplemented'));\n  })\n    .then(() => {\n      apisLoaded = true;\n      apisLoadingPromise = null;\n    })\n    .catch(error => {\n      console.error('Error while loading OneDrive APIs:', error);\n      apisLoadingPromise = null;\n\n      throw error;\n    });\n\n  return apisLoadingPromise;\n};\n\ntype OneDriveUser = {};\n\n/**\n * Sign in the user to OneDrive, returning the user object after a successful sign up\n * (or if the user is already signed in).\n */\nexport const authenticate = (): Promise<OneDriveUser> => {\n  return initializeApis().then(() => {\n    throw new Error('Unimplemented');\n  });\n};\n\n/**\n * A storage that is using OneDrive to open and store files.\n */\nexport default ({\n  internalName: 'OneDrive',\n  name: t`OneDrive (coming soon)`,\n  disabled: true,\n  renderIcon: () => <OneDrive />,\n  createOperations: ({ setDialog, closeDialog }) => {\n    initializeApis().catch(() => {});\n\n    return {\n      doesInitialOpenRequireUserInteraction: true,\n      onOpen: (\n        fileMetadata: FileMetadata\n      ): Promise<{|\n        content: Object,\n      |}> => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n      onOpenWithPicker: (): Promise<?FileMetadata> => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n      onSaveProject: (project: gdProject, fileMetadata: FileMetadata) => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n      onSaveProjectAs: (project: gdProject, fileMetadata: ?FileMetadata) => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n    };\n  },\n}: StorageProvider);\n","// @flow\nimport * as React from 'react';\nimport MainFrame from './MainFrame';\nimport Window from './Utils/Window';\nimport ExportDialog from './Export/ExportDialog';\nimport CreateProjectDialog from './ProjectCreation/CreateProjectDialog';\nimport Authentification from './Utils/GDevelopServices/Authentification';\nimport './UI/iconmoon-font.css'; // Styles for Iconmoon font.\n\n// Import for browser only IDE\nimport BrowserExamples from './ProjectCreation/BrowserExamples';\nimport BrowserStarters from './ProjectCreation/BrowserStarters';\nimport BrowserIntroDialog from './MainFrame/BrowserIntroDialog';\nimport browserResourceSources from './ResourcesList/BrowserResourceSources';\nimport browserResourceExternalEditors from './ResourcesList/BrowserResourceExternalEditors';\nimport BrowserS3PreviewLauncher from './Export/BrowserExporters/BrowserS3PreviewLauncher';\nimport { getBrowserExporters } from './Export/BrowserExporters';\nimport makeExtensionsLoader from './JsExtensionsLoader/BrowserJsExtensionsLoader';\nimport ObjectsEditorService from './ObjectEditor/ObjectsEditorService';\nimport ObjectsRenderingService from './ObjectsRendering/ObjectsRenderingService';\nimport { makeBrowserS3EventsFunctionCodeWriter } from './EventsFunctionsExtensionsLoader/CodeWriters/BrowserS3EventsFunctionCodeWriter';\nimport Providers from './MainFrame/Providers';\nimport ProjectStorageProviders from './ProjectsStorage/ProjectStorageProviders';\nimport InternalFileStorageProvider from './ProjectsStorage/InternalFileStorageProvider';\nimport GoogleDriveStorageProvider from './ProjectsStorage/GoogleDriveStorageProvider';\nimport DownloadFileStorageProvider from './ProjectsStorage/DownloadFileStorageProvider';\nimport DropboxStorageProvider from './ProjectsStorage/DropboxStorageProvider';\nimport OneDriveStorageProvider from './ProjectsStorage/OneDriveStorageProvider';\nimport UnsavedChangesContext from './MainFrame/UnsavedChangesContext';\n\nexport const create = (authentification: Authentification) => {\n  Window.setUpContextMenu();\n\n  let app = null;\n  const appArguments = Window.getArguments();\n\n  app = (\n    <Providers\n      authentification={authentification}\n      disableCheckForUpdates={!!appArguments['disable-update-check']}\n      makeEventsFunctionCodeWriter={makeBrowserS3EventsFunctionCodeWriter}\n      eventsFunctionsExtensionWriter={null}\n      eventsFunctionsExtensionOpener={null}\n    >\n      {({ i18n, eventsFunctionsExtensionsState }) => (\n        <ProjectStorageProviders\n          appArguments={appArguments}\n          storageProviders={[\n            InternalFileStorageProvider,\n            GoogleDriveStorageProvider,\n            DropboxStorageProvider,\n            OneDriveStorageProvider,\n            DownloadFileStorageProvider,\n          ]}\n          defaultStorageProvider={InternalFileStorageProvider}\n        >\n          {({\n            getStorageProviderOperations,\n            storageProviders,\n            initialFileMetadataToOpen,\n            getStorageProvider,\n          }) => (\n            <UnsavedChangesContext.Consumer>\n              {unsavedChanges => (\n                <MainFrame\n                  i18n={i18n}\n                  eventsFunctionsExtensionsState={\n                    eventsFunctionsExtensionsState\n                  }\n                  renderPreviewLauncher={(props, ref) => (\n                    <BrowserS3PreviewLauncher {...props} ref={ref} />\n                  )}\n                  renderExportDialog={props => (\n                    <ExportDialog\n                      {...props}\n                      exporters={getBrowserExporters()}\n                      allExportersRequireOnline\n                    />\n                  )}\n                  renderCreateDialog={props => (\n                    <CreateProjectDialog\n                      {...props}\n                      examplesComponent={BrowserExamples}\n                      startersComponent={BrowserStarters}\n                    />\n                  )}\n                  introDialog={<BrowserIntroDialog />}\n                  storageProviders={storageProviders}\n                  getStorageProviderOperations={getStorageProviderOperations}\n                  getStorageProvider={getStorageProvider}\n                  resourceSources={browserResourceSources}\n                  resourceExternalEditors={browserResourceExternalEditors}\n                  extensionsLoader={makeExtensionsLoader({\n                    objectsEditorService: ObjectsEditorService,\n                    objectsRenderingService: ObjectsRenderingService,\n                    filterExamples: !Window.isDev(),\n                  })}\n                  initialFileMetadataToOpen={initialFileMetadataToOpen}\n                  unsavedChanges={unsavedChanges}\n                />\n              )}\n            </UnsavedChangesContext.Consumer>\n          )}\n        </ProjectStorageProviders>\n      )}\n    </Providers>\n  );\n\n  return app;\n};\n"],"sourceRoot":""}