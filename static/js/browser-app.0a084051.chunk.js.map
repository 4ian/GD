{"version":3,"sources":["GameEngineFinder/BrowserS3GDJSFinder.js","Export/BrowserExporters/BrowserFileSystem.js","Utils/BrowserArchiver.js","ProjectCreation/BrowserStarters.js","ResourcesList/BrowserResourceSources.js","Export/BrowserExporters/BrowserS3PreviewLauncher/index.js","Export/BrowserExporters/BrowserS3PreviewLauncher/BrowserPreviewLinkDialog.js","Export/BrowserExporters/BrowserS3PreviewLauncher/BrowserPreviewErrorDialog.js","Export/BrowserExporters/BrowserS3FileSystem.js","Export/BrowserExporters/BrowserOnlineCordovaExport.js","Utils/Zip.js/index.js","Export/BrowserExporters/BrowserOnlineElectronExport.js","Export/BrowserExporters/BrowserOnlineWebExport.js","Export/BrowserExporters/BrowserHTML5Export.js","Export/BrowserExporters/BrowserCordovaExport.js","Export/BrowserExporters/BrowserElectronExport.js","Export/BrowserExporters/BrowserCocos2dExport.js","Export/BrowserExporters/BrowserFacebookInstantGamesExport.js","JsExtensionsLoader/BrowserJsExtensionsLoader.js","ProjectsStorage/GoogleDriveStorageProvider/index.js","UI/CustomSvgIcons/GoogleDrive.js","ProjectsStorage/GoogleDriveStorageProvider/GoogleDriveFileOrFolderPicker.js","ProjectsStorage/GoogleDriveStorageProvider/GoogleDriveSaveAsDialog.js","Export/BrowserExporters/index.js","Utils/BlobDownloadUrlHolder.js","Utils/GDevelopServices/Preview.js","Export/BrowserExporters/BrowserFileUploader.js","ProjectsStorage/InternalFileStorageProvider/InternalExampleFiles.js","ProjectsStorage/InternalFileStorageProvider/index.js","ProjectCreation/BrowserExamples.js","MainFrame/BrowserIntroDialog.js","ResourcesList/BrowserResourceExternalEditors.js","EventsFunctionsExtensionsLoader/CodeWriters/BrowserS3EventsFunctionCodeWriter.js","ProjectsStorage/DownloadFileStorageProvider/DownloadSaveAsDialog.js","ProjectsStorage/DownloadFileStorageProvider/index.js","UI/CustomSvgIcons/Dropbox.js","ProjectsStorage/DropboxStorageProvider/index.js","UI/CustomSvgIcons/OneDrive.js","ProjectsStorage/OneDriveStorageProvider/index.js","BrowserApp.js","Utils/LoadScript.js"],"names":["__webpack_require__","d","__webpack_exports__","findGDJS","gdjsRoot","filesToDownload","preview","web","cocos2d-js","facebook-instant-games","cordova","electron","fileSet","Promise","all","map","relativeFilePath","url","fetch","then","response","ok","console","error","concat","Error","status","text","filePath","filesContent","gd","global","isURL","filename","substr","BrowserFileSystem","_ref","_this","this","textFiles","Object","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_textFiles","_filesToDownload","getAllTextFilesIn","pathPrefix","keys","filter","indexOf","getAllUrlFilesIn","mkDir","path","dirExists","clearDir","forEach","getTempDir","fileNameFrom","fullpath","basename","dirNameFrom","dirname","makeAbsolute","filePathOrURL","baseDirectoryOrURL","isAbsolute","resolve","normalize","makeRelative","substring","length","warn","relative","charAt","copyFile","source","dest","writeToFile","content","readFile","file","readDir","ext","toUpperCase","output","VectorString","upperCaseFilePath","push_back","fileExists","normalizedFilePath","textFileDescriptor","eachCallback","array","callback","done","index","callNextCallback","downloadUrlsToBlobs","_ref2","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","urlFiles","onProgress","count","wrap","_context","prev","next","abrupt","_ref3","_ref4","mode","blob","downloadedBlobs","info","stop","_x","apply","arguments","archiveFiles","_ref6","_callee2","_ref5","blobFiles","basePath","zipJs","zippedFilesCount","totalFilesCount","_context2","initializeZipJs","sent","reject","createWriter","BlobWriter","zipWriter","_ref7","add","BlobReader","_ref8","TextReader","close","_x2","BrowserStarters","react__WEBPACK_IMPORTED_MODULE_6___default","createElement","_UI_Grid__WEBPACK_IMPORTED_MODULE_10__","noMargin","_UI_Text__WEBPACK_IMPORTED_MODULE_12__","_lingui_react__WEBPACK_IMPORTED_MODULE_5__","id","expand","_UI_List__WEBPACK_IMPORTED_MODULE_7__","leftIcon","_UI_ListIcon__WEBPACK_IMPORTED_MODULE_11__","iconSize","src","primaryText","secondaryText","secondaryTextLines","onClick","sendNewGameCreated","props","onOpen","InternalFileStorageProvider","fileIdentifier","project","ProjectHelper","createNewGDJSProject","onCreate","alignItems","justifyContent","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_8__","label","onShowExamples","Component","styles","explanations","textAlign","margin","publicImageUrls","publicAudioUrls","publicFontUrls","publicVideoUrls","publicJsonUrls","nameFromUrl","urlParts","split","replace","GenericResourcesChooser","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","open","resolveWithResources","chooseResources","undefined","setState","_onChoose","chosenResourceUrl","newResource","createNewResource","setFile","setName","_onClose","listItems","urls","_UI_List__WEBPACK_IMPORTED_MODULE_10__","key","urlsAreImages","_UI_ListIcon__WEBPACK_IMPORTED_MODULE_9__","Window","openExternalURL","actions","_UI_FlatButton__WEBPACK_IMPORTED_MODULE_7__","primary","_UI_Dialog__WEBPACK_IMPORTED_MODULE_8__","title","style","_UI_Text__WEBPACK_IMPORTED_MODULE_11__","_UI_Grid__WEBPACK_IMPORTED_MODULE_13__","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_12__","_onOpenWebsite","name","displayName","kind","component","_temp","_React$Component","AudioResourceChooser","_getPrototypeOf2","_this2","_len","args","Array","_key","_chooser","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","value","_this3","assign","AudioResource","ref","chooser","React","_temp2","_React$Component2","ImageResourceChooser","_getPrototypeOf3","_this4","_len2","_key2","_this5","ImageResource","_temp3","_React$Component3","FontResourceChooser","_getPrototypeOf4","_this6","_len3","_key3","_this7","FontResource","_temp4","_React$Component4","VideoResourceChooser","_getPrototypeOf5","_this8","_len4","_key4","_this9","VideoResource","_temp5","_React$Component5","JsonResourceChooser","_getPrototypeOf6","_this10","_len5","_key5","_this11","JsonResource","BrowserS3PreviewLauncher","canDoNetworkPreview","showPreviewLinkDialog","_openPreviewWindow","windowObjectReference","window","_prepareExporter","prefix","makeTimestampedId","outputDir","getBaseUrl","browserS3FileSystem","BrowserS3FileSystem","bucketBaseUrl","fileSystem","assignIn","AbstractFileSystemJS","exporter","Exporter","setCodeOutputDirectory","launchLayoutPreview","layout","options","exportLayoutForPixiPreview","delete","uploadPendingObjects","finalUrl","catch","launchExternalLayoutPreview","externalLayout","exportExternalLayoutForPixiPreview","_this$state","react__WEBPACK_IMPORTED_MODULE_5__","_BrowserPreviewErrorDialog__WEBPACK_IMPORTED_MODULE_7__","onClose","_BrowserPreviewLinkDialog__WEBPACK_IMPORTED_MODULE_6__","BrowserPreviewLinkDialog","_makeOnOpen","i18n","showErrorBox","_","_UI_Dialog__WEBPACK_IMPORTED_MODULE_7__","_UI_FlatButton__WEBPACK_IMPORTED_MODULE_8__","modal","components","BrowserPreviewErrorDialog","_this$props","onRequestClose","_UI_Grid__WEBPACK_IMPORTED_MODULE_9__","_UI_Text__WEBPACK_IMPORTED_MODULE_10__","code","values","0","message","_pendingUploadObjects","_allCopiedExternalUrls","Set","uploadObject","result","log","baseDirectory","fullPath","contents","fileExtension","extname","push","Key","Body","ContentType",".js",".html","_indexedFilesContent","upperCaseUrl","browserOnlineCordovaExportPipeline","onlineBuildType","getInitialExportState","canLaunchBuild","renderHeader","react__WEBPACK_IMPORTED_MODULE_1__","_GenericExporters_OnlineCordovaExport__WEBPACK_IMPORTED_MODULE_8__","renderLaunchButtonLabel","_lingui_react__WEBPACK_IMPORTED_MODULE_0__","prepareExporter","context","abstractFileSystem","launchExport","exportOptions","MapStringBoolean","set","exportWholePixiProject","launchResourcesDownload","updateStepProgress","launchCompression","launchUpload","blobFile","getBuildFileUploadOptions","uploadOptions","uploadBlobFile","launchOnlineBuild","exportState","userProfile","uploadBucketKey","getAuthorizationHeader","profile","buildCordovaAndroid","uid","_LoadScript__WEBPACK_IMPORTED_MODULE_0__","zipJsLoaded","zipJsLoadingPromise","zip","loadScript","PUBLIC_URL","workerScripts","deflater","inflater","browserOnlineElectronExportPipeline","targets","_GenericExporters_OnlineElectronExport__WEBPACK_IMPORTED_MODULE_8__","buildElectron","browserOnlineWebExportPipeline","_GenericExporters_OnlineWebExport__WEBPACK_IMPORTED_MODULE_8__","buildWeb","browserHTML5ExportPipeline","_GenericExporters_HTML5Export__WEBPACK_IMPORTED_MODULE_8__","renderDoneFooter","compressionOutput","renderGameButton","_Utils_BlobDownloadUrlHolder__WEBPACK_IMPORTED_MODULE_7__","blobDownloadUrl","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_6__","fullWidth","body","document","appendChild","display","href","download","click","removeChild","openBlobDownloadUrl","browserCordovaExportPipeline","_GenericExporters_CordovaExport__WEBPACK_IMPORTED_MODULE_8__","browserElectronExportPipeline","_GenericExporters_ElectronExport__WEBPACK_IMPORTED_MODULE_8__","browserCocos2dExportPipeline","debugMode","updateExportState","react__WEBPACK_IMPORTED_MODULE_2__","_UI_Grid__WEBPACK_IMPORTED_MODULE_11__","_GenericExporters_Cocos2dExport__WEBPACK_IMPORTED_MODULE_9__","_UI_Toggle__WEBPACK_IMPORTED_MODULE_12__","onToggle","e","check","prevState","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","toggled","labelPosition","_lingui_react__WEBPACK_IMPORTED_MODULE_1__","exportWholeCocos2dProject","_Utils_BlobDownloadUrlHolder__WEBPACK_IMPORTED_MODULE_8__","_UI_RaisedButton__WEBPACK_IMPORTED_MODULE_7__","browserFacebookInstantGamesExportPipeline","_GenericExporters_FacebookInstantGamesExport__WEBPACK_IMPORTED_MODULE_8__","makeExtensionsLoader","___WEBPACK_IMPORTED_MODULE_0__","jsExtensions","extensionModule","require","objectsRenderingServiceModules","pixi-multistyle-text/dist/pixi-multistyle-text.umd","objectsEditorService","objectsRenderingService","filterExamples","loadAllExtensions","includes","registerEditorConfigurations","requirePath","registerModule","registerInstanceRenderers","extensionModulePath","loadExtension","JsPlatform","get","react__WEBPACK_IMPORTED_MODULE_0__","_Utils_Serializer__WEBPACK_IMPORTED_MODULE_1__","_UI_CustomSvgIcons_GoogleDrive__WEBPACK_IMPORTED_MODULE_2__","_GoogleDriveSaveAsDialog__WEBPACK_IMPORTED_MODULE_3__","_Utils_LoadScript__WEBPACK_IMPORTED_MODULE_4__","DEVELOPER_KEY","DISCOVERY_DOCS","SCOPE","apisLoaded","apisLoadingPromise","initializeApis","gapi","load","auth2LoadPromise","auth2","init","apiKey","clientId","discoveryDocs","scope","client","setApiKey","driveLoadPromise","onerror","isAuthenticated","authenticate","googleAuth","getAuthInstance","isSignedIn","currentUser","listen","authenticated","signIn","googleUser","getAuthResponse","patchJsonFile","fileId","method","headers","Headers","Authorization","access_token","Content-Type","res","showFilePicker","selectFolderEnabled","showUploadView","google","picker","pickerBuilder","PickerBuilder","addView","DocsView","setIncludeFolders","setSelectFolderEnabled","setOAuthToken","setDeveloperKey","setAppId","setCallback","data","Response","ACTION","Action","PICKED","doc","DOCUMENTS","Document","ID","NAME","parentId","PARENT_ID","TYPE","Type","LOCATION","MIME_TYPE","type","dispose","CANCEL","DocsUploadView","build","setVisible","pickerElements","getElementsByClassName","i","zIndex","internalName","renderIcon","getFileMetadataFromAppArguments","appArguments","googleDriveState","JSON","parse","ids","createOperations","setDialog","closeDialog","doesInitialOpenRequireUserInteraction","fileMetadata","fileContent","ex","onOpenWithPicker","googleDriveFileOrFolder","onSaveProject","serializeToJSON","wasSaved","onSaveProjectAs","onShowFilePicker","onCancel","onSave","selectedFileOrFolder","newFileName","onError","drive","files","create","content-type","uploadType","parents","mimeType","fields","apiResponse","newFileId","getOpenErrorMessage","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_SvgIcon__WEBPACK_IMPORTED_MODULE_1__","memo","container","position","width","button","marginLeft","textField","flex","GoogleDriveFileOrFolderPicker","node_modules_react","objectSpread","TextField","floatingLabelText","floatingLabelFixed","hintText","onChange","RaisedButton","react","onOpenPicker","_React$useState","_React$useState2","slicedToArray","setSelectedFileOrFolder","_React$useState3","_React$useState4","setNewFileName","_React$useState5","_React$useState6","saving","setSaving","_React$useState7","_React$useState8","saveError","setSaveError","_React$useState9","_React$useState10","pickerError","setPickerError","_React$useState11","_React$useState12","dialogHidden","hideDialog","canCancel","Dialog","FlatButton","disabled","LeftLoader","isLoading","canSave","maxWidth","Grid","event","AlertMessage","getBrowserExporters","_material_ui_icons_PhoneIphone__WEBPACK_IMPORTED_MODULE_10___default","helpPage","description","exportPipeline","_UI_CustomSvgIcons_Chrome__WEBPACK_IMPORTED_MODULE_15__","_material_ui_icons_Folder__WEBPACK_IMPORTED_MODULE_12___default","advanced","_UI_CustomSvgIcons_Facebook__WEBPACK_IMPORTED_MODULE_13__","_UI_CustomSvgIcons_Cordova__WEBPACK_IMPORTED_MODULE_14__","_material_ui_icons_LaptopMac__WEBPACK_IMPORTED_MODULE_11___default","experimental","BlobDownloadUrlHolder","children","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setBlobDownloadUrl","URL","revokeObjectURL","createObjectURL","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","_ApiConfigs__WEBPACK_IMPORTED_MODULE_1__","_Usage__WEBPACK_IMPORTED_MODULE_2__","params","getSignedUrl","contentType","signedUrl","axios","put","GDevelopGamesPreview","destinationBucketBaseUrl","maxContentLength","Infinity","onUploadProgress","progressEvent","total","loaded","InternalExampleFiles","example://admob","example://advanced-shape-based-painter","example://animation-speed-scale","example://asteroids","example://basic-ai-with-pathfinding","example://basic-artificial-intelligence","example://basic-topdown-car-driving","example://bbtext-object-demo","example://betabox-basics-learning-experience","example://bomb-the-crate","example://bouncing-ball-and-rope","example://breakout","example://buttons","example://car-physics","example://center-object-within-another","example://change-position-of-object","example://change-scale-of-sprites","example://change-sprite-animation","example://change-sprite-color","example://character-selection","example://count-down-timer","example://create-object-with-mouseclick","example://create-random-object","example://custom-font","example://custom-mouse-pointer","example://customize-keys-with-lastpressedkey","example://device-orientation-ballgame","example://device-orientation-compass","example://device-vibration","example://dialogue-tree-with-yarn","example://downhill-bike-physics-demo","example://drag-camera-with-mouse","example://drop-collect-items-from-storage","example://endless-up-runner","example://exit-app","example://facebook-instant-game","example://filesystem-create-directory","example://find-diagonals","example://geodash","example://geometry-monster","example://health-bar","example://infinite-scrolling-background","example://inventory-system","example://isometric-game","example://javascript-blocks-in-platformer","example://keyboard-practice","example://level-editor","example://level-selection-unlock","example://load-image-from-url","example://magnet","example://manipulate-text-object","example://menu-with-functions-and-text-effects","example://move-camera-to-position","example://move-object-back-and-forth","example://move-object-in-circle","example://move-object-toward-position","example://move-object-with-mouse-joint","example://move-object-with-physics","example://multi-language-menu","example://multiplayer-platformer-with-gamepads","example://multitouch","example://object-gravity","example://object-selection","example://objects-timers","example://open-url-in-browser","example://pairs","example://parallax","example://parallax-scrolling","example://parse-json-from-api","example://parse-json-string","example://particles-explosions","example://particles-various-effects","example://pathfinding","example://pathfinding-basics","example://physics","example://physics-joints-demo","example://physics-joints-settings-demo","example://pin-object-to-another","example://pin-object-to-another-multiple-parents","example://pixel-perfect-platform-game","example://plane-and-clouds","example://platformer","example://platformer-double-jump","example://play-music-on-mobile","example://play-stop-sprite-animation","example://racing-game","example://ragdoll","example://rain","example://random-color-picker","example://rotate-toward-mouse","example://rotate-toward-position","example://rotate-with-keypress","example://save-load","example://screen-shake","example://shoot-bullet-in-parabola","example://shoot-bullets","example://shooting-bullets-explanation","example://simple-space-shooter","example://snap-object-to-grid","example://space-invaders","example://space-shooter","example://splash-screen","example://sprite-fade-in-out","example://take-screenshot","example://text-entry-object","example://text-fade-in-out","example://text-to-speech","example://toggle-music-play-sound","example://type-on-text-effect","example://unlock-items","example://video-player","example://z-depth","example://zombie-laser","hiddenInOpenDialog","hiddenInSaveDialog","POSITIONAL_ARGUMENTS_KEY","internalExampleFiles","exampleNames","ExamplesInformation","BrowserExamples","react_default","Text","_lingui_react","ExamplesList","onCreateFromExample","exampleName","BetaIntroDialog","ResponsiveWindowMeasurer","windowWidth","isFullscreen","Fragment","requestFullscreen","setTimeout","forceUpdate","icon","Fullscreen_default","editors","edit","sendExternalEditorOpened","showMessageBox","makeBrowserS3EventsFunctionCodeWriter","getPathFor","codeNamespace","slugs","getIncludeFileFor","writeFunctionCode","functionCodeNamespace","writeBehaviorCode","behaviorCodeNamespace","DownloadSaveAsDialog","_download","stringify","serializeToJSObject","err","uri","encodeURI","downloadLink","onDone","DownloadFileStorageProvider","SaveAlt_default","DownloadSaveAsDialog_DownloadSaveAsDialog","SvgIcon","DropboxStorageProvider","Dropbox","OneDriveStorageProvider","OneDrive","BrowserApp_create","authentification","setUpContextMenu","getArguments","Providers","disableCheckForUpdates","eventsFunctionCodeWriter","eventsFunctionsExtensionWriter","eventsFunctionsExtensionOpener","eventsFunctionsExtensionsState","ProjectStorageProviders","storageProviders","GoogleDriveStorageProvider","defaultStorageProvider","currentStorageProviderOperations","useStorageProvider","initialFileMetadataToOpen","MainFrame","renderPreviewLauncher","renderExportDialog","ExportDialog","exporters","allExportersRequireOnline","renderCreateDialog","CreateProjectDialog","examplesComponent","startersComponent","introDialog","BrowserIntroDialog_BetaIntroDialog","storageProviderOperations","resourceSources","browserResourceSources","resourceExternalEditors","browserResourceExternalEditors","extensionsLoader","ObjectsEditorService","ObjectsRenderingService","isDev","scriptElement","onload","onabort"],"mappings":"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","file":"static/js/browser-app.0a084051.chunk.js","sourcesContent":["// @flow\n\nconst gdjsRoot =\n  'https://resources.gdevelop-app.com/GDJS-5.0.0-beta88';\n\ntype FileSet =\n  | 'preview'\n  | 'cordova'\n  | 'electron'\n  | 'web'\n  | 'cocos2d-js'\n  | 'facebook-instant-games';\n\nconst filesToDownload: { [FileSet]: Array<string> } = {\n  preview: ['/Runtime/index.html'],\n  web: ['/Runtime/index.html'],\n  'cocos2d-js': [\n    '/Runtime/Cocos2d/cocos2d-js-v3.10.js',\n    '/Runtime/Cocos2d/index.html',\n    '/Runtime/Cocos2d/main.js',\n    '/Runtime/Cocos2d/project.json',\n  ],\n  'facebook-instant-games': [\n    '/Runtime/FacebookInstantGames/fbapp-config.json',\n    '/Runtime/FacebookInstantGames/index.html',\n  ],\n  cordova: [\n    '/Runtime/Cordova/www/index.html',\n    '/Runtime/Cordova/config.xml',\n    '/Runtime/Cordova/package.json',\n  ],\n  electron: [\n    '/Runtime/index.html',\n    '/Runtime/Electron/main.js',\n    '/Runtime/Electron/package.json',\n  ],\n};\n\nexport type TextFileDescriptor = {| text: string, filePath: string |};\n\nexport const findGDJS = (\n  fileSet: FileSet\n): Promise<{|\n  gdjsRoot: string,\n  filesContent: Array<TextFileDescriptor>,\n|}> => {\n  return Promise.all(\n    filesToDownload[fileSet].map(relativeFilePath => {\n      const url = gdjsRoot + relativeFilePath;\n\n      // Don't do any caching, rely on the browser cache only.\n      return fetch(url).then(response => {\n        if (!response.ok) {\n          console.error(`Error while downloading \"${url}\"`, response);\n          throw new Error(\n            `Error while downloading \"${url}\" (status: ${response.status})`\n          );\n        }\n        return response.text().then(text => ({\n          filePath: url,\n          text,\n        }));\n      });\n    })\n  ).then(filesContent => {\n    return {\n      gdjsRoot,\n      filesContent,\n    };\n  });\n};\n","// @flow\nimport path from 'path';\nconst gd = global.gd;\n\nexport type BlobFileDescriptor = {|\n  filePath: string,\n  blob: Blob,\n|};\n\nexport type TextFileDescriptor = {|\n  filePath: string,\n  text: string,\n|};\n\nexport type UrlFileDescriptor = {|\n  filePath: string,\n  url: string,\n|};\n\ntype ConstructorArgs = {|\n  textFiles: Array<TextFileDescriptor>,\n|};\n\nconst isURL = (filename: string) => {\n  return (\n    filename.substr(0, 7) === 'http://' ||\n    filename.substr(0, 8) === 'https://' ||\n    filename.substr(0, 6) === 'ftp://'\n  );\n};\n\n// TODO: Merge BrowserS3FileSystem into this?\n\n/**\n * An in-memory \"file system\" that can be used for GDevelop exports.\n */\nexport default class BrowserFileSystem {\n  // The representation of the \"file system\":\n\n  /**\n   * Store all the text files (filepath => content)\n   * @private\n   */\n  _textFiles: { [string]: string } = {};\n\n  /**\n   * Store all the files that should be downloaded (filepath => url)\n   * @private\n   */\n  _filesToDownload: { [string]: string } = {};\n\n  /**\n   * Create a new in-memory file system.\n   */\n  constructor({ textFiles }: ConstructorArgs) {\n    textFiles.forEach(textFileDescriptor => {\n      this._textFiles[textFileDescriptor.filePath] = textFileDescriptor.text;\n    });\n  }\n\n  /**\n   * Returns all the in memory text files with the specified path prefix.\n   */\n  getAllTextFilesIn = (pathPrefix: string): Array<TextFileDescriptor> => {\n    return Object.keys(this._textFiles)\n      .filter(filePath => filePath.indexOf(pathPrefix) === 0)\n      .map(filePath => ({\n        filePath,\n        text: this._textFiles[filePath],\n      }));\n  };\n\n  /**\n   * Returns all the files that should be downloaded from a URL, with the specified path prefix.\n   */\n  getAllUrlFilesIn = (pathPrefix: string): Array<UrlFileDescriptor> => {\n    return Object.keys(this._filesToDownload)\n      .filter(filePath => filePath.indexOf(pathPrefix) === 0)\n      .map(filePath => ({\n        filePath,\n        url: this._filesToDownload[filePath],\n      }));\n  };\n\n  mkDir = (path: string) => {\n    // \"Directories\" are assumed to exist.\n    return true;\n  };\n  dirExists = (path: string) => {\n    // TODO: To be changed to be EnsureDirExists.\n    // \"Directories\" are assumed to exist.\n    return true;\n  };\n  clearDir = (path: string) => {\n    // Clear the files to be written in the specified directory.\n    const filePaths = Object.keys(this._textFiles);\n    filePaths.forEach(filePath => {\n      if (filePath.indexOf(path) === 0) {\n        delete this._textFiles[filePath];\n      }\n    });\n\n    return true;\n  };\n  getTempDir = () => {\n    return '/browser-file-system-tmp-dir';\n  };\n  fileNameFrom = (fullpath: string) => {\n    return path.basename(fullpath);\n  };\n  dirNameFrom = (fullpath: string) => {\n    return path.dirname(fullpath);\n  };\n  makeAbsolute = (filePathOrURL: string, baseDirectoryOrURL: string) => {\n    // URLs are always absolute\n    if (isURL(filePathOrURL)) return filePathOrURL;\n\n    if (!this.isAbsolute(baseDirectoryOrURL))\n      baseDirectoryOrURL = path.resolve(baseDirectoryOrURL);\n\n    return path.resolve(baseDirectoryOrURL, path.normalize(filePathOrURL));\n  };\n  makeRelative = (filePathOrURL: string, baseDirectoryOrURL: string) => {\n    if (isURL(filePathOrURL)) {\n      // Cutting the start if the URL is relative to the base URL\n      if (filePathOrURL.indexOf(baseDirectoryOrURL) === 0) {\n        return filePathOrURL.substring(baseDirectoryOrURL.length);\n      }\n\n      // Keep the URL \"absolute\" if on different domains.\n      console.warn(\n        `${filePathOrURL} cannot be made relative to ${baseDirectoryOrURL}, please double check this behavior is correct.`\n      );\n      return filePathOrURL;\n    }\n\n    // Paths are treated as usual paths.\n    return path.relative(baseDirectoryOrURL, path.normalize(filePathOrURL));\n  };\n  isAbsolute = (fullpath: string) => {\n    // URLs are always absolute\n    if (isURL(fullpath)) return true;\n\n    // Paths are absolute if starting from the root\n    return fullpath.length > 0 && fullpath.charAt(0) === '/';\n  };\n\n  copyFile = (source: string, dest: string) => {\n    // URLs are not copied, but marked as to be downloaded.\n    if (isURL(source)) {\n      if (isURL(dest)) {\n        console.error(\n          `Destination can't be a URL in copyFile (from ${source} to ${dest}).`\n        );\n        return false;\n      }\n\n      this._filesToDownload[path.normalize(dest)] = source;\n      return true;\n    }\n\n    // If this is a file that we have already in memory,\n    // copy its path.\n    if (!!this._textFiles[source]) {\n      this._textFiles[path.normalize(dest)] = this._textFiles[source];\n      return true;\n    }\n\n    console.error(`File not found in copyFile (from ${source} to ${dest}).`);\n    return false;\n  };\n\n  writeToFile = (filePath: string, content: string) => {\n    this._textFiles[path.normalize(filePath)] = content;\n    return true;\n  };\n\n  readFile = (file: string): string => {\n    if (this._textFiles[file]) return this._textFiles[file];\n\n    console.error(`Unknown file ${file}, returning an empty string`);\n    return '';\n  };\n\n  readDir = (path: string, ext: string) => {\n    ext = ext.toUpperCase();\n    var output = new gd.VectorString();\n\n    // Simulate ReadDir by returning all external URLs\n    // with the filename matching the extension.\n    Object.keys(this._filesToDownload).forEach(filePath => {\n      const upperCaseFilePath = filePath.toUpperCase();\n      if (\n        upperCaseFilePath.indexOf(ext) ===\n        upperCaseFilePath.length - ext.length\n      ) {\n        output.push_back(filePath);\n      }\n    });\n\n    return output;\n  };\n\n  fileExists = (filePath: string) => {\n    if (isURL(filePath)) return true;\n\n    const normalizedFilePath = path.normalize(filePath);\n    return (\n      !!this._textFiles[normalizedFilePath] ||\n      !!this._filesToDownload[normalizedFilePath]\n    );\n  };\n}\n","// @flow\n\nimport { initializeZipJs } from './Zip.js';\nimport path from 'path';\n\nexport type BlobFileDescriptor = {|\n  filePath: string,\n  blob: Blob,\n|};\n\nexport type TextFileDescriptor = {|\n  filePath: string,\n  text: string,\n|};\n\nexport type UrlFileDescriptor = {|\n  filePath: string,\n  url: string,\n|};\n\nfunction eachCallback<T>(\n  array: Array<T>,\n  callback: (T, () => void) => void,\n  done: () => void\n) {\n  if (!array.length) {\n    done();\n    return;\n  }\n  let index = 0;\n\n  const callNextCallback = () => {\n    callback(array[index], () => {\n      index++;\n      if (index >= array.length) {\n        done();\n      } else {\n        callNextCallback();\n      }\n    });\n  };\n\n  callNextCallback();\n}\n\nexport const downloadUrlsToBlobs = async ({\n  urlFiles,\n  onProgress,\n}: {|\n  urlFiles: Array<UrlFileDescriptor>,\n  onProgress: (count: number, total: number) => void,\n|}): Promise<Array<BlobFileDescriptor>> => {\n  let count = 0;\n  return Promise.all(\n    urlFiles\n      .filter(({ url }) => url.indexOf('.h') === -1) // TODO\n      .map(({ url, filePath }) => {\n        return fetch(url, {\n          mode: 'cors',\n        })\n          .then(response => {\n            if (!response.ok) {\n              console.error(`Error while downloading \"${url}\"`, response);\n              throw new Error(\n                `Error while downloading \"${url}\" (status: ${response.status})`\n              );\n            }\n            return response.blob();\n          })\n          .then(blob => {\n            count++;\n            onProgress(count, urlFiles.length);\n            return {\n              filePath,\n              blob,\n            };\n          });\n      })\n  ).then((downloadedBlobs: Array<BlobFileDescriptor>) => {\n    console.info('All download done');\n    return downloadedBlobs;\n  });\n};\n\n/**\n * Archive the specified blobs and texts into a zip file,\n * returned as a blob.\n */\nexport const archiveFiles = async ({\n  textFiles,\n  blobFiles,\n  basePath,\n  onProgress,\n}: {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n  basePath: string,\n  onProgress: (count: number, total: number) => void,\n|}): Promise<Blob> => {\n  const zipJs: ZipJs = await initializeZipJs();\n\n  let zippedFilesCount = 0;\n  let totalFilesCount = blobFiles.length + textFiles.length;\n\n  return new Promise((resolve, reject) => {\n    zipJs.createWriter(\n      new zipJs.BlobWriter('application/zip'),\n      function(zipWriter) {\n        eachCallback(\n          blobFiles,\n          ({ filePath, blob }, done) => {\n            // All files in a zip are relative\n            const relativeFilePath = path.relative(basePath, filePath);\n\n            zipWriter.add(\n              relativeFilePath,\n              new zipJs.BlobReader(blob),\n              () => {\n                zippedFilesCount++;\n                onProgress(zippedFilesCount, totalFilesCount);\n                done();\n              },\n              () => {\n                /* We don't track progress at the file level */\n              }\n            );\n          },\n          () => {\n            eachCallback(\n              textFiles,\n              ({ filePath, text }, done) => {\n                // All files in a zip are relative\n                const relativeFilePath = path.relative(basePath, filePath);\n\n                zipWriter.add(\n                  relativeFilePath,\n                  new zipJs.TextReader(text),\n                  () => {\n                    zippedFilesCount++;\n                    onProgress(zippedFilesCount, totalFilesCount);\n                    done();\n                  },\n                  () => {\n                    /* We don't track progress at the file level */\n                  }\n                );\n              },\n              () => {\n                zipWriter.close((blob: Blob) => {\n                  resolve(blob);\n                });\n              }\n            );\n          }\n        );\n      },\n      error => {\n        console.error('Error while making zip:', error);\n        reject(error);\n      }\n    );\n  });\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport { List, ListItem } from '../UI/List';\nimport RaisedButton from '../UI/RaisedButton';\nimport { sendNewGameCreated } from '../Utils/Analytics/EventSender';\nimport { Column, Line } from '../UI/Grid';\nimport ListIcon from '../UI/ListIcon';\nimport Text from '../UI/Text';\nimport { type StorageProvider, type FileMetadata } from '../ProjectsStorage';\nimport InternalFileStorageProvider from '../ProjectsStorage/InternalFileStorageProvider';\nconst gd = global.gd;\n\ntype Props = {|\n  onOpen: (\n    storageProvider: StorageProvider,\n    fileMetadata: FileMetadata\n  ) => void,\n  onCreate: (\n    gdProject,\n    storageProvider: ?StorageProvider,\n    fileMetadata: ?FileMetadata\n  ) => void,\n  onShowExamples: () => void,\n|};\n\nexport default class BrowserStarters extends Component<Props> {\n  render() {\n    return (\n      <Column noMargin>\n        <Line>\n          <Column>\n            <Text>\n              <Trans>Choose a game to use as a starter:</Trans>\n            </Text>\n          </Column>\n        </Line>\n        <Line>\n          <Column expand noMargin>\n            <List>\n              <ListItem\n                leftIcon={\n                  <ListIcon\n                    iconSize={40}\n                    src=\"res/starters_icons/platformer.png\"\n                  />\n                }\n                primaryText={<Trans>Platformer</Trans>}\n                secondaryText={\n                  <Trans>\n                    A simple platform game, with coins to collect, moving\n                    platforms and enemies.\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('platformer');\n                  this.props.onOpen(InternalFileStorageProvider, {\n                    fileIdentifier: 'example://platformer',\n                  });\n                }}\n              />\n              <ListItem\n                leftIcon={\n                  <ListIcon\n                    iconSize={40}\n                    src=\"res/starters_icons/space-shooter.png\"\n                  />\n                }\n                primaryText={<Trans>8-bit Space Shooter</Trans>}\n                secondaryText={\n                  <Trans>\n                    A beautiful, retro side-scrolling shooter where you must\n                    defeat incoming enemies with your mecha transforming\n                    spaceship. Huge boss included!\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('space-shooter');\n                  this.props.onOpen(InternalFileStorageProvider, {\n                    fileIdentifier: 'example://space-shooter',\n                  });\n                }}\n              />\n              <ListItem\n                leftIcon={\n                  <ListIcon\n                    iconSize={40}\n                    src=\"res/starters_icons/geometry-monster.png\"\n                  />\n                }\n                primaryText={<Trans>Geometry Monster</Trans>}\n                secondaryText={\n                  <Trans>\n                    A hyper casual endless game where you have to collect shapes\n                    and avoid bombs, with a progressively increasing difficulty.\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('geometry-monster');\n                  this.props.onOpen(InternalFileStorageProvider, {\n                    fileIdentifier: 'example://geometry-monster',\n                  });\n                }}\n              />\n              <ListItem\n                leftIcon={\n                  <ListIcon\n                    iconSize={40}\n                    src=\"res/starters_icons/isometric-game.png\"\n                  />\n                }\n                primaryText={<Trans>Isometric game</Trans>}\n                secondaryText={\n                  <Trans>\n                    An example of an isometric game where you can explore a map\n                    with your character.\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('isometric-game');\n                  this.props.onOpen(InternalFileStorageProvider, {\n                    fileIdentifier: 'example://isometric-game',\n                  });\n                }}\n              />\n              <ListItem\n                leftIcon={\n                  <ListIcon\n                    iconSize={40}\n                    src=\"res/starters_icons/downhill-bike-physics-demo.png\"\n                  />\n                }\n                primaryText=\"Downhill Bike Racing\"\n                secondaryText={\n                  <Trans>\n                    An example of a 2D physics based game, where players have to\n                    reach the end as fast as possible.\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('downhill-bike-physics-demo');\n                  this.props.onOpen(InternalFileStorageProvider, {\n                    fileIdentifier: 'example://downhill-bike-physics-demo',\n                  });\n                }}\n              />\n              <ListItem\n                leftIcon={\n                  <ListIcon iconSize={40} src=\"res/starters_icons/pairs.png\" />\n                }\n                primaryText=\"Pairs\"\n                secondaryText={\n                  <Trans>\n                    Find all matching pairs of cards in this relaxing game. Use\n                    tweens to create smooth, natural animations with a few\n                    events.\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('pairs');\n                  this.props.onOpen(InternalFileStorageProvider, {\n                    fileIdentifier: 'example://pairs',\n                  });\n                }}\n              />\n              <ListItem\n                primaryText={<Trans>Empty game</Trans>}\n                secondaryText={<Trans>Start a new game from scratch.</Trans>}\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('');\n\n                  const project = gd.ProjectHelper.createNewGDJSProject();\n                  this.props.onCreate(project, null, null);\n                }}\n              />\n            </List>\n            <Line alignItems=\"center\" justifyContent=\"center\">\n              <RaisedButton\n                label={<Trans>See examples</Trans>}\n                onClick={() => this.props.onShowExamples()}\n              />\n            </Line>\n          </Column>\n        </Line>\n      </Column>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport ListIcon from '../UI/ListIcon';\nimport { List, ListItem } from '../UI/List';\nimport Text from '../UI/Text';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Line } from '../UI/Grid';\nimport Window from '../Utils/Window';\nconst gd = global.gd;\n\nconst styles = {\n  explanations: {\n    textAlign: 'center',\n    margin: 20,\n  },\n};\n\nconst publicImageUrls = [\n  // Platformer images (see platformer.json in fixtures)\n  'https://resources.gdevelop-app.com/examples/platformer/p1_stand.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_jump.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk01.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk02.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk03.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk04.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk05.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk06.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk07.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk08.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk09.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk10.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk11.png',\n  'https://resources.gdevelop-app.com/examples/platformer/brickWall.png',\n  'https://resources.gdevelop-app.com/examples/platformer/bridge.png',\n  'https://resources.gdevelop-app.com/examples/platformer/grassHalfMid.png',\n  'https://resources.gdevelop-app.com/examples/platformer/castleCenter.png',\n  'https://resources.gdevelop-app.com/examples/platformer/bridgeLogs.png',\n  'https://resources.gdevelop-app.com/examples/platformer/Left.png',\n  'https://resources.gdevelop-app.com/examples/platformer/Right.png',\n  'https://resources.gdevelop-app.com/examples/platformer/ladder_mid.png',\n  'https://resources.gdevelop-app.com/examples/platformer/Grass.png',\n  'https://resources.gdevelop-app.com/examples/platformer/PlayerArea.png',\n  'https://resources.gdevelop-app.com/examples/platformer/slimeWalk1.png',\n  'https://resources.gdevelop-app.com/examples/platformer/slimeWalk2.png',\n  'https://resources.gdevelop-app.com/examples/platformer/slimeDead.png',\n  'https://resources.gdevelop-app.com/examples/platformer/flyFly1.png',\n  'https://resources.gdevelop-app.com/examples/platformer/flyFly2.png',\n  'https://resources.gdevelop-app.com/examples/platformer/flyDead.png',\n  'https://resources.gdevelop-app.com/examples/platformer/cloud1.png',\n  'https://resources.gdevelop-app.com/examples/platformer/cloud2.png',\n  'https://resources.gdevelop-app.com/examples/platformer/cloud3.png',\n  'https://resources.gdevelop-app.com/examples/platformer/bush.png',\n  'https://resources.gdevelop-app.com/examples/platformer/cactus.png',\n  'https://resources.gdevelop-app.com/examples/platformer/plant.png',\n  'https://resources.gdevelop-app.com/examples/platformer/coinGold.png',\n  'https://resources.gdevelop-app.com/examples/platformer/shadedDark06.png',\n  'https://resources.gdevelop-app.com/examples/platformer/shadedDark05.png',\n  'https://resources.gdevelop-app.com/examples/platformer/shadedDark45.png',\n  'https://resources.gdevelop-app.com/examples/platformer/shadedDark09.png',\n\n  // Subset of space shooter images (see space-shooter.json in fixtures)\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/idle1.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/idle2.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/up1.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/up2.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/down1.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/down2.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/background/space bg.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/background/corridor.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/asteroid/asteroid1.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/asteroid/asteroid2.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/asteroid/asteroid3.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy200.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy201.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy202.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy203.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy204.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy205.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy206.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy207.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy208.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy209.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy210.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy211.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/bullet.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/powerUp/powerUp00.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/powerUp/powerUp01.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/powerUp/powerUp02.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/powerUp/powerUp03.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/powerUp/powerUp04.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/explosion/explosion00.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/explosion/explosion01.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/explosion/explosion02.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/explosion/explosion03.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/explosion/explosion04.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/explosion/explosion05.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy3/enemy3.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy bullet/enemyBullet00.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy bullet/enemyBullet01.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy bullet/enemyBullet02.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/tiles mechanical/tiles mechanical 1.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/tiles mechanical/tiles mechanical 2.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/background/boss background.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/gameover.png',\n];\n\nconst publicAudioUrls = [\n  // Platformer audio (see platformer.json in fixtures)\n  'https://resources.gdevelop-app.com/examples/platformer/jump.wav',\n  'https://resources.gdevelop-app.com/examples/platformer/coin.wav',\n\n  // Space shooter audio (see space-shooter.json in fixtures)\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/audio/sfx_shieldDown.ogg',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/audio/sfx_twoTone.ogg',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/audio/sfx_laser1.ogg',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/audio/Heal.wav',\n];\n\nconst publicFontUrls = [\n  // Platformer fonts (see platformer.json in fixtures)\n  'https://resources.gdevelop-app.com/examples/platformer/Bimbo_JVE.ttf',\n];\n\nconst publicVideoUrls = [\n  // Video Player example video\n  'https://resources.gdevelop-app.com/examples/video-player/The-Daily-Dweebs-By-Blender-Foundation-Short.mp4',\n];\n\nconst publicJsonUrls = [\n  // Yarn example - todo Upload elsewhere?\n  'https://raw.githubusercontent.com/jhayley/bondage.js/master/tests/yarn_files/assignment.json',\n];\n\nconst nameFromUrl = (url: string): string => {\n  const urlParts = url.split('/');\n  return urlParts[urlParts.length - 1]\n    .replace('.png', '')\n    .replace('.wav', '')\n    .replace('.ogg', '')\n    .replace('.json', '')\n    .replace('.mp4', '');\n};\n\nclass GenericResourcesChooser extends Component {\n  state = {\n    open: false,\n    resolveWithResources: null,\n  };\n\n  constructor(props) {\n    super(props);\n\n    // Cache rendered public images list to avoid doing this each time\n    // a rendering is done.\n    this.listItems = props.urls.map((url: string) => {\n      return (\n        <ListItem\n          key={url}\n          primaryText={nameFromUrl(url)}\n          leftIcon={\n            props.urlsAreImages ? (\n              <ListIcon iconSize={40} src={url} />\n            ) : (\n              undefined\n            )\n          }\n          onClick={() => this._onChoose(url)}\n        />\n      );\n    });\n  }\n\n  chooseResources = (project, multiSelections = true): Promise<Array<any>> => {\n    return new Promise(resolve => {\n      this.setState({\n        open: true,\n        resolveWithResources: resolve,\n      });\n    });\n  };\n\n  _onChoose = (chosenResourceUrl: string) => {\n    const { resolveWithResources } = this.state;\n    if (!resolveWithResources) return;\n\n    const newResource = this.props.createNewResource();\n    newResource.setFile(chosenResourceUrl);\n    newResource.setName(chosenResourceUrl);\n\n    resolveWithResources([newResource]);\n    this.setState({\n      open: false,\n      resolveWithResources: null,\n    });\n  };\n\n  _onClose = () => {\n    const { resolveWithResources } = this.state;\n    if (!resolveWithResources) return;\n\n    resolveWithResources([]);\n    this.setState({\n      open: false,\n      resolveWithResources: null,\n    });\n  };\n\n  _onOpenWebsite() {\n    Window.openExternalURL('http://gdevelop-app.com');\n  }\n\n  render() {\n    // Avoid rendering the dialog if it's not opened.\n    if (!this.state.open) return null;\n\n    const actions = [\n      <FlatButton\n        key=\"close\"\n        label={<Trans>Close</Trans>}\n        primary={false}\n        onClick={this._onClose}\n      />,\n    ];\n\n    return (\n      <Dialog\n        title={this.props.title}\n        actions={actions}\n        open={this.state.open}\n        noMargin\n      >\n        <div style={styles.explanations}>\n          <Text>\n            <Trans>\n              You can choose a resource from the library below. Adding resources\n              from Dropbox, Google Drive... is coming soon! Download GDevelop\n              for desktop to use your own assets.\n            </Trans>\n          </Text>\n          <Line justifyContent=\"center\">\n            <RaisedButton\n              primary\n              label={<Trans>Download GDevelop desktop app</Trans>}\n              onClick={this._onOpenWebsite}\n            />\n          </Line>\n        </div>\n        <List>{this.listItems}</List>\n      </Dialog>\n    );\n  }\n}\n\nexport default [\n  {\n    name: 'publicAudioUrlChooser',\n    displayName: 'Choose an audio file from library',\n    kind: 'audio',\n    component: class AudioResourceChooser extends React.Component {\n      chooseResources = () => {\n        if (this._chooser) return this._chooser.chooseResources();\n      };\n      render() {\n        return (\n          <GenericResourcesChooser\n            {...this.props}\n            urls={publicAudioUrls}\n            urlsAreImages={false}\n            createNewResource={() => new gd.AudioResource()}\n            title={<Trans>Choose an audio file from the library</Trans>}\n            ref={chooser => (this._chooser = chooser)}\n          />\n        );\n      }\n    },\n  },\n  {\n    name: 'publicImageUrlChooser',\n    displayName: 'Choose an image from library',\n    kind: 'image',\n    component: class ImageResourceChooser extends React.Component {\n      chooseResources = () => {\n        if (this._chooser) return this._chooser.chooseResources();\n      };\n      render() {\n        return (\n          <GenericResourcesChooser\n            {...this.props}\n            urls={publicImageUrls}\n            urlsAreImages\n            createNewResource={() => new gd.ImageResource()}\n            title={<Trans>Choose an image from the library</Trans>}\n            ref={chooser => (this._chooser = chooser)}\n          />\n        );\n      }\n    },\n  },\n  {\n    name: 'publicFontUrlChooser',\n    displayName: 'Choose a font from library',\n    kind: 'font',\n    component: class FontResourceChooser extends React.Component {\n      chooseResources = () => {\n        if (this._chooser) return this._chooser.chooseResources();\n      };\n      render() {\n        return (\n          <GenericResourcesChooser\n            {...this.props}\n            urls={publicFontUrls}\n            urlsAreImages={false}\n            createNewResource={() => new gd.FontResource()}\n            title={<Trans>Choose a font from the library</Trans>}\n            ref={chooser => (this._chooser = chooser)}\n          />\n        );\n      }\n    },\n  },\n  {\n    name: 'publicVideoUrlChooser',\n    displayName: 'Choose a video from library',\n    kind: 'video',\n    component: class VideoResourceChooser extends React.Component {\n      chooseResources = () => {\n        if (this._chooser) return this._chooser.chooseResources();\n      };\n      render() {\n        return (\n          <GenericResourcesChooser\n            {...this.props}\n            urls={publicVideoUrls}\n            urlsAreImages={false}\n            createNewResource={() => new gd.VideoResource()}\n            title={<Trans>Choose a video from the library</Trans>}\n            ref={chooser => (this._chooser = chooser)}\n          />\n        );\n      }\n    },\n  },\n  {\n    name: 'publicJsonUrlChooser',\n    displayName: 'Choose a json file from library',\n    kind: 'json',\n    component: class JsonResourceChooser extends React.Component {\n      chooseResources = () => {\n        if (this._chooser) return this._chooser.chooseResources();\n      };\n      render() {\n        return (\n          <GenericResourcesChooser\n            {...this.props}\n            urls={publicJsonUrls}\n            urlsAreImages={false}\n            createNewResource={() => new gd.JsonResource()}\n            title={<Trans>Choose a Json File from the library</Trans>}\n            ref={chooser => (this._chooser = chooser)}\n          />\n        );\n      }\n    },\n  },\n];\n","// @flow\nimport * as React from 'react';\nimport BrowserPreviewLinkDialog from './BrowserPreviewLinkDialog';\nimport BrowserPreviewErrorDialog from './BrowserPreviewErrorDialog';\nimport BrowserS3FileSystem from '../BrowserS3FileSystem';\nimport { findGDJS } from '../../../GameEngineFinder/BrowserS3GDJSFinder';\nimport assignIn from 'lodash/assignIn';\nimport { type PreviewOptions } from '../../PreviewLauncher.flow';\nimport { getBaseUrl } from '../../../Utils/GDevelopServices/Preview';\nimport { makeTimestampedId } from '../../../Utils/TimestampedId';\nconst gd = global.gd;\n\ntype State = {|\n  showPreviewLinkDialog: boolean,\n  url: ?string,\n  error: ?Error,\n|};\n\ntype Props = {|\n  onExport?: () => void,\n  onChangeSubscription?: () => void,\n|};\n\nexport default class BrowserS3PreviewLauncher extends React.Component<\n  Props,\n  State\n> {\n  canDoNetworkPreview = () => false;\n\n  state = {\n    showPreviewLinkDialog: false,\n    url: null,\n    error: null,\n  };\n\n  _openPreviewWindow = (project: gdProject, url: string): any => {\n    const windowObjectReference = window.open(url, `_blank`);\n    return {\n      url,\n      windowObjectReference,\n    };\n  };\n\n  _prepareExporter = (): Promise<any> => {\n    return findGDJS('preview').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const prefix = makeTimestampedId();\n\n      const outputDir = getBaseUrl() + prefix;\n      const browserS3FileSystem = new BrowserS3FileSystem({\n        filesContent,\n        bucketBaseUrl: getBaseUrl(),\n        prefix,\n      });\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        browserS3FileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n      exporter.setCodeOutputDirectory(getBaseUrl() + prefix);\n\n      return {\n        exporter,\n        outputDir,\n        browserS3FileSystem,\n      };\n    });\n  };\n\n  launchLayoutPreview = (\n    project: gdProject,\n    layout: gdLayout,\n    options: PreviewOptions\n  ): Promise<any> => {\n    this.setState({\n      error: null,\n    });\n\n    return this._prepareExporter()\n      .then(({ exporter, outputDir, browserS3FileSystem }) => {\n        exporter.exportLayoutForPixiPreview(project, layout, outputDir);\n        exporter.delete();\n        return browserS3FileSystem\n          .uploadPendingObjects()\n          .then(() => {\n            const finalUrl = outputDir + '/index.html';\n            return this._openPreviewWindow(project, finalUrl);\n          })\n          .then(({ url, windowObjectReference }) => {\n            if (!windowObjectReference) {\n              this.setState({\n                showPreviewLinkDialog: true,\n                url,\n              });\n            }\n          });\n      })\n      .catch((error: Error) => {\n        this.setState({\n          error,\n        });\n      });\n  };\n\n  launchExternalLayoutPreview = (\n    project: gdProject,\n    layout: gdLayout,\n    externalLayout: gdExternalLayout,\n    options: PreviewOptions\n  ): Promise<any> => {\n    this.setState({\n      error: null,\n    });\n\n    return this._prepareExporter()\n      .then(({ exporter, outputDir, browserS3FileSystem }) => {\n        exporter.exportExternalLayoutForPixiPreview(\n          project,\n          layout,\n          externalLayout,\n          outputDir\n        );\n        exporter.delete();\n        return browserS3FileSystem\n          .uploadPendingObjects()\n          .then(() => {\n            const finalUrl = outputDir + '/index.html';\n            return this._openPreviewWindow(project, finalUrl);\n          })\n          .then(({ url, windowObjectReference }) => {\n            if (!windowObjectReference) {\n              this.setState({\n                showPreviewLinkDialog: true,\n                url,\n              });\n            }\n          });\n      })\n      .catch((error: Error) => {\n        this.setState({\n          error,\n        });\n      });\n  };\n\n  render() {\n    const { showPreviewLinkDialog, url, error } = this.state;\n\n    if (error) {\n      return (\n        <BrowserPreviewErrorDialog\n          error={error}\n          onClose={() =>\n            this.setState({\n              error: null,\n            })\n          }\n        />\n      );\n    }\n\n    if (showPreviewLinkDialog) {\n      return (\n        <BrowserPreviewLinkDialog\n          url={url}\n          onClose={() =>\n            this.setState({\n              showPreviewLinkDialog: false,\n            })\n          }\n        />\n      );\n    }\n\n    return null;\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport React, { Component } from 'react';\nimport Dialog from '../../../UI/Dialog';\nimport FlatButton from '../../../UI/FlatButton';\nimport { showErrorBox } from '../../../UI/Messages/MessageBox';\nimport { Column, Line } from '../../../UI/Grid';\nimport Text from '../../../UI/Text';\n\ntype Props = {|\n  url: ?string,\n  onClose: () => void,\n|};\n\nexport default class BrowserPreviewLinkDialog extends Component<Props> {\n  _makeOnOpen = (i18n: I18nType) => () => {\n    const windowObjectReference = window.open(this.props.url, '_blank');\n    if (!windowObjectReference) {\n      showErrorBox(\n        i18n._(\n          t`Unable to open the preview! Be sure that popup are allowed for this website.`\n        ),\n        undefined\n      );\n    }\n    this.props.onClose();\n  };\n\n  render() {\n    const { url } = this.props;\n    if (!url) return null;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Dialog\n            actions={[\n              <FlatButton\n                key=\"launch-preview\"\n                label={<Trans>Launch the preview</Trans>}\n                primary\n                onClick={this._makeOnOpen(i18n)}\n              />,\n            ]}\n            modal\n            open\n          >\n            <Line>\n              <Column>\n                <Text>\n                  <Trans>\n                    Your preview is ready! Click on the button to launch the\n                    preview.\n                  </Trans>\n                </Text>\n              </Column>\n            </Line>\n            <Line>\n              <Column>\n                <Text>\n                  <Trans>\n                    To skip this dialog and{' '}\n                    <b>directly open the preview next time</b>, please allow\n                    popups to be opened for this website in your browser.\n                  </Trans>\n                </Text>\n              </Column>\n            </Line>\n          </Dialog>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport React, { Component } from 'react';\nimport Dialog from '../../../UI/Dialog';\nimport FlatButton from '../../../UI/FlatButton';\nimport { Column, Line } from '../../../UI/Grid';\nimport Text from '../../../UI/Text';\n\ntype Props = {|\n  error: Error,\n  onClose: () => void,\n|};\n\nexport default class BrowserPreviewErrorDialog extends Component<Props> {\n  render() {\n    const { error, onClose } = this.props;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Dialog\n            actions={[\n              <FlatButton\n                key=\"close\"\n                label={<Trans>Close</Trans>}\n                onClick={onClose}\n              />,\n            ]}\n            title={<Trans>Could not launch the preview</Trans>}\n            onRequestClose={onClose}\n            modal\n            open\n          >\n            <Line>\n              <Column>\n                <Text>\n                  {// $FlowFixMe - AWS returned errors can have extra fields\n                  error.code === 'NetworkingError' ? (\n                    <Trans>\n                      The preview could not be launched because you're offline.\n                    </Trans>\n                  ) : (\n                    <Trans>\n                      The preview could not be launched because an error\n                      happened: {error.message}.\n                    </Trans>\n                  )}\n                </Text>\n              </Column>\n            </Line>\n            <Line>\n              <Column>\n                <Text>\n                  <Trans>\n                    Make sure you're online, have a proper internet connection\n                    and try again. If you download and use GDevelop desktop\n                    application, you can also run previews without any internet\n                    connection.\n                  </Trans>\n                </Text>\n              </Column>\n            </Line>\n          </Dialog>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport path from 'path';\nimport { uploadObject } from '../../Utils/GDevelopServices/Preview';\nconst gd = global.gd;\n\nexport type TextFileDescriptor = {|\n  filePath: string,\n  text: string,\n|};\n\ntype PendingUploadFileDescriptor = {|\n  Key: string,\n  Body: string,\n  ContentType: 'text/javascript' | 'text/html',\n|};\n\ntype ConstructorArgs = {|\n  filesContent: Array<TextFileDescriptor>,\n  prefix: string,\n  bucketBaseUrl: string,\n|};\n\nconst isURL = (filename: string) => {\n  return (\n    filename.substr(0, 7) === 'http://' ||\n    filename.substr(0, 8) === 'https://' ||\n    filename.substr(0, 6) === 'ftp://'\n  );\n};\n\n/**\n * An in-memory \"file system\" that can be used for GDevelop previews.\n */\nexport default class BrowserS3FileSystem {\n  prefix: string;\n  bucketBaseUrl: string;\n\n  // Store the content of some files.\n  _indexedFilesContent: { [string]: TextFileDescriptor };\n\n  // Store all the objects that should be written on the S3 bucket.\n  // Call uploadPendingObjects to send them\n  _pendingUploadObjects: Array<PendingUploadFileDescriptor> = [];\n\n  // Store a set of all external URLs copied so that we can simulate\n  // readDir result.\n  _allCopiedExternalUrls = new Set<string>();\n\n  constructor({ filesContent, prefix, bucketBaseUrl }: ConstructorArgs) {\n    this.prefix = prefix;\n    this.bucketBaseUrl = bucketBaseUrl;\n\n    this._indexedFilesContent = {};\n    filesContent.forEach(textFileDescriptor => {\n      this._indexedFilesContent[\n        textFileDescriptor.filePath\n      ] = textFileDescriptor;\n    });\n  }\n\n  uploadPendingObjects = () => {\n    return Promise.all(this._pendingUploadObjects.map(uploadObject)).then(\n      result => {\n        console.log('Uploaded all objects:', result);\n        this._pendingUploadObjects = [];\n      },\n      error => {\n        console.error(\"Can't upload all objects:\", error);\n        throw error;\n      }\n    );\n  };\n\n  mkDir = (path: string) => {\n    // Assume required directories always exist.\n  };\n  dirExists = (path: string) => {\n    // Assume required directories always exist.\n    return true;\n  };\n  clearDir = (path: string) => {\n    // Assume path is cleared.\n  };\n  getTempDir = () => {\n    return '/virtual-unused-tmp-dir';\n  };\n  fileNameFrom = (fullpath: string) => {\n    if (isURL(fullpath)) return fullpath;\n\n    return path.basename(fullpath);\n  };\n  dirNameFrom = (fullpath: string) => {\n    if (isURL(fullpath)) return '';\n\n    return path.dirname(fullpath);\n  };\n  makeAbsolute = (filename: string, baseDirectory: string) => {\n    if (isURL(filename)) return filename;\n\n    if (!this.isAbsolute(baseDirectory))\n      baseDirectory = path.resolve(baseDirectory);\n\n    return path.resolve(baseDirectory, path.normalize(filename));\n  };\n  makeRelative = (filename: string, baseDirectory: string) => {\n    if (isURL(filename)) return filename;\n\n    return path.relative(baseDirectory, path.normalize(filename));\n  };\n  isAbsolute = (fullpath: string) => {\n    if (isURL(fullpath)) return true;\n\n    if (fullpath.length === 0) return true;\n    return (\n      (fullpath.length > 0 && fullpath.charAt(0) === '/') ||\n      (fullpath.length > 1 && fullpath.charAt(1) === ':')\n    );\n  };\n  copyFile = (source: string, dest: string) => {\n    //URL are not copied.\n    if (isURL(source)) {\n      this._allCopiedExternalUrls.add(source);\n      return true;\n    }\n\n    console.warn('Copy not done from', source, 'to', dest);\n    return true;\n  };\n  writeToFile = (fullPath: string, contents: string) => {\n    const key = fullPath.replace(this.bucketBaseUrl, '');\n    const mime = {\n      '.js': 'text/javascript',\n      '.html': 'text/html',\n    };\n    const fileExtension = path.extname(fullPath);\n\n    // Defer real upload until it's triggered by calling\n    // uploadPendingObjects.\n    this._pendingUploadObjects.push({\n      Key: key,\n      Body: contents,\n      ContentType: mime[fileExtension],\n    });\n    return true;\n  };\n\n  readFile = (file: string) => {\n    if (!!this._indexedFilesContent[file])\n      return this._indexedFilesContent[file].text;\n\n    console.error(`Unknown file ${file}, returning an empty string`);\n    return '';\n  };\n\n  readDir = (path: string, ext: string) => {\n    ext = ext.toUpperCase();\n    var output = new gd.VectorString();\n\n    // Simulate ReadDir by returning all external URLs\n    // with the filename matching the extension.\n    this._allCopiedExternalUrls.forEach(url => {\n      const upperCaseUrl = url.toUpperCase();\n      if (upperCaseUrl.indexOf(ext) === upperCaseUrl.length - ext.length) {\n        output.push_back(url);\n      }\n    });\n\n    return output;\n  };\n\n  fileExists = (filename: string) => {\n    if (isURL(filename)) return true;\n\n    // Assume all files asked for exists.\n    return true;\n  };\n}\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type Build,\n  buildCordovaAndroid,\n  getBuildFileUploadOptions,\n} from '../../Utils/GDevelopServices/Build';\nimport { uploadBlobFile } from './BrowserFileUploader';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport { ExplanationHeader } from '../GenericExporters/OnlineCordovaExport';\nconst gd = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserOnlineCordovaExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-online-cordova',\n  onlineBuildType: 'cordova-build',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Packaging for Android</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('cordova').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForCordova', true);\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    blobFile: Blob\n  ): Promise<string> => {\n    return getBuildFileUploadOptions().then(uploadOptions => {\n      return uploadBlobFile(\n        blobFile,\n        uploadOptions,\n        context.updateStepProgress\n      ).then(() => uploadOptions.key);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildCordovaAndroid(\n      getAuthorizationHeader,\n      profile.uid,\n      uploadBucketKey\n    );\n  },\n};\n","// @flow\nimport { loadScript } from '../LoadScript';\n\nconst PUBLIC_URL: string = process.env.PUBLIC_URL || '';\nconst ZIPJS_EXTERNAL_PATH = '/external/zip.js/WebContent';\nconst ZLIBASM_EXTERNAL_PATH = '/external/zlib-asm';\n\nlet zipJsLoaded = false;\nlet zipJsLoadingPromise: ?Promise<ZipJs> = null;\n\n/**\n * Initialize Zip.js, resolving with the instance of it.\n * Promise will be rejected if there is an error while loading Zip.js\n * (call initializeZipJs again to retry).\n */\nexport const initializeZipJs = (): Promise<ZipJs> => {\n  if (zipJsLoaded) {\n    const zip: ZipJs = global.zip;\n    return Promise.resolve(zip);\n  }\n\n  if (zipJsLoadingPromise) {\n    return zipJsLoadingPromise;\n  }\n\n  zipJsLoadingPromise = loadScript(\n    PUBLIC_URL + ZIPJS_EXTERNAL_PATH + '/zip.js'\n  ).then(() => {\n    const zip: ?ZipJs = global.zip;\n    if (!zip) {\n      throw new Error(\n        'Can not find \"zip\" in the global namespace after loading zip.js. Has the zip.js script being loaded properly?'\n      );\n    }\n\n    zipJsLoadingPromise = null;\n    zipJsLoaded = true;\n\n    zip.workerScripts = {\n      deflater: [\n        PUBLIC_URL + ZIPJS_EXTERNAL_PATH + '/z-worker.js',\n        PUBLIC_URL + ZLIBASM_EXTERNAL_PATH + '/zlib.js',\n        PUBLIC_URL + ZIPJS_EXTERNAL_PATH + '/zlib-asm/codecs.js',\n      ],\n      inflater: [\n        PUBLIC_URL + ZIPJS_EXTERNAL_PATH + '/z-worker.js',\n        PUBLIC_URL + ZLIBASM_EXTERNAL_PATH + '/zlib.js',\n        PUBLIC_URL + ZIPJS_EXTERNAL_PATH + '/zlib-asm/codecs.js',\n      ],\n    };\n    return zip;\n  });\n\n  return zipJsLoadingPromise;\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type Build,\n  buildElectron,\n  getBuildFileUploadOptions,\n} from '../../Utils/GDevelopServices/Build';\nimport { uploadBlobFile } from './BrowserFileUploader';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport {\n  type ExportState,\n  SetupExportHeader,\n} from '../GenericExporters/OnlineElectronExport';\nconst gd = global.gd;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserOnlineElectronExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-online-electron',\n  onlineBuildType: 'electron-build',\n\n  getInitialExportState: () => ({\n    targets: ['winExe'],\n  }),\n\n  canLaunchBuild: (exportState: ExportState) => !!exportState.targets.length,\n\n  renderHeader: props => <SetupExportHeader {...props} />,\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('electron').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForElectron', true);\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    blobFile: Blob\n  ): Promise<string> => {\n    return getBuildFileUploadOptions().then(uploadOptions => {\n      return uploadBlobFile(\n        blobFile,\n        uploadOptions,\n        context.updateStepProgress\n      ).then(() => uploadOptions.key);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildElectron(\n      getAuthorizationHeader,\n      profile.uid,\n      uploadBucketKey,\n      exportState.targets\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type Build,\n  buildWeb,\n  getBuildFileUploadOptions,\n} from '../../Utils/GDevelopServices/Build';\nimport { uploadBlobFile } from './BrowserFileUploader';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport { ExplanationHeader } from '../GenericExporters/OnlineWebExport';\nconst gd = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserOnlineWebExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-online-web',\n  onlineBuildType: 'web-build',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Publish online</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('web').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    blobFile: Blob\n  ): Promise<string> => {\n    return getBuildFileUploadOptions().then(uploadOptions => {\n      return uploadBlobFile(\n        blobFile,\n        uploadOptions,\n        context.updateStepProgress\n      ).then(() => uploadOptions.key);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildWeb(getAuthorizationHeader, profile.uid, uploadBucketKey);\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { BlobDownloadUrlHolder } from '../../Utils/BlobDownloadUrlHolder';\nimport { ExplanationHeader, DoneFooter } from '../GenericExporters/HTML5Export';\nconst gd = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nconst openBlobDownloadUrl = (url: string, filename: string) => {\n  const { body } = document;\n  if (!body) return;\n\n  // Not using Window.openExternalURL because blob urls are blocked\n  // by Adblock Plus (and maybe other ad blockers).\n  const a = document.createElement('a');\n  body.appendChild(a);\n  a.style.display = 'none';\n  a.href = url;\n  a.download = filename;\n  a.click();\n  body.removeChild(a);\n};\n\nexport const browserHTML5ExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-html5',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Export as a HTML5 game</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('web').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  renderDoneFooter: ({ compressionOutput, exportState, onClose }) => {\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <BlobDownloadUrlHolder blob={compressionOutput}>\n            {blobDownloadUrl => (\n              <RaisedButton\n                fullWidth\n                primary\n                onClick={() => openBlobDownloadUrl(blobDownloadUrl, 'game.zip')}\n                label={<Trans>Download the exported game</Trans>}\n              />\n            )}\n          </BlobDownloadUrlHolder>\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { BlobDownloadUrlHolder } from '../../Utils/BlobDownloadUrlHolder';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/CordovaExport';\nimport { openBlobDownloadUrl } from '.';\nconst gd = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserCordovaExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-cordova',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('cordova').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForCordova', true);\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  renderDoneFooter: ({ compressionOutput, exportState, onClose }) => {\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <BlobDownloadUrlHolder blob={compressionOutput}>\n            {blobDownloadUrl => (\n              <RaisedButton\n                fullWidth\n                primary\n                onClick={() => openBlobDownloadUrl(blobDownloadUrl, 'game.zip')}\n                label={<Trans>Download the exported game</Trans>}\n              />\n            )}\n          </BlobDownloadUrlHolder>\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { BlobDownloadUrlHolder } from '../../Utils/BlobDownloadUrlHolder';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/ElectronExport';\nimport { openBlobDownloadUrl } from '.';\nconst gd = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserElectronExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-electron',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('electron').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForElectron', true);\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  renderDoneFooter: ({ compressionOutput, exportState, onClose }) => {\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <BlobDownloadUrlHolder blob={compressionOutput}>\n            {blobDownloadUrl => (\n              <RaisedButton\n                fullWidth\n                primary\n                onClick={() => openBlobDownloadUrl(blobDownloadUrl, 'game.zip')}\n                label={<Trans>Download the exported game</Trans>}\n              />\n            )}\n          </BlobDownloadUrlHolder>\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { BlobDownloadUrlHolder } from '../../Utils/BlobDownloadUrlHolder';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/Cocos2dExport';\nimport { openBlobDownloadUrl } from '.';\nimport { Column, Line } from '../../UI/Grid';\nimport Toggle from '../../UI/Toggle';\nconst gd = global.gd;\n\ntype ExportState = {\n  debugMode: boolean,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserCocos2dExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-cocos2d',\n\n  getInitialExportState: () => ({\n    debugMode: false,\n  }),\n\n  canLaunchBuild: () => true,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <ExplanationHeader />\n      </Line>\n      <Line>\n        <Toggle\n          onToggle={(e, check) =>\n            updateExportState(prevState => ({\n              ...prevState,\n              debugMode: check,\n            }))\n          }\n          toggled={exportState.debugMode}\n          labelPosition=\"right\"\n          label={\n            <Trans>\n              Debug mode (show FPS counter and stats in the bottom left)\n            </Trans>\n          }\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('cocos2d-js').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    exporter.exportWholeCocos2dProject(\n      context.project,\n      context.exportState.debugMode,\n      outputDir\n    );\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  renderDoneFooter: ({ compressionOutput, exportState, onClose }) => {\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <BlobDownloadUrlHolder blob={compressionOutput}>\n            {blobDownloadUrl => (\n              <RaisedButton\n                fullWidth\n                primary\n                onClick={() => openBlobDownloadUrl(blobDownloadUrl, 'game.zip')}\n                label={<Trans>Download the exported game</Trans>}\n              />\n            )}\n          </BlobDownloadUrlHolder>\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { BlobDownloadUrlHolder } from '../../Utils/BlobDownloadUrlHolder';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/FacebookInstantGamesExport';\nimport { openBlobDownloadUrl } from '.';\nconst gd = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserFacebookInstantGamesExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-facebook-instant-games',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('facebook-instant-games').then(\n      ({ gdjsRoot, filesContent }) => {\n        console.info('GDJS found in ', gdjsRoot);\n\n        const outputDir = '/export/';\n        const abstractFileSystem = new BrowserFileSystem({\n          textFiles: filesContent,\n        });\n        // TODO: Memory leak? Check for other exporters too.\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          abstractFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n        return {\n          exporter,\n          outputDir,\n          abstractFileSystem,\n        };\n      }\n    );\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForFacebookInstantGames', true);\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  renderDoneFooter: ({ compressionOutput, exportState, onClose }) => {\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <BlobDownloadUrlHolder blob={compressionOutput}>\n            {blobDownloadUrl => (\n              <RaisedButton\n                primary\n                onClick={() =>\n                  openBlobDownloadUrl(blobDownloadUrl, 'fb-instant-game.zip')\n                }\n                label={<Trans>Download the Instant Game archive</Trans>}\n              />\n            )}\n          </BlobDownloadUrlHolder>\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport {\n  type JsExtensionsLoader,\n  type ExtensionLoadingResult,\n  type TranslationFunction,\n  loadExtension,\n} from '.';\nimport ObjectsEditorService from '../ObjectEditor/ObjectsEditorService';\nimport ObjectsRenderingService from '../ObjectsRendering/ObjectsRenderingService';\nconst gd = global.gd;\n\n// The list of \"JsExtension.js\" files to be bundled in the webapp, keyed by their extension name.\nconst jsExtensions = [\n  {\n    name: 'AdMob',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/AdMob/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'FacebookInstantGames',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/FacebookInstantGames/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'DeviceSensors',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/DeviceSensors/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'DeviceVibration',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/DeviceVibration/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'Physics2',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/Physics2Behavior/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'ExampleJsExtension',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/ExampleJsExtension/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'Tween',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/TweenBehavior/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'Video',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/Video/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'FileSystem',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/FileSystem/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'DialogueTree',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/DialogueTree/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'BBText',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/BBText/JsExtension.js'),\n    objectsRenderingServiceModules: {\n      'pixi-multistyle-text/dist/pixi-multistyle-text.umd': require('GDJS-for-web-app-only/Runtime/Extensions/BBText/pixi-multistyle-text/dist/pixi-multistyle-text.umd'),\n    },\n  },\n  {\n    name: 'Effects',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/Effects/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n];\n\ntype MakeExtensionsLoaderArguments = {|\n  objectsEditorService: typeof ObjectsEditorService,\n  objectsRenderingService: typeof ObjectsRenderingService,\n  filterExamples: boolean,\n|};\n\n/**\n * Loader that load all JS extensions required in this file.\n * Extensions are usually auto-discovered when declared in Extensions/xxx/JsExtension.js, but not\n * for the web-app where everything must be bundled.\n */\nexport default function makeExtensionsLoader({\n  objectsEditorService,\n  objectsRenderingService,\n  filterExamples,\n}: MakeExtensionsLoaderArguments): JsExtensionsLoader {\n  return {\n    loadAllExtensions(\n      _: TranslationFunction\n    ): Promise<\n      Array<{ extensionModulePath: string, result: ExtensionLoadingResult }>\n    > {\n      return Promise.resolve(\n        jsExtensions\n          .filter(({ name }) => !filterExamples || !name.includes('Example'))\n          .map(({ name, extensionModule, objectsRenderingServiceModules }) => {\n            // Load any editor for objects, if we have somewhere where\n            // to register them.\n            if (\n              objectsEditorService &&\n              extensionModule.registerEditorConfigurations\n            ) {\n              extensionModule.registerEditorConfigurations(\n                objectsEditorService\n              );\n            }\n\n            // Register modules for ObjectsRenderingService\n            if (objectsRenderingService && objectsRenderingServiceModules) {\n              for (let requirePath in objectsRenderingServiceModules) {\n                objectsRenderingService.registerModule(\n                  requirePath,\n                  objectsRenderingServiceModules[requirePath]\n                );\n              }\n            }\n\n            // Load any renderer for objects, if we have somewhere where\n            // to register them.\n            if (\n              objectsRenderingService &&\n              extensionModule.registerInstanceRenderers\n            ) {\n              extensionModule.registerInstanceRenderers(\n                objectsRenderingService\n              );\n            }\n\n            return {\n              extensionModulePath: 'internal-extension://' + name,\n              result: loadExtension(\n                _,\n                gd,\n                gd.JsPlatform.get(),\n                extensionModule\n              ),\n            };\n          })\n      );\n    },\n  };\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { type StorageProvider, type FileMetadata } from '../index';\nimport { serializeToJSON } from '../../Utils/Serializer';\nimport GoogleDrive from '../../UI/CustomSvgIcons/GoogleDrive';\nimport GoogleDriveSaveAsDialog from './GoogleDriveSaveAsDialog';\nimport { type MessageDescriptor } from '../../Utils/i18n/MessageDescriptor.flow';\nimport { type AppArguments } from '../../Utils/Window';\nimport { loadScript } from '../../Utils/LoadScript';\nconst isDev = process.env.NODE_ENV === 'development';\n\nconst DEVELOPER_KEY = isDev\n  ? 'AIzaSyDH3UNpxzIpcTyd6aMCWI5oNFSptG_BhOc'\n  : 'AIzaSyDJYQmzLCfjXnNImDa1X_cDTWjl2BOrcM4';\nconst CLIENT_ID = isDev\n  ? '28563107180-bd29h9f3og4h1632m94nv6hat2igrej6.apps.googleusercontent.com'\n  : '44882707384-3t4tubr3fbht87sbtdp7u5mlo45k5uku.apps.googleusercontent.com';\nconst APP_ID = isDev ? '28563107180' : '44882707384'; // This is the first part of CLIENT_ID.\nconst DISCOVERY_DOCS = [\n  'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest',\n];\nconst SCOPE =\n  'https://www.googleapis.com/auth/drive.file https://www.googleapis.com/auth/drive.install';\n\nlet apisLoaded = false;\nlet apisLoadingPromise = null;\n\n/**\n * Load Google Drive APIs. Return a fulfilled promise when done.\n */\nconst initializeApis = (): Promise<void> => {\n  if (apisLoaded) {\n    return Promise.resolve();\n  }\n\n  if (apisLoadingPromise) {\n    // Only do a single initialization attempt at a given time.\n    return apisLoadingPromise;\n  }\n\n  apisLoadingPromise = loadScript('https://apis.google.com/js/api:client.js')\n    .then(() => {\n      const gapi = global.gapi;\n      if (!gapi) {\n        throw new Error(\n          'No gapi global object found after loading Google Drive API script'\n        );\n      }\n\n      return new Promise((resolve, reject) => {\n        gapi.load('client:auth2:picker', {\n          callback: () => {\n            const auth2LoadPromise = gapi.auth2.init({\n              apiKey: DEVELOPER_KEY,\n              clientId: CLIENT_ID,\n              discoveryDocs: DISCOVERY_DOCS,\n              scope: SCOPE,\n            });\n\n            gapi.client.setApiKey(DEVELOPER_KEY);\n            const driveLoadPromise = gapi.client.load('drive', 'v3');\n\n            resolve(Promise.all([auth2LoadPromise, driveLoadPromise]));\n          },\n          onerror: () => {\n            reject(\n              new Error(\n                'Unable to load auth2 and picker APIs for Google Drive.'\n              )\n            );\n          },\n        });\n      });\n    })\n    .then(() => {\n      apisLoaded = true;\n      apisLoadingPromise = null;\n    })\n    .catch(error => {\n      console.error('Error while loading Google Drive APIs:', error);\n      apisLoadingPromise = null;\n\n      throw error;\n    });\n\n  return apisLoadingPromise;\n};\n\ntype GoogleUser = {\n  getAuthResponse: () => { access_token: string, error?: ?Error },\n};\n\nlet isAuthenticated = false;\n\n/**\n * Sign in the user to Google Drive, returning the user object after a successful sign up\n * (or if the user is already signed in).\n */\nexport const authenticate = (): Promise<GoogleUser> => {\n  return initializeApis().then(() => {\n    const gapi = global.gapi;\n    const googleAuth = gapi.auth2.getAuthInstance();\n    if (isAuthenticated && googleAuth.isSignedIn.get()) {\n      return googleAuth.currentUser.get();\n    }\n\n    isAuthenticated = false;\n    googleAuth.isSignedIn.listen(authenticated => {\n      console.info('Authenticated with Google APIs: ', authenticated);\n      isAuthenticated = authenticated;\n    });\n    return googleAuth\n      .signIn({ scope: SCOPE })\n      .then((googleUser: GoogleUser) => {\n        if (\n          !googleUser.getAuthResponse() ||\n          googleUser.getAuthResponse().error\n        ) {\n          console.error(\n            'OAuth2 error while sign in:',\n            googleUser.getAuthResponse()\n              ? googleUser.getAuthResponse().error\n              : 'No AuthResponse'\n          );\n          throw new Error('Authentication error');\n        }\n\n        isAuthenticated = true;\n        return googleUser;\n      });\n  });\n};\n\n/**\n * Update a JSON file, given its file id.\n */\nexport const patchJsonFile = (\n  fileId: string,\n  googleUser: GoogleUser,\n  content: string\n): Promise<void> => {\n  return fetch(`https://www.googleapis.com/upload/drive/v3/files/${fileId}`, {\n    method: 'PATCH',\n    headers: new Headers({\n      Authorization: `Bearer ${googleUser.getAuthResponse().access_token}`,\n      'Content-Type': 'application/json',\n    }),\n    body: content,\n  }).then(res => {\n    if (res.status !== 200) {\n      if (res.status === 401) {\n        isAuthenticated = false;\n      }\n\n      throw res;\n    }\n  });\n};\n\n/**\n * Create a new empty JSON file, returning its fileid.\n */\nexport const createNewJsonFile = (\n  parentId: string,\n  name: string\n): Promise<string> => {\n  const gapi = global.gapi;\n\n  return gapi.client.drive.files\n    .create({\n      'content-type': 'application/json',\n      uploadType: 'multipart',\n      name: name,\n      parents: [parentId],\n      mimeType: 'application/json',\n      fields: 'id, name, kind, size',\n    })\n    .then(apiResponse => {\n      return apiResponse.result.id;\n    });\n};\n\n/**\n * Information about a file or folder picked by the user.\n */\nexport type GoogleDriveFileOrFolder =\n  | {|\n      type: 'FOLDER',\n      id: string,\n      name: string,\n    |}\n  | {|\n      type: 'FILE',\n      id: string,\n      name: string,\n      parentId: string,\n    |};\n\nexport type GoogleDriveFilePickerOptions = {|\n  selectFolderEnabled: boolean,\n  showUploadView: boolean,\n|};\n\n/**\n * Display a file picker as a modal, resolving with the selected file or folder,\n * if any.\n *\n * The picker dialog is not playing nice with material-ui dialogs or overlays. They should\n * not be displayed when the picker is on screen.\n */\nconst showFilePicker = ({\n  selectFolderEnabled,\n  showUploadView,\n}: GoogleDriveFilePickerOptions): Promise<?GoogleDriveFileOrFolder> => {\n  return authenticate().then(googleUser => {\n    const google = global.google;\n\n    return new Promise(resolve => {\n      let picker = null;\n      const pickerBuilder = new google.picker.PickerBuilder()\n        .addView(\n          new google.picker.DocsView()\n            .setIncludeFolders(true)\n            .setSelectFolderEnabled(selectFolderEnabled)\n        )\n        .setOAuthToken(googleUser.getAuthResponse().access_token)\n        .setDeveloperKey(DEVELOPER_KEY)\n        .setAppId(APP_ID) // App ID is required to correctly identify files created with the app.\n        .setCallback(data => {\n          if (\n            data[google.picker.Response.ACTION] === google.picker.Action.PICKED\n          ) {\n            const doc = data[google.picker.Response.DOCUMENTS][0];\n            const id: string = doc[google.picker.Document.ID];\n            const name: string = doc[google.picker.Document.NAME];\n            const parentId: string = doc[google.picker.Document.PARENT_ID];\n            if (\n              doc[google.picker.Document.TYPE] ===\n                google.picker.Type.LOCATION ||\n              doc[google.picker.Document.MIME_TYPE] ===\n                'application/vnd.google-apps.folder'\n            ) {\n              resolve({ id, name, type: 'FOLDER' });\n            } else {\n              resolve({ id, name, type: 'FILE', parentId });\n            }\n            if (picker) picker.dispose();\n          } else if (\n            data[google.picker.Response.ACTION] === google.picker.Action.CANCEL\n          ) {\n            resolve(null);\n            if (picker) picker.dispose();\n          }\n        });\n      if (showUploadView) {\n        pickerBuilder.addView(\n          new google.picker.DocsUploadView().setIncludeFolders(true)\n        );\n      }\n\n      picker = pickerBuilder.build();\n\n      picker.setVisible(true);\n      const pickerElements = document.getElementsByClassName('picker-dialog');\n      for (var i = 0; i < pickerElements.length; ++i) {\n        pickerElements[i].style.zIndex = '5000'; // Higher than Material UI modals\n      }\n    });\n  });\n};\n\n/**\n * A storage that is using Google Drive to open and store files.\n */\nexport default ({\n  internalName: 'GoogleDrive',\n  name: t`Google Drive`,\n  renderIcon: () => <GoogleDrive />,\n  getFileMetadataFromAppArguments: (appArguments: AppArguments) => {\n    if (appArguments.state) {\n      try {\n        // See \"state\" argument passed by Google Drive API:\n        // https://developers.google.com/drive/api/v3/enable-sdk#construct\n        const googleDriveState = JSON.parse(appArguments.state);\n        if (googleDriveState.ids && googleDriveState.ids[0]) {\n          return {\n            fileIdentifier: googleDriveState.ids[0],\n          };\n        }\n      } catch (e) {\n        console.warn(\n          \"Error while trying to parse the Google Drive 'ids' in 'state' from the app arguments.\"\n        );\n      }\n    }\n\n    return null;\n  },\n  createOperations: ({ setDialog, closeDialog }) => {\n    initializeApis().catch(() => {\n      // Ignore error as we'll retry later.\n    });\n\n    return {\n      doesInitialOpenRequireUserInteraction: true, // Authentication will open a popup, requiring user interaction\n      onOpen: (\n        fileMetadata: FileMetadata\n      ): Promise<{|\n        content: Object,\n      |}> => {\n        const fileId = fileMetadata.fileIdentifier;\n\n        return authenticate()\n          .then(googleUser =>\n            fetch(\n              `https://www.googleapis.com/drive/v3/files/${fileId}?alt=media`,\n              {\n                method: 'GET',\n                headers: new Headers({\n                  Authorization: `Bearer ${\n                    googleUser.getAuthResponse().access_token\n                  }`,\n                }),\n              }\n            )\n          )\n          .then(\n            response => {\n              return response.text().then(\n                fileContent => {\n                  return new Promise((resolve, reject) => {\n                    try {\n                      const dataObject = JSON.parse(fileContent);\n                      return resolve({\n                        content: dataObject,\n                      });\n                    } catch (ex) {\n                      return reject(fileId + ' is a corrupted/malformed file.');\n                    }\n                  });\n                },\n                error => {\n                  console.error(\n                    'Error while reading the file from Google Drive API: ',\n                    error\n                  );\n                  throw error;\n                }\n              );\n            },\n            error => {\n              console.error(\n                'Error while fetching the file from Google Drive API: ',\n                error\n              );\n              throw error;\n            }\n          );\n      },\n      onOpenWithPicker: (): Promise<?FileMetadata> => {\n        return authenticate()\n          .then(googleUser =>\n            showFilePicker({ selectFolderEnabled: false, showUploadView: true })\n          )\n          .then(googleDriveFileOrFolder => {\n            if (!googleDriveFileOrFolder) {\n              return null;\n            }\n\n            return {\n              fileIdentifier: googleDriveFileOrFolder.id,\n            };\n          });\n      },\n      onSaveProject: (project: gdProject, fileMetadata: FileMetadata) => {\n        const fileId = fileMetadata.fileIdentifier;\n\n        const content = serializeToJSON(project);\n        return authenticate()\n          .then(googleUser => patchJsonFile(fileId, googleUser, content))\n          .then(() => ({\n            wasSaved: true,\n            fileMetadata,\n          }));\n      },\n      onSaveProjectAs: (project: gdProject, fileMetadata: ?FileMetadata) => {\n        return new Promise(resolve => {\n          setDialog(() => (\n            <GoogleDriveSaveAsDialog\n              onShowFilePicker={showFilePicker}\n              onCancel={() => {\n                closeDialog();\n                resolve({ wasSaved: false, fileMetadata });\n              }}\n              onSave={({ selectedFileOrFolder, newFileName, onError }) => {\n                const content = serializeToJSON(project);\n\n                if (selectedFileOrFolder.type === 'FOLDER') {\n                  return authenticate().then(googleUser =>\n                    createNewJsonFile(\n                      selectedFileOrFolder.id,\n                      newFileName\n                    ).then(newFileId =>\n                      patchJsonFile(newFileId, googleUser, content).then(() => {\n                        closeDialog();\n                        resolve({\n                          wasSaved: true,\n                          fileMetadata: {\n                            fileIdentifier: newFileId,\n                          },\n                        });\n                      })\n                    )\n                  );\n                } else {\n                  return authenticate()\n                    .then(googleUser =>\n                      patchJsonFile(\n                        selectedFileOrFolder.id,\n                        googleUser,\n                        content\n                      )\n                    )\n                    .then(() => {\n                      closeDialog();\n                      resolve({\n                        wasSaved: true,\n                        fileMetadata: {\n                          fileIdentifier: selectedFileOrFolder.id,\n                        },\n                      });\n                    });\n                }\n              }}\n            />\n          ));\n        });\n      },\n      getOpenErrorMessage: (error: Error): MessageDescriptor => {\n        if (!apisLoaded) {\n          return t`Google Drive could not be loaded. Check that your are not offline and have a proper internet connection, then try again.`;\n        }\n\n        return t`Check that you don't have any blocked popup (if so, allow them and retry) and that you have the authorizations for reading the file you're trying to access.`;\n      },\n    };\n  },\n}: StorageProvider);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M7.71,3.5L1.15,15L4.58,21L11.13,9.5M9.73,15L6.3,21H19.42L22.85,15M22.28,14L15.42,2H8.58L8.57,2L15.43,14H22.28Z\" />\n  </SvgIcon>\n));\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport TextField from '../../UI/TextField';\nimport { type GoogleDriveFileOrFolder } from '.';\n\ntype Props = {|\n  floatingLabelText: React.Node,\n  value: ?GoogleDriveFileOrFolder,\n  onOpenPicker: () => void,\n|};\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'baseline',\n    width: '100%',\n  },\n  button: {\n    marginLeft: 10,\n  },\n  textField: {\n    flex: 1,\n  },\n};\n\nexport default (props: Props) => {\n  return (\n    <div\n      style={{\n        ...styles.container,\n      }}\n    >\n      <TextField\n        style={styles.textField}\n        floatingLabelText={props.floatingLabelText}\n        floatingLabelFixed\n        type=\"text\"\n        hintText={t`Choose a file or folder`}\n        value={props.value ? props.value.name : ''}\n        onChange={() => {}}\n      />\n      <RaisedButton\n        label={<Trans>Choose...</Trans>}\n        primary\n        style={styles.button}\n        onClick={props.onOpenPicker}\n      />\n    </div>\n  );\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport { Column, Line } from '../../UI/Grid';\nimport GoogleDriveFileOrFolderPicker from './GoogleDriveFileOrFolderPicker';\nimport {\n  type GoogleDriveFileOrFolder,\n  type GoogleDriveFilePickerOptions,\n} from '.';\nimport TextField from '../../UI/TextField';\nimport LeftLoader from '../../UI/LeftLoader';\nimport AlertMessage from '../../UI/AlertMessage';\n\ntype Props = {|\n  onCancel: () => void,\n  onSave: ({|\n    selectedFileOrFolder: GoogleDriveFileOrFolder,\n    newFileName: string,\n  |}) => Promise<void>,\n  onShowFilePicker: GoogleDriveFilePickerOptions => Promise<?GoogleDriveFileOrFolder>,\n|};\n\n/**\n * A \"Save as\" dialog for Google Drive, allowing to pick a file to overwrite or a folder\n * and a new filename where to save the game.\n */\nexport default (props: Props) => {\n  const [selectedFileOrFolder, setSelectedFileOrFolder] = React.useState(\n    (null: ?GoogleDriveFileOrFolder)\n  );\n  const [newFileName, setNewFileName] = React.useState('');\n  const [saving, setSaving] = React.useState(false);\n  const [saveError, setSaveError] = React.useState((null: ?Error));\n  const [pickerError, setPickerError] = React.useState((null: ?Error));\n  const [dialogHidden, hideDialog] = React.useState(false);\n\n  const canSave = () => {\n    if (saving) return;\n    if (!selectedFileOrFolder) return;\n\n    return selectedFileOrFolder.type === 'FOLDER' ? !!newFileName : true;\n  };\n  const save = () => {\n    if (!selectedFileOrFolder) return;\n\n    setSaveError(null);\n    setSaving(true);\n    props\n      .onSave({\n        selectedFileOrFolder,\n        newFileName,\n      })\n      .catch(error => {\n        setSaveError(error);\n        setSaving(false);\n      });\n  };\n  const canCancel = () => !saving;\n  const cancel = () => {\n    if (!canCancel()) return;\n\n    props.onCancel();\n  };\n  const openPicker = () => {\n    hideDialog(true);\n    setPickerError(null);\n    props\n      .onShowFilePicker({ selectFolderEnabled: true, showUploadView: false })\n      .then(selectedFileOrFolder => {\n        setSelectedFileOrFolder(selectedFileOrFolder);\n        hideDialog(false);\n      })\n      .catch(error => {\n        setPickerError(error);\n        hideDialog(false);\n      });\n  };\n\n  // Hide the dialog while the picker is opened, as it does not play nice with material-ui's\n  // Dialog.\n  if (dialogHidden) {\n    return null;\n  }\n\n  return (\n    <Dialog\n      title={<Trans>Save on Google Drive</Trans>}\n      actions={[\n        <FlatButton\n          key=\"cancel\"\n          label={<Trans>Cancel</Trans>}\n          primary={false}\n          disabled={!canCancel()}\n          onClick={props.onCancel}\n        />,\n        <LeftLoader key=\"save\" isLoading={saving}>\n          <FlatButton\n            label={<Trans>Save</Trans>}\n            primary\n            disabled={!canSave()}\n            onClick={save}\n          />\n        </LeftLoader>,\n      ]}\n      open\n      onRequestClose={cancel}\n      maxWidth=\"sm\"\n    >\n      <Column noMargin>\n        <Line>\n          <GoogleDriveFileOrFolderPicker\n            floatingLabelText={\n              <Trans>Google Drive folder or existing file to overwrite</Trans>\n            }\n            value={selectedFileOrFolder}\n            onOpenPicker={openPicker}\n          />\n        </Line>\n        <Line>\n          {selectedFileOrFolder && selectedFileOrFolder.type === 'FOLDER' ? (\n            <TextField\n              floatingLabelText={<Trans>New file name</Trans>}\n              floatingLabelFixed\n              type=\"text\"\n              hintText={t`YourGame.json`}\n              value={newFileName}\n              onChange={(event, newFileName) => setNewFileName(newFileName)}\n              fullWidth\n            />\n          ) : null}\n        </Line>\n        {saveError && (\n          <Line>\n            <AlertMessage kind=\"error\">\n              There was an error when saving your game. Verify that you have the\n              rights on the folder or file that you selected and try again.\n            </AlertMessage>\n          </Line>\n        )}\n        {pickerError && (\n          <Line>\n            <AlertMessage kind=\"error\">\n              There was an error when selecting a file or folder from Google\n              Drive. Try again later or verify that you are properly connected\n              to Google Drive.\n            </AlertMessage>\n          </Line>\n        )}\n      </Column>\n    </Dialog>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { type Exporter } from '../ExportDialog';\nimport { browserOnlineCordovaExportPipeline } from './BrowserOnlineCordovaExport.js';\nimport { browserOnlineElectronExportPipeline } from './BrowserOnlineElectronExport.js';\nimport { browserOnlineWebExportPipeline } from './BrowserOnlineWebExport';\nimport { browserHTML5ExportPipeline } from './BrowserHTML5Export';\nimport { browserCordovaExportPipeline } from './BrowserCordovaExport';\nimport { browserElectronExportPipeline } from './BrowserElectronExport';\nimport { browserCocos2dExportPipeline } from './BrowserCocos2dExport';\nimport { browserFacebookInstantGamesExportPipeline } from './BrowserFacebookInstantGamesExport';\nimport PhoneIphone from '@material-ui/icons/PhoneIphone';\nimport LaptopMac from '@material-ui/icons/LaptopMac';\nimport Folder from '@material-ui/icons/Folder';\nimport Facebook from '../../UI/CustomSvgIcons/Facebook';\nimport Cordova from '../../UI/CustomSvgIcons/Cordova';\nimport Chrome from '../../UI/CustomSvgIcons/Chrome';\n\nexport const getBrowserExporters = (): Array<Exporter> => [\n  {\n    name: <Trans>Android (&amp; iOS coming soon)</Trans>,\n    renderIcon: props => <PhoneIphone {...props} />,\n    helpPage: '/publishing/android_and_ios',\n    description: (\n      <Trans>\n        Package your game for Android directly from GDevelop. iOS support is\n        coming soon!\n      </Trans>\n    ),\n    key: 'browseronlinecordovaexport',\n    exportPipeline: browserOnlineCordovaExportPipeline,\n  },\n  {\n    name: <Trans>Web (upload online)</Trans>,\n    renderIcon: props => <Chrome {...props} />,\n    helpPage: '/publishing/web',\n    description: (\n      <Trans>\n        Upload your game online directly from GDevelop and share the link to\n        players. Play to your game using your browser on computers and mobile\n        phones.\n      </Trans>\n    ),\n    key: 'browsers3export',\n    exportPipeline: browserOnlineWebExportPipeline,\n  },\n  {\n    name: <Trans>HTML5 game (zip)</Trans>,\n    renderIcon: props => <Folder {...props} />,\n    helpPage: '/publishing/html5_game_in_a_local_folder',\n    description: (\n      <Trans>\n        Build the game locally as a HTML5 game. You can then publish it on\n        website like Kongregate, Game Jolt, itch.io, Poki...\n      </Trans>\n    ),\n    key: 'browserhtml5export',\n    exportPipeline: browserHTML5ExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>Facebook Instant Games</Trans>,\n    renderIcon: props => <Facebook {...props} />,\n    helpPage: '/publishing/publishing-to-facebook-instant-games',\n    description: (\n      <Trans>\n        Package your game as a Facebook Instant Games that can be played on\n        Facebook Messenger.\n      </Trans>\n    ),\n    key: 'browserfacebookinstantgames',\n    exportPipeline: browserFacebookInstantGamesExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>iOS &amp; Android (manual)</Trans>,\n    renderIcon: props => <Cordova {...props} />,\n    helpPage: '/publishing/android_and_ios_with_cordova',\n    description: (\n      <Trans>\n        Build the game locally as a Cordova project, and export it manually then\n        to iOS or Android with Cordova developers tools.\n      </Trans>\n    ),\n    key: 'browsercordovaexport',\n    exportPipeline: browserCordovaExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>Windows/macOS/Linux</Trans>,\n    renderIcon: props => <LaptopMac {...props} />,\n    helpPage: '/publishing/windows-macos-linux',\n    description: (\n      <Trans>\n        Package your game as an app for Windows, macOS or Linux directly from\n        GDevelop.\n      </Trans>\n    ),\n    key: 'browseronlineelectronexport',\n    exportPipeline: browserOnlineElectronExportPipeline,\n  },\n  {\n    name: <Trans>Windows/macOS/Linux (manual)</Trans>,\n    renderIcon: props => <LaptopMac {...props} />,\n    helpPage: '/publishing/windows-macos-linux-with-electron',\n    description: (\n      <Trans>\n        Build the game locally and export it manually to Windows, macOS or Linux\n        with third-party developer tools.\n      </Trans>\n    ),\n    key: 'browserelectronexport',\n    exportPipeline: browserElectronExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>Cocos2d-JS</Trans>,\n    renderIcon: props => <PhoneIphone {...props} />,\n    helpPage: '/publishing/android_and_ios_with_cocos2d-js',\n    description: (\n      <Trans>\n        Export your game using Cocos2d-JS game engine. The game can be compiled\n        for Android or iOS if you install Cocos2d-JS developer tools.\n      </Trans>\n    ),\n    key: 'browsercocos2dexport',\n    exportPipeline: browserCocos2dExportPipeline,\n    experimental: true,\n  },\n];\n\n/**\n * Open an URL generated from a blob, to download it with the specified filename.\n */\nexport const openBlobDownloadUrl = (url: string, filename: string) => {\n  const { body } = document;\n  if (!body) return;\n\n  // Not using Window.openExternalURL because blob urls are blocked\n  // by Adblock Plus (and maybe other ad blockers).\n  const a = document.createElement('a');\n  body.appendChild(a);\n  a.style.display = 'none';\n  a.href = url;\n  a.download = filename;\n  a.click();\n  body.removeChild(a);\n};\n","// @flow\nimport * as React from 'react';\n\ntype Props = {\n  blob: ?Blob,\n  children: (blobDownloadUrl: string) => React.Node,\n};\n\nexport const BlobDownloadUrlHolder = ({ blob, children }: Props) => {\n  const [blobDownloadUrl, setBlobDownloadUrl] = React.useState('');\n  React.useEffect(\n    () => {\n      // Release the existing blob URL, if any.\n      if (blobDownloadUrl) {\n        URL.revokeObjectURL(blobDownloadUrl);\n      }\n\n      if (blob) {\n        setBlobDownloadUrl(URL.createObjectURL(blob));\n      } else {\n        setBlobDownloadUrl('');\n      }\n\n      return () => {\n        // Release the blob URL if component is unmounted.\n        if (blobDownloadUrl) {\n          URL.revokeObjectURL(blobDownloadUrl);\n        }\n      };\n    },\n    [blob]\n  );\n\n  return children(blobDownloadUrl);\n};\n","// @flow\nimport axios from 'axios';\nimport { GDevelopGamesPreview } from './ApiConfigs';\nimport { getSignedUrl } from './Usage';\n\nexport type UploadedObject = {|\n  Key: string,\n  Body: string,\n  ContentType: 'text/javascript' | 'text/html',\n|};\n\nexport const uploadObject = (params: UploadedObject): Promise<any> => {\n  return getSignedUrl({\n    uploadType: 'preview',\n    key: params.Key,\n    contentType: params.ContentType,\n  }).then(({ signedUrl }) =>\n    axios.put(signedUrl, params.Body, {\n      headers: {\n        'Content-Type': params.ContentType,\n      },\n    })\n  );\n};\n\nexport const getBaseUrl = () => {\n  return GDevelopGamesPreview.options.destinationBucketBaseUrl;\n};\n","// @flow\nimport axios from 'axios';\n\ntype UploadOptions = {\n  signedUrl: string,\n  contentType: string,\n};\n\nexport const uploadBlobFile = (\n  blob: Blob,\n  uploadOptions: UploadOptions,\n  onProgress: (progress: number, total: number) => void\n): Promise<void> => {\n  return axios\n    .put(uploadOptions.signedUrl, blob, {\n      headers: {\n        'Content-Type': uploadOptions.contentType,\n      },\n      // Allow any arbitrary large file to be sent\n      maxContentLength: Infinity,\n      onUploadProgress: progressEvent => {\n        if (!progressEvent || !progressEvent.total) {\n          onProgress(0, 0);\n          return;\n        }\n\n        onProgress(progressEvent.loaded, progressEvent.total);\n      },\n    })\n    .then(() => undefined);\n};\n","// @flow\n// This file is generated by update-fixtures-from-resources-examples.js script\n\nimport exampleFile0 from '../../fixtures/admob/admob.json';\nimport exampleFile1 from '../../fixtures/advanced-shape-based-painter/advanced-shape-based-painter.json';\nimport exampleFile2 from '../../fixtures/animation-speed-scale/animation-speed-scale.json';\nimport exampleFile3 from '../../fixtures/asteroids/asteroids.json';\nimport exampleFile4 from '../../fixtures/basic-ai-with-pathfinding/basic-ai-with-pathfinding.json';\nimport exampleFile5 from '../../fixtures/basic-artificial-intelligence/basic-artificial-intelligence.json';\nimport exampleFile6 from '../../fixtures/basic-topdown-car-driving/basic-topdown-car-driving.json';\nimport exampleFile7 from '../../fixtures/bbtext-object-demo/bbtext-object-demo.json';\nimport exampleFile8 from '../../fixtures/betabox-basics-learning-experience/betabox-basics-learning-experience.json';\nimport exampleFile9 from '../../fixtures/bomb-the-crate/bomb-the-crate.json';\nimport exampleFile10 from '../../fixtures/bouncing-ball-and-rope/bouncing-ball-and-rope.json';\nimport exampleFile11 from '../../fixtures/breakout/breakout.json';\nimport exampleFile12 from '../../fixtures/buttons/buttons.json';\nimport exampleFile13 from '../../fixtures/car-physics/car-physics.json';\nimport exampleFile14 from '../../fixtures/center-object-within-another/center-object-within-another.json';\nimport exampleFile15 from '../../fixtures/change-position-of-object/change-position-of-object.json';\nimport exampleFile16 from '../../fixtures/change-scale-of-sprites/change-scale-of-sprites.json';\nimport exampleFile17 from '../../fixtures/change-sprite-animation/change-sprite-animation.json';\nimport exampleFile18 from '../../fixtures/change-sprite-color/change-sprite-color.json';\nimport exampleFile19 from '../../fixtures/character-selection/character-selection.json';\nimport exampleFile20 from '../../fixtures/count-down-timer/count-down-timer.json';\nimport exampleFile21 from '../../fixtures/create-object-with-mouseclick/create-object-with-mouseclick.json';\nimport exampleFile22 from '../../fixtures/create-random-object/create-random-object.json';\nimport exampleFile23 from '../../fixtures/custom-font/custom-font.json';\nimport exampleFile24 from '../../fixtures/custom-mouse-pointer/custom-mouse-pointer.json';\nimport exampleFile25 from '../../fixtures/customize-keys-with-lastpressedkey/customize-keys-with-lastpressedkey.json';\nimport exampleFile26 from '../../fixtures/device-orientation-ballgame/device-orientation-ballgame.json';\nimport exampleFile27 from '../../fixtures/device-orientation-compass/device-orientation-compass.json';\nimport exampleFile28 from '../../fixtures/device-vibration/device-vibration.json';\nimport exampleFile29 from '../../fixtures/dialogue-tree-with-yarn/dialogue-tree-with-yarn.json';\nimport exampleFile30 from '../../fixtures/downhill-bike-physics-demo/downhill-bike-physics-demo.json';\nimport exampleFile31 from '../../fixtures/drag-camera-with-mouse/drag-camera-with-mouse.json';\nimport exampleFile32 from '../../fixtures/drop-collect-items-from-storage/drop-collect-items-from-storage.json';\nimport exampleFile33 from '../../fixtures/endless-up-runner/endless-up-runner.json';\nimport exampleFile34 from '../../fixtures/exit-app/exit-app.json';\nimport exampleFile35 from '../../fixtures/facebook-instant-game/facebook-instant-game.json';\nimport exampleFile36 from '../../fixtures/filesystem-create-directory/filesystem-create-directory.json';\nimport exampleFile37 from '../../fixtures/find-diagonals/find-diagonals.json';\nimport exampleFile38 from '../../fixtures/geodash/geodash.json';\nimport exampleFile39 from '../../fixtures/geometry-monster/geometry-monster.json';\nimport exampleFile40 from '../../fixtures/health-bar/health-bar.json';\nimport exampleFile41 from '../../fixtures/infinite-scrolling-background/infinite-scrolling-background.json';\nimport exampleFile42 from '../../fixtures/inventory-system/inventory-system.json';\nimport exampleFile43 from '../../fixtures/isometric-game/isometric-game.json';\nimport exampleFile44 from '../../fixtures/javascript-blocks-in-platformer/javascript-blocks-in-platformer.json';\nimport exampleFile45 from '../../fixtures/keyboard-practice/keyboard-practice.json';\nimport exampleFile46 from '../../fixtures/level-editor/level-editor.json';\nimport exampleFile47 from '../../fixtures/level-selection-unlock/level-selection-unlock.json';\nimport exampleFile48 from '../../fixtures/load-image-from-url/load-image-from-url.json';\nimport exampleFile49 from '../../fixtures/magnet/magnet.json';\nimport exampleFile50 from '../../fixtures/manipulate-text-object/manipulate-text-object.json';\nimport exampleFile51 from '../../fixtures/menu-with-functions-and-text-effects/menu-with-functions-and-text-effects.json';\nimport exampleFile52 from '../../fixtures/move-camera-to-position/move-camera-to-position.json';\nimport exampleFile53 from '../../fixtures/move-object-back-and-forth/move-object-back-and-forth.json';\nimport exampleFile54 from '../../fixtures/move-object-in-circle/move-object-in-circle.json';\nimport exampleFile55 from '../../fixtures/move-object-toward-position/move-object-toward-position.json';\nimport exampleFile56 from '../../fixtures/move-object-with-mouse-joint/move-object-with-mouse-joint.json';\nimport exampleFile57 from '../../fixtures/move-object-with-physics/move-object-with-physics.json';\nimport exampleFile58 from '../../fixtures/multi-language-menu/multi-language-menu.json';\nimport exampleFile59 from '../../fixtures/multiplayer-platformer-with-gamepads/multiplayer-platformer-with-gamepads.json';\nimport exampleFile60 from '../../fixtures/multitouch/multitouch.json';\nimport exampleFile61 from '../../fixtures/object-gravity/object-gravity.json';\nimport exampleFile62 from '../../fixtures/object-selection/object-selection.json';\nimport exampleFile63 from '../../fixtures/objects-timers/objects-timers.json';\nimport exampleFile64 from '../../fixtures/open-url-in-browser/open-url-in-browser.json';\nimport exampleFile65 from '../../fixtures/pairs/pairs.json';\nimport exampleFile66 from '../../fixtures/parallax/parallax.json';\nimport exampleFile67 from '../../fixtures/parallax-scrolling/parallax-scrolling.json';\nimport exampleFile68 from '../../fixtures/parse-json-from-api/parse-json-from-api.json';\nimport exampleFile69 from '../../fixtures/parse-json-string/parse-json-string.json';\nimport exampleFile70 from '../../fixtures/particles-explosions/particles-explosions.json';\nimport exampleFile71 from '../../fixtures/particles-various-effects/particles-various-effects.json';\nimport exampleFile72 from '../../fixtures/pathfinding/pathfinding.json';\nimport exampleFile73 from '../../fixtures/pathfinding-basics/pathfinding-basics.json';\nimport exampleFile74 from '../../fixtures/physics/physics.json';\nimport exampleFile75 from '../../fixtures/physics-joints-demo/physics-joints-demo.json';\nimport exampleFile76 from '../../fixtures/physics-joints-settings-demo/physics-joints-settings-demo.json';\nimport exampleFile77 from '../../fixtures/pin-object-to-another/pin-object-to-another.json';\nimport exampleFile78 from '../../fixtures/pin-object-to-another-multiple-parents/pin-object-to-another-multiple-parents.json';\nimport exampleFile79 from '../../fixtures/pixel-perfect-platform-game/pixel-perfect-platform-game.json';\nimport exampleFile80 from '../../fixtures/plane-and-clouds/plane-and-clouds.json';\nimport exampleFile81 from '../../fixtures/platformer/platformer.json';\nimport exampleFile82 from '../../fixtures/platformer-double-jump/platformer-double-jump.json';\nimport exampleFile83 from '../../fixtures/play-music-on-mobile/play-music-on-mobile.json';\nimport exampleFile84 from '../../fixtures/play-stop-sprite-animation/play-stop-sprite-animation.json';\nimport exampleFile85 from '../../fixtures/racing-game/racing-game.json';\nimport exampleFile86 from '../../fixtures/ragdoll/ragdoll.json';\nimport exampleFile87 from '../../fixtures/rain/rain.json';\nimport exampleFile88 from '../../fixtures/random-color-picker/random-color-picker.json';\nimport exampleFile89 from '../../fixtures/rotate-toward-mouse/rotate-toward-mouse.json';\nimport exampleFile90 from '../../fixtures/rotate-toward-position/rotate-toward-position.json';\nimport exampleFile91 from '../../fixtures/rotate-with-keypress/rotate-with-keypress.json';\nimport exampleFile92 from '../../fixtures/save-load/save-load.json';\nimport exampleFile93 from '../../fixtures/screen-shake/screen-shake.json';\nimport exampleFile94 from '../../fixtures/shoot-bullet-in-parabola/shoot-bullet-in-parabola.json';\nimport exampleFile95 from '../../fixtures/shoot-bullets/shoot-bullets.json';\nimport exampleFile96 from '../../fixtures/shooting-bullets-explanation/shooting-bullets-explanation.json';\nimport exampleFile97 from '../../fixtures/simple-space-shooter/simple-space-shooter.json';\nimport exampleFile98 from '../../fixtures/snap-object-to-grid/snap-object-to-grid.json';\nimport exampleFile99 from '../../fixtures/space-invaders/space-invaders.json';\nimport exampleFile100 from '../../fixtures/space-shooter/space-shooter.json';\nimport exampleFile101 from '../../fixtures/splash-screen/splash-screen.json';\nimport exampleFile102 from '../../fixtures/sprite-fade-in-out/sprite-fade-in-out.json';\nimport exampleFile103 from '../../fixtures/take-screenshot/take-screenshot.json';\nimport exampleFile104 from '../../fixtures/text-entry-object/text-entry-object.json';\nimport exampleFile105 from '../../fixtures/text-fade-in-out/text-fade-in-out.json';\nimport exampleFile106 from '../../fixtures/text-to-speech/text-to-speech.json';\nimport exampleFile107 from '../../fixtures/toggle-music-play-sound/toggle-music-play-sound.json';\nimport exampleFile108 from '../../fixtures/type-on-text-effect/type-on-text-effect.json';\nimport exampleFile109 from '../../fixtures/unlock-items/unlock-items.json';\nimport exampleFile110 from '../../fixtures/video-player/video-player.json';\nimport exampleFile111 from '../../fixtures/z-depth/z-depth.json';\nimport exampleFile112 from '../../fixtures/zombie-laser/zombie-laser.json';\n\n// prettier-ignore\nexport default {\n  'example://admob': exampleFile0,\n  'example://advanced-shape-based-painter': exampleFile1,\n  'example://animation-speed-scale': exampleFile2,\n  'example://asteroids': exampleFile3,\n  'example://basic-ai-with-pathfinding': exampleFile4,\n  'example://basic-artificial-intelligence': exampleFile5,\n  'example://basic-topdown-car-driving': exampleFile6,\n  'example://bbtext-object-demo': exampleFile7,\n  'example://betabox-basics-learning-experience': exampleFile8,\n  'example://bomb-the-crate': exampleFile9,\n  'example://bouncing-ball-and-rope': exampleFile10,\n  'example://breakout': exampleFile11,\n  'example://buttons': exampleFile12,\n  'example://car-physics': exampleFile13,\n  'example://center-object-within-another': exampleFile14,\n  'example://change-position-of-object': exampleFile15,\n  'example://change-scale-of-sprites': exampleFile16,\n  'example://change-sprite-animation': exampleFile17,\n  'example://change-sprite-color': exampleFile18,\n  'example://character-selection': exampleFile19,\n  'example://count-down-timer': exampleFile20,\n  'example://create-object-with-mouseclick': exampleFile21,\n  'example://create-random-object': exampleFile22,\n  'example://custom-font': exampleFile23,\n  'example://custom-mouse-pointer': exampleFile24,\n  'example://customize-keys-with-lastpressedkey': exampleFile25,\n  'example://device-orientation-ballgame': exampleFile26,\n  'example://device-orientation-compass': exampleFile27,\n  'example://device-vibration': exampleFile28,\n  'example://dialogue-tree-with-yarn': exampleFile29,\n  'example://downhill-bike-physics-demo': exampleFile30,\n  'example://drag-camera-with-mouse': exampleFile31,\n  'example://drop-collect-items-from-storage': exampleFile32,\n  'example://endless-up-runner': exampleFile33,\n  'example://exit-app': exampleFile34,\n  'example://facebook-instant-game': exampleFile35,\n  'example://filesystem-create-directory': exampleFile36,\n  'example://find-diagonals': exampleFile37,\n  'example://geodash': exampleFile38,\n  'example://geometry-monster': exampleFile39,\n  'example://health-bar': exampleFile40,\n  'example://infinite-scrolling-background': exampleFile41,\n  'example://inventory-system': exampleFile42,\n  'example://isometric-game': exampleFile43,\n  'example://javascript-blocks-in-platformer': exampleFile44,\n  'example://keyboard-practice': exampleFile45,\n  'example://level-editor': exampleFile46,\n  'example://level-selection-unlock': exampleFile47,\n  'example://load-image-from-url': exampleFile48,\n  'example://magnet': exampleFile49,\n  'example://manipulate-text-object': exampleFile50,\n  'example://menu-with-functions-and-text-effects': exampleFile51,\n  'example://move-camera-to-position': exampleFile52,\n  'example://move-object-back-and-forth': exampleFile53,\n  'example://move-object-in-circle': exampleFile54,\n  'example://move-object-toward-position': exampleFile55,\n  'example://move-object-with-mouse-joint': exampleFile56,\n  'example://move-object-with-physics': exampleFile57,\n  'example://multi-language-menu': exampleFile58,\n  'example://multiplayer-platformer-with-gamepads': exampleFile59,\n  'example://multitouch': exampleFile60,\n  'example://object-gravity': exampleFile61,\n  'example://object-selection': exampleFile62,\n  'example://objects-timers': exampleFile63,\n  'example://open-url-in-browser': exampleFile64,\n  'example://pairs': exampleFile65,\n  'example://parallax': exampleFile66,\n  'example://parallax-scrolling': exampleFile67,\n  'example://parse-json-from-api': exampleFile68,\n  'example://parse-json-string': exampleFile69,\n  'example://particles-explosions': exampleFile70,\n  'example://particles-various-effects': exampleFile71,\n  'example://pathfinding': exampleFile72,\n  'example://pathfinding-basics': exampleFile73,\n  'example://physics': exampleFile74,\n  'example://physics-joints-demo': exampleFile75,\n  'example://physics-joints-settings-demo': exampleFile76,\n  'example://pin-object-to-another': exampleFile77,\n  'example://pin-object-to-another-multiple-parents': exampleFile78,\n  'example://pixel-perfect-platform-game': exampleFile79,\n  'example://plane-and-clouds': exampleFile80,\n  'example://platformer': exampleFile81,\n  'example://platformer-double-jump': exampleFile82,\n  'example://play-music-on-mobile': exampleFile83,\n  'example://play-stop-sprite-animation': exampleFile84,\n  'example://racing-game': exampleFile85,\n  'example://ragdoll': exampleFile86,\n  'example://rain': exampleFile87,\n  'example://random-color-picker': exampleFile88,\n  'example://rotate-toward-mouse': exampleFile89,\n  'example://rotate-toward-position': exampleFile90,\n  'example://rotate-with-keypress': exampleFile91,\n  'example://save-load': exampleFile92,\n  'example://screen-shake': exampleFile93,\n  'example://shoot-bullet-in-parabola': exampleFile94,\n  'example://shoot-bullets': exampleFile95,\n  'example://shooting-bullets-explanation': exampleFile96,\n  'example://simple-space-shooter': exampleFile97,\n  'example://snap-object-to-grid': exampleFile98,\n  'example://space-invaders': exampleFile99,\n  'example://space-shooter': exampleFile100,\n  'example://splash-screen': exampleFile101,\n  'example://sprite-fade-in-out': exampleFile102,\n  'example://take-screenshot': exampleFile103,\n  'example://text-entry-object': exampleFile104,\n  'example://text-fade-in-out': exampleFile105,\n  'example://text-to-speech': exampleFile106,\n  'example://toggle-music-play-sound': exampleFile107,\n  'example://type-on-text-effect': exampleFile108,\n  'example://unlock-items': exampleFile109,\n  'example://video-player': exampleFile110,\n  'example://z-depth': exampleFile111,\n  'example://zombie-laser': exampleFile112,\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type StorageProvider, type FileMetadata } from '../index';\nimport internalExampleFiles from './InternalExampleFiles';\nimport {\n  POSITIONAL_ARGUMENTS_KEY,\n  type AppArguments,\n} from '../../Utils/Window';\n\n/**\n * \"Internal\" storage giving access to embedded examples.\n * Used for the web-app.\n */\nexport default ({\n  internalName: 'InternalFile',\n  name: t`Internal files`,\n  hiddenInOpenDialog: true,\n  hiddenInSaveDialog: true,\n  getFileMetadataFromAppArguments: (appArguments: AppArguments) => {\n    if (!appArguments[POSITIONAL_ARGUMENTS_KEY]) return null;\n    if (!appArguments[POSITIONAL_ARGUMENTS_KEY].length) return null;\n\n    return {\n      fileIdentifier: appArguments[POSITIONAL_ARGUMENTS_KEY][0],\n    };\n  },\n  createOperations: ({ setDialog, closeDialog }) => ({\n    onOpen: (fileMetadata: FileMetadata) => {\n      const url = fileMetadata.fileIdentifier;\n      if (internalExampleFiles[url])\n        return Promise.resolve({\n          content: internalExampleFiles[url],\n        });\n\n      return Promise.reject(new Error(`Unknown built-in game with URL ${url}`));\n    },\n  }),\n}: StorageProvider);\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport { sendNewGameCreated } from '../Utils/Analytics/EventSender';\nimport { Column, Line } from '../UI/Grid';\nimport Text from '../UI/Text';\nimport ExamplesList from './ExamplesList';\nimport InternalFileStorageProvider from '../ProjectsStorage/InternalFileStorageProvider';\nimport ExamplesInformation from './ExamplesInformation';\n\n// To add a new example, add it first in resources/examples (at which point you can see it\n// in the desktop version), then run these scripts:\n// * scripts/update-examples-information-from-resources-examples.js (update metadata)\n// * scripts/update-fixtures-from-resources-examples.js (update web-app examples)\n// and upload the examples to `gdevelop-resources` s3.\nconst exampleNames: Array<string> = Object.keys(ExamplesInformation);\n\nexport default class BrowserExamples extends Component {\n  render() {\n    return (\n      <Column noMargin>\n        <Line>\n          <Column>\n            <Text>\n              <Trans>Choose or search for an example to open:</Trans>\n            </Text>\n          </Column>\n        </Line>\n        <Line>\n          <ExamplesList\n            exampleNames={exampleNames}\n            onCreateFromExample={exampleName => {\n              sendNewGameCreated(exampleName);\n              this.props.onOpen(InternalFileStorageProvider, {\n                fileIdentifier: `example://${exampleName}`,\n              });\n            }}\n          />\n        </Line>\n      </Column>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport Dialog from '../UI/Dialog';\nimport Window from '../Utils/Window';\nimport FlatButton from '../UI/FlatButton';\nimport Text from '../UI/Text';\nimport { ResponsiveWindowMeasurer } from '../UI/Reponsive/ResponsiveWindowMeasurer';\nimport Fullscreen from '@material-ui/icons/Fullscreen';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Spacer, Line } from '../UI/Grid';\n\nexport default class BetaIntroDialog extends Component {\n  _onOpenWebsite() {\n    Window.openExternalURL('http://gdevelop-app.com');\n  }\n\n  render() {\n    const { open, onClose } = this.props;\n\n    return (\n      <ResponsiveWindowMeasurer>\n        {windowWidth => (\n          <Dialog\n            title={<Trans>Welcome to GDevelop</Trans>}\n            actions={[\n              <FlatButton\n                key=\"download\"\n                label={<Trans>Download GDevelop desktop app</Trans>}\n                primary={false}\n                onClick={this._onOpenWebsite}\n              />,\n              <FlatButton\n                label={<Trans>Close</Trans>}\n                primary={false}\n                onClick={onClose}\n                key=\"close\"\n              />,\n            ]}\n            open={open}\n            onRequestClose={onClose}\n          >\n            <div>\n              <Text>\n                <Trans>\n                  This is a version of GDevelop 5 that you can try online.\n                </Trans>\n              </Text>\n              <Text>\n                Choose a <b>new project to create</b>, then edit the scene or\n                the events ruling the game. You can{' '}\n                <b>launch a preview of your game</b> at any time.\n              </Text>\n              <Text>\n                <Trans>\n                  Download the full version of GDevelop on your desktop computer\n                  to create your own game without limits!\n                </Trans>\n              </Text>\n              {windowWidth === 'small' &&\n                (!Window.isFullscreen() ? (\n                  <React.Fragment>\n                    <Spacer />\n                    <Text>\n                      <Trans>\n                        You're working on a small screen. It's recommended to\n                        activate Fullscreen Mode for using GDevelop.\n                      </Trans>\n                    </Text>\n                    <Line justifyContent=\"center\">\n                      <RaisedButton\n                        label={<Trans>Activate Fullscreen</Trans>}\n                        primary\n                        onClick={() => {\n                          Window.requestFullscreen();\n                          setTimeout(() => {\n                            this.forceUpdate();\n                          }, 250 /* Let a bit of time for the fullscreen to kick in */);\n                        }}\n                        labelPosition=\"before\"\n                        icon={<Fullscreen />}\n                      />\n                    </Line>\n                  </React.Fragment>\n                ) : (\n                  <Line justifyContent=\"center\">\n                    <RaisedButton\n                      label={<Trans>Start using GDevelop</Trans>}\n                      primary\n                      onClick={onClose}\n                      labelPosition=\"before\"\n                    />\n                  </Line>\n                ))}\n            </div>\n          </Dialog>\n        )}\n      </ResponsiveWindowMeasurer>\n    );\n  }\n}\n","// @flow\nimport Window from '../Utils/Window';\nimport { type ResourceExternalEditor } from './ResourceExternalEditor.flow';\nimport { sendExternalEditorOpened } from '../Utils/Analytics/EventSender';\n\n/**\n * This is the list of editors that can be used to edit resources\n * when running in a browser.\n */\nconst editors: Array<ResourceExternalEditor> = [\n  {\n    name: 'piskel-app',\n    displayName: 'Edit with Piskel',\n    kind: 'image',\n    edit: () => {\n      sendExternalEditorOpened('piskel');\n      Window.showMessageBox(\n        'This feature is only supported in the desktop version for now!\\nDownload it from GDevelop website.'\n      );\n    },\n  },\n  {\n    name: 'jfxr-app',\n    displayName: 'Edit with Jfxr',\n    kind: 'audio',\n    edit: () => {\n      sendExternalEditorOpened('jfxr');\n      Window.showMessageBox(\n        'This feature is only supported in the desktop version for now!\\nDownload it from GDevelop website.'\n      );\n    },\n  },\n  {\n    name: 'yarn-app',\n    displayName: 'Edit with Yarn',\n    kind: 'json',\n    edit: () => {\n      sendExternalEditorOpened('yarn');\n      Window.showMessageBox(\n        'This feature is only supported in the desktop version for now!\\nDownload it from GDevelop website.'\n      );\n    },\n  },\n];\n\nexport default editors;\n","// @flow\nimport { type EventsFunctionCodeWriter } from '..';\nimport { uploadObject, getBaseUrl } from '../../Utils/GDevelopServices/Preview';\nimport { makeTimestampedId } from '../../Utils/TimestampedId';\nimport slugs from 'slugs';\n\n/**\n * Create the EventsFunctionCodeWriter that writes generated code for events functions\n * to temporary S3 files.\n */\nexport const makeBrowserS3EventsFunctionCodeWriter = (): EventsFunctionCodeWriter => {\n  const prefix = makeTimestampedId();\n  const getPathFor = (codeNamespace: string) => {\n    return `${prefix}/${slugs(codeNamespace)}.js`;\n  };\n\n  return {\n    getIncludeFileFor: (codeNamespace: string) =>\n      getBaseUrl() + getPathFor(codeNamespace),\n    writeFunctionCode: (\n      functionCodeNamespace: string,\n      code: string\n    ): Promise<void> => {\n      const key = getPathFor(functionCodeNamespace);\n      console.log(`Uploading function generated code to ${key}...`);\n      return uploadObject({\n        Key: getPathFor(functionCodeNamespace),\n        Body: code,\n        ContentType: 'text/javascript',\n      });\n    },\n    writeBehaviorCode: (\n      behaviorCodeNamespace: string,\n      code: string\n    ): Promise<void> => {\n      const key = getPathFor(behaviorCodeNamespace);\n      console.log(`Uploading behavior generated code to ${key}...`);\n      return uploadObject({\n        Key: getPathFor(behaviorCodeNamespace),\n        Body: code,\n        ContentType: 'text/javascript',\n      });\n    },\n  };\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport Window from '../../Utils/Window';\nimport { serializeToJSObject } from '../../Utils/Serializer';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport Text from '../../UI/Text';\n\ntype Props = {|\n  project: gdProject,\n  onDone: () => void,\n|};\n\nexport default class DownloadSaveAsDialog extends React.Component<Props> {\n  _download = () => {\n    let content = '';\n    try {\n      content = JSON.stringify(serializeToJSObject(this.props.project));\n    } catch (err) {\n      showErrorBox('Unable to save your project', err);\n      return;\n    }\n    var uri = encodeURI('data:application/json;charset=utf-8,' + content);\n\n    var downloadLink = document.createElement('a');\n    downloadLink.href = uri;\n    downloadLink.download = 'game.json';\n\n    const { body } = document;\n    if (!body) return;\n\n    body.appendChild(downloadLink);\n    downloadLink.click();\n    body.removeChild(downloadLink);\n  };\n\n  render() {\n    const { onDone } = this.props;\n\n    const actions = [\n      <FlatButton\n        key=\"download\"\n        label={<Trans>Download GDevelop desktop version</Trans>}\n        primary={false}\n        onClick={() => Window.openExternalURL('http://gdevelop-app.com')}\n      />,\n      <FlatButton\n        key=\"close\"\n        label={<Trans>Close</Trans>}\n        primary={false}\n        onClick={onDone}\n      />,\n    ];\n\n    return (\n      <Dialog actions={actions} open onRequestClose={onDone} maxWidth=\"sm\">\n        <Column noMargin>\n          <Line>\n            <Text>\n              <Trans>\n                You can download the file of your game to continue working on it\n                using the full GDevelop version:\n              </Trans>\n            </Text>\n          </Line>\n          <Line>\n            <Column expand>\n              <RaisedButton\n                label={<Trans>Download game file</Trans>}\n                fullWidth\n                primary\n                onClick={this._download}\n              />\n            </Column>\n          </Line>\n        </Column>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { type StorageProvider, type FileMetadata } from '../index';\nimport DownloadSaveAsDialog from './DownloadSaveAsDialog';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\n\n/**\n * \"Storage\" allowing to download a copy of the game.\n * Used for the web-app.\n */\nexport default ({\n  internalName: 'DownloadFile',\n  name: t`Download a copy`,\n  renderIcon: () => <SaveAlt />,\n  hiddenInOpenDialog: true,\n  createOperations: ({ setDialog, closeDialog }) => ({\n    onSaveProjectAs: (project: gdProject, fileMetadata: ?FileMetadata) => {\n      return new Promise(resolve => {\n        setDialog(() => (\n          <DownloadSaveAsDialog\n            onDone={() => {\n              closeDialog();\n              resolve({ wasSaved: false, fileMetadata });\n            }}\n            project={project}\n          />\n        ));\n      });\n    },\n  }),\n}: StorageProvider);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M12,14.56L16.35,18.16L18.2,16.95V18.3L12,22L5.82,18.3V16.95L7.68,18.16L12,14.56M7.68,2.5L12,6.09L16.32,2.5L22.5,6.5L18.23,9.94L22.5,13.36L16.32,17.39L12,13.78L7.68,17.39L1.5,13.36L5.77,9.94L1.5,6.5L7.68,2.5M12,13.68L18.13,9.94L12,6.19L5.87,9.94L12,13.68Z\" />\n  </SvgIcon>\n));\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { type StorageProvider, type FileMetadata } from '../index';\nimport Dropbox from '../../UI/CustomSvgIcons/Dropbox';\n\nlet apisLoaded = false;\nlet apisLoadingPromise = null;\n\n/**\n * Load Dropbox APIs. Return a fulfilled promise when done.\n */\nconst initializeApis = (): Promise<void> => {\n  if (apisLoaded) {\n    return Promise.resolve();\n  }\n\n  if (apisLoadingPromise) {\n    // Only do a single initialization attempt at a given time.\n    return apisLoadingPromise;\n  }\n\n  apisLoadingPromise = new Promise((resolve, reject) => {\n    reject(new Error('Unimplemented'));\n  })\n    .then(() => {\n      apisLoaded = true;\n      apisLoadingPromise = null;\n    })\n    .catch(error => {\n      console.error('Error while loading Dropbox APIs:', error);\n      apisLoadingPromise = null;\n\n      throw error;\n    });\n\n  return apisLoadingPromise;\n};\n\ntype DropboxUser = {};\n\n/**\n * Sign in the user to Dropbox, returning the user object after a successful sign up\n * (or if the user is already signed in).\n */\nexport const authenticate = (): Promise<DropboxUser> => {\n  return initializeApis().then(() => {\n    throw new Error('Unimplemented');\n  });\n};\n\n/**\n * A storage that is using Dropbox to open and store files.\n */\nexport default ({\n  internalName: 'Dropbox',\n  name: t`Dropbox (coming soon)`,\n  disabled: true,\n  renderIcon: () => <Dropbox />,\n  createOperations: ({ setDialog, closeDialog }) => {\n    initializeApis().catch(() => {});\n\n    return {\n      doesInitialOpenRequireUserInteraction: true,\n      onOpen: (\n        fileMetadata: FileMetadata\n      ): Promise<{|\n        content: Object,\n      |}> => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n      onOpenWithPicker: (): Promise<?FileMetadata> => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n      onSaveProject: (project: gdProject, fileMetadata: FileMetadata) => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n      onSaveProjectAs: (project: gdProject, fileMetadata: ?FileMetadata) => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n    };\n  },\n}: StorageProvider);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M20.08,13.64C21.17,13.81 22,14.75 22,15.89C22,16.78 21.5,17.55 20.75,17.92L20.58,18H9.18L9.16,18V18C7.71,18 6.54,16.81 6.54,15.36C6.54,13.9 7.72,12.72 9.18,12.72L9.4,12.73L9.39,12.53A3.3,3.3 0 0,1 12.69,9.23C13.97,9.23 15.08,9.96 15.63,11C16.08,10.73 16.62,10.55 17.21,10.55A2.88,2.88 0 0,1 20.09,13.43L20.08,13.64M8.82,12.16C7.21,12.34 5.96,13.7 5.96,15.36C5.96,16.04 6.17,16.66 6.5,17.18H4.73A2.73,2.73 0 0,1 2,14.45C2,13 3.12,11.83 4.53,11.73L4.46,11.06C4.46,9.36 5.84,8 7.54,8C8.17,8 8.77,8.18 9.26,8.5C9.95,7.11 11.4,6.15 13.07,6.15C15.27,6.15 17.08,7.83 17.3,9.97H17.21C16.73,9.97 16.27,10.07 15.84,10.25C15.12,9.25 13.96,8.64 12.69,8.64C10.67,8.64 9,10.19 8.82,12.16Z\" />\n  </SvgIcon>\n));\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { type StorageProvider, type FileMetadata } from '../index';\nimport OneDrive from '../../UI/CustomSvgIcons/OneDrive';\n\nlet apisLoaded = false;\nlet apisLoadingPromise = null;\n\n/**\n * Load OneDrive APIs. Return a fulfilled promise when done.\n */\nconst initializeApis = (): Promise<void> => {\n  if (apisLoaded) {\n    return Promise.resolve();\n  }\n\n  if (apisLoadingPromise) {\n    // Only do a single initialization attempt at a given time.\n    return apisLoadingPromise;\n  }\n\n  apisLoadingPromise = new Promise((resolve, reject) => {\n    reject(new Error('Unimplemented'));\n  })\n    .then(() => {\n      apisLoaded = true;\n      apisLoadingPromise = null;\n    })\n    .catch(error => {\n      console.error('Error while loading OneDrive APIs:', error);\n      apisLoadingPromise = null;\n\n      throw error;\n    });\n\n  return apisLoadingPromise;\n};\n\ntype OneDriveUser = {};\n\n/**\n * Sign in the user to OneDrive, returning the user object after a successful sign up\n * (or if the user is already signed in).\n */\nexport const authenticate = (): Promise<OneDriveUser> => {\n  return initializeApis().then(() => {\n    throw new Error('Unimplemented');\n  });\n};\n\n/**\n * A storage that is using OneDrive to open and store files.\n */\nexport default ({\n  internalName: 'OneDrive',\n  name: t`OneDrive (coming soon)`,\n  disabled: true,\n  renderIcon: () => <OneDrive />,\n  createOperations: ({ setDialog, closeDialog }) => {\n    initializeApis().catch(() => {});\n\n    return {\n      doesInitialOpenRequireUserInteraction: true,\n      onOpen: (\n        fileMetadata: FileMetadata\n      ): Promise<{|\n        content: Object,\n      |}> => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n      onOpenWithPicker: (): Promise<?FileMetadata> => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n      onSaveProject: (project: gdProject, fileMetadata: FileMetadata) => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n      onSaveProjectAs: (project: gdProject, fileMetadata: ?FileMetadata) => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n    };\n  },\n}: StorageProvider);\n","// @flow\nimport * as React from 'react';\nimport MainFrame from './MainFrame';\nimport Window from './Utils/Window';\nimport ExportDialog from './Export/ExportDialog';\nimport CreateProjectDialog from './ProjectCreation/CreateProjectDialog';\nimport Authentification from './Utils/GDevelopServices/Authentification';\nimport './UI/iconmoon-font.css'; // Styles for Iconmoon font.\n\n// Import for browser only IDE\nimport BrowserExamples from './ProjectCreation/BrowserExamples';\nimport BrowserStarters from './ProjectCreation/BrowserStarters';\nimport BrowserIntroDialog from './MainFrame/BrowserIntroDialog';\nimport browserResourceSources from './ResourcesList/BrowserResourceSources';\nimport browserResourceExternalEditors from './ResourcesList/BrowserResourceExternalEditors';\nimport BrowserS3PreviewLauncher from './Export/BrowserExporters/BrowserS3PreviewLauncher';\nimport { getBrowserExporters } from './Export/BrowserExporters';\nimport makeExtensionsLoader from './JsExtensionsLoader/BrowserJsExtensionsLoader';\nimport ObjectsEditorService from './ObjectEditor/ObjectsEditorService';\nimport ObjectsRenderingService from './ObjectsRendering/ObjectsRenderingService';\nimport { makeBrowserS3EventsFunctionCodeWriter } from './EventsFunctionsExtensionsLoader/CodeWriters/BrowserS3EventsFunctionCodeWriter';\nimport Providers from './MainFrame/Providers';\nimport ProjectStorageProviders from './ProjectsStorage/ProjectStorageProviders';\nimport InternalFileStorageProvider from './ProjectsStorage/InternalFileStorageProvider';\nimport GoogleDriveStorageProvider from './ProjectsStorage/GoogleDriveStorageProvider';\nimport DownloadFileStorageProvider from './ProjectsStorage/DownloadFileStorageProvider';\nimport DropboxStorageProvider from './ProjectsStorage/DropboxStorageProvider';\nimport OneDriveStorageProvider from './ProjectsStorage/OneDriveStorageProvider';\n\nexport const create = (authentification: Authentification) => {\n  Window.setUpContextMenu();\n\n  let app = null;\n  const appArguments = Window.getArguments();\n\n  app = (\n    <Providers\n      authentification={authentification}\n      disableCheckForUpdates={!!appArguments['disable-update-check']}\n      eventsFunctionCodeWriter={makeBrowserS3EventsFunctionCodeWriter()}\n      eventsFunctionsExtensionWriter={null}\n      eventsFunctionsExtensionOpener={null}\n    >\n      {({ i18n, eventsFunctionsExtensionsState }) => (\n        <ProjectStorageProviders\n          appArguments={appArguments}\n          storageProviders={[\n            InternalFileStorageProvider,\n            GoogleDriveStorageProvider,\n            DropboxStorageProvider,\n            OneDriveStorageProvider,\n            DownloadFileStorageProvider,\n          ]}\n          defaultStorageProvider={InternalFileStorageProvider}\n        >\n          {({\n            currentStorageProviderOperations,\n            useStorageProvider,\n            storageProviders,\n            initialFileMetadataToOpen,\n          }) => (\n            <MainFrame\n              i18n={i18n}\n              eventsFunctionsExtensionsState={eventsFunctionsExtensionsState}\n              renderPreviewLauncher={(props, ref) => (\n                <BrowserS3PreviewLauncher {...props} ref={ref} />\n              )}\n              renderExportDialog={props => (\n                <ExportDialog\n                  {...props}\n                  exporters={getBrowserExporters()}\n                  allExportersRequireOnline\n                />\n              )}\n              renderCreateDialog={props => (\n                <CreateProjectDialog\n                  {...props}\n                  examplesComponent={BrowserExamples}\n                  startersComponent={BrowserStarters}\n                />\n              )}\n              introDialog={<BrowserIntroDialog />}\n              storageProviders={storageProviders}\n              useStorageProvider={useStorageProvider}\n              storageProviderOperations={currentStorageProviderOperations}\n              resourceSources={browserResourceSources}\n              resourceExternalEditors={browserResourceExternalEditors}\n              extensionsLoader={makeExtensionsLoader({\n                objectsEditorService: ObjectsEditorService,\n                objectsRenderingService: ObjectsRenderingService,\n                filterExamples: !Window.isDev(),\n              })}\n              initialFileMetadataToOpen={initialFileMetadataToOpen}\n            />\n          )}\n        </ProjectStorageProviders>\n      )}\n    </Providers>\n  );\n\n  return app;\n};\n","// @flow\n\n/**\n * Load a script from the specified source. The returned promise\n * resolves when the script is loaded.\n * @param source The script source\n */\nexport const loadScript = (source: string): Promise<void> => {\n  return new Promise((resolve, reject) => {\n    if (typeof document === 'undefined') {\n      reject(\n        new Error('loadScript is only supported in a browser environment.')\n      );\n      return;\n    }\n\n    const { body } = document;\n    if (!body) {\n      reject(\n        new Error('loadScript is only supported in a browser environment.')\n      );\n      return;\n    }\n\n    const scriptElement = document.createElement('script');\n    scriptElement.type = 'text/javascript';\n    scriptElement.src = source;\n    scriptElement.onload = () => resolve();\n    scriptElement.onerror = error => reject(error);\n    scriptElement.onabort = error => reject(error);\n\n    body.appendChild(scriptElement);\n  });\n};\n"],"sourceRoot":""}