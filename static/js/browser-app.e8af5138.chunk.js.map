{"version":3,"sources":["GameEngineFinder/BrowserS3GDJSFinder.js","ProjectCreation/BrowserStarters.js","ResourcesList/BrowserResourceSources.js","Export/BrowserExporters/BrowserS3PreviewLauncher/index.js","Export/BrowserExporters/BrowserS3PreviewLauncher/BrowserPreviewLinkDialog.js","Export/BrowserExporters/BrowserS3PreviewLauncher/BrowserPreviewErrorDialog.js","Export/BrowserExporters/BrowserS3FileSystem.js","Export/BrowserExporters/BrowserOnlineCordovaExport.js","Utils/Zip.js/index.js","Export/BrowserExporters/BrowserOnlineElectronExport.js","Export/BrowserExporters/BrowserOnlineWebExport.js","Export/BrowserExporters/BrowserHTML5Export.js","Export/BrowserExporters/BrowserCordovaExport.js","Export/BrowserExporters/BrowserFileSystem.js","Export/BrowserExporters/BrowserElectronExport.js","Export/BrowserExporters/BrowserCocos2dExport.js","Export/BrowserExporters/BrowserFacebookInstantGamesExport.js","JsExtensionsLoader/BrowserJsExtensionsLoader.js","Utils/BrowserArchiver.js","ProjectsStorage/GoogleDriveStorageProvider/index.js","UI/CustomSvgIcons/GoogleDrive.js","ProjectsStorage/GoogleDriveStorageProvider/GoogleDriveFileOrFolderPicker.js","ProjectsStorage/GoogleDriveStorageProvider/GoogleDriveSaveAsDialog.js","Export/BrowserExporters/index.js","Utils/BlobDownloadUrlHolder.js","Utils/GDevelopServices/Preview.js","Export/BrowserExporters/BrowserFileUploader.js","ProjectsStorage/InternalFileStorageProvider/InternalExampleFiles.js","ProjectsStorage/InternalFileStorageProvider/index.js","ProjectCreation/BrowserExamples.js","MainFrame/BrowserIntroDialog.js","ResourcesList/BrowserResourceExternalEditors.js","EventsFunctionsExtensionsLoader/CodeWriters/BrowserS3EventsFunctionCodeWriter.js","ProjectsStorage/DownloadFileStorageProvider/DownloadSaveAsDialog.js","ProjectsStorage/DownloadFileStorageProvider/index.js","UI/CustomSvgIcons/Dropbox.js","ProjectsStorage/DropboxStorageProvider/index.js","UI/CustomSvgIcons/OneDrive.js","ProjectsStorage/OneDriveStorageProvider/index.js","BrowserApp.js","Utils/LoadScript.js"],"names":["filesToDownload","preview","web","cordova","electron","findGDJS","fileSet","gdjsRoot","getIDEVersion","Promise","all","map","relativeFilePath","url","fetch","then","response","ok","console","error","Error","status","text","filePath","filesContent","gd","global","BrowserStarters","Component","render","noMargin","expand","leftIcon","iconSize","src","primaryText","secondaryText","secondaryTextLines","onClick","sendNewGameCreated","this","props","onOpen","InternalFileStorageProvider","fileIdentifier","project","ProjectHelper","createNewGDJSProject","onCreate","alignItems","justifyContent","label","onShowExamples","styles","explanations","textAlign","margin","publicImageUrls","publicAudioUrls","publicFontUrls","publicVideoUrls","publicJsonUrls","nameFromUrl","urlParts","split","length","replace","GenericResourcesChooser","constructor","super","state","open","resolveWithResources","chooseResources","multiSelections","resolve","setState","_onChoose","chosenResourceUrl","newResource","createNewResource","setFile","setName","_onClose","listItems","urls","key","urlsAreImages","undefined","_onOpenWebsite","Window","openExternalURL","actions","primary","title","cannotBeDismissed","style","name","displayName","kind","component","React","_chooser","AudioResource","ref","chooser","ImageResource","FontResource","VideoResource","JsonResource","BrowserS3PreviewLauncher","canDoNetworkPreview","showPreviewLinkDialog","_openPreviewWindow","windowObjectReference","window","_prepareExporter","info","prefix","makeTimestampedId","outputDir","getBaseUrl","browserS3FileSystem","BrowserS3FileSystem","bucketBaseUrl","fileSystem","assignIn","AbstractFileSystemJS","exporter","Exporter","setCodeOutputDirectory","launchLayoutPreview","layout","options","exportLayoutForPixiPreview","delete","uploadPendingObjects","finalUrl","catch","launchExternalLayoutPreview","externalLayout","exportExternalLayoutForPixiPreview","onClose","BrowserPreviewLinkDialog","_makeOnOpen","i18n","showErrorBox","_","BrowserPreviewErrorDialog","onRequestClose","code","message","isURL","filename","substr","_pendingUploadObjects","_allCopiedExternalUrls","Set","uploadObject","result","log","mkDir","path","dirExists","clearDir","getTempDir","fileNameFrom","fullpath","basename","dirNameFrom","dirname","makeAbsolute","baseDirectory","isAbsolute","normalize","makeRelative","relative","charAt","copyFile","source","dest","add","warn","writeToFile","fullPath","contents","fileExtension","extname","push","Key","Body","ContentType","readFile","file","_indexedFilesContent","readDir","ext","toUpperCase","output","VectorString","forEach","upperCaseUrl","indexOf","push_back","fileExists","textFileDescriptor","browserOnlineCordovaExportPipeline","onlineBuildType","getInitialExportState","canLaunchBuild","renderHeader","renderLaunchButtonLabel","prepareExporter","context","abstractFileSystem","BrowserFileSystem","textFiles","launchExport","exportOptions","MapStringBoolean","set","exportWholePixiProject","getAllTextFilesIn","urlFiles","getAllUrlFilesIn","launchResourcesDownload","downloadUrlsToBlobs","onProgress","updateStepProgress","blobFiles","launchCompression","archiveFiles","basePath","launchUpload","blobFile","getBuildFileUploadOptions","uploadOptions","uploadBlobFile","launchOnlineBuild","exportState","userProfile","uploadBucketKey","getAuthorizationHeader","profile","buildCordovaAndroid","uid","reject","zipJsLoaded","zipJsLoadingPromise","initializeZipJs","zip","loadScript","PUBLIC_URL","workerScripts","deflater","inflater","browserOnlineElectronExportPipeline","targets","buildElectron","browserOnlineWebExportPipeline","buildWeb","browserHTML5ExportPipeline","renderDoneFooter","compressionOutput","renderGameButton","blob","blobDownloadUrl","fullWidth","body","document","a","createElement","appendChild","display","href","download","click","removeChild","openBlobDownloadUrl","browserCordovaExportPipeline","_textFiles","_filesToDownload","pathPrefix","Object","keys","filter","filePathOrURL","baseDirectoryOrURL","substring","content","upperCaseFilePath","normalizedFilePath","browserElectronExportPipeline","browserCocos2dExportPipeline","debugMode","updateExportState","onToggle","e","check","prevState","toggled","labelPosition","exportWholeCocos2dProject","browserFacebookInstantGamesExportPipeline","jsExtensions","extensionModule","require","objectsRenderingServiceModules","makeExtensionsLoader","objectsEditorService","objectsRenderingService","filterExamples","loadAllExtensions","includes","registerEditorConfigurations","requirePath","registerModule","registerInstanceRenderers","extensionModulePath","loadExtension","JsPlatform","get","eachCallback","array","callback","done","index","callNextCallback","count","downloadedBlobs","zipJs","zippedFilesCount","totalFilesCount","createWriter","BlobWriter","zipWriter","BlobReader","TextReader","close","DEVELOPER_KEY","DISCOVERY_DOCS","SCOPE","apisLoaded","apisLoadingPromise","initializeApis","gapi","load","auth2LoadPromise","auth2","init","apiKey","clientId","discoveryDocs","scope","client","setApiKey","driveLoadPromise","onerror","isAuthenticated","authenticate","googleAuth","getAuthInstance","isSignedIn","currentUser","listen","authenticated","signIn","googleUser","getAuthResponse","patchJsonFile","fileId","method","headers","Headers","Authorization","access_token","res","showFilePicker","selectFolderEnabled","showUploadView","google","picker","pickerBuilder","PickerBuilder","addView","DocsView","setIncludeFolders","setSelectFolderEnabled","setOAuthToken","setDeveloperKey","setAppId","setCallback","data","Response","ACTION","Action","PICKED","doc","DOCUMENTS","id","Document","ID","NAME","parentId","PARENT_ID","TYPE","Type","LOCATION","MIME_TYPE","type","dispose","CANCEL","DocsUploadView","build","setVisible","pickerElements","getElementsByClassName","i","zIndex","internalName","renderIcon","getFileMetadataFromAppArguments","appArguments","googleDriveState","JSON","parse","ids","createOperations","setDialog","closeDialog","doesInitialOpenRequireUserInteraction","fileMetadata","fileContent","ex","onOpenWithPicker","googleDriveFileOrFolder","onSaveProject","serializeToJSON","wasSaved","onSaveProjectAs","onShowFilePicker","onCancel","onSave","selectedFileOrFolder","newFileName","createNewJsonFile","drive","files","create","uploadType","parents","mimeType","fields","apiResponse","newFileId","getOpenErrorMessage","memo","d","container","position","width","button","marginLeft","textField","flex","TextField","floatingLabelText","floatingLabelFixed","hintText","value","onChange","RaisedButton","onOpenPicker","setSelectedFileOrFolder","setNewFileName","saving","setSaving","saveError","setSaveError","pickerError","setPickerError","dialogHidden","hideDialog","canCancel","Dialog","FlatButton","disabled","LeftLoader","isLoading","canSave","maxWidth","GoogleDriveFileOrFolderPicker","event","AlertMessage","getBrowserExporters","helpPage","description","exportPipeline","advanced","experimental","BlobDownloadUrlHolder","children","setBlobDownloadUrl","URL","revokeObjectURL","createObjectURL","params","getSignedUrl","contentType","signedUrl","axios","put","GDevelopGamePreviews","baseUrl","maxContentLength","Infinity","onUploadProgress","progressEvent","total","loaded","hiddenInOpenDialog","hiddenInSaveDialog","POSITIONAL_ARGUMENTS_KEY","internalExampleFiles","exampleNames","ExamplesInformation","BrowserExamples","Text","ExamplesList","onCreateFromExample","exampleName","BetaIntroDialog","ResponsiveWindowMeasurer","windowWidth","isFullscreen","Fragment","requestFullscreen","setTimeout","forceUpdate","icon","editors","edit","sendExternalEditorOpened","showMessageBox","makeBrowserS3EventsFunctionCodeWriter","getPathFor","codeNamespace","slugs","getIncludeFileFor","writeFunctionCode","functionCodeNamespace","writeBehaviorCode","behaviorCodeNamespace","DownloadSaveAsDialog","_download","stringify","serializeToJSObject","err","uri","encodeURI","downloadLink","onDone","SvgIcon","Dropbox","OneDrive","authentification","setUpContextMenu","app","getArguments","Providers","disableCheckForUpdates","eventsFunctionCodeWriter","eventsFunctionsExtensionWriter","eventsFunctionsExtensionOpener","eventsFunctionsExtensionsState","ProjectStorageProviders","storageProviders","GoogleDriveStorageProvider","DropboxStorageProvider","OneDriveStorageProvider","DownloadFileStorageProvider","defaultStorageProvider","currentStorageProviderOperations","useStorageProvider","initialFileMetadataToOpen","UnsavedChangesContext","Consumer","unsavedChanges","MainFrame","renderPreviewLauncher","renderExportDialog","ExportDialog","exporters","allExportersRequireOnline","renderCreateDialog","CreateProjectDialog","examplesComponent","startersComponent","introDialog","storageProviderOperations","resourceSources","browserResourceSources","resourceExternalEditors","browserResourceExternalEditors","extensionsLoader","ObjectsEditorService","ObjectsRenderingService","isDev","scriptElement","onload","onabort"],"mappings":"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","file":"static/js/browser-app.e8af5138.chunk.js","sourcesContent":["// @flow\nimport { getIDEVersion } from '../Version';\n\ntype FileSet =\n  | 'preview'\n  | 'cordova'\n  | 'electron'\n  | 'web'\n  | 'cocos2d-js'\n  | 'facebook-instant-games';\n\nconst filesToDownload: { [FileSet]: Array<string> } = {\n  preview: ['/Runtime/index.html'],\n  web: ['/Runtime/index.html'],\n  'cocos2d-js': [\n    '/Runtime/Cocos2d/cocos2d-js-v3.10.js',\n    '/Runtime/Cocos2d/index.html',\n    '/Runtime/Cocos2d/main.js',\n    '/Runtime/Cocos2d/project.json',\n  ],\n  'facebook-instant-games': [\n    '/Runtime/FacebookInstantGames/fbapp-config.json',\n    '/Runtime/FacebookInstantGames/index.html',\n  ],\n  cordova: [\n    '/Runtime/Cordova/www/index.html',\n    '/Runtime/Cordova/config.xml',\n    '/Runtime/Cordova/package.json',\n  ],\n  electron: [\n    '/Runtime/index.html',\n    '/Runtime/Electron/main.js',\n    '/Runtime/Electron/package.json',\n  ],\n};\n\nexport type TextFileDescriptor = {| text: string, filePath: string |};\n\nexport const findGDJS = (\n  fileSet: FileSet\n): Promise<{|\n  gdjsRoot: string,\n  filesContent: Array<TextFileDescriptor>,\n|}> => {\n  // Get GDJS for this version. If you updated the version,\n  // run `newIDE/web0app/scripts/deploy-GDJS-Runtime` script.\n  const gdjsRoot = `https://resources.gdevelop-app.com/GDJS-${getIDEVersion()}`;\n\n  return Promise.all(\n    filesToDownload[fileSet].map(relativeFilePath => {\n      const url = gdjsRoot + relativeFilePath;\n\n      // Don't do any caching, rely on the browser cache only.\n      return fetch(url).then(response => {\n        if (!response.ok) {\n          console.error(`Error while downloading \"${url}\"`, response);\n          throw new Error(\n            `Error while downloading \"${url}\" (status: ${response.status})`\n          );\n        }\n        return response.text().then(text => ({\n          filePath: url,\n          text,\n        }));\n      });\n    })\n  ).then(filesContent => {\n    return {\n      gdjsRoot,\n      filesContent,\n    };\n  });\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport { List, ListItem } from '../UI/List';\nimport RaisedButton from '../UI/RaisedButton';\nimport { sendNewGameCreated } from '../Utils/Analytics/EventSender';\nimport { Column, Line } from '../UI/Grid';\nimport ListIcon from '../UI/ListIcon';\nimport Text from '../UI/Text';\nimport { type StorageProvider, type FileMetadata } from '../ProjectsStorage';\nimport InternalFileStorageProvider from '../ProjectsStorage/InternalFileStorageProvider';\nconst gd = global.gd;\n\ntype Props = {|\n  onOpen: (\n    storageProvider: StorageProvider,\n    fileMetadata: FileMetadata\n  ) => void,\n  onCreate: (\n    gdProject,\n    storageProvider: ?StorageProvider,\n    fileMetadata: ?FileMetadata\n  ) => void,\n  onShowExamples: () => void,\n|};\n\nexport default class BrowserStarters extends Component<Props> {\n  render() {\n    return (\n      <Column noMargin>\n        <Line>\n          <Column>\n            <Text>\n              <Trans>Choose a game to use as a starter:</Trans>\n            </Text>\n          </Column>\n        </Line>\n        <Line>\n          <Column expand noMargin>\n            <List>\n              <ListItem\n                leftIcon={\n                  <ListIcon\n                    iconSize={40}\n                    src=\"res/starters_icons/platformer.png\"\n                  />\n                }\n                primaryText={<Trans>Platformer</Trans>}\n                secondaryText={\n                  <Trans>\n                    A simple platform game, with coins to collect, moving\n                    platforms and enemies.\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('platformer');\n                  this.props.onOpen(InternalFileStorageProvider, {\n                    fileIdentifier: 'example://platformer',\n                  });\n                }}\n              />\n              <ListItem\n                leftIcon={\n                  <ListIcon\n                    iconSize={40}\n                    src=\"res/starters_icons/space-shooter.png\"\n                  />\n                }\n                primaryText={<Trans>8-bit Space Shooter</Trans>}\n                secondaryText={\n                  <Trans>\n                    A beautiful, retro side-scrolling shooter where you must\n                    defeat incoming enemies with your mecha transforming\n                    spaceship. Huge boss included!\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('space-shooter');\n                  this.props.onOpen(InternalFileStorageProvider, {\n                    fileIdentifier: 'example://space-shooter',\n                  });\n                }}\n              />\n              <ListItem\n                leftIcon={\n                  <ListIcon\n                    iconSize={40}\n                    src=\"res/starters_icons/geometry-monster.png\"\n                  />\n                }\n                primaryText={<Trans>Geometry Monster</Trans>}\n                secondaryText={\n                  <Trans>\n                    A hyper casual endless game where you have to collect shapes\n                    and avoid bombs, with a progressively increasing difficulty.\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('geometry-monster');\n                  this.props.onOpen(InternalFileStorageProvider, {\n                    fileIdentifier: 'example://geometry-monster',\n                  });\n                }}\n              />\n              <ListItem\n                leftIcon={\n                  <ListIcon\n                    iconSize={40}\n                    src=\"res/starters_icons/isometric-game.png\"\n                  />\n                }\n                primaryText={<Trans>Isometric game</Trans>}\n                secondaryText={\n                  <Trans>\n                    An example of an isometric game where you can explore a map\n                    with your character.\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('isometric-game');\n                  this.props.onOpen(InternalFileStorageProvider, {\n                    fileIdentifier: 'example://isometric-game',\n                  });\n                }}\n              />\n              <ListItem\n                leftIcon={\n                  <ListIcon\n                    iconSize={40}\n                    src=\"res/starters_icons/downhill-bike-physics-demo.png\"\n                  />\n                }\n                primaryText=\"Downhill Bike Racing\"\n                secondaryText={\n                  <Trans>\n                    An example of a 2D physics based game, where players have to\n                    reach the end as fast as possible.\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('downhill-bike-physics-demo');\n                  this.props.onOpen(InternalFileStorageProvider, {\n                    fileIdentifier: 'example://downhill-bike-physics-demo',\n                  });\n                }}\n              />\n              <ListItem\n                leftIcon={\n                  <ListIcon iconSize={40} src=\"res/starters_icons/pairs.png\" />\n                }\n                primaryText=\"Pairs\"\n                secondaryText={\n                  <Trans>\n                    Find all matching pairs of cards in this relaxing game. Use\n                    tweens to create smooth, natural animations with a few\n                    events.\n                  </Trans>\n                }\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('pairs');\n                  this.props.onOpen(InternalFileStorageProvider, {\n                    fileIdentifier: 'example://pairs',\n                  });\n                }}\n              />\n              <ListItem\n                primaryText={<Trans>Empty game</Trans>}\n                secondaryText={<Trans>Start a new game from scratch.</Trans>}\n                secondaryTextLines={2}\n                onClick={() => {\n                  sendNewGameCreated('');\n\n                  const project = gd.ProjectHelper.createNewGDJSProject();\n                  this.props.onCreate(project, null, null);\n                }}\n              />\n            </List>\n            <Line alignItems=\"center\" justifyContent=\"center\">\n              <RaisedButton\n                label={<Trans>See examples</Trans>}\n                onClick={() => this.props.onShowExamples()}\n              />\n            </Line>\n          </Column>\n        </Line>\n      </Column>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport FlatButton from '../UI/FlatButton';\nimport Dialog from '../UI/Dialog';\nimport ListIcon from '../UI/ListIcon';\nimport { List, ListItem } from '../UI/List';\nimport Text from '../UI/Text';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Line } from '../UI/Grid';\nimport Window from '../Utils/Window';\nconst gd = global.gd;\n\nconst styles = {\n  explanations: {\n    textAlign: 'center',\n    margin: 20,\n  },\n};\n\nconst publicImageUrls = [\n  // Platformer images (see platformer.json in fixtures)\n  'https://resources.gdevelop-app.com/examples/platformer/p1_stand.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_jump.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk01.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk02.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk03.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk04.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk05.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk06.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk07.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk08.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk09.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk10.png',\n  'https://resources.gdevelop-app.com/examples/platformer/p1_walk11.png',\n  'https://resources.gdevelop-app.com/examples/platformer/brickWall.png',\n  'https://resources.gdevelop-app.com/examples/platformer/bridge.png',\n  'https://resources.gdevelop-app.com/examples/platformer/grassHalfMid.png',\n  'https://resources.gdevelop-app.com/examples/platformer/castleCenter.png',\n  'https://resources.gdevelop-app.com/examples/platformer/bridgeLogs.png',\n  'https://resources.gdevelop-app.com/examples/platformer/Left.png',\n  'https://resources.gdevelop-app.com/examples/platformer/Right.png',\n  'https://resources.gdevelop-app.com/examples/platformer/ladder_mid.png',\n  'https://resources.gdevelop-app.com/examples/platformer/Grass.png',\n  'https://resources.gdevelop-app.com/examples/platformer/PlayerArea.png',\n  'https://resources.gdevelop-app.com/examples/platformer/slimeWalk1.png',\n  'https://resources.gdevelop-app.com/examples/platformer/slimeWalk2.png',\n  'https://resources.gdevelop-app.com/examples/platformer/slimeDead.png',\n  'https://resources.gdevelop-app.com/examples/platformer/flyFly1.png',\n  'https://resources.gdevelop-app.com/examples/platformer/flyFly2.png',\n  'https://resources.gdevelop-app.com/examples/platformer/flyDead.png',\n  'https://resources.gdevelop-app.com/examples/platformer/cloud1.png',\n  'https://resources.gdevelop-app.com/examples/platformer/cloud2.png',\n  'https://resources.gdevelop-app.com/examples/platformer/cloud3.png',\n  'https://resources.gdevelop-app.com/examples/platformer/bush.png',\n  'https://resources.gdevelop-app.com/examples/platformer/cactus.png',\n  'https://resources.gdevelop-app.com/examples/platformer/plant.png',\n  'https://resources.gdevelop-app.com/examples/platformer/coinGold.png',\n  'https://resources.gdevelop-app.com/examples/platformer/shadedDark06.png',\n  'https://resources.gdevelop-app.com/examples/platformer/shadedDark05.png',\n  'https://resources.gdevelop-app.com/examples/platformer/shadedDark45.png',\n  'https://resources.gdevelop-app.com/examples/platformer/shadedDark09.png',\n\n  // Subset of space shooter images (see space-shooter.json in fixtures)\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/idle1.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/idle2.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/up1.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/up2.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/down1.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/down2.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/background/space bg.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/background/corridor.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/asteroid/asteroid1.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/asteroid/asteroid2.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/asteroid/asteroid3.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy200.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy201.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy202.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy203.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy204.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy205.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy206.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy207.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy208.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy209.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy210.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy2/enemy211.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/player Ship/bullet.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/powerUp/powerUp00.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/powerUp/powerUp01.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/powerUp/powerUp02.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/powerUp/powerUp03.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/powerUp/powerUp04.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/explosion/explosion00.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/explosion/explosion01.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/explosion/explosion02.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/explosion/explosion03.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/explosion/explosion04.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/explosion/explosion05.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy3/enemy3.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy bullet/enemyBullet00.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy bullet/enemyBullet01.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/enemy bullet/enemyBullet02.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/tiles mechanical/tiles mechanical 1.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/tiles mechanical/tiles mechanical 2.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/background/boss background.png',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/gameover.png',\n];\n\nconst publicAudioUrls = [\n  // Platformer audio (see platformer.json in fixtures)\n  'https://resources.gdevelop-app.com/examples/platformer/jump.wav',\n  'https://resources.gdevelop-app.com/examples/platformer/coin.wav',\n\n  // Space shooter audio (see space-shooter.json in fixtures)\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/audio/sfx_shieldDown.ogg',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/audio/sfx_twoTone.ogg',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/audio/sfx_laser1.ogg',\n  'https://resources.gdevelop-app.com/examples/space-shooter/assets/audio/Heal.wav',\n];\n\nconst publicFontUrls = [\n  // Platformer fonts (see platformer.json in fixtures)\n  'https://resources.gdevelop-app.com/examples/platformer/Bimbo_JVE.ttf',\n];\n\nconst publicVideoUrls = [\n  // Video Player example video\n  'https://resources.gdevelop-app.com/examples/video-player/The-Daily-Dweebs-By-Blender-Foundation-Short.mp4',\n];\n\nconst publicJsonUrls = [\n  // Yarn example - todo Upload elsewhere?\n  'https://raw.githubusercontent.com/jhayley/bondage.js/master/tests/yarn_files/assignment.json',\n];\n\nconst nameFromUrl = (url: string): string => {\n  const urlParts = url.split('/');\n  return urlParts[urlParts.length - 1]\n    .replace('.png', '')\n    .replace('.wav', '')\n    .replace('.ogg', '')\n    .replace('.json', '')\n    .replace('.mp4', '');\n};\n\nclass GenericResourcesChooser extends Component {\n  state = {\n    open: false,\n    resolveWithResources: null,\n  };\n\n  constructor(props) {\n    super(props);\n\n    // Cache rendered public images list to avoid doing this each time\n    // a rendering is done.\n    this.listItems = props.urls.map((url: string) => {\n      return (\n        <ListItem\n          key={url}\n          primaryText={nameFromUrl(url)}\n          leftIcon={\n            props.urlsAreImages ? (\n              <ListIcon iconSize={40} src={url} />\n            ) : (\n              undefined\n            )\n          }\n          onClick={() => this._onChoose(url)}\n        />\n      );\n    });\n  }\n\n  chooseResources = (project, multiSelections = true): Promise<Array<any>> => {\n    return new Promise(resolve => {\n      this.setState({\n        open: true,\n        resolveWithResources: resolve,\n      });\n    });\n  };\n\n  _onChoose = (chosenResourceUrl: string) => {\n    const { resolveWithResources } = this.state;\n    if (!resolveWithResources) return;\n\n    const newResource = this.props.createNewResource();\n    newResource.setFile(chosenResourceUrl);\n    newResource.setName(chosenResourceUrl);\n\n    resolveWithResources([newResource]);\n    this.setState({\n      open: false,\n      resolveWithResources: null,\n    });\n  };\n\n  _onClose = () => {\n    const { resolveWithResources } = this.state;\n    if (!resolveWithResources) return;\n\n    resolveWithResources([]);\n    this.setState({\n      open: false,\n      resolveWithResources: null,\n    });\n  };\n\n  _onOpenWebsite() {\n    Window.openExternalURL('http://gdevelop-app.com');\n  }\n\n  render() {\n    // Avoid rendering the dialog if it's not opened.\n    if (!this.state.open) return null;\n\n    const actions = [\n      <FlatButton\n        key=\"close\"\n        label={<Trans>Close</Trans>}\n        primary={false}\n        onClick={this._onClose}\n      />,\n    ];\n\n    return (\n      <Dialog\n        title={this.props.title}\n        actions={actions}\n        cannotBeDismissed={false}\n        open={this.state.open}\n        noMargin\n      >\n        <div style={styles.explanations}>\n          <Text>\n            <Trans>\n              You can choose a resource from the library below. Adding resources\n              from Dropbox, Google Drive... is coming soon! Download GDevelop\n              for desktop to use your own assets.\n            </Trans>\n          </Text>\n          <Line justifyContent=\"center\">\n            <RaisedButton\n              primary\n              label={<Trans>Download GDevelop desktop app</Trans>}\n              onClick={this._onOpenWebsite}\n            />\n          </Line>\n        </div>\n        <List>{this.listItems}</List>\n      </Dialog>\n    );\n  }\n}\n\nexport default [\n  {\n    name: 'publicAudioUrlChooser',\n    displayName: 'Choose an audio file from library',\n    kind: 'audio',\n    component: class AudioResourceChooser extends React.Component {\n      chooseResources = () => {\n        if (this._chooser) return this._chooser.chooseResources();\n      };\n      render() {\n        return (\n          <GenericResourcesChooser\n            {...this.props}\n            urls={publicAudioUrls}\n            urlsAreImages={false}\n            createNewResource={() => new gd.AudioResource()}\n            title={<Trans>Choose an audio file from the library</Trans>}\n            ref={chooser => (this._chooser = chooser)}\n          />\n        );\n      }\n    },\n  },\n  {\n    name: 'publicImageUrlChooser',\n    displayName: 'Choose an image from library',\n    kind: 'image',\n    component: class ImageResourceChooser extends React.Component {\n      chooseResources = () => {\n        if (this._chooser) return this._chooser.chooseResources();\n      };\n      render() {\n        return (\n          <GenericResourcesChooser\n            {...this.props}\n            urls={publicImageUrls}\n            urlsAreImages\n            createNewResource={() => new gd.ImageResource()}\n            title={<Trans>Choose an image from the library</Trans>}\n            ref={chooser => (this._chooser = chooser)}\n          />\n        );\n      }\n    },\n  },\n  {\n    name: 'publicFontUrlChooser',\n    displayName: 'Choose a font from library',\n    kind: 'font',\n    component: class FontResourceChooser extends React.Component {\n      chooseResources = () => {\n        if (this._chooser) return this._chooser.chooseResources();\n      };\n      render() {\n        return (\n          <GenericResourcesChooser\n            {...this.props}\n            urls={publicFontUrls}\n            urlsAreImages={false}\n            createNewResource={() => new gd.FontResource()}\n            title={<Trans>Choose a font from the library</Trans>}\n            ref={chooser => (this._chooser = chooser)}\n          />\n        );\n      }\n    },\n  },\n  {\n    name: 'publicVideoUrlChooser',\n    displayName: 'Choose a video from library',\n    kind: 'video',\n    component: class VideoResourceChooser extends React.Component {\n      chooseResources = () => {\n        if (this._chooser) return this._chooser.chooseResources();\n      };\n      render() {\n        return (\n          <GenericResourcesChooser\n            {...this.props}\n            urls={publicVideoUrls}\n            urlsAreImages={false}\n            createNewResource={() => new gd.VideoResource()}\n            title={<Trans>Choose a video from the library</Trans>}\n            ref={chooser => (this._chooser = chooser)}\n          />\n        );\n      }\n    },\n  },\n  {\n    name: 'publicJsonUrlChooser',\n    displayName: 'Choose a json file from library',\n    kind: 'json',\n    component: class JsonResourceChooser extends React.Component {\n      chooseResources = () => {\n        if (this._chooser) return this._chooser.chooseResources();\n      };\n      render() {\n        return (\n          <GenericResourcesChooser\n            {...this.props}\n            urls={publicJsonUrls}\n            urlsAreImages={false}\n            createNewResource={() => new gd.JsonResource()}\n            title={<Trans>Choose a Json File from the library</Trans>}\n            ref={chooser => (this._chooser = chooser)}\n          />\n        );\n      }\n    },\n  },\n];\n","// @flow\nimport * as React from 'react';\nimport BrowserPreviewLinkDialog from './BrowserPreviewLinkDialog';\nimport BrowserPreviewErrorDialog from './BrowserPreviewErrorDialog';\nimport BrowserS3FileSystem from '../BrowserS3FileSystem';\nimport { findGDJS } from '../../../GameEngineFinder/BrowserS3GDJSFinder';\nimport assignIn from 'lodash/assignIn';\nimport { type PreviewOptions } from '../../PreviewLauncher.flow';\nimport { getBaseUrl } from '../../../Utils/GDevelopServices/Preview';\nimport { makeTimestampedId } from '../../../Utils/TimestampedId';\nconst gd = global.gd;\n\ntype State = {|\n  showPreviewLinkDialog: boolean,\n  url: ?string,\n  error: ?Error,\n|};\n\ntype Props = {|\n  onExport?: () => void,\n  onChangeSubscription?: () => void,\n|};\n\nexport default class BrowserS3PreviewLauncher extends React.Component<\n  Props,\n  State\n> {\n  canDoNetworkPreview = () => false;\n\n  state = {\n    showPreviewLinkDialog: false,\n    url: null,\n    error: null,\n  };\n\n  _openPreviewWindow = (project: gdProject, url: string): any => {\n    const windowObjectReference = window.open(url, `_blank`);\n    return {\n      url,\n      windowObjectReference,\n    };\n  };\n\n  _prepareExporter = (): Promise<any> => {\n    return findGDJS('preview').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const prefix = makeTimestampedId();\n\n      const outputDir = getBaseUrl() + prefix;\n      const browserS3FileSystem = new BrowserS3FileSystem({\n        filesContent,\n        bucketBaseUrl: getBaseUrl(),\n        prefix,\n      });\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        browserS3FileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n      exporter.setCodeOutputDirectory(getBaseUrl() + prefix);\n\n      return {\n        exporter,\n        outputDir,\n        browserS3FileSystem,\n      };\n    });\n  };\n\n  launchLayoutPreview = (\n    project: gdProject,\n    layout: gdLayout,\n    options: PreviewOptions\n  ): Promise<any> => {\n    this.setState({\n      error: null,\n    });\n\n    return this._prepareExporter()\n      .then(({ exporter, outputDir, browserS3FileSystem }) => {\n        exporter.exportLayoutForPixiPreview(project, layout, outputDir);\n        exporter.delete();\n        return browserS3FileSystem\n          .uploadPendingObjects()\n          .then(() => {\n            const finalUrl = outputDir + '/index.html';\n            return this._openPreviewWindow(project, finalUrl);\n          })\n          .then(({ url, windowObjectReference }) => {\n            if (!windowObjectReference) {\n              this.setState({\n                showPreviewLinkDialog: true,\n                url,\n              });\n            }\n          });\n      })\n      .catch((error: Error) => {\n        this.setState({\n          error,\n        });\n      });\n  };\n\n  launchExternalLayoutPreview = (\n    project: gdProject,\n    layout: gdLayout,\n    externalLayout: gdExternalLayout,\n    options: PreviewOptions\n  ): Promise<any> => {\n    this.setState({\n      error: null,\n    });\n\n    return this._prepareExporter()\n      .then(({ exporter, outputDir, browserS3FileSystem }) => {\n        exporter.exportExternalLayoutForPixiPreview(\n          project,\n          layout,\n          externalLayout,\n          outputDir\n        );\n        exporter.delete();\n        return browserS3FileSystem\n          .uploadPendingObjects()\n          .then(() => {\n            const finalUrl = outputDir + '/index.html';\n            return this._openPreviewWindow(project, finalUrl);\n          })\n          .then(({ url, windowObjectReference }) => {\n            if (!windowObjectReference) {\n              this.setState({\n                showPreviewLinkDialog: true,\n                url,\n              });\n            }\n          });\n      })\n      .catch((error: Error) => {\n        this.setState({\n          error,\n        });\n      });\n  };\n\n  render() {\n    const { showPreviewLinkDialog, url, error } = this.state;\n\n    if (error) {\n      return (\n        <BrowserPreviewErrorDialog\n          error={error}\n          onClose={() =>\n            this.setState({\n              error: null,\n            })\n          }\n        />\n      );\n    }\n\n    if (showPreviewLinkDialog) {\n      return (\n        <BrowserPreviewLinkDialog\n          url={url}\n          onClose={() =>\n            this.setState({\n              showPreviewLinkDialog: false,\n            })\n          }\n        />\n      );\n    }\n\n    return null;\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport React, { Component } from 'react';\nimport Dialog from '../../../UI/Dialog';\nimport FlatButton from '../../../UI/FlatButton';\nimport { showErrorBox } from '../../../UI/Messages/MessageBox';\nimport { Column, Line } from '../../../UI/Grid';\nimport Text from '../../../UI/Text';\n\ntype Props = {|\n  url: ?string,\n  onClose: () => void,\n|};\n\nexport default class BrowserPreviewLinkDialog extends Component<Props> {\n  _makeOnOpen = (i18n: I18nType) => () => {\n    const windowObjectReference = window.open(this.props.url, '_blank');\n    if (!windowObjectReference) {\n      showErrorBox(\n        i18n._(\n          t`Unable to open the preview! Be sure that popup are allowed for this website.`\n        ),\n        undefined\n      );\n    }\n    this.props.onClose();\n  };\n\n  render() {\n    const { url } = this.props;\n    if (!url) return null;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Dialog\n            actions={[\n              <FlatButton\n                key=\"launch-preview\"\n                label={<Trans>Launch the preview</Trans>}\n                primary\n                onClick={this._makeOnOpen(i18n)}\n              />,\n            ]}\n            cannotBeDismissed={true}\n            open\n          >\n            <Line>\n              <Column>\n                <Text>\n                  <Trans>\n                    Your preview is ready! Click on the button to launch the\n                    preview.\n                  </Trans>\n                </Text>\n              </Column>\n            </Line>\n            <Line>\n              <Column>\n                <Text>\n                  <Trans>\n                    To skip this dialog and{' '}\n                    <b>directly open the preview next time</b>, please allow\n                    popups to be opened for this website in your browser.\n                  </Trans>\n                </Text>\n              </Column>\n            </Line>\n          </Dialog>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport React, { Component } from 'react';\nimport Dialog from '../../../UI/Dialog';\nimport FlatButton from '../../../UI/FlatButton';\nimport { Column, Line } from '../../../UI/Grid';\nimport Text from '../../../UI/Text';\n\ntype Props = {|\n  error: Error,\n  onClose: () => void,\n|};\n\nexport default class BrowserPreviewErrorDialog extends Component<Props> {\n  render() {\n    const { error, onClose } = this.props;\n\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Dialog\n            actions={[\n              <FlatButton\n                key=\"close\"\n                label={<Trans>Close</Trans>}\n                onClick={onClose}\n              />,\n            ]}\n            title={<Trans>Could not launch the preview</Trans>}\n            cannotBeDismissed={false}\n            onRequestClose={onClose}\n            open\n          >\n            <Line>\n              <Column>\n                <Text>\n                  {// $FlowFixMe - AWS returned errors can have extra fields\n                  error.code === 'NetworkingError' ? (\n                    <Trans>\n                      The preview could not be launched because you're offline.\n                    </Trans>\n                  ) : (\n                    <Trans>\n                      The preview could not be launched because an error\n                      happened: {error.message}.\n                    </Trans>\n                  )}\n                </Text>\n              </Column>\n            </Line>\n            <Line>\n              <Column>\n                <Text>\n                  <Trans>\n                    Make sure you're online, have a proper internet connection\n                    and try again. If you download and use GDevelop desktop\n                    application, you can also run previews without any internet\n                    connection.\n                  </Trans>\n                </Text>\n              </Column>\n            </Line>\n          </Dialog>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\nimport path from 'path';\nimport { uploadObject } from '../../Utils/GDevelopServices/Preview';\nconst gd = global.gd;\n\nexport type TextFileDescriptor = {|\n  filePath: string,\n  text: string,\n|};\n\ntype PendingUploadFileDescriptor = {|\n  Key: string,\n  Body: string,\n  ContentType: 'text/javascript' | 'text/html',\n|};\n\ntype ConstructorArgs = {|\n  filesContent: Array<TextFileDescriptor>,\n  prefix: string,\n  bucketBaseUrl: string,\n|};\n\nconst isURL = (filename: string) => {\n  return (\n    filename.substr(0, 7) === 'http://' ||\n    filename.substr(0, 8) === 'https://' ||\n    filename.substr(0, 6) === 'ftp://'\n  );\n};\n\n/**\n * An in-memory \"file system\" that can be used for GDevelop previews.\n */\nexport default class BrowserS3FileSystem {\n  prefix: string;\n  bucketBaseUrl: string;\n\n  // Store the content of some files.\n  _indexedFilesContent: { [string]: TextFileDescriptor };\n\n  // Store all the objects that should be written on the S3 bucket.\n  // Call uploadPendingObjects to send them\n  _pendingUploadObjects: Array<PendingUploadFileDescriptor> = [];\n\n  // Store a set of all external URLs copied so that we can simulate\n  // readDir result.\n  _allCopiedExternalUrls = new Set<string>();\n\n  constructor({ filesContent, prefix, bucketBaseUrl }: ConstructorArgs) {\n    this.prefix = prefix;\n    this.bucketBaseUrl = bucketBaseUrl;\n\n    this._indexedFilesContent = {};\n    filesContent.forEach(textFileDescriptor => {\n      this._indexedFilesContent[\n        textFileDescriptor.filePath\n      ] = textFileDescriptor;\n    });\n  }\n\n  uploadPendingObjects = () => {\n    return Promise.all(this._pendingUploadObjects.map(uploadObject)).then(\n      result => {\n        console.log('Uploaded all objects:', result);\n        this._pendingUploadObjects = [];\n      },\n      error => {\n        console.error(\"Can't upload all objects:\", error);\n        throw error;\n      }\n    );\n  };\n\n  mkDir = (path: string) => {\n    // Assume required directories always exist.\n  };\n  dirExists = (path: string) => {\n    // Assume required directories always exist.\n    return true;\n  };\n  clearDir = (path: string) => {\n    // Assume path is cleared.\n  };\n  getTempDir = () => {\n    return '/virtual-unused-tmp-dir';\n  };\n  fileNameFrom = (fullpath: string) => {\n    if (isURL(fullpath)) return fullpath;\n\n    return path.basename(fullpath);\n  };\n  dirNameFrom = (fullpath: string) => {\n    if (isURL(fullpath)) return '';\n\n    return path.dirname(fullpath);\n  };\n  makeAbsolute = (filename: string, baseDirectory: string) => {\n    if (isURL(filename)) return filename;\n\n    if (!this.isAbsolute(baseDirectory))\n      baseDirectory = path.resolve(baseDirectory);\n\n    return path.resolve(baseDirectory, path.normalize(filename));\n  };\n  makeRelative = (filename: string, baseDirectory: string) => {\n    if (isURL(filename)) return filename;\n\n    return path.relative(baseDirectory, path.normalize(filename));\n  };\n  isAbsolute = (fullpath: string) => {\n    if (isURL(fullpath)) return true;\n\n    if (fullpath.length === 0) return true;\n    return (\n      (fullpath.length > 0 && fullpath.charAt(0) === '/') ||\n      (fullpath.length > 1 && fullpath.charAt(1) === ':')\n    );\n  };\n  copyFile = (source: string, dest: string) => {\n    //URL are not copied.\n    if (isURL(source)) {\n      this._allCopiedExternalUrls.add(source);\n      return true;\n    }\n\n    console.warn('Copy not done from', source, 'to', dest);\n    return true;\n  };\n  writeToFile = (fullPath: string, contents: string) => {\n    const key = fullPath.replace(this.bucketBaseUrl, '');\n    const mime = {\n      '.js': 'text/javascript',\n      '.html': 'text/html',\n    };\n    const fileExtension = path.extname(fullPath);\n\n    // Defer real upload until it's triggered by calling\n    // uploadPendingObjects.\n    this._pendingUploadObjects.push({\n      Key: key,\n      Body: contents,\n      ContentType: mime[fileExtension],\n    });\n    return true;\n  };\n\n  readFile = (file: string) => {\n    if (!!this._indexedFilesContent[file])\n      return this._indexedFilesContent[file].text;\n\n    console.error(`Unknown file ${file}, returning an empty string`);\n    return '';\n  };\n\n  readDir = (path: string, ext: string) => {\n    ext = ext.toUpperCase();\n    var output = new gd.VectorString();\n\n    // Simulate ReadDir by returning all external URLs\n    // with the filename matching the extension.\n    this._allCopiedExternalUrls.forEach(url => {\n      const upperCaseUrl = url.toUpperCase();\n      if (upperCaseUrl.indexOf(ext) === upperCaseUrl.length - ext.length) {\n        output.push_back(url);\n      }\n    });\n\n    return output;\n  };\n\n  fileExists = (filename: string) => {\n    if (isURL(filename)) return true;\n\n    // Assume all files asked for exists.\n    return true;\n  };\n}\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type Build,\n  buildCordovaAndroid,\n  getBuildFileUploadOptions,\n} from '../../Utils/GDevelopServices/Build';\nimport { uploadBlobFile } from './BrowserFileUploader';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport { ExplanationHeader } from '../GenericExporters/OnlineCordovaExport';\nconst gd = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserOnlineCordovaExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-online-cordova',\n  onlineBuildType: 'cordova-build',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Packaging for Android</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('cordova').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForCordova', true);\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    blobFile: Blob\n  ): Promise<string> => {\n    return getBuildFileUploadOptions().then(uploadOptions => {\n      return uploadBlobFile(\n        blobFile,\n        uploadOptions,\n        context.updateStepProgress\n      ).then(() => uploadOptions.key);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildCordovaAndroid(\n      getAuthorizationHeader,\n      profile.uid,\n      uploadBucketKey\n    );\n  },\n};\n","// @flow\nimport { loadScript } from '../LoadScript';\n\nconst PUBLIC_URL: string = process.env.PUBLIC_URL || '';\nconst ZIPJS_EXTERNAL_PATH = '/external/zip.js/WebContent';\nconst ZLIBASM_EXTERNAL_PATH = '/external/zlib-asm';\n\nlet zipJsLoaded = false;\nlet zipJsLoadingPromise: ?Promise<ZipJs> = null;\n\n/**\n * Initialize Zip.js, resolving with the instance of it.\n * Promise will be rejected if there is an error while loading Zip.js\n * (call initializeZipJs again to retry).\n */\nexport const initializeZipJs = (): Promise<ZipJs> => {\n  if (zipJsLoaded) {\n    const zip: ZipJs = global.zip;\n    return Promise.resolve(zip);\n  }\n\n  if (zipJsLoadingPromise) {\n    return zipJsLoadingPromise;\n  }\n\n  zipJsLoadingPromise = loadScript(\n    PUBLIC_URL + ZIPJS_EXTERNAL_PATH + '/zip.js'\n  ).then(() => {\n    const zip: ?ZipJs = global.zip;\n    if (!zip) {\n      throw new Error(\n        'Can not find \"zip\" in the global namespace after loading zip.js. Has the zip.js script being loaded properly?'\n      );\n    }\n\n    zipJsLoadingPromise = null;\n    zipJsLoaded = true;\n\n    zip.workerScripts = {\n      deflater: [\n        PUBLIC_URL + ZIPJS_EXTERNAL_PATH + '/z-worker.js',\n        PUBLIC_URL + ZLIBASM_EXTERNAL_PATH + '/zlib.js',\n        PUBLIC_URL + ZIPJS_EXTERNAL_PATH + '/zlib-asm/codecs.js',\n      ],\n      inflater: [\n        PUBLIC_URL + ZIPJS_EXTERNAL_PATH + '/z-worker.js',\n        PUBLIC_URL + ZLIBASM_EXTERNAL_PATH + '/zlib.js',\n        PUBLIC_URL + ZIPJS_EXTERNAL_PATH + '/zlib-asm/codecs.js',\n      ],\n    };\n    return zip;\n  });\n\n  return zipJsLoadingPromise;\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type Build,\n  buildElectron,\n  getBuildFileUploadOptions,\n} from '../../Utils/GDevelopServices/Build';\nimport { uploadBlobFile } from './BrowserFileUploader';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport {\n  type ExportState,\n  SetupExportHeader,\n} from '../GenericExporters/OnlineElectronExport';\nconst gd = global.gd;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserOnlineElectronExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-online-electron',\n  onlineBuildType: 'electron-build',\n\n  getInitialExportState: () => ({\n    targets: ['winExe'],\n  }),\n\n  canLaunchBuild: (exportState: ExportState) => !!exportState.targets.length,\n\n  renderHeader: props => <SetupExportHeader {...props} />,\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('electron').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForElectron', true);\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    blobFile: Blob\n  ): Promise<string> => {\n    return getBuildFileUploadOptions().then(uploadOptions => {\n      return uploadBlobFile(\n        blobFile,\n        uploadOptions,\n        context.updateStepProgress\n      ).then(() => uploadOptions.key);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildElectron(\n      getAuthorizationHeader,\n      profile.uid,\n      uploadBucketKey,\n      exportState.targets\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport {\n  type Build,\n  buildWeb,\n  getBuildFileUploadOptions,\n} from '../../Utils/GDevelopServices/Build';\nimport { uploadBlobFile } from './BrowserFileUploader';\nimport { type UserProfile } from '../../Profile/UserProfileContext';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport { ExplanationHeader } from '../GenericExporters/OnlineWebExport';\nconst gd = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserOnlineWebExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-online-web',\n  onlineBuildType: 'web-build',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Publish online</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('web').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  launchUpload: (\n    context: ExportPipelineContext<ExportState>,\n    blobFile: Blob\n  ): Promise<string> => {\n    return getBuildFileUploadOptions().then(uploadOptions => {\n      return uploadBlobFile(\n        blobFile,\n        uploadOptions,\n        context.updateStepProgress\n      ).then(() => uploadOptions.key);\n    });\n  },\n\n  launchOnlineBuild: (\n    exportState: ExportState,\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildWeb(getAuthorizationHeader, profile.uid, uploadBucketKey);\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { BlobDownloadUrlHolder } from '../../Utils/BlobDownloadUrlHolder';\nimport { ExplanationHeader, DoneFooter } from '../GenericExporters/HTML5Export';\nconst gd = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nconst openBlobDownloadUrl = (url: string, filename: string) => {\n  const { body } = document;\n  if (!body) return;\n\n  // Not using Window.openExternalURL because blob urls are blocked\n  // by Adblock Plus (and maybe other ad blockers).\n  const a = document.createElement('a');\n  body.appendChild(a);\n  a.style.display = 'none';\n  a.href = url;\n  a.download = filename;\n  a.click();\n  body.removeChild(a);\n};\n\nexport const browserHTML5ExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-html5',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Export as a HTML5 game</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('web').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  renderDoneFooter: ({ compressionOutput, exportState, onClose }) => {\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <BlobDownloadUrlHolder blob={compressionOutput}>\n            {blobDownloadUrl => (\n              <RaisedButton\n                fullWidth\n                primary\n                onClick={() => openBlobDownloadUrl(blobDownloadUrl, 'game.zip')}\n                label={<Trans>Download the exported game</Trans>}\n              />\n            )}\n          </BlobDownloadUrlHolder>\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { BlobDownloadUrlHolder } from '../../Utils/BlobDownloadUrlHolder';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/CordovaExport';\nimport { openBlobDownloadUrl } from '.';\nconst gd = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserCordovaExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-cordova',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('cordova').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForCordova', true);\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  renderDoneFooter: ({ compressionOutput, exportState, onClose }) => {\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <BlobDownloadUrlHolder blob={compressionOutput}>\n            {blobDownloadUrl => (\n              <RaisedButton\n                fullWidth\n                primary\n                onClick={() => openBlobDownloadUrl(blobDownloadUrl, 'game.zip')}\n                label={<Trans>Download the exported game</Trans>}\n              />\n            )}\n          </BlobDownloadUrlHolder>\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport path from 'path';\nconst gd = global.gd;\n\nexport type BlobFileDescriptor = {|\n  filePath: string,\n  blob: Blob,\n|};\n\nexport type TextFileDescriptor = {|\n  filePath: string,\n  text: string,\n|};\n\nexport type UrlFileDescriptor = {|\n  filePath: string,\n  url: string,\n|};\n\ntype ConstructorArgs = {|\n  textFiles: Array<TextFileDescriptor>,\n|};\n\nconst isURL = (filename: string) => {\n  return (\n    filename.substr(0, 7) === 'http://' ||\n    filename.substr(0, 8) === 'https://' ||\n    filename.substr(0, 6) === 'ftp://'\n  );\n};\n\n// For some reason, `path.posix` is undefined, so\n// we're using `path` directly. As it's for the web-app,\n// it should always be the posix version.\n\n// TODO: Merge BrowserS3FileSystem into this?\n\n/**\n * An in-memory \"file system\" that can be used for GDevelop exports.\n */\nexport default class BrowserFileSystem {\n  // The representation of the \"file system\":\n\n  /**\n   * Store all the text files (filepath => content)\n   * @private\n   */\n  _textFiles: { [string]: string } = {};\n\n  /**\n   * Store all the files that should be downloaded (filepath => url)\n   * @private\n   */\n  _filesToDownload: { [string]: string } = {};\n\n  /**\n   * Create a new in-memory file system.\n   */\n  constructor({ textFiles }: ConstructorArgs) {\n    textFiles.forEach(textFileDescriptor => {\n      this._textFiles[textFileDescriptor.filePath] = textFileDescriptor.text;\n    });\n  }\n\n  /**\n   * Returns all the in memory text files with the specified path prefix.\n   */\n  getAllTextFilesIn = (pathPrefix: string): Array<TextFileDescriptor> => {\n    return Object.keys(this._textFiles)\n      .filter(filePath => filePath.indexOf(pathPrefix) === 0)\n      .map(filePath => ({\n        filePath,\n        text: this._textFiles[filePath],\n      }));\n  };\n\n  /**\n   * Returns all the files that should be downloaded from a URL, with the specified path prefix.\n   */\n  getAllUrlFilesIn = (pathPrefix: string): Array<UrlFileDescriptor> => {\n    return Object.keys(this._filesToDownload)\n      .filter(filePath => filePath.indexOf(pathPrefix) === 0)\n      .map(filePath => ({\n        filePath,\n        url: this._filesToDownload[filePath],\n      }));\n  };\n\n  mkDir = (path: string) => {\n    // \"Directories\" are assumed to exist.\n    return true;\n  };\n  dirExists = (path: string) => {\n    // TODO: To be changed to be EnsureDirExists.\n    // \"Directories\" are assumed to exist.\n    return true;\n  };\n  clearDir = (path: string) => {\n    // Clear the files to be written in the specified directory.\n    const filePaths = Object.keys(this._textFiles);\n    filePaths.forEach(filePath => {\n      if (filePath.indexOf(path) === 0) {\n        delete this._textFiles[filePath];\n      }\n    });\n\n    return true;\n  };\n  getTempDir = () => {\n    return '/browser-file-system-tmp-dir';\n  };\n  fileNameFrom = (fullpath: string) => {\n    return path.basename(fullpath);\n  };\n  dirNameFrom = (fullpath: string) => {\n    return path.dirname(fullpath);\n  };\n  makeAbsolute = (filePathOrURL: string, baseDirectoryOrURL: string) => {\n    // URLs are always absolute\n    if (isURL(filePathOrURL)) return filePathOrURL;\n\n    if (!this.isAbsolute(baseDirectoryOrURL))\n      baseDirectoryOrURL = path.resolve(baseDirectoryOrURL);\n\n    return path.resolve(baseDirectoryOrURL, path.normalize(filePathOrURL));\n  };\n  makeRelative = (filePathOrURL: string, baseDirectoryOrURL: string) => {\n    if (isURL(filePathOrURL)) {\n      // Cutting the start if the URL is relative to the base URL\n      if (filePathOrURL.indexOf(baseDirectoryOrURL) === 0) {\n        return filePathOrURL.substring(baseDirectoryOrURL.length);\n      }\n\n      // Keep the URL \"absolute\" if on different domains.\n      console.warn(\n        `${filePathOrURL} cannot be made relative to ${baseDirectoryOrURL}, please double check this behavior is correct.`\n      );\n      return filePathOrURL;\n    }\n\n    // Paths are treated as usual paths.\n    return path.relative(baseDirectoryOrURL, path.normalize(filePathOrURL));\n  };\n  isAbsolute = (fullpath: string) => {\n    // URLs are always absolute\n    if (isURL(fullpath)) return true;\n\n    // Paths are absolute if starting from the root\n    return fullpath.length > 0 && fullpath.charAt(0) === '/';\n  };\n\n  copyFile = (source: string, dest: string) => {\n    // URLs are not copied, but marked as to be downloaded.\n    if (isURL(source)) {\n      if (isURL(dest)) {\n        console.error(\n          `Destination can't be a URL in copyFile (from ${source} to ${dest}).`\n        );\n        return false;\n      }\n\n      this._filesToDownload[path.normalize(dest)] = source;\n      return true;\n    }\n\n    // If this is a file that we have already in memory,\n    // copy its path.\n    if (!!this._textFiles[source]) {\n      this._textFiles[path.normalize(dest)] = this._textFiles[source];\n      return true;\n    }\n\n    console.error(`File not found in copyFile (from ${source} to ${dest}).`);\n    return false;\n  };\n\n  writeToFile = (filePath: string, content: string) => {\n    this._textFiles[path.normalize(filePath)] = content;\n    return true;\n  };\n\n  readFile = (file: string): string => {\n    if (this._textFiles[file]) return this._textFiles[file];\n\n    console.error(`Unknown file ${file}, returning an empty string`);\n    return '';\n  };\n\n  readDir = (path: string, ext: string) => {\n    ext = ext.toUpperCase();\n    var output = new gd.VectorString();\n\n    // Simulate ReadDir by returning all external URLs\n    // with the filename matching the extension.\n    Object.keys(this._filesToDownload).forEach(filePath => {\n      const upperCaseFilePath = filePath.toUpperCase();\n      if (\n        upperCaseFilePath.indexOf(ext) ===\n        upperCaseFilePath.length - ext.length\n      ) {\n        output.push_back(filePath);\n      }\n    });\n\n    return output;\n  };\n\n  fileExists = (filePath: string) => {\n    if (isURL(filePath)) return true;\n\n    const normalizedFilePath = path.normalize(filePath);\n    return (\n      !!this._textFiles[normalizedFilePath] ||\n      !!this._filesToDownload[normalizedFilePath]\n    );\n  };\n}\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { BlobDownloadUrlHolder } from '../../Utils/BlobDownloadUrlHolder';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/ElectronExport';\nimport { openBlobDownloadUrl } from '.';\nconst gd = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserElectronExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-electron',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('electron').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForElectron', true);\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  renderDoneFooter: ({ compressionOutput, exportState, onClose }) => {\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <BlobDownloadUrlHolder blob={compressionOutput}>\n            {blobDownloadUrl => (\n              <RaisedButton\n                fullWidth\n                primary\n                onClick={() => openBlobDownloadUrl(blobDownloadUrl, 'game.zip')}\n                label={<Trans>Download the exported game</Trans>}\n              />\n            )}\n          </BlobDownloadUrlHolder>\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { BlobDownloadUrlHolder } from '../../Utils/BlobDownloadUrlHolder';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/Cocos2dExport';\nimport { openBlobDownloadUrl } from '.';\nimport { Column, Line } from '../../UI/Grid';\nimport Toggle from '../../UI/Toggle';\nconst gd = global.gd;\n\ntype ExportState = {\n  debugMode: boolean,\n};\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserCocos2dExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-cocos2d',\n\n  getInitialExportState: () => ({\n    debugMode: false,\n  }),\n\n  canLaunchBuild: () => true,\n\n  renderHeader: ({ project, exportState, updateExportState }) => (\n    <Column noMargin>\n      <Line>\n        <ExplanationHeader />\n      </Line>\n      <Line>\n        <Toggle\n          onToggle={(e, check) =>\n            updateExportState(prevState => ({\n              ...prevState,\n              debugMode: check,\n            }))\n          }\n          toggled={exportState.debugMode}\n          labelPosition=\"right\"\n          label={\n            <Trans>\n              Debug mode (show FPS counter and stats in the bottom left)\n            </Trans>\n          }\n        />\n      </Line>\n    </Column>\n  ),\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('cocos2d-js').then(({ gdjsRoot, filesContent }) => {\n      console.info('GDJS found in ', gdjsRoot);\n\n      const outputDir = '/export/';\n      const abstractFileSystem = new BrowserFileSystem({\n        textFiles: filesContent,\n      });\n      // TODO: Memory leak? Check for other exporters too.\n      const fileSystem = assignIn(\n        new gd.AbstractFileSystemJS(),\n        abstractFileSystem\n      );\n      const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n      return {\n        exporter,\n        outputDir,\n        abstractFileSystem,\n      };\n    });\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    exporter.exportWholeCocos2dProject(\n      context.project,\n      context.exportState.debugMode,\n      outputDir\n    );\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  renderDoneFooter: ({ compressionOutput, exportState, onClose }) => {\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <BlobDownloadUrlHolder blob={compressionOutput}>\n            {blobDownloadUrl => (\n              <RaisedButton\n                fullWidth\n                primary\n                onClick={() => openBlobDownloadUrl(blobDownloadUrl, 'game.zip')}\n                label={<Trans>Download the exported game</Trans>}\n              />\n            )}\n          </BlobDownloadUrlHolder>\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport * as React from 'react';\nimport { Trans } from '@lingui/macro';\nimport assignIn from 'lodash/assignIn';\nimport { findGDJS } from '../../GameEngineFinder/BrowserS3GDJSFinder';\nimport BrowserFileSystem from './BrowserFileSystem';\nimport {\n  type UrlFileDescriptor,\n  type TextFileDescriptor,\n  type BlobFileDescriptor,\n  downloadUrlsToBlobs,\n  archiveFiles,\n} from '../../Utils/BrowserArchiver';\nimport {\n  type ExportPipeline,\n  type ExportPipelineContext,\n} from '../ExportPipeline.flow';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { BlobDownloadUrlHolder } from '../../Utils/BlobDownloadUrlHolder';\nimport {\n  ExplanationHeader,\n  DoneFooter,\n} from '../GenericExporters/FacebookInstantGamesExport';\nimport { openBlobDownloadUrl } from '.';\nconst gd = global.gd;\n\ntype ExportState = null;\n\ntype PreparedExporter = {|\n  exporter: gdjsExporter,\n  abstractFileSystem: BrowserFileSystem,\n  outputDir: string,\n|};\n\ntype ExportOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  urlFiles: Array<UrlFileDescriptor>,\n|};\n\ntype ResourcesDownloadOutput = {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n|};\n\ntype CompressionOutput = Blob;\n\nexport const browserFacebookInstantGamesExportPipeline: ExportPipeline<\n  ExportState,\n  PreparedExporter,\n  ExportOutput,\n  ResourcesDownloadOutput,\n  CompressionOutput\n> = {\n  name: 'browser-facebook-instant-games',\n\n  getInitialExportState: () => null,\n\n  canLaunchBuild: () => true,\n\n  renderHeader: () => <ExplanationHeader />,\n\n  renderLaunchButtonLabel: () => <Trans>Package</Trans>,\n\n  prepareExporter: (\n    context: ExportPipelineContext<ExportState>\n  ): Promise<PreparedExporter> => {\n    return findGDJS('facebook-instant-games').then(\n      ({ gdjsRoot, filesContent }) => {\n        console.info('GDJS found in ', gdjsRoot);\n\n        const outputDir = '/export/';\n        const abstractFileSystem = new BrowserFileSystem({\n          textFiles: filesContent,\n        });\n        // TODO: Memory leak? Check for other exporters too.\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          abstractFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n        return {\n          exporter,\n          outputDir,\n          abstractFileSystem,\n        };\n      }\n    );\n  },\n\n  launchExport: (\n    context: ExportPipelineContext<ExportState>,\n    { exporter, outputDir, abstractFileSystem }: PreparedExporter\n  ): Promise<ExportOutput> => {\n    const { project } = context;\n\n    const exportOptions = new gd.MapStringBoolean();\n    exportOptions.set('exportForFacebookInstantGames', true);\n    exporter.exportWholePixiProject(project, outputDir, exportOptions);\n    exportOptions.delete();\n    exporter.delete();\n\n    return Promise.resolve({\n      textFiles: abstractFileSystem.getAllTextFilesIn(outputDir),\n      urlFiles: abstractFileSystem.getAllUrlFilesIn(outputDir),\n    });\n  },\n\n  launchResourcesDownload: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, urlFiles }: ExportOutput\n  ): Promise<ResourcesDownloadOutput> => {\n    return downloadUrlsToBlobs({\n      urlFiles,\n      onProgress: context.updateStepProgress,\n    }).then(blobFiles => ({\n      blobFiles,\n      textFiles,\n    }));\n  },\n\n  launchCompression: (\n    context: ExportPipelineContext<ExportState>,\n    { textFiles, blobFiles }: ResourcesDownloadOutput\n  ): Promise<Blob> => {\n    return archiveFiles({\n      blobFiles,\n      textFiles,\n      basePath: '/export/',\n      onProgress: context.updateStepProgress,\n    });\n  },\n\n  renderDoneFooter: ({ compressionOutput, exportState, onClose }) => {\n    return (\n      <DoneFooter\n        renderGameButton={() => (\n          <BlobDownloadUrlHolder blob={compressionOutput}>\n            {blobDownloadUrl => (\n              <RaisedButton\n                primary\n                onClick={() =>\n                  openBlobDownloadUrl(blobDownloadUrl, 'fb-instant-game.zip')\n                }\n                label={<Trans>Download the Instant Game archive</Trans>}\n              />\n            )}\n          </BlobDownloadUrlHolder>\n        )}\n      />\n    );\n  },\n};\n","// @flow\nimport {\n  type JsExtensionsLoader,\n  type ExtensionLoadingResult,\n  type TranslationFunction,\n  loadExtension,\n} from '.';\nimport ObjectsEditorService from '../ObjectEditor/ObjectsEditorService';\nimport ObjectsRenderingService from '../ObjectsRendering/ObjectsRenderingService';\nconst gd = global.gd;\n\n// The list of \"JsExtension.js\" files to be bundled in the webapp, keyed by their extension name.\nconst jsExtensions = [\n  {\n    name: 'AdMob',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/AdMob/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'FacebookInstantGames',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/FacebookInstantGames/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'DeviceSensors',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/DeviceSensors/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'DeviceVibration',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/DeviceVibration/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'Physics2',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/Physics2Behavior/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'ExampleJsExtension',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/ExampleJsExtension/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'Tween',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/TweenBehavior/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'Video',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/Video/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'FileSystem',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/FileSystem/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'DialogueTree',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/DialogueTree/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n  {\n    name: 'BBText',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/BBText/JsExtension.js'),\n    objectsRenderingServiceModules: {\n      'pixi-multistyle-text/dist/pixi-multistyle-text.umd': require('GDJS-for-web-app-only/Runtime/Extensions/BBText/pixi-multistyle-text/dist/pixi-multistyle-text.umd'),\n    },\n  },\n  {\n    name: 'Effects',\n    extensionModule: require('GDJS-for-web-app-only/Runtime/Extensions/Effects/JsExtension.js'),\n    objectsRenderingServiceModules: {},\n  },\n];\n\ntype MakeExtensionsLoaderArguments = {|\n  objectsEditorService: typeof ObjectsEditorService,\n  objectsRenderingService: typeof ObjectsRenderingService,\n  filterExamples: boolean,\n|};\n\n/**\n * Loader that load all JS extensions required in this file.\n * Extensions are usually auto-discovered when declared in Extensions/xxx/JsExtension.js, but not\n * for the web-app where everything must be bundled.\n */\nexport default function makeExtensionsLoader({\n  objectsEditorService,\n  objectsRenderingService,\n  filterExamples,\n}: MakeExtensionsLoaderArguments): JsExtensionsLoader {\n  return {\n    loadAllExtensions(\n      _: TranslationFunction\n    ): Promise<\n      Array<{ extensionModulePath: string, result: ExtensionLoadingResult }>\n    > {\n      return Promise.resolve(\n        jsExtensions\n          .filter(({ name }) => !filterExamples || !name.includes('Example'))\n          .map(({ name, extensionModule, objectsRenderingServiceModules }) => {\n            // Load any editor for objects, if we have somewhere where\n            // to register them.\n            if (\n              objectsEditorService &&\n              extensionModule.registerEditorConfigurations\n            ) {\n              extensionModule.registerEditorConfigurations(\n                objectsEditorService\n              );\n            }\n\n            // Register modules for ObjectsRenderingService\n            if (objectsRenderingService && objectsRenderingServiceModules) {\n              for (let requirePath in objectsRenderingServiceModules) {\n                objectsRenderingService.registerModule(\n                  requirePath,\n                  objectsRenderingServiceModules[requirePath]\n                );\n              }\n            }\n\n            // Load any renderer for objects, if we have somewhere where\n            // to register them.\n            if (\n              objectsRenderingService &&\n              extensionModule.registerInstanceRenderers\n            ) {\n              extensionModule.registerInstanceRenderers(\n                objectsRenderingService\n              );\n            }\n\n            return {\n              extensionModulePath: 'internal-extension://' + name,\n              result: loadExtension(\n                _,\n                gd,\n                gd.JsPlatform.get(),\n                extensionModule\n              ),\n            };\n          })\n      );\n    },\n  };\n}\n","// @flow\n\nimport { initializeZipJs } from './Zip.js';\nimport path from 'path';\n\nexport type BlobFileDescriptor = {|\n  filePath: string,\n  blob: Blob,\n|};\n\nexport type TextFileDescriptor = {|\n  filePath: string,\n  text: string,\n|};\n\nexport type UrlFileDescriptor = {|\n  filePath: string,\n  url: string,\n|};\n\nfunction eachCallback<T>(\n  array: Array<T>,\n  callback: (T, () => void) => void,\n  done: () => void\n) {\n  if (!array.length) {\n    done();\n    return;\n  }\n  let index = 0;\n\n  const callNextCallback = () => {\n    callback(array[index], () => {\n      index++;\n      if (index >= array.length) {\n        done();\n      } else {\n        callNextCallback();\n      }\n    });\n  };\n\n  callNextCallback();\n}\n\nexport const downloadUrlsToBlobs = async ({\n  urlFiles,\n  onProgress,\n}: {|\n  urlFiles: Array<UrlFileDescriptor>,\n  onProgress: (count: number, total: number) => void,\n|}): Promise<Array<BlobFileDescriptor>> => {\n  let count = 0;\n  return Promise.all(\n    urlFiles\n      .filter(({ url }) => url.indexOf('.h') === -1) // TODO\n      .map(({ url, filePath }) => {\n        return fetch(url)\n          .then(response => {\n            if (!response.ok) {\n              console.error(`Error while downloading \"${url}\"`, response);\n              throw new Error(\n                `Error while downloading \"${url}\" (status: ${response.status})`\n              );\n            }\n            return response.blob();\n          })\n          .then(blob => {\n            count++;\n            onProgress(count, urlFiles.length);\n            return {\n              filePath,\n              blob,\n            };\n          });\n      })\n  ).then((downloadedBlobs: Array<BlobFileDescriptor>) => {\n    console.info('All download done');\n    return downloadedBlobs;\n  });\n};\n\n/**\n * Archive the specified blobs and texts into a zip file,\n * returned as a blob.\n */\nexport const archiveFiles = async ({\n  textFiles,\n  blobFiles,\n  basePath,\n  onProgress,\n}: {|\n  textFiles: Array<TextFileDescriptor>,\n  blobFiles: Array<BlobFileDescriptor>,\n  basePath: string,\n  onProgress: (count: number, total: number) => void,\n|}): Promise<Blob> => {\n  const zipJs: ZipJs = await initializeZipJs();\n\n  let zippedFilesCount = 0;\n  let totalFilesCount = blobFiles.length + textFiles.length;\n\n  return new Promise((resolve, reject) => {\n    zipJs.createWriter(\n      new zipJs.BlobWriter('application/zip'),\n      function(zipWriter) {\n        eachCallback(\n          blobFiles,\n          ({ filePath, blob }, done) => {\n            // All files in a zip are relative\n            const relativeFilePath = path.relative(basePath, filePath);\n\n            zipWriter.add(\n              relativeFilePath,\n              new zipJs.BlobReader(blob),\n              () => {\n                zippedFilesCount++;\n                onProgress(zippedFilesCount, totalFilesCount);\n                done();\n              },\n              () => {\n                /* We don't track progress at the file level */\n              }\n            );\n          },\n          () => {\n            eachCallback(\n              textFiles,\n              ({ filePath, text }, done) => {\n                // All files in a zip are relative\n                const relativeFilePath = path.relative(basePath, filePath);\n\n                zipWriter.add(\n                  relativeFilePath,\n                  new zipJs.TextReader(text),\n                  () => {\n                    zippedFilesCount++;\n                    onProgress(zippedFilesCount, totalFilesCount);\n                    done();\n                  },\n                  () => {\n                    /* We don't track progress at the file level */\n                  }\n                );\n              },\n              () => {\n                zipWriter.close((blob: Blob) => {\n                  resolve(blob);\n                });\n              }\n            );\n          }\n        );\n      },\n      error => {\n        console.error('Error while making zip:', error);\n        reject(error);\n      }\n    );\n  });\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { type StorageProvider, type FileMetadata } from '../index';\nimport { serializeToJSON } from '../../Utils/Serializer';\nimport GoogleDrive from '../../UI/CustomSvgIcons/GoogleDrive';\nimport GoogleDriveSaveAsDialog from './GoogleDriveSaveAsDialog';\nimport { type MessageDescriptor } from '../../Utils/i18n/MessageDescriptor.flow';\nimport { type AppArguments } from '../../Utils/Window';\nimport { loadScript } from '../../Utils/LoadScript';\nconst isDev = process.env.NODE_ENV === 'development';\n\nconst DEVELOPER_KEY = isDev\n  ? 'AIzaSyDH3UNpxzIpcTyd6aMCWI5oNFSptG_BhOc'\n  : 'AIzaSyDJYQmzLCfjXnNImDa1X_cDTWjl2BOrcM4';\nconst CLIENT_ID = isDev\n  ? '28563107180-bd29h9f3og4h1632m94nv6hat2igrej6.apps.googleusercontent.com'\n  : '44882707384-3t4tubr3fbht87sbtdp7u5mlo45k5uku.apps.googleusercontent.com';\nconst APP_ID = isDev ? '28563107180' : '44882707384'; // This is the first part of CLIENT_ID.\nconst DISCOVERY_DOCS = [\n  'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest',\n];\nconst SCOPE =\n  'https://www.googleapis.com/auth/drive.file https://www.googleapis.com/auth/drive.install';\n\nlet apisLoaded = false;\nlet apisLoadingPromise = null;\n\n/**\n * Load Google Drive APIs. Return a fulfilled promise when done.\n */\nconst initializeApis = (): Promise<void> => {\n  if (apisLoaded) {\n    return Promise.resolve();\n  }\n\n  if (apisLoadingPromise) {\n    // Only do a single initialization attempt at a given time.\n    return apisLoadingPromise;\n  }\n\n  apisLoadingPromise = loadScript('https://apis.google.com/js/api:client.js')\n    .then(() => {\n      const gapi = global.gapi;\n      if (!gapi) {\n        throw new Error(\n          'No gapi global object found after loading Google Drive API script'\n        );\n      }\n\n      return new Promise((resolve, reject) => {\n        gapi.load('client:auth2:picker', {\n          callback: () => {\n            const auth2LoadPromise = gapi.auth2.init({\n              apiKey: DEVELOPER_KEY,\n              clientId: CLIENT_ID,\n              discoveryDocs: DISCOVERY_DOCS,\n              scope: SCOPE,\n            });\n\n            gapi.client.setApiKey(DEVELOPER_KEY);\n            const driveLoadPromise = gapi.client.load('drive', 'v3');\n\n            resolve(Promise.all([auth2LoadPromise, driveLoadPromise]));\n          },\n          onerror: () => {\n            reject(\n              new Error(\n                'Unable to load auth2 and picker APIs for Google Drive.'\n              )\n            );\n          },\n        });\n      });\n    })\n    .then(() => {\n      apisLoaded = true;\n      apisLoadingPromise = null;\n    })\n    .catch(error => {\n      console.error('Error while loading Google Drive APIs:', error);\n      apisLoadingPromise = null;\n\n      throw error;\n    });\n\n  return apisLoadingPromise;\n};\n\ntype GoogleUser = {\n  getAuthResponse: () => { access_token: string, error?: ?Error },\n};\n\nlet isAuthenticated = false;\n\n/**\n * Sign in the user to Google Drive, returning the user object after a successful sign up\n * (or if the user is already signed in).\n */\nexport const authenticate = (): Promise<GoogleUser> => {\n  return initializeApis().then(() => {\n    const gapi = global.gapi;\n    const googleAuth = gapi.auth2.getAuthInstance();\n    if (isAuthenticated && googleAuth.isSignedIn.get()) {\n      return googleAuth.currentUser.get();\n    }\n\n    isAuthenticated = false;\n    googleAuth.isSignedIn.listen(authenticated => {\n      console.info('Authenticated with Google APIs: ', authenticated);\n      isAuthenticated = authenticated;\n    });\n    return googleAuth\n      .signIn({ scope: SCOPE })\n      .then((googleUser: GoogleUser) => {\n        if (\n          !googleUser.getAuthResponse() ||\n          googleUser.getAuthResponse().error\n        ) {\n          console.error(\n            'OAuth2 error while sign in:',\n            googleUser.getAuthResponse()\n              ? googleUser.getAuthResponse().error\n              : 'No AuthResponse'\n          );\n          throw new Error('Authentication error');\n        }\n\n        isAuthenticated = true;\n        return googleUser;\n      });\n  });\n};\n\n/**\n * Update a JSON file, given its file id.\n */\nexport const patchJsonFile = (\n  fileId: string,\n  googleUser: GoogleUser,\n  content: string\n): Promise<void> => {\n  return fetch(`https://www.googleapis.com/upload/drive/v3/files/${fileId}`, {\n    method: 'PATCH',\n    headers: new Headers({\n      Authorization: `Bearer ${googleUser.getAuthResponse().access_token}`,\n      'Content-Type': 'application/json',\n    }),\n    body: content,\n  }).then(res => {\n    if (res.status !== 200) {\n      if (res.status === 401) {\n        isAuthenticated = false;\n      }\n\n      throw res;\n    }\n  });\n};\n\n/**\n * Create a new empty JSON file, returning its fileid.\n */\nexport const createNewJsonFile = (\n  parentId: string,\n  name: string\n): Promise<string> => {\n  const gapi = global.gapi;\n\n  return gapi.client.drive.files\n    .create({\n      'content-type': 'application/json',\n      uploadType: 'multipart',\n      name: name,\n      parents: [parentId],\n      mimeType: 'application/json',\n      fields: 'id, name, kind, size',\n    })\n    .then(apiResponse => {\n      return apiResponse.result.id;\n    });\n};\n\n/**\n * Information about a file or folder picked by the user.\n */\nexport type GoogleDriveFileOrFolder =\n  | {|\n      type: 'FOLDER',\n      id: string,\n      name: string,\n    |}\n  | {|\n      type: 'FILE',\n      id: string,\n      name: string,\n      parentId: string,\n    |};\n\nexport type GoogleDriveFilePickerOptions = {|\n  selectFolderEnabled: boolean,\n  showUploadView: boolean,\n|};\n\n/**\n * Display a file picker as a modal, resolving with the selected file or folder,\n * if any.\n *\n * The picker dialog is not playing nice with material-ui dialogs or overlays. They should\n * not be displayed when the picker is on screen.\n */\nconst showFilePicker = ({\n  selectFolderEnabled,\n  showUploadView,\n}: GoogleDriveFilePickerOptions): Promise<?GoogleDriveFileOrFolder> => {\n  return authenticate().then(googleUser => {\n    const google = global.google;\n\n    return new Promise(resolve => {\n      let picker = null;\n      const pickerBuilder = new google.picker.PickerBuilder()\n        .addView(\n          new google.picker.DocsView()\n            .setIncludeFolders(true)\n            .setSelectFolderEnabled(selectFolderEnabled)\n        )\n        .setOAuthToken(googleUser.getAuthResponse().access_token)\n        .setDeveloperKey(DEVELOPER_KEY)\n        .setAppId(APP_ID) // App ID is required to correctly identify files created with the app.\n        .setCallback(data => {\n          if (\n            data[google.picker.Response.ACTION] === google.picker.Action.PICKED\n          ) {\n            const doc = data[google.picker.Response.DOCUMENTS][0];\n            const id: string = doc[google.picker.Document.ID];\n            const name: string = doc[google.picker.Document.NAME];\n            const parentId: string = doc[google.picker.Document.PARENT_ID];\n            if (\n              doc[google.picker.Document.TYPE] ===\n                google.picker.Type.LOCATION ||\n              doc[google.picker.Document.MIME_TYPE] ===\n                'application/vnd.google-apps.folder'\n            ) {\n              resolve({ id, name, type: 'FOLDER' });\n            } else {\n              resolve({ id, name, type: 'FILE', parentId });\n            }\n            if (picker) picker.dispose();\n          } else if (\n            data[google.picker.Response.ACTION] === google.picker.Action.CANCEL\n          ) {\n            resolve(null);\n            if (picker) picker.dispose();\n          }\n        });\n      if (showUploadView) {\n        pickerBuilder.addView(\n          new google.picker.DocsUploadView().setIncludeFolders(true)\n        );\n      }\n\n      picker = pickerBuilder.build();\n\n      picker.setVisible(true);\n      const pickerElements = document.getElementsByClassName('picker-dialog');\n      for (var i = 0; i < pickerElements.length; ++i) {\n        pickerElements[i].style.zIndex = '5000'; // Higher than Material UI modals\n      }\n    });\n  });\n};\n\n/**\n * A storage that is using Google Drive to open and store files.\n */\nexport default ({\n  internalName: 'GoogleDrive',\n  name: t`Google Drive`,\n  renderIcon: () => <GoogleDrive />,\n  getFileMetadataFromAppArguments: (appArguments: AppArguments) => {\n    if (appArguments.state) {\n      try {\n        // See \"state\" argument passed by Google Drive API:\n        // https://developers.google.com/drive/api/v3/enable-sdk#construct\n        const googleDriveState = JSON.parse(appArguments.state);\n        if (googleDriveState.ids && googleDriveState.ids[0]) {\n          return {\n            fileIdentifier: googleDriveState.ids[0],\n          };\n        }\n      } catch (e) {\n        console.warn(\n          \"Error while trying to parse the Google Drive 'ids' in 'state' from the app arguments.\"\n        );\n      }\n    }\n\n    return null;\n  },\n  createOperations: ({ setDialog, closeDialog }) => {\n    initializeApis().catch(() => {\n      // Ignore error as we'll retry later.\n    });\n\n    return {\n      doesInitialOpenRequireUserInteraction: true, // Authentication will open a popup, requiring user interaction\n      onOpen: (\n        fileMetadata: FileMetadata\n      ): Promise<{|\n        content: Object,\n      |}> => {\n        const fileId = fileMetadata.fileIdentifier;\n\n        return authenticate()\n          .then(googleUser =>\n            fetch(\n              `https://www.googleapis.com/drive/v3/files/${fileId}?alt=media`,\n              {\n                method: 'GET',\n                headers: new Headers({\n                  Authorization: `Bearer ${\n                    googleUser.getAuthResponse().access_token\n                  }`,\n                }),\n              }\n            )\n          )\n          .then(\n            response => {\n              return response.text().then(\n                fileContent => {\n                  return new Promise((resolve, reject) => {\n                    try {\n                      const dataObject = JSON.parse(fileContent);\n                      return resolve({\n                        content: dataObject,\n                      });\n                    } catch (ex) {\n                      return reject(fileId + ' is a corrupted/malformed file.');\n                    }\n                  });\n                },\n                error => {\n                  console.error(\n                    'Error while reading the file from Google Drive API: ',\n                    error\n                  );\n                  throw error;\n                }\n              );\n            },\n            error => {\n              console.error(\n                'Error while fetching the file from Google Drive API: ',\n                error\n              );\n              throw error;\n            }\n          );\n      },\n      onOpenWithPicker: (): Promise<?FileMetadata> => {\n        return authenticate()\n          .then(googleUser =>\n            showFilePicker({ selectFolderEnabled: false, showUploadView: true })\n          )\n          .then(googleDriveFileOrFolder => {\n            if (!googleDriveFileOrFolder) {\n              return null;\n            }\n\n            return {\n              fileIdentifier: googleDriveFileOrFolder.id,\n            };\n          });\n      },\n      onSaveProject: (project: gdProject, fileMetadata: FileMetadata) => {\n        const fileId = fileMetadata.fileIdentifier;\n\n        const content = serializeToJSON(project);\n        return authenticate()\n          .then(googleUser => patchJsonFile(fileId, googleUser, content))\n          .then(() => ({\n            wasSaved: true,\n            fileMetadata,\n          }));\n      },\n      onSaveProjectAs: (project: gdProject, fileMetadata: ?FileMetadata) => {\n        return new Promise(resolve => {\n          setDialog(() => (\n            <GoogleDriveSaveAsDialog\n              onShowFilePicker={showFilePicker}\n              onCancel={() => {\n                closeDialog();\n                resolve({ wasSaved: false, fileMetadata });\n              }}\n              onSave={({ selectedFileOrFolder, newFileName }) => {\n                const content = serializeToJSON(project);\n\n                if (selectedFileOrFolder.type === 'FOLDER') {\n                  return authenticate().then(googleUser =>\n                    createNewJsonFile(\n                      selectedFileOrFolder.id,\n                      newFileName\n                    ).then(newFileId =>\n                      patchJsonFile(newFileId, googleUser, content).then(() => {\n                        closeDialog();\n                        resolve({\n                          wasSaved: true,\n                          fileMetadata: {\n                            fileIdentifier: newFileId,\n                          },\n                        });\n                      })\n                    )\n                  );\n                } else {\n                  return authenticate()\n                    .then(googleUser =>\n                      patchJsonFile(\n                        selectedFileOrFolder.id,\n                        googleUser,\n                        content\n                      )\n                    )\n                    .then(() => {\n                      closeDialog();\n                      resolve({\n                        wasSaved: true,\n                        fileMetadata: {\n                          fileIdentifier: selectedFileOrFolder.id,\n                        },\n                      });\n                    });\n                }\n              }}\n            />\n          ));\n        });\n      },\n      getOpenErrorMessage: (error: Error): MessageDescriptor => {\n        if (!apisLoaded) {\n          return t`Google Drive could not be loaded. Check that your are not offline and have a proper internet connection, then try again.`;\n        }\n\n        return t`Check that you don't have any blocked popup (if so, allow them and retry) and that you have the authorizations for reading the file you're trying to access.`;\n      },\n    };\n  },\n}: StorageProvider);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M7.71,3.5L1.15,15L4.58,21L11.13,9.5M9.73,15L6.3,21H19.42L22.85,15M22.28,14L15.42,2H8.58L8.57,2L15.43,14H22.28Z\" />\n  </SvgIcon>\n));\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport RaisedButton from '../../UI/RaisedButton';\nimport TextField from '../../UI/TextField';\nimport { type GoogleDriveFileOrFolder } from '.';\n\ntype Props = {|\n  floatingLabelText: React.Node,\n  value: ?GoogleDriveFileOrFolder,\n  onOpenPicker: () => void,\n|};\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'baseline',\n    width: '100%',\n  },\n  button: {\n    marginLeft: 10,\n  },\n  textField: {\n    flex: 1,\n  },\n};\n\nexport default (props: Props) => {\n  return (\n    <div\n      style={{\n        ...styles.container,\n      }}\n    >\n      <TextField\n        style={styles.textField}\n        floatingLabelText={props.floatingLabelText}\n        floatingLabelFixed\n        type=\"text\"\n        hintText={t`Choose a file or folder`}\n        value={props.value ? props.value.name : ''}\n        onChange={() => {}}\n      />\n      <RaisedButton\n        label={<Trans>Choose...</Trans>}\n        primary\n        style={styles.button}\n        onClick={props.onOpenPicker}\n      />\n    </div>\n  );\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport { Column, Line } from '../../UI/Grid';\nimport GoogleDriveFileOrFolderPicker from './GoogleDriveFileOrFolderPicker';\nimport {\n  type GoogleDriveFileOrFolder,\n  type GoogleDriveFilePickerOptions,\n} from '.';\nimport TextField from '../../UI/TextField';\nimport LeftLoader from '../../UI/LeftLoader';\nimport AlertMessage from '../../UI/AlertMessage';\n\ntype Props = {|\n  onCancel: () => void,\n  onSave: ({|\n    selectedFileOrFolder: GoogleDriveFileOrFolder,\n    newFileName: string,\n  |}) => Promise<void>,\n  onShowFilePicker: GoogleDriveFilePickerOptions => Promise<?GoogleDriveFileOrFolder>,\n|};\n\n/**\n * A \"Save as\" dialog for Google Drive, allowing to pick a file to overwrite or a folder\n * and a new filename where to save the game.\n */\nexport default (props: Props) => {\n  const [selectedFileOrFolder, setSelectedFileOrFolder] = React.useState(\n    (null: ?GoogleDriveFileOrFolder)\n  );\n  const [newFileName, setNewFileName] = React.useState('');\n  const [saving, setSaving] = React.useState(false);\n  const [saveError, setSaveError] = React.useState((null: ?Error));\n  const [pickerError, setPickerError] = React.useState((null: ?Error));\n  const [dialogHidden, hideDialog] = React.useState(false);\n\n  const canSave = () => {\n    if (saving) return;\n    if (!selectedFileOrFolder) return;\n\n    return selectedFileOrFolder.type === 'FOLDER' ? !!newFileName : true;\n  };\n  const save = () => {\n    if (!selectedFileOrFolder) return;\n\n    setSaveError(null);\n    setSaving(true);\n    props\n      .onSave({\n        selectedFileOrFolder,\n        newFileName,\n      })\n      .catch(error => {\n        setSaveError(error);\n        setSaving(false);\n      });\n  };\n  const canCancel = () => !saving;\n  const cancel = () => {\n    if (!canCancel()) return;\n\n    props.onCancel();\n  };\n  const openPicker = () => {\n    hideDialog(true);\n    setPickerError(null);\n    props\n      .onShowFilePicker({ selectFolderEnabled: true, showUploadView: false })\n      .then(selectedFileOrFolder => {\n        setSelectedFileOrFolder(selectedFileOrFolder);\n        hideDialog(false);\n      })\n      .catch(error => {\n        setPickerError(error);\n        hideDialog(false);\n      });\n  };\n\n  // Hide the dialog while the picker is opened, as it does not play nice with material-ui's\n  // Dialog.\n  if (dialogHidden) {\n    return null;\n  }\n\n  return (\n    <Dialog\n      title={<Trans>Save on Google Drive</Trans>}\n      actions={[\n        <FlatButton\n          key=\"cancel\"\n          label={<Trans>Cancel</Trans>}\n          primary={false}\n          disabled={!canCancel()}\n          onClick={props.onCancel}\n        />,\n        <LeftLoader key=\"save\" isLoading={saving}>\n          <FlatButton\n            label={<Trans>Save</Trans>}\n            primary\n            disabled={!canSave()}\n            onClick={save}\n          />\n        </LeftLoader>,\n      ]}\n      cannotBeDismissed={true}\n      open\n      onRequestClose={cancel}\n      maxWidth=\"sm\"\n    >\n      <Column noMargin>\n        <Line>\n          <GoogleDriveFileOrFolderPicker\n            floatingLabelText={\n              <Trans>Google Drive folder or existing file to overwrite</Trans>\n            }\n            value={selectedFileOrFolder}\n            onOpenPicker={openPicker}\n          />\n        </Line>\n        <Line>\n          {selectedFileOrFolder && selectedFileOrFolder.type === 'FOLDER' ? (\n            <TextField\n              floatingLabelText={<Trans>New file name</Trans>}\n              floatingLabelFixed\n              type=\"text\"\n              hintText={t`YourGame.json`}\n              value={newFileName}\n              onChange={(event, newFileName) => setNewFileName(newFileName)}\n              fullWidth\n            />\n          ) : null}\n        </Line>\n        {saveError && (\n          <Line>\n            <AlertMessage kind=\"error\">\n              There was an error when saving your game. Verify that you have the\n              rights on the folder or file that you selected and try again.\n            </AlertMessage>\n          </Line>\n        )}\n        {pickerError && (\n          <Line>\n            <AlertMessage kind=\"error\">\n              There was an error when selecting a file or folder from Google\n              Drive. Try again later or verify that you are properly connected\n              to Google Drive.\n            </AlertMessage>\n          </Line>\n        )}\n      </Column>\n    </Dialog>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport { type Exporter } from '../ExportDialog';\nimport { browserOnlineCordovaExportPipeline } from './BrowserOnlineCordovaExport.js';\nimport { browserOnlineElectronExportPipeline } from './BrowserOnlineElectronExport.js';\nimport { browserOnlineWebExportPipeline } from './BrowserOnlineWebExport';\nimport { browserHTML5ExportPipeline } from './BrowserHTML5Export';\nimport { browserCordovaExportPipeline } from './BrowserCordovaExport';\nimport { browserElectronExportPipeline } from './BrowserElectronExport';\nimport { browserCocos2dExportPipeline } from './BrowserCocos2dExport';\nimport { browserFacebookInstantGamesExportPipeline } from './BrowserFacebookInstantGamesExport';\nimport PhoneIphone from '@material-ui/icons/PhoneIphone';\nimport LaptopMac from '@material-ui/icons/LaptopMac';\nimport Folder from '@material-ui/icons/Folder';\nimport Facebook from '../../UI/CustomSvgIcons/Facebook';\nimport Cordova from '../../UI/CustomSvgIcons/Cordova';\nimport Chrome from '../../UI/CustomSvgIcons/Chrome';\n\nexport const getBrowserExporters = (): Array<Exporter> => [\n  {\n    name: <Trans>Android (&amp; iOS coming soon)</Trans>,\n    renderIcon: props => <PhoneIphone {...props} />,\n    helpPage: '/publishing/android_and_ios',\n    description: (\n      <Trans>\n        Package your game for Android directly from GDevelop. iOS support is\n        coming soon!\n      </Trans>\n    ),\n    key: 'browseronlinecordovaexport',\n    exportPipeline: browserOnlineCordovaExportPipeline,\n  },\n  {\n    name: <Trans>Web (upload online)</Trans>,\n    renderIcon: props => <Chrome {...props} />,\n    helpPage: '/publishing/web',\n    description: (\n      <Trans>\n        Upload your game online directly from GDevelop and share the link to\n        players. Play to your game using your browser on computers and mobile\n        phones.\n      </Trans>\n    ),\n    key: 'browsers3export',\n    exportPipeline: browserOnlineWebExportPipeline,\n  },\n  {\n    name: <Trans>HTML5 game (zip)</Trans>,\n    renderIcon: props => <Folder {...props} />,\n    helpPage: '/publishing/html5_game_in_a_local_folder',\n    description: (\n      <Trans>\n        Build the game locally as a HTML5 game. You can then publish it on\n        website like Kongregate, Game Jolt, itch.io, Poki...\n      </Trans>\n    ),\n    key: 'browserhtml5export',\n    exportPipeline: browserHTML5ExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>Facebook Instant Games</Trans>,\n    renderIcon: props => <Facebook {...props} />,\n    helpPage: '/publishing/publishing-to-facebook-instant-games',\n    description: (\n      <Trans>\n        Package your game as a Facebook Instant Games that can be played on\n        Facebook Messenger.\n      </Trans>\n    ),\n    key: 'browserfacebookinstantgames',\n    exportPipeline: browserFacebookInstantGamesExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>iOS &amp; Android (manual)</Trans>,\n    renderIcon: props => <Cordova {...props} />,\n    helpPage: '/publishing/android_and_ios_with_cordova',\n    description: (\n      <Trans>\n        Build the game locally as a Cordova project, and export it manually then\n        to iOS or Android with Cordova developers tools.\n      </Trans>\n    ),\n    key: 'browsercordovaexport',\n    exportPipeline: browserCordovaExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>Windows/macOS/Linux</Trans>,\n    renderIcon: props => <LaptopMac {...props} />,\n    helpPage: '/publishing/windows-macos-linux',\n    description: (\n      <Trans>\n        Package your game as an app for Windows, macOS or Linux directly from\n        GDevelop.\n      </Trans>\n    ),\n    key: 'browseronlineelectronexport',\n    exportPipeline: browserOnlineElectronExportPipeline,\n  },\n  {\n    name: <Trans>Windows/macOS/Linux (manual)</Trans>,\n    renderIcon: props => <LaptopMac {...props} />,\n    helpPage: '/publishing/windows-macos-linux-with-electron',\n    description: (\n      <Trans>\n        Build the game locally and export it manually to Windows, macOS or Linux\n        with third-party developer tools.\n      </Trans>\n    ),\n    key: 'browserelectronexport',\n    exportPipeline: browserElectronExportPipeline,\n    advanced: true,\n  },\n  {\n    name: <Trans>Cocos2d-JS</Trans>,\n    renderIcon: props => <PhoneIphone {...props} />,\n    helpPage: '/publishing/android_and_ios_with_cocos2d-js',\n    description: (\n      <Trans>\n        Export your game using Cocos2d-JS game engine. The game can be compiled\n        for Android or iOS if you install Cocos2d-JS developer tools.\n      </Trans>\n    ),\n    key: 'browsercocos2dexport',\n    exportPipeline: browserCocos2dExportPipeline,\n    experimental: true,\n  },\n];\n\n/**\n * Open an URL generated from a blob, to download it with the specified filename.\n */\nexport const openBlobDownloadUrl = (url: string, filename: string) => {\n  const { body } = document;\n  if (!body) return;\n\n  // Not using Window.openExternalURL because blob urls are blocked\n  // by Adblock Plus (and maybe other ad blockers).\n  const a = document.createElement('a');\n  body.appendChild(a);\n  a.style.display = 'none';\n  a.href = url;\n  a.download = filename;\n  a.click();\n  body.removeChild(a);\n};\n","// @flow\nimport * as React from 'react';\n\ntype Props = {\n  blob: ?Blob,\n  children: (blobDownloadUrl: string) => React.Node,\n};\n\nexport const BlobDownloadUrlHolder = ({ blob, children }: Props) => {\n  const [blobDownloadUrl, setBlobDownloadUrl] = React.useState('');\n  React.useEffect(\n    () => {\n      // Release the existing blob URL, if any.\n      if (blobDownloadUrl) {\n        URL.revokeObjectURL(blobDownloadUrl);\n      }\n\n      if (blob) {\n        setBlobDownloadUrl(URL.createObjectURL(blob));\n      } else {\n        setBlobDownloadUrl('');\n      }\n\n      return () => {\n        // Release the blob URL if component is unmounted.\n        if (blobDownloadUrl) {\n          URL.revokeObjectURL(blobDownloadUrl);\n        }\n      };\n    },\n    [blob, blobDownloadUrl]\n  );\n\n  return children(blobDownloadUrl);\n};\n","// @flow\nimport axios from 'axios';\nimport { GDevelopGamePreviews } from './ApiConfigs';\nimport { getSignedUrl } from './Usage';\n\nexport type UploadedObject = {|\n  Key: string,\n  Body: string,\n  ContentType: 'text/javascript' | 'text/html',\n|};\n\nexport const uploadObject = (params: UploadedObject): Promise<any> => {\n  return getSignedUrl({\n    uploadType: 'preview',\n    key: params.Key,\n    contentType: params.ContentType,\n  }).then(({ signedUrl }) =>\n    axios.put(signedUrl, params.Body, {\n      headers: {\n        'Content-Type': params.ContentType,\n      },\n    })\n  );\n};\n\nexport const getBaseUrl = () => {\n  return GDevelopGamePreviews.baseUrl;\n};\n","// @flow\nimport axios from 'axios';\n\ntype UploadOptions = {\n  signedUrl: string,\n  contentType: string,\n};\n\nexport const uploadBlobFile = (\n  blob: Blob,\n  uploadOptions: UploadOptions,\n  onProgress: (progress: number, total: number) => void\n): Promise<void> => {\n  return axios\n    .put(uploadOptions.signedUrl, blob, {\n      headers: {\n        'Content-Type': uploadOptions.contentType,\n      },\n      // Allow any arbitrary large file to be sent\n      maxContentLength: Infinity,\n      onUploadProgress: progressEvent => {\n        if (!progressEvent || !progressEvent.total) {\n          onProgress(0, 0);\n          return;\n        }\n\n        onProgress(progressEvent.loaded, progressEvent.total);\n      },\n    })\n    .then(() => undefined);\n};\n","// @flow\n// This file is generated by update-fixtures-from-resources-examples.js script\n\nimport exampleFile0 from '../../fixtures/admob/admob.json';\nimport exampleFile1 from '../../fixtures/advanced-shape-based-painter/advanced-shape-based-painter.json';\nimport exampleFile2 from '../../fixtures/animation-speed-scale/animation-speed-scale.json';\nimport exampleFile3 from '../../fixtures/asteroids/asteroids.json';\nimport exampleFile4 from '../../fixtures/basic-ai-with-pathfinding/basic-ai-with-pathfinding.json';\nimport exampleFile5 from '../../fixtures/basic-artificial-intelligence/basic-artificial-intelligence.json';\nimport exampleFile6 from '../../fixtures/basic-topdown-car-driving/basic-topdown-car-driving.json';\nimport exampleFile7 from '../../fixtures/bbtext-object-demo/bbtext-object-demo.json';\nimport exampleFile8 from '../../fixtures/betabox-basics-learning-experience/betabox-basics-learning-experience.json';\nimport exampleFile9 from '../../fixtures/bomb-the-crate/bomb-the-crate.json';\nimport exampleFile10 from '../../fixtures/bouncing-ball-and-rope/bouncing-ball-and-rope.json';\nimport exampleFile11 from '../../fixtures/breakout/breakout.json';\nimport exampleFile12 from '../../fixtures/buttons/buttons.json';\nimport exampleFile13 from '../../fixtures/cannon-ball-with-physics/cannon-ball-with-physics.json';\nimport exampleFile14 from '../../fixtures/car-physics/car-physics.json';\nimport exampleFile15 from '../../fixtures/center-object-within-another/center-object-within-another.json';\nimport exampleFile16 from '../../fixtures/change-position-of-object/change-position-of-object.json';\nimport exampleFile17 from '../../fixtures/change-scale-of-sprites/change-scale-of-sprites.json';\nimport exampleFile18 from '../../fixtures/change-sprite-animation/change-sprite-animation.json';\nimport exampleFile19 from '../../fixtures/change-sprite-color/change-sprite-color.json';\nimport exampleFile20 from '../../fixtures/character-selection/character-selection.json';\nimport exampleFile21 from '../../fixtures/count-down-timer/count-down-timer.json';\nimport exampleFile22 from '../../fixtures/create-object-with-mouseclick/create-object-with-mouseclick.json';\nimport exampleFile23 from '../../fixtures/create-random-object/create-random-object.json';\nimport exampleFile24 from '../../fixtures/custom-font/custom-font.json';\nimport exampleFile25 from '../../fixtures/custom-mouse-pointer/custom-mouse-pointer.json';\nimport exampleFile26 from '../../fixtures/customize-keys-with-lastpressedkey/customize-keys-with-lastpressedkey.json';\nimport exampleFile27 from '../../fixtures/device-orientation-ballgame/device-orientation-ballgame.json';\nimport exampleFile28 from '../../fixtures/device-orientation-compass/device-orientation-compass.json';\nimport exampleFile29 from '../../fixtures/device-vibration/device-vibration.json';\nimport exampleFile30 from '../../fixtures/dialogue-tree-with-yarn/dialogue-tree-with-yarn.json';\nimport exampleFile31 from '../../fixtures/downhill-bike-physics-demo/downhill-bike-physics-demo.json';\nimport exampleFile32 from '../../fixtures/drag-camera-with-mouse/drag-camera-with-mouse.json';\nimport exampleFile33 from '../../fixtures/drop-collect-items-from-storage/drop-collect-items-from-storage.json';\nimport exampleFile34 from '../../fixtures/endless-up-runner/endless-up-runner.json';\nimport exampleFile35 from '../../fixtures/exit-app/exit-app.json';\nimport exampleFile36 from '../../fixtures/facebook-instant-game/facebook-instant-game.json';\nimport exampleFile37 from '../../fixtures/filesystem-create-directory/filesystem-create-directory.json';\nimport exampleFile38 from '../../fixtures/find-diagonals/find-diagonals.json';\nimport exampleFile39 from '../../fixtures/flappy-bird/flappy-bird.json';\nimport exampleFile40 from '../../fixtures/geodash/geodash.json';\nimport exampleFile41 from '../../fixtures/geometry-monster/geometry-monster.json';\nimport exampleFile42 from '../../fixtures/health-bar/health-bar.json';\nimport exampleFile43 from '../../fixtures/infinite-scrolling-background/infinite-scrolling-background.json';\nimport exampleFile44 from '../../fixtures/inventory-system/inventory-system.json';\nimport exampleFile45 from '../../fixtures/isometric-game/isometric-game.json';\nimport exampleFile46 from '../../fixtures/javascript-blocks-in-platformer/javascript-blocks-in-platformer.json';\nimport exampleFile47 from '../../fixtures/keyboard-practice/keyboard-practice.json';\nimport exampleFile48 from '../../fixtures/level-editor/level-editor.json';\nimport exampleFile49 from '../../fixtures/level-selection-unlock/level-selection-unlock.json';\nimport exampleFile50 from '../../fixtures/load-image-from-url/load-image-from-url.json';\nimport exampleFile51 from '../../fixtures/magnet/magnet.json';\nimport exampleFile52 from '../../fixtures/manipulate-text-object/manipulate-text-object.json';\nimport exampleFile53 from '../../fixtures/menu-with-functions-and-text-effects/menu-with-functions-and-text-effects.json';\nimport exampleFile54 from '../../fixtures/move-camera-to-position/move-camera-to-position.json';\nimport exampleFile55 from '../../fixtures/move-object-back-and-forth/move-object-back-and-forth.json';\nimport exampleFile56 from '../../fixtures/move-object-in-circle/move-object-in-circle.json';\nimport exampleFile57 from '../../fixtures/move-object-toward-position/move-object-toward-position.json';\nimport exampleFile58 from '../../fixtures/move-object-with-mouse-joint/move-object-with-mouse-joint.json';\nimport exampleFile59 from '../../fixtures/move-object-with-physics/move-object-with-physics.json';\nimport exampleFile60 from '../../fixtures/multi-language-menu/multi-language-menu.json';\nimport exampleFile61 from '../../fixtures/multiplayer-platformer-with-gamepads/multiplayer-platformer-with-gamepads.json';\nimport exampleFile62 from '../../fixtures/multitouch/multitouch.json';\nimport exampleFile63 from '../../fixtures/object-gravity/object-gravity.json';\nimport exampleFile64 from '../../fixtures/object-selection/object-selection.json';\nimport exampleFile65 from '../../fixtures/objects-timers/objects-timers.json';\nimport exampleFile66 from '../../fixtures/open-url-in-browser/open-url-in-browser.json';\nimport exampleFile67 from '../../fixtures/pairs/pairs.json';\nimport exampleFile68 from '../../fixtures/parallax/parallax.json';\nimport exampleFile69 from '../../fixtures/parallax-scrolling/parallax-scrolling.json';\nimport exampleFile70 from '../../fixtures/parse-json-from-api/parse-json-from-api.json';\nimport exampleFile71 from '../../fixtures/parse-json-string/parse-json-string.json';\nimport exampleFile72 from '../../fixtures/particles-explosions/particles-explosions.json';\nimport exampleFile73 from '../../fixtures/particles-various-effects/particles-various-effects.json';\nimport exampleFile74 from '../../fixtures/pathfinding/pathfinding.json';\nimport exampleFile75 from '../../fixtures/pathfinding-basics/pathfinding-basics.json';\nimport exampleFile76 from '../../fixtures/physics/physics.json';\nimport exampleFile77 from '../../fixtures/physics-joints-demo/physics-joints-demo.json';\nimport exampleFile78 from '../../fixtures/physics-joints-settings-demo/physics-joints-settings-demo.json';\nimport exampleFile79 from '../../fixtures/pin-object-to-another/pin-object-to-another.json';\nimport exampleFile80 from '../../fixtures/pin-object-to-another-multiple-parents/pin-object-to-another-multiple-parents.json';\nimport exampleFile81 from '../../fixtures/pixel-perfect-platform-game/pixel-perfect-platform-game.json';\nimport exampleFile82 from '../../fixtures/plane-and-clouds/plane-and-clouds.json';\nimport exampleFile83 from '../../fixtures/platformer/platformer.json';\nimport exampleFile84 from '../../fixtures/platformer-double-jump/platformer-double-jump.json';\nimport exampleFile85 from '../../fixtures/play-music-on-mobile/play-music-on-mobile.json';\nimport exampleFile86 from '../../fixtures/play-stop-sprite-animation/play-stop-sprite-animation.json';\nimport exampleFile87 from '../../fixtures/racing-game/racing-game.json';\nimport exampleFile88 from '../../fixtures/ragdoll/ragdoll.json';\nimport exampleFile89 from '../../fixtures/rain/rain.json';\nimport exampleFile90 from '../../fixtures/random-color-picker/random-color-picker.json';\nimport exampleFile91 from '../../fixtures/rotate-toward-mouse/rotate-toward-mouse.json';\nimport exampleFile92 from '../../fixtures/rotate-toward-position/rotate-toward-position.json';\nimport exampleFile93 from '../../fixtures/rotate-with-keypress/rotate-with-keypress.json';\nimport exampleFile94 from '../../fixtures/save-load/save-load.json';\nimport exampleFile95 from '../../fixtures/screen-shake/screen-shake.json';\nimport exampleFile96 from '../../fixtures/shoot-bullet-in-parabola/shoot-bullet-in-parabola.json';\nimport exampleFile97 from '../../fixtures/shoot-bullets/shoot-bullets.json';\nimport exampleFile98 from '../../fixtures/shooting-bullets-explanation/shooting-bullets-explanation.json';\nimport exampleFile99 from '../../fixtures/simple-space-shooter/simple-space-shooter.json';\nimport exampleFile100 from '../../fixtures/snap-object-to-grid/snap-object-to-grid.json';\nimport exampleFile101 from '../../fixtures/space-invaders/space-invaders.json';\nimport exampleFile102 from '../../fixtures/space-shooter/space-shooter.json';\nimport exampleFile103 from '../../fixtures/splash-screen/splash-screen.json';\nimport exampleFile104 from '../../fixtures/sprite-fade-in-out/sprite-fade-in-out.json';\nimport exampleFile105 from '../../fixtures/take-screenshot/take-screenshot.json';\nimport exampleFile106 from '../../fixtures/text-entry-object/text-entry-object.json';\nimport exampleFile107 from '../../fixtures/text-fade-in-out/text-fade-in-out.json';\nimport exampleFile108 from '../../fixtures/text-to-speech/text-to-speech.json';\nimport exampleFile109 from '../../fixtures/toggle-music-play-sound/toggle-music-play-sound.json';\nimport exampleFile110 from '../../fixtures/type-on-text-effect/type-on-text-effect.json';\nimport exampleFile111 from '../../fixtures/unlock-items/unlock-items.json';\nimport exampleFile112 from '../../fixtures/video-player/video-player.json';\nimport exampleFile113 from '../../fixtures/z-depth/z-depth.json';\nimport exampleFile114 from '../../fixtures/zombie-laser/zombie-laser.json';\n\n// prettier-ignore\nexport default {\n  'example://admob': exampleFile0,\n  'example://advanced-shape-based-painter': exampleFile1,\n  'example://animation-speed-scale': exampleFile2,\n  'example://asteroids': exampleFile3,\n  'example://basic-ai-with-pathfinding': exampleFile4,\n  'example://basic-artificial-intelligence': exampleFile5,\n  'example://basic-topdown-car-driving': exampleFile6,\n  'example://bbtext-object-demo': exampleFile7,\n  'example://betabox-basics-learning-experience': exampleFile8,\n  'example://bomb-the-crate': exampleFile9,\n  'example://bouncing-ball-and-rope': exampleFile10,\n  'example://breakout': exampleFile11,\n  'example://buttons': exampleFile12,\n  'example://cannon-ball-with-physics': exampleFile13,\n  'example://car-physics': exampleFile14,\n  'example://center-object-within-another': exampleFile15,\n  'example://change-position-of-object': exampleFile16,\n  'example://change-scale-of-sprites': exampleFile17,\n  'example://change-sprite-animation': exampleFile18,\n  'example://change-sprite-color': exampleFile19,\n  'example://character-selection': exampleFile20,\n  'example://count-down-timer': exampleFile21,\n  'example://create-object-with-mouseclick': exampleFile22,\n  'example://create-random-object': exampleFile23,\n  'example://custom-font': exampleFile24,\n  'example://custom-mouse-pointer': exampleFile25,\n  'example://customize-keys-with-lastpressedkey': exampleFile26,\n  'example://device-orientation-ballgame': exampleFile27,\n  'example://device-orientation-compass': exampleFile28,\n  'example://device-vibration': exampleFile29,\n  'example://dialogue-tree-with-yarn': exampleFile30,\n  'example://downhill-bike-physics-demo': exampleFile31,\n  'example://drag-camera-with-mouse': exampleFile32,\n  'example://drop-collect-items-from-storage': exampleFile33,\n  'example://endless-up-runner': exampleFile34,\n  'example://exit-app': exampleFile35,\n  'example://facebook-instant-game': exampleFile36,\n  'example://filesystem-create-directory': exampleFile37,\n  'example://find-diagonals': exampleFile38,\n  'example://flappy-bird': exampleFile39,\n  'example://geodash': exampleFile40,\n  'example://geometry-monster': exampleFile41,\n  'example://health-bar': exampleFile42,\n  'example://infinite-scrolling-background': exampleFile43,\n  'example://inventory-system': exampleFile44,\n  'example://isometric-game': exampleFile45,\n  'example://javascript-blocks-in-platformer': exampleFile46,\n  'example://keyboard-practice': exampleFile47,\n  'example://level-editor': exampleFile48,\n  'example://level-selection-unlock': exampleFile49,\n  'example://load-image-from-url': exampleFile50,\n  'example://magnet': exampleFile51,\n  'example://manipulate-text-object': exampleFile52,\n  'example://menu-with-functions-and-text-effects': exampleFile53,\n  'example://move-camera-to-position': exampleFile54,\n  'example://move-object-back-and-forth': exampleFile55,\n  'example://move-object-in-circle': exampleFile56,\n  'example://move-object-toward-position': exampleFile57,\n  'example://move-object-with-mouse-joint': exampleFile58,\n  'example://move-object-with-physics': exampleFile59,\n  'example://multi-language-menu': exampleFile60,\n  'example://multiplayer-platformer-with-gamepads': exampleFile61,\n  'example://multitouch': exampleFile62,\n  'example://object-gravity': exampleFile63,\n  'example://object-selection': exampleFile64,\n  'example://objects-timers': exampleFile65,\n  'example://open-url-in-browser': exampleFile66,\n  'example://pairs': exampleFile67,\n  'example://parallax': exampleFile68,\n  'example://parallax-scrolling': exampleFile69,\n  'example://parse-json-from-api': exampleFile70,\n  'example://parse-json-string': exampleFile71,\n  'example://particles-explosions': exampleFile72,\n  'example://particles-various-effects': exampleFile73,\n  'example://pathfinding': exampleFile74,\n  'example://pathfinding-basics': exampleFile75,\n  'example://physics': exampleFile76,\n  'example://physics-joints-demo': exampleFile77,\n  'example://physics-joints-settings-demo': exampleFile78,\n  'example://pin-object-to-another': exampleFile79,\n  'example://pin-object-to-another-multiple-parents': exampleFile80,\n  'example://pixel-perfect-platform-game': exampleFile81,\n  'example://plane-and-clouds': exampleFile82,\n  'example://platformer': exampleFile83,\n  'example://platformer-double-jump': exampleFile84,\n  'example://play-music-on-mobile': exampleFile85,\n  'example://play-stop-sprite-animation': exampleFile86,\n  'example://racing-game': exampleFile87,\n  'example://ragdoll': exampleFile88,\n  'example://rain': exampleFile89,\n  'example://random-color-picker': exampleFile90,\n  'example://rotate-toward-mouse': exampleFile91,\n  'example://rotate-toward-position': exampleFile92,\n  'example://rotate-with-keypress': exampleFile93,\n  'example://save-load': exampleFile94,\n  'example://screen-shake': exampleFile95,\n  'example://shoot-bullet-in-parabola': exampleFile96,\n  'example://shoot-bullets': exampleFile97,\n  'example://shooting-bullets-explanation': exampleFile98,\n  'example://simple-space-shooter': exampleFile99,\n  'example://snap-object-to-grid': exampleFile100,\n  'example://space-invaders': exampleFile101,\n  'example://space-shooter': exampleFile102,\n  'example://splash-screen': exampleFile103,\n  'example://sprite-fade-in-out': exampleFile104,\n  'example://take-screenshot': exampleFile105,\n  'example://text-entry-object': exampleFile106,\n  'example://text-fade-in-out': exampleFile107,\n  'example://text-to-speech': exampleFile108,\n  'example://toggle-music-play-sound': exampleFile109,\n  'example://type-on-text-effect': exampleFile110,\n  'example://unlock-items': exampleFile111,\n  'example://video-player': exampleFile112,\n  'example://z-depth': exampleFile113,\n  'example://zombie-laser': exampleFile114,\n};\n","// @flow\nimport { t } from '@lingui/macro';\nimport { type StorageProvider, type FileMetadata } from '../index';\nimport internalExampleFiles from './InternalExampleFiles';\nimport {\n  POSITIONAL_ARGUMENTS_KEY,\n  type AppArguments,\n} from '../../Utils/Window';\n\n/**\n * \"Internal\" storage giving access to embedded examples.\n * Used for the web-app.\n */\nexport default ({\n  internalName: 'InternalFile',\n  name: t`Internal files`,\n  hiddenInOpenDialog: true,\n  hiddenInSaveDialog: true,\n  getFileMetadataFromAppArguments: (appArguments: AppArguments) => {\n    if (!appArguments[POSITIONAL_ARGUMENTS_KEY]) return null;\n    if (!appArguments[POSITIONAL_ARGUMENTS_KEY].length) return null;\n\n    return {\n      fileIdentifier: appArguments[POSITIONAL_ARGUMENTS_KEY][0],\n    };\n  },\n  createOperations: ({ setDialog, closeDialog }) => ({\n    onOpen: (fileMetadata: FileMetadata) => {\n      const url = fileMetadata.fileIdentifier;\n      if (internalExampleFiles[url])\n        return Promise.resolve({\n          content: internalExampleFiles[url],\n        });\n\n      return Promise.reject(new Error(`Unknown built-in game with URL ${url}`));\n    },\n  }),\n}: StorageProvider);\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport { sendNewGameCreated } from '../Utils/Analytics/EventSender';\nimport { Column, Line } from '../UI/Grid';\nimport Text from '../UI/Text';\nimport ExamplesList from './ExamplesList';\nimport InternalFileStorageProvider from '../ProjectsStorage/InternalFileStorageProvider';\nimport ExamplesInformation from './ExamplesInformation';\n\n// To add a new example, add it first in resources/examples (at which point you can see it\n// in the desktop version), then run these scripts:\n// * scripts/update-examples-information-from-resources-examples.js (update metadata)\n// * scripts/update-fixtures-from-resources-examples.js (update web-app examples)\n// and upload the examples to `gdevelop-resources` s3.\nconst exampleNames: Array<string> = Object.keys(ExamplesInformation);\n\nexport default class BrowserExamples extends Component {\n  render() {\n    return (\n      <Column noMargin>\n        <Line>\n          <Column>\n            <Text>\n              <Trans>Choose or search for an example to open:</Trans>\n            </Text>\n          </Column>\n        </Line>\n        <Line>\n          <ExamplesList\n            exampleNames={exampleNames}\n            onCreateFromExample={exampleName => {\n              sendNewGameCreated(exampleName);\n              this.props.onOpen(InternalFileStorageProvider, {\n                fileIdentifier: `example://${exampleName}`,\n              });\n            }}\n          />\n        </Line>\n      </Column>\n    );\n  }\n}\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport Dialog from '../UI/Dialog';\nimport Window from '../Utils/Window';\nimport FlatButton from '../UI/FlatButton';\nimport Text from '../UI/Text';\nimport { ResponsiveWindowMeasurer } from '../UI/Reponsive/ResponsiveWindowMeasurer';\nimport Fullscreen from '@material-ui/icons/Fullscreen';\nimport RaisedButton from '../UI/RaisedButton';\nimport { Spacer, Line } from '../UI/Grid';\n\nexport default class BetaIntroDialog extends Component {\n  _onOpenWebsite() {\n    Window.openExternalURL('http://gdevelop-app.com');\n  }\n\n  render() {\n    const { open, onClose } = this.props;\n\n    return (\n      <ResponsiveWindowMeasurer>\n        {windowWidth => (\n          <Dialog\n            title={<Trans>Welcome to GDevelop</Trans>}\n            actions={[\n              <FlatButton\n                key=\"download\"\n                label={<Trans>Download GDevelop desktop app</Trans>}\n                primary={false}\n                onClick={this._onOpenWebsite}\n              />,\n              <FlatButton\n                label={<Trans>Close</Trans>}\n                primary={false}\n                onClick={onClose}\n                key=\"close\"\n              />,\n            ]}\n            cannotBeDismissed={false}\n            open={open}\n            onRequestClose={onClose}\n          >\n            <div>\n              <Text>\n                <Trans>\n                  This is a version of GDevelop 5 that you can try online.\n                </Trans>\n              </Text>\n              <Text>\n                Choose a <b>new project to create</b>, then edit the scene or\n                the events ruling the game. You can{' '}\n                <b>launch a preview of your game</b> at any time.\n              </Text>\n              <Text>\n                <Trans>\n                  Download the full version of GDevelop on your desktop computer\n                  to create your own game without limits!\n                </Trans>\n              </Text>\n              {windowWidth === 'small' &&\n                (!Window.isFullscreen() ? (\n                  <React.Fragment>\n                    <Spacer />\n                    <Text>\n                      <Trans>\n                        You're working on a small screen. It's recommended to\n                        activate Fullscreen Mode for using GDevelop.\n                      </Trans>\n                    </Text>\n                    <Line justifyContent=\"center\">\n                      <RaisedButton\n                        label={<Trans>Activate Fullscreen</Trans>}\n                        primary\n                        onClick={() => {\n                          Window.requestFullscreen();\n                          setTimeout(() => {\n                            this.forceUpdate();\n                          }, 250 /* Let a bit of time for the fullscreen to kick in */);\n                        }}\n                        icon={<Fullscreen />}\n                      />\n                    </Line>\n                  </React.Fragment>\n                ) : (\n                  <Line justifyContent=\"center\">\n                    <RaisedButton\n                      label={<Trans>Start using GDevelop</Trans>}\n                      primary\n                      onClick={onClose}\n                    />\n                  </Line>\n                ))}\n            </div>\n          </Dialog>\n        )}\n      </ResponsiveWindowMeasurer>\n    );\n  }\n}\n","// @flow\nimport Window from '../Utils/Window';\nimport { type ResourceExternalEditor } from './ResourceExternalEditor.flow';\nimport { sendExternalEditorOpened } from '../Utils/Analytics/EventSender';\n\n/**\n * This is the list of editors that can be used to edit resources\n * when running in a browser.\n */\nconst editors: Array<ResourceExternalEditor> = [\n  {\n    name: 'piskel-app',\n    displayName: 'Edit with Piskel',\n    kind: 'image',\n    edit: () => {\n      sendExternalEditorOpened('piskel');\n      Window.showMessageBox(\n        'This feature is only supported in the desktop version for now!\\nDownload it from GDevelop website.'\n      );\n    },\n  },\n  {\n    name: 'jfxr-app',\n    displayName: 'Edit with Jfxr',\n    kind: 'audio',\n    edit: () => {\n      sendExternalEditorOpened('jfxr');\n      Window.showMessageBox(\n        'This feature is only supported in the desktop version for now!\\nDownload it from GDevelop website.'\n      );\n    },\n  },\n  {\n    name: 'yarn-app',\n    displayName: 'Edit with Yarn',\n    kind: 'json',\n    edit: () => {\n      sendExternalEditorOpened('yarn');\n      Window.showMessageBox(\n        'This feature is only supported in the desktop version for now!\\nDownload it from GDevelop website.'\n      );\n    },\n  },\n];\n\nexport default editors;\n","// @flow\nimport { type EventsFunctionCodeWriter } from '..';\nimport { uploadObject, getBaseUrl } from '../../Utils/GDevelopServices/Preview';\nimport { makeTimestampedId } from '../../Utils/TimestampedId';\nimport slugs from 'slugs';\n\n/**\n * Create the EventsFunctionCodeWriter that writes generated code for events functions\n * to temporary S3 files.\n */\nexport const makeBrowserS3EventsFunctionCodeWriter = (): EventsFunctionCodeWriter => {\n  const prefix = makeTimestampedId();\n  const getPathFor = (codeNamespace: string) => {\n    return `${prefix}/${slugs(codeNamespace)}.js`;\n  };\n\n  return {\n    getIncludeFileFor: (codeNamespace: string) =>\n      getBaseUrl() + getPathFor(codeNamespace),\n    writeFunctionCode: (\n      functionCodeNamespace: string,\n      code: string\n    ): Promise<void> => {\n      const key = getPathFor(functionCodeNamespace);\n      console.log(`Uploading function generated code to ${key}...`);\n      return uploadObject({\n        Key: getPathFor(functionCodeNamespace),\n        Body: code,\n        ContentType: 'text/javascript',\n      });\n    },\n    writeBehaviorCode: (\n      behaviorCodeNamespace: string,\n      code: string\n    ): Promise<void> => {\n      const key = getPathFor(behaviorCodeNamespace);\n      console.log(`Uploading behavior generated code to ${key}...`);\n      return uploadObject({\n        Key: getPathFor(behaviorCodeNamespace),\n        Body: code,\n        ContentType: 'text/javascript',\n      });\n    },\n  };\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport * as React from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from '../../UI/FlatButton';\nimport RaisedButton from '../../UI/RaisedButton';\nimport { Column, Line } from '../../UI/Grid';\nimport Window from '../../Utils/Window';\nimport { serializeToJSObject } from '../../Utils/Serializer';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport Text from '../../UI/Text';\n\ntype Props = {|\n  project: gdProject,\n  onDone: () => void,\n|};\n\nexport default class DownloadSaveAsDialog extends React.Component<Props> {\n  _download = () => {\n    let content = '';\n    try {\n      content = JSON.stringify(serializeToJSObject(this.props.project));\n    } catch (err) {\n      showErrorBox('Unable to save your project', err);\n      return;\n    }\n    var uri = encodeURI('data:application/json;charset=utf-8,' + content);\n\n    var downloadLink = document.createElement('a');\n    downloadLink.href = uri;\n    downloadLink.download = 'game.json';\n\n    const { body } = document;\n    if (!body) return;\n\n    body.appendChild(downloadLink);\n    downloadLink.click();\n    body.removeChild(downloadLink);\n  };\n\n  render() {\n    const { onDone } = this.props;\n\n    const actions = [\n      <FlatButton\n        key=\"download\"\n        label={<Trans>Download GDevelop desktop version</Trans>}\n        primary={false}\n        onClick={() => Window.openExternalURL('http://gdevelop-app.com')}\n      />,\n      <FlatButton\n        key=\"close\"\n        label={<Trans>Close</Trans>}\n        primary={false}\n        onClick={onDone}\n      />,\n    ];\n\n    return (\n      <Dialog\n        actions={actions}\n        open\n        cannotBeDismissed={false}\n        onRequestClose={onDone}\n        maxWidth=\"sm\"\n      >\n        <Column noMargin>\n          <Line>\n            <Text>\n              <Trans>\n                You can download the file of your game to continue working on it\n                using the full GDevelop version:\n              </Trans>\n            </Text>\n          </Line>\n          <Line>\n            <Column expand>\n              <RaisedButton\n                label={<Trans>Download game file</Trans>}\n                fullWidth\n                primary\n                onClick={this._download}\n              />\n            </Column>\n          </Line>\n        </Column>\n      </Dialog>\n    );\n  }\n}\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { type StorageProvider, type FileMetadata } from '../index';\nimport DownloadSaveAsDialog from './DownloadSaveAsDialog';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\n\n/**\n * \"Storage\" allowing to download a copy of the game.\n * Used for the web-app.\n */\nexport default ({\n  internalName: 'DownloadFile',\n  name: t`Download a copy`,\n  renderIcon: () => <SaveAlt />,\n  hiddenInOpenDialog: true,\n  createOperations: ({ setDialog, closeDialog }) => ({\n    onSaveProjectAs: (project: gdProject, fileMetadata: ?FileMetadata) => {\n      return new Promise(resolve => {\n        setDialog(() => (\n          <DownloadSaveAsDialog\n            onDone={() => {\n              closeDialog();\n              resolve({ wasSaved: false, fileMetadata });\n            }}\n            project={project}\n          />\n        ));\n      });\n    },\n  }),\n}: StorageProvider);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M12,14.56L16.35,18.16L18.2,16.95V18.3L12,22L5.82,18.3V16.95L7.68,18.16L12,14.56M7.68,2.5L12,6.09L16.32,2.5L22.5,6.5L18.23,9.94L22.5,13.36L16.32,17.39L12,13.78L7.68,17.39L1.5,13.36L5.77,9.94L1.5,6.5L7.68,2.5M12,13.68L18.13,9.94L12,6.19L5.87,9.94L12,13.68Z\" />\n  </SvgIcon>\n));\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { type StorageProvider, type FileMetadata } from '../index';\nimport Dropbox from '../../UI/CustomSvgIcons/Dropbox';\n\nlet apisLoaded = false;\nlet apisLoadingPromise = null;\n\n/**\n * Load Dropbox APIs. Return a fulfilled promise when done.\n */\nconst initializeApis = (): Promise<void> => {\n  if (apisLoaded) {\n    return Promise.resolve();\n  }\n\n  if (apisLoadingPromise) {\n    // Only do a single initialization attempt at a given time.\n    return apisLoadingPromise;\n  }\n\n  apisLoadingPromise = new Promise((resolve, reject) => {\n    reject(new Error('Unimplemented'));\n  })\n    .then(() => {\n      apisLoaded = true;\n      apisLoadingPromise = null;\n    })\n    .catch(error => {\n      console.error('Error while loading Dropbox APIs:', error);\n      apisLoadingPromise = null;\n\n      throw error;\n    });\n\n  return apisLoadingPromise;\n};\n\ntype DropboxUser = {};\n\n/**\n * Sign in the user to Dropbox, returning the user object after a successful sign up\n * (or if the user is already signed in).\n */\nexport const authenticate = (): Promise<DropboxUser> => {\n  return initializeApis().then(() => {\n    throw new Error('Unimplemented');\n  });\n};\n\n/**\n * A storage that is using Dropbox to open and store files.\n */\nexport default ({\n  internalName: 'Dropbox',\n  name: t`Dropbox (coming soon)`,\n  disabled: true,\n  renderIcon: () => <Dropbox />,\n  createOperations: ({ setDialog, closeDialog }) => {\n    initializeApis().catch(() => {});\n\n    return {\n      doesInitialOpenRequireUserInteraction: true,\n      onOpen: (\n        fileMetadata: FileMetadata\n      ): Promise<{|\n        content: Object,\n      |}> => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n      onOpenWithPicker: (): Promise<?FileMetadata> => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n      onSaveProject: (project: gdProject, fileMetadata: FileMetadata) => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n      onSaveProjectAs: (project: gdProject, fileMetadata: ?FileMetadata) => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n    };\n  },\n}: StorageProvider);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nexport default React.memo(props => (\n  <SvgIcon {...props}>\n    <path d=\"M20.08,13.64C21.17,13.81 22,14.75 22,15.89C22,16.78 21.5,17.55 20.75,17.92L20.58,18H9.18L9.16,18V18C7.71,18 6.54,16.81 6.54,15.36C6.54,13.9 7.72,12.72 9.18,12.72L9.4,12.73L9.39,12.53A3.3,3.3 0 0,1 12.69,9.23C13.97,9.23 15.08,9.96 15.63,11C16.08,10.73 16.62,10.55 17.21,10.55A2.88,2.88 0 0,1 20.09,13.43L20.08,13.64M8.82,12.16C7.21,12.34 5.96,13.7 5.96,15.36C5.96,16.04 6.17,16.66 6.5,17.18H4.73A2.73,2.73 0 0,1 2,14.45C2,13 3.12,11.83 4.53,11.73L4.46,11.06C4.46,9.36 5.84,8 7.54,8C8.17,8 8.77,8.18 9.26,8.5C9.95,7.11 11.4,6.15 13.07,6.15C15.27,6.15 17.08,7.83 17.3,9.97H17.21C16.73,9.97 16.27,10.07 15.84,10.25C15.12,9.25 13.96,8.64 12.69,8.64C10.67,8.64 9,10.19 8.82,12.16Z\" />\n  </SvgIcon>\n));\n","// @flow\nimport { t } from '@lingui/macro';\nimport * as React from 'react';\nimport { type StorageProvider, type FileMetadata } from '../index';\nimport OneDrive from '../../UI/CustomSvgIcons/OneDrive';\n\nlet apisLoaded = false;\nlet apisLoadingPromise = null;\n\n/**\n * Load OneDrive APIs. Return a fulfilled promise when done.\n */\nconst initializeApis = (): Promise<void> => {\n  if (apisLoaded) {\n    return Promise.resolve();\n  }\n\n  if (apisLoadingPromise) {\n    // Only do a single initialization attempt at a given time.\n    return apisLoadingPromise;\n  }\n\n  apisLoadingPromise = new Promise((resolve, reject) => {\n    reject(new Error('Unimplemented'));\n  })\n    .then(() => {\n      apisLoaded = true;\n      apisLoadingPromise = null;\n    })\n    .catch(error => {\n      console.error('Error while loading OneDrive APIs:', error);\n      apisLoadingPromise = null;\n\n      throw error;\n    });\n\n  return apisLoadingPromise;\n};\n\ntype OneDriveUser = {};\n\n/**\n * Sign in the user to OneDrive, returning the user object after a successful sign up\n * (or if the user is already signed in).\n */\nexport const authenticate = (): Promise<OneDriveUser> => {\n  return initializeApis().then(() => {\n    throw new Error('Unimplemented');\n  });\n};\n\n/**\n * A storage that is using OneDrive to open and store files.\n */\nexport default ({\n  internalName: 'OneDrive',\n  name: t`OneDrive (coming soon)`,\n  disabled: true,\n  renderIcon: () => <OneDrive />,\n  createOperations: ({ setDialog, closeDialog }) => {\n    initializeApis().catch(() => {});\n\n    return {\n      doesInitialOpenRequireUserInteraction: true,\n      onOpen: (\n        fileMetadata: FileMetadata\n      ): Promise<{|\n        content: Object,\n      |}> => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n      onOpenWithPicker: (): Promise<?FileMetadata> => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n      onSaveProject: (project: gdProject, fileMetadata: FileMetadata) => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n      onSaveProjectAs: (project: gdProject, fileMetadata: ?FileMetadata) => {\n        return Promise.reject(new Error('Unimplemented'));\n      },\n    };\n  },\n}: StorageProvider);\n","// @flow\nimport * as React from 'react';\nimport MainFrame from './MainFrame';\nimport Window from './Utils/Window';\nimport ExportDialog from './Export/ExportDialog';\nimport CreateProjectDialog from './ProjectCreation/CreateProjectDialog';\nimport Authentification from './Utils/GDevelopServices/Authentification';\nimport './UI/iconmoon-font.css'; // Styles for Iconmoon font.\n\n// Import for browser only IDE\nimport BrowserExamples from './ProjectCreation/BrowserExamples';\nimport BrowserStarters from './ProjectCreation/BrowserStarters';\nimport BrowserIntroDialog from './MainFrame/BrowserIntroDialog';\nimport browserResourceSources from './ResourcesList/BrowserResourceSources';\nimport browserResourceExternalEditors from './ResourcesList/BrowserResourceExternalEditors';\nimport BrowserS3PreviewLauncher from './Export/BrowserExporters/BrowserS3PreviewLauncher';\nimport { getBrowserExporters } from './Export/BrowserExporters';\nimport makeExtensionsLoader from './JsExtensionsLoader/BrowserJsExtensionsLoader';\nimport ObjectsEditorService from './ObjectEditor/ObjectsEditorService';\nimport ObjectsRenderingService from './ObjectsRendering/ObjectsRenderingService';\nimport { makeBrowserS3EventsFunctionCodeWriter } from './EventsFunctionsExtensionsLoader/CodeWriters/BrowserS3EventsFunctionCodeWriter';\nimport Providers from './MainFrame/Providers';\nimport ProjectStorageProviders from './ProjectsStorage/ProjectStorageProviders';\nimport InternalFileStorageProvider from './ProjectsStorage/InternalFileStorageProvider';\nimport GoogleDriveStorageProvider from './ProjectsStorage/GoogleDriveStorageProvider';\nimport DownloadFileStorageProvider from './ProjectsStorage/DownloadFileStorageProvider';\nimport DropboxStorageProvider from './ProjectsStorage/DropboxStorageProvider';\nimport OneDriveStorageProvider from './ProjectsStorage/OneDriveStorageProvider';\nimport UnsavedChangesContext from './MainFrame/UnsavedChangesContext';\n\nexport const create = (authentification: Authentification) => {\n  Window.setUpContextMenu();\n\n  let app = null;\n  const appArguments = Window.getArguments();\n\n  app = (\n    <Providers\n      authentification={authentification}\n      disableCheckForUpdates={!!appArguments['disable-update-check']}\n      eventsFunctionCodeWriter={makeBrowserS3EventsFunctionCodeWriter()}\n      eventsFunctionsExtensionWriter={null}\n      eventsFunctionsExtensionOpener={null}\n    >\n      {({ i18n, eventsFunctionsExtensionsState }) => (\n        <ProjectStorageProviders\n          appArguments={appArguments}\n          storageProviders={[\n            InternalFileStorageProvider,\n            GoogleDriveStorageProvider,\n            DropboxStorageProvider,\n            OneDriveStorageProvider,\n            DownloadFileStorageProvider,\n          ]}\n          defaultStorageProvider={InternalFileStorageProvider}\n        >\n          {({\n            currentStorageProviderOperations,\n            useStorageProvider,\n            storageProviders,\n            initialFileMetadataToOpen,\n          }) => (\n            <UnsavedChangesContext.Consumer>\n              {unsavedChanges => (\n                <MainFrame\n                  i18n={i18n}\n                  eventsFunctionsExtensionsState={\n                    eventsFunctionsExtensionsState\n                  }\n                  renderPreviewLauncher={(props, ref) => (\n                    <BrowserS3PreviewLauncher {...props} ref={ref} />\n                  )}\n                  renderExportDialog={props => (\n                    <ExportDialog\n                      {...props}\n                      exporters={getBrowserExporters()}\n                      allExportersRequireOnline\n                    />\n                  )}\n                  renderCreateDialog={props => (\n                    <CreateProjectDialog\n                      {...props}\n                      examplesComponent={BrowserExamples}\n                      startersComponent={BrowserStarters}\n                    />\n                  )}\n                  introDialog={<BrowserIntroDialog />}\n                  storageProviders={storageProviders}\n                  useStorageProvider={useStorageProvider}\n                  storageProviderOperations={currentStorageProviderOperations}\n                  resourceSources={browserResourceSources}\n                  resourceExternalEditors={browserResourceExternalEditors}\n                  extensionsLoader={makeExtensionsLoader({\n                    objectsEditorService: ObjectsEditorService,\n                    objectsRenderingService: ObjectsRenderingService,\n                    filterExamples: !Window.isDev(),\n                  })}\n                  initialFileMetadataToOpen={initialFileMetadataToOpen}\n                  unsavedChanges={unsavedChanges}\n                />\n              )}\n            </UnsavedChangesContext.Consumer>\n          )}\n        </ProjectStorageProviders>\n      )}\n    </Providers>\n  );\n\n  return app;\n};\n","// @flow\n\n/**\n * Load a script from the specified source. The returned promise\n * resolves when the script is loaded.\n * @param source The script source\n */\nexport const loadScript = (source: string): Promise<void> => {\n  return new Promise((resolve, reject) => {\n    if (typeof document === 'undefined') {\n      reject(\n        new Error('loadScript is only supported in a browser environment.')\n      );\n      return;\n    }\n\n    const { body } = document;\n    if (!body) {\n      reject(\n        new Error('loadScript is only supported in a browser environment.')\n      );\n      return;\n    }\n\n    const scriptElement = document.createElement('script');\n    scriptElement.type = 'text/javascript';\n    scriptElement.src = source;\n    scriptElement.onload = () => resolve();\n    scriptElement.onerror = error => reject(error);\n    scriptElement.onabort = error => reject(error);\n\n    body.appendChild(scriptElement);\n  });\n};\n"],"sourceRoot":""}