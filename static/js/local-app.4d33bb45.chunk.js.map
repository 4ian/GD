{"version":3,"sources":["ExternalEditor/index.js","ExternalEditor/Bridge.js","ProjectCreation/LocalStarters.js","ResourcesList/LocalResourceSources.js","ResourcesList/LocalResourceExternalEditors.js","ResourcesList/LocalPiskelBridge.js","ResourcesList/LocalJfxrBridge.js","ProjectsStorage/LocalProjectWriter.js","ProjectsStorage/LocalProjectOpener.js","Export/LocalExporters/LocalPreviewLauncher/index.js","Export/LocalExporters/LocalPreviewLauncher/LocalNetworkPreviewDialog.js","Export/LocalExporters/LocalPreviewLauncher/LocalIpFinder.js","Export/LocalExporters/index.js","Export/LocalExporters/LocalS3Export.js","../node_modules/wait-promise/src/wait-promise.js","Export/LocalExporters/LocalOnlineCordovaExport/index.js","Export/LocalExporters/LocalCordovaExport.js","Export/LocalExporters/LocalCocos2dExport.js","Export/LocalExporters/LocalOnlineElectronExport/index.js","Export/LocalExporters/LocalFacebookInstantGamesExport/index.js","UI/LocalFilePicker/index.js","Export/LocalExporters/LocalFacebookInstantGamesExport/Progress.js","Export/LocalExporters/LocalElectronExport.js","MainFrame/ElectronMainMenu.js","JsExtensionsLoader/LocalJsExtensionsLoader.js","JsExtensionsLoader/LocalJsExtensionsFinder.js","EventsFunctionsExtensionsLoader/CodeWriters/LocalEventsFunctionCodeWriter.js","EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionWriter.js","EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionOpener.js","LocalApp.js","Export/LocalExporters/LocalFileSystem.js","UI/LocalFolderPicker/index.js","Utils/Archiver.js","ProjectCreation/LocalExamples.js","ProjectCreation/LocalExamplesFinder.js","ProjectCreation/LocalPathFinder.js","Utils/ObjectSplitter.js","Export/LocalExporters/LocalExport.js","Profile/LimitDisplayer.js","Export/Builds/BuildStepsProgress.js","../node_modules/material-ui/Stepper/index.js"],"names":["gd","global","ExternalEditor","props","_this","Object","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","editorOpened","lastShowCommandDate","sendingUpdate","editor","_serializedObject","_hideIfNotJustShown","Date","now","console","info","Window","hide","sendUpdate","log","state","loading","warn","elements","getSerializedElements","scope","hasOwnProperty","bridge","send","error","editObject","object","getName","requestUpdate","arguments","length","undefined","command","_onUpdateReceived","payload","setState","setTimeout","delete","t1","performance","Serializer","fromJSObject","t2","loadFromSerializedProject","openLayout","editedElementName","openEventsEditor","openExternalLayout","concat","Bridge","isSupported","onReceive","isIntegrated","setBounds","x","y","width","height","show","forceHide","onConnected","onBlur","onFocus","onClose","connectTo","serverPort","_this2","React","cloneElement","children","ref","onEditObject","integratedEditor","Component","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0___default","n","_Utils_TimeFunction_js__WEBPACK_IMPORTED_MODULE_1__","electron","optionalRequire","Buffer","remote","require","net","client","connected","_onReceiveCb","prototype","port","that","Socket","connect","_onConnected","data","nullCharacterBuffer","from","on","dataBuffer","startPos","nextNullCharacterPos","indexOf","slice","_receive","json","JSON","stringify","write","dataObject","timeFunction","parse","ex","time","cb","path","app","fs","LocalStarters","outputPath","findEmptyPath","join","getPath","_handleChangePath","i18n","exampleName","findExamples","examplesPath","mkdirsSync","copySync","showGameFileCreationError","onOpen","sendNewGameCreated","project","ProjectHelper","createNewGDJSProject","setProjectFile","onCreate","_this3","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_lingui_react__WEBPACK_IMPORTED_MODULE_5__","_ref","_UI_Grid__WEBPACK_IMPORTED_MODULE_11__","noMargin","id","expand","material_ui_List__WEBPACK_IMPORTED_MODULE_12__","leftAvatar","_UI_ListIcon__WEBPACK_IMPORTED_MODULE_16__","iconSize","src","primaryText","secondaryText","secondaryTextLines","onClick","createFromExample","createEmptyGame","alignItems","justifyContent","material_ui_RaisedButton__WEBPACK_IMPORTED_MODULE_8___default","label","onShowExamples","material_ui_Divider__WEBPACK_IMPORTED_MODULE_7___default","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_9__","fullWidth","value","onChange","type","dialog","__webpack_exports__","name","displayName","kind","component","_temp","_Component","LocalAudioFileOpener","_getPrototypeOf2","_len","args","Array","_key","apply","chooseResources","multiSelections","selectLocalResourcePath","title","extensions","then","resources","map","resourcePath","audioResource","AudioResource","projectPath","dirname","getProjectFile","setFile","relative","setName","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","_temp2","_Component2","LocalFileOpener","_getPrototypeOf3","_len2","_key2","imageResource","ImageResource","_temp3","_Component3","LocalFontFileOpener","_getPrototypeOf4","_len3","_key3","fontResource","FontResource","_temp4","_Component4","LocalVideoFileOpener","_getPrototypeOf5","_this4","_len4","_key4","VideoResource","options","Promise","resolve","reject","properties","push","browserWindow","getCurrentWindow","showOpenDialog","filters","defaultPath","paths","confirmResourcePath","_LocalPiskelBridge__WEBPACK_IMPORTED_MODULE_0__","_LocalJfxrBridge__WEBPACK_IMPORTED_MODULE_1__","_Utils_Analytics_EventSender__WEBPACK_IMPORTED_MODULE_2__","editors","edit","sendExternalEditorOpened","openPiskel","openJfxr","ipcRenderer","resourceNames","resourcesLoader","singleFrame","onChangesSaved","extraOptions","resourceName","originalIndex","getLocalResourceFullPath","externalEditorData","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","removeAllListeners","event","outputResources","newAnimationName","metadata","pskl","resourcesManager","getResourcesManager","forEach","resource","createOrUpdateResource","getResource","setMetadata","d","_ResourceUtils_js__WEBPACK_IMPORTED_MODULE_1__","initialResourceMetadata","newFilePath","jfxr","writeJSONFile","filepath","Error","content","ensureDir","writeFile","err","stringifyException","LocalProjectWriter","saveProject","serializedProjectObject","serializeToJSObject","isFolderProject","partialObjects","split","pathSeparator","getArrayItemReferenceName","getSlugifiedUniqueNameFromProperty","shouldSplit","splitPaths","Set","isReferenceMagicPropertyName","all","partialObject","reference","catch","autoSaveProject","autoSavePath","readJSONFile","readFile","encoding","LocalProjectOpener","chooseProjectFile","message","readProjectFile","unsplit","getReferencePartialObject","referencePath","maxUnsplitDepth","shouldOpenAutosave","filePath","compareLastModified","existsSync","statSync","mtime","getTime","BrowserWindow","LocalPreviewLauncher","canDoNetworkPreview","networkPreviewDialogOpen","networkPreviewHost","networkPreviewPort","networkPreviewError","previewGamePath","previewBrowserWindowConfig","_subscriptionChecker","_openPreviewBrowserWindow","loadURL","_openPreviewWindow","gamePath","getMainWindowDefaultWidth","getMainWindowDefaultHeight","useContentSize","backgroundColor","networkPreview","serverParams","_checkSubscription","ipAddresses","findLocalIp","root","_prepareExporter","findGDJS","gdjsRoot","fileSystem","assignIn","AbstractFileSystemJS","localFileSystem","outputDir","getTempDir","exporter","Exporter","launchLayoutPreview","layout","exportLayoutForPixiPreview","launchExternalLayoutPreview","externalLayout","_ref2","exportExternalLayoutForPixiPreview","checkHasSubscription","_this$state","react__WEBPACK_IMPORTED_MODULE_6__","_Profile_SubscriptionChecker__WEBPACK_IMPORTED_MODULE_14__","subscriptionChecker","onChangeSubscription","mode","_LocalNetworkPreviewDialog__WEBPACK_IMPORTED_MODULE_11__","open","url","onExport","onRunPreviewLocally","LocalNetworkDialog","_this$props","_UI_Dialog__WEBPACK_IMPORTED_MODULE_7__","actions","material_ui_FlatButton__WEBPACK_IMPORTED_MODULE_8___default","primary","secondaryActions","modal","onRequestClose","_UI_Grid__WEBPACK_IMPORTED_MODULE_10__","_UI_PlaceholderLoader__WEBPACK_IMPORTED_MODULE_11__","material_ui_TextField__WEBPACK_IMPORTED_MODULE_9___default","firstLocalIp","find","ipAddress","getLocalExporters","react__WEBPACK_IMPORTED_MODULE_0__","_LocalExport__WEBPACK_IMPORTED_MODULE_1__","_LocalS3Export__WEBPACK_IMPORTED_MODULE_2__","_LocalOnlineCordovaExport__WEBPACK_IMPORTED_MODULE_3__","_LocalCordovaExport__WEBPACK_IMPORTED_MODULE_4__","_LocalCocos2dExport__WEBPACK_IMPORTED_MODULE_5__","_LocalOnlineElectronExport__WEBPACK_IMPORTED_MODULE_6__","_LocalFacebookInstantGamesExport__WEBPACK_IMPORTED_MODULE_7__","_LocalElectronExport__WEBPACK_IMPORTED_MODULE_8__","material_ui_svg_icons_hardware_phone_iphone__WEBPACK_IMPORTED_MODULE_9__","material_ui_svg_icons_hardware_phone_iphone__WEBPACK_IMPORTED_MODULE_9___default","material_ui_svg_icons_hardware_laptop_mac__WEBPACK_IMPORTED_MODULE_10__","material_ui_svg_icons_hardware_laptop_mac__WEBPACK_IMPORTED_MODULE_10___default","material_ui_svg_icons_file_folder__WEBPACK_IMPORTED_MODULE_11__","material_ui_svg_icons_file_folder__WEBPACK_IMPORTED_MODULE_11___default","_UI_CustomSvgIcons_Facebook__WEBPACK_IMPORTED_MODULE_12__","_UI_CustomSvgIcons_Cordova__WEBPACK_IMPORTED_MODULE_13__","_UI_CustomSvgIcons_Chrome__WEBPACK_IMPORTED_MODULE_14__","renderIcon","helpPage","description","ExportComponent","LocalOnlineCordovaExport","LocalFacebookInstantGamesExport","LocalS3Export","LocalExport","advanced","LocalCordovaExport","LocalOnlineElectronExport","LocalElectronExport","LocalCocos2dExport","experimental","os","shell","_uploadToS3","localDir","uploadProgress","uploadMax","prefix","uploadDone","_deploy","sleep","axios","GDevelopHostingApi","deployEndpoint","method","params","response","deployDone","deployedPrefix","launchExport","sendExportLaunched","exportStarted","exportDone","tmpdir","makeTimestampedId","prepareExporter","exportOptions","MapStringBoolean","exportWholePixiProject","uploadPrefix","deployPrefix","gamesHost","openURL","openExternal","renderUrl","_UI_Grid__WEBPACK_IMPORTED_MODULE_13__","material_ui_TextField__WEBPACK_IMPORTED_MODULE_17___default","style","flex","material_ui_RaisedButton__WEBPACK_IMPORTED_MODULE_9___default","material_ui_LinearProgress__WEBPACK_IMPORTED_MODULE_14___default","max","disabled","Wait","interval","beforeTime","afterTime","limit","every","before","after","startTime","expires","and","func","routine","_limit","Infinity","check","cond","until","forward","till","self","timer","called","f","res","clearInterval","setInterval","module","exports","_limit2","exportStep","build","errored","buildsWatcher","BuildsWatcher","set","showErrorBox","launchCompression","archiveOutputDir","archiveFolder","outputFilename","launchUpload","outputFile","launchBuild","userProfile","uploadBucketKey","getAuthorizationHeader","profile","buildCordovaAndroid","uid","startBuildWatch","start","builds","onBuildUpdated","launchWholeExport","t","str","displayProjectErrorsBox","getErrors","handleError","rawError","_download","openExternalURL","getUrl","stop","getBuildLimit","limits","canLaunchBuild","limitReached","react__WEBPACK_IMPORTED_MODULE_5___default","_Profile_UserProfileContext__WEBPACK_IMPORTED_MODULE_10__","Consumer","authenticated","material_ui_RaisedButton__WEBPACK_IMPORTED_MODULE_7___default","_Profile_LimitDisplayer__WEBPACK_IMPORTED_MODULE_19__","subscription","_Profile_CreateProfile__WEBPACK_IMPORTED_MODULE_18__","onLogin","_Builds_BuildStepsProgress__WEBPACK_IMPORTED_MODULE_22__","onDownload","mkDir","clearDir","exportFinishedDialogOpen","setLastCompilationDirectory","openExportFolder","openItem","openPhoneGapBuild","getLastCompilationDirectory","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_15__","_UI_HelpButton__WEBPACK_IMPORTED_MODULE_16__","helpPagePath","debugMode","exportWholeCocos2dProject","_UI_Grid__WEBPACK_IMPORTED_MODULE_12__","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_17__","material_ui_Toggle__WEBPACK_IMPORTED_MODULE_10___default","onToggle","e","toggled","labelPosition","_UI_HelpButton__WEBPACK_IMPORTED_MODULE_13__","targets","buildElectron","_setTarget","targetName","enable","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","filter","react__WEBPACK_IMPORTED_MODULE_7___default","_Profile_UserProfileContext__WEBPACK_IMPORTED_MODULE_13__","_UI_Grid__WEBPACK_IMPORTED_MODULE_14__","material_ui_Checkbox__WEBPACK_IMPORTED_MODULE_10___default","_lingui_react__WEBPACK_IMPORTED_MODULE_6__","checked","onCheck","_Profile_LimitDisplayer__WEBPACK_IMPORTED_MODULE_22__","_Profile_CreateProfile__WEBPACK_IMPORTED_MODULE_21__","_Builds_BuildStepsProgress__WEBPACK_IMPORTED_MODULE_25__","showSeeAllMyBuildsExplanation","archiveOutputFilename","openLearnMore","getHelpLink","_UI_Grid__WEBPACK_IMPORTED_MODULE_9__","_UI_LocalFilePicker__WEBPACK_IMPORTED_MODULE_10__","_Progress__WEBPACK_IMPORTED_MODULE_14__","onOpenExportFolder","onOpenLearnMore","styles","container","position","display","button","marginLeft","textField","LocalFilePicker","onChooseFolder","showSaveDialog","filename","material_ui_TextField__WEBPACK_IMPORTED_MODULE_8___default","floatingLabelText","floatingLabelFixed","hintText","material_ui_FlatButton__WEBPACK_IMPORTED_MODULE_9___default","PureComponent","react__WEBPACK_IMPORTED_MODULE_1__","material_ui_Stepper__WEBPACK_IMPORTED_MODULE_2__","activeStep","orientation","_UI_Grid__WEBPACK_IMPORTED_MODULE_6__","material_ui_CircularProgress__WEBPACK_IMPORTED_MODULE_3___default","size","_lingui_react__WEBPACK_IMPORTED_MODULE_0__","material_ui_FlatButton__WEBPACK_IMPORTED_MODULE_5___default","material_ui_RaisedButton__WEBPACK_IMPORTED_MODULE_4___default","ElectronMainMenu","_editor","chooseProject","save","askToCloseProject","openExportDialog","openCreateDialog","openProjectManager","openStartPage","openDebugger","openAboutDialog","openPreferences","openLanguage","openProfile","status","setUpdateStatus","language","_language","_buildAndSendMenuTemplate","fileTemplate","_","submenu","accelerator","onClickSendEvent","enabled","isMacLike","editTemplate","role","viewTemplate","windowTemplate","helpTemplate","onClickOpenLink","template","unshift","loadExtension","findJsExtensionModules","objectsEditorService","objectsRenderingService","filterExamples","loadAllExtensions","extensionModulePaths","extensionModulePath","extensionModule","rethrowException","result","registerEditorConfigurations","registerInstanceRenderers","JsPlatform","get","extensionsRoot","readdir","extensionFolders","filteredExtensionFolders","folder","extensionFolder","extensionFolderPath","jsExtensionModulePath","stat","stats","isFile","modulePaths","modulePath","makeLocalEventsFunctionCodeWriter","slugs__WEBPACK_IMPORTED_MODULE_1__","slugs__WEBPACK_IMPORTED_MODULE_1___default","mkdir","code","getPathFor","codeNamespace","slugs","getIncludeFileFor","writeFunctionCode","functionCodeNamespace","writeBehaviorCode","behaviorCodeNamespace","LocalEventsFunctionsExtensionWriter","chooseEventsFunctionExtensionFile","writeEventsFunctionsExtension","extension","LocalEventsFunctionsExtensionOpener","readEventsFunctionExtensionFile","r","create","react__WEBPACK_IMPORTED_MODULE_0___default","_MainFrame__WEBPACK_IMPORTED_MODULE_1__","_Utils_Window__WEBPACK_IMPORTED_MODULE_2__","_Export_ExportDialog__WEBPACK_IMPORTED_MODULE_3__","_ProjectCreation_CreateProjectDialog__WEBPACK_IMPORTED_MODULE_4__","_ExternalEditor__WEBPACK_IMPORTED_MODULE_7__","_ProjectCreation_LocalExamples__WEBPACK_IMPORTED_MODULE_8__","_ProjectCreation_LocalStarters__WEBPACK_IMPORTED_MODULE_9__","_ResourcesList_LocalResourceSources__WEBPACK_IMPORTED_MODULE_10__","_ResourcesList_LocalResourceExternalEditors__WEBPACK_IMPORTED_MODULE_11__","_ProjectsStorage_LocalProjectWriter__WEBPACK_IMPORTED_MODULE_12__","_ProjectsStorage_LocalProjectOpener__WEBPACK_IMPORTED_MODULE_13__","_Export_LocalExporters_LocalPreviewLauncher__WEBPACK_IMPORTED_MODULE_14__","_Export_LocalExporters__WEBPACK_IMPORTED_MODULE_15__","_MainFrame_ElectronMainMenu__WEBPACK_IMPORTED_MODULE_16__","_JsExtensionsLoader_LocalJsExtensionsLoader__WEBPACK_IMPORTED_MODULE_17__","_JsExtensionsLoader_LocalJsExtensionsLoader__WEBPACK_IMPORTED_MODULE_17___default","_EventsFunctionsExtensionsLoader_CodeWriters_LocalEventsFunctionCodeWriter__WEBPACK_IMPORTED_MODULE_18__","_ObjectEditor_ObjectsEditorService__WEBPACK_IMPORTED_MODULE_19__","_ObjectsRendering_ObjectsRenderingService__WEBPACK_IMPORTED_MODULE_20__","_MainFrame_Providers__WEBPACK_IMPORTED_MODULE_21__","_EventsFunctionsExtensionsLoader_Storage_LocalEventsFunctionsExtensionWriter__WEBPACK_IMPORTED_MODULE_22__","_EventsFunctionsExtensionsLoader_Storage_LocalEventsFunctionsExtensionOpener__WEBPACK_IMPORTED_MODULE_23__","authentification","setUpContextMenu","appArguments","getArguments","disableCheckForUpdates","eventsFunctionCodeWriter","eventsFunctionsExtensionWriter","eventsFunctionsExtensionOpener","eventsFunctionsExtensionsState","resourceSources","localResourceSources","onReadFromPathOrURL","resourceExternalEditors","localResourceExternalEditors","initialPathsOrURLsToOpen","previewLauncher","exportDialog","exporters","createDialog","examplesComponent","LocalExamples","startersComponent","onSaveProject","onAutoSaveProject","onChooseProject","extensionsLoader","makeExtensionsLoader","ObjectsEditorService","ObjectsRenderingService","isDev","dirExists","readdirSync","file","curPath","lstatSync","isDirectory","unlinkSync","fileNameFrom","fullpath","_isExternalURL","_translateURL","basename","dirNameFrom","makeAbsolute","baseDirectory","isAbsolute","normalize","makeRelative","charAt","copyFile","source","dest","copyDir","writeToFile","contents","outputFileSync","readFileSync","toString","readDir","ext","toUpperCase","output","VectorString","push_back","fileExists","substr","LocalFolderPicker","_onChooseFolder","_getTitleAndMessage","_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0__","_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_0___default","archiver","createWriteStream","archive","zlib","level","pointer","pipe","directory","finalize","showWarningBox","values","exampleNames","onExamplesLoaded","_ExamplesList__WEBPACK_IMPORTED_MODULE_14__","onCreateFromExample","_UI_LocalFolderPicker__WEBPACK_IMPORTED_MODULE_8__","process","tryPath","onExists","onNoAccess","access","constants","R_OK","appPath","getAppPath","cwd","_Utils_NewNameGenerator__WEBPACK_IMPORTED_MODULE_0__","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_1__","_Utils_OptionalRequire_js__WEBPACK_IMPORTED_MODULE_1___default","basePath","folderName","generateName","accessSync","createReference","_Users_florian_Projects_F_GD_newIDE_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","splitObject","currentObject","currentPath","currentReference","isArray","index","itemPath","itemReference","propertyName","propertyPath","propertyReference","_ref3","unsplitObject","depth","keys","indexOrPropertyName","referenceTo","has","existingNamesForReference","property","newName","newNameGenerator","_UI_AlertMessage__WEBPACK_IMPORTED_MODULE_20__","_UI_PlaceholderLoader__WEBPACK_IMPORTED_MODULE_4__","hasSubscription","planId","noSubscription","_UI_Grid__WEBPACK_IMPORTED_MODULE_3__","0","Math","current","1","material_ui_RaisedButton__WEBPACK_IMPORTED_MODULE_2___default","stepper","_UI_Grid__WEBPACK_IMPORTED_MODULE_5__","material_ui_LinearProgress__WEBPACK_IMPORTED_MODULE_4___default","_BuildProgress__WEBPACK_IMPORTED_MODULE_6__","_UI_EmptyMessage__WEBPACK_IMPORTED_MODULE_7__","defineProperty","Stepper","StepLabel","StepContent","StepButton","Step","_Step3","_interopRequireDefault","_StepButton3","_StepContent3","_StepLabel3","_Stepper3","obj","__esModule","default"],"mappings":"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","file":"static/js/local-app.4d33bb45.chunk.js","sourcesContent":["// @flow\n\nimport Bridge from './Bridge.js';\nimport React, { Component } from 'react';\nimport Window from '../Utils/Window.js';\nconst gd = global.gd;\n\ntype State = {\n  loading: boolean,\n};\n\ntype Props = {\n  serverPort: number,\n  isIntegrated: boolean,\n  editor: string,\n  editedElementName: string,\n  children: React$Element<any>,\n};\n\nclass ExternalEditor extends Component<Props, State> {\n  bridge: Bridge;\n  editorOpened: boolean = false;\n  lastShowCommandDate: number = 0;\n  sendingUpdate: boolean = false;\n  editor: any = null;\n  _serializedObject: any = null;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.bridge = new Bridge();\n    this.state = {\n      loading: false,\n    };\n\n    if (this.bridge.isSupported()) {\n      console.log('Connection to an external editor...');\n\n      this.bridge.onReceive((command, payload, scope) => {\n        if (command === 'update') {\n          this._onUpdateReceived(payload, scope);\n        } else if (command === 'setBounds') {\n          if (this.props.isIntegrated) {\n            Window.setBounds(\n              payload.x,\n              payload.y,\n              payload.width,\n              payload.height\n            );\n          }\n        } else if (command === 'show') {\n          this.lastShowCommandDate = Date.now();\n          Window.show();\n        } else if (command === 'hide') {\n          if (this.props.isIntegrated) {\n            Window.hide(payload && payload.forceHide);\n          }\n        }\n      });\n      this.bridge.onConnected(() => {\n        this.requestUpdate('', true);\n      });\n      Window.onBlur(() => {\n        if (this.props.isIntegrated) this._hideIfNotJustShown();\n        this.sendUpdate();\n      });\n      Window.onFocus(() => {\n        this.requestUpdate();\n      });\n      Window.onClose(() => {\n        this.sendUpdate();\n      });\n\n      this.bridge.connectTo(this.props.serverPort);\n    } else {\n      console.warn('Connection to an external editor is not supported');\n    }\n  }\n\n  _hideIfNotJustShown = () => {\n    // Sometime, we'll receive the blur event AFTER\n    // the external editor containing this editor\n    // received the activate event from the system (wxActivateEvent in the case of\n    // wxWidgets).\n    // So we'll receive a show command THEN hide, which is not what we want\n    // (we want to hide and then show again the editor if needed).\n    if (Date.now() - this.lastShowCommandDate < 100) {\n      console.info(\n        'The editor is not hidden because it receive a `show` command less ' +\n          'than 100ms ago.'\n      );\n      return;\n    }\n\n    Window.hide();\n  };\n\n  sendUpdate = () => {\n    console.log('Sending update to server editor');\n    if (this.state.loading) {\n      console.warn('Already loading an update, abort send');\n      return;\n    }\n    if (this.sendingUpdate) {\n      console.warn('Already sending an update, abort send');\n      return;\n    }\n    if (!this.editor) {\n      console.error(\n        'No children editor to use to get the updated edited element'\n      );\n      return;\n    }\n\n    this.sendingUpdate = true;\n    const elements = this.editor.getSerializedElements();\n    for (const scope in elements) {\n      if (elements.hasOwnProperty(scope)) {\n        this.bridge.send('update', elements[scope], scope);\n      }\n    }\n    this.sendingUpdate = false;\n\n    console.log('Update send done');\n  };\n\n  editObject = (object: gdObject) => {\n    this.sendUpdate();\n    this.bridge.send('editObject', object.getName());\n  };\n\n  /**\n   * Request an update to the server. Note that if forcedUpdate is set to false,\n   * the server may not send back an update (for example if nothing changed).\n   */\n  requestUpdate = (scope: string = '', forcedUpdate: boolean = false) => {\n    const command = forcedUpdate ? 'requestForcedUpdate' : 'requestUpdate';\n    this.bridge.send(command, undefined, scope);\n  };\n\n  _onUpdateReceived = (payload: any, scope: string) => {\n    console.log('Received project update from server');\n    if (scope !== '') {\n      console.warn(`Not implemented: received ${scope} update from server`);\n      return;\n    }\n\n    this.setState(\n      {\n        loading: true,\n      },\n      () =>\n        setTimeout(() => {\n          // Transform the payload into a gd.SerializerElement\n          // Note that gd.Serializer.fromJSObject returns a new gd.SerializerElement object at every call\n          if (this._serializedObject) this._serializedObject.delete();\n\n          var t1 = performance.now();\n          this._serializedObject = gd.Serializer.fromJSObject(payload);\n          var t2 = performance.now();\n          console.log(\n            'Call to gd.Serializer.fromJSObject took ' +\n              (t2 - t1) +\n              ' milliseconds.'\n          );\n\n          this.editor.loadFromSerializedProject(this._serializedObject, () => {\n            this._serializedObject.delete();\n            this._serializedObject = null;\n\n            if (!this.editorOpened) {\n              this.editorOpened = true;\n\n              if (this.props.editor === 'scene-editor') {\n                this.editor.openLayout(this.props.editedElementName, {\n                  openEventsEditor: false,\n                });\n              }\n              if (this.props.editor === 'external-layout-editor') {\n                this.editor.openExternalLayout(this.props.editedElementName);\n              }\n            }\n\n            this.setState({\n              loading: false,\n            });\n          });\n        })\n    );\n  };\n\n  render() {\n    return React.cloneElement(this.props.children, {\n      loading: this.state.loading,\n      ref: editor => (this.editor = editor),\n      requestUpdate: () => this.requestUpdate('', true),\n      onEditObject: this.editObject,\n      integratedEditor: true,\n    });\n  }\n}\n\nexport default ExternalEditor;\n","import optionalRequire from '../Utils/OptionalRequire.js';\nimport { timeFunction } from '../Utils/TimeFunction.js';\nconst electron = optionalRequire('electron');\nconst Buffer = electron ? electron.remote.require('buffer').Buffer : null;\n\nfunction Bridge() {\n  this.net = optionalRequire('net');\n\n  this.client = null;\n  this.connected = false;\n  this._onReceiveCb = null;\n}\n\nBridge.prototype.isSupported = function() {\n  return !!this.net;\n};\n\nBridge.prototype.connectTo = function(port) {\n  if (!this.net) return;\n\n  var that = this;\n  this.client = new this.net.Socket();\n  this.client.connect(\n    port,\n    'localhost',\n    function() {\n      console.log('Connection made on port', port);\n      that.connected = true;\n      if (that._onConnected) that._onConnected();\n    }\n  );\n\n  let data = '';\n  const nullCharacterBuffer = Buffer.from([0]);\n  this.client.on('data', function(dataBuffer) {\n    let startPos = 0;\n    let nextNullCharacterPos = dataBuffer.indexOf(nullCharacterBuffer);\n    while (startPos < dataBuffer.length) {\n      if (nextNullCharacterPos === -1) {\n        data += dataBuffer.slice(startPos);\n        startPos = dataBuffer.length;\n      } else {\n        data += dataBuffer.slice(startPos, nextNullCharacterPos);\n        that._receive(data);\n\n        data = '';\n        startPos = nextNullCharacterPos + 1;\n        nextNullCharacterPos = dataBuffer.indexOf(\n          nullCharacterBuffer,\n          startPos\n        );\n      }\n    }\n  });\n\n  this.client.on('close', function() {\n    that.connected = false;\n  });\n};\n\nBridge.prototype.send = function(command, payload, scope = '') {\n  if (!this.connected) return false;\n\n  const json = JSON.stringify({\n    command,\n    scope,\n    payload,\n  });\n  this.client.write(json + '\\0');\n\n  return true;\n};\n\nBridge.prototype._receive = function(data) {\n  console.info('Received data');\n\n  // Parse the received JSON\n  let dataObject;\n  timeFunction(\n    () => {\n      try {\n        dataObject = JSON.parse(data);\n      } catch (ex) {\n        console.warn('Received invalid data (JSON parse failed)', ex);\n      }\n    },\n    time => console.info(`JSON parse took ${time}ms`)\n  );\n  if (!dataObject) return;\n\n  if (this._onReceiveCb) {\n    this._onReceiveCb(dataObject.command, dataObject.payload, dataObject.scope);\n  }\n};\n\nBridge.prototype.onReceive = function(cb) {\n  this._onReceiveCb = cb;\n};\n\nBridge.prototype.onConnected = function(cb) {\n  this._onConnected = cb;\n};\n\nexport default Bridge;\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport React, { Component } from 'react';\nimport Divider from 'material-ui/Divider';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport LocalFolderPicker from '../UI/LocalFolderPicker';\nimport { sendNewGameCreated } from '../Utils/Analytics/EventSender';\nimport { Column, Line } from '../UI/Grid';\nimport { List, ListItem } from 'material-ui/List';\nimport { findExamples } from './LocalExamplesFinder';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { findEmptyPath } from './LocalPathFinder';\nimport ListIcon from '../UI/ListIcon';\nimport { showGameFileCreationError } from './LocalExamples';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nvar fs = optionalRequire('fs-extra');\nconst gd = global.gd;\n\ntype Props = {|\n  onOpen: string => void,\n  onCreate: gdProject => void,\n  onShowExamples: () => void,\n|};\n\ntype State = {|\n  outputPath: string,\n|};\n\nexport default class LocalStarters extends Component<Props, State> {\n  state = {\n    outputPath: findEmptyPath(\n      path && app\n        ? path.join(app.getPath('documents'), 'GDevelop projects')\n        : ''\n    ),\n  };\n\n  _handleChangePath = (outputPath: string) =>\n    this.setState({\n      outputPath,\n    });\n\n  createFromExample(i18n: I18nType, exampleName: string) {\n    const { outputPath } = this.state;\n    if (!fs || !outputPath) return;\n\n    findExamples(examplesPath => {\n      try {\n        fs.mkdirsSync(outputPath);\n        fs.copySync(path.join(examplesPath, exampleName), outputPath);\n      } catch (error) {\n        showGameFileCreationError(i18n, outputPath, error);\n        return;\n      }\n\n      this.props.onOpen(path.join(outputPath, exampleName + '.json'));\n      sendNewGameCreated(exampleName);\n    });\n  }\n\n  createEmptyGame(i18n: I18nType) {\n    const { outputPath } = this.state;\n    if (!fs || !outputPath) return;\n\n    try {\n      fs.mkdirsSync(outputPath);\n    } catch (error) {\n      showGameFileCreationError(i18n, outputPath, error);\n      return;\n    }\n\n    const project = gd.ProjectHelper.createNewGDJSProject();\n    project.setProjectFile(path.join(outputPath, 'game.json'));\n    this.props.onCreate(project);\n    sendNewGameCreated('');\n  }\n\n  render() {\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Column noMargin>\n            <Line>\n              <Column>\n                <p>\n                  <Trans>Choose a game to use as a starter:</Trans>\n                </p>\n              </Column>\n            </Line>\n            <Line>\n              <Column expand noMargin>\n                <List>\n                  <ListItem\n                    leftAvatar={\n                      <ListIcon\n                        iconSize={32}\n                        src=\"res/starters_icons/platformer.png\"\n                      />\n                    }\n                    primaryText={<Trans>Platformer</Trans>}\n                    secondaryText={\n                      <p>\n                        <Trans>\n                          A simple platform game, with coins to collect, moving\n                          platforms and enemies.\n                        </Trans>\n                      </p>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() => this.createFromExample(i18n, 'platformer')}\n                  />\n                  <ListItem\n                    leftAvatar={\n                      <ListIcon\n                        iconSize={32}\n                        src=\"res/starters_icons/space-shooter.png\"\n                      />\n                    }\n                    primaryText={<Trans>8-bit Space Shooter</Trans>}\n                    secondaryText={\n                      <p>\n                        <Trans>\n                          A beautiful, retro side-scrolling shooter where you\n                          must defeat incoming enemies with your mecha\n                          transforming spaceship. Huge boss included!\n                        </Trans>\n                      </p>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() =>\n                      this.createFromExample(i18n, 'space-shooter')\n                    }\n                  />\n                  <ListItem\n                    leftAvatar={\n                      <ListIcon\n                        iconSize={32}\n                        src=\"res/starters_icons/isometric-game.png\"\n                      />\n                    }\n                    primaryText={<Trans>Isometric game</Trans>}\n                    secondaryText={\n                      <p>\n                        <Trans>\n                          An example of an isometric game where you can explore\n                          a map with your character.\n                        </Trans>\n                      </p>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() =>\n                      this.createFromExample(i18n, 'isometric-game')\n                    }\n                  />\n                  <ListItem\n                    leftAvatar={\n                      <ListIcon\n                        iconSize={32}\n                        src=\"res/starters_icons/downhill-bike-physics-demo.png\"\n                      />\n                    }\n                    primaryText=\"Downhill Bike Racing\"\n                    secondaryText={\n                      <p>\n                        <Trans>\n                          An example of a 2D physics based driving game, where\n                          player have to reach the end as fast as possible.\n                        </Trans>\n                      </p>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() =>\n                      this.createFromExample(i18n, 'downhill-bike-physics-demo')\n                    }\n                  />\n                  <ListItem\n                    leftAvatar={\n                      <ListIcon\n                        iconSize={32}\n                        src=\"res/starters_icons/pairs.png\"\n                      />\n                    }\n                    primaryText=\"Pairs\"\n                    secondaryText={\n                      <p>\n                        <Trans>\n                          Find all matching pairs of cards in this relaxing\n                          game. Use tweens to create smooth, natural animations\n                          with a few events.\n                        </Trans>\n                      </p>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() => this.createFromExample(i18n, 'pairs')}\n                  />\n                  <ListItem\n                    primaryText={<Trans>Empty game</Trans>}\n                    secondaryText={\n                      <p>\n                        <Trans>Start a new game from scratch.</Trans>\n                      </p>\n                    }\n                    secondaryTextLines={2}\n                    onClick={() => this.createEmptyGame(i18n)}\n                  />\n                </List>\n                <Line alignItems=\"center\" justifyContent=\"center\">\n                  <RaisedButton\n                    label={<Trans>See examples</Trans>}\n                    onClick={() => this.props.onShowExamples()}\n                  />\n                </Line>\n              </Column>\n            </Line>\n            <Divider />\n            <Line expand>\n              <Column expand>\n                <LocalFolderPicker\n                  fullWidth\n                  value={this.state.outputPath}\n                  onChange={this._handleChangePath}\n                  type=\"create-game\"\n                />\n              </Column>\n            </Line>\n          </Column>\n        )}\n      </I18n>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { confirmResourcePath } from './ResourceUtils.js';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\nconst path = optionalRequire('path');\n\nconst gd = global.gd;\n\nexport default [\n  {\n    name: 'localAudioFileOpener',\n    displayName: 'Choose a new audio file',\n    kind: 'audio',\n    component: class LocalAudioFileOpener extends Component {\n      chooseResources = (\n        project,\n        multiSelections = true\n      ): Promise<Array<any>> => {\n        const options = {\n          multiSelections,\n          title: 'Choose an audio file',\n          name: 'Audio files',\n          extensions: ['wav', 'mp3', 'ogg'],\n        };\n        return selectLocalResourcePath(project, options).then(resources => {\n          return resources.map(resourcePath => {\n            const audioResource = new gd.AudioResource();\n            const projectPath = path.dirname(project.getProjectFile());\n            audioResource.setFile(path.relative(projectPath, resourcePath));\n            audioResource.setName(path.relative(projectPath, resourcePath));\n\n            return audioResource;\n          });\n        });\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localFileOpener',\n    displayName: 'Choose a new image',\n    kind: 'image',\n    component: class LocalFileOpener extends Component {\n      chooseResources = (\n        project,\n        multiSelections = true\n      ): Promise<Array<any>> => {\n        const options = {\n          multiSelections,\n          title: 'Choose an image',\n          name: 'Image files',\n          extensions: ['png', 'jpg'],\n        };\n        return selectLocalResourcePath(project, options).then(resources => {\n          return resources.map(resourcePath => {\n            const imageResource = new gd.ImageResource();\n            const projectPath = path.dirname(project.getProjectFile());\n            imageResource.setFile(path.relative(projectPath, resourcePath));\n            imageResource.setName(path.relative(projectPath, resourcePath));\n\n            return imageResource;\n          });\n        });\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localFontFileOpener',\n    displayName: 'Choose a new font file',\n    kind: 'font',\n    component: class LocalFontFileOpener extends Component {\n      chooseResources = (\n        project,\n        multiSelections = true\n      ): Promise<Array<any>> => {\n        const options = {\n          multiSelections,\n          title: 'Choose a font file',\n          name: 'Font files',\n          extensions: ['ttf', 'otf'],\n        };\n        return selectLocalResourcePath(project, options).then(resources => {\n          return resources.map(resourcePath => {\n            const fontResource = new gd.FontResource();\n            const projectPath = path.dirname(project.getProjectFile());\n            fontResource.setFile(path.relative(projectPath, resourcePath));\n            fontResource.setName(path.relative(projectPath, resourcePath));\n\n            return fontResource;\n          });\n        });\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n  {\n    name: 'localVideoFileOpener',\n    displayName: 'Choose a new video file',\n    kind: 'video',\n    component: class LocalVideoFileOpener extends Component {\n      chooseResources = (\n        project,\n        multiSelections = true\n      ): Promise<Array<any>> => {\n        const options = {\n          multiSelections,\n          title: 'Choose a video file',\n          name: 'Video files',\n          extensions: ['mp4'],\n        };\n        return selectLocalResourcePath(project, options).then(resources => {\n          return resources.map(resourcePath => {\n            const fontResource = new gd.VideoResource();\n            const projectPath = path.dirname(project.getProjectFile());\n            fontResource.setFile(path.relative(projectPath, resourcePath));\n            fontResource.setName(path.relative(projectPath, resourcePath));\n\n            return fontResource;\n          });\n        });\n      };\n\n      render() {\n        return null;\n      }\n    },\n  },\n];\n\nconst selectLocalResourcePath = (\n  project: gdProject,\n  options: {\n    multiSelections: boolean,\n    title: string,\n    name: string,\n    extensions: Array<string>,\n  }\n) => {\n  return new Promise((resolve, reject) => {\n    if (!dialog) return reject('Not supported');\n\n    const properties = ['openFile'];\n    if (options.multiSelections) properties.push('multiSelections');\n    const projectPath = path.dirname(project.getProjectFile());\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showOpenDialog(\n      browserWindow,\n      {\n        title: options.title,\n        properties,\n        filters: [{ name: options.name, extensions: options.extensions }],\n        defaultPath: projectPath,\n      },\n      paths => {\n        if (!paths) return resolve([]);\n        if (!confirmResourcePath(project, paths[0])) return resolve([]);\n\n        return resolve(paths);\n      }\n    );\n  });\n};\n","// @flow\nimport { openPiskel } from './LocalPiskelBridge';\nimport { openJfxr } from './LocalJfxrBridge';\nimport { type ResourceExternalEditor } from './ResourceExternalEditor.flow';\nimport { sendExternalEditorOpened } from '../Utils/Analytics/EventSender';\n\n/**\n * This is the list of editors that can be used to edit resources\n * on Electron runtime.\n */\nconst editors: Array<ResourceExternalEditor> = [\n  {\n    name: 'piskel-app',\n    displayName: 'Edit with Piskel',\n    kind: 'image',\n    edit: options => {\n      sendExternalEditorOpened('piskel');\n      return openPiskel(options);\n    },\n  },\n  {\n    name: 'Jfxr',\n    displayName: 'Create/Edit a Sound effect with Jfxr (*.wav)',\n    kind: 'audio',\n    edit: options => {\n      sendExternalEditorOpened('jfxr');\n      return openJfxr(options);\n    },\n  },\n];\n\nexport default editors;\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { type ExternalEditorOpenOptions } from './ResourceExternalEditor.flow';\nimport {\n  createOrUpdateResource,\n  getLocalResourceFullPath,\n} from './ResourceUtils.js';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\n/**\n * Open Piskel editor for the specified resources.\n * Take a list of resource names to be edited and will call the callback methods\n * (notably onChangesSaved with the name of the edited resources)\n */\nexport const openPiskel = ({\n  project,\n  resourcesLoader,\n  resourceNames,\n  singleFrame,\n  onChangesSaved,\n  extraOptions,\n}: ExternalEditorOpenOptions) => {\n  if (!electron || !ipcRenderer) return;\n\n  const resources = resourceNames.map((resourceName, originalIndex) => {\n    let resourcePath = getLocalResourceFullPath(project, resourceName);\n    return {\n      resourcePath,\n      resourceName,\n      originalIndex,\n    };\n  });\n\n  const projectPath = path.dirname(project.getProjectFile());\n  const externalEditorData = {\n    ...extraOptions,\n    resources,\n    singleFrame,\n    projectPath,\n  };\n\n  // Listen to events meaning that edition in Piskel is finished\n  ipcRenderer.removeAllListeners('piskel-changes-saved');\n  ipcRenderer.on(\n    'piskel-changes-saved',\n    (event, outputResources, newAnimationName, externalEditorData) => {\n      const metadata = externalEditorData.data\n        ? { pskl: externalEditorData }\n        : null;\n\n      const resourcesManager = project.getResourcesManager();\n      outputResources.forEach(resource => {\n        resource.name = path.relative(projectPath, resource.path); // Still needed for onChangesSaved()\n        createOrUpdateResource(project, new gd.ImageResource(), resource.name);\n      });\n\n      // in case this is for a single frame object, save the metadata in the Image object\n      if (externalEditorData.singleFrame) {\n        if (metadata) {\n          resourcesManager\n            .getResource(path.relative(projectPath, outputResources[0].path))\n            .setMetadata(JSON.stringify(metadata));\n        }\n        onChangesSaved(outputResources, newAnimationName);\n      } else {\n        // In case there are multiple frames, pass back the metadata to the editor and let it store it at an appropriate place.\n        // (For example, for sprites, SpritesList.js will save it in the metadata of the gd.Direction).\n        onChangesSaved(outputResources, newAnimationName, metadata);\n      }\n    }\n  );\n\n  // Issue the event to open piskel\n  ipcRenderer.send('piskel-open-then-load-animation', externalEditorData);\n};\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { type ExternalEditorOpenOptions } from './ResourceExternalEditor.flow';\nimport {\n  createOrUpdateResource,\n  getLocalResourceFullPath,\n} from './ResourceUtils.js';\n\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\n/**\n * Open JFXR to create wav resources.\n */\nexport const openJfxr = ({\n  project,\n  resourcesLoader,\n  resourceNames,\n  onChangesSaved,\n  resourcePath,\n  extraOptions,\n}: ExternalEditorOpenOptions) => {\n  if (!electron || !ipcRenderer) return;\n  const projectPath = path.dirname(project.getProjectFile());\n  const initialResourcePath = getLocalResourceFullPath(\n    project,\n    resourceNames[0]\n  );\n\n  const externalEditorData = {\n    resourcePath: initialResourcePath,\n    // $FlowFixMe - TODO: There is an error here to be solved.\n    externalEditorData: extraOptions.initialResourceMetadata,\n    projectPath,\n  };\n\n  ipcRenderer.removeAllListeners('jfxr-changes-saved');\n  ipcRenderer.on(\n    'jfxr-changes-saved',\n    (event, newFilePath, externalEditorData) => {\n      const resourceName = path.relative(projectPath, newFilePath);\n      createOrUpdateResource(project, new gd.AudioResource(), resourceName);\n\n      const metadata = {\n        jfxr: externalEditorData,\n      };\n      project\n        .getResourcesManager()\n        .getResource(resourceName)\n        .setMetadata(JSON.stringify(metadata));\n      // $FlowFixMe - TODO: There is an error here to be solved.\n      onChangesSaved([{ metadata }], resourceName);\n    }\n  );\n\n  ipcRenderer.send('jfxr-create-wav', externalEditorData);\n};\n","// @flow\nimport { serializeToJSObject } from '../Utils/Serializer';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport {\n  split,\n  splitPaths,\n  getSlugifiedUniqueNameFromProperty,\n} from '../Utils/ObjectSplitter';\nconst fs = optionalRequire('fs-extra');\nconst path = optionalRequire('path');\n\nconst writeJSONFile = (object: Object, filepath: string): Promise<void> => {\n  if (!fs) return Promise.reject(new Error('Filesystem is not supported.'));\n\n  try {\n    const content = JSON.stringify(object, null, 2);\n    return fs.ensureDir(path.dirname(filepath)).then(\n      () =>\n        new Promise((resolve, reject) => {\n          fs.writeFile(filepath, content, (err: ?Error) => {\n            if (err) {\n              return reject(err);\n            }\n\n            return resolve();\n          });\n        })\n    );\n  } catch (stringifyException) {\n    return Promise.reject(stringifyException);\n  }\n};\n\nexport default class LocalProjectWriter {\n  static saveProject = (project: gdProject): Promise<void> => {\n    const filepath = project.getProjectFile();\n    const projectPath = path.dirname(project.getProjectFile());\n    if (!filepath) {\n      return Promise.reject('Unimplemented \"Save as\" feature');\n    }\n\n    const serializedProjectObject = serializeToJSObject(project);\n    if (project.isFolderProject()) {\n      const partialObjects = split(serializedProjectObject, {\n        pathSeparator: '/',\n        getArrayItemReferenceName: getSlugifiedUniqueNameFromProperty('name'),\n        shouldSplit: splitPaths(\n          new Set([\n            '/layouts/*',\n            '/externalLayouts/*',\n            '/externalEvents/*',\n            '/layouts/*',\n            '/eventsFunctionsExtensions/*',\n          ])\n        ),\n        isReferenceMagicPropertyName: '__REFERENCE_TO_SPLIT_OBJECT',\n      });\n\n      return Promise.all(\n        partialObjects.map(partialObject => {\n          return writeJSONFile(\n            partialObject.object,\n            path.join(projectPath, partialObject.reference) + '.json'\n          ).catch(err => {\n            console.error('Unable to write a partial file:', err);\n            throw err;\n          });\n        })\n      ).then(() => {\n        return writeJSONFile(serializedProjectObject, filepath).catch(err => {\n          console.error('Unable to write the split project:', err);\n          throw err;\n        });\n      });\n    } else {\n      return writeJSONFile(serializedProjectObject, filepath).catch(err => {\n        console.error('Unable to write the project:', err);\n        throw err;\n      });\n    }\n  };\n\n  static autoSaveProject = (project: gdProject) => {\n    const autoSavePath = project.getProjectFile() + '.autosave';\n    writeJSONFile(serializeToJSObject(project), autoSavePath).catch(err => {\n      console.error(`Unable to write ${autoSavePath}:`, err);\n      throw err;\n    });\n  };\n}\n","// @flow\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { unsplit } from '../Utils/ObjectSplitter.js';\nconst fs = optionalRequire('fs');\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst readJSONFile = (filepath: string): Promise<Object> => {\n  if (!fs) return Promise.reject('Filesystem is not supported.');\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(filepath, { encoding: 'utf8' }, (err, data) => {\n      if (err) return reject(err);\n\n      try {\n        const dataObject = JSON.parse(data);\n        return resolve(dataObject);\n      } catch (ex) {\n        return reject(filepath + ' is a corrupted/malformed file.');\n      }\n    });\n  });\n};\n\nexport default class LocalProjectOpener {\n  static chooseProjectFile = (): Promise<?string> => {\n    return new Promise((resolve, reject) => {\n      if (!dialog) return reject('Not supported');\n\n      const browserWindow = electron.remote.getCurrentWindow();\n      dialog.showOpenDialog(\n        browserWindow,\n        {\n          title: 'Open a project',\n          properties: ['openFile'],\n          message:\n            'If you want to open your GDevelop 4 project, be sure to save it as a .json file',\n          filters: [{ name: 'GDevelop 5 project', extensions: ['json'] }],\n        },\n        paths => {\n          if (!paths || !paths.length) return resolve(null);\n\n          return resolve(paths[0]);\n        }\n      );\n    });\n  };\n\n  static readProjectFile = (filepath: string): Object => {\n    const projectPath = path.dirname(filepath);\n    return readJSONFile(filepath).then(object => {\n      return unsplit(object, {\n        getReferencePartialObject: referencePath => {\n          return readJSONFile(path.join(projectPath, referencePath) + '.json');\n        },\n        isReferenceMagicPropertyName: '__REFERENCE_TO_SPLIT_OBJECT',\n        // Limit unsplitting to depth 3 (which would allow properties of layouts/external layouts/external events\n        // to be un-splitted, but not the content of these properties), to avoid very slow processing\n        // of large game files.\n        maxUnsplitDepth: 3,\n      }).then(() => {\n        return object;\n      });\n    });\n  };\n\n  static shouldOpenAutosave = (\n    filePath: string,\n    autoSavePath: string,\n    compareLastModified: boolean\n  ): boolean => {\n    if (fs.existsSync(autoSavePath)) {\n      if (!compareLastModified) {\n        return true;\n      }\n      try {\n        const autoSavedTime = fs.statSync(autoSavePath).mtime.getTime();\n        const saveTime = fs.statSync(filePath).mtime.getTime();\n        if (autoSavedTime > saveTime) {\n          return true;\n        }\n      } catch (err) {\n        console.error('Unable to compare *.autosave to project', err);\n        return false;\n      }\n      return false;\n    }\n    return false;\n  };\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport localFileSystem from '../LocalFileSystem';\nimport optionalRequire from '../../../Utils/OptionalRequire';\nimport { timeFunction } from '../../../Utils/TimeFunction';\nimport { findGDJS } from '../LocalGDJSFinder';\nimport LocalNetworkPreviewDialog from './LocalNetworkPreviewDialog';\nimport assignIn from 'lodash/assignIn';\nimport { type PreviewOptions } from '../../PreviewLauncher.flow';\nimport { findLocalIp } from './LocalIpFinder';\nimport SubscriptionChecker from '../../../Profile/SubscriptionChecker';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst BrowserWindow = electron ? electron.remote.BrowserWindow : null;\nconst gd = global.gd;\n\ntype Props = {|\n  onExport?: () => void,\n  onChangeSubscription?: () => void,\n|};\n\ntype State = {\n  networkPreviewDialogOpen: boolean,\n  networkPreviewHost: ?string,\n  networkPreviewPort: ?number,\n  networkPreviewError: ?any,\n  previewGamePath: ?string,\n  previewBrowserWindowConfig: ?{\n    width: number,\n    height: number,\n    useContentSize: boolean,\n    title: string,\n    backgroundColor: string,\n  },\n};\n\nexport default class LocalPreviewLauncher extends React.Component<\n  Props,\n  State\n> {\n  canDoNetworkPreview = () => true;\n\n  state = {\n    networkPreviewDialogOpen: false,\n    networkPreviewHost: null,\n    networkPreviewPort: null,\n    networkPreviewError: null,\n    previewGamePath: null,\n    previewBrowserWindowConfig: null,\n  };\n  _subscriptionChecker: ?SubscriptionChecker = null;\n\n  _openPreviewBrowserWindow = () => {\n    if (\n      !BrowserWindow ||\n      !this.state.previewBrowserWindowConfig ||\n      !this.state.previewGamePath\n    )\n      return;\n\n    const win = new BrowserWindow(this.state.previewBrowserWindowConfig);\n    win.loadURL(`file://${this.state.previewGamePath}/index.html`);\n  };\n\n  _openPreviewWindow = (\n    project: gdProject,\n    gamePath: string,\n    options: PreviewOptions\n  ): void => {\n    this.setState(\n      {\n        previewBrowserWindowConfig: {\n          width: project.getMainWindowDefaultWidth(),\n          height: project.getMainWindowDefaultHeight(),\n          useContentSize: true,\n          title: `Preview of ${project.getName()}`,\n          backgroundColor: '#000000',\n        },\n        previewGamePath: gamePath,\n      },\n      () => {\n        if (!options.networkPreview) {\n          this._openPreviewBrowserWindow();\n        } else {\n          if (!ipcRenderer) return;\n\n          ipcRenderer.removeAllListeners('serve-folder-done');\n          ipcRenderer.removeAllListeners('local-network-ips');\n          ipcRenderer.on('serve-folder-done', (event, err, serverParams) => {\n            if (err) {\n              this.setState({\n                networkPreviewDialogOpen: true,\n                networkPreviewPort: null,\n                networkPreviewHost: null,\n                networkPreviewError: err,\n              });\n            } else {\n              this.setState({\n                networkPreviewDialogOpen: true,\n                networkPreviewPort: serverParams.port,\n              });\n            }\n\n            setTimeout(() => this._checkSubscription());\n          });\n          ipcRenderer.on('local-network-ips', (event, ipAddresses) => {\n            this.setState({\n              networkPreviewHost: findLocalIp(ipAddresses),\n            });\n          });\n          ipcRenderer.send('serve-folder', {\n            root: gamePath,\n          });\n          ipcRenderer.send('get-local-network-ips');\n        }\n      }\n    );\n  };\n\n  _prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          //TODO\n          console.error('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const outputDir = path.join(fileSystem.getTempDir(), 'preview');\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n        resolve({\n          outputDir,\n          exporter,\n        });\n      });\n    });\n  };\n\n  launchLayoutPreview = (\n    project: gdProject,\n    layout: gdLayout,\n    options: PreviewOptions\n  ): Promise<any> => {\n    if (!project || !layout) return Promise.reject();\n\n    return this._prepareExporter().then(({ outputDir, exporter }) => {\n      timeFunction(\n        () => {\n          exporter.exportLayoutForPixiPreview(project, layout, outputDir);\n          exporter.delete();\n          this._openPreviewWindow(project, outputDir, options);\n        },\n        time => console.info(`Preview took ${time}ms`)\n      );\n    });\n  };\n\n  launchExternalLayoutPreview = (\n    project: gdProject,\n    layout: gdLayout,\n    externalLayout: gdExternalLayout,\n    options: PreviewOptions\n  ): Promise<any> => {\n    if (!project || !externalLayout) return Promise.reject();\n\n    return this._prepareExporter().then(({ outputDir, exporter }) => {\n      timeFunction(\n        () => {\n          exporter.exportExternalLayoutForPixiPreview(\n            project,\n            layout,\n            externalLayout,\n            outputDir\n          );\n          exporter.delete();\n          this._openPreviewWindow(project, outputDir, options);\n        },\n        time => console.info(`Preview took ${time}ms`)\n      );\n    });\n  };\n\n  _checkSubscription = (options: PreviewOptions) => {\n    if (!this._subscriptionChecker) return true;\n\n    return this._subscriptionChecker.checkHasSubscription();\n  };\n\n  render() {\n    const {\n      networkPreviewDialogOpen,\n      networkPreviewHost,\n      networkPreviewPort,\n      networkPreviewError,\n    } = this.state;\n    return (\n      <React.Fragment>\n        <SubscriptionChecker\n          ref={subscriptionChecker =>\n            (this._subscriptionChecker = subscriptionChecker)\n          }\n          onChangeSubscription={() => {\n            this.setState({ networkPreviewDialogOpen: false });\n            if (this.props.onChangeSubscription)\n              this.props.onChangeSubscription();\n          }}\n          id=\"Preview over wifi\"\n          title={<Trans>Preview over wifi</Trans>}\n          mode=\"try\"\n        />\n        <LocalNetworkPreviewDialog\n          open={networkPreviewDialogOpen}\n          url={\n            networkPreviewHost && networkPreviewPort\n              ? `${networkPreviewHost}:${networkPreviewPort}`\n              : null\n          }\n          error={networkPreviewError}\n          onClose={() => this.setState({ networkPreviewDialogOpen: false })}\n          onExport={this.props.onExport}\n          onRunPreviewLocally={this._openPreviewBrowserWindow}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport Dialog from '../../../UI/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport TextField from 'material-ui/TextField';\nimport { Line } from '../../../UI/Grid';\nimport PlaceholderLoader from '../../../UI/PlaceholderLoader';\n\ntype Props = {|\n  open: boolean,\n  url: ?string,\n  onClose: () => void,\n  onExport: ?() => void,\n  onRunPreviewLocally: () => void,\n  error: ?any,\n|};\n\nexport default class LocalNetworkDialog extends React.Component<Props, {}> {\n  render() {\n    const {\n      url,\n      open,\n      error,\n      onExport,\n      onClose,\n      onRunPreviewLocally,\n    } = this.props;\n    if (!open) return null;\n\n    return (\n      <Dialog\n        actions={[\n          <FlatButton\n            key=\"close\"\n            label={<Trans>Close</Trans>}\n            primary\n            onClick={onClose}\n          />,\n        ]}\n        secondaryActions={[\n          onExport && (\n            <FlatButton\n              key=\"export\"\n              label={<Trans>Export game</Trans>}\n              onClick={onExport}\n            />\n          ),\n          <FlatButton\n            key=\"run-preview-locally\"\n            label={<Trans>Run on this computer</Trans>}\n            onClick={onRunPreviewLocally}\n          />,\n        ]}\n        modal\n        open={open}\n        onRequestClose={onClose}\n      >\n        {error && (\n          <Line>\n            <Trans>\n              Unable to start the server for the preview! Make sure that you are\n              authorized to run servers on this computer. Otherwise, use classic\n              preview to test your game.\n            </Trans>\n          </Line>\n        )}\n        {!error && !url && <PlaceholderLoader />}\n        {!error && url && (\n          <div>\n            <Line>\n              <Trans>\n                Your preview is ready! On your mobile or tablet, open your\n                browser and enter in the address bar:\n              </Trans>\n            </Line>\n            <TextField value={url} fullWidth />\n            <Line>\n              <Trans>\n                Please note that your device should be connected on the same\n                network as this computer.\n              </Trans>\n            </Line>\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n","// @flow\n\nexport const findLocalIp = (ipAddresses: Array<string>): ?string => {\n  if (!ipAddresses.length) return null;\n\n  let firstLocalIp = ipAddresses.find(\n    ipAddress => ipAddress.indexOf('192.168') === 0\n  );\n  if (firstLocalIp) return firstLocalIp;\n\n  firstLocalIp = ipAddresses.find(ipAddress => ipAddress.indexOf('192') === 0);\n  if (firstLocalIp) return firstLocalIp;\n\n  return ipAddresses[0];\n};\n","import * as React from 'react';\nimport LocalExport from './LocalExport';\nimport LocalS3Export from './LocalS3Export';\nimport LocalOnlineCordovaExport from './LocalOnlineCordovaExport';\nimport LocalCordovaExport from './LocalCordovaExport';\nimport LocalCocos2dExport from './LocalCocos2dExport';\nimport LocalOnlineElectronExport from './LocalOnlineElectronExport';\nimport LocalFacebookInstantGamesExport from './LocalFacebookInstantGamesExport';\nimport LocalElectronExport from './LocalElectronExport';\nimport PhoneIphone from 'material-ui/svg-icons/hardware/phone-iphone';\nimport LaptopMac from 'material-ui/svg-icons/hardware/laptop-mac';\nimport Folder from 'material-ui/svg-icons/file/folder';\nimport Facebook from '../../UI/CustomSvgIcons/Facebook';\nimport Cordova from '../../UI/CustomSvgIcons/Cordova';\nimport Chrome from '../../UI/CustomSvgIcons/Chrome';\n\nexport const getLocalExporters = () => [\n  {\n    name: 'Android (& iOS coming soon)',\n    renderIcon: props => <PhoneIphone {...props} />,\n    helpPage: '/publishing/android_and_ios',\n    description:\n      'Package your game for Android directly from GDevelop. iOS support is coming soon!',\n    key: 'localonlinecordovaexport',\n    ExportComponent: LocalOnlineCordovaExport,\n  },\n  {\n    name: 'Facebook Instant Games',\n    renderIcon: props => <Facebook {...props} />,\n    helpPage: '/publishing/publishing-to-facebook-instant-games',\n    description:\n      'Package your game as a Facebook Instant Games that can be played on Facebook Messenger.',\n    key: 'localfacebookinstantgames',\n    ExportComponent: LocalFacebookInstantGamesExport,\n  },\n  {\n    name: 'Web (upload online)',\n    renderIcon: props => <Chrome {...props} />,\n    helpPage: '/publishing/web',\n    description:\n      'Upload your game online directly from GDevelop and share the link to players. Play to your game using your browser on computers and mobile phones.',\n    key: 'locals3export',\n    ExportComponent: LocalS3Export,\n  },\n  {\n    name: 'Local folder',\n    renderIcon: props => <Folder {...props} />,\n    helpPage: '/publishing/html5_game_in_a_local_folder',\n    description:\n      'Build the game locally as a HTML5 game. You can then export it on website like Itch.io or Kongregate.',\n    key: 'localexport',\n    ExportComponent: LocalExport,\n    advanced: true,\n  },\n  {\n    name: 'iOS & Android (manual)',\n    renderIcon: props => <Cordova {...props} />,\n    helpPage: '/publishing/android_and_ios_with_cordova',\n    description:\n      'Build the game locally as a Cordova project, and export it manually to iOS or Android with Cordova developers tools.',\n    key: 'localcordovaexport',\n    ExportComponent: LocalCordovaExport,\n    advanced: true,\n  },\n  {\n    name: 'Windows/macOS/Linux (beta)',\n    renderIcon: props => <LaptopMac {...props} />,\n    helpPage: '/publishing/windows-macos-linux',\n    description:\n      'Package your game as an app for Windows, macOS or Linux directly from GDevelop.',\n    key: 'localonlineelectronexport',\n    ExportComponent: LocalOnlineElectronExport,\n  },\n  {\n    name: 'Windows/macOS/Linux (manual)',\n    renderIcon: props => <LaptopMac {...props} />,\n    helpPage: '/publishing/windows-macos-linux-with-electron',\n    description:\n      'Build the game locally and export it manually to Windows, macOS or Linux with third-party developer tools.',\n    key: 'localelectronexport',\n    ExportComponent: LocalElectronExport,\n    advanced: true,\n  },\n  {\n    name: 'Cocos2d-JS',\n    renderIcon: props => <PhoneIphone {...props} />,\n    helpPage: '/publishing/android_and_ios_with_cocos2d-js',\n    description:\n      'Export your game using Cocos2d-JS game engine. The game can be compiled for Android or iOS if you install Cocos2d-JS developer tools.',\n    key: 'localcocos2dexport',\n    ExportComponent: LocalCocos2dExport,\n    experimental: true,\n  },\n];\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { sleep } from 'wait-promise';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport { sendExportLaunched } from '../../Utils/Analytics/EventSender';\nimport LocalExport from './LocalExport';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport LinearProgress from 'material-ui/LinearProgress';\nimport { GDevelopHostingApi } from '../../Utils/GDevelopServices/ApiConfigs';\nimport { makeTimestampedId } from '../../Utils/TimestampedId';\nimport TextField from 'material-ui/TextField';\nconst os = optionalRequire('os');\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst shell = electron ? electron.shell : null;\nconst gd = global.gd;\n\nexport default class LocalS3Export extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      exportStarted: false,\n      exportDone: false,\n      uploadDone: false,\n      deployDone: false,\n    };\n  }\n\n  _uploadToS3 = localDir => {\n    ipcRenderer.removeAllListeners('s3-folder-upload-progress');\n    ipcRenderer.removeAllListeners('s3-folder-upload-done');\n\n    return new Promise((resolve, reject) => {\n      ipcRenderer.on(\n        's3-folder-upload-progress',\n        (event, uploadProgress, uploadMax) =>\n          this.setState({\n            uploadProgress,\n            uploadMax,\n          })\n      );\n      ipcRenderer.on('s3-folder-upload-done', (event, err, prefix) => {\n        if (err) return reject(err);\n\n        this.setState({\n          uploadDone: true,\n        });\n        resolve(prefix);\n      });\n      ipcRenderer.send('s3-folder-upload', localDir);\n    });\n  };\n\n  _deploy = prefix => {\n    return sleep(200)\n      .then(() =>\n        //TODO: Move this to a GDevelopServices/Hosting.js file\n        axios(GDevelopHostingApi.deployEndpoint, {\n          method: 'post',\n          params: {\n            name: prefix,\n          },\n        })\n      )\n      .then(response => {\n        this.setState({\n          deployDone: true,\n        });\n        return response.data.deployedPrefix;\n      });\n  };\n\n  launchExport = () => {\n    const { project } = this.props;\n    if (!project) return;\n\n    sendExportLaunched('s3');\n    this.setState({\n      exportStarted: true,\n      exportDone: false,\n      uploadDone: false,\n      deployDone: false,\n    });\n\n    const outputDir = os.tmpdir() + '/GDS3Export-' + makeTimestampedId();\n    LocalExport.prepareExporter()\n      .then(({ exporter }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        this.setState({\n          exportDone: true,\n        });\n      })\n      .then(() => this._uploadToS3(outputDir))\n      .then(uploadPrefix => this._deploy(uploadPrefix))\n      .then(deployPrefix => {\n        //TODO: Move this to a function getURL in a GDevelopServices/Hosting.js file.\n        this.setState({\n          url: `${GDevelopHostingApi.gamesHost}/${deployPrefix}`,\n        });\n      })\n      .catch(err => {\n        console.error(err);\n        /*TODO: error*/\n      })\n      .then(() =>\n        this.setState({\n          exportStarted: false,\n        })\n      );\n  };\n\n  openURL = () => {\n    shell.openExternal(this.state.url);\n  };\n\n  renderUrl = () => {\n    return (\n      <Line alignItems=\"baseline\">\n        You game is available here:\n        <Spacer />\n        <TextField value={this.state.url} style={{ flex: 1 }} />\n        <Spacer />\n        <RaisedButton\n          label={<Trans>Open</Trans>}\n          primary={true}\n          onClick={this.openURL}\n        />\n      </Line>\n    );\n  };\n\n  render() {\n    const { project } = this.props;\n    if (!project) return null;\n\n    const {\n      url,\n      exportStarted,\n      exportDone,\n      uploadProgress,\n      uploadMax,\n      uploadDone,\n      deployDone,\n    } = this.state;\n\n    return (\n      <Column noMargin>\n        <Line>\n          <Trans>\n            This will export your game and upload it on GDevelop games hosting.\n            The game will be free and available for a few days.\n          </Trans>\n        </Line>\n        <Line alignItems=\"center\">\n          <LinearProgress\n            style={{ flex: 1 }}\n            max={uploadMax}\n            value={uploadProgress}\n            mode={\n              (exportStarted && !exportDone) || (uploadDone && !deployDone)\n                ? 'indeterminate'\n                : 'determinate'\n            }\n          />\n          <Spacer />\n          <RaisedButton\n            label={<Trans>Export and upload my game</Trans>}\n            primary={true}\n            onClick={this.launchExport}\n            disabled={exportStarted}\n          />\n        </Line>\n        {!!url && this.renderUrl()}\n      </Column>\n    );\n  }\n}\n","'use strict';\n\nfunction Wait(interval, beforeTime, afterTime, limit) {\n  this.every(interval, limit);\n  this.before(beforeTime);\n  this.after(afterTime | 0);\n}\n\nWait.prototype = {\n  before: function before(time) {\n    this.startTime = Date.now();\n    this.expires = this.startTime + time;\n    return this;\n  },\n  and: function and(func) {\n    this.routine = func;\n    return this;\n  },\n  after: function after(time) {\n    this.afterTime = time;\n    return this;\n  },\n  every: function every(interval, limit) {\n    this.interval = interval;\n    if (limit != null) this.limit(limit);\n    return this;\n  },\n  limit: function limit(_limit) {\n    _limit = _limit > 0 ? _limit : Infinity;\n    this.limit = _limit;\n    return this;\n  },\n  check: function check(cond) {\n    cond = cond || function () {};\n\n    return this.before(0).until(cond);\n  },\n  forward: function forward() {\n    var self = this;\n    return this.until(function () {\n      return false;\n    });\n  },\n  till: function till(cond) {\n    var self = this;\n    return this.until(function () {\n      var res;\n\n      try {\n        res = cond();\n        return res === true;\n      } catch (ex) {\n        self.limit = 0; //force error\n\n        throw ex;\n      }\n    });\n  },\n  until: function until(cond) {\n    var interval = this.interval,\n        afterTime = this.afterTime,\n        routine = this.routine,\n        self = this;\n    var timer,\n        called = 0;\n    return new Promise(function (resolve, reject) {\n      function f() {\n        var err, res;\n        routine && routine(called);\n        called++;\n\n        try {\n          res = cond();\n        } catch (ex) {\n          err = ex;\n        } finally {\n          if (Date.now() >= self.expires || called >= self.limit) {\n            clearInterval(timer);\n\n            if (err !== undefined || res === false) {\n              reject(err || new Error('check failed'));\n            } else {\n              resolve(res);\n            }\n\n            return true;\n          } else if (err === undefined && res !== false) {\n            clearInterval(timer);\n            resolve(res);\n            return true;\n          }\n\n          return false;\n        }\n      }\n\n      setTimeout(function () {\n        if (!f()) {\n          timer = setInterval(f, interval);\n        }\n      }, afterTime);\n    });\n  }\n};\nmodule.exports = {\n  every: function every(interval, limit) {\n    return new Wait(interval, Infinity, 0, limit);\n  },\n  and: function and(func) {\n    return new Wait(100, Infinity, 0).and(func);\n  },\n  limit: function limit(_limit2) {\n    return new Wait(100, Infinity, 0, _limit2);\n  },\n  before: function before(time, limit) {\n    return new Wait(100, time, 0, limit);\n  },\n  after: function after(time) {\n    return new Wait(100, Infinity, time);\n  },\n  sleep: function sleep(time) {\n    return new Wait(100, Infinity, time).check();\n  },\n  until: function until(cond) {\n    return new Wait(100, Infinity).until(cond);\n  },\n  forward: function forward() {\n    return new Wait(100, Infinity).forward();\n  },\n  till: function till(cond) {\n    return new Wait(100, Infinity).till(cond);\n  },\n  check: function check(cond) {\n    return new Wait(100, 0).until(cond);\n  }\n};","// @flow\n\nimport React, { Component } from 'react';\nimport assignIn from 'lodash/assignIn';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport { sendExportLaunched } from '../../../Utils/Analytics/EventSender';\nimport {\n  type Build,\n  buildCordovaAndroid,\n  getUrl,\n} from '../../../Utils/GDevelopServices/Build';\nimport UserProfileContext, {\n  type UserProfile,\n} from '../../../Profile/UserProfileContext';\nimport { Column, Line } from '../../../UI/Grid';\nimport { showErrorBox } from '../../../UI/Messages/MessageBox';\nimport { findGDJS } from '../LocalGDJSFinder';\nimport localFileSystem from '../LocalFileSystem';\nimport { archiveFolder } from '../../../Utils/Archiver';\nimport optionalRequire from '../../../Utils/OptionalRequire.js';\nimport Window from '../../../Utils/Window';\nimport CreateProfile from '../../../Profile/CreateProfile';\nimport LimitDisplayer from '../../../Profile/LimitDisplayer';\nimport {\n  displayProjectErrorsBox,\n  getErrors,\n} from '../../../ProjectManager/ProjectErrorsChecker';\nimport { type Limit } from '../../../Utils/GDevelopServices/Usage';\nimport BuildsWatcher from '../../Builds/BuildsWatcher';\nimport BuildStepsProgress, {\n  type BuildStep,\n} from '../../Builds/BuildStepsProgress';\nconst path = optionalRequire('path');\nconst os = optionalRequire('os');\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\ntype State = {\n  exportStep: BuildStep,\n  build: ?Build,\n  uploadProgress: number,\n  uploadMax: number,\n  errored: boolean,\n};\n\ntype Props = {\n  project: gdProject,\n  onChangeSubscription: Function,\n};\n\nclass LocalOnlineCordovaExport extends Component<Props, State> {\n  state = {\n    exportStep: '',\n    build: null,\n    uploadProgress: 0,\n    uploadMax: 0,\n    errored: false,\n  };\n  buildsWatcher = new BuildsWatcher();\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n        const outputDir = path.join(\n          fileSystem.getTempDir(),\n          'OnlineCordovaExport'\n        );\n        fileSystem.mkDir(outputDir);\n        fileSystem.clearDir(outputDir);\n\n        resolve({\n          exporter,\n          outputDir,\n        });\n      });\n    });\n  };\n\n  componentWillUnmount() {\n    this.buildsWatcher.stop();\n  }\n\n  launchExport = (): Promise<string> => {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return Promise.reject();\n\n    return LocalOnlineCordovaExport.prepareExporter()\n      .then(({ exporter, outputDir }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exportOptions.set('exportForCordova', true);\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        return outputDir;\n      })\n      .catch(err => {\n        showErrorBox(t('Unable to export the game'), err);\n        throw err;\n      });\n  };\n\n  launchCompression = (outputDir: string): Promise<string> => {\n    const archiveOutputDir = os.tmpdir();\n    return archiveFolder({\n      path: outputDir,\n      outputFilename: path.join(archiveOutputDir, 'game-archive.zip'),\n    });\n  };\n\n  launchUpload = (outputFile: string): Promise<string> => {\n    if (!ipcRenderer) return Promise.reject('No support for upload');\n\n    ipcRenderer.removeAllListeners('s3-file-upload-progress');\n    ipcRenderer.removeAllListeners('s3-file-upload-done');\n\n    return new Promise((resolve, reject) => {\n      ipcRenderer.on(\n        's3-file-upload-progress',\n        (event, uploadProgress, uploadMax) => {\n          this.setState({\n            uploadProgress,\n            uploadMax,\n          });\n        }\n      );\n      ipcRenderer.on('s3-file-upload-done', (event, err, prefix) => {\n        if (err) return reject(err);\n        resolve(prefix);\n      });\n      ipcRenderer.send('s3-file-upload', outputFile);\n    });\n  };\n\n  launchBuild = (\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildCordovaAndroid(\n      getAuthorizationHeader,\n      profile.uid,\n      uploadBucketKey\n    );\n  };\n\n  startBuildWatch = (userProfile: UserProfile) => {\n    if (!this.state.build) return;\n\n    this.buildsWatcher.start({\n      userProfile,\n      builds: [this.state.build],\n      onBuildUpdated: (build: Build) => this.setState({ build }),\n    });\n  };\n\n  launchWholeExport = (userProfile: UserProfile) => {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    sendExportLaunched('local-online-cordova');\n\n    if (!displayProjectErrorsBox(t, getErrors(t, project))) return;\n\n    const handleError = (message: string) => err => {\n      if (!this.state.errored) {\n        this.setState({\n          errored: true,\n        });\n        showErrorBox(message + (err.message ? `\\n${err.message}` : ''), {\n          exportStep: this.state.exportStep,\n          rawError: err,\n        });\n      }\n\n      throw err;\n    };\n\n    this.setState({\n      exportStep: 'export',\n      uploadProgress: 0,\n      uploadMax: 0,\n      errored: false,\n      build: null,\n    });\n    this.launchExport()\n      .then(outputDir => {\n        this.setState({\n          exportStep: 'compress',\n        });\n        return this.launchCompression(outputDir);\n      }, handleError(t('Error while exporting the game.')))\n      .then(outputFile => {\n        this.setState({\n          exportStep: 'upload',\n        });\n        return this.launchUpload(outputFile);\n      }, handleError(t('Error while compressing the game.')))\n      .then((uploadBucketKey: string) => {\n        this.setState({\n          exportStep: 'waiting-for-build',\n        });\n        return this.launchBuild(userProfile, uploadBucketKey);\n      }, handleError(t('Error while uploading the game. Check your internet connection or try again later.')))\n      .then(build => {\n        this.setState(\n          {\n            build,\n            exportStep: 'build',\n          },\n          () => {\n            this.startBuildWatch(userProfile);\n          }\n        );\n      }, handleError(t('Error while lauching the build of the game.')));\n  };\n\n  _download = (key: string) => {\n    if (!this.state.build || !this.state.build[key]) return;\n\n    Window.openExternalURL(getUrl(this.state.build[key]));\n  };\n\n  render() {\n    const {\n      exportStep,\n      build,\n      uploadMax,\n      uploadProgress,\n      errored,\n    } = this.state;\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return null;\n\n    const getBuildLimit = (userProfile: UserProfile): ?Limit =>\n      userProfile.limits ? userProfile.limits['cordova-build'] : null;\n    const canLaunchBuild = (userProfile: UserProfile) => {\n      if (!errored && exportStep !== '' && exportStep !== 'build') return false;\n\n      const limit: ?Limit = getBuildLimit(userProfile);\n      if (limit && limit.limitReached) return false;\n\n      return true;\n    };\n\n    return (\n      <UserProfileContext.Consumer>\n        {(userProfile: UserProfile) => (\n          <Column noMargin>\n            <Line>\n              {t(\n                'Packaging your game for Android will create an APK file that can be installed on Android phones, based on Cordova framework.'\n              )}\n            </Line>\n            {userProfile.authenticated && (\n              <Line justifyContent=\"center\">\n                <RaisedButton\n                  label={t('Package for Android')}\n                  primary\n                  onClick={() => this.launchWholeExport(userProfile)}\n                  disabled={!canLaunchBuild(userProfile)}\n                />\n              </Line>\n            )}\n            {userProfile.authenticated && (\n              <LimitDisplayer\n                subscription={userProfile.subscription}\n                limit={getBuildLimit(userProfile)}\n                onChangeSubscription={this.props.onChangeSubscription}\n              />\n            )}\n            {!userProfile.authenticated && (\n              <CreateProfile\n                message={t(\n                  'Create an account to build your game for Android in one-click:'\n                )}\n                onLogin={userProfile.onLogin}\n              />\n            )}\n            <Line expand>\n              <BuildStepsProgress\n                exportStep={exportStep}\n                build={build}\n                onDownload={this._download}\n                uploadMax={uploadMax}\n                uploadProgress={uploadProgress}\n                errored={errored}\n              />\n            </Line>\n          </Column>\n        )}\n      </UserProfileContext.Consumer>\n    );\n  }\n}\n\nexport default LocalOnlineCordovaExport;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport { sendExportLaunched } from '../../Utils/Analytics/EventSender';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport { findGDJS } from './LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport HelpButton from '../../UI/HelpButton';\nimport {\n  displayProjectErrorsBox,\n  getErrors,\n} from '../../ProjectManager/ProjectErrorsChecker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport Window from '../../Utils/Window';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype Props = {|\n  project: gdProject,\n|};\n\ntype State = {|\n  outputDir: string,\n  exportFinishedDialogOpen: boolean,\n|};\n\nclass LocalCordovaExport extends Component<Props, State> {\n  state = {\n    exportFinishedDialogOpen: false,\n    outputDir: '',\n  };\n\n  componentDidMount() {\n    const { project } = this.props;\n    this.setState({\n      outputDir: project ? project.getLastCompilationDirectory() : '',\n    });\n  }\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n        resolve({\n          exporter,\n        });\n      });\n    });\n  };\n\n  launchExport = () => {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return;\n\n    sendExportLaunched('local-cordova');\n\n    if (!displayProjectErrorsBox(t, getErrors(t, project))) return;\n\n    const outputDir = this.state.outputDir;\n    project.setLastCompilationDirectory(outputDir);\n\n    LocalCordovaExport.prepareExporter()\n      .then(({ exporter }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exportOptions.set('exportForCordova', true);\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        this.setState({\n          exportFinishedDialogOpen: true,\n        });\n      })\n      .catch(err => {\n        showErrorBox('Unable to export the game', err);\n      });\n  };\n\n  openExportFolder = () => {\n    if (shell) shell.openItem(this.state.outputDir);\n  };\n\n  openPhoneGapBuild = () => {\n    Window.openExternalURL('https://build.phonegap.com');\n  };\n\n  render() {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return null;\n\n    return (\n      <Column noMargin>\n        <Line>\n          <Column noMargin>\n            <p>\n              This will export your game as a Cordova project. Cordova is a\n              technology that enables HTML5 games to be packaged for <b>iOS</b>,{' '}\n              <b>Android</b> and more.\n            </p>\n            <p>\n              Third-party tools like <b>Adobe PhoneGap Build</b> allow game\n              developers to bundle their games using Cordova.\n            </p>\n          </Column>\n        </Line>\n        <Line>\n          <LocalFolderPicker\n            type=\"export\"\n            value={this.state.outputDir}\n            defaultPath={project.getLastCompilationDirectory()}\n            onChange={value => this.setState({ outputDir: value })}\n            fullWidth\n          />\n        </Line>\n        <Line>\n          <Spacer expand />\n          <RaisedButton\n            label={<Trans>Export</Trans>}\n            primary={true}\n            onClick={this.launchExport}\n            disabled={!this.state.outputDir}\n          />\n        </Line>\n        <Dialog\n          title={t('Export finished')}\n          actions={[\n            <FlatButton\n              key=\"open\"\n              label={<Trans>Open folder</Trans>}\n              primary={true}\n              onClick={this.openExportFolder}\n            />,\n            <FlatButton\n              key=\"close\"\n              label={<Trans>Close</Trans>}\n              primary={false}\n              onClick={() =>\n                this.setState({\n                  exportFinishedDialogOpen: false,\n                })\n              }\n            />,\n          ]}\n          secondaryActions={\n            <HelpButton key=\"help\" helpPagePath=\"/publishing\" />\n          }\n          modal\n          open={this.state.exportFinishedDialogOpen}\n        >\n          <p>\n            You can now compress and upload the game to <b>PhoneGap Build</b>{' '}\n            which will compile it for you to an iOS and Android app.\n          </p>\n          <p>\n            <Trans>\n              You can also compile the game by yourself using Cordova\n              command-line tool to iOS (XCode is required) or Android (Android\n              SDK is required).\n            </Trans>\n          </p>\n          <RaisedButton\n            fullWidth\n            primary\n            onClick={() => this.openPhoneGapBuild()}\n            label={t('Open PhoneGap Build')}\n          />\n        </Dialog>\n      </Column>\n    );\n  }\n}\n\nexport default LocalCordovaExport;\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Toggle from 'material-ui/Toggle';\nimport { sendExportLaunched } from '../../Utils/Analytics/EventSender';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport HelpButton from '../../UI/HelpButton';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport { findGDJS } from './LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\nexport default class LocalCocos2dExport extends Component {\n  state = {\n    exportFinishedDialogOpen: false,\n    outputDir: '',\n    debugMode: false,\n  };\n\n  componentDidMount() {\n    const { project } = this.props;\n    this.setState({\n      outputDir: project ? project.getLastCompilationDirectory() : '',\n    });\n  }\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n        resolve({\n          exporter,\n        });\n      });\n    });\n  };\n\n  launchExport = () => {\n    const { project } = this.props;\n    if (!project) return;\n\n    sendExportLaunched('local-cocos2d');\n\n    const { outputDir, debugMode } = this.state;\n    project.setLastCompilationDirectory(outputDir);\n\n    LocalCocos2dExport.prepareExporter()\n      .then(({ exporter }) => {\n        exporter.exportWholeCocos2dProject(project, debugMode, outputDir);\n        exporter.delete();\n        this.setState({\n          exportFinishedDialogOpen: true,\n        });\n      })\n      .catch(err => {\n        showErrorBox('Unable to export the game with Cocos2d-JS', err);\n      });\n  };\n\n  openExportFolder = () => {\n    shell.openItem(this.state.outputDir);\n  };\n\n  render() {\n    const { project } = this.props;\n    if (!project) return null;\n\n    return (\n      <Column noMargin>\n        <Line>\n          <Trans>\n            This will export your game using Cocos2d-JS game engine. The game\n            can be compiled for Android or iOS if you install Cocos2d-JS\n            developer tools.\n          </Trans>\n        </Line>\n        <Line>\n          <LocalFolderPicker\n            type=\"export\"\n            value={this.state.outputDir}\n            defaultPath={project.getLastCompilationDirectory()}\n            onChange={value => this.setState({ outputDir: value })}\n            fullWidth\n          />\n        </Line>\n        <Line>\n          <Toggle\n            onToggle={(e, check) =>\n              this.setState({\n                debugMode: check,\n              })\n            }\n            toggled={this.state.debugMode}\n            labelPosition=\"right\"\n            label={\n              <Trans>\n                Debug mode (show FPS counter and stats in the bottom left)\n              </Trans>\n            }\n          />\n        </Line>\n        <Line>\n          <Spacer expand />\n          <RaisedButton\n            label={<Trans>Export</Trans>}\n            primary={true}\n            onClick={this.launchExport}\n            disabled={!this.state.outputDir}\n          />\n        </Line>\n        <Dialog\n          title={<Trans>Export finished</Trans>}\n          actions={[\n            <FlatButton\n              key=\"open\"\n              label={<Trans>Open folder</Trans>}\n              primary={true}\n              onClick={this.openExportFolder}\n            />,\n            <FlatButton\n              key=\"close\"\n              label={<Trans>Close</Trans>}\n              primary={false}\n              onClick={() =>\n                this.setState({\n                  exportFinishedDialogOpen: false,\n                })\n              }\n            />,\n          ]}\n          secondaryActions={\n            <HelpButton key=\"help\" helpPagePath=\"/publishing\" />\n          }\n          modal\n          open={this.state.exportFinishedDialogOpen}\n        >\n          You can now upload the game to a web hosting or use Cocos2d-JS command\n          line tools to export it to other platforms like iOS (XCode is\n          required) or Android (Android SDK is required).\n        </Dialog>\n      </Column>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport assignIn from 'lodash/assignIn';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Checkbox from 'material-ui/Checkbox';\nimport { sendExportLaunched } from '../../../Utils/Analytics/EventSender';\nimport {\n  type Build,\n  buildElectron,\n  getUrl,\n} from '../../../Utils/GDevelopServices/Build';\nimport UserProfileContext, {\n  type UserProfile,\n} from '../../../Profile/UserProfileContext';\nimport { Column, Line } from '../../../UI/Grid';\nimport { showErrorBox } from '../../../UI/Messages/MessageBox';\nimport { findGDJS } from '../LocalGDJSFinder';\nimport localFileSystem from '../LocalFileSystem';\nimport { archiveFolder } from '../../../Utils/Archiver';\nimport optionalRequire from '../../../Utils/OptionalRequire.js';\nimport Window from '../../../Utils/Window';\nimport CreateProfile from '../../../Profile/CreateProfile';\nimport LimitDisplayer from '../../../Profile/LimitDisplayer';\nimport {\n  displayProjectErrorsBox,\n  getErrors,\n} from '../../../ProjectManager/ProjectErrorsChecker';\nimport { type Limit } from '../../../Utils/GDevelopServices/Usage';\nimport { type TargetName } from '../../../Utils/GDevelopServices/Build';\nimport BuildsWatcher from '../../Builds/BuildsWatcher';\nimport BuildStepsProgress, {\n  type BuildStep,\n} from '../../Builds/BuildStepsProgress';\nconst path = optionalRequire('path');\nconst os = optionalRequire('os');\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\nconst gd = global.gd;\n\ntype State = {\n  exportStep: BuildStep,\n  build: ?Build,\n  uploadProgress: number,\n  uploadMax: number,\n  errored: boolean,\n  targets: Array<TargetName>,\n};\n\ntype Props = {\n  project: gdProject,\n  onChangeSubscription: Function,\n};\n\nclass LocalOnlineElectronExport extends Component<Props, State> {\n  state = {\n    exportStep: '',\n    build: null,\n    uploadProgress: 0,\n    uploadMax: 0,\n    errored: false,\n    targets: ['winExe'],\n  };\n  buildsWatcher = new BuildsWatcher();\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n        const outputDir = path.join(\n          fileSystem.getTempDir(),\n          'OnlineElectronExport'\n        );\n        fileSystem.mkDir(outputDir);\n        fileSystem.clearDir(outputDir);\n\n        resolve({\n          exporter,\n          outputDir,\n        });\n      });\n    });\n  };\n\n  componentWillUnmount() {\n    this.buildsWatcher.stop();\n  }\n\n  launchExport = (): Promise<string> => {\n    const t = str => str; //TODO\n    const { project } = this.props;\n    if (!project) return Promise.reject();\n\n    return LocalOnlineElectronExport.prepareExporter()\n      .then(({ exporter, outputDir }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exportOptions.set('exportForElectron', true);\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        return outputDir;\n      })\n      .catch(err => {\n        showErrorBox(t('Unable to export the game'), err);\n        throw err;\n      });\n  };\n\n  launchCompression = (outputDir: string): Promise<string> => {\n    const archiveOutputDir = os.tmpdir();\n    return archiveFolder({\n      path: outputDir,\n      outputFilename: path.join(archiveOutputDir, 'game-archive.zip'),\n    });\n  };\n\n  launchUpload = (outputFile: string): Promise<string> => {\n    if (!ipcRenderer) return Promise.reject('No support for upload');\n\n    ipcRenderer.removeAllListeners('s3-file-upload-progress');\n    ipcRenderer.removeAllListeners('s3-file-upload-done');\n\n    return new Promise((resolve, reject) => {\n      ipcRenderer.on(\n        's3-file-upload-progress',\n        (event, uploadProgress, uploadMax) => {\n          this.setState({\n            uploadProgress,\n            uploadMax,\n          });\n        }\n      );\n      ipcRenderer.on('s3-file-upload-done', (event, err, prefix) => {\n        if (err) return reject(err);\n        resolve(prefix);\n      });\n      ipcRenderer.send('s3-file-upload', outputFile);\n    });\n  };\n\n  launchBuild = (\n    userProfile: UserProfile,\n    uploadBucketKey: string\n  ): Promise<Build> => {\n    const { getAuthorizationHeader, profile } = userProfile;\n    if (!profile) return Promise.reject(new Error('User is not authenticated'));\n\n    return buildElectron(\n      getAuthorizationHeader,\n      profile.uid,\n      uploadBucketKey,\n      this.state.targets\n    );\n  };\n\n  startBuildWatch = (userProfile: UserProfile) => {\n    if (!this.state.build) return;\n\n    this.buildsWatcher.start({\n      userProfile,\n      builds: [this.state.build],\n      onBuildUpdated: (build: Build) => this.setState({ build }),\n    });\n  };\n\n  launchWholeExport = (userProfile: UserProfile) => {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    sendExportLaunched('local-online-electron');\n\n    if (!displayProjectErrorsBox(t, getErrors(t, project))) return;\n\n    const handleError = (message: string) => err => {\n      if (!this.state.errored) {\n        this.setState({\n          errored: true,\n        });\n        showErrorBox(message + (err.message ? `\\n${err.message}` : ''), {\n          exportStep: this.state.exportStep,\n          rawError: err,\n        });\n      }\n\n      throw err;\n    };\n\n    this.setState({\n      exportStep: 'export',\n      uploadProgress: 0,\n      uploadMax: 0,\n      errored: false,\n      build: null,\n    });\n    this.launchExport()\n      .then(outputDir => {\n        this.setState({\n          exportStep: 'compress',\n        });\n        return this.launchCompression(outputDir);\n      }, handleError(t('Error while exporting the game.')))\n      .then(outputFile => {\n        this.setState({\n          exportStep: 'upload',\n        });\n        return this.launchUpload(outputFile);\n      }, handleError(t('Error while compressing the game.')))\n      .then((uploadBucketKey: string) => {\n        this.setState({\n          exportStep: 'waiting-for-build',\n        });\n        return this.launchBuild(userProfile, uploadBucketKey);\n      }, handleError(t('Error while uploading the game. Check your internet connection or try again later.')))\n      .then(build => {\n        this.setState(\n          {\n            build,\n            exportStep: 'build',\n          },\n          () => {\n            this.startBuildWatch(userProfile);\n          }\n        );\n      }, handleError(t('Error while lauching the build of the game.')));\n  };\n\n  _download = (key: string) => {\n    if (!this.state.build || !this.state.build[key]) return;\n\n    Window.openExternalURL(getUrl(this.state.build[key]));\n  };\n\n  _setTarget = (targetName: TargetName, enable: boolean) => {\n    if (enable && this.state.targets.indexOf(targetName) === -1) {\n      this.setState({\n        targets: [...this.state.targets, targetName],\n      });\n    } else if (!enable && this.state.targets.indexOf(targetName) !== -1) {\n      this.setState({\n        targets: this.state.targets.filter(name => name !== targetName),\n      });\n    }\n  };\n\n  render() {\n    const {\n      exportStep,\n      build,\n      uploadMax,\n      uploadProgress,\n      errored,\n    } = this.state;\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return null;\n\n    const getBuildLimit = (userProfile: UserProfile): ?Limit =>\n      userProfile.limits ? userProfile.limits['electron-build'] : null;\n    const canLaunchBuild = (userProfile: UserProfile) => {\n      if (!errored && exportStep !== '' && exportStep !== 'build') return false;\n\n      const limit: ?Limit = getBuildLimit(userProfile);\n      if (limit && limit.limitReached) return false;\n\n      if (!this.state.targets.length) return false;\n\n      return true;\n    };\n\n    return (\n      <UserProfileContext.Consumer>\n        {(userProfile: UserProfile) => (\n          <Column noMargin>\n            <Line>\n              {t(\n                'Your game will be exported and packaged online as an stand-alone game for Windows, Linux and/or macOS.'\n              )}\n            </Line>\n            <Checkbox\n              label={<Trans>Windows (zip file)</Trans>}\n              checked={this.state.targets.indexOf('winZip') !== -1}\n              onCheck={(e, checked) => this._setTarget('winZip', checked)}\n            />\n            <Checkbox\n              label={<Trans>Windows (auto-installer file)</Trans>}\n              checked={this.state.targets.indexOf('winExe') !== -1}\n              onCheck={(e, checked) => this._setTarget('winExe', checked)}\n            />\n            <Checkbox\n              label={<Trans>macOS (zip file)</Trans>}\n              checked={this.state.targets.indexOf('macZip') !== -1}\n              onCheck={(e, checked) => this._setTarget('macZip', checked)}\n            />\n            <Checkbox\n              label={<Trans>Linux (AppImage)</Trans>}\n              checked={this.state.targets.indexOf('linuxAppImage') !== -1}\n              onCheck={(e, checked) =>\n                this._setTarget('linuxAppImage', checked)\n              }\n            />\n            {userProfile.authenticated && (\n              <Line justifyContent=\"center\">\n                <RaisedButton\n                  label={t('Export')}\n                  primary\n                  onClick={() => this.launchWholeExport(userProfile)}\n                  disabled={!canLaunchBuild(userProfile)}\n                />\n              </Line>\n            )}\n            {userProfile.authenticated && (\n              <LimitDisplayer\n                subscription={userProfile.subscription}\n                limit={getBuildLimit(userProfile)}\n                onChangeSubscription={this.props.onChangeSubscription}\n              />\n            )}\n            {!userProfile.authenticated && (\n              <CreateProfile\n                message={t(\n                  'Create an account to build your game for Windows, Linux and macOS in one-click:'\n                )}\n                onLogin={userProfile.onLogin}\n              />\n            )}\n            <Line expand>\n              <BuildStepsProgress\n                exportStep={exportStep}\n                build={build}\n                onDownload={this._download}\n                uploadMax={uploadMax}\n                uploadProgress={uploadProgress}\n                errored={errored}\n                showSeeAllMyBuildsExplanation\n              />\n            </Line>\n          </Column>\n        )}\n      </UserProfileContext.Consumer>\n    );\n  }\n}\n\nexport default LocalOnlineElectronExport;\n","// @flow\n\nimport React, { Component } from 'react';\nimport assignIn from 'lodash/assignIn';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport { sendExportLaunched } from '../../../Utils/Analytics/EventSender';\nimport { Column, Line, Spacer } from '../../../UI/Grid';\nimport LocalFilePicker from '../../../UI/LocalFilePicker';\nimport { showErrorBox } from '../../../UI/Messages/MessageBox';\nimport { findGDJS } from '../LocalGDJSFinder';\nimport localFileSystem from '../LocalFileSystem';\nimport Progress from './Progress';\nimport { archiveFolder } from '../../../Utils/Archiver';\nimport optionalRequire from '../../../Utils/OptionalRequire.js';\nimport Window from '../../../Utils/Window';\nimport { getHelpLink } from '../../../Utils/HelpLink';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\nexport type LocalFacebookInstantGamesExportStep =\n  | ''\n  | 'export'\n  | 'compress'\n  | 'done';\n\ntype State = {|\n  archiveOutputFilename: string,\n  exportStep: LocalFacebookInstantGamesExportStep,\n  errored: boolean,\n|};\n\ntype Props = {\n  project: gdProject,\n  onChangeSubscription: Function,\n};\n\nclass LocalFacebookInstantGamesExport extends Component<Props, State> {\n  state = {\n    archiveOutputFilename: app\n      ? path.join(app.getPath('documents'), 'fb-instant-game.zip')\n      : '',\n    exportStep: '',\n    errored: false,\n  };\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n        const outputDir = path.join(\n          fileSystem.getTempDir(),\n          'FacebookInstantGamesExport'\n        );\n        fileSystem.mkDir(outputDir);\n        fileSystem.clearDir(outputDir);\n\n        resolve({\n          exporter,\n          outputDir,\n        });\n      });\n    });\n  };\n\n  launchExport = (): Promise<string> => {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return Promise.reject();\n\n    return LocalFacebookInstantGamesExport.prepareExporter()\n      .then(({ exporter, outputDir }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exportOptions.set('exportForFacebookInstantGames', true);\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        return outputDir;\n      })\n      .catch(err => {\n        showErrorBox(t('Unable to export the game'), err);\n        throw err;\n      });\n  };\n\n  launchCompression = (outputDir: string): Promise<string> => {\n    return archiveFolder({\n      path: outputDir,\n      outputFilename: this.state.archiveOutputFilename,\n    });\n  };\n\n  launchWholeExport = () => {\n    const t = str => str; //TODO\n    sendExportLaunched('local-facebook-instant-games');\n\n    const handleError = (message: string) => err => {\n      if (!this.state.errored) {\n        this.setState({\n          errored: true,\n        });\n        showErrorBox(message, {\n          exportStep: this.state.exportStep,\n          rawError: err,\n        });\n      }\n\n      throw err;\n    };\n\n    this.setState({\n      exportStep: 'export',\n      errored: false,\n    });\n    this.launchExport()\n      .then(outputDir => {\n        this.setState({\n          exportStep: 'compress',\n        });\n        return this.launchCompression(outputDir);\n      }, handleError(t('Error while exporting the game.')))\n      .then(() => {\n        this.setState({\n          exportStep: 'done',\n        });\n      }, handleError(t('Error while building the game.')));\n  };\n\n  openExportFolder = () => {\n    if (shell) shell.openItem(path.dirname(this.state.archiveOutputFilename));\n  };\n\n  openLearnMore = () => {\n    Window.openExternalURL(\n      getHelpLink('/publishing/publishing-to-facebook-instant-games')\n    );\n  };\n\n  render() {\n    const { exportStep, errored } = this.state;\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return null;\n\n    return (\n      <Column noMargin>\n        <Line>\n          {t(\n            'Prepare your game for Facebook Instant Games so that it can be play on Facebook Messenger. GDevelop will create a compressed file that you can upload on your Facebook Developer account.'\n          )}\n        </Line>\n        <Line>\n          <LocalFilePicker\n            title={t('Facebook Instant Games export zip file')}\n            message={t(\n              'Choose where to save the exported file for Facebook Instant Games'\n            )}\n            filters={[\n              {\n                name: t('Compressed file for Facebook Instant Games'),\n                extensions: ['zip'],\n              },\n            ]}\n            value={this.state.archiveOutputFilename}\n            defaultPath={app ? app.getPath('documents') : ''}\n            onChange={value => this.setState({ archiveOutputFilename: value })}\n            fullWidth\n          />\n        </Line>\n        <Line>\n          <Spacer expand />\n          <RaisedButton\n            label={t('Export')}\n            primary\n            onClick={this.launchWholeExport}\n            disabled={!this.state.archiveOutputFilename}\n          />\n        </Line>\n        <Line>\n          <Progress\n            exportStep={exportStep}\n            errored={errored}\n            onOpenExportFolder={this.openExportFolder}\n            onOpenLearnMore={this.openLearnMore}\n          />\n        </Line>\n      </Column>\n    );\n  }\n}\n\nexport default LocalFacebookInstantGamesExport;\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { PureComponent } from 'react';\nimport TextField from 'material-ui/TextField';\nimport FlatButton from 'material-ui/FlatButton';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'baseline',\n  },\n  button: {\n    marginLeft: 10,\n  },\n  textField: {\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  value: string,\n  onChange: string => void,\n  title: string,\n  message: string,\n  defaultPath?: string,\n  fullWidth?: boolean,\n  floatingLabelText?: string,\n  filters: Array<{\n    name: string,\n    extensions: Array<string>,\n  }>,\n|};\n\nexport default class LocalFilePicker extends PureComponent<Props, *> {\n  onChooseFolder = () => {\n    if (!dialog || !electron) return;\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showSaveDialog(\n      browserWindow,\n      {\n        title: this.props.title,\n        filters: this.props.filters,\n        message: this.props.message,\n        defaultPath: this.props.defaultPath,\n      },\n      filename => {\n        this.props.onChange(filename || '');\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          ...styles.container,\n          width: this.props.fullWidth ? '100%' : undefined,\n        }}\n      >\n        <TextField\n          style={styles.textField}\n          floatingLabelText={this.props.floatingLabelText}\n          floatingLabelFixed\n          type=\"text\"\n          hintText={<Trans>Click to choose</Trans>}\n          value={this.props.value}\n          onChange={(event, value) => this.props.onChange(value)}\n        />\n        <FlatButton\n          label={<Trans>Choose</Trans>}\n          style={styles.button}\n          onClick={this.onChooseFolder}\n        />\n      </div>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { Step, Stepper, StepLabel, StepContent } from 'material-ui/Stepper';\nimport CircularProgress from 'material-ui/CircularProgress';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport FlatButton from 'material-ui/FlatButton';\nimport { Line, Spacer } from '../../../UI/Grid';\nimport { type LocalFacebookInstantGamesExportStep } from '.';\n\ntype Props = {|\n  exportStep: LocalFacebookInstantGamesExportStep,\n  errored: boolean,\n  onOpenExportFolder: () => void,\n  onOpenLearnMore: () => void,\n|};\n\nexport default ({\n  exportStep,\n  errored,\n  onOpenExportFolder,\n  onOpenLearnMore,\n}: Props) => (\n  <Stepper\n    activeStep={\n      exportStep === 'export'\n        ? 0\n        : exportStep === 'compress'\n        ? 1\n        : exportStep === 'done'\n        ? 2\n        : undefined\n    }\n    orientation=\"vertical\"\n  >\n    <Step>\n      <StepLabel>Game export</StepLabel>\n      <StepContent>\n        <Line alignItems=\"center\">\n          <CircularProgress size={20} />\n          <Spacer />\n          <p>\n            <Trans>Export in progress...</Trans>\n          </p>\n        </Line>\n      </StepContent>\n    </Step>\n    <Step>\n      <StepLabel>Upload to build service</StepLabel>\n      <StepContent>\n        {errored ? (\n          <p>\n            <Trans>\n              Can't compress the game. Please check that you have rights to\n              write on this computer.\n            </Trans>\n          </p>\n        ) : (\n          <Line alignItems=\"center\">\n            <CircularProgress size={20} />\n            <Spacer />\n            <p>\n              <Trans>Compressing...</Trans>\n            </p>\n          </Line>\n        )}\n      </StepContent>\n    </Step>\n    <Step>\n      <StepLabel>Export finished</StepLabel>\n      <StepContent>\n        <Line expand>\n          You can now create a game on Facebook Instant Games, if not already\n          done, and upload the archive generated.\n        </Line>\n        <Line expand>\n          <FlatButton\n            label={<Trans>Open folder</Trans>}\n            onClick={onOpenExportFolder}\n          />\n          <RaisedButton\n            label={<Trans>Learn more about Instant Games publication</Trans>}\n            primary\n            onClick={onOpenLearnMore}\n          />\n        </Line>\n      </StepContent>\n    </Step>\n  </Stepper>\n);\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport React, { Component } from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport { sendExportLaunched } from '../../Utils/Analytics/EventSender';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport { findGDJS } from './LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport HelpButton from '../../UI/HelpButton';\nimport {\n  displayProjectErrorsBox,\n  getErrors,\n} from '../../ProjectManager/ProjectErrorsChecker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\ntype Props = {|\n  project: gdProject,\n|};\n\ntype State = {|\n  outputDir: string,\n  exportFinishedDialogOpen: boolean,\n|};\n\nclass LocalElectronExport extends Component<Props, State> {\n  state = {\n    exportFinishedDialogOpen: false,\n    outputDir: '',\n  };\n\n  componentDidMount() {\n    const { project } = this.props;\n    this.setState({\n      outputDir: project ? project.getLastCompilationDirectory() : '',\n    });\n  }\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n        resolve({\n          exporter,\n        });\n      });\n    });\n  };\n\n  launchExport = () => {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return;\n\n    sendExportLaunched('local-electron');\n\n    if (!displayProjectErrorsBox(t, getErrors(t, project))) return;\n\n    const outputDir = this.state.outputDir;\n    project.setLastCompilationDirectory(outputDir);\n\n    LocalElectronExport.prepareExporter()\n      .then(({ exporter }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exportOptions.set('exportForElectron', true);\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        this.setState({\n          exportFinishedDialogOpen: true,\n        });\n      })\n      .catch(err => {\n        showErrorBox('Unable to export the game', err);\n      });\n  };\n\n  openExportFolder = () => {\n    if (shell) shell.openItem(this.state.outputDir);\n  };\n\n  render() {\n    const t = str => str; //TODO;\n    const { project } = this.props;\n    if (!project) return null;\n\n    return (\n      <Column noMargin>\n        <Line>\n          <Column noMargin>\n            <p>\n              <Trans>\n                This will export your game so that you can package it for\n                Windows, macOS or Linux. You will need to install third-party\n                tools (Node.js, Electron Builder) to package your game by\n                yourself.\n              </Trans>\n            </p>\n          </Column>\n        </Line>\n        <Line>\n          <LocalFolderPicker\n            type=\"export\"\n            value={this.state.outputDir}\n            defaultPath={project.getLastCompilationDirectory()}\n            onChange={value => this.setState({ outputDir: value })}\n            fullWidth\n          />\n        </Line>\n        <Line>\n          <Spacer expand />\n          <RaisedButton\n            label={<Trans>Export</Trans>}\n            primary={true}\n            onClick={this.launchExport}\n            disabled={!this.state.outputDir}\n          />\n        </Line>\n        <Dialog\n          title={t('Export finished')}\n          actions={[\n            <FlatButton\n              key=\"open\"\n              label={<Trans>Open folder</Trans>}\n              primary={true}\n              onClick={this.openExportFolder}\n            />,\n            <FlatButton\n              key=\"close\"\n              label={<Trans>Close</Trans>}\n              primary={false}\n              onClick={() =>\n                this.setState({\n                  exportFinishedDialogOpen: false,\n                })\n              }\n            />,\n          ]}\n          secondaryActions={\n            <HelpButton key=\"help\" helpPagePath=\"/publishing\" />\n          }\n          modal\n          open={this.state.exportFinishedDialogOpen}\n        >\n          <p>\n            <Trans>\n              The game was properly exported. You can now use Electron Builder\n              (you need Node.js installed and to use the command-line to run it)\n              to create an executable.\n            </Trans>\n          </p>\n        </Dialog>\n      </Column>\n    );\n  }\n}\n\nexport default LocalElectronExport;\n","// @flow\nimport * as React from 'react';\nimport MainFrame from '.';\nimport optionalRequire from '../Utils/OptionalRequire';\nimport { type I18n as I18nType } from '@lingui/core';\nimport { t } from '@lingui/macro';\nimport { isMacLike } from '../Utils/Platform';\nconst electron = optionalRequire('electron');\nconst ipcRenderer = electron ? electron.ipcRenderer : null;\n\ntype Props = {|\n  children: React.Element<typeof MainFrame>,\n  i18n: I18nType,\n|};\n\ntype MainMenuEvent =\n  | 'main-menu-open'\n  | 'main-menu-save'\n  | 'main-menu-save-as'\n  | 'main-menu-close'\n  | 'main-menu-export'\n  | 'main-menu-create'\n  | 'main-menu-open-project-manager'\n  | 'main-menu-open-start-page'\n  | 'main-menu-open-debugger'\n  | 'main-menu-open-about'\n  | 'main-menu-open-preferences'\n  | 'main-menu-open-language'\n  | 'main-menu-open-profile'\n  | 'update-status';\n\ntype MenuItemTemplate =\n  | {|\n      onClickSendEvent?: MainMenuEvent,\n      onClickOpenLink?: string,\n      accelerator?: string,\n      enabled?: boolean,\n      label?: string,\n    |}\n  | {|\n      submenu: Array<MenuItemTemplate>,\n      label: string,\n    |}\n  | {|\n      submenu: Array<MenuItemTemplate>,\n      role: string,\n    |}\n  | {|\n      type: 'separator',\n    |}\n  | {|\n      role: string,\n    |};\n\ntype RootMenuTemplate =\n  | {|\n      label: string,\n      submenu: Array<MenuItemTemplate>,\n    |}\n  | {|\n      role: string,\n      submenu: Array<MenuItemTemplate>,\n    |};\n\n/**\n * Forward events received from Electron main process\n * to the underlying child React component.\n */\nclass ElectronMainMenu extends React.Component<Props, {||}> {\n  _editor: ?MainFrame;\n  _language: ?string;\n\n  componentDidMount() {\n    if (!ipcRenderer) return;\n\n    ipcRenderer.on(\n      ('main-menu-open': MainMenuEvent),\n      event => this._editor && this._editor.chooseProject()\n    );\n    ipcRenderer.on(\n      ('main-menu-save': MainMenuEvent),\n      event => this._editor && this._editor.save()\n    );\n    ipcRenderer.on(\n      ('main-menu-close': MainMenuEvent),\n      event => this._editor && this._editor.askToCloseProject(() => {})\n    );\n    ipcRenderer.on(\n      ('main-menu-export': MainMenuEvent),\n      event => this._editor && this._editor.openExportDialog()\n    );\n    ipcRenderer.on(\n      ('main-menu-create': MainMenuEvent),\n      event => this._editor && this._editor.openCreateDialog()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-project-manager': MainMenuEvent),\n      event => this._editor && this._editor.openProjectManager()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-start-page': MainMenuEvent),\n      event => this._editor && this._editor.openStartPage()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-debugger': MainMenuEvent),\n      event => this._editor && this._editor.openDebugger()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-about': MainMenuEvent),\n      event => this._editor && this._editor.openAboutDialog()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-preferences': MainMenuEvent),\n      event => this._editor && this._editor.openPreferences()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-language': MainMenuEvent),\n      event => this._editor && this._editor.openLanguage()\n    );\n    ipcRenderer.on(\n      ('main-menu-open-profile': MainMenuEvent),\n      event => this._editor && this._editor.openProfile()\n    );\n    ipcRenderer.on(\n      ('update-status': MainMenuEvent),\n      (event, status) => this._editor && this._editor.setUpdateStatus(status)\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.props.i18n.language !== this._language) {\n      this._buildAndSendMenuTemplate();\n      this._language = this.props.i18n.language;\n    }\n  }\n\n  _buildAndSendMenuTemplate() {\n    const { i18n } = this.props;\n    const fileTemplate = {\n      label: i18n._(t`File`),\n      submenu: [\n        {\n          label: i18n._(t`Create a New Project...`),\n          accelerator: 'CommandOrControl+N',\n          onClickSendEvent: 'main-menu-create',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Open...`),\n          accelerator: 'CommandOrControl+O',\n          onClickSendEvent: 'main-menu-open',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Save`),\n          accelerator: 'CommandOrControl+S',\n          onClickSendEvent: 'main-menu-save',\n        },\n        {\n          label: i18n._(t`Save as...`),\n          enabled: false, // TODO: Unimplemented for now\n          onClickSendEvent: 'main-menu-save-as',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Export (web, iOS, Android)...`),\n          onClickSendEvent: 'main-menu-export',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Close Project`),\n          accelerator: 'CommandOrControl+Shift+W',\n          onClickSendEvent: 'main-menu-close',\n        },\n      ],\n    };\n    if (!isMacLike()) {\n      fileTemplate.submenu.push(\n        { type: 'separator' },\n        {\n          label: i18n._(t`My Profile`),\n          onClickSendEvent: 'main-menu-open-profile',\n        },\n        {\n          label: i18n._(t`Preferences`),\n          onClickSendEvent: 'main-menu-open-preferences',\n        },\n        {\n          label: i18n._(t`Language`),\n          onClickSendEvent: 'main-menu-open-language',\n        }\n      );\n    }\n\n    const editTemplate = {\n      label: i18n._(t`Edit`),\n      submenu: [\n        { role: 'undo' },\n        { role: 'redo' },\n        { type: 'separator' },\n        { role: 'cut' },\n        { role: 'copy' },\n        { role: 'paste' },\n        { role: 'pasteandmatchstyle' },\n        { role: 'delete' },\n        { role: 'selectall' },\n      ],\n    };\n\n    const viewTemplate = {\n      label: i18n._(t`View`),\n      submenu: [\n        {\n          label: i18n._(t`Show Project Manager`),\n          accelerator: 'CommandOrControl+Alt+P',\n          onClickSendEvent: 'main-menu-open-project-manager',\n        },\n        {\n          label: i18n._(t`Show Start Page`),\n          onClickSendEvent: 'main-menu-open-start-page',\n        },\n        {\n          label: i18n._(t`Open Debugger`),\n          onClickSendEvent: 'main-menu-open-debugger',\n        },\n        { type: 'separator' },\n        { role: 'toggledevtools' },\n        { type: 'separator' },\n        { role: 'togglefullscreen' },\n      ],\n    };\n\n    const windowTemplate = {\n      role: 'window',\n      submenu: [{ role: 'minimize' }],\n    };\n\n    const helpTemplate = {\n      role: 'help',\n      submenu: [\n        {\n          label: i18n._(t`GDevelop website`),\n          onClickOpenLink: 'http://gdevelop-app.com',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Community Forums`),\n          onClickOpenLink: 'https://forum.gdevelop-app.com',\n        },\n        {\n          label: i18n._(t`Community Discord Chat`),\n          onClickOpenLink: 'https://discord.gg/rjdYHvj',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Contribute to GDevelop`),\n          onClickOpenLink: 'https://gdevelop-app.com/contribute/',\n        },\n        {\n          label: i18n._(t`Create Extensions for GDevelop`),\n          onClickOpenLink:\n            'https://github.com/4ian/GDevelop/blob/master/newIDE/README-extensions.md',\n        },\n        { type: 'separator' },\n        {\n          label: i18n._(t`Help to Translate GDevelop`),\n          onClickOpenLink: 'https://crowdin.com/project/gdevelop',\n        },\n        {\n          label: i18n._(t`Report a wrong translation`),\n          onClickOpenLink: 'https://github.com/4ian/GDevelop/issues/969',\n        },\n      ],\n    };\n    if (!isMacLike()) {\n      helpTemplate.submenu.push(\n        { type: 'separator' },\n        {\n          label: i18n._(t`About GDevelop`),\n          onClickSendEvent: 'main-menu-open-about',\n        }\n      );\n    }\n\n    const template: Array<RootMenuTemplate> = [\n      fileTemplate,\n      editTemplate,\n      viewTemplate,\n      windowTemplate,\n      helpTemplate,\n    ];\n\n    if (isMacLike()) {\n      template.unshift({\n        label: i18n._(t`GDevelop 5`),\n        submenu: [\n          {\n            label: i18n._(t`About GDevelop`),\n            onClickSendEvent: 'main-menu-open-about',\n          },\n          { type: 'separator' },\n          {\n            label: i18n._(t`My Profile`),\n            onClickSendEvent: 'main-menu-open-profile',\n          },\n          {\n            label: i18n._(t`Preferences`),\n            onClickSendEvent: 'main-menu-open-preferences',\n          },\n          {\n            label: i18n._(t`Language`),\n            onClickSendEvent: 'main-menu-open-language',\n          },\n          { type: 'separator' },\n          { role: 'services', submenu: [] },\n          { type: 'separator' },\n          { role: 'hide' },\n          { role: 'hideothers' },\n          { role: 'unhide' },\n          { type: 'separator' },\n          { role: 'quit' },\n        ],\n      });\n\n      editTemplate.submenu.push(\n        { type: 'separator' },\n        {\n          label: i18n._(t`Speech`),\n          submenu: [{ role: 'startspeaking' }, { role: 'stopspeaking' }],\n        }\n      );\n\n      windowTemplate.submenu = [\n        { role: 'minimize' },\n        { role: 'zoom' },\n        { type: 'separator' },\n        { role: 'front' },\n      ];\n    }\n\n    if (ipcRenderer) {\n      ipcRenderer.send('set-main-menu', template);\n    }\n  }\n\n  render() {\n    return React.cloneElement(this.props.children, {\n      ref: editor => (this._editor = editor),\n    });\n  }\n}\n\nexport default ElectronMainMenu;\n","// @flow\n// Note: this file does not use export/imports and use Flow comments to allow its usage from Node.js\n\nconst { loadExtension } = require('.');\nconst optionalRequire = require('../Utils/OptionalRequire');\nconst { findJsExtensionModules } = require('./LocalJsExtensionsFinder');\n\n/*flow-include\nimport type {JsExtensionsLoader, TranslationFunction} from '.';\nimport ObjectsEditorService from '../ObjectEditor/ObjectsEditorService';\nimport ObjectsRenderingService from '../ObjectsRendering/ObjectsRenderingService';\n\ntype MakeExtensionsLoaderArguments = {|\n  gd: any,\n  objectsEditorService: typeof ObjectsEditorService,\n  objectsRenderingService: typeof ObjectsRenderingService,\n  filterExamples: boolean,\n|};\n*/\n\n/**\n * Loader that will find all JS extensions declared in GDJS/Runtime/Extensions/xxx/JsExtension.js.\n * If you add a new extension and also want it to be available for the web-app version, add it in\n * BrowserJsExtensionsLoader.js\n */\nmodule.exports = function makeExtensionsLoader(\n  {\n    gd,\n    objectsEditorService,\n    objectsRenderingService,\n    filterExamples,\n  } /*: MakeExtensionsLoaderArguments*/\n) /*: JsExtensionsLoader*/ {\n  return {\n    loadAllExtensions: (_ /*: TranslationFunction */) => {\n      return findJsExtensionModules({ filterExamples }).then(\n        extensionModulePaths => {\n          return Promise.all(\n            extensionModulePaths.map(extensionModulePath => {\n              let extensionModule = null;\n              try {\n                extensionModule = optionalRequire(extensionModulePath, {\n                  rethrowException: true,\n                });\n              } catch (ex) {\n                return {\n                  extensionModulePath,\n                  result: {\n                    message:\n                      'Unable to import extension. Please check for any syntax error or error that would prevent it from being run.',\n                    error: true,\n                    rawError: ex,\n                  },\n                };\n              }\n\n              if (extensionModule) {\n                // Load any editor for objects, if we have somewhere where\n                // to register them.\n                if (\n                  objectsEditorService &&\n                  extensionModule.registerEditorConfigurations\n                ) {\n                  extensionModule.registerEditorConfigurations(\n                    objectsEditorService\n                  );\n                }\n\n                // Load any renderer for objects, if we have somewhere where\n                // to register them.\n                if (\n                  objectsRenderingService &&\n                  extensionModule.registerInstanceRenderers\n                ) {\n                  extensionModule.registerInstanceRenderers(\n                    objectsRenderingService\n                  );\n                }\n\n                return {\n                  extensionModulePath,\n                  result: loadExtension(\n                    _,\n                    gd,\n                    gd.JsPlatform.get(),\n                    extensionModule\n                  ),\n                };\n              }\n\n              return {\n                extensionModulePath,\n                result: {\n                  error: true,\n                  message:\n                    'Unknown error. Please check for any syntax error or error that would prevent it from being run.',\n                },\n              };\n            })\n          );\n        },\n        err => {\n          console.error(`Unable to find JS extensions modules`);\n          throw err;\n        }\n      );\n    },\n  };\n};\n","// Note: this file does not use export/imports nor Flow to allow its usage from Node.js\n\nconst { findGDJS } = require('../Export/LocalExporters/LocalGDJSFinder');\nconst optionalRequire = require('../Utils/OptionalRequire');\nconst path = optionalRequire('path');\nconst fs = optionalRequire('fs');\n\nconst checkIfPathHasJsExtensionModule = extensionFolderPath => {\n  return new Promise(resolve => {\n    const jsExtensionModulePath = path.join(\n      extensionFolderPath,\n      'JsExtension.js'\n    );\n    fs.stat(jsExtensionModulePath, (err, stats) => {\n      if (err) {\n        return resolve(null);\n      }\n\n      return resolve(stats.isFile() ? jsExtensionModulePath : null);\n    });\n  });\n};\n\nconst findJsExtensionModules = ({ filterExamples }) => {\n  return new Promise((resolve, reject) => {\n    findGDJS(gdjsRoot => {\n      if (!gdjsRoot) {\n        return reject();\n      }\n\n      const extensionsRoot = path.join(gdjsRoot, 'Runtime', 'Extensions');\n      console.info(\n        `Searching for JS extensions (file called JsExtension.js) in ${extensionsRoot}...`\n      );\n      fs.readdir(extensionsRoot, (error, extensionFolders) => {\n        if (error) {\n          return reject(error);\n        }\n\n        const filteredExtensionFolders = extensionFolders.filter(folder => {\n          if (!filterExamples) return true;\n\n          return folder.indexOf('Example') === -1;\n        });\n\n        Promise.all(\n          filteredExtensionFolders.map(extensionFolder =>\n            checkIfPathHasJsExtensionModule(\n              path.join(extensionsRoot, extensionFolder)\n            )\n          )\n        ).then(modulePaths => {\n          resolve(modulePaths.filter(modulePath => !!modulePath));\n        }, reject);\n      });\n    });\n  });\n};\n\nmodule.exports = {\n  findJsExtensionModules,\n};\n","// @flow\nimport { type EventsFunctionCodeWriter } from '..';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nimport slugs from 'slugs';\nconst os = optionalRequire('os');\nconst fs = optionalRequire('fs');\n\n/**\n * Create the EventsFunctionCodeWriter that writes generated code for events functions\n * to local files.\n */\nexport const makeLocalEventsFunctionCodeWriter = (): EventsFunctionCodeWriter => {\n  const outputDir = os.tmpdir() + '/GDGeneratedEventsFunctions';\n  fs.mkdir(outputDir, err => {\n    if (err && err.code !== 'EEXIST') {\n      console.error(\n        'Unable to create the directory where to output events functions generated code: ',\n        err\n      );\n      return;\n    }\n  });\n\n  const getPathFor = (codeNamespace: string) => {\n    return `${outputDir}/${slugs(codeNamespace)}.js`;\n  };\n\n  return {\n    getIncludeFileFor: (codeNamespace: string) => getPathFor(codeNamespace),\n    writeFunctionCode: (\n      functionCodeNamespace: string,\n      code: string\n    ): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        const filepath = getPathFor(functionCodeNamespace);\n        fs.writeFile(filepath, code, err => {\n          if (err) return reject(err);\n\n          resolve();\n        });\n      });\n    },\n    writeBehaviorCode: (\n      behaviorCodeNamespace: string,\n      code: string\n    ): Promise<void> => {\n      return new Promise((resolve, reject) => {\n        const filepath = getPathFor(behaviorCodeNamespace);\n        fs.writeFile(filepath, code, err => {\n          if (err) return reject(err);\n\n          resolve();\n        });\n      });\n    },\n  };\n};\n","// @flow\nimport { serializeToJSObject } from '../../Utils/Serializer';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst fs = optionalRequire('fs-extra');\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst writeJSONFile = (object: Object, filepath: string): Promise<void> => {\n  if (!fs) return Promise.reject(new Error('Filesystem is not supported.'));\n\n  try {\n    const content = JSON.stringify(object, null, 2);\n    return fs.ensureDir(path.dirname(filepath)).then(\n      () =>\n        new Promise((resolve, reject) => {\n          fs.writeFile(filepath, content, (err: ?Error) => {\n            if (err) {\n              return reject(err);\n            }\n\n            return resolve();\n          });\n        })\n    );\n  } catch (stringifyException) {\n    return Promise.reject(stringifyException);\n  }\n};\n\nexport default class LocalEventsFunctionsExtensionWriter {\n  static chooseEventsFunctionExtensionFile = (): Promise<?string> => {\n    return new Promise((resolve, reject) => {\n      if (!dialog) return reject('Not supported');\n\n      const browserWindow = electron.remote.getCurrentWindow();\n      dialog.showSaveDialog(\n        browserWindow,\n        {\n          title: 'Export an extension of the project',\n          filters: [\n            {\n              name: 'GDevelop 5 \"events based\" extension',\n              extensions: ['json'],\n            },\n          ],\n          defaultPath: 'Extension.json',\n        },\n        path => {\n          if (!path) return resolve(null);\n\n          return resolve(path);\n        }\n      );\n    });\n  };\n\n  static writeEventsFunctionsExtension = (\n    extension: gdEventsFunctionsExtension,\n    filepath: string\n  ): Promise<void> => {\n    const serializedObject = serializeToJSObject(extension);\n    return writeJSONFile(serializedObject, filepath).catch(err => {\n      console.error('Unable to write the events function extension:', err);\n      throw err;\n    });\n  };\n}\n","// @flow\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst fs = optionalRequire('fs');\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst readJSONFile = (filepath: string): Promise<Object> => {\n  if (!fs) return Promise.reject('Filesystem is not supported.');\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(filepath, { encoding: 'utf8' }, (err, data) => {\n      if (err) return reject(err);\n\n      try {\n        const dataObject = JSON.parse(data);\n        return resolve(dataObject);\n      } catch (ex) {\n        return reject(filepath + ' is a corrupted/malformed file.');\n      }\n    });\n  });\n};\n\nexport default class LocalEventsFunctionsExtensionOpener {\n  static chooseEventsFunctionExtensionFile = (): Promise<?string> => {\n    return new Promise((resolve, reject) => {\n      if (!dialog) return reject('Not supported');\n\n      const browserWindow = electron.remote.getCurrentWindow();\n      dialog.showOpenDialog(\n        browserWindow,\n        {\n          title: 'Import an extension in the project',\n          properties: ['openFile'],\n          message: 'Choose an extension file to import (.json file)',\n          filters: [\n            {\n              name: 'GDevelop 5 \"events based\" extension',\n              extensions: ['json'],\n            },\n          ],\n        },\n        paths => {\n          if (!paths || !paths.length) return resolve(null);\n\n          return resolve(paths[0]);\n        }\n      );\n    });\n  };\n\n  static readEventsFunctionExtensionFile = (\n    filepath: string\n  ): Promise<Object> => {\n    return readJSONFile(filepath);\n  };\n}\n","// @flow\nimport React from 'react';\nimport MainFrame from './MainFrame';\nimport Window from './Utils/Window';\nimport ExportDialog from './Export/ExportDialog';\nimport CreateProjectDialog from './ProjectCreation/CreateProjectDialog';\nimport Authentification from './Utils/GDevelopServices/Authentification';\nimport './UI/iconmoon-font.css'; // Styles for Iconmoon font.\n\n// Import for Electron powered IDE.\nimport ExternalEditor from './ExternalEditor';\nimport LocalExamples from './ProjectCreation/LocalExamples';\nimport LocalStarters from './ProjectCreation/LocalStarters';\nimport localResourceSources from './ResourcesList/LocalResourceSources';\nimport localResourceExternalEditors from './ResourcesList/LocalResourceExternalEditors';\nimport LocalProjectWriter from './ProjectsStorage/LocalProjectWriter';\nimport LocalProjectOpener from './ProjectsStorage/LocalProjectOpener';\nimport LocalPreviewLauncher from './Export/LocalExporters/LocalPreviewLauncher';\nimport { getLocalExporters } from './Export/LocalExporters';\nimport ElectronMainMenu from './MainFrame/ElectronMainMenu';\nimport makeExtensionsLoader from './JsExtensionsLoader/LocalJsExtensionsLoader';\nimport { makeLocalEventsFunctionCodeWriter } from './EventsFunctionsExtensionsLoader/CodeWriters/LocalEventsFunctionCodeWriter';\nimport ObjectsEditorService from './ObjectEditor/ObjectsEditorService';\nimport ObjectsRenderingService from './ObjectsRendering/ObjectsRenderingService';\nimport Providers from './MainFrame/Providers';\nimport LocalEventsFunctionsExtensionWriter from './EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionWriter';\nimport LocalEventsFunctionsExtensionOpener from './EventsFunctionsExtensionsLoader/Storage/LocalEventsFunctionsExtensionOpener';\nconst gd = global.gd;\n\nexport const create = (authentification: Authentification) => {\n  Window.setUpContextMenu();\n\n  let app = null;\n  const appArguments = Window.getArguments();\n\n  if (appArguments['server-port']) {\n    app = (\n      <Providers\n        authentification={authentification}\n        disableCheckForUpdates={!!appArguments['disable-update-check']}\n        eventsFunctionCodeWriter={null}\n        eventsFunctionsExtensionWriter={null}\n        eventsFunctionsExtensionOpener={null}\n      >\n        {({ i18n, eventsFunctionsExtensionsState }) => (\n          <ExternalEditor\n            serverPort={appArguments['server-port']}\n            isIntegrated={appArguments['mode'] === 'integrated'}\n            editor={appArguments['editor']}\n            editedElementName={appArguments['edited-element-name']}\n          >\n            <MainFrame\n              i18n={i18n}\n              eventsFunctionsExtensionsState={eventsFunctionsExtensionsState}\n              resourceSources={localResourceSources}\n              authentification={authentification}\n              onReadFromPathOrURL={() =>\n                Promise.reject('Should never be called')\n              }\n              resourceExternalEditors={localResourceExternalEditors}\n              initialPathsOrURLsToOpen={[]}\n            />\n          </ExternalEditor>\n        )}\n      </Providers>\n    );\n  } else {\n    app = (\n      <Providers\n        authentification={authentification}\n        disableCheckForUpdates={!!appArguments['disable-update-check']}\n        eventsFunctionCodeWriter={makeLocalEventsFunctionCodeWriter()}\n        eventsFunctionsExtensionWriter={LocalEventsFunctionsExtensionWriter}\n        eventsFunctionsExtensionOpener={LocalEventsFunctionsExtensionOpener}\n      >\n        {({ i18n, eventsFunctionsExtensionsState }) => (\n          <ElectronMainMenu i18n={i18n}>\n            <MainFrame\n              i18n={i18n}\n              eventsFunctionsExtensionsState={eventsFunctionsExtensionsState}\n              previewLauncher={<LocalPreviewLauncher />}\n              exportDialog={<ExportDialog exporters={getLocalExporters()} />}\n              createDialog={\n                <CreateProjectDialog\n                  examplesComponent={LocalExamples}\n                  startersComponent={LocalStarters}\n                />\n              }\n              onSaveProject={LocalProjectWriter.saveProject}\n              onAutoSaveProject={LocalProjectWriter.autoSaveProject}\n              onChooseProject={LocalProjectOpener.chooseProjectFile}\n              onReadFromPathOrURL={LocalProjectOpener.readProjectFile}\n              shouldOpenAutosave={LocalProjectOpener.shouldOpenAutosave}\n              resourceSources={localResourceSources}\n              resourceExternalEditors={localResourceExternalEditors}\n              authentification={authentification}\n              extensionsLoader={makeExtensionsLoader({\n                gd,\n                objectsEditorService: ObjectsEditorService,\n                objectsRenderingService: ObjectsRenderingService,\n                filterExamples: !Window.isDev(),\n              })}\n              initialPathsOrURLsToOpen={appArguments['_']}\n            />\n          </ElectronMainMenu>\n        )}\n      </Providers>\n    );\n  }\n\n  return app;\n};\n","import optionalRequire from '../../Utils/OptionalRequire.js';\nvar fs = optionalRequire('fs-extra');\nvar path = optionalRequire('path');\nvar os = optionalRequire('os');\nconst gd = global.gd;\n\nexport default {\n  mkDir: function(path) {\n    try {\n      fs.mkdirsSync(path);\n    } catch (e) {\n      console.log('mkDir(' + path + ') failed: ' + e);\n      return false;\n    }\n    return true;\n  },\n  dirExists: function(path) {\n    return fs.existsSync(path);\n  },\n  clearDir: function(path) {\n    var files = [];\n    var that = this;\n    if (fs.existsSync(path)) {\n      files = fs.readdirSync(path);\n      files.forEach(function(file) {\n        var curPath = path + '/' + file;\n        if (fs.lstatSync(curPath).isDirectory()) {\n          // recurse\n          that.clearDir(curPath);\n        } else {\n          // delete file\n          fs.unlinkSync(curPath);\n        }\n      });\n    }\n  },\n  getTempDir: function() {\n    return os.tmpdir();\n  },\n  fileNameFrom: function(fullpath) {\n    if (this._isExternalURL(fullpath)) return fullpath;\n\n    fullpath = this._translateURL(fullpath);\n    return path.basename(fullpath);\n  },\n  dirNameFrom: function(fullpath) {\n    if (this._isExternalURL(fullpath)) return '';\n\n    fullpath = this._translateURL(fullpath);\n    return path.dirname(fullpath);\n  },\n  makeAbsolute: function(filename, baseDirectory) {\n    if (this._isExternalURL(filename)) return filename;\n\n    filename = this._translateURL(filename);\n    if (!this.isAbsolute(baseDirectory))\n      baseDirectory = path.resolve(baseDirectory);\n\n    return path.resolve(baseDirectory, path.normalize(filename));\n  },\n  makeRelative: function(filename, baseDirectory) {\n    if (this._isExternalURL(filename)) return filename;\n\n    filename = this._translateURL(filename);\n    return path.relative(baseDirectory, path.normalize(filename));\n  },\n  isAbsolute: function(fullpath) {\n    if (this._isExternalURL(fullpath)) return true;\n\n    if (fullpath.length === 0) return true;\n    fullpath = this._translateURL(fullpath);\n    return (\n      (fullpath.length > 0 && fullpath.charAt(0) === '/') ||\n      (fullpath.length > 1 && fullpath.charAt(1) === ':')\n    );\n  },\n  copyFile: function(source, dest) {\n    //URL are not copied.\n    if (this._isExternalURL(source)) return true;\n\n    source = this._translateURL(source);\n    try {\n      if (source !== dest) fs.copySync(source, dest);\n    } catch (e) {\n      console.log('copyFile(' + source + ', ' + dest + ') failed: ' + e);\n      return false;\n    }\n    return true;\n  },\n  copyDir: function(source, dest) {\n    throw new Error(\n      'copyDir was never tested, please check that it does what you want to.'\n    );\n\n    // try {\n    //   if (source !== dest)\n    //     fs.copySync(source, dest, {\n    //       clobber: true,\n    //     });\n    // } catch (e) {\n    //   console.log('copyDir(' + source + ', ' + dest + ') failed: ' + e);\n    //   return false;\n    // }\n    // return true;\n  },\n  writeToFile: function(file, contents) {\n    try {\n      fs.outputFileSync(file, contents);\n    } catch (e) {\n      console.log('writeToFile(' + file + ', ...) failed: ' + e);\n      return false;\n    }\n    return true;\n  },\n  readFile: function(file) {\n    try {\n      var contents = fs.readFileSync(file);\n      return contents.toString();\n    } catch (e) {\n      console.log('readFile(' + file + ') failed: ' + e);\n      return '';\n    }\n  },\n  readDir: function(path, ext) {\n    ext = ext.toUpperCase();\n    var output = new gd.VectorString();\n    try {\n      var files = [];\n      if (fs.existsSync(path)) {\n        files = fs.readdirSync(path);\n        files.forEach(function(file) {\n          if (\n            ext.length === 0 ||\n            file.toUpperCase().indexOf(ext, file.length - ext.length) !== -1\n          ) {\n            output.push_back(path + '/' + file);\n          }\n        });\n      }\n    } catch (e) {\n      console.log('readDir(' + path + ',' + ext + ') failed: ' + e);\n    }\n\n    return output;\n  },\n  fileExists: function(filename) {\n    filename = this._translateURL(filename);\n    try {\n      const stat = fs.statSync(filename);\n      return stat.isFile();\n    } catch (e) {\n      return false;\n    }\n  },\n  _isExternalURL: function(filename) {\n    return filename.substr(0, 4) === 'http' || filename.substr(0, 4) === 'ftp';\n  },\n  /**\n   * Return the filename associated to the URL on the server, relative to the games directory.\n   * (i.e: Transform g/mydirectory/myfile.png to mydirectory/myfile.png).\n   */\n  _translateURL: function(filename) {\n    if (filename.substr(0, 2) === 'g/' || filename.substr(0, 2) === 'g\\\\')\n      filename = filename.substr(2);\n\n    return filename;\n  },\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { t } from '@lingui/macro';\nimport { type I18n as I18nType } from '@lingui/core';\n\nimport React, { PureComponent } from 'react';\nimport TextField from 'material-ui/TextField';\nimport FlatButton from 'material-ui/FlatButton';\nimport optionalRequire from '../../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst dialog = electron ? electron.remote.dialog : null;\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'baseline',\n  },\n  button: {\n    marginLeft: 10,\n  },\n  textField: {\n    flex: 1,\n  },\n};\n\ntype Props = {|\n  type: 'export' | 'create-game',\n  value: string,\n  onChange: string => void,\n  defaultPath?: string,\n  fullWidth?: boolean,\n  floatingLabelText?: string,\n|};\n\ntype TitleAndMessage = {|\n  title: ?string,\n  message: ?string,\n|};\n\nexport default class LocalFolderPicker extends PureComponent<Props, {||}> {\n  _onChooseFolder = ({ title, message }: TitleAndMessage) => {\n    if (!dialog || !electron) return;\n\n    const browserWindow = electron.remote.getCurrentWindow();\n    dialog.showOpenDialog(\n      browserWindow,\n      {\n        title,\n        properties: ['openDirectory', 'createDirectory'],\n        message,\n        defaultPath: this.props.defaultPath,\n      },\n      paths => {\n        if (!paths || !paths.length) return;\n\n        this.props.onChange(paths[0]);\n      }\n    );\n  };\n\n  _getTitleAndMessage = (i18n: I18nType): TitleAndMessage => {\n    const { type } = this.props;\n    if (type === 'export') {\n      return {\n        title: i18n._(t`Choose an export folder`),\n        message: i18n._(t`Choose where to export the game`),\n      };\n    } else if (type === 'create-game') {\n      return {\n        title: i18n._(t`Choose a folder for the new game`),\n        message: i18n._(t`Choose where to create the game`),\n      };\n    }\n\n    return {\n      title: undefined,\n      message: undefined,\n    };\n  };\n\n  render() {\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <div\n            style={{\n              ...styles.container,\n              width: this.props.fullWidth ? '100%' : undefined,\n            }}\n          >\n            <TextField\n              style={styles.textField}\n              floatingLabelText={this.props.floatingLabelText}\n              floatingLabelFixed\n              type=\"text\"\n              hintText={<Trans>Click to choose</Trans>}\n              value={this.props.value}\n              onChange={(event, value) => this.props.onChange(value)}\n            />\n            <FlatButton\n              label={<Trans>Choose folder</Trans>}\n              style={styles.button}\n              onClick={() =>\n                this._onChooseFolder(this._getTitleAndMessage(i18n))\n              }\n            />\n          </div>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\n\nimport optionalRequire from './OptionalRequire.js';\nconst fs = optionalRequire('fs');\nconst archiver = optionalRequire('archiver');\n\n/**\n * Archive the given folder to a file. Only available when running on Electron runtime.\n */\nexport const archiveFolder = ({\n  path,\n  outputFilename,\n}: {\n  path: string,\n  outputFilename: string,\n}): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    if (!fs || !archiver) return reject(new Error('Archiver unavailable'));\n\n    const output = fs.createWriteStream(outputFilename);\n    const archive = archiver('zip', {\n      zlib: { level: 9 }, // Sets the compression level.\n    });\n\n    output.on('close', () => {\n      console.log(\n        `Archive written at ${outputFilename}, ${archive.pointer()} total bytes.`\n      );\n      resolve(outputFilename);\n    });\n\n    archive.on('error', err => {\n      reject(err);\n    });\n\n    archive.pipe(output);\n\n    archive.directory(path, false);\n\n    archive.finalize();\n  });\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\nimport { t } from '@lingui/macro';\nimport { I18n } from '@lingui/react';\nimport { type I18n as I18nType } from '@lingui/core';\nimport React, { Component } from 'react';\nimport Divider from 'material-ui/Divider';\nimport LocalFolderPicker from '../UI/LocalFolderPicker';\nimport { sendNewGameCreated } from '../Utils/Analytics/EventSender';\nimport { Column, Line } from '../UI/Grid';\nimport { findExamples } from './LocalExamplesFinder';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nimport { findEmptyPath } from './LocalPathFinder';\nimport ExamplesList from './ExamplesList';\nimport { showWarningBox } from '../UI/Messages/MessageBox';\nconst path = optionalRequire('path');\nconst electron = optionalRequire('electron');\nconst app = electron ? electron.remote.app : null;\nvar fs = optionalRequire('fs-extra');\n\ntype Props = {|\n  onOpen: string => void,\n  onExamplesLoaded: () => void,\n|};\n\ntype State = {|\n  outputPath: string,\n  exampleNames: ?Array<string>,\n|};\n\nexport const showGameFileCreationError = (\n  i18n: I18nType,\n  outputPath: string,\n  error: Error\n) => {\n  showWarningBox(\n    i18n._(\n      t`Unable to create the game in the specified folder. Check that you have permissions to write in this folder: ${outputPath} or choose another folder.`\n    ),\n    error\n  );\n};\n\nexport default class LocalExamples extends Component<Props, State> {\n  state = {\n    outputPath: findEmptyPath(\n      path && app\n        ? path.join(app.getPath('documents'), 'GDevelop projects')\n        : ''\n    ),\n    exampleNames: null,\n  };\n\n  componentDidMount() {\n    findExamples(examplesPath => {\n      fs.readdir(examplesPath, (error, exampleNames) => {\n        if (error) {\n          console.error('Unable to read examples:', error);\n          return;\n        }\n\n        this.setState(\n          {\n            exampleNames: exampleNames.filter(name => name !== '.DS_Store'),\n          },\n          () => this.props.onExamplesLoaded()\n        );\n      });\n    });\n  }\n\n  _handleChangePath = (outputPath: string) =>\n    this.setState({\n      outputPath,\n    });\n\n  createFromExample = (i18n: I18nType, exampleName: string) => {\n    const { outputPath } = this.state;\n    if (!fs || !outputPath) return;\n\n    findExamples(examplesPath => {\n      try {\n        fs.mkdirsSync(outputPath);\n        fs.copySync(path.join(examplesPath, exampleName), outputPath);\n      } catch (error) {\n        showGameFileCreationError(i18n, outputPath, error);\n        return;\n      }\n\n      this.props.onOpen(path.join(outputPath, exampleName + '.json'));\n      sendNewGameCreated(exampleName);\n    });\n  };\n\n  render() {\n    return (\n      <I18n>\n        {({ i18n }) => (\n          <Column noMargin>\n            <Column>\n              <p>\n                <Trans>Choose or search for an example to open:</Trans>\n              </p>\n            </Column>\n            <Line>\n              <ExamplesList\n                exampleNames={this.state.exampleNames}\n                onCreateFromExample={exampleName =>\n                  this.createFromExample(i18n, exampleName)\n                }\n              />\n            </Line>\n            <Divider />\n            <Line expand>\n              <Column expand>\n                <LocalFolderPicker\n                  fullWidth\n                  value={this.state.outputPath}\n                  onChange={this._handleChangePath}\n                  type=\"create-game\"\n                />\n              </Column>\n            </Line>\n          </Column>\n        )}\n      </I18n>\n    );\n  }\n}\n","// @flow\n\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst electron = optionalRequire('electron');\nconst path = optionalRequire('path');\nconst app = electron ? electron.remote.app : null;\nconst fs = optionalRequire('fs');\nconst process = optionalRequire('process');\n\nconst tryPath = (\n  path: string,\n  onExists: string => void,\n  onNoAccess: Function\n) =>\n  fs.access(path, fs.constants.R_OK, err => {\n    if (!err) onExists(path);\n    else onNoAccess();\n  });\n\nexport const findExamples = (cb: (?string) => void) => {\n  if (!process || !fs) return '';\n\n  const appPath = app ? app.getAppPath() : process.cwd();\n\n  // First try to find examples in app resources folder\n  tryPath(path.join(appPath, '..', 'examples'), cb, () => {\n    tryPath(\n      path.join(appPath, '..', '..', 'app', 'resources', 'examples'),\n      cb,\n      () => {\n        cb(null);\n      }\n    );\n  });\n};\n","import generateName from '../Utils/NewNameGenerator';\nimport optionalRequire from '../Utils/OptionalRequire.js';\nconst path = optionalRequire('path');\nvar fs = optionalRequire('fs-extra');\n\nexport const findEmptyPath = basePath => {\n  if (!path) return basePath;\n\n  const folderName = generateName('My project', name => {\n    try {\n      fs.accessSync(path.join(basePath, name));\n    } catch (ex) {\n      return false;\n    }\n    return true;\n  });\n\n  return path.join(basePath, folderName);\n};\n","// @flow\n// TODO: This module could be published on npm if useful.\nimport newNameGenerator from './NewNameGenerator';\nimport slugs from 'slugs';\n\ntype PartialObjectDescription = {|\n  reference: string,\n  object: Object,\n|};\n\ntype Reference = {\n  referenceTo: string,\n};\n\ntype SplitConfiguration = {|\n  pathSeparator: string,\n  getArrayItemReferenceName: (\n    object: Object,\n    currentReference: string\n  ) => string,\n  shouldSplit: (path: string) => boolean,\n  isReferenceMagicPropertyName: string,\n|};\n\ntype UnsplitConfiguration = {|\n  isReferenceMagicPropertyName: string,\n  getReferencePartialObject: (referencePath: string) => Promise<Object>,\n  maxUnsplitDepth?: number,\n|};\n\n/**\n * Mutate the given object to split it into multiple partial objects.\n * Partial objects will be replaced by references.\n *\n * @param object The object to be split.\n * @param configuration Configuration to be used to split the object.\n */\nexport const split = (\n  object: Object,\n  {\n    pathSeparator,\n    getArrayItemReferenceName,\n    shouldSplit,\n    isReferenceMagicPropertyName,\n  }: SplitConfiguration\n): Array<PartialObjectDescription> => {\n  const partialObjects = [];\n  const createReference = (reference, object): Reference => {\n    partialObjects.push({\n      reference,\n      object,\n    });\n\n    return {\n      [isReferenceMagicPropertyName]: true,\n      referenceTo: reference,\n    };\n  };\n\n  const splitObject = (\n    currentObject: Object,\n    currentPath: string,\n    currentReference: string\n  ) => {\n    if (currentObject !== null && typeof currentObject === 'object') {\n      if (Array.isArray(currentObject)) {\n        for (let index in currentObject) {\n          const itemPath = currentPath + pathSeparator + '*';\n          if (shouldSplit(itemPath)) {\n            const partialObject = currentObject[index];\n            const name = getArrayItemReferenceName(\n              partialObject,\n              currentReference\n            );\n            const itemReference = currentReference + pathSeparator + name;\n\n            currentObject[index] = createReference(\n              itemReference,\n              partialObject\n            );\n\n            splitObject(partialObject, itemPath, itemReference);\n          } else {\n            const itemReference = currentReference + pathSeparator + index;\n\n            splitObject(currentObject[index], itemPath, itemReference);\n          }\n        }\n      } else {\n        for (let propertyName in currentObject) {\n          const propertyPath = currentPath + pathSeparator + propertyName;\n          const propertyReference =\n            currentReference + pathSeparator + propertyName;\n          if (shouldSplit(propertyPath)) {\n            const partialObject = currentObject[propertyName];\n\n            currentObject[propertyName] = createReference(\n              propertyReference,\n              partialObject\n            );\n\n            splitObject(partialObject, propertyPath, propertyReference);\n          } else {\n            splitObject(\n              currentObject[propertyName],\n              propertyPath,\n              propertyReference\n            );\n          }\n        }\n      }\n    }\n  };\n\n  splitObject(object, '', '');\n  return partialObjects;\n};\n\n/**\n * Mutate the given object to recompose it from partial objects.\n * References to partial objects will be fetched as needed.\n *\n * @param object The object to be unsplit.\n * @param configuration Configuration to be used to unsplit the object.\n */\nexport const unsplit = (\n  object: Object,\n  {\n    isReferenceMagicPropertyName,\n    getReferencePartialObject,\n    maxUnsplitDepth,\n  }: UnsplitConfiguration\n): Promise<void> => {\n  const isReference = (object: Object): ?Reference => {\n    if (object[isReferenceMagicPropertyName] === true) {\n      return object;\n    }\n\n    return null;\n  };\n\n  const unsplitObject = (\n    currentObject: Object,\n    depth: number\n  ): Promise<void> => {\n    if (maxUnsplitDepth !== undefined && depth >= maxUnsplitDepth) {\n      return Promise.resolve();\n    }\n\n    if (currentObject !== null && typeof currentObject === 'object') {\n      const keys = Object.keys(currentObject);\n      if (keys) {\n        return Promise.all(\n          keys.map(indexOrPropertyName => {\n            const reference = isReference(currentObject[indexOrPropertyName]);\n            if (reference) {\n              return getReferencePartialObject(reference.referenceTo).then(\n                partialObject => {\n                  currentObject[indexOrPropertyName] = partialObject;\n\n                  return unsplitObject(\n                    currentObject[indexOrPropertyName],\n                    depth + 1\n                  );\n                }\n              );\n            }\n\n            return unsplitObject(currentObject[indexOrPropertyName], depth + 1);\n          })\n        ).then(() => {});\n      }\n    }\n\n    return Promise.resolve();\n  };\n\n  return unsplitObject(object, 0);\n};\n\n/**\n * A helper that can be used to split according to a list of hardcoded paths\n */\nexport const splitPaths = (paths: Set<string>) => {\n  return (path: string) => paths.has(path);\n};\n\n/**\n * A helper that can be used to get the name of items in array using an hardcoded property name.\n */\nexport const getNameFromProperty = (propertyName: string) => {\n  return (object: Object): string => {\n    const property = object[propertyName];\n    if (typeof property !== 'string') {\n      throw new Error(`Property ${propertyName} is not a string`);\n    }\n\n    return property;\n  };\n};\n\n/**\n * A helper that can be used to get the name of items in array using an hardcoded property name.\n */\nexport const getSlugifiedUniqueNameFromProperty = (propertyName: string) => {\n  const existingNamesForReference = {};\n\n  return (object: Object, currentReference: string): string => {\n    const property = object[propertyName];\n    if (typeof property !== 'string') {\n      throw new Error(`Property ${propertyName} is not a string`);\n    }\n\n    existingNamesForReference[currentReference] =\n      existingNamesForReference[currentReference] || {};\n    const newName = newNameGenerator(\n      slugs(property),\n      name => !!existingNamesForReference[currentReference][name]\n    );\n    existingNamesForReference[currentReference][newName] = true;\n    return newName;\n  };\n};\n","import { Trans } from '@lingui/macro';\nimport React, { Component } from 'react';\nimport Dialog from '../../UI/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport { sendExportLaunched } from '../../Utils/Analytics/EventSender';\nimport { Column, Line, Spacer } from '../../UI/Grid';\nimport { showErrorBox } from '../../UI/Messages/MessageBox';\nimport { findGDJS } from './LocalGDJSFinder';\nimport localFileSystem from './LocalFileSystem';\nimport LocalFolderPicker from '../../UI/LocalFolderPicker';\nimport assignIn from 'lodash/assignIn';\nimport optionalRequire from '../../Utils/OptionalRequire';\nimport Window from '../../Utils/Window';\nimport { getHelpLink } from '../../Utils/HelpLink';\nimport AlertMessage from '../../UI/AlertMessage';\nconst electron = optionalRequire('electron');\nconst shell = electron ? electron.shell : null;\n\nconst gd = global.gd;\n\nexport default class LocalExport extends Component {\n  state = {\n    exportFinishedDialogOpen: false,\n    outputDir: '',\n  };\n\n  componentDidMount() {\n    const { project } = this.props;\n    this.setState({\n      outputDir: project ? project.getLastCompilationDirectory() : '',\n    });\n  }\n\n  static prepareExporter = (): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      findGDJS(gdjsRoot => {\n        if (!gdjsRoot) {\n          showErrorBox('Could not find GDJS');\n          return reject();\n        }\n        console.info('GDJS found in ', gdjsRoot);\n\n        const fileSystem = assignIn(\n          new gd.AbstractFileSystemJS(),\n          localFileSystem\n        );\n        const exporter = new gd.Exporter(fileSystem, gdjsRoot);\n\n        resolve({\n          exporter,\n        });\n      });\n    });\n  };\n\n  launchExport = () => {\n    const { project } = this.props;\n    if (!project) return;\n\n    sendExportLaunched('local');\n\n    const outputDir = this.state.outputDir;\n    project.setLastCompilationDirectory(outputDir);\n\n    LocalExport.prepareExporter()\n      .then(({ exporter }) => {\n        const exportOptions = new gd.MapStringBoolean();\n        exporter.exportWholePixiProject(project, outputDir, exportOptions);\n        exportOptions.delete();\n        exporter.delete();\n\n        this.setState({\n          exportFinishedDialogOpen: true,\n        });\n      })\n      .catch(err => {\n        showErrorBox('Unable to export the game', err);\n      });\n  };\n\n  openExportFolder = () => {\n    if (shell) shell.openItem(this.state.outputDir);\n  };\n\n  render() {\n    const { project } = this.props;\n    if (!project) return null;\n\n    return (\n      <Column noMargin>\n        <Line>\n          <Trans>\n            This will export your game to a folder that you can then upload on a\n            website or on game hosting like itch.io.\n          </Trans>\n        </Line>\n        <Line>\n          <LocalFolderPicker\n            type=\"export\"\n            value={this.state.outputDir}\n            defaultPath={project.getLastCompilationDirectory()}\n            onChange={value => this.setState({ outputDir: value })}\n            fullWidth\n          />\n        </Line>\n        <Line>\n          <Spacer expand />\n          <RaisedButton\n            label={<Trans>Export</Trans>}\n            primary={true}\n            onClick={this.launchExport}\n            disabled={!this.state.outputDir}\n          />\n        </Line>\n        <Dialog\n          title={<Trans>Export finished</Trans>}\n          actions={[\n            <FlatButton\n              key=\"open\"\n              label={<Trans>Open folder</Trans>}\n              primary={true}\n              onClick={this.openExportFolder}\n            />,\n            <FlatButton\n              key=\"close\"\n              label={<Trans>Close</Trans>}\n              primary={false}\n              onClick={() =>\n                this.setState({\n                  exportFinishedDialogOpen: false,\n                })\n              }\n            />,\n          ]}\n          modal\n          open={this.state.exportFinishedDialogOpen}\n        >\n          <p>\n            <Trans>\n              You can now upload the game to a web hosting to play to the game.\n            </Trans>\n          </p>\n          <AlertMessage kind=\"warning\">\n            <Trans>\n              Your game won't work if you open index.html on your computer. You\n              must upload it to a web hosting (Kongregate, Itch.io, etc...) or a\n              web server to run it.\n            </Trans>\n          </AlertMessage>\n          <Spacer />\n          <RaisedButton\n            fullWidth\n            primary\n            onClick={() =>\n              Window.openExternalURL(\n                getHelpLink('/publishing/publishing-to-gamejolt-store')\n              )\n            }\n            label={<Trans>Publish your game on Game Jolt</Trans>}\n          />\n          <RaisedButton\n            fullWidth\n            primary\n            onClick={() =>\n              Window.openExternalURL(\n                getHelpLink('/publishing/publishing-to-kongregate-store')\n              )\n            }\n            label={<Trans>Publish your game on Kongregate</Trans>}\n          />\n          <RaisedButton\n            fullWidth\n            primary\n            onClick={() =>\n              Window.openExternalURL(\n                getHelpLink('/publishing/publishing-to-itch-io')\n              )\n            }\n            label={<Trans>Publish your game on Itch.io</Trans>}\n          />\n          <FlatButton\n            fullWidth\n            onClick={() => Window.openExternalURL(getHelpLink('/publishing'))}\n            label={<Trans>Learn more about publishing</Trans>}\n          />\n        </Dialog>\n      </Column>\n    );\n  }\n}\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport { Column, Line } from '../UI/Grid';\nimport { type Limit, type Subscription } from '../Utils/GDevelopServices/Usage';\nimport PlaceholderLoader from '../UI/PlaceholderLoader';\n\ntype Props = {|\n  subscription: ?Subscription,\n  limit: ?Limit,\n  onChangeSubscription: Function,\n|};\n\nexport default ({ subscription, limit, onChangeSubscription }: Props) => {\n  if (!limit) return <PlaceholderLoader />;\n  const hasSubscription = subscription && !!subscription.planId;\n  const noSubscription = subscription && !subscription.planId;\n\n  return (\n    <Column noMargin>\n      <p>\n        <Trans>\n          You have {Math.max(limit.max - limit.current, 0)} remaining builds for\n          today (out of {limit.max}).\n        </Trans>\n      </p>\n      {hasSubscription && limit.limitReached && (\n        <p>\n          <Trans>\n            Need more power? You can upgrade to a new plan to increase the\n            limit!\n          </Trans>\n        </p>\n      )}\n      {hasSubscription && limit.limitReached && (\n        <Line justifyContent=\"center\" alignItems=\"center\">\n          <RaisedButton\n            label={<Trans>Upgrade my account</Trans>}\n            onClick={onChangeSubscription}\n            primary\n          />\n        </Line>\n      )}\n      {noSubscription && (\n        <p>\n          <Trans>\n            You don't have a subscription. Get one to increase the limits!\n          </Trans>\n        </p>\n      )}\n      {noSubscription && (\n        <Line justifyContent=\"center\" alignItems=\"center\">\n          <RaisedButton\n            label={<Trans>Get a subscription</Trans>}\n            onClick={onChangeSubscription}\n            primary\n          />\n        </Line>\n      )}\n    </Column>\n  );\n};\n","// @flow\nimport { Trans } from '@lingui/macro';\n\nimport * as React from 'react';\nimport { Step, Stepper, StepLabel, StepContent } from 'material-ui/Stepper';\nimport CircularProgress from 'material-ui/CircularProgress';\nimport LinearProgress from 'material-ui/LinearProgress';\nimport { Line, Spacer } from '../../UI/Grid';\nimport BuildProgress from './BuildProgress';\nimport { type Build } from '../../Utils/GDevelopServices/Build';\nimport EmptyMessage from '../../UI/EmptyMessage';\n\nconst styles = {\n  stepper: { flex: 1 },\n};\n\nexport type BuildStep =\n  | ''\n  | 'export'\n  | 'compress'\n  | 'upload'\n  | 'waiting-for-build'\n  | 'build';\n\ntype Props = {|\n  exportStep: BuildStep,\n  onDownload: (key: string) => void,\n  build: ?Build,\n  uploadMax: number,\n  uploadProgress: number,\n  errored: boolean,\n  showSeeAllMyBuildsExplanation?: boolean,\n|};\n\n/**\n * Can be used in an exporter to show the overall progress of a build\n * (including local archiving/upload steps and remote build progress)\n */\nexport default ({\n  exportStep,\n  onDownload,\n  build,\n  uploadMax,\n  uploadProgress,\n  errored,\n  showSeeAllMyBuildsExplanation,\n}: Props) => (\n  <Stepper\n    activeStep={\n      exportStep === 'export'\n        ? 0\n        : exportStep === 'compress' || exportStep === 'upload'\n        ? 1\n        : exportStep === 'waiting-for-build' || exportStep === 'build'\n        ? 2\n        : undefined\n    }\n    orientation=\"vertical\"\n    style={styles.stepper}\n  >\n    <Step>\n      <StepLabel>Game export</StepLabel>\n      <StepContent>\n        <Line alignItems=\"center\">\n          <CircularProgress size={20} />\n          <Spacer />\n          <p>\n            <Trans>Export in progress...</Trans>\n          </p>\n        </Line>\n      </StepContent>\n    </Step>\n    <Step>\n      <StepLabel>Upload to build service</StepLabel>\n      <StepContent>\n        {errored ? (\n          <p>\n            <Trans>\n              Can't upload your game to the build service. Please check your\n              internet connection or try again later.\n            </Trans>\n          </p>\n        ) : exportStep === 'compress' ? (\n          <Line alignItems=\"center\">\n            <CircularProgress size={20} />\n            <Spacer />\n            <p>\n              <Trans>Compressing before upload...</Trans>\n            </p>\n          </Line>\n        ) : (\n          <Line alignItems=\"center\" expand>\n            <LinearProgress\n              style={{ flex: 1 }}\n              max={uploadMax}\n              value={uploadProgress}\n              mode=\"determinate\"\n            />\n          </Line>\n        )}\n      </StepContent>\n    </Step>\n    <Step>\n      <StepLabel>Build and download</StepLabel>\n      <StepContent>\n        {!build && (\n          <p>\n            <Trans>Build is starting...</Trans>\n          </p>\n        )}\n        {build && <BuildProgress build={build} onDownload={onDownload} />}\n        {showSeeAllMyBuildsExplanation && (\n          <EmptyMessage>\n            <Trans>\n              If you close this window while the build is being done, you can\n              see its progress and download the game later by clicking on See\n              All My Builds below.\n            </Trans>\n          </EmptyMessage>\n        )}\n      </StepContent>\n    </Step>\n  </Stepper>\n);\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Stepper = exports.StepLabel = exports.StepContent = exports.StepButton = exports.Step = undefined;\n\nvar _Step2 = require('./Step');\n\nvar _Step3 = _interopRequireDefault(_Step2);\n\nvar _StepButton2 = require('./StepButton');\n\nvar _StepButton3 = _interopRequireDefault(_StepButton2);\n\nvar _StepContent2 = require('./StepContent');\n\nvar _StepContent3 = _interopRequireDefault(_StepContent2);\n\nvar _StepLabel2 = require('./StepLabel');\n\nvar _StepLabel3 = _interopRequireDefault(_StepLabel2);\n\nvar _Stepper2 = require('./Stepper');\n\nvar _Stepper3 = _interopRequireDefault(_Stepper2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.Step = _Step3.default;\nexports.StepButton = _StepButton3.default;\nexports.StepContent = _StepContent3.default;\nexports.StepLabel = _StepLabel3.default;\nexports.Stepper = _Stepper3.default;"],"sourceRoot":""}